// File: /data/jenkins/jenkins_hk4e/workspace/hk4e_3.4_dev/hk4e_data/src/lua_config_mgr.cpp

// Line 51: range 000000000F7EE2AB-000000000F7EE72B
unsigned int __cdecl getNumFromLuaStrOrNum<unsigned int>(const luabind::adl::object *lua_obj, const std::string *key)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  unsigned int v5; // r14d
  common::milog::MiLogStream *v6; // rdx
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  unsigned int result; // eax
  char v10[272]; // [rsp+10h] [rbp-110h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(224LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 48 4 6 num:53 64 16 10 num_obj:54 96 32 10 num_str:62 160 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = getNumFromLuaStrOrNum<unsigned int>;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -219021312;
  v4[536862724] = -218959118;
  v4[536862726] = -202116109;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, key);
  *(_DWORD *)(v2 + 48) = 0;
  luabind::adl::object::object((luabind::adl::object *const)(v2 + 64));
  if ( ScriptUtil::getTableValue(&ScriptUtil::no_exception_instance, lua_obj, key, (luabind::adl::object *)(v2 + 64)) )
  {
    if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_load4(v2 + 48);
    v5 = *(_DWORD *)(v2 + 48);
  }
  else
  {
    if ( luabind::type<luabind::adl::object>((const luabind::adl::object *)(v2 + 64)) == 4 )
    {
      std::string::basic_string(v2 + 96);
      ScriptUtil::getTableValue<std::string>(&ScriptUtil::no_exception_instance, lua_obj, key, (std::string *)(v2 + 96));
      if ( common::tools::StringUtils::strToNum<unsigned int>(
             (const std::string *)(v2 + 96),
             (unsigned int *)(v2 + 48),
             0) )
      {
        if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 160, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 160),
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/lua_config_mgr.cpp",
          "getNumFromLuaStrOrNum",
          66);
        v6 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
               (common::milog::MiLogStream *const)(v2 + 160),
               (const char (*)[22])"strToNum failed, key:");
        v7 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, key);
        v8 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v7, (const char (*)[7])", str:");
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, (const std::string *)(v2 + 96));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
        *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
      }
      std::string::~string((void *)(v2 + 96));
      *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
    }
    else
    {
      ScriptUtil::getTableValue<unsigned int>(
        &ScriptUtil::no_exception_instance,
        lua_obj,
        key,
        (unsigned int *)(v2 + 48));
    }
    if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_load4(v2 + 48);
    v5 = *(_DWORD *)(v2 + 48);
  }
  luabind::adl::object::~object((luabind::adl::object *const)(v2 + 64));
  result = v5;
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 79: range 000000000F2CAD3A-000000000F2CB218
void __cdecl LuaConfigMgr::LuaConfigMgr(LuaConfigMgr *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r12
  char v4[112]; // [rsp+10h] [rbp-70h] BYREF

  v1 = (unsigned __int64)v4;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 1 9 <unknown>";
  *(_QWORD *)(v1 + 16) = LuaConfigMgr::LuaConfigMgr;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202116351;
  std::allocator<char>::allocator(v1 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)&this->lua_parser_file,
    "lua_parser.lua",
    (const std::allocator<char> *)(v1 + 32));
  std::allocator<char>::~allocator(v1 + 32);
  *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
  std::set<unsigned int>::set(&this->all_block_set);
  std::unordered_map<unsigned int,std::set<unsigned int>>::unordered_map(&this->gadget_id_to_groups_map);
  std::unordered_map<std::string,LuaCommonContent>::unordered_map(&this->common_script_map);
  std::unordered_map<unsigned int,SceneScriptConfig>::unordered_map(&this->scene_script_config_map);
  std::unordered_map<unsigned int,LuaContent>::unordered_map(&this->gadget_script_map);
  std::unordered_map<unsigned int,LuaContent>::unordered_map(&this->monster_script_map);
  std::unordered_map<unsigned int,ParentQuestScriptConfig>::unordered_map(&this->parent_quest_script_config_map);
  std::unordered_map<unsigned int,ParentQuestScriptConfig>::unordered_map(&this->parent_quest_script_config_extra_map);
  std::unordered_map<unsigned int,unsigned int>::unordered_map(&this->group_id_to_scene_id_map);
  std::unordered_map<unsigned int,unsigned int>::unordered_map(&this->block_id_to_scene_id_map);
  std::unordered_map<unsigned int,PatternGroupScriptConfig>::unordered_map(&this->pattern_group_config_map);
  std::unordered_map<unsigned int,std::string>::unordered_map(&this->random_quest_script_template_str_map);
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::unordered_map(&this->group_replace_set_map);
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::unordered_map(&this->group_replaced_by_set_map);
  std::unordered_set<unsigned int>::unordered_set(&this->join_replace_group_set);
  std::unordered_map<unsigned int,unsigned int>::unordered_map(&this->force_silent_update_group_map);
  std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::unordered_map(&this->world_scene_group_temples_map);
  std::unordered_map<unsigned int,float>::unordered_map(&this->group_id_2_ver_map);
  std::unordered_map<unsigned int,std::string>::unordered_map(&this->group_version_map);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::unordered_map<unsigned int,std::vector<unsigned int>>>>>::unordered_map(&this->detail_type_dynamic_group_map);
  std::set<std::string>::set(&this->logic_state_sgv_name_set_);
  std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::unordered_map(&this->register_event_type_group_id_set_map);
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::unordered_map(&this->gadget_chain_event_chain_to_groupset_map);
  if ( *(char *)(((unsigned __int64)&this->is_do_partial_lua_static_check >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_do_partial_lua_static_check, "lua_parser.lua", &this->is_do_partial_lua_static_check);
  this->is_do_partial_lua_static_check = 0;
  std::set<unsigned int>::set(&this->partial_group_id_set);
  luabind::set_pcall_callback((luabind::pcall_callback_fun)ScriptUtil::luabindErrorHandler);
  if ( v4 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 85: range 000000000F2CB21A-000000000F2CB769
LuaStatePtr __cdecl LuaConfigMgr::createLuaState()
{
  std::shared_ptr<lua_State> *v0; // rdi
  lua_State *v1; // rsi
  common::milog::MiLogStream *v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  LuaStatePtr result; // rax
  common::milog::MiLogStream *v7; // rax
  unsigned __int64 v8; // rax
  unsigned int (__fastcall **v9)(unsigned __int64, lua_State_0 *); // rdx
  common::milog::MiLogStream *v10; // rax
  lua_State_0 *lua_state_ptr; // [rsp+18h] [rbp-108h]
  char v12[256]; // [rsp+20h] [rbp-100h] BYREF

  v2 = (common::milog::MiLogStream *)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(224LL);
    if ( v3 )
      v2 = (common::milog::MiLogStream *)v3;
  }
  v2->log_ = (common::milog::MiLog *)1102416563;
  v2->ostr_ptr_._M_ptr = (std::__shared_ptr<common::tools::StringStream<common::tools::FixedBuffer<16384> >,(__gnu_cxx::_Lock_policy)2>::element_type *)"3 32 32 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown>";
  v2->ostr_ptr_._M_refcount._M_pi = (std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2> *)LuaConfigMgr::createLuaState;
  v4 = (_DWORD *)((unsigned __int64)v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862722] = -218959118;
  v4[536862724] = -218959118;
  v4[536862726] = -202116109;
  lua_state_ptr = luaL_newstate();
  if ( lua_state_ptr )
  {
    luaL_openlibs(lua_state_ptr);
    luabind::open(lua_state_ptr, v1);
    if ( std::operator==<ScriptLibBase>(&LuaConfigMgr::script_lib_ptr, 0LL) )
    {
      if ( *(char *)(((unsigned __int64)&v2[3] >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)((((unsigned __int64)&v2[3].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
        && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[3].ostr_ + 7) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(&v2[3], 32LL);
      }
      common::milog::MiLogStream::create(
        v2 + 3,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "createLuaState",
        97);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             v2 + 3,
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v7, (const char (*)[23])"script_lib_ptr is null");
      common::milog::MiLogStream::~MiLogStream(v2 + 3);
      *(_DWORD *)(((unsigned __int64)&v2[3] >> 3) + 0x7FFF8000) = -117901064;
      std::shared_ptr<lua_State>::shared_ptr(v0, 0LL);
    }
    else
    {
      v8 = (unsigned __int64)std::__shared_ptr_access<ScriptLibBase,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ScriptLibBase,(__gnu_cxx::_Lock_policy)2,false,false> *const)&LuaConfigMgr::script_lib_ptr);
      if ( *(_BYTE *)((v8 >> 3) + 0x7FFF8000) )
        v8 = __asan_report_load8(v8);
      v9 = *(unsigned int (__fastcall ***)(unsigned __int64, lua_State_0 *))v8;
      if ( *(_BYTE *)((*(_QWORD *)v8 >> 3) + 0x7FFF8000LL) )
        v8 = __asan_report_load8(*(_QWORD *)v8);
      if ( (*v9)(v8, lua_state_ptr) )
      {
        if ( *(char *)(((unsigned __int64)&v2[5] >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)((((unsigned __int64)&v2[5].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[5].ostr_ + 7) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(&v2[5], 32LL);
        }
        common::milog::MiLogStream::create(
          v2 + 5,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "createLuaState",
          103);
        v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                v2 + 5,
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
          v10,
          (const char (*)[34])"script_lib_ptr registerLib failed");
        common::milog::MiLogStream::~MiLogStream(v2 + 5);
        *(_DWORD *)(((unsigned __int64)&v2[5] >> 3) + 0x7FFF8000) = -117901064;
        std::shared_ptr<lua_State>::shared_ptr(v0, 0LL);
      }
      else
      {
        std::shared_ptr<lua_State>::shared_ptr<lua_State,void (*)(lua_State*),void>(
          v0,
          lua_state_ptr,
          (void (*)(lua_State *))LuaConfigMgr::destroyLuaState);
      }
    }
  }
  else
  {
    if ( *(char *)(((unsigned __int64)&v2[1] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[1].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[1].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[1], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 1,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "createLuaState",
      89);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 1, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(v5, (const char (*)[21])"luaL_newstate failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 1);
    *(_DWORD *)(((unsigned __int64)&v2[1] >> 3) + 0x7FFF8000) = -117901064;
    std::shared_ptr<lua_State>::shared_ptr(v0, 0LL);
  }
  if ( v12 == (char *)v2 )
  {
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    v2->log_ = (common::milog::MiLog *)1172321806;
    result._M_refcount._M_pi = (std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2> *)0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8018) = -168430091;
  }
  result._M_ptr = (std::__shared_ptr<lua_State,(__gnu_cxx::_Lock_policy)2>::element_type *)v0;
  return result;
};

// Line 110: range 000000000F2CB76A-000000000F2CB92E
void __cdecl LuaConfigMgr::destroyLuaState(lua_State_0 *lua_state_ptr)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r12
  char v4[128]; // [rsp+10h] [rbp-80h] BYREF

  v1 = (unsigned __int64)v4;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_1(96LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 32 9 <unknown>";
  *(_QWORD *)(v1 + 16) = LuaConfigMgr::destroyLuaState;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450888) = -202116109;
  lua_gc(lua_state_ptr, 2, 0);
  lua_close(lua_state_ptr);
  if ( *(char *)(((v1 + 32) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v1 + 63) >> 3) + 0x7FFF8000) != 0
    && (char)((v1 + 63) & 7) >= *(_BYTE *)(((v1 + 63) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v1 + 32, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v1 + 32),
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/lua_config_mgr.cpp",
    "destroyLuaState",
    113);
  common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(
    (common::milog::MiLogStream *const)(v1 + 32),
    (const char (*)[18])"lua state destory");
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 32));
  if ( v4 == (char *)v1 )
  {
    *(_DWORD *)((v1 >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 119: range 000000000F2CB930-000000000F2CB943
HK4EDesignConfig *__cdecl LuaConfigMgr::getConfig(LuaConfigMgr *const this)
{
  return (HK4EDesignConfig *)&this[-73].gadget_chain_event_chain_to_groupset_map;
};

// Line 124: range 000000000F2CB944-000000000F2CB957
const HK4EDesignConfig *__cdecl LuaConfigMgr::getConfig(const LuaConfigMgr *const this)
{
  return (const HK4EDesignConfig *)&this[-73].gadget_chain_event_chain_to_groupset_map;
};

// Line 130: range 000000000F2CB958-000000000F2CBB62
int32_t __cdecl LuaConfigMgr::init(LuaConfigMgr *const this, ScriptLibBasePtr *p_script_lib_ptr)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t result; // eax
  char v7[128]; // [rsp+10h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v7;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::init;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450888) = -202116109;
  if ( std::operator==<ScriptLibBase>(p_script_lib_ptr, 0LL) )
  {
    if ( *(char *)(((v2 + 32) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 63) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 63) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 32, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 32),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "init",
      133);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 32),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v5, (const char (*)[26])"script_lib_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 32));
    result = -1;
  }
  else
  {
    if ( std::operator==<ScriptLibBase>(&LuaConfigMgr::script_lib_ptr, 0LL) )
      std::shared_ptr<ScriptLibBase>::operator=(&LuaConfigMgr::script_lib_ptr, p_script_lib_ptr);
    result = 0;
  }
  if ( v7 == (char *)v2 )
  {
    *(_DWORD *)((v2 >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 147: range 000000000F2CBB64-000000000F2CBBD9
void __cdecl LuaConfigMgr::clear(LuaConfigMgr *const this)
{
  LuaScriptMgr *LuaScriptMgr; // rax

  std::unordered_map<unsigned int,SceneScriptConfig>::clear(&this->scene_script_config_map);
  std::unordered_map<unsigned int,LuaContent>::clear(&this->gadget_script_map);
  std::unordered_map<unsigned int,LuaContent>::clear(&this->monster_script_map);
  std::unordered_map<unsigned int,ParentQuestScriptConfig>::clear(&this->parent_quest_script_config_map);
  std::unordered_map<unsigned int,ParentQuestScriptConfig>::clear(&this->parent_quest_script_config_extra_map);
  LuaScriptMgr = LuaScriptMgr::getLuaScriptMgr();
  LuaScriptMgr::clear(LuaScriptMgr);
};

// Line 158: range 000000000F2CBBDA-000000000F2CD1C9
int32_t __cdecl LuaConfigMgr::loadAllScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rax
  int v7; // eax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  char *v28; // rsi
  char *v29; // rsi
  const unsigned int *v30; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>,bool> v31; // rax
  common::milog::MiLogStream *v32; // rax
  common::milog::MiLogStream *v33; // rdx
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rdx
  const unsigned int *v36; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>,bool> v37; // rax
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // rdx
  common::milog::MiLogStream *v40; // rax
  common::milog::MiLogStream *v41; // rdx
  int32_t v42; // ebx
  uint32_t ret; // [rsp+1Ch] [rbp-4A4h]
  std::unordered_map<unsigned int,SceneScriptConfig> *__for_range; // [rsp+20h] [rbp-4A0h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::reference __in; // [rsp+28h] [rbp-498h]
  const unsigned int *scene_id; // [rsp+30h] [rbp-490h]
  std::tuple_element<1,std::pair<unsigned int const,SceneScriptConfig> >::type *scene_script_config; // [rsp+38h] [rbp-488h]
  std::unordered_map<unsigned int,GroupScriptConfig> *__for_range_0; // [rsp+40h] [rbp-480h]
  std::unordered_map<unsigned int,BlockScriptConfig> *__for_range_1; // [rsp+48h] [rbp-478h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,BlockScriptConfig>,false,false>::reference v51; // [rsp+50h] [rbp-470h]
  const unsigned int *block_id; // [rsp+58h] [rbp-468h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::reference v53; // [rsp+68h] [rbp-458h]
  const unsigned int *group_id; // [rsp+70h] [rbp-450h]
  char v55[1088]; // [rsp+80h] [rbp-440h] BYREF

  v2 = (unsigned __int64)v55;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1056LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "19 32 8 15 __for_begin:172 64 8 13 __for_end:172 96 8 15 __for_begin:174 128 8 13 __for_end:174 "
                        "160 8 15 __for_begin:183 192 8 13 __for_end:183 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <"
                        "unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 <unknown> 672 32 9 <u"
                        "nknown> 736 32 9 <unknown> 800 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <unknown> 992 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::loadAllScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862725] = -218959360;
  v4[536862726] = -218959360;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -202116109;
  if ( LuaConfigMgr::loadAllCommonScript(this, config) )
  {
    if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 224, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 224),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      159);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 224),
           (const char (*)[16])"[CONFIG_ERROR] ");
    v6 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(v5, (const char (*)[20])"loadAllCommonScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v6, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadAllSceneScript(this, config) )
  {
    if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 288, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 288),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      160);
    v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 288),
           (const char (*)[16])"[CONFIG_ERROR] ");
    v9 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v8, (const char (*)[19])"loadAllSceneScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v9, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadAllDummyPointsScript(this, config) )
  {
    if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 352, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 352),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      161);
    v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 352),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v11 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
            v10,
            (const char (*)[25])"loadAllDummyPointsScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v11, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadAllActivityScript(this, config) )
  {
    if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 416, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 416),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      162);
    v12 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 416),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v13 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
            v12,
            (const char (*)[22])"loadAllActivityScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v13, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadAllGadgetScript(this, config) )
  {
    if ( *(char *)(((v2 + 480) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 480, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 480),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      163);
    v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 480),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v15 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
            v14,
            (const char (*)[20])"loadAllGadgetScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v15, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 480));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadAllMonsterScript(this, config) )
  {
    if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 544, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 544),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      164);
    v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 544),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v17 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
            v16,
            (const char (*)[21])"loadAllMonsterScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v17, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadAllQuestScript(this, config) )
  {
    if ( *(char *)(((v2 + 608) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 608, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 608),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      165);
    v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 608),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v19 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v18, (const char (*)[19])"loadAllQuestScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v19, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 608));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadAllRandomQuestScript(this, config) )
  {
    if ( *(char *)(((v2 + 672) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 672, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 672),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      166);
    v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 672),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v21 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
            v20,
            (const char (*)[25])"loadAllRandomQuestScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v21, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 672));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadAllPatternGroupScriptConfig(this, config) )
  {
    if ( *(char *)(((v2 + 736) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 736, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 736),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      167);
    v22 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 736),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v23 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
            v22,
            (const char (*)[32])"loadAllPatternGroupScriptConfig");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v23, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 736));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadGroupsReplacementScript(this, config) )
  {
    if ( *(char *)(((v2 + 800) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 800, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 800),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      168);
    v24 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 800),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v25 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
            v24,
            (const char (*)[28])"loadGroupsReplacementScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v25, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 800));
    v7 = -1;
  }
  else if ( LuaConfigMgr::loadGroupVersionInfoConfig(this, config) )
  {
    if ( *(char *)(((v2 + 864) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 864, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 864),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllScript",
      169);
    v26 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 864),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v27 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
            v26,
            (const char (*)[27])"loadGroupVersionInfoConfig");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v27, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 864));
    v7 = -1;
  }
  else
  {
    ret = 0;
    __for_range = &this->scene_script_config_map;
    if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 32, config);
    *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v2 + 32) = std::unordered_map<unsigned int,SceneScriptConfig>::begin(__for_range);
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 64, config);
    *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,SceneScriptConfig>::end(__for_range);
    while ( 1 )
    {
      v28 = (char *)(v2 + 64);
      if ( !std::__detail::operator!=<std::pair<unsigned int const,SceneScriptConfig>,false>(
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 32),
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 64)) )
        break;
      __in = std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 32));
      scene_id = std::get<0ul,unsigned int const,SceneScriptConfig>(__in);
      scene_script_config = std::get<1ul,unsigned int const,SceneScriptConfig>(__in);
      __for_range_0 = &scene_script_config->group_config_map;
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 96, v28);
      *(std::unordered_map<unsigned int,GroupScriptConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,GroupScriptConfig>::begin(__for_range_0);
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 128, v28);
      *(std::unordered_map<unsigned int,GroupScriptConfig>::iterator *)(v2 + 128) = std::unordered_map<unsigned int,GroupScriptConfig>::end(__for_range_0);
      while ( 1 )
      {
        v29 = (char *)(v2 + 128);
        if ( !std::__detail::operator!=<std::pair<unsigned int const,GroupScriptConfig>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v2 + 96),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v2 + 128)) )
          break;
        v53 = std::__detail::_Node_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v2 + 96));
        group_id = std::get<0ul,unsigned int const,GroupScriptConfig>(v53);
        std::get<1ul,unsigned int const,GroupScriptConfig>(v53);
        v31 = std::unordered_map<unsigned int,unsigned int>::emplace<unsigned int const&,unsigned int const&>(
                &this->group_id_to_scene_id_map,
                group_id,
                scene_id,
                (const unsigned int *)&this->group_id_to_scene_id_map,
                v30);
        if ( !v31.second )
        {
          *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 928) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 928, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 928),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadAllScript",
            178);
          v32 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 928),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v33 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v32, (const char (*)[26])byte_1A532B80);
          v34 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v33, group_id);
          v35 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v34, (const char (*)[12])", scene_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v35, scene_id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 928));
          *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
          ret = -1;
        }
        std::__detail::_Node_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v2 + 96));
      }
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      __for_range_1 = &scene_script_config->block_config_map;
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 160, v29);
      *(std::unordered_map<unsigned int,BlockScriptConfig>::iterator *)(v2 + 160) = std::unordered_map<unsigned int,BlockScriptConfig>::begin(__for_range_1);
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 192, v29);
      *(std::unordered_map<unsigned int,BlockScriptConfig>::iterator *)(v2 + 192) = std::unordered_map<unsigned int,BlockScriptConfig>::end(__for_range_1);
      while ( std::__detail::operator!=<std::pair<unsigned int const,BlockScriptConfig>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,BlockScriptConfig>,false> *)(v2 + 160),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,BlockScriptConfig>,false> *)(v2 + 192)) )
      {
        v51 = std::__detail::_Node_iterator<std::pair<unsigned int const,BlockScriptConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,BlockScriptConfig>,false,false> *const)(v2 + 160));
        block_id = std::get<0ul,unsigned int const,BlockScriptConfig>(v51);
        std::get<1ul,unsigned int const,BlockScriptConfig>(v51);
        v37 = std::unordered_map<unsigned int,unsigned int>::emplace<unsigned int const&,unsigned int const&>(
                &this->block_id_to_scene_id_map,
                block_id,
                scene_id,
                (const unsigned int *)&this->block_id_to_scene_id_map,
                v36);
        if ( !v37.second )
        {
          *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 992) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 992, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 992),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadAllScript",
            187);
          v38 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 992),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v39 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v38, (const char (*)[26])byte_1A532BC0);
          v40 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v39, block_id);
          v41 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v40, (const char (*)[12])", scene_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v41, scene_id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 992));
          *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = -117901064;
          ret = -1;
        }
        std::__detail::_Node_iterator<std::pair<unsigned int const,BlockScriptConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,BlockScriptConfig>,false,false> *const)(v2 + 160));
      }
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
      std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 32));
    }
    v7 = ret;
  }
  v42 = v7;
  if ( v55 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8050) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8058) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8060) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8068) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8070) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8078) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8080) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1056LL, v55);
  }
  return v42;
};

// Line 197: range 000000000F2CD1CA-000000000F2CD6A8
int32_t __cdecl LuaConfigMgr::rewriteConfig(LuaConfigMgr *const this)
{
  common::milog::MiLogStream *v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  common::milog::MiLogStream *v4; // rax
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  int32_t result; // eax
  int32_t ret; // [rsp+1Ch] [rbp-104h]
  char v12[256]; // [rsp+20h] [rbp-100h] BYREF

  v1 = (common::milog::MiLogStream *)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_2(224LL);
    if ( v2 )
      v1 = (common::milog::MiLogStream *)v2;
  }
  v1->log_ = (common::milog::MiLog *)1102416563;
  v1->ostr_ptr_._M_ptr = (std::__shared_ptr<common::tools::StringStream<common::tools::FixedBuffer<16384> >,(__gnu_cxx::_Lock_policy)2>::element_type *)"3 32 32 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown>";
  v1->ostr_ptr_._M_refcount._M_pi = (std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2> *)LuaConfigMgr::rewriteConfig;
  v3 = (_DWORD *)((unsigned __int64)v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862722] = -218959118;
  v3[536862724] = -218959118;
  v3[536862726] = -202116109;
  ret = 0;
  if ( LuaConfigMgr::rewriteSceneScript(this) )
  {
    if ( *(char *)(((unsigned __int64)&v1[1] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[1].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[1].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[1], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 1,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "rewriteConfig",
      199);
    v4 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v1 + 1, (const char (*)[16])"[CONFIG_ERROR] ");
    v5 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v4, (const char (*)[19])"rewriteSceneScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v5, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 1);
    *(_DWORD *)(((unsigned __int64)&v1[1] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::rewriteQuestScript(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[3] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[3] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[3].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[3].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[3], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 3,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "rewriteConfig",
      200);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v1 + 3, (const char (*)[16])"[CONFIG_ERROR] ");
    v7 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v6, (const char (*)[19])"rewriteQuestScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v7, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 3);
    *(_DWORD *)(((unsigned __int64)&v1[3] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::rewriteWorldSceneGroupTemplesMap(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[5] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[5] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[5].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[5].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[5], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 5,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "rewriteConfig",
      201);
    v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v1 + 5, (const char (*)[16])"[CONFIG_ERROR] ");
    v9 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
           v8,
           (const char (*)[33])"rewriteWorldSceneGroupTemplesMap");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v9, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 5);
    ret = -1;
  }
  result = ret;
  if ( v12 == (char *)v1 )
  {
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8010) = 0;
    *(_DWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    v1->log_ = (common::milog::MiLog *)1172321806;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 207: range 000000000F2CD6AA-000000000F2CE425
int32_t __cdecl LuaConfigMgr::checkConfig(LuaConfigMgr *const this)
{
  common::milog::MiLogStream *v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  common::milog::MiLogStream *v4; // rax
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rax
  int32_t result; // eax
  int32_t ret; // [rsp+1Ch] [rbp-284h]
  char v24[640]; // [rsp+20h] [rbp-280h] BYREF

  v1 = (common::milog::MiLogStream *)v24;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_4(608LL);
    if ( v2 )
      v1 = (common::milog::MiLogStream *)v2;
  }
  v1->log_ = (common::milog::MiLog *)1102416563;
  v1->ostr_ptr_._M_ptr = (std::__shared_ptr<common::tools::StringStream<common::tools::FixedBuffer<16384> >,(__gnu_cxx::_Lock_policy)2>::element_type *)"9 32 32 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown>";
  v1->ostr_ptr_._M_refcount._M_pi = (std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2> *)LuaConfigMgr::checkConfig;
  v3 = (_DWORD *)((unsigned __int64)v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862722] = -218959118;
  v3[536862724] = -218959118;
  v3[536862726] = -218959118;
  v3[536862728] = -218959118;
  v3[536862730] = -218959118;
  v3[536862732] = -218959118;
  v3[536862734] = -218959118;
  v3[536862736] = -218959118;
  v3[536862738] = -202116109;
  ret = 0;
  if ( LuaConfigMgr::checkSceneScript(this) )
  {
    if ( *(char *)(((unsigned __int64)&v1[1] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[1].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 + 63) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[1].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[1], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 1,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkConfig",
      209);
    v4 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v1 + 1, (const char (*)[16])"[CONFIG_ERROR] ");
    v5 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(v4, (const char (*)[17])"checkSceneScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v5, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 1);
    *(_DWORD *)(((unsigned __int64)&v1[1] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::checkGadgetScript(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[3] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[3] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[3].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[3].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[3], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 3,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkConfig",
      210);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v1 + 3, (const char (*)[16])"[CONFIG_ERROR] ");
    v7 = common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(v6, (const char (*)[18])"checkGadgetScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v7, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 3);
    *(_DWORD *)(((unsigned __int64)&v1[3] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::checkMonsterScript(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[5] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[5] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[5].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 - 65) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[5].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[5], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 5,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkConfig",
      211);
    v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v1 + 5, (const char (*)[16])"[CONFIG_ERROR] ");
    v9 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v8, (const char (*)[19])"checkMonsterScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v9, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 5);
    *(_DWORD *)(((unsigned __int64)&v1[5] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::checkQuestScript(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[7] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[7] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[7].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 - 1) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[7].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[7], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 7,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkConfig",
      212);
    v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v1 + 7, (const char (*)[16])"[CONFIG_ERROR] ");
    v11 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(v10, (const char (*)[17])"checkQuestScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v11, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 7);
    *(_DWORD *)(((unsigned __int64)&v1[7] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::checkGroupsReplacementScript(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[9] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[9] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[9].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 + 63) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[9].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[9], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 9,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkConfig",
      213);
    v12 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v1 + 9, (const char (*)[16])"[CONFIG_ERROR] ");
    v13 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
            v12,
            (const char (*)[29])"checkGroupsReplacementScript");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v13, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 9);
    *(_DWORD *)(((unsigned __int64)&v1[9] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::checkAllPatternGroupScriptConfig(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[11] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[11] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[11].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[11].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[11], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 11,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkConfig",
      214);
    v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v1 + 11,
            (const char (*)[16])"[CONFIG_ERROR] ");
    v15 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
            v14,
            (const char (*)[33])"checkAllPatternGroupScriptConfig");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v15, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 11);
    *(_DWORD *)(((unsigned __int64)&v1[11] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::checkGroupScriptConfig(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[13] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[13] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[13].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 - 65) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[13].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[13], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 13,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkConfig",
      215);
    v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v1 + 13,
            (const char (*)[16])"[CONFIG_ERROR] ");
    v17 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
            v16,
            (const char (*)[23])"checkGroupScriptConfig");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v17, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 13);
    *(_DWORD *)(((unsigned __int64)&v1[13] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::checkRegisterEventTypeGroup(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[15] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[15] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[15].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 - 1) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[15].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[15], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 15,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkConfig",
      216);
    v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v1 + 15,
            (const char (*)[16])"[CONFIG_ERROR] ");
    v19 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
            v18,
            (const char (*)[28])"checkRegisterEventTypeGroup");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v19, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 15);
    *(_DWORD *)(((unsigned __int64)&v1[15] >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
  }
  if ( LuaConfigMgr::checkEventConditionGroup(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v1[17] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v1[17] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v1[17].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v1 + 63) & 7) >= *(_BYTE *)((((unsigned __int64)&v1[17].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v1[17], 32LL);
    }
    common::milog::MiLogStream::create(
      v1 + 17,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkConfig",
      217);
    v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v1 + 17,
            (const char (*)[16])"[CONFIG_ERROR] ");
    v21 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
            v20,
            (const char (*)[25])"checkEventConditionGroup");
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v21, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(v1 + 17);
    ret = -1;
  }
  result = ret;
  if ( v24 == (char *)v1 )
  {
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8040) = 0;
    *(_DWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8048) = 0;
  }
  else
  {
    v1->log_ = (common::milog::MiLog *)1172321806;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8048) = -168430091;
  }
  return result;
};

// Line 223: range 000000000F2CE426-000000000F2CE8E9
int32_t __cdecl LuaConfigMgr::finalConfig(LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  common::milog::MiLogStream *v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 Config; // rax
  char v6; // dl
  _BOOL8 v7; // rdx
  common::milog::MiLogStream *v8; // rax
  int32_t result; // eax
  char v10[256]; // [rsp+10h] [rbp-100h] BYREF

  v2 = (common::milog::MiLogStream *)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(224LL);
    if ( v3 )
      v2 = (common::milog::MiLogStream *)v3;
  }
  v2->log_ = (common::milog::MiLog *)1102416563;
  v2->ostr_ptr_._M_ptr = (std::__shared_ptr<common::tools::StringStream<common::tools::FixedBuffer<16384> >,(__gnu_cxx::_Lock_policy)2>::element_type *)"3 32 32 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown>";
  v2->ostr_ptr_._M_refcount._M_pi = (std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2> *)LuaConfigMgr::finalConfig;
  v4 = (_DWORD *)((unsigned __int64)v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862722] = -218959118;
  v4[536862724] = -218959118;
  v4[536862726] = -202116109;
  Config = (__int64)LuaConfigMgr::getConfig(this);
  v6 = *(_BYTE *)(((unsigned __int64)(Config + 99968) >> 3) + 0x7FFF8000);
  LOBYTE(v1) = v6 != 0;
  v7 = v6 < 0;
  if ( v7 )
    Config = __asan_report_load1(Config + 99968, v1, v7);
  if ( !*(_BYTE *)(Config + 99968) )
    goto LABEL_19;
  if ( LuaConfigMgr::loadAllGroupInfoLuaStaticJsonConfig(this) )
  {
    if ( *(char *)(((unsigned __int64)&v2[1] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[1].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[1].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[1], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 1,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "finalConfig",
      229);
    common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
      v2 + 1,
      (const char (*)[44])"loadAllGroupInfoLuaStaticJsonConfig failed!");
    common::milog::MiLogStream::~MiLogStream(v2 + 1);
    *(_DWORD *)(((unsigned __int64)&v2[1] >> 3) + 0x7FFF8000) = -117901064;
  }
  if ( LuaConfigMgr::loadGroupsToCheckConfig(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v2[3] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v2[3] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[3].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[3].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[3], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 3,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "finalConfig",
      234);
    common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
      v2 + 3,
      (const char (*)[30])"loadGroupToCheckConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 3);
    *(_DWORD *)(((unsigned __int64)&v2[3] >> 3) + 0x7FFF8000) = -117901064;
  }
  if ( LuaConfigMgr::doLuaStaticCheck(this) )
  {
    *(_DWORD *)(((unsigned __int64)&v2[5] >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((unsigned __int64)&v2[5] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[5].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[5].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[5], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 5,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "finalConfig",
      238);
    v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 5, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
      v8,
      (const char (*)[27])" LUA STATIC CHECK  failend");
    common::milog::MiLogStream::~MiLogStream(v2 + 5);
    result = -1;
  }
  else
  {
LABEL_19:
    result = 0;
  }
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8010) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    v2->log_ = (common::milog::MiLog *)1172321806;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 250: range 000000000F2CE8EA-000000000F2CEAAB
const SceneScriptConfig *__fastcall LuaConfigMgr::findSceneScriptConfig(
        const LuaConfigMgr *const this,
        __int64 scene_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,SceneScriptConfig> *p_scene_script_config_map; // rdx
  std::unordered_map<unsigned int,SceneScriptConfig> *v6; // rdx
  bool v7; // al
  const SceneScriptConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 12 scene_id:249 64 8 6 it:251 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::findSceneScriptConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = scene_id;
  p_scene_script_config_map = &this->scene_script_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, scene_id);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,SceneScriptConfig>::find(
                                                                                       p_scene_script_config_map,
                                                                                       (const std::unordered_map<unsigned int,SceneScriptConfig>::key_type *)(v2 + 48));
  v6 = &this->scene_script_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,SceneScriptConfig>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,SceneScriptConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 64))->second;
  else
    result = 0LL;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 261: range 000000000F2CEAAC-000000000F2CECD7
const GroupScriptConfig *__fastcall LuaConfigMgr::findGroupScriptConfig(
        const LuaConfigMgr *const this,
        uint32_t scene_id,
        uint32_t group_id)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // rax
  const GroupScriptConfig *result; // rax
  const SceneScriptConfig *scene_config_ptr; // [rsp+18h] [rbp-A8h]
  char v10[160]; // [rsp+20h] [rbp-A0h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 12 scene_id:260 64 32 9 <unknown>";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::findGroupScriptConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862723] = -202116109;
  *(_DWORD *)(v3 + 48) = scene_id;
  scene_config_ptr = LuaConfigMgr::findSceneScriptConfig(this, *(unsigned int *)(v3 + 48));
  if ( scene_config_ptr )
  {
    result = SceneScriptConfig::findGroupScriptConfig(scene_config_ptr, group_id);
  }
  else
  {
    if ( *(char *)(((v3 + 64) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 95) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 95) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 64, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v3 + 64),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "findGroupScriptConfig",
      265);
    v6 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
           (common::milog::MiLogStream *const)(v3 + 64),
           (const char (*)[39])"findSceneScriptConfig fails, scene_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, (const unsigned int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 64));
    result = 0LL;
  }
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 272: range 000000000F2CECD8-000000000F2CED0C
const GroupScriptConfig *__cdecl LuaConfigMgr::findGroupScriptConfig(const LuaConfigMgr *const this, uint32_t group_id)
{
  uint32_t SceneIdByGroupId; // ecx

  SceneIdByGroupId = LuaConfigMgr::getSceneIdByGroupId(this, group_id);
  return LuaConfigMgr::findGroupScriptConfig(this, SceneIdByGroupId, group_id);
};

// Line 278: range 000000000F2CED0E-000000000F2CEF39
const GroupInfoScriptConfig *__fastcall LuaConfigMgr::findGroupInfoConfig(
        const LuaConfigMgr *const this,
        uint32_t scene_id,
        uint32_t group_id)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // rax
  const GroupInfoScriptConfig *result; // rax
  const SceneScriptConfig *scene_config_ptr; // [rsp+18h] [rbp-A8h]
  char v10[160]; // [rsp+20h] [rbp-A0h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 12 scene_id:277 64 32 9 <unknown>";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::findGroupInfoConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862723] = -202116109;
  *(_DWORD *)(v3 + 48) = scene_id;
  scene_config_ptr = LuaConfigMgr::findSceneScriptConfig(this, *(unsigned int *)(v3 + 48));
  if ( scene_config_ptr )
  {
    result = SceneScriptConfig::findGroupInfoConfig(scene_config_ptr, group_id);
  }
  else
  {
    if ( *(char *)(((v3 + 64) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 95) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 95) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 64, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v3 + 64),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "findGroupInfoConfig",
      282);
    v6 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
           (common::milog::MiLogStream *const)(v3 + 64),
           (const char (*)[39])"findSceneScriptConfig fails, scene_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, (const unsigned int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 64));
    result = 0LL;
  }
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 289: range 000000000F2CEF3A-000000000F2CEF6E
const GroupInfoScriptConfig *__cdecl LuaConfigMgr::findGroupInfoConfig(
        const LuaConfigMgr *const this,
        uint32_t group_id)
{
  uint32_t SceneIdByGroupId; // ecx

  SceneIdByGroupId = LuaConfigMgr::getSceneIdByGroupId(this, group_id);
  return LuaConfigMgr::findGroupInfoConfig(this, SceneIdByGroupId, group_id);
};

// Line 294: range 000000000F2CEF70-000000000F2CF270
GroupInfoScriptConfig *__fastcall LuaConfigMgr::findGroupInfoConfigNoConst(
        LuaConfigMgr *const this,
        __int64 scene_id,
        uint32_t group_id)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::unordered_map<unsigned int,SceneScriptConfig> *p_scene_script_config_map; // rdx
  std::unordered_map<unsigned int,SceneScriptConfig> *v7; // rdx
  bool v8; // al
  GroupInfoScriptConfig *result; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::pointer v10; // rax
  std::unordered_map<unsigned int,GroupInfoScriptConfig> *p_group_info_map; // rdx
  std::unordered_map<unsigned int,GroupInfoScriptConfig> *v12; // rdx
  bool v13; // al
  SceneScriptConfig *scene_script_config; // [rsp+18h] [rbp-E8h]
  char v16[224]; // [rsp+20h] [rbp-E0h] BYREF

  v3 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "6 32 4 12 scene_id:293 48 4 12 group_id:293 64 8 6 it:295 96 8 9 <unknown> 128 8 14 iter_group:3"
                        "01 160 8 9 <unknown>";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::findGroupInfoConfigNoConst;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556924;
  v5[536862722] = -218959360;
  v5[536862723] = -218959360;
  v5[536862724] = -218959360;
  v5[536862725] = -202116352;
  *(_DWORD *)(v3 + 32) = scene_id;
  *(_DWORD *)(v3 + 48) = group_id;
  p_scene_script_config_map = &this->scene_script_config_map;
  if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 64, scene_id);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v3 + 64) = std::unordered_map<unsigned int,SceneScriptConfig>::find(
                                                                                 p_scene_script_config_map,
                                                                                 (const std::unordered_map<unsigned int,SceneScriptConfig>::key_type *)(v3 + 32));
  v7 = &this->scene_script_config_map;
  if ( *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 96, v3 + 32);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v3 + 96) = std::unordered_map<unsigned int,SceneScriptConfig>::end(v7);
  v8 = std::__detail::operator==<std::pair<unsigned int const,SceneScriptConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v3 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v3 + 96));
  *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v8 )
  {
    result = 0LL;
  }
  else
  {
    v10 = std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v3 + 64));
    scene_script_config = &v10->second;
    *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = 0;
    p_group_info_map = &v10->second.group_info_map;
    if ( *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v3 + 128, v3 + 96);
    *(std::unordered_map<unsigned int,GroupInfoScriptConfig>::iterator *)(v3 + 128) = std::unordered_map<unsigned int,GroupInfoScriptConfig>::find(
                                                                                        p_group_info_map,
                                                                                        (const std::unordered_map<unsigned int,GroupInfoScriptConfig>::key_type *)(v3 + 48));
    *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = 0;
    v12 = &scene_script_config->group_info_map;
    if ( *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v3 + 160, v3 + 48);
    *(std::unordered_map<unsigned int,GroupInfoScriptConfig>::iterator *)(v3 + 160) = std::unordered_map<unsigned int,GroupInfoScriptConfig>::end(v12);
    v13 = std::__detail::operator==<std::pair<unsigned int const,GroupInfoScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupInfoScriptConfig>,false> *)(v3 + 128),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupInfoScriptConfig>,false> *)(v3 + 160));
    *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = -8;
    if ( v13 )
      result = 0LL;
    else
      result = &std::__detail::_Node_iterator<std::pair<unsigned int const,GroupInfoScriptConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,GroupInfoScriptConfig>,false,false> *const)(v3 + 128))->second;
  }
  if ( v16 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 310: range 000000000F2CF272-000000000F2CF2A6
GroupInfoScriptConfig *__cdecl LuaConfigMgr::findGroupInfoConfigNoConst(LuaConfigMgr *const this, uint32_t group_id)
{
  uint32_t SceneIdByGroupId; // ecx

  SceneIdByGroupId = LuaConfigMgr::getSceneIdByGroupId(this, group_id);
  return LuaConfigMgr::findGroupInfoConfigNoConst(this, SceneIdByGroupId, group_id);
};

// Line 317: range 000000000F2CF2A8-000000000F2CF504
const GadgetScriptConfig *__fastcall LuaConfigMgr::findGadgetScriptConfig(
        const LuaConfigMgr *const this,
        uint32_t scene_id,
        uint32_t group_id,
        uint32_t config_id)
{
  unsigned __int64 v4; // r12
  __int64 v5; // rax
  _DWORD *v6; // r13
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  const GadgetScriptConfig *result; // rax
  const GroupScriptConfig *group_config_ptr; // [rsp+28h] [rbp-A8h]
  char v14[160]; // [rsp+30h] [rbp-A0h] BYREF

  v4 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_1(128LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "3 32 4 12 scene_id:316 48 4 12 group_id:316 64 32 9 <unknown>";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::findGadgetScriptConfig;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556924;
  v6[536862723] = -202116109;
  *(_DWORD *)(v4 + 32) = scene_id;
  *(_DWORD *)(v4 + 48) = group_id;
  group_config_ptr = LuaConfigMgr::findGroupScriptConfig(this, *(_DWORD *)(v4 + 32), *(_DWORD *)(v4 + 48));
  if ( group_config_ptr )
  {
    result = GroupScriptConfig::findGadgetConfig(group_config_ptr, config_id);
  }
  else
  {
    if ( *(char *)(((v4 + 64) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v4 + 95) >> 3) + 0x7FFF8000) != 0
      && (char)((v4 + 95) & 7) >= *(_BYTE *)(((v4 + 95) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v4 + 64, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v4 + 64),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "findGadgetScriptConfig",
      321);
    v7 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
           (common::milog::MiLogStream *const)(v4 + 64),
           (const char (*)[39])"findGroupScriptConfig fails, scene_id:");
    v8 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v4 + 32));
    v9 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v8, (const char (*)[12])", group_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v4 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 64));
    result = 0LL;
  }
  if ( v14 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 328: range 000000000F2CF506-000000000F2CF53E
const GadgetScriptConfig *__cdecl LuaConfigMgr::findGadgetScriptConfig(
        const LuaConfigMgr *const this,
        uint32_t group_id,
        uint32_t config_id)
{
  uint32_t SceneIdByGroupId; // esi

  SceneIdByGroupId = LuaConfigMgr::getSceneIdByGroupId(this, group_id);
  return LuaConfigMgr::findGadgetScriptConfig(this, SceneIdByGroupId, group_id, config_id);
};

// Line 334: range 000000000F2CF540-000000000F2CF7D6
const MonsterScriptConfig *__fastcall LuaConfigMgr::findMonsterScriptConfig(
        const LuaConfigMgr *const this,
        uint32_t group_id,
        uint32_t config_id)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  __int64 v6; // rsi
  uint32_t SceneIdByGroupId; // edx
  char v8; // al
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  const MonsterScriptConfig *result; // rax
  const GroupScriptConfig *group_config_ptr; // [rsp+18h] [rbp-A8h]
  char v15[160]; // [rsp+20h] [rbp-A0h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 4 12 scene_id:335 48 4 12 group_id:333 64 32 9 <unknown>";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::findMonsterScriptConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556924;
  v5[536862723] = -202116109;
  *(_DWORD *)(v3 + 48) = group_id;
  v6 = *(unsigned int *)(v3 + 48);
  SceneIdByGroupId = LuaConfigMgr::getSceneIdByGroupId(this, v6);
  v8 = *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000);
  if ( v8 != 0 && v8 <= 3 )
  {
    LOBYTE(v6) = v8 != 0;
    __asan_report_store4(v3 + 32, v6);
  }
  *(_DWORD *)(v3 + 32) = SceneIdByGroupId;
  group_config_ptr = LuaConfigMgr::findGroupScriptConfig(this, *(_DWORD *)(v3 + 32), *(_DWORD *)(v3 + 48));
  if ( group_config_ptr )
  {
    result = GroupScriptConfig::findMonsterConfig(group_config_ptr, config_id);
  }
  else
  {
    if ( *(char *)(((v3 + 64) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 95) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 95) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 64, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v3 + 64),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "findMonsterScriptConfig",
      339);
    v9 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
           (common::milog::MiLogStream *const)(v3 + 64),
           (const char (*)[39])"findGroupScriptConfig fails, scene_id:");
    v10 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v3 + 32));
    v11 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v10, (const char (*)[12])", group_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 64));
    result = 0LL;
  }
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 347: range 000000000F2CF7D8-000000000F2CF999
const ParentQuestScriptConfig *__fastcall LuaConfigMgr::findParentQuestScriptConfig(
        const LuaConfigMgr *const this,
        __int64 parent_quest_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,ParentQuestScriptConfig> *p_parent_quest_script_config_map; // rdx
  std::unordered_map<unsigned int,ParentQuestScriptConfig> *v6; // rdx
  bool v7; // al
  const ParentQuestScriptConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 19 parent_quest_id:346 64 8 6 it:348 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::findParentQuestScriptConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = parent_quest_id;
  p_parent_quest_script_config_map = &this->parent_quest_script_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, parent_quest_id);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::find(
                                                                                             p_parent_quest_script_config_map,
                                                                                             (const std::unordered_map<unsigned int,ParentQuestScriptConfig>::key_type *)(v2 + 48));
  v6 = &this->parent_quest_script_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,ParentQuestScriptConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false> *const)(v2 + 64))->second;
  else
    result = 0LL;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 357: range 000000000F2CF99A-000000000F2CFB5B
const std::string *__fastcall LuaConfigMgr::findRandomParentQuestScriptStr[abi:cxx11](
        const LuaConfigMgr *const this,
        __int64 template_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,std::string> *p_random_quest_script_template_str_map; // rdx
  std::unordered_map<unsigned int,std::string> *v6; // rdx
  bool v7; // al
  const std::string *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 15 template_id:356 64 8 6 it:358 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::findRandomParentQuestScriptStr[abi:cxx11];
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = template_id;
  p_random_quest_script_template_str_map = &this->random_quest_script_template_str_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, template_id);
  *(std::unordered_map<unsigned int,std::string>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::string>::find(
                                                                                 p_random_quest_script_template_str_map,
                                                                                 (const std::unordered_map<unsigned int,std::string>::key_type *)(v2 + 48));
  v6 = &this->random_quest_script_template_str_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,std::string>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,std::string>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,std::string>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::string >,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::string >,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::string>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::string >,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 367: range 000000000F2CFB5C-000000000F2CFBAA
const QuestNpcScriptConfig *__cdecl LuaConfigMgr::findQuestNpcScriptConfig(
        const LuaConfigMgr *const this,
        uint32_t parent_quest_id,
        uint32_t quest_id,
        uint32_t npc_id)
{
  const ParentQuestScriptConfig *parent_quest_script_config_ptr; // [rsp+28h] [rbp-8h]

  parent_quest_script_config_ptr = LuaConfigMgr::findParentQuestScriptConfig(this, parent_quest_id);
  if ( parent_quest_script_config_ptr )
    return ParentQuestScriptConfig::findNpcConfig(parent_quest_script_config_ptr, quest_id, npc_id);
  else
    return 0LL;
};

// Line 380: range 000000000F2CFBAC-000000000F2CFBF4
const QuestAvatarScriptConfig *__cdecl LuaConfigMgr::findQuestAvatarScriptConfig(
        const LuaConfigMgr *const this,
        uint32_t parent_quest_id,
        uint32_t quest_id)
{
  const ParentQuestScriptConfig *parent_quest_script_config_ptr; // [rsp+18h] [rbp-8h]

  parent_quest_script_config_ptr = LuaConfigMgr::findParentQuestScriptConfig(this, parent_quest_id);
  if ( parent_quest_script_config_ptr )
    return ParentQuestScriptConfig::findAvatarConfig(parent_quest_script_config_ptr, quest_id);
  else
    return 0LL;
};

// Line 393: range 000000000F2CFBF6-000000000F2CFC99
const std::vector<int> *__cdecl LuaConfigMgr::findQuestVarScriptConfig(
        const LuaConfigMgr *const this,
        uint32_t parent_quest_id,
        uint32_t quest_id)
{
  const ParentQuestScriptConfig *parent_quest_script_config_ptr; // [rsp+18h] [rbp-8h]

  if ( !(_BYTE)`guard variable for'LuaConfigMgr::findQuestVarScriptConfig(unsigned int,unsigned int)::dummy_vec
    && __cxa_guard_acquire(&`guard variable for'LuaConfigMgr::findQuestVarScriptConfig(unsigned int,unsigned int)::dummy_vec) )
  {
    std::vector<int>::vector(&LuaConfigMgr::findQuestVarScriptConfig(unsigned int,unsigned int)const::dummy_vec);
    __cxa_guard_release(&`guard variable for'LuaConfigMgr::findQuestVarScriptConfig(unsigned int,unsigned int)::dummy_vec);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::vector<int>::~vector,
      &LuaConfigMgr::findQuestVarScriptConfig(unsigned int,unsigned int)const::dummy_vec,
      &_dso_handle);
  }
  parent_quest_script_config_ptr = LuaConfigMgr::findParentQuestScriptConfig(this, parent_quest_id);
  if ( parent_quest_script_config_ptr )
    return ParentQuestScriptConfig::findQuestVar(parent_quest_script_config_ptr, quest_id);
  else
    return &LuaConfigMgr::findQuestVarScriptConfig(unsigned int,unsigned int)const::dummy_vec;
};

// Line 408: range 000000000F2CFC9A-000000000F2CFE5B
const LuaContent *__fastcall LuaConfigMgr::findGadgetScriptContext(const LuaConfigMgr *const this, __int64 gadget_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,LuaContent> *p_gadget_script_map; // rdx
  std::unordered_map<unsigned int,LuaContent> *v6; // rdx
  bool v7; // al
  const LuaContent *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 gadget_id:407 64 8 6 it:409 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::findGadgetScriptContext;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = gadget_id;
  p_gadget_script_map = &this->gadget_script_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, gadget_id);
  *(std::unordered_map<unsigned int,LuaContent>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,LuaContent>::find(
                                                                                p_gadget_script_map,
                                                                                (const std::unordered_map<unsigned int,LuaContent>::key_type *)(v2 + 48));
  v6 = &this->gadget_script_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,LuaContent>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,LuaContent>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,LuaContent>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,LuaContent>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,LuaContent>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,LuaContent>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,LuaContent>,false,false> *const)(v2 + 64))->second;
  else
    result = 0LL;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 417: range 000000000F2CFE5C-000000000F2D001D
const LuaContent *__fastcall LuaConfigMgr::findMonsterScriptContext(const LuaConfigMgr *const this, __int64 monster_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,LuaContent> *p_monster_script_map; // rdx
  std::unordered_map<unsigned int,LuaContent> *v6; // rdx
  bool v7; // al
  const LuaContent *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 14 monster_id:416 64 8 6 it:418 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::findMonsterScriptContext;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = monster_id;
  p_monster_script_map = &this->monster_script_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, monster_id);
  *(std::unordered_map<unsigned int,LuaContent>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,LuaContent>::find(
                                                                                p_monster_script_map,
                                                                                (const std::unordered_map<unsigned int,LuaContent>::key_type *)(v2 + 48));
  v6 = &this->monster_script_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,LuaContent>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,LuaContent>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,LuaContent>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,LuaContent>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,LuaContent>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,LuaContent>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,LuaContent>,false,false> *const)(v2 + 64))->second;
  else
    result = 0LL;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 428: range 000000000F2D001E-000000000F2D0219
__int64 __fastcall LuaConfigMgr::getSceneIdByGroupId(const LuaConfigMgr *const this, __int64 group_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,unsigned int> *p_group_id_to_scene_id_map; // rdx
  std::unordered_map<unsigned int,unsigned int> *v6; // rdx
  bool v7; // al
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v8; // rdx
  unsigned int *p_second; // rax
  __int64 result; // rax
  char v11[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 12 group_id:427 64 8 6 it:429 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::getSceneIdByGroupId;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = group_id;
  p_group_id_to_scene_id_map = &this->group_id_to_scene_id_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, group_id);
  *(std::unordered_map<unsigned int,unsigned int>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,unsigned int>::find(
                                                                                  p_group_id_to_scene_id_map,
                                                                                  (const std::unordered_map<unsigned int,unsigned int>::key_type *)(v2 + 48));
  v6 = &this->group_id_to_scene_id_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,unsigned int>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,unsigned int>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,unsigned int>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
  {
    v8 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 64));
    p_second = &v8->second;
    if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(p_second);
    }
    result = v8->second;
  }
  else
  {
    result = 0LL;
  }
  if ( v11 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 436: range 000000000F2D021A-000000000F2D0415
__int64 __fastcall LuaConfigMgr::getSceneIdByBlockId(const LuaConfigMgr *const this, __int64 block_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,unsigned int> *p_block_id_to_scene_id_map; // rdx
  std::unordered_map<unsigned int,unsigned int> *v6; // rdx
  bool v7; // al
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v8; // rdx
  unsigned int *p_second; // rax
  __int64 result; // rax
  char v11[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 12 block_id:435 64 8 6 it:437 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::getSceneIdByBlockId;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = block_id;
  p_block_id_to_scene_id_map = &this->block_id_to_scene_id_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, block_id);
  *(std::unordered_map<unsigned int,unsigned int>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,unsigned int>::find(
                                                                                  p_block_id_to_scene_id_map,
                                                                                  (const std::unordered_map<unsigned int,unsigned int>::key_type *)(v2 + 48));
  v6 = &this->block_id_to_scene_id_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,unsigned int>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,unsigned int>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,unsigned int>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
  {
    v8 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 64));
    p_second = &v8->second;
    if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(p_second);
    }
    result = v8->second;
  }
  else
  {
    result = 0LL;
  }
  if ( v11 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 444: range 000000000F2D0416-000000000F2D05D7
PatternGroupScriptConfig *__fastcall LuaConfigMgr::findPatternGroupScriptConfig(
        const LuaConfigMgr *const this,
        __int64 pattern_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,PatternGroupScriptConfig> *p_pattern_group_config_map; // rdx
  std::unordered_map<unsigned int,PatternGroupScriptConfig> *v6; // rdx
  bool v7; // al
  PatternGroupScriptConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 14 pattern_id:443 64 8 6 it:445 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::findPatternGroupScriptConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = pattern_id;
  p_pattern_group_config_map = &this->pattern_group_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, pattern_id);
  *(std::unordered_map<unsigned int,PatternGroupScriptConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,PatternGroupScriptConfig>::find(
                                                                                              p_pattern_group_config_map,
                                                                                              (const std::unordered_map<unsigned int,PatternGroupScriptConfig>::key_type *)(v2 + 48));
  v6 = &this->pattern_group_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,PatternGroupScriptConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,PatternGroupScriptConfig>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,PatternGroupScriptConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,PatternGroupScriptConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,PatternGroupScriptConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,PatternGroupScriptConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,PatternGroupScriptConfig>,false,false> *const)(v2 + 64))->second;
  else
    result = 0LL;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 454: range 000000000F2D05D8-000000000F2D079B
const GroupInfoScriptConfig *__fastcall LuaConfigMgr::findPatternGroupInfoConfig(
        const LuaConfigMgr *const this,
        __int64 pattern_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,PatternGroupScriptConfig> *p_pattern_group_config_map; // rdx
  std::unordered_map<unsigned int,PatternGroupScriptConfig> *v6; // rdx
  bool v7; // al
  const GroupInfoScriptConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 14 pattern_id:453 64 8 6 it:455 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::findPatternGroupInfoConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = pattern_id;
  p_pattern_group_config_map = &this->pattern_group_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, pattern_id);
  *(std::unordered_map<unsigned int,PatternGroupScriptConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,PatternGroupScriptConfig>::find(
                                                                                              p_pattern_group_config_map,
                                                                                              (const std::unordered_map<unsigned int,PatternGroupScriptConfig>::key_type *)(v2 + 48));
  v6 = &this->pattern_group_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,PatternGroupScriptConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,PatternGroupScriptConfig>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,PatternGroupScriptConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,PatternGroupScriptConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,PatternGroupScriptConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,PatternGroupScriptConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,PatternGroupScriptConfig>,false,false> *const)(v2 + 64))->second.group_info_config;
  else
    result = 0LL;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 465: range 000000000F2D079C-000000000F2D0AE0
int32_t __cdecl LuaConfigMgr::checkSceneScript(LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rdx
  int32_t result; // eax
  int32_t ret; // [rsp+1Ch] [rbp-E4h]
  std::unordered_map<unsigned int,SceneScriptConfig> *__for_range; // [rsp+20h] [rbp-E0h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::reference __in; // [rsp+28h] [rbp-D8h]
  const unsigned int *scene_id; // [rsp+30h] [rbp-D0h]
  const SceneScriptConfig *scene_script_config; // [rsp+38h] [rbp-C8h]
  char v13[192]; // [rsp+40h] [rbp-C0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(160LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 32 8 15 __for_begin:467 64 8 13 __for_end:467 96 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::checkSceneScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -218959360;
  v4[536862724] = -202116109;
  ret = 0;
  __for_range = &this->scene_script_config_map;
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v2 + 32) = std::unordered_map<unsigned int,SceneScriptConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,SceneScriptConfig>::end(__for_range);
  while ( std::__detail::operator!=<std::pair<unsigned int const,SceneScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 32),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 64)) )
  {
    __in = std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 32));
    scene_id = std::get<0ul,unsigned int const,SceneScriptConfig>(__in);
    scene_script_config = std::get<1ul,unsigned int const,SceneScriptConfig>(__in);
    if ( SceneScriptConfig::checkScene(scene_script_config) )
    {
      *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 96) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 127) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 127) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 96, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 96),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkSceneScript",
        471);
      v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 96),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v6 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v5, (const char (*)[39])byte_1A533680);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, scene_id);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 96));
      *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
      ret = -1;
    }
    std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 32));
  }
  result = ret;
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 480: range 000000000F2D0AE2-000000000F2D0AF0
int32_t __cdecl LuaConfigMgr::checkGadgetScript(LuaConfigMgr *const this)
{
  return 0;
};

// Line 486: range 000000000F2D0AF2-000000000F2D0B00
int32_t __cdecl LuaConfigMgr::checkMonsterScript(LuaConfigMgr *const this)
{
  return 0;
};

// Line 492: range 000000000F2D0B02-000000000F2D116E
int32_t __cdecl LuaConfigMgr::checkQuestScript(LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  char *v5; // rsi
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rdx
  int32_t result; // eax
  int32_t ret; // [rsp+14h] [rbp-18Ch]
  HK4EDesignConfig *config; // [rsp+18h] [rbp-188h]
  std::unordered_map<unsigned int,ParentQuestScriptConfig> *__for_range; // [rsp+20h] [rbp-180h]
  std::unordered_map<unsigned int,ParentQuestScriptConfig> *__for_range_0; // [rsp+28h] [rbp-178h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::reference v15; // [rsp+30h] [rbp-170h]
  const unsigned int *parent_quest_id_0; // [rsp+38h] [rbp-168h]
  ParentQuestScriptConfig *parent_quest_script_config_0; // [rsp+40h] [rbp-160h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::reference __in; // [rsp+48h] [rbp-158h]
  const unsigned int *parent_quest_id; // [rsp+50h] [rbp-150h]
  ParentQuestScriptConfig *parent_quest_script_config; // [rsp+58h] [rbp-148h]
  char v21[320]; // [rsp+60h] [rbp-140h] BYREF

  v2 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(288LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 8 15 __for_begin:495 64 8 13 __for_end:495 96 8 15 __for_begin:505 128 8 13 __for_end:505 1"
                        "60 32 9 <unknown> 224 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::checkQuestScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -202116109;
  config = LuaConfigMgr::getConfig(this);
  ret = 0;
  __for_range = &this->parent_quest_script_config_map;
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::iterator *)(v2 + 32) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::end(__for_range);
  while ( 1 )
  {
    v5 = (char *)(v2 + 64);
    if ( !std::__detail::operator!=<std::pair<unsigned int const,ParentQuestScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 32),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 64)) )
      break;
    __in = std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false> *const)(v2 + 32));
    parent_quest_id = std::get<0ul,unsigned int const,ParentQuestScriptConfig>(__in);
    parent_quest_script_config = std::get<1ul,unsigned int const,ParentQuestScriptConfig>(__in);
    if ( ParentQuestScriptConfig::check(parent_quest_script_config, config) )
    {
      *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 160, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 160),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkQuestScript",
        499);
      v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 160),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v7 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(v6, (const char (*)[46])byte_1A533780);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, parent_quest_id);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
      *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
      ret = -1;
    }
    std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false> *const)(v2 + 32));
  }
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  __for_range_0 = &this->parent_quest_script_config_extra_map;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v5);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::begin(__for_range_0);
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
  if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 128, v5);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::iterator *)(v2 + 128) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::end(__for_range_0);
  while ( std::__detail::operator!=<std::pair<unsigned int const,ParentQuestScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 96),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 128)) )
  {
    v15 = std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false> *const)(v2 + 96));
    parent_quest_id_0 = std::get<0ul,unsigned int const,ParentQuestScriptConfig>(v15);
    parent_quest_script_config_0 = std::get<1ul,unsigned int const,ParentQuestScriptConfig>(v15);
    if ( ParentQuestScriptConfig::check(parent_quest_script_config_0, config) )
    {
      *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 224, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 224),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkQuestScript",
        509);
      v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 224),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v9 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(v8, (const char (*)[54])byte_1A5337E0);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, parent_quest_id_0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
      *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
      ret = -1;
    }
    std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false> *const)(v2 + 96));
  }
  result = ret;
  if ( v21 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = -168430091;
  }
  return result;
};

// Line 518: range 000000000F2D1170-000000000F2D21D3
int32_t __cdecl LuaConfigMgr::checkGroupsReplacementScript(const LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int SceneIdByGroupId; // edx
  char v6; // al
  __int64 v7; // rsi
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rdx
  std::unordered_map<unsigned int,SceneScriptConfig> *p_scene_script_config_map; // rdx
  std::unordered_map<unsigned int,SceneScriptConfig> *v11; // rdx
  bool v12; // al
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::pointer v15; // rax
  const std::unordered_map<unsigned int,GroupInfoScriptConfig> *p_group_info_map; // rdx
  const std::unordered_map<unsigned int,GroupInfoScriptConfig> *v17; // rdx
  char *v18; // rsi
  bool v19; // al
  __int64 v20; // rcx
  __int64 v21; // rax
  char v22; // dl
  _BOOL8 v23; // rdx
  common::milog::MiLogStream *v24; // rcx
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupInfoScriptConfig>,false,false>::pointer v25; // rdx
  char v26; // cl
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rdx
  common::milog::MiLogStream *v29; // rdi
  __int64 v30; // rcx
  int32_t ret; // [rsp+14h] [rbp-31Ch]
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *__for_range; // [rsp+18h] [rbp-318h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false>::reference v35; // [rsp+20h] [rbp-310h]
  std::tuple_element<0,std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *group_id; // [rsp+28h] [rbp-308h]
  std::tuple_element<1,const std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *replace_set; // [rsp+30h] [rbp-300h]
  const SceneScriptConfig *scene_script_config; // [rsp+38h] [rbp-2F8h]
  unsigned int *replace_group_id; // [rsp+48h] [rbp-2E8h]
  char v40[736]; // [rsp+50h] [rbp-2E0h] BYREF

  v2 = (unsigned __int64)v40;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(704LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "15 48 4 12 scene_id:522 64 8 15 __for_begin:520 96 8 13 __for_end:520 128 8 8 iter:530 160 8 9 <"
                        "unknown> 192 8 9 iter2:540 224 8 9 <unknown> 256 8 15 __for_begin:568 288 8 13 __for_end:568 320"
                        " 32 9 <unknown> 384 32 9 <unknown> 448 32 9 <unknown> 512 32 9 <unknown> 576 32 9 <unknown> 640 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::checkGroupsReplacementScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862725] = -218959360;
  v4[536862726] = -218959360;
  v4[536862727] = -218959360;
  v4[536862728] = -218959360;
  v4[536862729] = -218959360;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -218959118;
  v4[536862741] = -202116109;
  ret = 0;
  __for_range = &this->group_replace_set_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::end(__for_range);
  while ( std::__detail::operator!=<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 64),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 96)) )
  {
    v35 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 64));
    group_id = std::get<0ul,unsigned int const,std::unordered_set<unsigned int>>(v35);
    replace_set = (std::tuple_element<1,const std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *)std::get<1ul,unsigned int const,std::unordered_set<unsigned int>>(v35);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 4;
    if ( *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)group_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(group_id);
    }
    v7 = *group_id;
    SceneIdByGroupId = LuaConfigMgr::getSceneIdByGroupId(this, v7);
    v6 = *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000);
    LOBYTE(v7) = v6 != 0;
    if ( v6 != 0 && v6 <= 3 )
      __asan_report_store4(v2 + 48, v7);
    *(_DWORD *)(v2 + 48) = SceneIdByGroupId;
    if ( *(_DWORD *)(v2 + 48) )
    {
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
      p_scene_script_config_map = &this->scene_script_config_map;
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 128, v7);
      *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v2 + 128) = std::unordered_map<unsigned int,SceneScriptConfig>::find(
                                                                                            p_scene_script_config_map,
                                                                                            (const std::unordered_map<unsigned int,SceneScriptConfig>::key_type *)(v2 + 48));
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
      v11 = &this->scene_script_config_map;
      if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 160, v2 + 48);
      *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v2 + 160) = std::unordered_map<unsigned int,SceneScriptConfig>::end(v11);
      v12 = std::__detail::operator==<std::pair<unsigned int const,SceneScriptConfig>,false>(
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 128),
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 160));
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
      if ( v12 )
      {
        *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 384) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 384, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 384),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "checkGroupsReplacementScript",
          533);
        v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 384),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v14 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                v13,
                (const char (*)[33])"cannot find scene script config:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v2 + 48));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 384));
        *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
        ret = -1;
      }
      else
      {
        v15 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 128));
        scene_script_config = &v15->second;
        *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
        p_group_info_map = &v15->second.group_info_map;
        if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 192, v2 + 160);
        *(std::unordered_map<unsigned int,GroupInfoScriptConfig>::const_iterator *)(v2 + 192) = std::unordered_map<unsigned int,GroupInfoScriptConfig>::find(
                                                                                                  p_group_info_map,
                                                                                                  group_id);
        *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
        v17 = &scene_script_config->group_info_map;
        if ( *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 224, group_id);
        *(std::unordered_map<unsigned int,GroupInfoScriptConfig>::const_iterator *)(v2 + 224) = std::unordered_map<unsigned int,GroupInfoScriptConfig>::end(v17);
        v18 = (char *)(v2 + 224);
        v19 = std::__detail::operator==<std::pair<unsigned int const,GroupInfoScriptConfig>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupInfoScriptConfig>,false> *)(v2 + 192),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupInfoScriptConfig>,false> *)(v2 + 224));
        *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
        if ( v19 )
        {
          *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 448, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 448),
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/lua_config_mgr.cpp",
            "checkGroupsReplacementScript",
            543);
          if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_load4(v2 + 48);
          v20 = *(unsigned int *)(v2 + 48);
          if ( *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)group_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(group_id);
          }
          common::milog::MiLogStream::operator()(
            (common::milog::MiLogStream *const)(v2 + 448),
            "group_id=%u not found in scene_id=%u",
            *group_id,
            v20);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
          *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
        }
        else
        {
          v21 = (__int64)std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupInfoScriptConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupInfoScriptConfig>,false,false> *const)(v2 + 192));
          v22 = *(_BYTE *)(((unsigned __int64)(v21 + 64) >> 3) + 0x7FFF8000);
          LOBYTE(v18) = v22 != 0;
          v23 = v22 < 0;
          if ( v23 )
            v21 = __asan_report_load1(v21 + 64, v18, v23);
          if ( *(_BYTE *)(v21 + 64) != 1 )
          {
            *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 64 + 95) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 512, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 512),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "checkGroupsReplacementScript",
              551);
            v24 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 512),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            if ( *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)group_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(group_id);
            }
            common::milog::MiLogStream::operator()(v24, "group_id=%u is not dynamic load", *group_id);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
            *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
            ret = -1;
          }
          else
          {
            v25 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupInfoScriptConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupInfoScriptConfig>,false,false> *const)(v2 + 192));
            v26 = *(_BYTE *)(((unsigned __int64)&v25->second.replaceable_info >> 3) + 0x7FFF8000);
            LOBYTE(v18) = v26 != 0;
            if ( v26 != 0 && (((unsigned __int8)v25 - 68) & 7) >= v26 )
              __asan_report_load1(&v25->second.replaceable_info, v18, v25);
            if ( v25->second.replaceable_info.value )
              goto LABEL_56;
            v18 = (char *)(((unsigned __int8)group_id & 7u) + 3);
            if ( *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)group_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(group_id);
            }
            if ( *group_id <= 0x11E1A2FF || *group_id > (unsigned int)&loc_17D783FF )
            {
              *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 576) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 576, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 576),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "checkGroupsReplacementScript",
                561);
              v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 576),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v28 = common::milog::MiLogStream::operator<<<char [78],(char *[78])0>(
                      v27,
                      (const char (*)[78])byte_1A533AC0);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v28, group_id);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 576));
              *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
              ret = -1;
            }
            else
            {
LABEL_56:
              *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v2 + 256, v18);
              *(std::unordered_set<unsigned int>::const_iterator *)(v2 + 256) = std::unordered_set<unsigned int>::begin(replace_set);
              *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v2 + 288, v18);
              *(std::unordered_set<unsigned int>::const_iterator *)(v2 + 288) = std::unordered_set<unsigned int>::end(replace_set);
              while ( std::__detail::operator!=<unsigned int,false>(
                        (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 256),
                        (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 288)) )
              {
                replace_group_id = (unsigned int *)std::__detail::_Node_const_iterator<unsigned int,true,false>::operator*((const std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v2 + 256));
                if ( !std::unordered_map<unsigned int,GroupInfoScriptConfig>::count(
                        &scene_script_config->group_info_map,
                        replace_group_id) )
                {
                  *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 640) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 640, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 640),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "checkGroupsReplacementScript",
                    573);
                  v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 640),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
                  {
                    v29 = (common::milog::MiLogStream *)(v2 + 48);
                    __asan_report_load4(v2 + 48);
                  }
                  v30 = *(unsigned int *)(v2 + 48);
                  if ( *(_BYTE *)(((unsigned __int64)replace_group_id >> 3) + 0x7FFF8000) != 0
                    && (char)(((unsigned __int8)replace_group_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)replace_group_id >> 3)
                                                                                       + 0x7FFF8000) )
                  {
                    v29 = (common::milog::MiLogStream *)replace_group_id;
                    __asan_report_load4(replace_group_id);
                  }
                  common::milog::MiLogStream::operator()(
                    v29,
                    "replace_group_id=%u not found in scene_id=%u",
                    *replace_group_id,
                    v30);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 640));
                  *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = -117901064;
                  ret = -1;
                }
                std::__detail::_Node_const_iterator<unsigned int,true,false>::operator++((std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v2 + 256));
              }
              *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
            }
          }
        }
      }
    }
    else
    {
      *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 320, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 320),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkGroupsReplacementScript",
        525);
      v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 320),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v9 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
             v8,
             (const char (*)[32])"cannot find scene_id. group_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, group_id);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 320));
      *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
      ret = -1;
    }
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 64));
  }
  if ( v40 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 88) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return ret;
};

// Line 584: range 000000000F2D21D4-000000000F2D2518
int32_t __cdecl LuaConfigMgr::rewriteSceneScript(LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rdx
  int32_t result; // eax
  int32_t ret; // [rsp+1Ch] [rbp-E4h]
  std::unordered_map<unsigned int,SceneScriptConfig> *__for_range; // [rsp+20h] [rbp-E0h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::reference __in; // [rsp+28h] [rbp-D8h]
  const unsigned int *scene_id; // [rsp+30h] [rbp-D0h]
  SceneScriptConfig *scene_script_config; // [rsp+38h] [rbp-C8h]
  char v13[192]; // [rsp+40h] [rbp-C0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(160LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 32 8 15 __for_begin:586 64 8 13 __for_end:586 96 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::rewriteSceneScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -218959360;
  v4[536862724] = -202116109;
  ret = 0;
  __for_range = &this->scene_script_config_map;
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v2 + 32) = std::unordered_map<unsigned int,SceneScriptConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,SceneScriptConfig>::end(__for_range);
  while ( std::__detail::operator!=<std::pair<unsigned int const,SceneScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 32),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 64)) )
  {
    __in = std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 32));
    scene_id = std::get<0ul,unsigned int const,SceneScriptConfig>(__in);
    scene_script_config = std::get<1ul,unsigned int const,SceneScriptConfig>(__in);
    if ( SceneScriptConfig::rewriteScene(scene_script_config) )
    {
      *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 96) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 127) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 127) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 96, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 96),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "rewriteSceneScript",
        590);
      v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 96),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v6 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v5, (const char (*)[39])byte_1A533C00);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, scene_id);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 96));
      *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
      ret = -1;
    }
    std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 32));
  }
  result = ret;
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 599: range 000000000F2D251A-000000000F2D2B86
int32_t __cdecl LuaConfigMgr::rewriteQuestScript(LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  char *v5; // rsi
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rdx
  int32_t result; // eax
  int32_t ret; // [rsp+14h] [rbp-18Ch]
  HK4EDesignConfig *config; // [rsp+18h] [rbp-188h]
  std::unordered_map<unsigned int,ParentQuestScriptConfig> *__for_range; // [rsp+20h] [rbp-180h]
  std::unordered_map<unsigned int,ParentQuestScriptConfig> *__for_range_0; // [rsp+28h] [rbp-178h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::reference v15; // [rsp+30h] [rbp-170h]
  const unsigned int *parent_quest_id_0; // [rsp+38h] [rbp-168h]
  ParentQuestScriptConfig *parent_quest_script_config_0; // [rsp+40h] [rbp-160h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::reference __in; // [rsp+48h] [rbp-158h]
  const unsigned int *parent_quest_id; // [rsp+50h] [rbp-150h]
  ParentQuestScriptConfig *parent_quest_script_config; // [rsp+58h] [rbp-148h]
  char v21[320]; // [rsp+60h] [rbp-140h] BYREF

  v2 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(288LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 8 15 __for_begin:602 64 8 13 __for_end:602 96 8 15 __for_begin:612 128 8 13 __for_end:612 1"
                        "60 32 9 <unknown> 224 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::rewriteQuestScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -202116109;
  config = LuaConfigMgr::getConfig(this);
  ret = 0;
  __for_range = &this->parent_quest_script_config_map;
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::iterator *)(v2 + 32) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::end(__for_range);
  while ( 1 )
  {
    v5 = (char *)(v2 + 64);
    if ( !std::__detail::operator!=<std::pair<unsigned int const,ParentQuestScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 32),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 64)) )
      break;
    __in = std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false> *const)(v2 + 32));
    parent_quest_id = std::get<0ul,unsigned int const,ParentQuestScriptConfig>(__in);
    parent_quest_script_config = std::get<1ul,unsigned int const,ParentQuestScriptConfig>(__in);
    if ( ParentQuestScriptConfig::rewrite(parent_quest_script_config, config) )
    {
      *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 160, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 160),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "rewriteQuestScript",
        606);
      v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 160),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v7 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(v6, (const char (*)[46])byte_1A533D00);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, parent_quest_id);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
      *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
      ret = -1;
    }
    std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false> *const)(v2 + 32));
  }
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  __for_range_0 = &this->parent_quest_script_config_extra_map;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v5);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::begin(__for_range_0);
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
  if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 128, v5);
  *(std::unordered_map<unsigned int,ParentQuestScriptConfig>::iterator *)(v2 + 128) = std::unordered_map<unsigned int,ParentQuestScriptConfig>::end(__for_range_0);
  while ( std::__detail::operator!=<std::pair<unsigned int const,ParentQuestScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 96),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,ParentQuestScriptConfig>,false> *)(v2 + 128)) )
  {
    v15 = std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false> *const)(v2 + 96));
    parent_quest_id_0 = std::get<0ul,unsigned int const,ParentQuestScriptConfig>(v15);
    parent_quest_script_config_0 = std::get<1ul,unsigned int const,ParentQuestScriptConfig>(v15);
    if ( ParentQuestScriptConfig::rewrite(parent_quest_script_config_0, config) )
    {
      *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 224, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 224),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "rewriteQuestScript",
        616);
      v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 224),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v9 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(v8, (const char (*)[54])byte_1A533D60);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, parent_quest_id_0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
      *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
      ret = -1;
    }
    std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,ParentQuestScriptConfig>,false,false> *const)(v2 + 96));
  }
  result = ret;
  if ( v21 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = -168430091;
  }
  return result;
};

// Line 625: range 000000000F2D2B88-000000000F2D3204
__int64 __fastcall LuaConfigMgr::getGadgetItemLimitType(
        const LuaConfigMgr *const this,
        uint32_t scene_id,
        const GadgetScriptConfig *gadget_script_config_ptr,
        bool is_by_quest)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  __int64 v7; // rsi
  __int64 v8; // rdx
  const DropExcelConfigMgr *p_drop_config_mgr; // rcx
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  __int64 result; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  bool is_oneoff; // [rsp+27h] [rbp-139h]
  TxtConfigMgr *txt_config_mgr; // [rsp+28h] [rbp-138h]
  const data::ChestDropExcelConfig *chest_drop_config_ptr; // [rsp+30h] [rbp-130h]
  const data::SceneExcelConfig *scene_config_ptr; // [rsp+38h] [rbp-128h]
  char v22[288]; // [rsp+40h] [rbp-120h] BYREF

  v4 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_2(256LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "4 48 4 12 scene_id:624 64 32 9 <unknown> 128 32 9 <unknown> 192 32 9 <unknown>";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::getGadgetItemLimitType;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862723] = -218959118;
  v6[536862725] = -218959118;
  v6[536862727] = -202116109;
  *(_DWORD *)(v4 + 48) = scene_id;
  txt_config_mgr = &LuaConfigMgr::getConfig(this)->txt_config_mgr;
  if ( is_by_quest )
  {
    is_oneoff = 1;
LABEL_22:
    scene_config_ptr = data::SceneExcelConfigMgrBase::findSceneExcelConfig(
                         &txt_config_mgr->scene_config_mgr,
                         *(_DWORD *)(v4 + 48));
    if ( scene_config_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&scene_config_ptr->type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)scene_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&scene_config_ptr->type >> 3)
                                                                        + 0x7FFF8000) )
      {
        __asan_report_load4(&scene_config_ptr->type);
      }
      if ( scene_config_ptr->type == SCENE_DUNGEON )
      {
        if ( is_oneoff )
          result = 16LL;
        else
          result = 23LL;
      }
      else if ( is_oneoff )
      {
        result = 14LL;
      }
      else
      {
        result = 22LL;
      }
    }
    else
    {
      if ( *(char *)(((v4 + 192) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 64 + 31) & 7) >= *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 192, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 192),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/lua_config_mgr.cpp",
        "getGadgetItemLimitType",
        657);
      v15 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
              (common::milog::MiLogStream *const)(v4 + 192),
              (const char (*)[37])"findSceneExcelConfig fail, scene_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, (const unsigned int *)(v4 + 48));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 192));
      result = 0LL;
    }
    goto LABEL_35;
  }
  if ( gadget_script_config_ptr )
  {
    v7 = ((_BYTE)gadget_script_config_ptr + 74) & 7;
    v8 = (*(_BYTE *)(((unsigned __int64)&gadget_script_config_ptr->is_oneoff >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v7 >= *(_BYTE *)(((unsigned __int64)&gadget_script_config_ptr->is_oneoff >> 3) + 0x7FFF8000));
    if ( (_BYTE)v8 )
      __asan_report_load1(&gadget_script_config_ptr->is_oneoff, v7, v8);
    is_oneoff = gadget_script_config_ptr->is_oneoff;
    if ( (unsigned __int8)std::string::empty(&gadget_script_config_ptr->drop_tag) == 1 )
      goto LABEL_22;
    p_drop_config_mgr = &txt_config_mgr->drop_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&gadget_script_config_ptr->level >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)gadget_script_config_ptr + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&gadget_script_config_ptr->level >> 3)
                                                                              + 0x7FFF8000) )
    {
      __asan_report_load4(&gadget_script_config_ptr->level);
    }
    chest_drop_config_ptr = DropExcelConfigMgr::findChestDropConfig(
                              p_drop_config_mgr,
                              gadget_script_config_ptr->level,
                              &gadget_script_config_ptr->drop_tag);
    if ( chest_drop_config_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&chest_drop_config_ptr->item_limit_type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&chest_drop_config_ptr->item_limit_type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&chest_drop_config_ptr->item_limit_type);
      }
      result = (unsigned int)chest_drop_config_ptr->item_limit_type;
    }
    else
    {
      if ( *(char *)(((v4 + 64) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 95) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 + 95) & 7) >= *(_BYTE *)(((v4 + 95) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 64, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 64),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/lua_config_mgr.cpp",
        "getGadgetItemLimitType",
        642);
      v10 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
              (common::milog::MiLogStream *const)(v4 + 64),
              (const char (*)[40])"findChestDropConfig fail, gadget_level:");
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v10,
              &gadget_script_config_ptr->level);
      v12 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v11, (const char (*)[11])" drop_tag:");
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v12, &gadget_script_config_ptr->drop_tag);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 64));
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v4 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v4 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v4 - 97) & 7) >= *(_BYTE *)(((v4 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v4 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v4 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "getGadgetItemLimitType",
      650);
    v14 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
            (common::milog::MiLogStream *const)(v4 + 128),
            (const char (*)[55])"gadget is not create by quest or lua config! scene_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v4 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 128));
    result = 0LL;
  }
LABEL_35:
  if ( v22 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF800C) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8014) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF801C) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 669: range 000000000F2D3206-000000000F2D356D
data::ItemLimitType __fastcall LuaConfigMgr::getMonsterItemLimitType(
        const LuaConfigMgr *const this,
        uint32_t scene_id,
        const MonsterScriptConfig *monster_script_config_ptr)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r13
  data::ItemLimitType result; // eax
  __int64 v7; // rsi
  __int64 v8; // rdx
  common::milog::MiLogStream *v9; // rax
  bool is_oneoff; // [rsp+27h] [rbp-B9h]
  TxtConfigMgr *txt_config_mgr; // [rsp+28h] [rbp-B8h]
  const data::SceneExcelConfig *scene_config_ptr; // [rsp+38h] [rbp-A8h]
  char v14[160]; // [rsp+40h] [rbp-A0h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 12 scene_id:668 64 32 9 <unknown>";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::getMonsterItemLimitType;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862723] = -202116109;
  *(_DWORD *)(v3 + 48) = scene_id;
  txt_config_mgr = &LuaConfigMgr::getConfig(this)->txt_config_mgr;
  is_oneoff = 0;
  if ( monster_script_config_ptr )
  {
    if ( (unsigned __int8)std::string::empty(&monster_script_config_ptr->drop_tag) != 1 )
    {
      result = MonsterExcelConfigMgr::getItemLimitTypeByMonsterDropTag(
                 &txt_config_mgr->monster_config_mgr,
                 &monster_script_config_ptr->drop_tag);
      goto LABEL_23;
    }
    v7 = ((_BYTE)monster_script_config_ptr + 97) & 7;
    v8 = (*(_BYTE *)(((unsigned __int64)&monster_script_config_ptr->is_oneoff >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v7 >= *(_BYTE *)(((unsigned __int64)&monster_script_config_ptr->is_oneoff >> 3) + 0x7FFF8000));
    if ( (_BYTE)v8 )
      __asan_report_load1(&monster_script_config_ptr->is_oneoff, v7, v8);
    is_oneoff = monster_script_config_ptr->is_oneoff;
  }
  scene_config_ptr = data::SceneExcelConfigMgrBase::findSceneExcelConfig(
                       &txt_config_mgr->scene_config_mgr,
                       *(_DWORD *)(v3 + 48));
  if ( scene_config_ptr )
  {
    if ( *(_BYTE *)(((unsigned __int64)&scene_config_ptr->type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)scene_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&scene_config_ptr->type >> 3)
                                                                      + 0x7FFF8000) )
    {
      __asan_report_load4(&scene_config_ptr->type);
    }
    if ( scene_config_ptr->type == SCENE_DUNGEON )
    {
      if ( is_oneoff )
        result = ITEM_LIMIT_ONEOFF_DUNGEON_DROP;
      else
        result = ITEM_LIMIT_DAILY_DUNGEON_DROP;
    }
    else if ( is_oneoff )
    {
      result = ITEM_LIMIT_ONEOFF_BIG_WORLD_DROP;
    }
    else
    {
      result = ITEM_LIMIT_DAILY_BIG_WORLD_DROP;
    }
  }
  else
  {
    if ( *(char *)(((v3 + 64) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 95) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 95) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 64, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v3 + 64),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "getMonsterItemLimitType",
      686);
    v9 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
           (common::milog::MiLogStream *const)(v3 + 64),
           (const char (*)[37])"findSceneExcelConfig fail, scene_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 64));
    result = ITEM_LIMIT_NONE;
  }
LABEL_23:
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 699: range 000000000F2D356E-000000000F2EB2B1
int32_t LuaConfigMgr::loadGroupScriptConfig(LuaConfigMgr *const this, const std::string *group_script_path, GroupScriptConfig *group_script_config, uint32_t scene_id);

// Line 1794: range 000000000F2EB2B2-000000000F2F09FB
int32_t LuaConfigMgr::loadGroupGadgetScriptConfig(LuaConfigMgr *const this, GroupScriptConfig *group_script_config, const luabind::adl::object *gadget_obj, GadgetScriptConfig *gadget_script_config, uint32_t scene_id, uint32_t group_id);

// Line 2082: range 000000000F2F09FC-000000000F2F20C1
int32_t __cdecl LuaConfigMgr::loadVariableConfig(
        LuaConfigMgr *const this,
        LuaScriptPtr *p_group_script_ptr,
        GroupScriptConfig *group_script_config)
{
  int32_t v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // r15
  char *v8; // rsi
  unsigned __int64 v9; // rax
  bool v10; // r15
  common::milog::MiLogStream *v11; // rax
  _BOOL4 v12; // r15d
  __int64 v13; // rsi
  __int64 v14; // rdx
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  int v17; // r15d
  VariableScriptConfig *v18; // r8
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  __int64 v23; // rsi
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,VariableScriptConfig>,false,false>,bool> v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  VariableScriptConfig *v29; // rax
  std::string *v30; // rcx
  VariableScriptConfig *v31; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<const std::string,VariableScriptConfig>,false,true>,bool> v32; // rax
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rax
  std::set<std::string> *v35; // rax
  char *v36; // rsi
  proto::GroupVariableType *v37; // r8
  std::unordered_map<std::string,proto::GroupVariableType> *p_variable_name_type_map; // rcx
  int v39; // edi
  char v40; // al
  std::pair<std::__detail::_Node_iterator<std::pair<const std::string,proto::GroupVariableType>,false,true>,bool> v41; // rax
  common::milog::MiLogStream *v42; // rax
  common::milog::MiLogStream *v43; // rax
  unsigned __int64 v44; // rax
  int v45; // edx
  common::milog::MiLogStream *v46; // rax
  common::milog::MiLogStream *v47; // rax
  const char (*v49)[6]; // [rsp+0h] [rbp-4C0h]
  GroupScriptConfig *group_script_configa; // [rsp+8h] [rbp-4B8h]
  LuaScriptPtr *p_group_script_ptra; // [rsp+10h] [rbp-4B0h]
  LuaConfigMgr *thisa; // [rsp+18h] [rbp-4A8h]
  std::vector<luabind::adl::object> *__for_range; // [rsp+20h] [rbp-4A0h]
  luabind::adl::object *variable_obj; // [rsp+28h] [rbp-498h]
  char v55[1168]; // [rsp+30h] [rbp-490h] BYREF

  thisa = this;
  p_group_script_ptra = p_group_script_ptr;
  group_script_configa = group_script_config;
  v4 = (unsigned __int64)v55;
  v49 = (const char (*)[6])v55;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_5(1120LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "22 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 4 18 variable_type:210"
                        "5 112 4 9 <unknown> 128 8 16 __for_begin:2090 160 8 14 __for_end:2090 192 24 21 variable_obj_vec"
                        ":2087 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 32 18 variable_name:2098 512 "
                        "32 9 <unknown> 576 32 9 <unknown> 640 32 9 <unknown> 704 32 9 <unknown> 768 32 9 <unknown> 832 3"
                        "2 9 <unknown> 896 32 9 <unknown> 960 32 9 <unknown> 1024 56 20 variable_config:2092";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::loadVariableConfig;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234753535;
  v6[536862722] = -234753535;
  v6[536862723] = -234556924;
  v6[536862724] = -218959360;
  v6[536862725] = -218959360;
  v6[536862726] = -234881024;
  v6[536862727] = -218959118;
  v6[536862729] = -218959118;
  v6[536862731] = -218959118;
  v6[536862733] = -218959118;
  v6[536862735] = -218959118;
  v6[536862737] = -218959118;
  v6[536862739] = -218959118;
  v6[536862741] = -218959118;
  v6[536862743] = -218959118;
  v6[536862745] = -218959118;
  v6[536862747] = -218959118;
  v6[536862749] = -218959118;
  v6[536862751] = -218959118;
  v6[536862753] = -218103808;
  v6[536862754] = -202116109;
  if ( std::operator==<LuaScript>(0LL, p_group_script_ptr) )
  {
    v3 = -1;
  }
  else
  {
    std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v4 + 192));
    v7 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_group_script_ptr);
    std::allocator<char>::allocator(v4 + 32);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v4 + 256),
      "variables",
      (const std::allocator<char> *)(v4 + 32));
    v8 = (char *)(v4 + 256);
    LOBYTE(v7) = LuaScript::getGlobalVector<luabind::adl::object>(
                   v7,
                   (const std::string *)(v4 + 256),
                   (std::vector<luabind::adl::object> *)(v4 + 192)) == 0;
    std::string::~string((void *)(v4 + 256));
    *(_DWORD *)(((v4 + 256) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v4 + 32);
    *(_BYTE *)(((v4 + 32) >> 3) + 0x7FFF8000) = -8;
    if ( !(_BYTE)v7 )
      goto LABEL_75;
    __for_range = (std::vector<luabind::adl::object> *)(v4 + 192);
    *(_BYTE *)(((v4 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v4 + 128) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v4 + 128, v8);
    *(std::vector<luabind::adl::object>::iterator *)(v4 + 128) = std::vector<luabind::adl::object>::begin(__for_range);
    *(_BYTE *)(((v4 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v4 + 160) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v4 + 160, v8);
    *(std::vector<luabind::adl::object>::iterator *)(v4 + 160) = std::vector<luabind::adl::object>::end(__for_range);
    while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
              (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v4 + 128),
              (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v4 + 160)) )
    {
      variable_obj = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v4 + 128));
      v9 = ((v4 + 1024) >> 3) + 2147450880;
      *(_DWORD *)v9 = 0;
      *(_WORD *)(v9 + 4) = 0;
      *(_BYTE *)(v9 + 6) = 0;
      VariableScriptConfig::VariableScriptConfig((VariableScriptConfig *const)(v4 + 1024));
      *(_DWORD *)(((v4 + 320) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v4 + 48);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v4 + 320),
        "name",
        (const std::allocator<char> *)(v4 + 48));
      v10 = ScriptUtil::getTableValue<std::string,char const(&)[6],int &,char const(&)[10],unsigned int &>(
              &ScriptUtil::no_exception_instance,
              variable_obj,
              (const std::string *)(v4 + 320),
              (std::string *)(v4 + 1032),
              (const char (*)[6])"value",
              (int *)(v4 + 1064),
              (const char (*)[10])"config_id",
              (unsigned int *)(v4 + 1024),
              v49,
              (int *)group_script_configa,
              (const char (*)[10])p_group_script_ptra,
              (unsigned int *)thisa) != 0;
      std::string::~string((void *)(v4 + 320));
      *(_DWORD *)(((v4 + 320) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v4 + 48);
      *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v4 + 384) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v4 + 384) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v4 + 415) >> 3) + 0x7FFF8000) != 0
          && (char)((v4 - 97) & 7) >= *(_BYTE *)(((v4 + 415) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v4 + 384, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v4 + 384),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "loadVariableConfig",
          2095);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v4 + 384),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
          v11,
          (const char (*)[45])"SCRIPT_UTIL.getTableValue variable_obj fails");
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 384));
        *(_DWORD *)(((v4 + 384) >> 3) + 0x7FFF8000) = -117901064;
        v3 = -1;
        v12 = 0;
      }
      else
      {
        *(_DWORD *)(((v4 + 448) >> 3) + 0x7FFF8000) = 0;
        std::string::basic_string(v4 + 448, v4 + 1032);
        *(_DWORD *)(((v4 + 512) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v4 + 64);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v4 + 512),
          "no_refresh",
          (const std::allocator<char> *)(v4 + 64));
        ScriptUtil::getTableValue<bool>(
          &ScriptUtil::no_exception_instance,
          variable_obj,
          (const std::string *)(v4 + 512),
          (bool *)(v4 + 1068));
        std::string::~string((void *)(v4 + 512));
        *(_DWORD *)(((v4 + 512) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v4 + 64);
        *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) = -8;
        v13 = ((_BYTE)v4 + 44) & 7;
        v14 = (*(_BYTE *)(((v4 + 1068) >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v13 >= *(_BYTE *)(((v4 + 1068) >> 3) + 0x7FFF8000));
        if ( (_BYTE)v14 )
          __asan_report_load1(v4 + 1068, v13, v14);
        if ( !*(_BYTE *)(v4 + 1068) )
          goto LABEL_26;
        if ( *(_BYTE *)(((unsigned __int64)group_script_configa >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)group_script_configa >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(group_script_configa);
        }
        if ( group_script_configa->io_type == GROUP_IO_TYPE_FLOW )
        {
          *(_DWORD *)(((v4 + 576) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v4 + 576) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v4 + 607) >> 3) + 0x7FFF8000) != 0
            && (char)((v4 + 95) & 7) >= *(_BYTE *)(((v4 + 607) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v4 + 576, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v4 + 576),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadVariableConfig",
            2102);
          v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v4 + 576),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v16 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                  v15,
                  (const char (*)[46])"flow cannot use variable no_refresh group_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, &group_script_configa->group_id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 576));
          *(_DWORD *)(((v4 + 576) >> 3) + 0x7FFF8000) = -117901064;
          v3 = -1;
          v17 = 0;
        }
        else
        {
LABEL_26:
          *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) = 4;
          if ( *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_store4(v4 + 96, v13);
          *(_DWORD *)(v4 + 96) = 0;
          *(_DWORD *)(((v4 + 640) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v4 + 80) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v4 + 80);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v4 + 640),
            "variable_type",
            (const std::allocator<char> *)(v4 + 80));
          ScriptUtil::getTableValue<unsigned int>(
            &ScriptUtil::no_exception_instance,
            variable_obj,
            (const std::string *)(v4 + 640),
            (unsigned int *)(v4 + 96));
          std::string::~string((void *)(v4 + 640));
          *(_DWORD *)(((v4 + 640) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v4 + 80);
          *(_BYTE *)(((v4 + 80) >> 3) + 0x7FFF8000) = -8;
          if ( *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_load4(v4 + 96);
          if ( !proto::GroupVariableType_IsValid(*(_DWORD *)(v4 + 96)) )
          {
            *(_DWORD *)(((v4 + 704) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v4 + 704) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v4 + 735) >> 3) + 0x7FFF8000) != 0
              && (char)((v4 - 33) & 7) >= *(_BYTE *)(((v4 + 735) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v4 + 704, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v4 + 704),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "loadVariableConfig",
              2109);
            v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v4 + 704),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v20 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
                    v19,
                    (const char (*)[23])"invalid variable_type:");
            v21 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v4 + 96));
            v22 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    v21,
                    (const char (*)[16])" variable name:");
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, (const std::string *)(v4 + 448));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 704));
            *(_DWORD *)(((v4 + 704) >> 3) + 0x7FFF8000) = -117901064;
            v3 = -1;
            v17 = 0;
          }
          else
          {
            if ( *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v4 + 96);
            v23 = *(unsigned int *)(v4 + 96);
            if ( *(_BYTE *)(((v4 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v4 + 1072) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v4 + 1072, v23);
            *(_DWORD *)(v4 + 1072) = v23;
            if ( *(_DWORD *)(v4 + 1072) == 1 )
              std::set<std::string>::emplace<std::string&>(
                &thisa->logic_state_sgv_name_set_,
                (std::string *)(v4 + 448),
                (std::string *)&thisa->logic_state_sgv_name_set_);
            v24 = std::unordered_map<unsigned int,VariableScriptConfig>::emplace<unsigned int &,VariableScriptConfig&>(
                    &group_script_configa->variable_id_config_map,
                    (unsigned int *)(v4 + 1024),
                    (VariableScriptConfig *)(v4 + 1024),
                    (unsigned int *)&group_script_configa->variable_id_config_map,
                    v18);
            if ( !v24.second )
            {
              *(_DWORD *)(((v4 + 768) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v4 + 768) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v4 + 799) >> 3) + 0x7FFF8000) != 0
                && (char)((v4 + 31) & 7) >= *(_BYTE *)(((v4 + 799) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v4 + 768, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v4 + 768),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "loadVariableConfig",
                2120);
              v25 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v4 + 768),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v26 = common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
                      v25,
                      (const char (*)[30])"duplicate variable config_id:");
              v27 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v26,
                      (const unsigned int *)(v4 + 1024));
              v28 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                      v27,
                      (const char (*)[17])", variable name:");
              common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v28, (const std::string *)(v4 + 448));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 768));
              *(_DWORD *)(((v4 + 768) >> 3) + 0x7FFF8000) = -117901064;
              v3 = -1;
              v17 = 0;
            }
            else
            {
              v29 = std::move<VariableScriptConfig &>((VariableScriptConfig *)(v4 + 1024));
              v32 = std::unordered_map<std::string,VariableScriptConfig>::emplace<std::string&,VariableScriptConfig>(
                      &group_script_configa->variable_map,
                      (std::string *)(v4 + 448),
                      v29,
                      v30,
                      v31);
              if ( !v32.second )
              {
                *(_DWORD *)(((v4 + 832) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v4 + 832) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v4 + 863) >> 3) + 0x7FFF8000) != 0
                  && (char)((v4 + 95) & 7) >= *(_BYTE *)(((v4 + 863) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v4 + 832, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v4 + 832),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "loadVariableConfig",
                  2125);
                v33 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v4 + 832),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v34 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
                        v33,
                        (const char (*)[25])"duplicate variable name:");
                common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                  v34,
                  (const std::string *)(v4 + 448));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 832));
                *(_DWORD *)(((v4 + 832) >> 3) + 0x7FFF8000) = -117901064;
                v3 = -1;
                v17 = 0;
              }
              else
              {
                v35 = std::unordered_map<unsigned int,std::set<std::string>>::operator[](
                        &group_script_configa->variable_type_name_set_map,
                        (const std::unordered_map<unsigned int,std::set<std::string>>::key_type *)(v4 + 96));
                v36 = (char *)(v4 + 448);
                std::set<std::string>::emplace<std::string&>(v35, (std::string *)(v4 + 448), (std::string *)v35);
                p_variable_name_type_map = &group_script_configa->variable_name_type_map;
                *(_BYTE *)(((v4 + 112) >> 3) + 0x7FFF8000) = 4;
                if ( *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_load4(v4 + 96);
                v39 = *(_DWORD *)(v4 + 96);
                v40 = *(_BYTE *)(((v4 + 112) >> 3) + 0x7FFF8000);
                if ( v40 != 0 && v40 <= 3 )
                {
                  v39 = v4 + 112;
                  LOBYTE(v36) = v40 != 0;
                  __asan_report_store4(v4 + 112, v36);
                }
                *(_DWORD *)(v4 + 112) = v39;
                v41 = std::unordered_map<std::string,proto::GroupVariableType>::emplace<std::string&,proto::GroupVariableType>(
                        p_variable_name_type_map,
                        (std::string *)(v4 + 448),
                        (proto::GroupVariableType *)(v4 + 112),
                        (std::string *)p_variable_name_type_map,
                        v37);
                *(_BYTE *)(((v4 + 112) >> 3) + 0x7FFF8000) = -8;
                if ( !v41.second )
                {
                  *(_DWORD *)(((v4 + 896) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v4 + 896) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v4 + 927) >> 3) + 0x7FFF8000) != 0
                    && (char)((v4 - 97) & 7) >= *(_BYTE *)(((v4 + 927) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v4 + 896, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v4 + 896),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "loadVariableConfig",
                    2131);
                  v42 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v4 + 896),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  v43 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
                          v42,
                          (const char (*)[25])"duplicate variable name:");
                  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                    v43,
                    (const std::string *)(v4 + 448));
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 896));
                  *(_DWORD *)(((v4 + 896) >> 3) + 0x7FFF8000) = -117901064;
                  v3 = -1;
                  v17 = 0;
                }
                else
                {
                  v17 = 1;
                }
              }
            }
          }
        }
        std::string::~string((void *)(v4 + 448));
        v12 = v17 == 1;
      }
      VariableScriptConfig::~VariableScriptConfig((VariableScriptConfig *const)(v4 + 1024));
      v44 = ((v4 + 1024) >> 3) + 2147450880;
      *(_DWORD *)v44 = -117901064;
      *(_WORD *)(v44 + 4) = -1800;
      *(_BYTE *)(v44 + 6) = -8;
      *(_DWORD *)(((v4 + 448) >> 3) + 0x7FFF8000) = -117901064;
      *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) = -8;
      if ( !v12 )
      {
        v45 = 0;
        goto LABEL_62;
      }
      __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v4 + 128));
    }
    v45 = 1;
LABEL_62:
    *(_BYTE *)(((v4 + 128) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v4 + 160) >> 3) + 0x7FFF8000) = -8;
    if ( v45 == 1 )
    {
LABEL_75:
      if ( LuaConfigMgr::applyGlobalLogicState(thisa, group_script_configa) )
      {
        *(_DWORD *)(((v4 + 960) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v4 + 960) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v4 + 991) >> 3) + 0x7FFF8000) != 0
          && (char)((v4 - 33) & 7) >= *(_BYTE *)(((v4 + 991) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v4 + 960, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v4 + 960),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "loadVariableConfig",
          2138);
        v46 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v4 + 960),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v47 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                v46,
                (const char (*)[38])"applyGlobalLogicState fail, group_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v47, &group_script_configa->group_id);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 960));
        *(_DWORD *)(((v4 + 960) >> 3) + 0x7FFF8000) = -117901064;
        v3 = -1;
      }
      else
      {
        v3 = 0;
      }
    }
    std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v4 + 192));
  }
  if ( v49 == (const char (*)[6])v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8084) = 0LL;
    memset(
      (void *)((unsigned __int64)(v6 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v6 + 2147450880 - (((_DWORD)v6 + 2147450888) & 0xFFFFFFF8) + 140) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    __asan_stack_free_5(v4, 1120LL, v49);
  }
  return v3;
};

// Line 2145: range 000000000F2F20C2-000000000F2F2C55
int32_t __cdecl LuaConfigMgr::applyGlobalLogicState(LuaConfigMgr *const this, GroupScriptConfig *group_script_config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::unordered_map<unsigned int,std::set<std::string>> *p_variable_type_name_set_map; // rcx
  char v6; // al
  std::unordered_map<unsigned int,std::set<std::string>> *v7; // rdx
  char *v8; // rsi
  bool v9; // al
  int32_t v10; // r14d
  unsigned __int64 v11; // rax
  char *v12; // rsi
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rdx
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rdx
  int32_t result; // eax
  GroupScriptConfig *group_script_configa; // [rsp+0h] [rbp-2B0h]
  int32_t ret; // [rsp+14h] [rbp-29Ch]
  std::set<std::string> *logic_state_set; // [rsp+18h] [rbp-298h]
  std::unordered_map<unsigned int,std::set<std::string>> *__for_range; // [rsp+20h] [rbp-290h]
  const std::string *logic_state_0; // [rsp+30h] [rbp-280h]
  std::unordered_map<unsigned int,std::set<std::string>> *__for_range_2; // [rsp+38h] [rbp-278h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false>::reference v24; // [rsp+40h] [rbp-270h]
  std::set<std::string> *apply_logic_state_set_0; // [rsp+50h] [rbp-260h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false>::reference __in; // [rsp+58h] [rbp-258h]
  const unsigned int *config_id; // [rsp+60h] [rbp-250h]
  std::set<std::string> *__for_range_0; // [rsp+70h] [rbp-240h]
  const std::string *logic_state; // [rsp+78h] [rbp-238h]
  char v30[560]; // [rsp+80h] [rbp-230h] BYREF

  group_script_configa = group_script_config;
  v2 = (unsigned __int64)v30;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(512LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "13 32 4 9 <unknown> 48 8 9 iter:2146 80 8 9 <unknown> 112 8 16 __for_begin:2154 144 8 14 __for_e"
                        "nd:2154 176 8 16 __for_begin:2156 208 8 14 __for_end:2156 240 8 16 __for_begin:2166 272 8 14 __f"
                        "or_end:2166 304 8 16 __for_begin:2170 336 8 14 __for_end:2170 368 32 9 <unknown> 432 48 30 no_gl"
                        "obal_logic_state_set:2152";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::applyGlobalLogicState;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61956;
  v4[536862721] = -234881024;
  v4[536862722] = 62194;
  v4[536862722] = -234881024;
  v4[536862723] = 62194;
  v4[536862723] = -234881024;
  v4[536862724] = 62194;
  v4[536862724] = -234881024;
  v4[536862725] = 62194;
  v4[536862725] = -234881024;
  v4[536862726] = 62194;
  v4[536862726] = -234881024;
  v4[536862727] = 62194;
  v4[536862727] = -234881024;
  v4[536862728] = 62194;
  v4[536862728] = -234881024;
  v4[536862729] = 62194;
  v4[536862729] = -234881024;
  v4[536862730] = 62194;
  v4[536862730] = -234881024;
  v4[536862731] = 62194;
  v4[536862732] = -219021312;
  v4[536862733] = 62194;
  v4[536862735] = -202116109;
  p_variable_type_name_set_map = &group_script_config->variable_type_name_set_map;
  v6 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
  LOBYTE(group_script_config) = v6 != 0;
  if ( v6 != 0 && v6 <= 3 )
    __asan_report_store4(v2 + 32, group_script_config);
  *(_DWORD *)(v2 + 32) = 1;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 48, group_script_config);
  *(std::unordered_map<unsigned int,std::set<std::string>>::iterator *)(v2 + 48) = std::unordered_map<unsigned int,std::set<std::string>>::find(
                                                                                     p_variable_type_name_set_map,
                                                                                     (const std::unordered_map<unsigned int,std::set<std::string>>::key_type *)(v2 + 32));
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 0;
  v7 = &group_script_configa->variable_type_name_set_map;
  if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 80, v2 + 32);
  *(std::unordered_map<unsigned int,std::set<std::string>>::iterator *)(v2 + 80) = std::unordered_map<unsigned int,std::set<std::string>>::end(v7);
  v8 = (char *)(v2 + 80);
  v9 = std::__detail::operator==<std::pair<unsigned int const,std::set<std::string>>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<std::string> >,false> *)(v2 + 48),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<std::string> >,false> *)(v2 + 80));
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( v9 )
  {
    v10 = 0;
  }
  else
  {
    logic_state_set = &std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false> *const)(v2 + 48))->second;
    v11 = ((v2 + 432) >> 3) + 2147450880;
    *(_DWORD *)v11 = 0;
    *(_WORD *)(v11 + 4) = 0;
    std::set<std::string>::set((std::set<std::string> *const)(v2 + 432));
    ret = 0;
    __for_range = &group_script_configa->entity_apply_logic_state_set_map;
    *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 112, v8);
    *(std::unordered_map<unsigned int,std::set<std::string>>::iterator *)(v2 + 112) = std::unordered_map<unsigned int,std::set<std::string>>::begin(__for_range);
    *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 144, v8);
    *(std::unordered_map<unsigned int,std::set<std::string>>::iterator *)(v2 + 144) = std::unordered_map<unsigned int,std::set<std::string>>::end(__for_range);
    while ( 1 )
    {
      v12 = (char *)(v2 + 144);
      if ( !std::__detail::operator!=<std::pair<unsigned int const,std::set<std::string>>,false>(
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<std::string> >,false> *)(v2 + 112),
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<std::string> >,false> *)(v2 + 144)) )
        break;
      __in = std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string>>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false> *const)(v2 + 112));
      config_id = std::get<0ul,unsigned int const,std::set<std::string>>(__in);
      __for_range_0 = std::get<1ul,unsigned int const,std::set<std::string>>(__in);
      *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 176, v12);
      *(std::set<std::string>::iterator *)(v2 + 176) = std::set<std::string>::begin(__for_range_0);
      *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 208, v12);
      *(std::set<std::string>::iterator *)(v2 + 208) = std::set<std::string>::end(__for_range_0);
      while ( std::operator!=(
                (const std::_Rb_tree_const_iterator<std::string >::_Self *)(v2 + 176),
                (const std::_Rb_tree_const_iterator<std::string >::_Self *)(v2 + 208)) )
      {
        logic_state = std::_Rb_tree_const_iterator<std::string>::operator*((const std::_Rb_tree_const_iterator<std::string > *const)(v2 + 176));
        if ( !common::tools::MiscUtils::isContains<std::set<std::string> const,std::string>(
                logic_state_set,
                logic_state) )
        {
          *(_DWORD *)(((v2 + 368) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 368) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 399) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 113) & 7) >= *(_BYTE *)(((v2 + 399) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 368, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 368),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "applyGlobalLogicState",
            2160);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 368),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v14 = common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(v13, (const char (*)[24])byte_1A53B800);
          v15 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v14, logic_state);
          v16 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v15, (const char (*)[13])", config_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, config_id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 368));
          *(_DWORD *)(((v2 + 368) >> 3) + 0x7FFF8000) = -117901064;
          ret = -1;
        }
        std::set<std::string>::emplace<std::string const&>(
          (std::set<std::string> *const)(v2 + 432),
          logic_state,
          logic_state);
        std::_Rb_tree_const_iterator<std::string>::operator++((std::_Rb_tree_const_iterator<std::string > *const)(v2 + 176));
      }
      *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
      std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string>>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false> *const)(v2 + 112));
    }
    *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 240, v12);
    *(std::set<std::string>::iterator *)(v2 + 240) = std::set<std::string>::begin(logic_state_set);
    *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 272, v12);
    *(std::set<std::string>::iterator *)(v2 + 272) = std::set<std::string>::end(logic_state_set);
    while ( std::operator!=(
              (const std::_Rb_tree_const_iterator<std::string >::_Self *)(v2 + 240),
              (const std::_Rb_tree_const_iterator<std::string >::_Self *)(v2 + 272)) )
    {
      logic_state_0 = std::_Rb_tree_const_iterator<std::string>::operator*((const std::_Rb_tree_const_iterator<std::string > *const)(v2 + 240));
      if ( !common::tools::MiscUtils::isContains<std::set<std::string>,std::string>(
              (std::set<std::string> *)(v2 + 432),
              logic_state_0) )
      {
        __for_range_2 = &group_script_configa->entity_apply_logic_state_set_map;
        *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 304, logic_state_0);
        *(std::unordered_map<unsigned int,std::set<std::string>>::iterator *)(v2 + 304) = std::unordered_map<unsigned int,std::set<std::string>>::begin(__for_range_2);
        *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 336, logic_state_0);
        *(std::unordered_map<unsigned int,std::set<std::string>>::iterator *)(v2 + 336) = std::unordered_map<unsigned int,std::set<std::string>>::end(__for_range_2);
        while ( std::__detail::operator!=<std::pair<unsigned int const,std::set<std::string>>,false>(
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<std::string> >,false> *)(v2 + 304),
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<std::string> >,false> *)(v2 + 336)) )
        {
          v24 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string>>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false> *const)(v2 + 304));
          std::get<0ul,unsigned int const,std::set<std::string>>(v24);
          apply_logic_state_set_0 = std::get<1ul,unsigned int const,std::set<std::string>>(v24);
          std::set<std::string>::emplace<std::string const&>(apply_logic_state_set_0, logic_state_0, logic_state_0);
          std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string>>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false> *const)(v2 + 304));
        }
        *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
      }
      std::_Rb_tree_const_iterator<std::string>::operator++((std::_Rb_tree_const_iterator<std::string > *const)(v2 + 240));
    }
    *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
    v10 = ret;
    std::set<std::string>::~set((std::set<std::string> *const)(v2 + 432));
  }
  result = v10;
  if ( v30 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF803C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2180: range 000000000F2F2C56-000000000F2F387E
int32_t __cdecl LuaConfigMgr::loadPointConfig(
        LuaConfigMgr *const this,
        LuaScriptPtr *p_group_script_ptr,
        GroupScriptConfig *group_script_config)
{
  int32_t v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // r15
  char *v8; // rsi
  unsigned __int64 v9; // rax
  bool v10; // r15
  common::milog::MiLogStream *v11; // rax
  int v12; // edx
  PointScriptConfig *v13; // rax
  unsigned int *v14; // rcx
  PointScriptConfig *v15; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,PointScriptConfig>,false,false>,bool> v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  unsigned __int64 v19; // rax
  int v20; // edx
  const char (*v22)[4]; // [rsp+0h] [rbp-320h]
  GroupScriptConfig *group_script_configa; // [rsp+8h] [rbp-318h]
  LuaScriptPtr *p_group_script_ptra; // [rsp+10h] [rbp-310h]
  LuaConfigMgr *thisa; // [rsp+18h] [rbp-308h]
  std::vector<luabind::adl::object> *__for_range; // [rsp+20h] [rbp-300h]
  luabind::adl::object *point_obj; // [rsp+28h] [rbp-2F8h]
  char v28[752]; // [rsp+30h] [rbp-2F0h] BYREF

  thisa = this;
  p_group_script_ptra = p_group_script_ptr;
  group_script_configa = group_script_config;
  v4 = (unsigned __int64)v28;
  v22 = (const char (*)[4])v28;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_4(704LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "14 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 8 16 __for_begin:2188"
                        " 144 8 14 __for_end:2188 176 24 18 point_obj_vec:2185 240 32 9 <unknown> 304 32 9 <unknown> 368 "
                        "32 9 <unknown> 432 32 9 <unknown> 496 32 9 <unknown> 560 32 9 <unknown> 624 40 17 point_config:2190";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::loadPointConfig;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234753551;
  v6[536862722] = -234753535;
  v6[536862723] = 61953;
  v6[536862723] = -234881024;
  v6[536862724] = 62194;
  v6[536862724] = -234881024;
  v6[536862725] = 62194;
  v6[536862726] = -218959360;
  v6[536862727] = 62194;
  v6[536862728] = -219021312;
  v6[536862729] = 62194;
  v6[536862730] = -219021312;
  v6[536862731] = 62194;
  v6[536862732] = -219021312;
  v6[536862733] = 62194;
  v6[536862734] = -219021312;
  v6[536862735] = 62194;
  v6[536862736] = -219021312;
  v6[536862737] = 62194;
  v6[536862738] = -219021312;
  v6[536862739] = 62194;
  v6[536862740] = -218103808;
  v6[536862741] = -202116109;
  if ( std::operator==<LuaScript>(0LL, p_group_script_ptr) )
  {
    v3 = -1;
  }
  else
  {
    std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v4 + 176));
    v7 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_group_script_ptr);
    std::allocator<char>::allocator(v4 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v4 + 240),
      "points",
      (const std::allocator<char> *)(v4 + 48));
    v8 = (char *)(v4 + 240);
    LOBYTE(v7) = LuaScript::getGlobalVector<luabind::adl::object>(
                   v7,
                   (const std::string *)(v4 + 240),
                   (std::vector<luabind::adl::object> *)(v4 + 176)) == 0;
    std::string::~string((void *)(v4 + 240));
    *(_DWORD *)(((v4 + 240) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v4 + 48);
    *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( !(_BYTE)v7 )
      goto LABEL_27;
    __for_range = (std::vector<luabind::adl::object> *)(v4 + 176);
    *(_BYTE *)(((v4 + 112) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v4 + 112) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v4 + 112, v8);
    *(std::vector<luabind::adl::object>::iterator *)(v4 + 112) = std::vector<luabind::adl::object>::begin(__for_range);
    *(_BYTE *)(((v4 + 144) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v4 + 144) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v4 + 144, v8);
    *(std::vector<luabind::adl::object>::iterator *)(v4 + 144) = std::vector<luabind::adl::object>::end(__for_range);
    while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
              (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v4 + 112),
              (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v4 + 144)) )
    {
      point_obj = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v4 + 112));
      v9 = ((v4 + 624) >> 3) + 2147450880;
      *(_DWORD *)v9 = 0;
      *(_BYTE *)(v9 + 4) = 0;
      PointScriptConfig::PointScriptConfig((PointScriptConfig *const)(v4 + 624));
      *(_DWORD *)(((v4 + 304) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v4 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v4 + 304),
        "config_id",
        (const std::allocator<char> *)(v4 + 64));
      v10 = ScriptUtil::getTableValue<unsigned int,char const(&)[4],Vector3 &,char const(&)[4],Vector3 &>(
              &ScriptUtil::no_exception_instance,
              point_obj,
              (const std::string *)(v4 + 304),
              (unsigned int *)(v4 + 624),
              (const char (*)[4])off_1A536440,
              (Vector3 *)(v4 + 628),
              (const char (*)[4])off_1A536400,
              (Vector3 *)(v4 + 640),
              v22,
              (Vector3 *)group_script_configa,
              (const char (*)[4])p_group_script_ptra,
              (Vector3 *)thisa) != 0;
      std::string::~string((void *)(v4 + 304));
      *(_DWORD *)(((v4 + 304) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v4 + 64);
      *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v4 + 368) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v4 + 368) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v4 + 399) >> 3) + 0x7FFF8000) != 0
          && (char)((v4 - 113) & 7) >= *(_BYTE *)(((v4 + 399) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v4 + 368, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v4 + 368),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "loadPointConfig",
          2196);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v4 + 368),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
          v11,
          (const char (*)[42])"SCRIPT_UTIL.getTableValue point_obj fails");
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 368));
        *(_DWORD *)(((v4 + 368) >> 3) + 0x7FFF8000) = -117901064;
        v3 = -1;
        v12 = 0;
      }
      else
      {
        *(_DWORD *)(((v4 + 432) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v4 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v4 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v4 + 432),
          "area_id",
          (const std::allocator<char> *)(v4 + 80));
        ScriptUtil::getTableValue<unsigned int>(
          &ScriptUtil::no_exception_instance,
          point_obj,
          (const std::string *)(v4 + 432),
          (unsigned int *)(v4 + 652));
        std::string::~string((void *)(v4 + 432));
        *(_DWORD *)(((v4 + 432) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v4 + 80);
        *(_BYTE *)(((v4 + 80) >> 3) + 0x7FFF8000) = -8;
        *(_DWORD *)(((v4 + 496) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v4 + 96);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v4 + 496),
          off_1A537DC0,
          (const std::allocator<char> *)(v4 + 96));
        ScriptUtil::getTableValue<unsigned long>(
          &ScriptUtil::no_exception_instance,
          point_obj,
          (const std::string *)(v4 + 496),
          (unsigned __int64 *)(v4 + 656));
        std::string::~string((void *)(v4 + 496));
        *(_DWORD *)(((v4 + 496) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v4 + 96);
        *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) = -8;
        v13 = std::move<PointScriptConfig &>((PointScriptConfig *)(v4 + 624));
        v16 = std::unordered_map<unsigned int,PointScriptConfig>::emplace<unsigned int &,PointScriptConfig>(
                &group_script_configa->point_config_map,
                (unsigned int *)(v4 + 624),
                v13,
                v14,
                v15);
        if ( !v16.second )
        {
          *(_DWORD *)(((v4 + 560) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v4 + 560) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v4 + 591) >> 3) + 0x7FFF8000) != 0
            && (char)((v4 + 79) & 7) >= *(_BYTE *)(((v4 + 591) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v4 + 560, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v4 + 560),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadPointConfig",
            2203);
          v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v4 + 560),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v18 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v17, (const char (*)[26])byte_1A53BA60);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, (const unsigned int *)(v4 + 624));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 560));
          *(_DWORD *)(((v4 + 560) >> 3) + 0x7FFF8000) = -117901064;
          v3 = -1;
          v12 = 0;
        }
        else
        {
          v12 = 1;
        }
      }
      v19 = ((v4 + 624) >> 3) + 2147450880;
      *(_DWORD *)v19 = -117901064;
      *(_BYTE *)(v19 + 4) = -8;
      if ( v12 != 1 )
      {
        v20 = 0;
        goto LABEL_26;
      }
      __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v4 + 112));
    }
    v20 = 1;
LABEL_26:
    *(_BYTE *)(((v4 + 112) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v4 + 144) >> 3) + 0x7FFF8000) = -8;
    if ( v20 == 1 )
LABEL_27:
      v3 = 0;
    std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v4 + 176));
  }
  if ( v22 == (const char (*)[4])v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8050) = 0LL;
    memset(
      (void *)((unsigned __int64)(v6 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v6 + 2147450880 - (((_DWORD)v6 + 2147450888) & 0xFFFFFFF8) + 88) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return v3;
};

// Line 2212: range 000000000F2F3880-000000000F2F96D4
__int64 __fastcall LuaConfigMgr::loadGroupInfoScriptConfig(
        LuaConfigMgr *const this,
        const luabind::adl::object *group_obj,
        std::vector<std::string> *group_info_script_config,
        uint32_t scene_id,
        uint32_t activity_id)
{
  unsigned int v5; // r15d
  unsigned __int64 v6; // r14
  __int64 v7; // rax
  _DWORD *v8; // r12
  bool v9; // r13
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  __int64 v14; // rsi
  uint32_t M_start; // ecx
  char v16; // al
  unsigned __int64 v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rax
  __int64 v22; // rsi
  __int64 v23; // rdx
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  __int64 v28; // rsi
  __int64 v29; // rdx
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  common::milog::MiLogStream *v33; // rax
  bool v34; // r13
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // rax
  unsigned __int64 v39; // rax
  const char *v40; // rsi
  bool v41; // r13
  common::milog::MiLogStream *v42; // rax
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  int v45; // eax
  unsigned int v46; // ecx
  common::milog::MiLogStream *v47; // rax
  common::milog::MiLogStream *v48; // rax
  common::milog::MiLogStream *v49; // rax
  int v50; // edx
  bool v51; // r13
  bool v52; // r13
  common::milog::MiLogStream *v53; // rcx
  bool v54; // r13
  common::milog::MiLogStream *v55; // rcx
  bool v56; // r13
  common::milog::MiLogStream *v57; // rcx
  bool v58; // r13
  bool v59; // r13
  common::milog::MiLogStream *v60; // rcx
  std::vector<std::string>::size_type v61; // rsi
  bool *v62; // rsi
  char v63; // al
  common::milog::MiLogStream *v64; // rax
  common::milog::MiLogStream *v65; // rax
  common::milog::MiLogStream *v66; // rax
  common::milog::MiLogStream *v67; // rax
  common::milog::MiLogStream *v68; // rax
  common::milog::MiLogStream *v69; // rax
  int v70; // edx
  std::vector<unsigned int> *p_forbid_monster_die_type_vec; // rcx
  int v72; // edi
  char v73; // al
  int v74; // edx
  __int64 v75; // rsi
  __int64 v76; // rdx
  common::milog::MiLogStream *v77; // rcx
  __int64 v78; // rsi
  __int64 v79; // rdx
  common::milog::MiLogStream *v80; // rcx
  bool *v81; // rsi
  std::unordered_map<unsigned int,unsigned int>::mapped_type *v82; // rax
  _DWORD *v83; // rdx
  char v84; // cl
  bool v85; // r13
  common::milog::MiLogStream *v86; // rax
  bool v87; // r13
  common::milog::MiLogStream *v88; // rax
  __int64 v89; // rsi
  uint32_t type; // ecx
  char v91; // al
  uint32_t sub_type; // ecx
  char v93; // al
  std::unordered_map<unsigned int,std::vector<unsigned int>> *v94; // rax
  std::vector<unsigned int> *v95; // rax
  bool v96; // r13
  unsigned __int64 v97; // rax
  bool *v98; // rsi
  common::milog::MiLogStream *v99; // rax
  _BOOL4 v100; // r13d
  const std::set<data::EventType> *v101; // rsi
  unsigned int *v102; // rax
  int *v103; // rdx
  int v104; // ecx
  char v105; // al
  common::milog::MiLogStream *v106; // rax
  common::milog::MiLogStream *v107; // rax
  int v108; // eax
  int v109; // ecx
  char v110; // al
  bool v111; // al
  common::milog::MiLogStream *v112; // rax
  common::milog::MiLogStream *v113; // rax
  std::unordered_set<unsigned int> *v114; // rax
  int v115; // edx
  unsigned __int64 v116; // rax
  bool v117; // r13
  unsigned __int64 v118; // rax
  bool *v119; // rsi
  common::milog::MiLogStream *v120; // rax
  _BOOL4 v121; // r13d
  __int64 v122; // rsi
  unsigned int v123; // ecx
  char v124; // al
  std::unordered_map<data::EventType,std::unordered_set<unsigned int>> *p_register_event_type_group_id_set_map; // rdx
  std::unordered_map<data::EventType,std::unordered_set<unsigned int>> *v126; // rdx
  std::__detail::_Node_iterator<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false,false>::pointer v127; // rax
  bool v128; // dl
  common::milog::MiLogStream *v129; // rax
  common::milog::MiLogStream *v130; // rax
  common::milog::MiLogStream *v131; // rax
  common::milog::MiLogStream *v132; // rax
  _BOOL4 v133; // eax
  unsigned __int64 v134; // rax
  common::milog::MiLogStream *v135; // rax
  int v136; // r13d
  bool *v137; // rsi
  unsigned int *v138; // rax
  int *v139; // rdx
  int v140; // ecx
  char v141; // al
  std::unordered_set<unsigned int> *v142; // rax
  unsigned __int64 v143; // rax
  common::milog::MiLogStream *v144; // rax
  common::milog::MiLogStream *v145; // rax
  common::milog::MiLogStream *v146; // rax
  common::milog::MiLogStream *v147; // rax
  int v148; // edx
  unsigned __int64 v149; // rax
  const char (*v151)[4]; // [rsp+0h] [rbp-1200h]
  const char (*v152)[5]; // [rsp+0h] [rbp-1200h]
  const char (*v153)[3]; // [rsp+0h] [rbp-1200h]
  unsigned int *val; // [rsp+8h] [rbp-11F8h]
  unsigned int *vala; // [rsp+8h] [rbp-11F8h]
  bool *v156; // [rsp+68h] [rbp-1198h]
  const char (*__l)[23]; // [rsp+70h] [rbp-1190h]
  std::initializer_list<data::EventType> __la; // [rsp+70h] [rbp-1190h]
  bool *__l_8; // [rsp+78h] [rbp-1188h]
  const char (*activity_ida)[25]; // [rsp+80h] [rbp-1180h]
  uint32_t activity_idb; // [rsp+80h] [rbp-1180h]
  GroupInfoScriptConfig *group_info_script_configb; // [rsp+88h] [rbp-1178h]
  const luabind::adl::object *group_objb; // [rsp+90h] [rbp-1170h]
  LuaConfigMgr *thisa; // [rsp+98h] [rbp-1168h]
  const char (*v167)[30]; // [rsp+A0h] [rbp-1160h]
  unsigned int *ret; // [rsp+A8h] [rbp-1158h]
  int32_t reta; // [rsp+A8h] [rbp-1158h]
  int32_t ret_0; // [rsp+ACh] [rbp-1154h]
  std::vector<luabind::adl::object> *__for_range; // [rsp+B0h] [rbp-1150h]
  std::vector<luabind::adl::object> *__for_rangea; // [rsp+B0h] [rbp-1150h]
  unsigned int *life_obj; // [rsp+B8h] [rbp-1148h]
  luabind::adl::object *life_obja; // [rsp+B8h] [rbp-1148h]
  GroupReplaceableInfo *replaceable_info; // [rsp+C0h] [rbp-1140h]
  bool *business_info; // [rsp+C8h] [rbp-1138h]
  std::vector<std::string> *__for_range_0; // [rsp+D0h] [rbp-1130h]
  const std::string *change_hp_type_str; // [rsp+D8h] [rbp-1128h]
  std::set<unsigned int> *__for_range_1; // [rsp+E0h] [rbp-1120h]
  std::map<unsigned int,luabind::adl::object> *__for_range_2; // [rsp+E8h] [rbp-1118h]
  std::_Rb_tree_iterator<std::pair<unsigned int const,luabind::adl::object> >::reference v181; // [rsp+F0h] [rbp-1110h]
  std::tuple_element<0,std::pair<unsigned int const,luabind::adl::object> >::type *event_type_uint; // [rsp+F8h] [rbp-1108h]
  std::tuple_element<1,const std::pair<unsigned int const,luabind::adl::object> >::type *condition_obj; // [rsp+100h] [rbp-1100h]
  std::set<unsigned int> *__for_range_3; // [rsp+108h] [rbp-10F8h]
  bool v185[4336]; // [rsp+110h] [rbp-10F0h] BYREF

  activity_ida = (const char (*)[25])__PAIR64__(scene_id, activity_id);
  v6 = (unsigned __int64)v185;
  v156 = v185;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v7 = __asan_stack_malloc_7(4288LL);
    if ( v7 )
      v6 = v7;
  }
  *(_QWORD *)v6 = 1102416563LL;
  *(_QWORD *)(v6 + 8) = "100 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9"
                        " <unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unkn"
                        "own> 208 1 9 <unknown> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 2"
                        "88 1 9 <unknown> 304 1 9 <unknown> 320 1 9 <unknown> 336 4 13 group_id:2226 352 4 21 change_hp_r"
                        "eason:2345 368 4 9 <unknown> 384 4 15 group_type:2386 400 4 19 group_sub_type:2387 416 4 20 even"
                        "t_type_uint:2402 432 4 16 entity_type:2412 448 4 15 event_type:2435 464 4 13 chain_id:2457 480 4"
                        " 13 scene_id:2211 496 8 16 group_id_64:2213 528 8 16 __for_begin:2274 560 8 14 __for_end:2274 59"
                        "2 8 22 group_life_config:2276 624 8 16 __for_begin:2343 656 8 14 __for_end:2343 688 8 9 <unknown"
                        "> 720 8 16 __for_begin:2402 752 8 14 __for_end:2402 784 8 9 <unknown> 816 8 9 <unknown> 848 8 9 "
                        "<unknown> 880 8 16 __for_begin:2433 912 8 14 __for_end:2433 944 8 33 event_type_group_id_set_ite"
                        "r:2438 976 8 9 <unknown> 1008 8 16 __for_begin:2457 1040 8 14 __for_end:2457 1072 16 17 weathers"
                        "_obj:2263 1104 16 23 is_replaceable_obj:2293 1136 16 17 business_obj:2323 1168 16 38 related_lev"
                        "el_tag_series_list_obj:2365 1200 16 23 group_tag_list_obj:2375 1232 16 39 group_register_event_t"
                        "ype_list_obj:2393 1264 16 24 event_condition_obj:2423 1296 24 36 forbid_monster_die_type_str_vec"
                        ":2227 1360 24 20 life_config_vec:2272 1424 32 9 <unknown> 1488 32 9 <unknown> 1552 32 9 <unknown"
                        "> 1616 32 9 <unknown> 1680 32 9 <unknown> 1744 32 9 <unknown> 1808 32 9 <unknown> 1872 32 9 <unk"
                        "nown> 1936 32 9 <unknown> 2000 32 9 <unknown> 2064 32 9 <unknown> 2128 32 9 <unknown> 2192 32 9 "
                        "<unknown> 2256 32 9 <unknown> 2320 32 9 <unknown> 2384 32 9 <unknown> 2448 32 9 <unknown> 2512 3"
                        "2 9 <unknown> 2576 32 9 <unknown> 2640 32 9 <unknown> 2704 32 9 <unknown> 2768 32 9 <unknown> 28"
                        "32 32 9 <unknown> 2896 32 9 <unknown> 2960 32 9 <unknown> 3024 32 9 <unknown> 3088 32 9 <unknown"
                        "> 3152 32 9 <unknown> 3216 32 9 <unknown> 3280 32 9 <unknown> 3344 32 9 <unknown> 3408 32 9 <unk"
                        "nown> 3472 32 9 <unknown> 3536 32 9 <unknown> 3600 32 9 <unknown> 3664 32 9 <unknown> 3728 32 9 "
                        "<unknown> 3792 32 9 <unknown> 3856 32 9 <unknown> 3920 32 9 <unknown> 3984 32 9 <unknown> 4048 4"
                        "8 34 group_register_event_type_set:2396 4128 48 36 event_type_to_condition_obj_map:2426 4208 48 "
                        "17 chain_id_set:2450";
  *(_QWORD *)(v6 + 16) = LuaConfigMgr::loadGroupInfoScriptConfig;
  v8 = (_DWORD *)(v6 >> 3);
  v8[536862720] = -235802127;
  v8[536862721] = -234753535;
  v8[536862722] = -234753535;
  v8[536862723] = -234753535;
  v8[536862724] = -234753535;
  v8[536862725] = -234753535;
  v8[536862726] = -234753535;
  v8[536862727] = -234753535;
  v8[536862728] = -234753535;
  v8[536862729] = -234753535;
  v8[536862730] = -234556927;
  v8[536862731] = -234556924;
  v8[536862732] = -234556924;
  v8[536862733] = -234556924;
  v8[536862734] = -234556924;
  v8[536862735] = 61956;
  v8[536862735] = -234881024;
  v8[536862736] = 62194;
  v8[536862736] = -234881024;
  v8[536862737] = 62194;
  v8[536862737] = -234881024;
  v8[536862738] = 62194;
  v8[536862738] = -234881024;
  v8[536862739] = 62194;
  v8[536862739] = -234881024;
  v8[536862740] = 62194;
  v8[536862740] = -234881024;
  v8[536862741] = 62194;
  v8[536862741] = -234881024;
  v8[536862742] = 62194;
  v8[536862742] = -234881024;
  v8[536862743] = 62194;
  v8[536862743] = -234881024;
  v8[536862744] = 62194;
  v8[536862744] = -234881024;
  v8[536862745] = 62194;
  v8[536862745] = -234881024;
  v8[536862746] = 62194;
  v8[536862746] = -234881024;
  v8[536862747] = 62194;
  v8[536862747] = -234881024;
  v8[536862748] = 62194;
  v8[536862748] = -234881024;
  v8[536862749] = 62194;
  v8[536862749] = -234881024;
  v8[536862750] = 62194;
  v8[536862750] = -234881024;
  v8[536862751] = 62194;
  v8[536862751] = -234881024;
  v8[536862752] = 62194;
  v8[536862752] = -234881024;
  v8[536862753] = 62194;
  v8[536862754] = 62194;
  v8[536862755] = 62194;
  v8[536862756] = 62194;
  v8[536862757] = 62194;
  v8[536862758] = 62194;
  v8[536862759] = 62194;
  v8[536862760] = 62194;
  v8[536862761] = -218959360;
  v8[536862762] = 62194;
  v8[536862763] = -218959360;
  v8[536862764] = 62194;
  v8[536862765] = -219021312;
  v8[536862766] = 62194;
  v8[536862767] = -219021312;
  v8[536862768] = 62194;
  v8[536862769] = -219021312;
  v8[536862770] = 62194;
  v8[536862771] = -219021312;
  v8[536862772] = 62194;
  v8[536862773] = -219021312;
  v8[536862774] = 62194;
  v8[536862775] = -219021312;
  v8[536862776] = 62194;
  v8[536862777] = -219021312;
  v8[536862778] = 62194;
  v8[536862779] = -219021312;
  v8[536862780] = 62194;
  v8[536862781] = -219021312;
  v8[536862782] = 62194;
  v8[536862783] = -219021312;
  v8[536862784] = 62194;
  v8[536862785] = -219021312;
  v8[536862786] = 62194;
  v8[536862787] = -219021312;
  v8[536862788] = 62194;
  v8[536862789] = -219021312;
  v8[536862790] = 62194;
  v8[536862791] = -219021312;
  v8[536862792] = 62194;
  v8[536862793] = -219021312;
  v8[536862794] = 62194;
  v8[536862795] = -219021312;
  v8[536862796] = 62194;
  v8[536862797] = -219021312;
  v8[536862798] = 62194;
  v8[536862799] = -219021312;
  v8[536862800] = 62194;
  v8[536862801] = -219021312;
  v8[536862802] = 62194;
  v8[536862803] = -219021312;
  v8[536862804] = 62194;
  v8[536862805] = -219021312;
  v8[536862806] = 62194;
  v8[536862807] = -219021312;
  v8[536862808] = 62194;
  v8[536862809] = -219021312;
  v8[536862810] = 62194;
  v8[536862811] = -219021312;
  v8[536862812] = 62194;
  v8[536862813] = -219021312;
  v8[536862814] = 62194;
  v8[536862815] = -219021312;
  v8[536862816] = 62194;
  v8[536862817] = -219021312;
  v8[536862818] = 62194;
  v8[536862819] = -219021312;
  v8[536862820] = 62194;
  v8[536862821] = -219021312;
  v8[536862822] = 62194;
  v8[536862823] = -219021312;
  v8[536862824] = 62194;
  v8[536862825] = -219021312;
  v8[536862826] = 62194;
  v8[536862827] = -219021312;
  v8[536862828] = 62194;
  v8[536862829] = -219021312;
  v8[536862830] = 62194;
  v8[536862831] = -219021312;
  v8[536862832] = 62194;
  v8[536862833] = -219021312;
  v8[536862834] = 62194;
  v8[536862835] = -219021312;
  v8[536862836] = 62194;
  v8[536862837] = -219021312;
  v8[536862838] = 62194;
  v8[536862839] = -219021312;
  v8[536862840] = 62194;
  v8[536862841] = -219021312;
  v8[536862842] = 62194;
  v8[536862843] = -219021312;
  v8[536862844] = 62194;
  v8[536862845] = -219021312;
  v8[536862846] = 62194;
  v8[536862848] = -218959118;
  v8[536862850] = -219021312;
  v8[536862851] = 62194;
  v8[536862853] = -202116109;
  *(_DWORD *)(v6 + 480) = HIDWORD(activity_ida);
  if ( *(_BYTE *)(((v6 + 496) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v6 + 496, group_obj);
  *(_QWORD *)(v6 + 496) = 0LL;
  std::allocator<char>::allocator(v6 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v6 + 1424),
    "id",
    (const std::allocator<char> *)(v6 + 32));
  v9 = ScriptUtil::getTableValue<unsigned long,char const(&)[4],Vector3 &>(
         &ScriptUtil::no_exception_instance,
         group_obj,
         (const std::string *)(v6 + 1424),
         (unsigned __int64 *)(v6 + 496),
         (const char (*)[4])off_1A536440,
         (Vector3 *)&group_info_script_config->_M_impl._M_finish,
         v151,
         (Vector3 *)val) != 0;
  std::string::~string((void *)(v6 + 1424));
  *(_DWORD *)(((v6 + 1424) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v6 + 32);
  *(_BYTE *)(((v6 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v9 )
  {
    *(_DWORD *)(((v6 + 1488) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v6 + 1488) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v6 + 1519) >> 3) + 0x7FFF8000) != 0
      && (char)((v6 - 64 + 47) & 7) >= *(_BYTE *)(((v6 + 1519) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v6 + 1488, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v6 + 1488),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadGroupInfoScriptConfig",
      2216);
    v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v6 + 1488),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v11 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
            v10,
            (const char (*)[43])"getGlobalVector group_obj fails, scene_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v6 + 480));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 1488));
    v5 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((v6 + 496) >> 3) + 0x7FFF8000) )
      __asan_report_load8(v6 + 496);
    if ( *(_QWORD *)(v6 + 496) && *(_QWORD *)(v6 + 496) <= 0xFFFFFFFFuLL )
    {
      if ( *(_BYTE *)(((v6 + 496) >> 3) + 0x7FFF8000) )
        __asan_report_load8(v6 + 496);
      v14 = (unsigned int)*(_QWORD *)(v6 + 496);
      if ( *(_BYTE *)(((unsigned __int64)group_info_script_config >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)group_info_script_config >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_store4(group_info_script_config, v14);
      }
      LODWORD(group_info_script_config->_M_impl._M_start) = v14;
      *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) = 4;
      M_start = (uint32_t)group_info_script_config->_M_impl._M_start;
      v16 = *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000);
      if ( v16 != 0 && v16 <= 3 )
      {
        LOBYTE(v14) = v16 != 0;
        __asan_report_store4(v6 + 336, v14);
      }
      *(_DWORD *)(v6 + 336) = M_start;
      v17 = ((v6 + 1296) >> 3) + 2147450880;
      *(_WORD *)v17 = 0;
      *(_BYTE *)(v17 + 2) = 0;
      std::vector<std::string>::vector((std::vector<std::string> *const)(v6 + 1296));
      *(_DWORD *)(((v6 + 1616) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v6 + 48) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v6 + 48);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v6 + 1616),
        "refresh_id",
        (const std::allocator<char> *)(v6 + 48));
      ScriptUtil::getTableValue<unsigned int,char const(&)[5],unsigned int &,char const(&)[13],bool &,char const(&)[23],bool &,char const(&)[14],proto::GroupLoadStrategy &,char const(&)[29],bool &,char const(&)[21],bool &,char const(&)[20],bool &,char const(&)[23],bool &,char const(&)[25],std::vector<std::string> &,char const(&)[12],unsigned int &,char const(&)[30],unsigned int &,char const(&)[41],unsigned int &,char const(&)[23],bool &>(
        &ScriptUtil::no_exception_instance,
        group_obj,
        (const std::string *)(v6 + 1616),
        (unsigned int *)&group_info_script_config[1],
        (const char (*)[5])"area",
        (unsigned int *)&group_info_script_config->_M_impl._M_end_of_storage + 1,
        (const char (*)[13])"dynamic_load",
        (bool *)&group_info_script_config[2]._M_impl._M_finish,
        (const char (*)[23])"unload_when_disconnect",
        (bool *)&group_info_script_config[7],
        (const char (*)[14])"load_strategy",
        (proto::GroupLoadStrategy *)&group_info_script_config[7]._M_impl._M_start + 1,
        (const char (*)[29])"is_ignore_world_level_revise",
        (bool *)&group_info_script_config[8],
        (const char (*)[21])"force_unload_nodelay",
        (bool *)&group_info_script_config[8]._M_impl._M_finish + 4,
        (const char (*)[20])"force_silent_reload",
        (bool *)&group_info_script_config[8]._M_impl._M_end_of_storage + 4,
        (const char (*)[23])"force_clean_sub_entity",
        (bool *)&group_info_script_config[8]._M_impl._M_end_of_storage + 5,
        (const char (*)[25])"forbid_monster_die_types",
        (std::vector<std::string> *)(v6 + 1296),
        (const char (*)[12])"vision_type",
        (unsigned int *)&group_info_script_config[10],
        (const char (*)[30])"activity_revise_level_grow_id",
        (unsigned int *)&group_info_script_config[10]._M_impl._M_start + 1,
        (const char (*)[41])"rely_start_world_level_limit_activity_id",
        (unsigned int *)&group_info_script_config[12]._M_impl._M_finish,
        (const char (*)[23])"is_load_by_vision_type",
        (bool *)&group_info_script_config[12]._M_impl._M_finish + 4,
        v152,
        (unsigned int *)&group_info_script_config[1],
        (const char (*)[13])((char *)&group_info_script_config->_M_impl._M_end_of_storage + 4),
        (bool *)&group_info_script_config[2]._M_impl._M_finish,
        (const char (*)[23])&group_info_script_config[7],
        (bool *)&group_info_script_config[7]._M_impl._M_start + 4,
        (const char (*)[14])&group_info_script_config[8],
        (proto::GroupLoadStrategy *)&group_info_script_config[8]._M_impl._M_finish + 1,
        (const char (*)[29])((char *)&group_info_script_config[8]._M_impl._M_end_of_storage + 4),
        (bool *)&group_info_script_config[8]._M_impl._M_end_of_storage + 5,
        (const char (*)[21])&group_info_script_config[10],
        (bool *)&group_info_script_config[10]._M_impl._M_start + 4,
        (const char (*)[20])&group_info_script_config[12]._M_impl._M_finish,
        v185,
        __l,
        __l_8,
        activity_ida,
        group_info_script_config,
        (const char (*)[12])group_obj,
        (unsigned int *)this,
        v167,
        ret,
        (const char (*)[41])__for_range,
        life_obj,
        (const char (*)[23])replaceable_info,
        business_info);
      std::string::~string((void *)(v6 + 1616));
      *(_DWORD *)(((v6 + 1616) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v6 + 48);
      *(_BYTE *)(((v6 + 48) >> 3) + 0x7FFF8000) = -8;
      if ( *(_BYTE *)(((unsigned __int64)&group_info_script_configb->rely_start_world_level_limit_activity_id >> 3)
                    + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&group_info_script_configb->rely_start_world_level_limit_activity_id >> 3)
                    + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&group_info_script_configb->rely_start_world_level_limit_activity_id);
      }
      if ( group_info_script_configb->rely_start_world_level_limit_activity_id )
      {
        *(_DWORD *)(((v6 + 1680) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v6 + 1680) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v6 + 1711) >> 3) + 0x7FFF8000) != 0
          && (char)((v6 - 112 + 31) & 7) >= *(_BYTE *)(((v6 + 1711) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v6 + 1680, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v6 + 1680),
          &common::milog::MiLogDefault::default_log_obj_,
          2u,
          "./src/lua_config_mgr.cpp",
          "loadGroupInfoScriptConfig",
          2245);
        v18 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                (common::milog::MiLogStream *const)(v6 + 1680),
                (const char (*)[15])"[CONFIG_INFO] ");
        v19 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                v18,
                (const char (*)[43])"rely_start_world_level_limit_activity_id: ");
        v20 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v19,
                &group_info_script_configb->rely_start_world_level_limit_activity_id);
        v21 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v20, (const char (*)[9])" @group:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, (const unsigned int *)(v6 + 336));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 1680));
        *(_DWORD *)(((v6 + 1680) >> 3) + 0x7FFF8000) = -117901064;
      }
      v22 = ((_BYTE)group_info_script_configb + 44) & 7;
      v23 = (*(_BYTE *)(((unsigned __int64)&group_info_script_configb->is_load_by_vision_type >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v22 >= *(_BYTE *)(((unsigned __int64)&group_info_script_configb->is_load_by_vision_type >> 3) + 0x7FFF8000));
      if ( (_BYTE)v23 )
        __asan_report_load1(&group_info_script_configb->is_load_by_vision_type, v22, v23);
      if ( !group_info_script_configb->is_load_by_vision_type )
        goto LABEL_38;
      if ( *(_BYTE *)(((unsigned __int64)&group_info_script_configb->vision_type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&group_info_script_configb->vision_type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&group_info_script_configb->vision_type);
      }
      if ( group_info_script_configb->vision_type )
      {
LABEL_38:
        v28 = ((_BYTE)group_info_script_configb + 44) & 7;
        v29 = (*(_BYTE *)(((unsigned __int64)&group_info_script_configb->is_load_by_vision_type >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v28 >= *(_BYTE *)(((unsigned __int64)&group_info_script_configb->is_load_by_vision_type >> 3) + 0x7FFF8000));
        if ( (_BYTE)v29 )
          __asan_report_load1(&group_info_script_configb->is_load_by_vision_type, v28, v29);
        if ( !group_info_script_configb->is_load_by_vision_type )
          goto LABEL_47;
        if ( *(char *)(((unsigned __int64)&group_info_script_configb->is_dynamic_load >> 3) + 0x7FFF8000) < 0 )
          __asan_report_load1(
            &group_info_script_configb->is_dynamic_load,
            v28,
            &group_info_script_configb->is_dynamic_load);
        if ( group_info_script_configb->is_dynamic_load )
        {
          *(_DWORD *)(((v6 + 1808) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v6 + 1808) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v6 + 1839) >> 3) + 0x7FFF8000) != 0
            && (char)((v6 - 64 + 111) & 7) >= *(_BYTE *)(((v6 + 1839) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v6 + 1808, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v6 + 1808),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadGroupInfoScriptConfig",
            2256);
          v30 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v6 + 1808),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v31 = common::milog::MiLogStream::operator<<<char [76],(char *[76])0>(
                  v30,
                  (const char (*)[76])"if group is_load_by_vision_type is true, cannot be dynamic group, scene_id:");
          v32 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v31,
                  (const unsigned int *)(v6 + 480));
          v33 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v32, (const char (*)[11])" group_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v33, (const unsigned int *)(v6 + 336));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 1808));
          *(_DWORD *)(((v6 + 1808) >> 3) + 0x7FFF8000) = -117901064;
          v5 = -1;
        }
        else
        {
LABEL_47:
          *(_DWORD *)(((v6 + 1872) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v6 + 64) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v6 + 64);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v6 + 1872),
            "across_block",
            (const std::allocator<char> *)(v6 + 64));
          ScriptUtil::getTableValue<bool>(
            &ScriptUtil::no_exception_instance,
            group_objb,
            (const std::string *)(v6 + 1872),
            &group_info_script_configb->is_across_block);
          std::string::~string((void *)(v6 + 1872));
          *(_DWORD *)(((v6 + 1872) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v6 + 64);
          *(_BYTE *)(((v6 + 64) >> 3) + 0x7FFF8000) = -8;
          *(_WORD *)(((v6 + 1072) >> 3) + 0x7FFF8000) = 0;
          luabind::adl::object::object((luabind::adl::object *const)(v6 + 1072));
          *(_DWORD *)(((v6 + 1936) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v6 + 80) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v6 + 80);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v6 + 1936),
            "weathers",
            (const std::allocator<char> *)(v6 + 80));
          v34 = ScriptUtil::getTableValue(
                  &ScriptUtil::no_exception_instance,
                  group_objb,
                  (const std::string *)(v6 + 1936),
                  (luabind::adl::object *)(v6 + 1072)) == 0;
          std::string::~string((void *)(v6 + 1936));
          *(_DWORD *)(((v6 + 1936) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v6 + 80);
          *(_BYTE *)(((v6 + 80) >> 3) + 0x7FFF8000) = -8;
          if ( v34
            && ScriptUtil::getTableValueAsSet<unsigned int>(
                 &ScriptUtil::no_exception_instance,
                 (const luabind::adl::object *)(v6 + 1072),
                 &group_info_script_configb->weather_set) )
          {
            *(_DWORD *)(((v6 + 2000) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v6 + 2000) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v6 + 2031) >> 3) + 0x7FFF8000) != 0
              && (char)((v6 - 64 + 47) & 7) >= *(_BYTE *)(((v6 + 2031) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v6 + 2000, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v6 + 2000),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "loadGroupInfoScriptConfig",
              2268);
            v35 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v6 + 2000),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v36 = common::milog::MiLogStream::operator<<<char [61],(char *[61])0>(
                    v35,
                    (const char (*)[61])"SCRIPT_UTIL.getTableValueAsSet weathers_obj fails, scene_id:");
            v37 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v36,
                    (const unsigned int *)(v6 + 480));
            v38 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v37, (const char (*)[11])" group_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v38,
              (const unsigned int *)(v6 + 336));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 2000));
            *(_DWORD *)(((v6 + 2000) >> 3) + 0x7FFF8000) = -117901064;
            v5 = -1;
          }
          else
          {
            v39 = ((v6 + 1360) >> 3) + 2147450880;
            *(_WORD *)v39 = 0;
            *(_BYTE *)(v39 + 2) = 0;
            std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v6 + 1360));
            *(_DWORD *)(((v6 + 2064) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v6 + 96) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v6 + 96);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v6 + 2064),
              "life_cycle",
              (const std::allocator<char> *)(v6 + 96));
            ScriptUtil::getTableValue<std::vector<luabind::adl::object>>(
              &ScriptUtil::no_exception_instance,
              group_objb,
              (const std::string *)(v6 + 2064),
              (std::vector<luabind::adl::object> *)(v6 + 1360));
            std::string::~string((void *)(v6 + 2064));
            *(_DWORD *)(((v6 + 2064) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v6 + 96);
            *(_BYTE *)(((v6 + 96) >> 3) + 0x7FFF8000) = -8;
            __for_rangea = (std::vector<luabind::adl::object> *)(v6 + 1360);
            *(_BYTE *)(((v6 + 528) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((v6 + 528) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v6 + 528, group_objb);
            *(std::vector<luabind::adl::object>::iterator *)(v6 + 528) = std::vector<luabind::adl::object>::begin(__for_rangea);
            *(_BYTE *)(((v6 + 560) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((v6 + 560) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v6 + 560, group_objb);
            *(std::vector<luabind::adl::object>::iterator *)(v6 + 560) = std::vector<luabind::adl::object>::end(__for_rangea);
            while ( 1 )
            {
              v40 = (const char *)(v6 + 560);
              if ( !__gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                      (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v6 + 528),
                      (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v6 + 560)) )
                break;
              life_obja = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v6 + 528));
              *(_BYTE *)(((v6 + 592) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v6 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v6 + 592) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_store4(v6 + 592, v40);
              *(_DWORD *)(v6 + 592) = 0;
              if ( *(_BYTE *)(((v6 + 596) >> 3) + 0x7FFF8000) != 0
                && (char)(((v6 + 84) & 7) + 3) >= *(_BYTE *)(((v6 + 596) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store4(v6 + 596, (((_BYTE)v6 + 84) & 7u) + 3);
              }
              *(_DWORD *)(v6 + 596) = 0;
              *(_DWORD *)(((v6 + 2128) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v6 + 112) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v6 + 112);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v6 + 2128),
                "from",
                (const std::allocator<char> *)(v6 + 112));
              v41 = ScriptUtil::getTableValue<unsigned int,char const(&)[3],unsigned int &>(
                      &ScriptUtil::no_exception_instance,
                      life_obja,
                      (const std::string *)(v6 + 2128),
                      (unsigned int *)(v6 + 592),
                      (const char (*)[3])"to",
                      (unsigned int *)(v6 + 596),
                      v153,
                      vala) != 0;
              std::string::~string((void *)(v6 + 2128));
              *(_DWORD *)(((v6 + 2128) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v6 + 112);
              *(_BYTE *)(((v6 + 112) >> 3) + 0x7FFF8000) = -8;
              if ( v41 )
              {
                *(_DWORD *)(((v6 + 2192) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v6 + 2192) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v6 + 2223) >> 3) + 0x7FFF8000) != 0
                  && (char)((v6 - 112 + 31) & 7) >= *(_BYTE *)(((v6 + 2223) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v6 + 2192, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v6 + 2192),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "loadGroupInfoScriptConfig",
                  2279);
                v42 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v6 + 2192),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v43 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                        v42,
                        (const char (*)[11])"group_id: ");
                v44 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v43,
                        (const unsigned int *)(v6 + 336));
                v40 = " life_cycle error";
                common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(
                  v44,
                  (const char (*)[18])" life_cycle error");
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 2192));
                *(_DWORD *)(((v6 + 2192) >> 3) + 0x7FFF8000) = -117901064;
                v5 = -1;
                v45 = 0;
              }
              else
              {
                if ( *(_BYTE *)(((v6 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v6 + 592) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_load4(v6 + 592);
                v46 = *(_DWORD *)(v6 + 592);
                if ( *(_BYTE *)(((v6 + 596) >> 3) + 0x7FFF8000) != 0
                  && (char)(((v6 + 84) & 7) + 3) >= *(_BYTE *)(((v6 + 596) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v6 + 596);
                }
                if ( v46 < *(_DWORD *)(v6 + 596) )
                {
                  v40 = (const char *)(v6 + 592);
                  std::vector<GroupLifeConfig>::push_back(
                    &group_info_script_configb->life_cycle_vec,
                    (const std::vector<GroupLifeConfig>::value_type *)(v6 + 592));
                  v45 = 1;
                }
                else
                {
                  *(_DWORD *)(((v6 + 2256) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v6 + 2256) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v6 + 2287) >> 3) + 0x7FFF8000) != 0
                    && (char)((v6 - 64 + 47) & 7) >= *(_BYTE *)(((v6 + 2287) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v6 + 2256, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v6 + 2256),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "loadGroupInfoScriptConfig",
                    2284);
                  v47 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v6 + 2256),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  v48 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                          v47,
                          (const char (*)[11])"group_id: ");
                  v49 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v48,
                          (const unsigned int *)(v6 + 336));
                  v40 = " life_cycle error";
                  common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(
                    v49,
                    (const char (*)[18])" life_cycle error");
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 2256));
                  *(_DWORD *)(((v6 + 2256) >> 3) + 0x7FFF8000) = -117901064;
                  v5 = -1;
                  v45 = 0;
                }
              }
              *(_BYTE *)(((v6 + 592) >> 3) + 0x7FFF8000) = -8;
              if ( v45 != 1 )
              {
                v50 = 0;
                goto LABEL_79;
              }
              __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v6 + 528));
            }
            v50 = 1;
LABEL_79:
            *(_BYTE *)(((v6 + 528) >> 3) + 0x7FFF8000) = -8;
            *(_BYTE *)(((v6 + 560) >> 3) + 0x7FFF8000) = -8;
            if ( v50 == 1 )
            {
              if ( *(_BYTE *)(((unsigned __int64)&group_info_script_configb->activity_id >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&group_info_script_configb->activity_id >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_store4(&group_info_script_configb->activity_id, v40);
              }
              group_info_script_configb->activity_id = activity_idb;
              *(_WORD *)(((v6 + 1104) >> 3) + 0x7FFF8000) = 0;
              luabind::adl::object::object((luabind::adl::object *const)(v6 + 1104));
              *(_DWORD *)(((v6 + 2320) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v6 + 128) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v6 + 128);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v6 + 2320),
                "is_replaceable",
                (const std::allocator<char> *)(v6 + 128));
              v51 = ScriptUtil::getTableValue(
                      &ScriptUtil::no_exception_instance,
                      group_objb,
                      (const std::string *)(v6 + 2320),
                      (luabind::adl::object *)(v6 + 1104)) == 0;
              std::string::~string((void *)(v6 + 2320));
              *(_DWORD *)(((v6 + 2320) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v6 + 128);
              *(_BYTE *)(((v6 + 128) >> 3) + 0x7FFF8000) = -8;
              if ( !v51 )
                goto LABEL_103;
              reta = 0;
              *(_DWORD *)(((v6 + 2384) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v6 + 144) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v6 + 144);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v6 + 2384),
                "value",
                (const std::allocator<char> *)(v6 + 144));
              v52 = ScriptUtil::getTableValue<bool>(
                      &ScriptUtil::no_exception_instance,
                      (const luabind::adl::object *)(v6 + 1104),
                      (const std::string *)(v6 + 2384),
                      &group_info_script_configb->replaceable_info.value) != 0;
              std::string::~string((void *)(v6 + 2384));
              *(_DWORD *)(((v6 + 2384) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v6 + 144);
              *(_BYTE *)(((v6 + 144) >> 3) + 0x7FFF8000) = -8;
              if ( v52 )
              {
                *(_DWORD *)(((v6 + 2448) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v6 + 2448) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v6 + 2479) >> 3) + 0x7FFF8000) != 0
                  && (char)((v6 - 112 + 31) & 7) >= *(_BYTE *)(((v6 + 2479) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v6 + 2448, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v6 + 2448),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "loadGroupInfoScriptConfig",
                  2299);
                v53 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v6 + 2448),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                if ( *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_load4(v6 + 336);
                common::milog::MiLogStream::operator()(v53, aGroupIdUIsRepl, *(unsigned int *)(v6 + 336));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 2448));
                *(_DWORD *)(((v6 + 2448) >> 3) + 0x7FFF8000) = -117901064;
                reta = -1;
              }
              *(_DWORD *)(((v6 + 2512) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v6 + 160) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v6 + 160);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v6 + 2512),
                "version",
                (const std::allocator<char> *)(v6 + 160));
              v54 = ScriptUtil::getTableValue<unsigned int>(
                      &ScriptUtil::no_exception_instance,
                      (const luabind::adl::object *)(v6 + 1104),
                      (const std::string *)(v6 + 2512),
                      &group_info_script_configb->replaceable_info.version) != 0;
              std::string::~string((void *)(v6 + 2512));
              *(_DWORD *)(((v6 + 2512) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v6 + 160);
              *(_BYTE *)(((v6 + 160) >> 3) + 0x7FFF8000) = -8;
              if ( v54 )
              {
                *(_DWORD *)(((v6 + 2576) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v6 + 2576) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v6 + 2607) >> 3) + 0x7FFF8000) != 0
                  && (char)((v6 - 64 + 111) & 7) >= *(_BYTE *)(((v6 + 2607) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v6 + 2576, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v6 + 2576),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "loadGroupInfoScriptConfig",
                  2305);
                v55 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v6 + 2576),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                if ( *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_load4(v6 + 336);
                common::milog::MiLogStream::operator()(v55, aGroupIdUIsRepl_0, *(unsigned int *)(v6 + 336));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 2576));
                *(_DWORD *)(((v6 + 2576) >> 3) + 0x7FFF8000) = -117901064;
                reta = -1;
              }
              *(_DWORD *)(((v6 + 2640) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v6 + 176) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v6 + 176);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v6 + 2640),
                "new_bin_only",
                (const std::allocator<char> *)(v6 + 176));
              v56 = ScriptUtil::getTableValue<bool>(
                      &ScriptUtil::no_exception_instance,
                      (const luabind::adl::object *)(v6 + 1104),
                      (const std::string *)(v6 + 2640),
                      &group_info_script_configb->replaceable_info.new_bin_only) != 0;
              std::string::~string((void *)(v6 + 2640));
              *(_DWORD *)(((v6 + 2640) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v6 + 176);
              *(_BYTE *)(((v6 + 176) >> 3) + 0x7FFF8000) = -8;
              if ( v56 )
              {
                *(_DWORD *)(((v6 + 2704) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v6 + 2704) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v6 + 2735) >> 3) + 0x7FFF8000) != 0
                  && (char)((v6 - 112 + 31) & 7) >= *(_BYTE *)(((v6 + 2735) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v6 + 2704, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v6 + 2704),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "loadGroupInfoScriptConfig",
                  2311);
                v57 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v6 + 2704),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                if ( *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_load4(v6 + 336);
                common::milog::MiLogStream::operator()(v57, aGroupIdUIsRepl_1, *(unsigned int *)(v6 + 336));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 2704));
                *(_DWORD *)(((v6 + 2704) >> 3) + 0x7FFF8000) = -117901064;
                reta = -1;
              }
              if ( reta )
              {
                v5 = reta;
              }
              else
              {
LABEL_103:
                *(_WORD *)(((v6 + 1136) >> 3) + 0x7FFF8000) = 0;
                luabind::adl::object::object((luabind::adl::object *const)(v6 + 1136));
                *(_DWORD *)(((v6 + 2768) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v6 + 192) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v6 + 192);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v6 + 2768),
                  "business",
                  (const std::allocator<char> *)(v6 + 192));
                v58 = ScriptUtil::getTableValue(
                        &ScriptUtil::no_exception_instance,
                        group_objb,
                        (const std::string *)(v6 + 2768),
                        (luabind::adl::object *)(v6 + 1136)) == 0;
                std::string::~string((void *)(v6 + 2768));
                *(_DWORD *)(((v6 + 2768) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v6 + 192);
                *(_BYTE *)(((v6 + 192) >> 3) + 0x7FFF8000) = -8;
                if ( !v58 )
                  goto LABEL_112;
                ret_0 = 0;
                *(_DWORD *)(((v6 + 2832) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v6 + 208) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v6 + 208);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v6 + 2832),
                  "type",
                  (const std::allocator<char> *)(v6 + 208));
                v59 = ScriptUtil::getTableValue<unsigned int>(
                        &ScriptUtil::no_exception_instance,
                        (const luabind::adl::object *)(v6 + 1136),
                        (const std::string *)(v6 + 2832),
                        (unsigned int *)&group_info_script_configb->business_info) != 0;
                std::string::~string((void *)(v6 + 2832));
                *(_DWORD *)(((v6 + 2832) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v6 + 208);
                *(_BYTE *)(((v6 + 208) >> 3) + 0x7FFF8000) = -8;
                if ( v59 )
                {
                  *(_DWORD *)(((v6 + 2896) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v6 + 2896) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v6 + 2927) >> 3) + 0x7FFF8000) != 0
                    && (char)((v6 + 111) & 7) >= *(_BYTE *)(((v6 + 2927) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v6 + 2896, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v6 + 2896),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "loadGroupInfoScriptConfig",
                    2329);
                  v60 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v6 + 2896),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  if ( *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) <= 3 )
                  {
                    __asan_report_load4(v6 + 336);
                  }
                  common::milog::MiLogStream::operator()(v60, aGroupIdUBusine, *(unsigned int *)(v6 + 336));
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 2896));
                  *(_DWORD *)(((v6 + 2896) >> 3) + 0x7FFF8000) = -117901064;
                  ret_0 = -1;
                }
                *(_DWORD *)(((v6 + 2960) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v6 + 224) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v6 + 224);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v6 + 2960),
                  "sub_type",
                  (const std::allocator<char> *)(v6 + 224));
                ScriptUtil::getTableValue<unsigned int>(
                  &ScriptUtil::no_exception_instance,
                  (const luabind::adl::object *)(v6 + 1136),
                  (const std::string *)(v6 + 2960),
                  &group_info_script_configb->business_info.sub_type);
                std::string::~string((void *)(v6 + 2960));
                *(_DWORD *)(((v6 + 2960) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v6 + 224);
                *(_BYTE *)(((v6 + 224) >> 3) + 0x7FFF8000) = -8;
                if ( ret_0 )
                {
                  v5 = ret_0;
                }
                else
                {
LABEL_112:
                  v61 = std::vector<std::string>::size((const std::vector<std::string> *const)(v6 + 1296));
                  std::vector<unsigned int>::reserve(&group_info_script_configb->forbid_monster_die_type_vec, v61);
                  __for_range_0 = (std::vector<std::string> *)(v6 + 1296);
                  *(_BYTE *)(((v6 + 624) >> 3) + 0x7FFF8000) = 0;
                  if ( *(_BYTE *)(((v6 + 624) >> 3) + 0x7FFF8000) )
                    __asan_report_store8(v6 + 624, v61);
                  *(std::vector<std::string>::iterator *)(v6 + 624) = std::vector<std::string>::begin(__for_range_0);
                  *(_BYTE *)(((v6 + 656) >> 3) + 0x7FFF8000) = 0;
                  if ( *(_BYTE *)(((v6 + 656) >> 3) + 0x7FFF8000) )
                    __asan_report_store8(v6 + 656, v61);
                  *(std::vector<std::string>::iterator *)(v6 + 656) = std::vector<std::string>::end(__for_range_0);
                  while ( __gnu_cxx::operator!=<std::string *,std::vector<std::string>>(
                            (const __gnu_cxx::__normal_iterator<std::string*,std::vector<std::string> > *)(v6 + 624),
                            (const __gnu_cxx::__normal_iterator<std::string*,std::vector<std::string> > *)(v6 + 656)) )
                  {
                    change_hp_type_str = __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::operator*((const __gnu_cxx::__normal_iterator<std::string*,std::vector<std::string> > *const)(v6 + 624));
                    *(_BYTE *)(((v6 + 352) >> 3) + 0x7FFF8000) = 4;
                    if ( *(_BYTE *)(((v6 + 352) >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((v6 + 352) >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_store4(v6 + 352, v6 + 656);
                    }
                    *(_DWORD *)(v6 + 352) = 0;
                    v62 = (bool *)(v6 + 352);
                    if ( !proto::ChangHpReason_Parse(change_hp_type_str, (proto::ChangHpReason *)(v6 + 352)) )
                      goto LABEL_124;
                    if ( *(_BYTE *)(((v6 + 352) >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((v6 + 352) >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_load4(v6 + 352);
                    }
                    if ( *(_DWORD *)(v6 + 352) )
                      v63 = 0;
                    else
LABEL_124:
                      v63 = 1;
                    if ( v63 )
                    {
                      *(_DWORD *)(((v6 + 3024) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v6 + 3024) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v6 + 3055) >> 3) + 0x7FFF8000) != 0
                        && (char)((v6 - 64 + 47) & 7) >= *(_BYTE *)(((v6 + 3055) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v6 + 3024, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v6 + 3024),
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/lua_config_mgr.cpp",
                        "loadGroupInfoScriptConfig",
                        2348);
                      v64 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                              (common::milog::MiLogStream *const)(v6 + 3024),
                              (const char (*)[16])"[CONFIG_ERROR] ");
                      v65 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                              v64,
                              (const char (*)[42])"parse forbid_monster_die_types fail, str:");
                      v66 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v65, change_hp_type_str);
                      v67 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(
                              v66,
                              (const char (*)[9])" parsed:");
                      v68 = common::milog::MiLogStream::operator<<<proto::ChangHpReason,(proto::ChangHpReason*)0>(
                              v67,
                              (const proto::ChangHpReason *)(v6 + 352));
                      v69 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                              v68,
                              (const char (*)[11])" group_id:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v69,
                        (const unsigned int *)(v6 + 336));
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3024));
                      *(_DWORD *)(((v6 + 3024) >> 3) + 0x7FFF8000) = -117901064;
                      v5 = -1;
                      v70 = 0;
                    }
                    else
                    {
                      p_forbid_monster_die_type_vec = &group_info_script_configb->forbid_monster_die_type_vec;
                      *(_BYTE *)(((v6 + 368) >> 3) + 0x7FFF8000) = 4;
                      if ( *(_BYTE *)(((v6 + 352) >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((v6 + 352) >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(v6 + 352);
                      }
                      v72 = *(_DWORD *)(v6 + 352);
                      v73 = *(_BYTE *)(((v6 + 368) >> 3) + 0x7FFF8000);
                      if ( v73 != 0 && v73 <= 3 )
                      {
                        v72 = v6 + 368;
                        LOBYTE(v62) = v73 != 0;
                        __asan_report_store4(v6 + 368, v62);
                      }
                      *(_DWORD *)(v6 + 368) = v72;
                      std::vector<unsigned int>::push_back(
                        p_forbid_monster_die_type_vec,
                        (std::vector<unsigned int>::value_type *)(v6 + 368));
                      *(_BYTE *)(((v6 + 368) >> 3) + 0x7FFF8000) = -8;
                      v70 = 1;
                    }
                    *(_BYTE *)(((v6 + 352) >> 3) + 0x7FFF8000) = -8;
                    if ( v70 != 1 )
                    {
                      v74 = 0;
                      goto LABEL_139;
                    }
                    __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::operator++((__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string> > *const)(v6 + 624));
                  }
                  v74 = 1;
LABEL_139:
                  *(_BYTE *)(((v6 + 624) >> 3) + 0x7FFF8000) = -8;
                  *(_BYTE *)(((v6 + 656) >> 3) + 0x7FFF8000) = -8;
                  if ( v74 == 1 )
                  {
                    v75 = ((_BYTE)group_info_script_configb - 52) & 7;
                    v76 = (*(_BYTE *)(((unsigned __int64)&group_info_script_configb->is_force_unload_nodelay >> 3)
                                    + 0x7FFF8000) != 0) & (unsigned __int8)((char)v75 >= *(_BYTE *)(((unsigned __int64)&group_info_script_configb->is_force_unload_nodelay >> 3)
                                                                                                  + 0x7FFF8000));
                    if ( (_BYTE)v76 )
                      __asan_report_load1(&group_info_script_configb->is_force_unload_nodelay, v75, v76);
                    if ( group_info_script_configb->is_force_unload_nodelay )
                    {
                      *(_DWORD *)(((v6 + 3088) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v6 + 3088) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v6 + 3119) >> 3) + 0x7FFF8000) != 0
                        && (char)((v6 - 64 + 111) & 7) >= *(_BYTE *)(((v6 + 3119) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v6 + 3088, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v6 + 3088),
                        &common::milog::MiLogDefault::default_log_obj_,
                        2u,
                        "./src/lua_config_mgr.cpp",
                        "loadGroupInfoScriptConfig",
                        2356);
                      v77 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                              (common::milog::MiLogStream *const)(v6 + 3088),
                              (const char (*)[15])"[CONFIG_INFO] ");
                      if ( *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(v6 + 336);
                      }
                      common::milog::MiLogStream::operator()(
                        v77,
                        "[FORCE_UNLOAD_NODELAY] toggled @ group=%u",
                        *(unsigned int *)(v6 + 336));
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3088));
                      *(_DWORD *)(((v6 + 3088) >> 3) + 0x7FFF8000) = -117901064;
                    }
                    v78 = ((_BYTE)group_info_script_configb - 44) & 7;
                    v79 = (*(_BYTE *)(((unsigned __int64)&group_info_script_configb->is_force_silent_reload >> 3)
                                    + 0x7FFF8000) != 0) & (unsigned __int8)((char)v78 >= *(_BYTE *)(((unsigned __int64)&group_info_script_configb->is_force_silent_reload >> 3)
                                                                                                  + 0x7FFF8000));
                    if ( (_BYTE)v79 )
                      __asan_report_load1(&group_info_script_configb->is_force_silent_reload, v78, v79);
                    if ( group_info_script_configb->is_force_silent_reload )
                    {
                      *(_DWORD *)(((v6 + 3152) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v6 + 3152) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v6 + 3183) >> 3) + 0x7FFF8000) != 0
                        && (char)((v6 + 111) & 7) >= *(_BYTE *)(((v6 + 3183) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v6 + 3152, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v6 + 3152),
                        &common::milog::MiLogDefault::default_log_obj_,
                        2u,
                        "./src/lua_config_mgr.cpp",
                        "loadGroupInfoScriptConfig",
                        2361);
                      v80 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                              (common::milog::MiLogStream *const)(v6 + 3152),
                              (const char (*)[15])"[CONFIG_INFO] ");
                      if ( *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((v6 + 336) >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(v6 + 336);
                      }
                      common::milog::MiLogStream::operator()(
                        v80,
                        "[SILENT VERSION]  force reload @ group=%u",
                        *(unsigned int *)(v6 + 336));
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3152));
                      *(_DWORD *)(((v6 + 3152) >> 3) + 0x7FFF8000) = -117901064;
                      v81 = (bool *)(v6 + 336);
                      v82 = std::unordered_map<unsigned int,unsigned int>::operator[](
                              &thisa->force_silent_update_group_map,
                              (const std::unordered_map<unsigned int,unsigned int>::key_type *)(v6 + 336));
                      v83 = v82;
                      v84 = *(_BYTE *)(((unsigned __int64)v82 >> 3) + 0x7FFF8000);
                      if ( v84 != 0 && (char)(((unsigned __int8)v82 & 7) + 3) >= v84 )
                      {
                        LOBYTE(v81) = v84 != 0;
                        __asan_report_store4(v82, v81);
                      }
                      *v83 = 1;
                    }
                    *(_WORD *)(((v6 + 1168) >> 3) + 0x7FFF8000) = 0;
                    luabind::adl::object::object((luabind::adl::object *const)(v6 + 1168));
                    *(_DWORD *)(((v6 + 3216) >> 3) + 0x7FFF8000) = 0;
                    *(_BYTE *)(((v6 + 240) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v6 + 240);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v6 + 3216),
                      "related_level_tag_series_list",
                      (const std::allocator<char> *)(v6 + 240));
                    v85 = ScriptUtil::getTableValue(
                            &ScriptUtil::no_exception_instance,
                            group_objb,
                            (const std::string *)(v6 + 3216),
                            (luabind::adl::object *)(v6 + 1168)) == 0;
                    std::string::~string((void *)(v6 + 3216));
                    *(_DWORD *)(((v6 + 3216) >> 3) + 0x7FFF8000) = -117901064;
                    std::allocator<char>::~allocator(v6 + 240);
                    *(_BYTE *)(((v6 + 240) >> 3) + 0x7FFF8000) = -8;
                    if ( v85
                      && ScriptUtil::getTableValueAsVector<unsigned int>(
                           &ScriptUtil::no_exception_instance,
                           (const luabind::adl::object *)(v6 + 1168),
                           &group_info_script_configb->related_level_tag_series_vec) )
                    {
                      *(_DWORD *)(((v6 + 3280) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v6 + 3280) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v6 + 3311) >> 3) + 0x7FFF8000) != 0
                        && (char)((v6 - 64 + 47) & 7) >= *(_BYTE *)(((v6 + 3311) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v6 + 3280, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v6 + 3280),
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/lua_config_mgr.cpp",
                        "loadGroupInfoScriptConfig",
                        2370);
                      v86 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                              (common::milog::MiLogStream *const)(v6 + 3280),
                              (const char (*)[16])"[CONFIG_ERROR] ");
                      common::milog::MiLogStream::operator<<<char [71],(char *[71])0>(
                        v86,
                        (const char (*)[71])"SCRIPT_UTIL.getTableValueAsVector related_level_tag_series_list failed");
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3280));
                      *(_DWORD *)(((v6 + 3280) >> 3) + 0x7FFF8000) = -117901064;
                      v5 = -1;
                    }
                    else
                    {
                      *(_WORD *)(((v6 + 1200) >> 3) + 0x7FFF8000) = 0;
                      luabind::adl::object::object((luabind::adl::object *const)(v6 + 1200));
                      *(_DWORD *)(((v6 + 3344) >> 3) + 0x7FFF8000) = 0;
                      *(_BYTE *)(((v6 + 256) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v6 + 256);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v6 + 3344),
                        "group_tag_list",
                        (const std::allocator<char> *)(v6 + 256));
                      v87 = ScriptUtil::getTableValue(
                              &ScriptUtil::no_exception_instance,
                              group_objb,
                              (const std::string *)(v6 + 3344),
                              (luabind::adl::object *)(v6 + 1200)) == 0;
                      std::string::~string((void *)(v6 + 3344));
                      *(_DWORD *)(((v6 + 3344) >> 3) + 0x7FFF8000) = -117901064;
                      std::allocator<char>::~allocator(v6 + 256);
                      *(_BYTE *)(((v6 + 256) >> 3) + 0x7FFF8000) = -8;
                      if ( v87
                        && ScriptUtil::getTableValueAsVector<unsigned int>(
                             &ScriptUtil::no_exception_instance,
                             (const luabind::adl::object *)(v6 + 1200),
                             &group_info_script_configb->group_tag_vec) )
                      {
                        *(_DWORD *)(((v6 + 3408) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v6 + 3408) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v6 + 3439) >> 3) + 0x7FFF8000) != 0
                          && (char)((v6 + 111) & 7) >= *(_BYTE *)(((v6 + 3439) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v6 + 3408, 32LL);
                        }
                        common::milog::MiLogStream::create(
                          (common::milog::MiLogStream *)(v6 + 3408),
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/lua_config_mgr.cpp",
                          "loadGroupInfoScriptConfig",
                          2380);
                        v88 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                (common::milog::MiLogStream *const)(v6 + 3408),
                                (const char (*)[16])"[CONFIG_ERROR] ");
                        common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                          v88,
                          (const char (*)[56])"SCRIPT_UTIL.getTableValueAsVector group_tag_list failed");
                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3408));
                        *(_DWORD *)(((v6 + 3408) >> 3) + 0x7FFF8000) = -117901064;
                        v5 = -1;
                      }
                      else
                      {
                        *(_BYTE *)(((v6 + 384) >> 3) + 0x7FFF8000) = 4;
                        v89 = (((_BYTE)group_info_script_configb - 60) & 7u) + 3;
                        if ( *(_BYTE *)(((unsigned __int64)&group_info_script_configb->business_info >> 3) + 0x7FFF8000) != 0
                          && (char)((((_BYTE)group_info_script_configb - 60) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_info_script_configb->business_info >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_load4(&group_info_script_configb->business_info);
                        }
                        type = group_info_script_configb->business_info.type;
                        v91 = *(_BYTE *)(((v6 + 384) >> 3) + 0x7FFF8000);
                        if ( v91 != 0 && v91 <= 3 )
                        {
                          LOBYTE(v89) = v91 != 0;
                          __asan_report_store4(v6 + 384, v89);
                        }
                        *(_DWORD *)(v6 + 384) = type;
                        *(_BYTE *)(((v6 + 400) >> 3) + 0x7FFF8000) = 4;
                        if ( *(_BYTE *)(((unsigned __int64)&group_info_script_configb->business_info.sub_type >> 3)
                                      + 0x7FFF8000) != 0
                          && *(_BYTE *)(((unsigned __int64)&group_info_script_configb->business_info.sub_type >> 3)
                                      + 0x7FFF8000) <= 3 )
                        {
                          __asan_report_load4(&group_info_script_configb->business_info.sub_type);
                        }
                        sub_type = group_info_script_configb->business_info.sub_type;
                        v93 = *(_BYTE *)(((v6 + 400) >> 3) + 0x7FFF8000);
                        LOBYTE(v89) = v93 != 0;
                        if ( v93 != 0 && v93 <= 3 )
                          __asan_report_store4(v6 + 400, v89);
                        *(_DWORD *)(v6 + 400) = sub_type;
                        if ( *(char *)(((unsigned __int64)&group_info_script_configb->is_dynamic_load >> 3) + 0x7FFF8000) < 0 )
                          __asan_report_load1(
                            &group_info_script_configb->is_dynamic_load,
                            v89,
                            &group_info_script_configb->is_dynamic_load);
                        if ( group_info_script_configb->is_dynamic_load && *(_DWORD *)(v6 + 400) )
                        {
                          *(_BYTE *)(((v6 + 688) >> 3) + 0x7FFF8000) = 0;
                          std::pair<unsigned int,unsigned int>::pair<unsigned int &,unsigned int &,true>(
                            (std::pair<unsigned int,unsigned int> *const)(v6 + 688),
                            (unsigned int *)(v6 + 384),
                            (unsigned int *)(v6 + 400));
                          v94 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::unordered_map<unsigned int,std::vector<unsigned int>>>>>::operator[](
                                  &thisa->detail_type_dynamic_group_map,
                                  (std::unordered_map<std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>> > > >::key_type *)(v6 + 688));
                          v95 = std::unordered_map<unsigned int,std::vector<unsigned int>>::operator[](
                                  v94,
                                  (const std::unordered_map<unsigned int,std::vector<unsigned int>>::key_type *)(v6 + 480));
                          std::vector<unsigned int>::push_back(v95, &group_info_script_configb->group_id);
                          *(_BYTE *)(((v6 + 688) >> 3) + 0x7FFF8000) = -8;
                        }
                        *(_WORD *)(((v6 + 1232) >> 3) + 0x7FFF8000) = 0;
                        luabind::adl::object::object((luabind::adl::object *const)(v6 + 1232));
                        *(_DWORD *)(((v6 + 3472) >> 3) + 0x7FFF8000) = 0;
                        *(_BYTE *)(((v6 + 272) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v6 + 272);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v6 + 3472),
                          "group_register_event_type_list",
                          (const std::allocator<char> *)(v6 + 272));
                        v96 = ScriptUtil::getTableValue(
                                &ScriptUtil::no_exception_instance,
                                group_objb,
                                (const std::string *)(v6 + 3472),
                                (luabind::adl::object *)(v6 + 1232)) == 0;
                        std::string::~string((void *)(v6 + 3472));
                        *(_DWORD *)(((v6 + 3472) >> 3) + 0x7FFF8000) = -117901064;
                        std::allocator<char>::~allocator(v6 + 272);
                        *(_BYTE *)(((v6 + 272) >> 3) + 0x7FFF8000) = -8;
                        if ( !v96 )
                          goto LABEL_228;
                        v97 = ((v6 + 4048) >> 3) + 2147450880;
                        *(_DWORD *)v97 = 0;
                        *(_WORD *)(v97 + 4) = 0;
                        std::set<unsigned int>::set((std::set<unsigned int> *const)(v6 + 4048));
                        v98 = (bool *)(v6 + 1232);
                        if ( ScriptUtil::getTableValueAsSet<unsigned int>(
                               &ScriptUtil::no_exception_instance,
                               (const luabind::adl::object *)(v6 + 1232),
                               (std::set<unsigned int> *)(v6 + 4048)) )
                        {
                          *(_DWORD *)(((v6 + 3536) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v6 + 3536) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v6 + 3567) >> 3) + 0x7FFF8000) != 0
                            && (char)((v6 - 64 + 47) & 7) >= *(_BYTE *)(((v6 + 3567) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v6 + 3536, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v6 + 3536),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/lua_config_mgr.cpp",
                            "loadGroupInfoScriptConfig",
                            2399);
                          v99 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                  (common::milog::MiLogStream *const)(v6 + 3536),
                                  (const char (*)[16])"[CONFIG_ERROR] ");
                          common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(
                            v99,
                            (const char (*)[69])"SCRIPT_UTIL.getTableValueAsSet group_register_event_type_list failed");
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3536));
                          *(_DWORD *)(((v6 + 3536) >> 3) + 0x7FFF8000) = -117901064;
                          v5 = -1;
                          v100 = 0;
                        }
                        else
                        {
                          __for_range_1 = (std::set<unsigned int> *)(v6 + 4048);
                          *(_BYTE *)(((v6 + 720) >> 3) + 0x7FFF8000) = 0;
                          if ( *(_BYTE *)(((v6 + 720) >> 3) + 0x7FFF8000) )
                            __asan_report_store8(v6 + 720, v98);
                          *(std::set<unsigned int>::iterator *)(v6 + 720) = std::set<unsigned int>::begin(__for_range_1);
                          *(_BYTE *)(((v6 + 752) >> 3) + 0x7FFF8000) = 0;
                          if ( *(_BYTE *)(((v6 + 752) >> 3) + 0x7FFF8000) )
                            __asan_report_store8(v6 + 752, v98);
                          *(std::set<unsigned int>::iterator *)(v6 + 752) = std::set<unsigned int>::end(__for_range_1);
                          while ( 1 )
                          {
                            v101 = (const std::set<data::EventType> *)(v6 + 752);
                            if ( !std::operator!=(
                                    (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v6 + 720),
                                    (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v6 + 752)) )
                              break;
                            *(_BYTE *)(((v6 + 416) >> 3) + 0x7FFF8000) = 4;
                            v102 = (unsigned int *)std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v6 + 720));
                            v103 = (int *)v102;
                            if ( *(_BYTE *)(((unsigned __int64)v102 >> 3) + 0x7FFF8000) != 0
                              && (char)(((unsigned __int8)v102 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v102 >> 3)
                                                                                     + 0x7FFF8000) )
                            {
                              __asan_report_load4(v102);
                            }
                            v104 = *v103;
                            v105 = *(_BYTE *)(((v6 + 416) >> 3) + 0x7FFF8000);
                            LOBYTE(v101) = v105 != 0;
                            if ( v105 != 0 && v105 <= 3 )
                              __asan_report_store4(v6 + 416, v101);
                            *(_DWORD *)(v6 + 416) = v104;
                            if ( !(_BYTE)`guard variable for'LuaConfigMgr::loadGroupInfoScriptConfig(luabind::adl::object const&,GroupInfoScriptConfig &,unsigned int,unsigned int)::enable_register_event_type_set
                              && __cxa_guard_acquire(&`guard variable for'LuaConfigMgr::loadGroupInfoScriptConfig(luabind::adl::object const&,GroupInfoScriptConfig &,unsigned int,unsigned int)::enable_register_event_type_set) )
                            {
                              *(_BYTE *)(((v6 + 784) >> 3) + 0x7FFF8000) = 0;
                              if ( *(_BYTE *)(((v6 + 784) >> 3) + 0x7FFF8000) != 0
                                && *(_BYTE *)(((v6 + 784) >> 3) + 0x7FFF8000) <= 3 )
                              {
                                __asan_report_store4(v6 + 784, v101);
                              }
                              *(_DWORD *)(v6 + 784) = 75;
                              if ( *(_BYTE *)(((v6 + 788) >> 3) + 0x7FFF8000) != 0
                                && (char)(((v6 - 64 + 84) & 7) + 3) >= *(_BYTE *)(((v6 + 788) >> 3) + 0x7FFF8000) )
                              {
                                __asan_report_store4(v6 + 788, (((_BYTE)v6 - 64 + 84) & 7u) + 3);
                              }
                              *(_DWORD *)(v6 + 788) = 3101;
                              __la._M_array = (std::initializer_list<data::EventType>::iterator)(v6 + 784);
                              __la._M_len = 2LL;
                              *(_BYTE *)(((v6 + 288) >> 3) + 0x7FFF8000) = 1;
                              *(_BYTE *)(((v6 + 304) >> 3) + 0x7FFF8000) = 1;
                              std::allocator<data::EventType>::allocator((std::allocator<data::EventType> *const)(v6 + 304));
                              std::set<data::EventType>::set(
                                (std::set<data::EventType> *const)&LuaConfigMgr::loadGroupInfoScriptConfig(luabind::adl::object const&,GroupInfoScriptConfig &,unsigned int,unsigned int)::enable_register_event_type_set,
                                __la,
                                (const std::less<data::EventType> *)(v6 + 288),
                                (const std::set<data::EventType>::allocator_type *)(v6 + 304));
                              __cxa_guard_release(&`guard variable for'LuaConfigMgr::loadGroupInfoScriptConfig(luabind::adl::object const&,GroupInfoScriptConfig &,unsigned int,unsigned int)::enable_register_event_type_set);
                              v101 = &LuaConfigMgr::loadGroupInfoScriptConfig(luabind::adl::object const&,GroupInfoScriptConfig &,unsigned int,unsigned int)::enable_register_event_type_set;
                              __cxa_atexit(
                                (void (__fastcall *)(void *))std::set<data::EventType>::~set,
                                (void *)&LuaConfigMgr::loadGroupInfoScriptConfig(luabind::adl::object const&,GroupInfoScriptConfig &,unsigned int,unsigned int)::enable_register_event_type_set,
                                &_dso_handle);
                              std::allocator<data::EventType>::~allocator((std::allocator<data::EventType> *const)(v6 + 304));
                              *(_BYTE *)(((v6 + 304) >> 3) + 0x7FFF8000) = -8;
                              *(_BYTE *)(((v6 + 288) >> 3) + 0x7FFF8000) = -8;
                              *(_BYTE *)(((v6 + 784) >> 3) + 0x7FFF8000) = -8;
                            }
                            if ( *(_BYTE *)(((v6 + 416) >> 3) + 0x7FFF8000) != 0
                              && *(_BYTE *)(((v6 + 416) >> 3) + 0x7FFF8000) <= 3 )
                            {
                              __asan_report_load4(v6 + 416);
                            }
                            if ( !data::isValidEventType(*(_DWORD *)(v6 + 416)) )
                            {
                              *(_DWORD *)(((v6 + 3600) >> 3) + 0x7FFF8000) = 0;
                              if ( *(char *)(((v6 + 3600) >> 3) + 0x7FFF8000) < 0
                                || *(_BYTE *)(((v6 + 3631) >> 3) + 0x7FFF8000) != 0
                                && (char)((v6 - 64 + 111) & 7) >= *(_BYTE *)(((v6 + 3631) >> 3) + 0x7FFF8000) )
                              {
                                __asan_report_store_n(v6 + 3600, 32LL);
                              }
                              common::milog::MiLogStream::create(
                                (common::milog::MiLogStream *)(v6 + 3600),
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/lua_config_mgr.cpp",
                                "loadGroupInfoScriptConfig",
                                2409);
                              v106 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                       (common::milog::MiLogStream *const)(v6 + 3600),
                                       (const char (*)[16])"[CONFIG_ERROR] ");
                              v107 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                                       v106,
                                       (const char (*)[35])"invalid group_register_event_type:");
                              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                v107,
                                (const unsigned int *)(v6 + 416));
                              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3600));
                              *(_DWORD *)(((v6 + 3600) >> 3) + 0x7FFF8000) = -117901064;
                              v5 = -1;
                              v108 = 0;
                            }
                            else
                            {
                              *(_BYTE *)(((v6 + 432) >> 3) + 0x7FFF8000) = 4;
                              if ( *(_BYTE *)(((v6 + 416) >> 3) + 0x7FFF8000) != 0
                                && *(_BYTE *)(((v6 + 416) >> 3) + 0x7FFF8000) <= 3 )
                              {
                                __asan_report_load4(v6 + 416);
                              }
                              v109 = *(_DWORD *)(v6 + 416);
                              v110 = *(_BYTE *)(((v6 + 432) >> 3) + 0x7FFF8000);
                              LOBYTE(v101) = v110 != 0;
                              if ( v110 != 0 && v110 <= 3 )
                                __asan_report_store4(v6 + 432, v101);
                              *(_DWORD *)(v6 + 432) = v109;
                              *(_BYTE *)(((v6 + 848) >> 3) + 0x7FFF8000) = 0;
                              if ( *(_BYTE *)(((v6 + 848) >> 3) + 0x7FFF8000) )
                                __asan_report_store8(v6 + 848, v101);
                              *(std::set<data::EventType>::iterator *)(v6 + 848) = std::set<data::EventType>::end(&LuaConfigMgr::loadGroupInfoScriptConfig(luabind::adl::object const&,GroupInfoScriptConfig &,unsigned int,unsigned int)::enable_register_event_type_set);
                              *(_BYTE *)(((v6 + 816) >> 3) + 0x7FFF8000) = 0;
                              if ( *(_BYTE *)(((v6 + 816) >> 3) + 0x7FFF8000) )
                                __asan_report_store8(v6 + 816, v101);
                              *(std::set<data::EventType>::const_iterator *)(v6 + 816) = std::set<data::EventType>::find(
                                                                                           &LuaConfigMgr::loadGroupInfoScriptConfig(luabind::adl::object const&,GroupInfoScriptConfig &,unsigned int,unsigned int)::enable_register_event_type_set,
                                                                                           (const std::set<data::EventType>::key_type *)(v6 + 432));
                              v111 = std::operator==(
                                       (const std::_Rb_tree_const_iterator<data::EventType>::_Self *)(v6 + 816),
                                       (const std::_Rb_tree_const_iterator<data::EventType>::_Self *)(v6 + 848));
                              *(_BYTE *)(((v6 + 816) >> 3) + 0x7FFF8000) = -8;
                              *(_BYTE *)(((v6 + 848) >> 3) + 0x7FFF8000) = -8;
                              if ( v111 )
                              {
                                *(_DWORD *)(((v6 + 3664) >> 3) + 0x7FFF8000) = 0;
                                if ( *(char *)(((v6 + 3664) >> 3) + 0x7FFF8000) < 0
                                  || *(_BYTE *)(((v6 + 3695) >> 3) + 0x7FFF8000) != 0
                                  && (char)((v6 + 111) & 7) >= *(_BYTE *)(((v6 + 3695) >> 3) + 0x7FFF8000) )
                                {
                                  __asan_report_store_n(v6 + 3664, 32LL);
                                }
                                common::milog::MiLogStream::create(
                                  (common::milog::MiLogStream *)(v6 + 3664),
                                  &common::milog::MiLogDefault::default_log_obj_,
                                  4u,
                                  "./src/lua_config_mgr.cpp",
                                  "loadGroupInfoScriptConfig",
                                  2415);
                                v112 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                         (common::milog::MiLogStream *const)(v6 + 3664),
                                         (const char (*)[16])"[CONFIG_ERROR] ");
                                v113 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                                         v112,
                                         (const char (*)[38])"unregister group_register_event_type:");
                                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                  v113,
                                  (const unsigned int *)(v6 + 416));
                                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3664));
                                *(_DWORD *)(((v6 + 3664) >> 3) + 0x7FFF8000) = -117901064;
                                v5 = -1;
                                v108 = 0;
                              }
                              else
                              {
                                v114 = std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::operator[](
                                         &thisa->register_event_type_group_id_set_map,
                                         (const std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::key_type *)(v6 + 432));
                                std::unordered_set<unsigned int>::emplace<unsigned int &>(
                                  v114,
                                  &group_info_script_configb->group_id,
                                  (unsigned int *)v114);
                                v108 = 1;
                              }
                            }
                            *(_BYTE *)(((v6 + 432) >> 3) + 0x7FFF8000) = -8;
                            if ( v108 != 1 )
                            {
                              v115 = 0;
                              goto LABEL_226;
                            }
                            std::_Rb_tree_const_iterator<unsigned int>::operator++((std::_Rb_tree_const_iterator<unsigned int> *const)(v6 + 720));
                          }
                          v115 = 1;
LABEL_226:
                          *(_BYTE *)(((v6 + 416) >> 3) + 0x7FFF8000) = -8;
                          *(_BYTE *)(((v6 + 720) >> 3) + 0x7FFF8000) = -8;
                          *(_BYTE *)(((v6 + 752) >> 3) + 0x7FFF8000) = -8;
                          v100 = v115 == 1;
                        }
                        std::set<unsigned int>::~set((std::set<unsigned int> *const)(v6 + 4048));
                        v116 = ((v6 + 4048) >> 3) + 2147450880;
                        *(_DWORD *)v116 = -117901064;
                        *(_WORD *)(v116 + 4) = -1800;
                        if ( v100 )
                        {
LABEL_228:
                          *(_WORD *)(((v6 + 1264) >> 3) + 0x7FFF8000) = 0;
                          luabind::adl::object::object((luabind::adl::object *const)(v6 + 1264));
                          *(_DWORD *)(((v6 + 3728) >> 3) + 0x7FFF8000) = 0;
                          *(_BYTE *)(((v6 + 320) >> 3) + 0x7FFF8000) = 1;
                          std::allocator<char>::allocator(v6 + 320);
                          std::string::basic_string<std::allocator<char>>(
                            (std::string *const)(v6 + 3728),
                            "event_condition",
                            (const std::allocator<char> *)(v6 + 320));
                          v117 = ScriptUtil::getTableValue(
                                   &ScriptUtil::no_exception_instance,
                                   group_objb,
                                   (const std::string *)(v6 + 3728),
                                   (luabind::adl::object *)(v6 + 1264)) == 0;
                          std::string::~string((void *)(v6 + 3728));
                          *(_DWORD *)(((v6 + 3728) >> 3) + 0x7FFF8000) = -117901064;
                          std::allocator<char>::~allocator(v6 + 320);
                          *(_BYTE *)(((v6 + 320) >> 3) + 0x7FFF8000) = -8;
                          if ( !v117 )
                            goto LABEL_284;
                          v118 = ((v6 + 4128) >> 3) + 2147450880;
                          *(_DWORD *)v118 = 0;
                          *(_WORD *)(v118 + 4) = 0;
                          std::map<unsigned int,luabind::adl::object>::map((std::map<unsigned int,luabind::adl::object> *const)(v6 + 4128));
                          v119 = (bool *)(v6 + 1264);
                          if ( ScriptUtil::getTableValueAsMap<unsigned int,luabind::adl::object>(
                                 &ScriptUtil::no_exception_instance,
                                 (const luabind::adl::object *)(v6 + 1264),
                                 (std::map<unsigned int,luabind::adl::object> *)(v6 + 4128)) )
                          {
                            *(_DWORD *)(((v6 + 3792) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v6 + 3792) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v6 + 3823) >> 3) + 0x7FFF8000) != 0
                              && (char)((v6 - 64 + 47) & 7) >= *(_BYTE *)(((v6 + 3823) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v6 + 3792, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v6 + 3792),
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/lua_config_mgr.cpp",
                              "loadGroupInfoScriptConfig",
                              2429);
                            v120 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                     (common::milog::MiLogStream *const)(v6 + 3792),
                                     (const char (*)[16])"[CONFIG_ERROR] ");
                            common::milog::MiLogStream::operator<<<char [70],(char *[70])0>(
                              v120,
                              (const char (*)[70])"SCRIPT_UTIL.getTableValueAsMap event_type_to_condition_obj_map failed");
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3792));
                            *(_DWORD *)(((v6 + 3792) >> 3) + 0x7FFF8000) = -117901064;
                            v5 = -1;
                            v121 = 0;
                          }
                          else
                          {
                            __for_range_2 = (std::map<unsigned int,luabind::adl::object> *)(v6 + 4128);
                            *(_BYTE *)(((v6 + 880) >> 3) + 0x7FFF8000) = 0;
                            if ( *(_BYTE *)(((v6 + 880) >> 3) + 0x7FFF8000) )
                              __asan_report_store8(v6 + 880, v119);
                            *(std::map<unsigned int,luabind::adl::object>::iterator *)(v6 + 880) = std::map<unsigned int,luabind::adl::object>::begin(__for_range_2);
                            *(_BYTE *)(((v6 + 912) >> 3) + 0x7FFF8000) = 0;
                            if ( *(_BYTE *)(((v6 + 912) >> 3) + 0x7FFF8000) )
                              __asan_report_store8(v6 + 912, v119);
                            *(std::map<unsigned int,luabind::adl::object>::iterator *)(v6 + 912) = std::map<unsigned int,luabind::adl::object>::end(__for_range_2);
                            while ( std::operator!=(
                                      (const std::_Rb_tree_iterator<std::pair<unsigned int const,luabind::adl::object> >::_Self *)(v6 + 880),
                                      (const std::_Rb_tree_iterator<std::pair<unsigned int const,luabind::adl::object> >::_Self *)(v6 + 912)) )
                            {
                              v181 = std::_Rb_tree_iterator<std::pair<unsigned int const,luabind::adl::object>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,luabind::adl::object> > *const)(v6 + 880));
                              event_type_uint = std::get<0ul,unsigned int const,luabind::adl::object>(v181);
                              condition_obj = (std::tuple_element<1,const std::pair<unsigned int const,luabind::adl::object> >::type *)std::get<1ul,unsigned int const,luabind::adl::object>(v181);
                              *(_BYTE *)(((v6 + 448) >> 3) + 0x7FFF8000) = 4;
                              v122 = ((unsigned __int8)event_type_uint & 7u) + 3;
                              if ( *(_BYTE *)(((unsigned __int64)event_type_uint >> 3) + 0x7FFF8000) != 0
                                && (char)(((unsigned __int8)event_type_uint & 7) + 3) >= *(_BYTE *)(((unsigned __int64)event_type_uint >> 3)
                                                                                                  + 0x7FFF8000) )
                              {
                                __asan_report_load4(event_type_uint);
                              }
                              v123 = *event_type_uint;
                              v124 = *(_BYTE *)(((v6 + 448) >> 3) + 0x7FFF8000);
                              LOBYTE(v122) = v124 != 0;
                              if ( v124 != 0 && v124 <= 3 )
                                __asan_report_store4(v6 + 448, v122);
                              *(_DWORD *)(v6 + 448) = v123;
                              *(_BYTE *)(((v6 + 944) >> 3) + 0x7FFF8000) = 0;
                              p_register_event_type_group_id_set_map = &thisa->register_event_type_group_id_set_map;
                              if ( *(_BYTE *)(((v6 + 944) >> 3) + 0x7FFF8000) )
                                __asan_report_store8(v6 + 944, v122);
                              *(std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::iterator *)(v6 + 944) = std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::find(p_register_event_type_group_id_set_map, (const std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::key_type *)(v6 + 448));
                              *(_BYTE *)(((v6 + 976) >> 3) + 0x7FFF8000) = 0;
                              v126 = &thisa->register_event_type_group_id_set_map;
                              if ( *(_BYTE *)(((v6 + 976) >> 3) + 0x7FFF8000) )
                                __asan_report_store8(v6 + 976, v6 + 448);
                              *(std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::iterator *)(v6 + 976) = std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::end(v126);
                              v128 = 1;
                              if ( !std::__detail::operator==<std::pair<data::EventType const,std::unordered_set<unsigned int>>,false>(
                                      (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false> *)(v6 + 944),
                                      (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false> *)(v6 + 976)) )
                              {
                                v127 = std::__detail::_Node_iterator<std::pair<data::EventType const,std::unordered_set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false,false> *const)(v6 + 944));
                                if ( common::tools::MiscUtils::isContains<std::unordered_set<unsigned int>,unsigned int>(
                                       &v127->second,
                                       (const unsigned int *)(v6 + 336)) )
                                {
                                  v128 = 0;
                                }
                              }
                              *(_BYTE *)(((v6 + 976) >> 3) + 0x7FFF8000) = -8;
                              if ( v128 )
                              {
                                *(_DWORD *)(((v6 + 3856) >> 3) + 0x7FFF8000) = 0;
                                if ( *(char *)(((v6 + 3856) >> 3) + 0x7FFF8000) < 0
                                  || *(_BYTE *)(((v6 + 3887) >> 3) + 0x7FFF8000) != 0
                                  && (char)((v6 - 64 + 111) & 7) >= *(_BYTE *)(((v6 + 3887) >> 3) + 0x7FFF8000) )
                                {
                                  __asan_report_store_n(v6 + 3856, 32LL);
                                }
                                common::milog::MiLogStream::create(
                                  (common::milog::MiLogStream *)(v6 + 3856),
                                  &common::milog::MiLogDefault::default_log_obj_,
                                  4u,
                                  "./src/lua_config_mgr.cpp",
                                  "loadGroupInfoScriptConfig",
                                  2442);
                                v129 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                         (common::milog::MiLogStream *const)(v6 + 3856),
                                         (const char (*)[16])"[CONFIG_ERROR] ");
                                v130 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                                         v129,
                                         (const char (*)[38])"unregistered event_type, event_type: ");
                                v131 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                         v130,
                                         event_type_uint);
                                v132 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                         v131,
                                         (const char (*)[12])" group_id: ");
                                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                  v132,
                                  (const unsigned int *)(v6 + 336));
                                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3856));
                                *(_DWORD *)(((v6 + 3856) >> 3) + 0x7FFF8000) = -117901064;
                                v5 = -1;
                                v133 = 0;
                              }
                              else
                              {
                                if ( *(_BYTE *)(((v6 + 448) >> 3) + 0x7FFF8000) != 0
                                  && *(_BYTE *)(((v6 + 448) >> 3) + 0x7FFF8000) <= 3 )
                                {
                                  __asan_report_load4(v6 + 448);
                                }
                                if ( *(_DWORD *)(v6 + 448) == 3101 )
                                {
                                  v134 = ((v6 + 4208) >> 3) + 2147450880;
                                  *(_DWORD *)v134 = 0;
                                  *(_WORD *)(v134 + 4) = 0;
                                  std::set<unsigned int>::set((std::set<unsigned int> *const)(v6 + 4208));
                                  if ( ScriptUtil::getTableValueAsSet<unsigned int>(
                                         &ScriptUtil::no_exception_instance,
                                         condition_obj,
                                         (std::set<unsigned int> *)(v6 + 4208)) )
                                  {
                                    *(_DWORD *)(((v6 + 3920) >> 3) + 0x7FFF8000) = 0;
                                    if ( *(char *)(((v6 + 3920) >> 3) + 0x7FFF8000) < 0
                                      || *(_BYTE *)(((v6 + 3951) >> 3) + 0x7FFF8000) != 0
                                      && (char)((v6 + 111) & 7) >= *(_BYTE *)(((v6 + 3951) >> 3) + 0x7FFF8000) )
                                    {
                                      __asan_report_store_n(v6 + 3920, 32LL);
                                    }
                                    common::milog::MiLogStream::create(
                                      (common::milog::MiLogStream *)(v6 + 3920),
                                      &common::milog::MiLogDefault::default_log_obj_,
                                      4u,
                                      "./src/lua_config_mgr.cpp",
                                      "loadGroupInfoScriptConfig",
                                      2453);
                                    v135 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                             (common::milog::MiLogStream *const)(v6 + 3920),
                                             (const char (*)[16])"[CONFIG_ERROR] ");
                                    common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
                                      v135,
                                      (const char (*)[51])"SCRIPT_UTIL.getTableValueAsSet chain_id_set failed");
                                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3920));
                                    *(_DWORD *)(((v6 + 3920) >> 3) + 0x7FFF8000) = -117901064;
                                    v5 = -1;
                                    v136 = 0;
                                  }
                                  else
                                  {
                                    __for_range_3 = (std::set<unsigned int> *)(v6 + 4208);
                                    *(_BYTE *)(((v6 + 1008) >> 3) + 0x7FFF8000) = 0;
                                    if ( *(_BYTE *)(((v6 + 1008) >> 3) + 0x7FFF8000) )
                                      __asan_report_store8(v6 + 1008, condition_obj);
                                    *(std::set<unsigned int>::iterator *)(v6 + 1008) = std::set<unsigned int>::begin(__for_range_3);
                                    *(_BYTE *)(((v6 + 1040) >> 3) + 0x7FFF8000) = 0;
                                    if ( *(_BYTE *)(((v6 + 1040) >> 3) + 0x7FFF8000) )
                                      __asan_report_store8(v6 + 1040, condition_obj);
                                    *(std::set<unsigned int>::iterator *)(v6 + 1040) = std::set<unsigned int>::end(__for_range_3);
                                    while ( 1 )
                                    {
                                      v137 = (bool *)(v6 + 1040);
                                      if ( !std::operator!=(
                                              (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v6 + 1008),
                                              (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v6 + 1040)) )
                                        break;
                                      *(_BYTE *)(((v6 + 464) >> 3) + 0x7FFF8000) = 4;
                                      v138 = (unsigned int *)std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v6 + 1008));
                                      v139 = (int *)v138;
                                      if ( *(_BYTE *)(((unsigned __int64)v138 >> 3) + 0x7FFF8000) != 0
                                        && (char)(((unsigned __int8)v138 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v138 >> 3)
                                                                                               + 0x7FFF8000) )
                                      {
                                        __asan_report_load4(v138);
                                      }
                                      v140 = *v139;
                                      v141 = *(_BYTE *)(((v6 + 464) >> 3) + 0x7FFF8000);
                                      if ( v141 != 0 && v141 <= 3 )
                                      {
                                        LOBYTE(v137) = v141 != 0;
                                        __asan_report_store4(v6 + 464, v137);
                                      }
                                      *(_DWORD *)(v6 + 464) = v140;
                                      v142 = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::operator[](
                                               &thisa->gadget_chain_event_chain_to_groupset_map,
                                               (const std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::key_type *)(v6 + 464));
                                      std::unordered_set<unsigned int>::emplace<unsigned int &>(
                                        v142,
                                        (unsigned int *)(v6 + 336),
                                        (unsigned int *)v142);
                                      std::_Rb_tree_const_iterator<unsigned int>::operator++((std::_Rb_tree_const_iterator<unsigned int> *const)(v6 + 1008));
                                    }
                                    *(_BYTE *)(((v6 + 464) >> 3) + 0x7FFF8000) = -8;
                                    *(_BYTE *)(((v6 + 1008) >> 3) + 0x7FFF8000) = -8;
                                    *(_BYTE *)(((v6 + 1040) >> 3) + 0x7FFF8000) = -8;
                                    v136 = 1;
                                  }
                                  std::set<unsigned int>::~set((std::set<unsigned int> *const)(v6 + 4208));
                                  v143 = ((v6 + 4208) >> 3) + 2147450880;
                                  *(_DWORD *)v143 = -117901064;
                                  *(_WORD *)(v143 + 4) = -1800;
                                  v133 = v136 != 0;
                                }
                                else
                                {
                                  *(_DWORD *)(((v6 + 3984) >> 3) + 0x7FFF8000) = 0;
                                  if ( *(char *)(((v6 + 3984) >> 3) + 0x7FFF8000) < 0
                                    || *(_BYTE *)(((v6 + 4015) >> 3) + 0x7FFF8000) != 0
                                    && (char)((v6 - 112 + 31) & 7) >= *(_BYTE *)(((v6 + 4015) >> 3) + 0x7FFF8000) )
                                  {
                                    __asan_report_store_n(v6 + 3984, 32LL);
                                  }
                                  common::milog::MiLogStream::create(
                                    (common::milog::MiLogStream *)(v6 + 3984),
                                    &common::milog::MiLogDefault::default_log_obj_,
                                    4u,
                                    "./src/lua_config_mgr.cpp",
                                    "loadGroupInfoScriptConfig",
                                    2465);
                                  v144 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                           (common::milog::MiLogStream *const)(v6 + 3984),
                                           (const char (*)[16])"[CONFIG_ERROR] ");
                                  v145 = common::milog::MiLogStream::operator<<<char [57],(char *[57])0>(
                                           v144,
                                           (const char (*)[57])"unsupported event_type for event_condition, event_type: ");
                                  v146 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                           v145,
                                           event_type_uint);
                                  v147 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                           v146,
                                           (const char (*)[12])" group_id: ");
                                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                    v147,
                                    (const unsigned int *)(v6 + 336));
                                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 3984));
                                  *(_DWORD *)(((v6 + 3984) >> 3) + 0x7FFF8000) = -117901064;
                                  v5 = -1;
                                  v133 = 0;
                                }
                              }
                              *(_BYTE *)(((v6 + 448) >> 3) + 0x7FFF8000) = -8;
                              *(_BYTE *)(((v6 + 944) >> 3) + 0x7FFF8000) = -8;
                              if ( !v133 )
                              {
                                v148 = 0;
                                goto LABEL_282;
                              }
                              std::_Rb_tree_iterator<std::pair<unsigned int const,luabind::adl::object>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,luabind::adl::object> > *const)(v6 + 880));
                            }
                            v148 = 1;
LABEL_282:
                            *(_BYTE *)(((v6 + 880) >> 3) + 0x7FFF8000) = -8;
                            *(_BYTE *)(((v6 + 912) >> 3) + 0x7FFF8000) = -8;
                            v121 = v148 == 1;
                          }
                          std::map<unsigned int,luabind::adl::object>::~map((std::map<unsigned int,luabind::adl::object> *const)(v6 + 4128));
                          v149 = ((v6 + 4128) >> 3) + 2147450880;
                          *(_DWORD *)v149 = -117901064;
                          *(_WORD *)(v149 + 4) = -1800;
                          if ( v121 )
LABEL_284:
                            v5 = 0;
                          luabind::adl::object::~object((luabind::adl::object *const)(v6 + 1264));
                        }
                        luabind::adl::object::~object((luabind::adl::object *const)(v6 + 1232));
                      }
                      luabind::adl::object::~object((luabind::adl::object *const)(v6 + 1200));
                    }
                    luabind::adl::object::~object((luabind::adl::object *const)(v6 + 1168));
                  }
                }
                luabind::adl::object::~object((luabind::adl::object *const)(v6 + 1136));
              }
              luabind::adl::object::~object((luabind::adl::object *const)(v6 + 1104));
            }
            std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v6 + 1360));
          }
          luabind::adl::object::~object((luabind::adl::object *const)(v6 + 1072));
        }
      }
      else
      {
        *(_DWORD *)(((v6 + 1744) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v6 + 1744) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v6 + 1775) >> 3) + 0x7FFF8000) != 0
          && (char)((v6 - 64 + 47) & 7) >= *(_BYTE *)(((v6 + 1775) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v6 + 1744, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v6 + 1744),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "loadGroupInfoScriptConfig",
          2250);
        v24 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v6 + 1744),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v25 = common::milog::MiLogStream::operator<<<char [102],(char *[102])0>(
                v24,
                (const char (*)[102])"if group is_load_by_vision_type is true, vision_type cannot be GroupVisionType_ALWA"
                                     "YS_SHOW, scene_id:");
        v26 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v25,
                (const unsigned int *)(v6 + 480));
        v27 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v26, (const char (*)[11])" group_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v27, (const unsigned int *)(v6 + 336));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 1744));
        *(_DWORD *)(((v6 + 1744) >> 3) + 0x7FFF8000) = -117901064;
        v5 = -1;
      }
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v6 + 1296));
    }
    else
    {
      *(_DWORD *)(((v6 + 1552) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v6 + 1552) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v6 + 1583) >> 3) + 0x7FFF8000) != 0
        && (char)((v6 - 64 + 111) & 7) >= *(_BYTE *)(((v6 + 1583) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v6 + 1552, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v6 + 1552),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "loadGroupInfoScriptConfig",
        2221);
      v12 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
              (common::milog::MiLogStream *const)(v6 + 1552),
              (const char (*)[12])" group_id: ");
      v13 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
              v12,
              (const unsigned __int64 *)(v6 + 496));
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
        v13,
        (const char (*)[33])" is 0 or too big than UINT32_MAX");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v6 + 1552));
      v5 = -1;
    }
  }
  if ( v156 == (bool *)v6 )
  {
    *(_QWORD *)((v6 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v6 >> 3) + 0x7FFF8210) = 0LL;
    memset(
      (void *)((unsigned __int64)(v8 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v8 + 2147450880 - (((_DWORD)v8 + 2147450888) & 0xFFFFFFF8) + 536) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v6 = 1172321806LL;
    __asan_stack_free_7(v6, 4288LL, v156);
  }
  return v5;
};

// Line 2478: range 000000000F2F96D6-000000000F300885
int32_t __cdecl LuaConfigMgr::loadAllSceneScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::pair<std::_Rb_tree_const_iterator<unsigned int>,bool> v6; // rax
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  char *v9; // rsi
  unsigned int first; // ecx
  char v11; // al
  unsigned int v12; // esi
  __int64 v13; // rsi
  unsigned int v14; // esi
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  int v17; // r14d
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  int v20; // r14d
  HK4EDesignConfig *v21; // rsi
  int v22; // ecx
  char v23; // al
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v24; // r14
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  int v27; // r14d
  bool v28; // r14
  common::milog::MiLogStream *v29; // rcx
  common::milog::MiLogStream *v30; // rcx
  bool v31; // r14
  unsigned __int64 v32; // rax
  char *v33; // rsi
  unsigned __int64 v34; // rax
  bool v35; // r14
  common::milog::MiLogStream *v36; // rcx
  int v37; // edx
  unsigned __int64 v38; // rax
  int v39; // edx
  int v40; // r14d
  unsigned __int64 v41; // rax
  int v42; // r14d
  bool v43; // r14
  bool v44; // r14
  common::milog::MiLogStream *v45; // rcx
  int v46; // r14d
  common::milog::MiLogStream *v47; // r14
  __int64 v48; // rax
  int v49; // r14d
  unsigned __int64 v50; // rax
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v51; // r14
  char *v52; // rsi
  common::milog::MiLogStream *v53; // rax
  common::milog::MiLogStream *v54; // rax
  _BOOL4 v55; // r14d
  char *v56; // rsi
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v57; // rax
  int *v58; // rdx
  int v59; // ecx
  char v60; // al
  std::pair<std::_Rb_tree_const_iterator<unsigned int>,bool> v61; // rax
  common::milog::MiLogStream *v62; // rax
  common::milog::MiLogStream *v63; // rax
  common::milog::MiLogStream *v64; // rax
  common::milog::MiLogStream *v65; // rax
  char *v66; // rsi
  uint32_t v67; // ecx
  char v68; // al
  unsigned int v69; // esi
  common::milog::MiLogStream *v70; // r14
  __int64 v71; // rax
  unsigned __int64 v72; // rax
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v73; // r14
  char *v74; // rsi
  common::milog::MiLogStream *v75; // rax
  common::milog::MiLogStream *v76; // rax
  __int64 v77; // rsi
  int v78; // ecx
  char v79; // dl
  luabind::adl::object *v80; // rsi
  GroupInfoScriptConfig *v81; // r8
  common::milog::MiLogStream *v82; // rax
  common::milog::MiLogStream *v83; // rax
  int v84; // eax
  int v85; // ecx
  char v86; // al
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,GroupInfoScriptConfig>,false,false>,bool> v87; // rax
  common::milog::MiLogStream *v88; // rax
  common::milog::MiLogStream *v89; // rax
  unsigned int v90; // esi
  __int64 v91; // rsi
  int v92; // ecx
  char v93; // al
  __int64 v94; // rsi
  int v95; // ecx
  char v96; // dl
  int v97; // ecx
  char v98; // al
  GroupScriptConfig *v99; // r8
  common::milog::MiLogStream *v100; // rax
  common::milog::MiLogStream *v101; // rax
  char *v102; // rsi
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>,bool> v103; // rax
  common::milog::MiLogStream *v104; // rax
  common::milog::MiLogStream *v105; // rax
  unsigned __int64 v106; // rax
  char *v107; // rsi
  char *v108; // rsi
  data::EventType *v109; // rax
  int *v110; // rdx
  int v111; // ecx
  char v112; // al
  char *v113; // rsi
  data::EventType *v114; // rax
  int *v115; // rdx
  int v116; // ecx
  char v117; // al
  std::unordered_map<data::EventType,unsigned int>::mapped_type *v118; // rax
  std::pair<std::__detail::_Node_iterator<unsigned int,true,false>,bool> v119; // rax
  common::milog::MiLogStream *v120; // rax
  common::milog::MiLogStream *v121; // rax
  unsigned __int64 v122; // rax
  unsigned __int64 v123; // rax
  std::tuple_element<1,const std::pair<const data::EventType,unsigned int> >::type *v124; // rax
  common::milog::MiLogStream *v125; // rax
  common::milog::MiLogStream *v126; // rdx
  common::milog::MiLogStream *v127; // rax
  common::milog::MiLogStream *v128; // rdx
  common::milog::MiLogStream *v129; // rax
  common::milog::MiLogStream *v130; // rax
  unsigned int v131; // esi
  common::milog::MiLogStream *v132; // rax
  common::milog::MiLogStream *v133; // rax
  int v134; // r14d
  LuaScript *v135; // rax
  common::milog::MiLogStream *v136; // rax
  common::milog::MiLogStream *v137; // rax
  common::milog::MiLogStream *v138; // rax
  common::milog::MiLogStream *v139; // rax
  common::milog::MiLogStream *v140; // rax
  _BOOL4 v141; // r14d
  unsigned int v142; // esi
  common::milog::MiLogStream *v143; // rax
  common::milog::MiLogStream *v144; // rax
  int v145; // r14d
  LuaScript *v146; // rax
  common::milog::MiLogStream *v147; // rax
  common::milog::MiLogStream *v148; // rax
  common::milog::MiLogStream *v149; // rax
  common::milog::MiLogStream *v150; // rax
  common::milog::MiLogStream *v151; // rax
  int v152; // r14d
  SceneScriptConfig *v153; // r8
  common::milog::MiLogStream *v155; // rax
  common::milog::MiLogStream *v156; // rax
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>,bool> v157; // rax
  common::milog::MiLogStream *v158; // rax
  common::milog::MiLogStream *v159; // rax
  int v160; // r14d
  int v161; // r14d
  int v162; // r14d
  int v163; // r14d
  unsigned __int64 v164; // rax
  int v165; // eax
  const char (*v167)[5]; // [rsp+0h] [rbp-2240h]
  Vector2 *v168; // [rsp+8h] [rbp-2238h]
  HK4EDesignConfig *configa; // [rsp+10h] [rbp-2230h]
  LuaConfigMgr *thisa; // [rsp+18h] [rbp-2228h]
  const char (*v171)[9]; // [rsp+20h] [rbp-2220h]
  Vector3 *v172; // [rsp+28h] [rbp-2218h]
  data::SceneExcelConfigMap *scene_config_map; // [rsp+30h] [rbp-2210h]
  data::SceneExcelConfigMap *__for_range; // [rsp+38h] [rbp-2208h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false>::reference p; // [rsp+40h] [rbp-2200h]
  std::vector<luabind::adl::object> *__for_range_0; // [rsp+48h] [rbp-21F8h]
  luabind::adl::object *obj; // [rsp+50h] [rbp-21F0h]
  std::vector<unsigned int> *__for_range_1; // [rsp+58h] [rbp-21E8h]
  std::unordered_map<data::EventType,unsigned int> *__for_range_6; // [rsp+60h] [rbp-21E0h]
  std::__detail::_Node_iterator<std::pair<const data::EventType,unsigned int>,false,false>::reference v180; // [rsp+68h] [rbp-21D8h]
  std::tuple_element<0,std::pair<const data::EventType,unsigned int> >::type *event_type; // [rsp+70h] [rbp-21D0h]
  std::tuple_element<1,const std::pair<const data::EventType,unsigned int> >::type *group_count; // [rsp+78h] [rbp-21C8h]
  BlockScriptConfig *block_script_config; // [rsp+80h] [rbp-21C0h]
  std::vector<luabind::adl::object> *__for_range_2; // [rsp+88h] [rbp-21B8h]
  luabind::adl::object *group_obj; // [rsp+90h] [rbp-21B0h]
  std::unordered_map<std::string,TriggerScriptConfig> *__for_range_3; // [rsp+98h] [rbp-21A8h]
  std::set<data::EventType> *__for_range_5; // [rsp+A0h] [rbp-21A0h]
  std::__detail::_Node_iterator<std::pair<const std::string,TriggerScriptConfig>,false,true>::reference v188; // [rsp+A8h] [rbp-2198h]
  std::vector<data::EventType> *__for_range_4; // [rsp+C0h] [rbp-2180h]
  const std::set<data::EventType> *valid_dungeon_broadcast_evt_set; // [rsp+C8h] [rbp-2178h]
  char v191[8560]; // [rsp+D0h] [rbp-2170h] BYREF

  thisa = this;
  configa = config;
  v3 = (unsigned __int64)v191;
  v168 = (Vector2 *)v191;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_8(8512LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "110 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 "
                        "9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unknown> 208 4 13 sce"
                        "ne_id:2491 224 4 13 block_id:2600 240 4 13 group_id:2641 256 4 15 event_type:2671 272 4 15 event"
                        "_type:2680 288 8 16 __for_begin:2489 320 8 14 __for_end:2489 352 8 16 __for_begin:2556 384 8 14 "
                        "__for_end:2556 416 8 16 __for_begin:2600 448 8 14 __for_end:2600 480 8 16 __for_begin:2630 512 8"
                        " 14 __for_end:2630 544 8 16 __for_begin:2669 576 8 14 __for_end:2669 608 8 16 __for_begin:2671 6"
                        "40 8 14 __for_end:2671 672 8 16 __for_begin:2680 704 8 14 __for_end:2680 736 8 16 __for_begin:26"
                        "92 768 8 14 __for_end:2692 800 16 21 scene_script_ptr:2502 832 16 21 scene_config_obj:2514 864 1"
                        "6 24 born_point_list_obj:2550 896 16 23 roome_safe_pos_obj:2570 928 16 21 block_script_ptr:2614 "
                        "960 16 28 monster_pool_script_ptr:2705 992 16 33 vision_type_mutex_script_ptr:2727 1024 24 19 po"
                        "int_obj_list:2553 1088 24 17 point_config:2558 1152 24 14 block_vec:2593 1216 24 18 group_obj_ve"
                        "c:2623 1280 32 9 <unknown> 1344 32 14 scene_dir:2493 1408 32 9 <unknown> 1472 32 9 <unknown> 153"
                        "6 32 22 scene_script_name:2494 1600 32 9 <unknown> 1664 32 16 script_path:2496 1728 32 9 <unknow"
                        "n> 1792 32 9 <unknown> 1856 32 9 <unknown> 1920 32 9 <unknown> 1984 32 9 <unknown> 2048 32 9 <un"
                        "known> 2112 32 9 <unknown> 2176 32 9 <unknown> 2240 32 9 <unknown> 2304 32 9 <unknown> 2368 32 9"
                        " <unknown> 2432 32 9 <unknown> 2496 32 9 <unknown> 2560 32 9 <unknown> 2624 32 9 <unknown> 2688 "
                        "32 9 <unknown> 2752 32 28 dummy_point_script_path:2585 2816 32 9 <unknown> 2880 32 9 <unknown> 2"
                        "944 32 9 <unknown> 3008 32 9 <unknown> 3072 32 9 <unknown> 3136 32 22 block_script_name:2613 320"
                        "0 32 9 <unknown> 3264 32 9 <unknown> 3328 32 9 <unknown> 3392 32 9 <unknown> 3456 32 9 <unknown>"
                        " 3520 32 9 <unknown> 3584 32 9 <unknown> 3648 32 9 <unknown> 3712 32 9 <unknown> 3776 32 22 grou"
                        "p_script_path:2648 3840 32 9 <unknown> 3904 32 9 <unknown> 3968 32 9 <unknown> 4032 32 9 <unknow"
                        "n> 4096 32 9 <unknown> 4160 32 9 <unknown> 4224 32 9 <unknown> 4288 32 9 <unknown> 4352 32 29 mo"
                        "nster_pool_script_path:2702 4416 32 9 <unknown> 4480 32 9 <unknown> 4544 32 9 <unknown> 4608 32 "
                        "9 <unknown> 4672 32 9 <unknown> 4736 32 9 <unknown> 4800 32 34 vision_type_mutex_script_path:272"
                        "4 4864 32 9 <unknown> 4928 32 9 <unknown> 4992 32 9 <unknown> 5056 32 9 <unknown> 5120 32 9 <unk"
                        "nown> 5184 32 9 <unknown> 5248 32 9 <unknown> 5312 32 9 <unknown> 5376 48 32 dungeon_broadcast_e"
                        "vent_set:2668 5456 304 29 group_info_script_config:2632 5824 872 24 scene_script_config:2511 683"
                        "2 1544 24 group_script_config:2649";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::loadAllSceneScript;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234753535;
  v5[536862723] = -234753535;
  v5[536862724] = -234753535;
  v5[536862725] = -234753535;
  v5[536862726] = -234556927;
  v5[536862727] = -234556924;
  v5[536862728] = -234556924;
  v5[536862729] = -218959360;
  v5[536862730] = -218959360;
  v5[536862731] = -218959360;
  v5[536862732] = -218959360;
  v5[536862733] = -218959360;
  v5[536862734] = -218959360;
  v5[536862735] = -218959360;
  v5[536862736] = -218959360;
  v5[536862737] = -218959360;
  v5[536862738] = -218959360;
  v5[536862739] = -218959360;
  v5[536862740] = -218959360;
  v5[536862741] = -218959360;
  v5[536862742] = -218959360;
  v5[536862743] = -218959360;
  v5[536862744] = -218959360;
  v5[536862745] = -219021312;
  v5[536862746] = -219021312;
  v5[536862747] = -219021312;
  v5[536862748] = -219021312;
  v5[536862749] = -219021312;
  v5[536862750] = -219021312;
  v5[536862751] = -219021312;
  v5[536862752] = -234881024;
  v5[536862753] = -218959118;
  v5[536862754] = -234881024;
  v5[536862755] = -218959118;
  v5[536862756] = -234881024;
  v5[536862757] = -218959118;
  v5[536862758] = -234881024;
  v5[536862759] = -218959118;
  v5[536862761] = -218959118;
  v5[536862763] = -218959118;
  v5[536862765] = -218959118;
  v5[536862767] = -218959118;
  v5[536862769] = -218959118;
  v5[536862771] = -218959118;
  v5[536862773] = -218959118;
  v5[536862775] = -218959118;
  v5[536862777] = -218959118;
  v5[536862779] = -218959118;
  v5[536862781] = -218959118;
  v5[536862783] = -218959118;
  v5[536862785] = -218959118;
  v5[536862787] = -218959118;
  v5[536862789] = -218959118;
  v5[536862791] = -218959118;
  v5[536862793] = -218959118;
  v5[536862795] = -218959118;
  v5[536862797] = -218959118;
  v5[536862799] = -218959118;
  v5[536862801] = -218959118;
  v5[536862803] = -218959118;
  v5[536862805] = -218959118;
  v5[536862807] = -218959118;
  v5[536862809] = -218959118;
  v5[536862811] = -218959118;
  v5[536862813] = -218959118;
  v5[536862815] = -218959118;
  v5[536862817] = -218959118;
  v5[536862819] = -218959118;
  v5[536862821] = -218959118;
  v5[536862823] = -218959118;
  v5[536862825] = -218959118;
  v5[536862827] = -218959118;
  v5[536862829] = -218959118;
  v5[536862831] = -218959118;
  v5[536862833] = -218959118;
  v5[536862835] = -218959118;
  v5[536862837] = -218959118;
  v5[536862839] = -218959118;
  v5[536862841] = -218959118;
  v5[536862843] = -218959118;
  v5[536862845] = -218959118;
  v5[536862847] = -218959118;
  v5[536862849] = -218959118;
  v5[536862851] = -218959118;
  v5[536862853] = -218959118;
  v5[536862855] = -218959118;
  v5[536862857] = -218959118;
  v5[536862859] = -218959118;
  v5[536862861] = -218959118;
  v5[536862863] = -218959118;
  v5[536862865] = -218959118;
  v5[536862867] = -218959118;
  v5[536862869] = -218959118;
  v5[536862871] = -218959118;
  v5[536862873] = -218959118;
  v5[536862875] = -218959118;
  v5[536862877] = -218959118;
  v5[536862879] = -218959118;
  v5[536862881] = -218959118;
  v5[536862883] = -218959118;
  v5[536862885] = -218959118;
  v5[536862887] = -218959118;
  v5[536862889] = -219021312;
  v5[536862890] = 62194;
  v5[536862900] = -218959118;
  v5[536862901] = -218959118;
  v5[536862929] = -218959360;
  v5[536862930] = -218959118;
  v5[536862931] = -218959118;
  v5[536862932] = -218959118;
  v5[536862933] = 62194;
  v5[536862981] = -218103808;
  v5[536862982] = -202116109;
  v5[536862983] = -202116109;
  v5[536862984] = -202116109;
  v5[536862985] = -202116109;
  HIDWORD(v172) = 0;
  scene_config_map = &config->txt_config_mgr.scene_config_mgr.scene_excel_config_map;
  v6 = std::set<unsigned int>::insert(&this->all_block_set, &LuaConfigMgr::VIRTUAL_BLOCK_ID);
  if ( !v6.second )
  {
    if ( *(char *)(((v3 + 1280) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 1311) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 1311) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 1280, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v3 + 1280),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllSceneScript",
      2485);
    v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v3 + 1280),
           (const char (*)[16])"[CONFIG_ERROR] ");
    v8 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(v7, (const char (*)[20])"duplicate block_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &LuaConfigMgr::VIRTUAL_BLOCK_ID);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1280));
    v2 = -1;
  }
  else
  {
    __for_range = &config->txt_config_mgr.scene_config_mgr.scene_excel_config_map;
    if ( *(_BYTE *)(((v3 + 288) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v3 + 288, &LuaConfigMgr::VIRTUAL_BLOCK_ID);
    *(std::unordered_map<unsigned int,data::SceneExcelConfig>::iterator *)(v3 + 288) = std::unordered_map<unsigned int,data::SceneExcelConfig>::begin(scene_config_map);
    if ( *(_BYTE *)(((v3 + 320) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v3 + 320, &LuaConfigMgr::VIRTUAL_BLOCK_ID);
    *(std::unordered_map<unsigned int,data::SceneExcelConfig>::iterator *)(v3 + 320) = std::unordered_map<unsigned int,data::SceneExcelConfig>::end(scene_config_map);
    while ( 1 )
    {
      v9 = (char *)(v3 + 320);
      if ( !std::__detail::operator!=<std::pair<unsigned int const,data::SceneExcelConfig>,false>(
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::SceneExcelConfig>,false> *)(v3 + 288),
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::SceneExcelConfig>,false> *)(v3 + 320)) )
        break;
      p = std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false> *const)(v3 + 288));
      *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) = 4;
      if ( *(_BYTE *)(((unsigned __int64)p >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)p >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(p);
      }
      first = p->first;
      v11 = *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000);
      if ( v11 != 0 && v11 <= 3 )
      {
        LOBYTE(v9) = v11 != 0;
        __asan_report_store4(v3 + 208, v9);
      }
      *(_DWORD *)(v3 + 208) = first;
      *(_DWORD *)(((v3 + 1344) >> 3) + 0x7FFF8000) = 0;
      *(_DWORD *)(((v3 + 1472) >> 3) + 0x7FFF8000) = 0;
      *(_DWORD *)(((v3 + 1408) >> 3) + 0x7FFF8000) = 0;
      v12 = *(_DWORD *)(v3 + 208);
      if ( *(char *)(((v3 + 1408) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 1439) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 1439) >> 3) + 0x7FFF8000) )
      {
        v12 = 32;
        __asan_report_store_n(v3 + 1408, 32LL);
      }
      common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v3 + 1408), v12);
      v13 = (__int64)configa;
      if ( *(char *)(((v3 + 1472) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 1503) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 1503) >> 3) + 0x7FFF8000) )
      {
        v13 = 32LL;
        __asan_report_store_n(v3 + 1472, 32LL);
      }
      std::operator+<char>((std::string *)(v3 + 1472), (const std::string *)v13, (std::string *)(v3 + 1408));
      if ( *(char *)(((v3 + 1344) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 1375) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 1375) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 1344, 32LL);
      }
      std::operator+<char>((std::string *)(v3 + 1344), (std::string *)(v3 + 1472), "/");
      std::string::~string((void *)(v3 + 1472));
      *(_DWORD *)(((v3 + 1472) >> 3) + 0x7FFF8000) = -117901064;
      std::string::~string((void *)(v3 + 1408));
      *(_DWORD *)(((v3 + 1408) >> 3) + 0x7FFF8000) = -117901064;
      *(_DWORD *)(((v3 + 1536) >> 3) + 0x7FFF8000) = 0;
      *(_DWORD *)(((v3 + 1600) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_load4(v3 + 208);
      v14 = *(_DWORD *)(v3 + 208);
      if ( *(char *)(((v3 + 1600) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 1631) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 1631) >> 3) + 0x7FFF8000) )
      {
        v14 = 32;
        __asan_report_store_n(v3 + 1600, 32LL);
      }
      common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v3 + 1600), v14);
      if ( *(char *)(((v3 + 1536) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 1567) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 1567) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 1536, 32LL);
      }
      std::operator+<char>((std::string *)(v3 + 1536), "scene", (std::string *)(v3 + 1600));
      std::string::~string((void *)(v3 + 1600));
      *(_DWORD *)(((v3 + 1600) >> 3) + 0x7FFF8000) = -117901064;
      *(_DWORD *)(((v3 + 1664) >> 3) + 0x7FFF8000) = 0;
      *(_DWORD *)(((v3 + 1728) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 1728) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 1759) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 1759) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 1728, 32LL);
      }
      std::operator+<char>(
        (std::string *)(v3 + 1728),
        (const std::string *)(v3 + 1344),
        (const std::string *)(v3 + 1536));
      if ( *(char *)(((v3 + 1664) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 1695) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 1695) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 1664, 32LL);
      }
      std::operator+<char>((std::string *)(v3 + 1664), (std::string *)(v3 + 1728), ".lua");
      std::string::~string((void *)(v3 + 1728));
      *(_DWORD *)(((v3 + 1728) >> 3) + 0x7FFF8000) = -117901064;
      if ( common::tools::FileUtils::fileExists((const std::string *)(v3 + 1664)) )
      {
        *(_DWORD *)(((v3 + 1792) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v3 + 1792) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v3 + 1823) >> 3) + 0x7FFF8000) != 0
          && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 1823) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v3 + 1792, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 1792),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/lua_config_mgr.cpp",
          "loadAllSceneScript",
          2499);
        v15 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(
                (common::milog::MiLogStream *const)(v3 + 1792),
                (const char (*)[10])"scene_id:");
        v16 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v15,
                (const unsigned int *)(v3 + 208));
        common::milog::MiLogStream::operator<<<char [70],(char *[70])0>(v16, (const char (*)[70])byte_1A53E0C0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1792));
        *(_DWORD *)(((v3 + 1792) >> 3) + 0x7FFF8000) = -117901064;
        v17 = 0;
      }
      else
      {
        *(_WORD *)(((v3 + 800) >> 3) + 0x7FFF8000) = 0;
        if ( *(_WORD *)(((v3 + 800) >> 3) + 0x7FFF8000) )
          __asan_report_store16();
        LuaScriptMgr::createFromFilePath((const std::string *)(v3 + 800), (const LuaConfigMgr *)(v3 + 1664));
        if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v3 + 800)) )
        {
          *(_DWORD *)(((v3 + 1856) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 1856) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 1887) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 1887) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 1856, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 1856),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadAllSceneScript",
            2505);
          v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v3 + 1856),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v19 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                  v18,
                  (const char (*)[53])"LuaScriptMgr::createFromFilePath fails, script_path:");
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v19, (const std::string *)(v3 + 1664));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1856));
          *(_DWORD *)(((v3 + 1856) >> 3) + 0x7FFF8000) = -117901064;
          HIDWORD(v172) = -1;
          v20 = 0;
        }
        else
        {
          __asan_unpoison_stack_memory(v3 + 5824, 872LL);
          v21 = configa;
          SceneScriptConfig::SceneScriptConfig((SceneScriptConfig *const)(v3 + 5824), configa);
          if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_load4(v3 + 208);
          v22 = *(_DWORD *)(v3 + 208);
          v23 = *(_BYTE *)(((v3 + 6000) >> 3) + 0x7FFF8000);
          if ( v23 != 0 && v23 <= 3 )
          {
            LOBYTE(v21) = v23 != 0;
            __asan_report_store4(v3 + 6000, v21);
          }
          *(_DWORD *)(v3 + 6000) = v22;
          std::shared_ptr<LuaScript>::operator=(
            (std::shared_ptr<LuaScript> *const)(v3 + 6408),
            (const std::shared_ptr<LuaScript> *)(v3 + 800));
          *(_WORD *)(((v3 + 832) >> 3) + 0x7FFF8000) = 0;
          luabind::adl::object::object((luabind::adl::object *const)(v3 + 832));
          v24 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 800));
          *(_DWORD *)(((v3 + 1920) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v3 + 48);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v3 + 1920),
            "scene_config",
            (const std::allocator<char> *)(v3 + 48));
          LOBYTE(v24) = LuaScript::getGlobalVariable(
                          v24,
                          (const std::string *)(v3 + 1920),
                          (luabind::adl::object *)(v3 + 832)) != 0;
          std::string::~string((void *)(v3 + 1920));
          *(_DWORD *)(((v3 + 1920) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v3 + 48);
          *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v24 )
          {
            *(_DWORD *)(((v3 + 1984) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 1984) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 2015) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 2015) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 1984, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 1984),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "loadAllSceneScript",
              2519);
            v25 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 1984),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v26 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                    v25,
                    (const std::string *)(v3 + 1664));
            common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(v26, (const char (*)[69])byte_1A53E1E0);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1984));
            *(_DWORD *)(((v3 + 1984) >> 3) + 0x7FFF8000) = -117901064;
            HIDWORD(v172) = -1;
            v27 = 0;
          }
          else
          {
            *(_DWORD *)(((v3 + 2048) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v3 + 64);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v3 + 2048),
              "begin_pos",
              (const std::allocator<char> *)(v3 + 64));
            v28 = ScriptUtil::getTableValue<Vector2,char const(&)[5],Vector2&,char const(&)[9],Vector3 &,char const(&)[9],Vector3 &,char const(&)[14],Vector2&>(
                    &ScriptUtil::no_exception_instance,
                    (const luabind::adl::object *)(v3 + 832),
                    (const std::string *)(v3 + 2048),
                    (Vector2 *)(v3 + 5984),
                    (const char (*)[5])"size",
                    (Vector2 *)(v3 + 5992),
                    (const char (*)[9])"born_pos",
                    (Vector3 *)(v3 + 6028),
                    (const char (*)[9])"born_rot",
                    (Vector3 *)(v3 + 6040),
                    (const char (*)[14])"vision_anchor",
                    (Vector2 *)(v3 + 6004),
                    v167,
                    v168,
                    (const char (*)[9])&configa->scene_lua_base_dir._M_dataplus._M_p,
                    (Vector3 *)thisa,
                    v171,
                    v172,
                    (const char (*)[14])scene_config_map,
                    (Vector2 *)__for_range) != 0;
            std::string::~string((void *)(v3 + 2048));
            *(_DWORD *)(((v3 + 2048) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v3 + 64);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            if ( v28 )
            {
              *(_DWORD *)(((v3 + 2112) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 2112) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 2143) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 2143) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 2112, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 2112),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "loadAllSceneScript",
                2532);
              v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 2112),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v3 + 208);
              common::milog::MiLogStream::operator()(v29, &byte_1A53E360, *(unsigned int *)(v3 + 208));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2112));
              *(_DWORD *)(((v3 + 2112) >> 3) + 0x7FFF8000) = -117901064;
              HIDWORD(v172) = -1;
              v27 = 0;
            }
            else if ( SceneScriptConfig::rewriteGridMapBeginPosAndSize((SceneScriptConfig *const)(v3 + 5824)) )
            {
              *(_DWORD *)(((v3 + 2176) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 2176) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 2207) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 2207) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 2176, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 2176),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "loadAllSceneScript",
                2538);
              v30 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 2176),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v3 + 208);
              common::milog::MiLogStream::operator()(v30, &byte_1A53E3C0, *(unsigned int *)(v3 + 208));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2176));
              *(_DWORD *)(((v3 + 2176) >> 3) + 0x7FFF8000) = -117901064;
              HIDWORD(v172) = -1;
              v27 = 0;
            }
            else
            {
              *(_DWORD *)(((v3 + 2240) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v3 + 80);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v3 + 2240),
                "die_y",
                (const std::allocator<char> *)(v3 + 80));
              ScriptUtil::getTableValue<float>(
                &ScriptUtil::no_exception_instance,
                (const luabind::adl::object *)(v3 + 832),
                (const std::string *)(v3 + 2240),
                (float *)(v3 + 6052));
              std::string::~string((void *)(v3 + 2240));
              *(_DWORD *)(((v3 + 2240) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v3 + 80);
              *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
              *(_DWORD *)(((v3 + 2304) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v3 + 96);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v3 + 2304),
                "city_id",
                (const std::allocator<char> *)(v3 + 96));
              ScriptUtil::getTableValue<unsigned int>(
                &ScriptUtil::no_exception_instance,
                (const luabind::adl::object *)(v3 + 832),
                (const std::string *)(v3 + 2304),
                (unsigned int *)(v3 + 6056));
              std::string::~string((void *)(v3 + 2304));
              *(_DWORD *)(((v3 + 2304) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v3 + 96);
              *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = -8;
              *(_WORD *)(((v3 + 864) >> 3) + 0x7FFF8000) = 0;
              luabind::adl::object::object((luabind::adl::object *const)(v3 + 864));
              *(_DWORD *)(((v3 + 2368) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v3 + 112);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v3 + 2368),
                "born_point_list",
                (const std::allocator<char> *)(v3 + 112));
              v31 = ScriptUtil::getTableValue(
                      &ScriptUtil::no_exception_instance,
                      (const luabind::adl::object *)(v3 + 832),
                      (const std::string *)(v3 + 2368),
                      (luabind::adl::object *)(v3 + 864)) == 0;
              std::string::~string((void *)(v3 + 2368));
              *(_DWORD *)(((v3 + 2368) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v3 + 112);
              *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = -8;
              if ( !v31 )
                goto LABEL_88;
              v32 = ((v3 + 1024) >> 3) + 2147450880;
              *(_WORD *)v32 = 0;
              *(_BYTE *)(v32 + 2) = 0;
              std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v3 + 1024));
              v33 = (char *)(v3 + 864);
              if ( ScriptUtil::getTableValueAsVector<luabind::adl::object>(
                     &ScriptUtil::no_exception_instance,
                     (const luabind::adl::object *)(v3 + 864),
                     (std::vector<luabind::adl::object> *)(v3 + 1024)) )
              {
                goto LABEL_85;
              }
              __for_range_0 = (std::vector<luabind::adl::object> *)(v3 + 1024);
              *(_BYTE *)(((v3 + 352) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 352) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 352, v33);
              *(std::vector<luabind::adl::object>::iterator *)(v3 + 352) = std::vector<luabind::adl::object>::begin(__for_range_0);
              *(_BYTE *)(((v3 + 384) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 384) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 384, v33);
              *(std::vector<luabind::adl::object>::iterator *)(v3 + 384) = std::vector<luabind::adl::object>::end(__for_range_0);
              while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                        (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 352),
                        (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 384)) )
              {
                obj = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 352));
                v34 = ((v3 + 1088) >> 3) + 2147450880;
                *(_WORD *)v34 = 0;
                *(_BYTE *)(v34 + 2) = 0;
                DummyPointScriptConfig::DummyPointScriptConfig((DummyPointScriptConfig *const)(v3 + 1088));
                *(_DWORD *)(((v3 + 2432) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v3 + 128);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v3 + 2432),
                  off_1A536440,
                  (const std::allocator<char> *)(v3 + 128));
                v35 = ScriptUtil::getTableValue<Vector3,char const(&)[4],Vector3&>(
                        &ScriptUtil::no_exception_instance,
                        obj,
                        (const std::string *)(v3 + 2432),
                        (Vector3 *)(v3 + 1088),
                        (const char (*)[4])off_1A536400,
                        (Vector3 *)(v3 + 1100),
                        (const char (*)[4])v167,
                        (Vector3 *)v168) != 0;
                std::string::~string((void *)(v3 + 2432));
                *(_DWORD *)(((v3 + 2432) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v3 + 128);
                *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = -8;
                if ( v35 )
                {
                  *(_DWORD *)(((v3 + 2496) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v3 + 2496) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v3 + 2527) >> 3) + 0x7FFF8000) != 0
                    && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 2527) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v3 + 2496, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v3 + 2496),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "loadAllSceneScript",
                    2561);
                  v36 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v3 + 2496),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
                  {
                    __asan_report_load4(v3 + 208);
                  }
                  common::milog::MiLogStream::operator()(v36, &byte_1A53E4E0, *(unsigned int *)(v3 + 208));
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2496));
                  *(_DWORD *)(((v3 + 2496) >> 3) + 0x7FFF8000) = -117901064;
                  v2 = -1;
                  v37 = 0;
                }
                else
                {
                  std::vector<DummyPointScriptConfig>::emplace_back<DummyPointScriptConfig&>(
                    (std::vector<DummyPointScriptConfig> *const)(v3 + 6064),
                    (DummyPointScriptConfig *)(v3 + 1088),
                    (DummyPointScriptConfig *)(v3 + 6064));
                  v37 = 1;
                }
                v38 = ((v3 + 1088) >> 3) + 2147450880;
                *(_WORD *)v38 = -1800;
                *(_BYTE *)(v38 + 2) = -8;
                if ( v37 != 1 )
                {
                  v39 = 0;
                  goto LABEL_83;
                }
                __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 352));
              }
              v39 = 1;
LABEL_83:
              *(_BYTE *)(((v3 + 352) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v3 + 384) >> 3) + 0x7FFF8000) = -8;
              if ( v39 == 1 )
LABEL_85:
                v40 = 1;
              else
                v40 = 0;
              std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v3 + 1024));
              v41 = ((v3 + 1024) >> 3) + 2147450880;
              *(_WORD *)v41 = -1800;
              *(_BYTE *)(v41 + 2) = -8;
              if ( v40 == 1 )
              {
LABEL_88:
                *(_WORD *)(((v3 + 896) >> 3) + 0x7FFF8000) = 0;
                luabind::adl::object::object((luabind::adl::object *const)(v3 + 896));
                *(_DWORD *)(((v3 + 2560) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v3 + 144);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v3 + 2560),
                  "room_safe_pos",
                  (const std::allocator<char> *)(v3 + 144));
                v43 = ScriptUtil::getTableValue(
                        &ScriptUtil::no_exception_instance,
                        (const luabind::adl::object *)(v3 + 832),
                        (const std::string *)(v3 + 2560),
                        (luabind::adl::object *)(v3 + 896)) == 0;
                std::string::~string((void *)(v3 + 2560));
                *(_DWORD *)(((v3 + 2560) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v3 + 144);
                *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = -8;
                if ( !v43 )
                  goto LABEL_95;
                *(_DWORD *)(((v3 + 2624) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v3 + 160);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v3 + 2624),
                  "scene_id",
                  (const std::allocator<char> *)(v3 + 160));
                v44 = ScriptUtil::getTableValue<unsigned int,char const(&)[9],Vector3 &,char const(&)[9],Vector3 &>(
                        &ScriptUtil::no_exception_instance,
                        (const luabind::adl::object *)(v3 + 896),
                        (const std::string *)(v3 + 2624),
                        (unsigned int *)(v3 + 6100),
                        (const char (*)[9])"safe_pos",
                        (Vector3 *)(v3 + 6104),
                        (const char (*)[9])"safe_rot",
                        (Vector3 *)(v3 + 6116),
                        (const char (*)[9])v167,
                        (Vector3 *)v168,
                        (const char (*)[9])&configa->scene_lua_base_dir._M_dataplus._M_p,
                        (Vector3 *)thisa) != 0;
                std::string::~string((void *)(v3 + 2624));
                *(_DWORD *)(((v3 + 2624) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v3 + 160);
                *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = -8;
                if ( v44 )
                {
                  *(_DWORD *)(((v3 + 2688) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v3 + 2688) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v3 + 2719) >> 3) + 0x7FFF8000) != 0
                    && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 2719) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v3 + 2688, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v3 + 2688),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "loadAllSceneScript",
                    2578);
                  v45 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v3 + 2688),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
                  {
                    __asan_report_load4(v3 + 208);
                  }
                  common::milog::MiLogStream::operator()(v45, &byte_1A53E640, *(unsigned int *)(v3 + 208));
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2688));
                  *(_DWORD *)(((v3 + 2688) >> 3) + 0x7FFF8000) = -117901064;
                  v2 = -1;
                  v46 = 0;
                }
                else
                {
LABEL_95:
                  *(_DWORD *)(((v3 + 2752) >> 3) + 0x7FFF8000) = 0;
                  *(_DWORD *)(((v3 + 2816) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v3 + 2816) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v3 + 2847) >> 3) + 0x7FFF8000) != 0
                    && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 2847) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v3 + 2816, 32LL);
                  }
                  std::operator+<char>(
                    (std::string *)(v3 + 2816),
                    (const std::string *)(v3 + 1344),
                    (const std::string *)(v3 + 1536));
                  if ( *(char *)(((v3 + 2752) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v3 + 2783) >> 3) + 0x7FFF8000) != 0
                    && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 2783) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v3 + 2752, 32LL);
                  }
                  std::operator+<char>((std::string *)(v3 + 2752), (std::string *)(v3 + 2816), "_dummy_points.lua");
                  std::string::~string((void *)(v3 + 2816));
                  *(_DWORD *)(((v3 + 2816) >> 3) + 0x7FFF8000) = -117901064;
                  if ( LuaConfigMgr::loadDummyPointScriptConfig(
                         thisa,
                         (const std::string *)(v3 + 2752),
                         (SceneScriptConfig *)(v3 + 5824)) )
                  {
                    *(_DWORD *)(((v3 + 2880) >> 3) + 0x7FFF8000) = 0;
                    if ( *(char *)(((v3 + 2880) >> 3) + 0x7FFF8000) < 0
                      || *(_BYTE *)(((v3 + 2911) >> 3) + 0x7FFF8000) != 0
                      && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 2911) >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_store_n(v3 + 2880, 32LL);
                    }
                    common::milog::MiLogStream::create(
                      (common::milog::MiLogStream *)(v3 + 2880),
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/lua_config_mgr.cpp",
                      "loadAllSceneScript",
                      2588);
                    v47 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                            (common::milog::MiLogStream *const)(v3 + 2880),
                            (const char (*)[16])"[CONFIG_ERROR] ");
                    v48 = std::string::c_str(v3 + 2752);
                    common::milog::MiLogStream::operator()(v47, aS_21, v48);
                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2880));
                    *(_DWORD *)(((v3 + 2880) >> 3) + 0x7FFF8000) = -117901064;
                    v2 = -1;
                    v49 = 0;
                  }
                  else
                  {
                    v50 = ((v3 + 1152) >> 3) + 2147450880;
                    *(_WORD *)v50 = 0;
                    *(_BYTE *)(v50 + 2) = 0;
                    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v3 + 1152));
                    v51 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 800));
                    *(_DWORD *)(((v3 + 2944) >> 3) + 0x7FFF8000) = 0;
                    *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v3 + 176);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v3 + 2944),
                      "blocks",
                      (const std::allocator<char> *)(v3 + 176));
                    v52 = (char *)(v3 + 2944);
                    LOBYTE(v51) = LuaScript::getGlobalVector<unsigned int>(
                                    v51,
                                    (const std::string *)(v3 + 2944),
                                    (std::vector<unsigned int> *)(v3 + 1152)) != 0;
                    std::string::~string((void *)(v3 + 2944));
                    *(_DWORD *)(((v3 + 2944) >> 3) + 0x7FFF8000) = -117901064;
                    std::allocator<char>::~allocator(v3 + 176);
                    *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = -8;
                    if ( (_BYTE)v51 )
                    {
                      *(_DWORD *)(((v3 + 3008) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v3 + 3008) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v3 + 3039) >> 3) + 0x7FFF8000) != 0
                        && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 3039) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v3 + 3008, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v3 + 3008),
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/lua_config_mgr.cpp",
                        "loadAllSceneScript",
                        2596);
                      v53 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                              (common::milog::MiLogStream *const)(v3 + 3008),
                              (const char (*)[16])"[CONFIG_ERROR] ");
                      v54 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                              v53,
                              (const char (*)[42])"getGlobalVariable blocks fails, scene_id:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v54,
                        (const unsigned int *)(v3 + 208));
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3008));
                      *(_DWORD *)(((v3 + 3008) >> 3) + 0x7FFF8000) = -117901064;
                      HIDWORD(v172) = -1;
                      v55 = 0;
                    }
                    else
                    {
                      __for_range_1 = (std::vector<unsigned int> *)(v3 + 1152);
                      *(_BYTE *)(((v3 + 416) >> 3) + 0x7FFF8000) = 0;
                      if ( *(_BYTE *)(((v3 + 416) >> 3) + 0x7FFF8000) )
                        __asan_report_store8(v3 + 416, v52);
                      *(std::vector<unsigned int>::iterator *)(v3 + 416) = std::vector<unsigned int>::begin(__for_range_1);
                      *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) = 0;
                      if ( *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) )
                        __asan_report_store8(v3 + 448, v52);
                      *(std::vector<unsigned int>::iterator *)(v3 + 448) = std::vector<unsigned int>::end(__for_range_1);
                      while ( 1 )
                      {
                        v56 = (char *)(v3 + 448);
                        if ( !__gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(
                                (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v3 + 416),
                                (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v3 + 448)) )
                          break;
                        *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) = 4;
                        v57 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*((const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v3 + 416));
                        v58 = (int *)v57;
                        if ( *(_BYTE *)(((unsigned __int64)v57 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v57 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v57 >> 3)
                                                                                + 0x7FFF8000) )
                        {
                          __asan_report_load4(v57);
                        }
                        v59 = *v58;
                        v60 = *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000);
                        if ( v60 != 0 && v60 <= 3 )
                        {
                          LOBYTE(v56) = v60 != 0;
                          __asan_report_store4(v3 + 224, v56);
                        }
                        *(_DWORD *)(v3 + 224) = v59;
                        v61 = std::set<unsigned int>::insert(
                                &thisa->all_block_set,
                                (const std::set<unsigned int>::value_type *)(v3 + 224));
                        if ( !v61.second )
                        {
                          *(_DWORD *)(((v3 + 3072) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v3 + 3072) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 3103) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 3103) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 3072, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v3 + 3072),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/lua_config_mgr.cpp",
                            "loadAllSceneScript",
                            2605);
                          v62 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                  (common::milog::MiLogStream *const)(v3 + 3072),
                                  (const char (*)[16])"[CONFIG_ERROR] ");
                          v63 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                                  v62,
                                  (const char (*)[20])"duplicate block_id:");
                          v64 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                  v63,
                                  (const unsigned int *)(v3 + 224));
                          v65 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                  v64,
                                  (const char (*)[12])", scene_id:");
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v65,
                            (const unsigned int *)(v3 + 208));
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3072));
                          *(_DWORD *)(((v3 + 3072) >> 3) + 0x7FFF8000) = -117901064;
                          HIDWORD(v172) = -1;
                        }
                        else
                        {
                          v66 = (char *)(v3 + 224);
                          block_script_config = std::unordered_map<unsigned int,BlockScriptConfig>::operator[](
                                                  (std::unordered_map<unsigned int,BlockScriptConfig> *const)(v3 + 6240),
                                                  (const std::unordered_map<unsigned int,BlockScriptConfig>::key_type *)(v3 + 224));
                          if ( *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) != 0
                            && *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) <= 3 )
                          {
                            __asan_report_load4(v3 + 224);
                          }
                          v67 = *(_DWORD *)(v3 + 224);
                          v68 = *(_BYTE *)(((unsigned __int64)block_script_config >> 3) + 0x7FFF8000);
                          if ( v68 != 0 && v68 <= 3 )
                          {
                            LOBYTE(v66) = v68 != 0;
                            __asan_report_store4(block_script_config, v66);
                          }
                          block_script_config->block_id = v67;
                          *(_DWORD *)(((v3 + 3136) >> 3) + 0x7FFF8000) = 0;
                          *(_DWORD *)(((v3 + 3392) >> 3) + 0x7FFF8000) = 0;
                          *(_DWORD *)(((v3 + 3328) >> 3) + 0x7FFF8000) = 0;
                          v69 = *(_DWORD *)(v3 + 224);
                          if ( *(char *)(((v3 + 3328) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 3359) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 3359) >> 3) + 0x7FFF8000) )
                          {
                            v69 = 32;
                            __asan_report_store_n(v3 + 3328, 32LL);
                          }
                          common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v3 + 3328), v69);
                          *(_DWORD *)(((v3 + 3264) >> 3) + 0x7FFF8000) = 0;
                          *(_DWORD *)(((v3 + 3200) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v3 + 3200) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 3231) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 3231) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 3200, 32LL);
                          }
                          std::operator+<char>(
                            (std::string *)(v3 + 3200),
                            (const std::string *)(v3 + 1344),
                            (const std::string *)(v3 + 1536));
                          if ( *(char *)(((v3 + 3264) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 3295) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 3295) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 3264, 32LL);
                          }
                          std::operator+<char>((std::string *)(v3 + 3264), (std::string *)(v3 + 3200), "_block");
                          if ( *(char *)(((v3 + 3392) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 3423) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 3423) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 3392, 32LL);
                          }
                          std::operator+<char>(
                            (std::string *)(v3 + 3392),
                            (std::string *)(v3 + 3264),
                            (std::string *)(v3 + 3328));
                          if ( *(char *)(((v3 + 3136) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 3167) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 3167) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 3136, 32LL);
                          }
                          std::operator+<char>((std::string *)(v3 + 3136), (std::string *)(v3 + 3392), ".lua");
                          std::string::~string((void *)(v3 + 3392));
                          *(_DWORD *)(((v3 + 3392) >> 3) + 0x7FFF8000) = -117901064;
                          std::string::~string((void *)(v3 + 3264));
                          *(_DWORD *)(((v3 + 3264) >> 3) + 0x7FFF8000) = -117901064;
                          std::string::~string((void *)(v3 + 3200));
                          *(_DWORD *)(((v3 + 3200) >> 3) + 0x7FFF8000) = -117901064;
                          std::string::~string((void *)(v3 + 3328));
                          *(_DWORD *)(((v3 + 3328) >> 3) + 0x7FFF8000) = -117901064;
                          *(_WORD *)(((v3 + 928) >> 3) + 0x7FFF8000) = 0;
                          if ( *(_WORD *)(((v3 + 928) >> 3) + 0x7FFF8000) )
                            __asan_report_store16();
                          LuaScriptMgr::createFromFilePath(
                            (const std::string *)(v3 + 928),
                            (const LuaConfigMgr *)(v3 + 3136));
                          if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v3 + 928)) )
                          {
                            *(_DWORD *)(((v3 + 3456) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v3 + 3456) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v3 + 3487) >> 3) + 0x7FFF8000) != 0
                              && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 3487) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v3 + 3456, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v3 + 3456),
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/lua_config_mgr.cpp",
                              "loadAllSceneScript",
                              2617);
                            v70 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                    (common::milog::MiLogStream *const)(v3 + 3456),
                                    (const char (*)[16])"[CONFIG_ERROR] ");
                            v71 = std::string::c_str(v3 + 1664);
                            common::milog::MiLogStream::operator()(v70, &byte_1A53E800, v71);
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3456));
                            *(_DWORD *)(((v3 + 3456) >> 3) + 0x7FFF8000) = -117901064;
                            HIDWORD(v172) = -1;
                          }
                          else
                          {
                            v72 = ((v3 + 1216) >> 3) + 2147450880;
                            *(_WORD *)v72 = 0;
                            *(_BYTE *)(v72 + 2) = 0;
                            std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v3 + 1216));
                            v73 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 928));
                            *(_DWORD *)(((v3 + 3520) >> 3) + 0x7FFF8000) = 0;
                            *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) = 1;
                            std::allocator<char>::allocator(v3 + 192);
                            std::string::basic_string<std::allocator<char>>(
                              (std::string *const)(v3 + 3520),
                              "groups",
                              (const std::allocator<char> *)(v3 + 192));
                            v74 = (char *)(v3 + 3520);
                            LOBYTE(v73) = LuaScript::getGlobalVector<luabind::adl::object>(
                                            v73,
                                            (const std::string *)(v3 + 3520),
                                            (std::vector<luabind::adl::object> *)(v3 + 1216)) != 0;
                            std::string::~string((void *)(v3 + 3520));
                            *(_DWORD *)(((v3 + 3520) >> 3) + 0x7FFF8000) = -117901064;
                            std::allocator<char>::~allocator(v3 + 192);
                            *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) = -8;
                            if ( (_BYTE)v73 )
                            {
                              *(_DWORD *)(((v3 + 3584) >> 3) + 0x7FFF8000) = 0;
                              if ( *(char *)(((v3 + 3584) >> 3) + 0x7FFF8000) < 0
                                || *(_BYTE *)(((v3 + 3615) >> 3) + 0x7FFF8000) != 0
                                && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 3615) >> 3) + 0x7FFF8000) )
                              {
                                __asan_report_store_n(v3 + 3584, 32LL);
                              }
                              common::milog::MiLogStream::create(
                                (common::milog::MiLogStream *)(v3 + 3584),
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/lua_config_mgr.cpp",
                                "loadAllSceneScript",
                                2626);
                              v75 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                      (common::milog::MiLogStream *const)(v3 + 3584),
                                      (const char (*)[16])"[CONFIG_ERROR] ");
                              v76 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                                      v75,
                                      (const char (*)[42])"getGlobalVariable groups fails, scene_id:");
                              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                v76,
                                (const unsigned int *)(v3 + 208));
                              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3584));
                              *(_DWORD *)(((v3 + 3584) >> 3) + 0x7FFF8000) = -117901064;
                              HIDWORD(v172) = -1;
                            }
                            else
                            {
                              __for_range_2 = (std::vector<luabind::adl::object> *)(v3 + 1216);
                              *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) = 0;
                              if ( *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) )
                                __asan_report_store8(v3 + 480, v74);
                              *(std::vector<luabind::adl::object>::iterator *)(v3 + 480) = std::vector<luabind::adl::object>::begin(__for_range_2);
                              *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000) = 0;
                              if ( *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000) )
                                __asan_report_store8(v3 + 512, v74);
                              *(std::vector<luabind::adl::object>::iterator *)(v3 + 512) = std::vector<luabind::adl::object>::end(__for_range_2);
                              while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                                        (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 480),
                                        (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 512)) )
                              {
                                group_obj = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 480));
                                v77 = 304LL;
                                __asan_unpoison_stack_memory(v3 + 5456, 304LL);
                                GroupInfoScriptConfig::GroupInfoScriptConfig((GroupInfoScriptConfig *const)(v3 + 5456));
                                if ( *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) != 0
                                  && *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) <= 3 )
                                {
                                  __asan_report_load4(v3 + 224);
                                }
                                v78 = *(_DWORD *)(v3 + 224);
                                v79 = *(_BYTE *)(((v3 + 5460) >> 3) + 0x7FFF8000);
                                if ( v79 != 0 && (char)(((v3 + 84) & 7) + 3) >= v79 )
                                {
                                  LOBYTE(v77) = v79 != 0;
                                  __asan_report_store4(v3 + 5460, v77);
                                }
                                *(_DWORD *)(v3 + 5460) = v78;
                                if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0
                                  && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
                                {
                                  __asan_report_load4(v3 + 208);
                                }
                                v80 = group_obj;
                                if ( (unsigned int)LuaConfigMgr::loadGroupInfoScriptConfig(
                                                     thisa,
                                                     group_obj,
                                                     (std::vector<std::string> *)(v3 + 5456),
                                                     *(_DWORD *)(v3 + 208),
                                                     0) )
                                {
                                  *(_DWORD *)(((v3 + 3648) >> 3) + 0x7FFF8000) = 0;
                                  if ( *(char *)(((v3 + 3648) >> 3) + 0x7FFF8000) < 0
                                    || *(_BYTE *)(((v3 + 3679) >> 3) + 0x7FFF8000) != 0
                                    && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 3679) >> 3) + 0x7FFF8000) )
                                  {
                                    __asan_report_store_n(v3 + 3648, 32LL);
                                  }
                                  common::milog::MiLogStream::create(
                                    (common::milog::MiLogStream *)(v3 + 3648),
                                    &common::milog::MiLogDefault::default_log_obj_,
                                    4u,
                                    "./src/lua_config_mgr.cpp",
                                    "loadAllSceneScript",
                                    2637);
                                  v82 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                          (common::milog::MiLogStream *const)(v3 + 3648),
                                          (const char (*)[16])"[CONFIG_ERROR] ");
                                  v83 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                                          v82,
                                          (const char (*)[46])"loadGroupInfoScriptConfig failed,script name:");
                                  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                                    v83,
                                    (const std::string *)(v3 + 3136));
                                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3648));
                                  *(_DWORD *)(((v3 + 3648) >> 3) + 0x7FFF8000) = -117901064;
                                  HIDWORD(v172) = -1;
                                }
                                else
                                {
                                  *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) = 4;
                                  v84 = *(unsigned __int8 *)(((v3 + 5456) >> 3) + 0x7FFF8000);
                                  if ( (_BYTE)v84 != 0 && (char)v84 <= 3 )
                                    __asan_report_load4(v3 + 5456);
                                  v85 = *(_DWORD *)(v3 + 5456);
                                  v86 = *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000);
                                  if ( v86 != 0 && v86 <= 3 )
                                  {
                                    LOBYTE(v80) = v86 != 0;
                                    __asan_report_store4(v3 + 240, v80);
                                  }
                                  *(_DWORD *)(v3 + 240) = v85;
                                  v87 = std::unordered_map<unsigned int,GroupInfoScriptConfig>::emplace<unsigned int &,GroupInfoScriptConfig&>(
                                          (std::unordered_map<unsigned int,GroupInfoScriptConfig> *const)(v3 + 6296),
                                          (unsigned int *)(v3 + 240),
                                          (GroupInfoScriptConfig *)(v3 + 5456),
                                          (unsigned int *)(v3 + 6296),
                                          v81);
                                  if ( !v87.second )
                                  {
                                    *(_DWORD *)(((v3 + 3712) >> 3) + 0x7FFF8000) = 0;
                                    if ( *(char *)(((v3 + 3712) >> 3) + 0x7FFF8000) < 0
                                      || *(_BYTE *)(((v3 + 3743) >> 3) + 0x7FFF8000) != 0
                                      && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 3743) >> 3) + 0x7FFF8000) )
                                    {
                                      __asan_report_store_n(v3 + 3712, 32LL);
                                    }
                                    common::milog::MiLogStream::create(
                                      (common::milog::MiLogStream *)(v3 + 3712),
                                      &common::milog::MiLogDefault::default_log_obj_,
                                      4u,
                                      "./src/lua_config_mgr.cpp",
                                      "loadAllSceneScript",
                                      2644);
                                    v88 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                            (common::milog::MiLogStream *const)(v3 + 3712),
                                            (const char (*)[16])"[CONFIG_ERROR] ");
                                    v89 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                                            v88,
                                            (const char (*)[20])"duplicate group_id:");
                                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                      v89,
                                      (const unsigned int *)(v3 + 240));
                                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3712));
                                    *(_DWORD *)(((v3 + 3712) >> 3) + 0x7FFF8000) = -117901064;
                                    HIDWORD(v172) = -1;
                                  }
                                  else
                                  {
                                    *(_DWORD *)(((v3 + 3776) >> 3) + 0x7FFF8000) = 0;
                                    *(_DWORD *)(((v3 + 4032) >> 3) + 0x7FFF8000) = 0;
                                    *(_DWORD *)(((v3 + 3968) >> 3) + 0x7FFF8000) = 0;
                                    if ( *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) != 0
                                      && *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) <= 3 )
                                    {
                                      __asan_report_load4(v3 + 240);
                                    }
                                    v90 = *(_DWORD *)(v3 + 240);
                                    if ( *(char *)(((v3 + 3968) >> 3) + 0x7FFF8000) < 0
                                      || *(_BYTE *)(((v3 + 3999) >> 3) + 0x7FFF8000) != 0
                                      && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 3999) >> 3) + 0x7FFF8000) )
                                    {
                                      v90 = 32;
                                      __asan_report_store_n(v3 + 3968, 32LL);
                                    }
                                    common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v3 + 3968), v90);
                                    *(_DWORD *)(((v3 + 3904) >> 3) + 0x7FFF8000) = 0;
                                    *(_DWORD *)(((v3 + 3840) >> 3) + 0x7FFF8000) = 0;
                                    if ( *(char *)(((v3 + 3840) >> 3) + 0x7FFF8000) < 0
                                      || *(_BYTE *)(((v3 + 3871) >> 3) + 0x7FFF8000) != 0
                                      && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 3871) >> 3) + 0x7FFF8000) )
                                    {
                                      __asan_report_store_n(v3 + 3840, 32LL);
                                    }
                                    std::operator+<char>(
                                      (std::string *)(v3 + 3840),
                                      (const std::string *)(v3 + 1344),
                                      (const std::string *)(v3 + 1536));
                                    if ( *(char *)(((v3 + 3904) >> 3) + 0x7FFF8000) < 0
                                      || *(_BYTE *)(((v3 + 3935) >> 3) + 0x7FFF8000) != 0
                                      && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 3935) >> 3) + 0x7FFF8000) )
                                    {
                                      __asan_report_store_n(v3 + 3904, 32LL);
                                    }
                                    std::operator+<char>(
                                      (std::string *)(v3 + 3904),
                                      (std::string *)(v3 + 3840),
                                      "_group");
                                    if ( *(char *)(((v3 + 4032) >> 3) + 0x7FFF8000) < 0
                                      || *(_BYTE *)(((v3 + 4063) >> 3) + 0x7FFF8000) != 0
                                      && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 4063) >> 3) + 0x7FFF8000) )
                                    {
                                      __asan_report_store_n(v3 + 4032, 32LL);
                                    }
                                    std::operator+<char>(
                                      (std::string *)(v3 + 4032),
                                      (std::string *)(v3 + 3904),
                                      (std::string *)(v3 + 3968));
                                    if ( *(char *)(((v3 + 3776) >> 3) + 0x7FFF8000) < 0
                                      || *(_BYTE *)(((v3 + 3807) >> 3) + 0x7FFF8000) != 0
                                      && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 3807) >> 3) + 0x7FFF8000) )
                                    {
                                      __asan_report_store_n(v3 + 3776, 32LL);
                                    }
                                    std::operator+<char>((std::string *)(v3 + 3776), (std::string *)(v3 + 4032), ".lua");
                                    std::string::~string((void *)(v3 + 4032));
                                    *(_DWORD *)(((v3 + 4032) >> 3) + 0x7FFF8000) = -117901064;
                                    std::string::~string((void *)(v3 + 3904));
                                    *(_DWORD *)(((v3 + 3904) >> 3) + 0x7FFF8000) = -117901064;
                                    std::string::~string((void *)(v3 + 3840));
                                    *(_DWORD *)(((v3 + 3840) >> 3) + 0x7FFF8000) = -117901064;
                                    std::string::~string((void *)(v3 + 3968));
                                    *(_DWORD *)(((v3 + 3968) >> 3) + 0x7FFF8000) = -117901064;
                                    v91 = 1544LL;
                                    __asan_unpoison_stack_memory(v3 + 6832, 1544LL);
                                    GroupScriptConfig::GroupScriptConfig((GroupScriptConfig *const)(v3 + 6832));
                                    if ( *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) != 0
                                      && *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) <= 3 )
                                    {
                                      __asan_report_load4(v3 + 224);
                                    }
                                    v92 = *(_DWORD *)(v3 + 224);
                                    v93 = *(_BYTE *)(((v3 + 7984) >> 3) + 0x7FFF8000);
                                    if ( v93 != 0 && v93 <= 3 )
                                    {
                                      LOBYTE(v91) = v93 != 0;
                                      __asan_report_store4(v3 + 7984, v91);
                                    }
                                    *(_DWORD *)(v3 + 7984) = v92;
                                    v94 = (((_BYTE)v3 + 100) & 7u) + 3;
                                    if ( *(_BYTE *)(((v3 + 5476) >> 3) + 0x7FFF8000) != 0
                                      && (char)(((v3 + 100) & 7) + 3) >= *(_BYTE *)(((v3 + 5476) >> 3) + 0x7FFF8000) )
                                    {
                                      __asan_report_load4(v3 + 5476);
                                    }
                                    v95 = *(_DWORD *)(v3 + 5476);
                                    v96 = *(_BYTE *)(((v3 + 7988) >> 3) + 0x7FFF8000);
                                    if ( v96 != 0 && (char)(((v3 + 52) & 7) + 3) >= v96 )
                                    {
                                      LOBYTE(v94) = v96 != 0;
                                      __asan_report_store4(v3 + 7988, v94);
                                    }
                                    *(_DWORD *)(v3 + 7988) = v95;
                                    if ( *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) != 0
                                      && *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) <= 3 )
                                    {
                                      __asan_report_load4(v3 + 240);
                                    }
                                    v97 = *(_DWORD *)(v3 + 240);
                                    v98 = *(_BYTE *)(((v3 + 7992) >> 3) + 0x7FFF8000);
                                    if ( v98 != 0 && v98 <= 3 )
                                    {
                                      LOBYTE(v94) = v98 != 0;
                                      __asan_report_store4(v3 + 7992, v94);
                                    }
                                    *(_DWORD *)(v3 + 7992) = v97;
                                    if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0
                                      && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
                                    {
                                      __asan_report_load4(v3 + 208);
                                    }
                                    if ( LuaConfigMgr::loadGroupScriptConfig(
                                           thisa,
                                           (const std::string *)(v3 + 3776),
                                           (GroupScriptConfig *)(v3 + 6832),
                                           *(_DWORD *)(v3 + 208)) )
                                    {
                                      *(_DWORD *)(((v3 + 4096) >> 3) + 0x7FFF8000) = 0;
                                      if ( *(char *)(((v3 + 4096) >> 3) + 0x7FFF8000) < 0
                                        || *(_BYTE *)(((v3 + 4127) >> 3) + 0x7FFF8000) != 0
                                        && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 4127) >> 3) + 0x7FFF8000) )
                                      {
                                        __asan_report_store_n(v3 + 4096, 32LL);
                                      }
                                      common::milog::MiLogStream::create(
                                        (common::milog::MiLogStream *)(v3 + 4096),
                                        &common::milog::MiLogDefault::default_log_obj_,
                                        4u,
                                        "./src/lua_config_mgr.cpp",
                                        "loadAllSceneScript",
                                        2656);
                                      v100 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                               (common::milog::MiLogStream *const)(v3 + 4096),
                                               (const char (*)[16])"[CONFIG_ERROR] ");
                                      v101 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                                               v100,
                                               (const char (*)[48])"loadGroupScriptConfig fails, group_script_path:");
                                      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                                        v101,
                                        (const std::string *)(v3 + 3776));
                                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4096));
                                      *(_DWORD *)(((v3 + 4096) >> 3) + 0x7FFF8000) = -117901064;
                                      HIDWORD(v172) = -1;
                                    }
                                    else
                                    {
                                      v102 = (char *)(v3 + 240);
                                      v103 = std::unordered_map<unsigned int,GroupScriptConfig>::emplace<unsigned int &,GroupScriptConfig&>(
                                               (std::unordered_map<unsigned int,GroupScriptConfig> *const)(v3 + 6352),
                                               (unsigned int *)(v3 + 240),
                                               (GroupScriptConfig *)(v3 + 6832),
                                               (unsigned int *)(v3 + 6352),
                                               v99);
                                      if ( !v103.second )
                                      {
                                        *(_DWORD *)(((v3 + 4160) >> 3) + 0x7FFF8000) = 0;
                                        if ( *(char *)(((v3 + 4160) >> 3) + 0x7FFF8000) < 0
                                          || *(_BYTE *)(((v3 + 4191) >> 3) + 0x7FFF8000) != 0
                                          && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 4191) >> 3) + 0x7FFF8000) )
                                        {
                                          __asan_report_store_n(v3 + 4160, 32LL);
                                        }
                                        common::milog::MiLogStream::create(
                                          (common::milog::MiLogStream *)(v3 + 4160),
                                          &common::milog::MiLogDefault::default_log_obj_,
                                          4u,
                                          "./src/lua_config_mgr.cpp",
                                          "loadAllSceneScript",
                                          2663);
                                        v104 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                                 (common::milog::MiLogStream *const)(v3 + 4160),
                                                 (const char (*)[16])"[CONFIG_ERROR] ");
                                        v105 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                                                 v104,
                                                 (const char (*)[20])"duplicate group_id:");
                                        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                          v105,
                                          (const unsigned int *)(v3 + 240));
                                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4160));
                                        *(_DWORD *)(((v3 + 4160) >> 3) + 0x7FFF8000) = -117901064;
                                        HIDWORD(v172) = -1;
                                      }
                                      else
                                      {
                                        v106 = ((v3 + 5376) >> 3) + 2147450880;
                                        *(_DWORD *)v106 = 0;
                                        *(_WORD *)(v106 + 4) = 0;
                                        std::set<data::EventType>::set((std::set<data::EventType> *const)(v3 + 5376));
                                        __for_range_3 = (std::unordered_map<std::string,TriggerScriptConfig> *)(v3 + 7120);
                                        *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) = 0;
                                        if ( *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) )
                                          __asan_report_store8(v3 + 544, v102);
                                        *(std::unordered_map<std::string,TriggerScriptConfig>::iterator *)(v3 + 544) = std::unordered_map<std::string,TriggerScriptConfig>::begin(__for_range_3);
                                        *(_BYTE *)(((v3 + 576) >> 3) + 0x7FFF8000) = 0;
                                        if ( *(_BYTE *)(((v3 + 576) >> 3) + 0x7FFF8000) )
                                          __asan_report_store8(v3 + 576, v102);
                                        *(std::unordered_map<std::string,TriggerScriptConfig>::iterator *)(v3 + 576) = std::unordered_map<std::string,TriggerScriptConfig>::end(__for_range_3);
                                        while ( 1 )
                                        {
                                          v107 = (char *)(v3 + 576);
                                          if ( !std::__detail::operator!=<std::pair<std::string const,TriggerScriptConfig>,true>(
                                                  (const std::__detail::_Node_iterator_base<std::pair<const std::string,TriggerScriptConfig>,true> *)(v3 + 544),
                                                  (const std::__detail::_Node_iterator_base<std::pair<const std::string,TriggerScriptConfig>,true> *)(v3 + 576)) )
                                            break;
                                          v188 = std::__detail::_Node_iterator<std::pair<std::string const,TriggerScriptConfig>,false,true>::operator*((const std::__detail::_Node_iterator<std::pair<const std::string,TriggerScriptConfig>,false,true> *const)(v3 + 544));
                                          std::get<0ul,std::string const,TriggerScriptConfig>(v188);
                                          __for_range_4 = &std::get<1ul,std::string const,TriggerScriptConfig>(v188)->event_vec;
                                          *(_BYTE *)(((v3 + 608) >> 3) + 0x7FFF8000) = 0;
                                          if ( *(_BYTE *)(((v3 + 608) >> 3) + 0x7FFF8000) )
                                            __asan_report_store8(v3 + 608, v107);
                                          *(std::vector<data::EventType>::const_iterator *)(v3 + 608) = std::vector<data::EventType>::begin(__for_range_4);
                                          *(_BYTE *)(((v3 + 640) >> 3) + 0x7FFF8000) = 0;
                                          if ( *(_BYTE *)(((v3 + 640) >> 3) + 0x7FFF8000) )
                                            __asan_report_store8(v3 + 640, v107);
                                          *(std::vector<data::EventType>::const_iterator *)(v3 + 640) = std::vector<data::EventType>::end(__for_range_4);
                                          while ( 1 )
                                          {
                                            v108 = (char *)(v3 + 640);
                                            if ( !__gnu_cxx::operator!=<data::EventType const*,std::vector<data::EventType>>(
                                                    (const __gnu_cxx::__normal_iterator<const data::EventType*,std::vector<data::EventType> > *)(v3 + 608),
                                                    (const __gnu_cxx::__normal_iterator<const data::EventType*,std::vector<data::EventType> > *)(v3 + 640)) )
                                              break;
                                            *(_BYTE *)(((v3 + 256) >> 3) + 0x7FFF8000) = 4;
                                            v109 = (data::EventType *)__gnu_cxx::__normal_iterator<data::EventType const*,std::vector<data::EventType>>::operator*((const __gnu_cxx::__normal_iterator<const data::EventType*,std::vector<data::EventType> > *const)(v3 + 608));
                                            v110 = (int *)v109;
                                            if ( *(_BYTE *)(((unsigned __int64)v109 >> 3) + 0x7FFF8000) != 0
                                              && (char)(((unsigned __int8)v109 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v109 >> 3) + 0x7FFF8000) )
                                            {
                                              __asan_report_load4(v109);
                                            }
                                            v111 = *v110;
                                            v112 = *(_BYTE *)(((v3 + 256) >> 3) + 0x7FFF8000);
                                            if ( v112 != 0 && v112 <= 3 )
                                            {
                                              LOBYTE(v108) = v112 != 0;
                                              __asan_report_store4(v3 + 256, v108);
                                            }
                                            *(_DWORD *)(v3 + 256) = v111;
                                            valid_dungeon_broadcast_evt_set = LuaConfigMgr::getValidDungeonBroadcastEventSet(thisa);
                                            if ( common::tools::MiscUtils::isContains<std::set<data::EventType> const,data::EventType>(
                                                   valid_dungeon_broadcast_evt_set,
                                                   (const data::EventType *)(v3 + 256)) )
                                            {
                                              std::set<data::EventType>::insert(
                                                (std::set<data::EventType> *const)(v3 + 5376),
                                                (const std::set<data::EventType>::value_type *)(v3 + 256));
                                            }
                                            __gnu_cxx::__normal_iterator<data::EventType const*,std::vector<data::EventType>>::operator++((__gnu_cxx::__normal_iterator<const data::EventType*,std::vector<data::EventType> > *const)(v3 + 608));
                                          }
                                          *(_BYTE *)(((v3 + 256) >> 3) + 0x7FFF8000) = -8;
                                          *(_BYTE *)(((v3 + 608) >> 3) + 0x7FFF8000) = -8;
                                          *(_BYTE *)(((v3 + 640) >> 3) + 0x7FFF8000) = -8;
                                          std::__detail::_Node_iterator<std::pair<std::string const,TriggerScriptConfig>,false,true>::operator++((std::__detail::_Node_iterator<std::pair<const std::string,TriggerScriptConfig>,false,true> *const)(v3 + 544));
                                        }
                                        *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) = -8;
                                        *(_BYTE *)(((v3 + 576) >> 3) + 0x7FFF8000) = -8;
                                        __for_range_5 = (std::set<data::EventType> *)(v3 + 5376);
                                        *(_BYTE *)(((v3 + 672) >> 3) + 0x7FFF8000) = 0;
                                        if ( *(_BYTE *)(((v3 + 672) >> 3) + 0x7FFF8000) )
                                          __asan_report_store8(v3 + 672, v107);
                                        *(std::set<data::EventType>::iterator *)(v3 + 672) = std::set<data::EventType>::begin(__for_range_5);
                                        *(_BYTE *)(((v3 + 704) >> 3) + 0x7FFF8000) = 0;
                                        if ( *(_BYTE *)(((v3 + 704) >> 3) + 0x7FFF8000) )
                                          __asan_report_store8(v3 + 704, v107);
                                        *(std::set<data::EventType>::iterator *)(v3 + 704) = std::set<data::EventType>::end(__for_range_5);
                                        while ( 1 )
                                        {
                                          v113 = (char *)(v3 + 704);
                                          if ( !std::operator!=(
                                                  (const std::_Rb_tree_const_iterator<data::EventType>::_Self *)(v3 + 672),
                                                  (const std::_Rb_tree_const_iterator<data::EventType>::_Self *)(v3 + 704)) )
                                            break;
                                          *(_BYTE *)(((v3 + 272) >> 3) + 0x7FFF8000) = 4;
                                          v114 = (data::EventType *)std::_Rb_tree_const_iterator<data::EventType>::operator*((const std::_Rb_tree_const_iterator<data::EventType> *const)(v3 + 672));
                                          v115 = (int *)v114;
                                          if ( *(_BYTE *)(((unsigned __int64)v114 >> 3) + 0x7FFF8000) != 0
                                            && (char)(((unsigned __int8)v114 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v114 >> 3) + 0x7FFF8000) )
                                          {
                                            __asan_report_load4(v114);
                                          }
                                          v116 = *v115;
                                          v117 = *(_BYTE *)(((v3 + 272) >> 3) + 0x7FFF8000);
                                          if ( v117 != 0 && v117 <= 3 )
                                          {
                                            LOBYTE(v113) = v117 != 0;
                                            __asan_report_store4(v3 + 272, v113);
                                          }
                                          *(_DWORD *)(v3 + 272) = v116;
                                          v118 = std::unordered_map<data::EventType,unsigned int>::operator[](
                                                   (std::unordered_map<data::EventType,unsigned int> *const)(v3 + 6640),
                                                   (const std::unordered_map<data::EventType,unsigned int>::key_type *)(v3 + 272));
                                          if ( *(_BYTE *)(((unsigned __int64)v118 >> 3) + 0x7FFF8000) != 0
                                            && (char)(((unsigned __int8)v118 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v118 >> 3) + 0x7FFF8000) )
                                          {
                                            __asan_report_load4(v118);
                                          }
                                          ++*v118;
                                          std::_Rb_tree_const_iterator<data::EventType>::operator++((std::_Rb_tree_const_iterator<data::EventType> *const)(v3 + 672));
                                        }
                                        *(_BYTE *)(((v3 + 272) >> 3) + 0x7FFF8000) = -8;
                                        *(_BYTE *)(((v3 + 672) >> 3) + 0x7FFF8000) = -8;
                                        *(_BYTE *)(((v3 + 704) >> 3) + 0x7FFF8000) = -8;
                                        v119 = std::unordered_set<unsigned int>::insert(
                                                 &block_script_config->group_set,
                                                 (const std::unordered_set<unsigned int>::value_type *)(v3 + 240));
                                        if ( !v119.second )
                                        {
                                          *(_DWORD *)(((v3 + 4224) >> 3) + 0x7FFF8000) = 0;
                                          if ( *(char *)(((v3 + 4224) >> 3) + 0x7FFF8000) < 0
                                            || *(_BYTE *)(((v3 + 4255) >> 3) + 0x7FFF8000) != 0
                                            && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 4255) >> 3) + 0x7FFF8000) )
                                          {
                                            __asan_report_store_n(v3 + 4224, 32LL);
                                          }
                                          common::milog::MiLogStream::create(
                                            (common::milog::MiLogStream *)(v3 + 4224),
                                            &common::milog::MiLogDefault::default_log_obj_,
                                            4u,
                                            "./src/lua_config_mgr.cpp",
                                            "loadAllSceneScript",
                                            2687);
                                          v120 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                                   (common::milog::MiLogStream *const)(v3 + 4224),
                                                   (const char (*)[16])"[CONFIG_ERROR] ");
                                          v121 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                                                   v120,
                                                   (const char (*)[20])"duplicate group_id:");
                                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                            v121,
                                            (const unsigned int *)(v3 + 240));
                                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4224));
                                          *(_DWORD *)(((v3 + 4224) >> 3) + 0x7FFF8000) = -117901064;
                                          HIDWORD(v172) = -1;
                                        }
                                        std::set<data::EventType>::~set((std::set<data::EventType> *const)(v3 + 5376));
                                      }
                                    }
                                    GroupScriptConfig::~GroupScriptConfig((GroupScriptConfig *const)(v3 + 6832));
                                    std::string::~string((void *)(v3 + 3776));
                                  }
                                }
                                GroupInfoScriptConfig::~GroupInfoScriptConfig((GroupInfoScriptConfig *const)(v3 + 5456));
                                __asan_poison_stack_memory(v3 + 5456, 304LL);
                                *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) = -8;
                                *(_DWORD *)(((v3 + 3776) >> 3) + 0x7FFF8000) = -117901064;
                                __asan_poison_stack_memory(v3 + 6832, 1544LL);
                                v122 = ((v3 + 5376) >> 3) + 2147450880;
                                *(_DWORD *)v122 = -117901064;
                                *(_WORD *)(v122 + 4) = -1800;
                                __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 480));
                              }
                              *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) = -8;
                              *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000) = -8;
                            }
                            std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v3 + 1216));
                          }
                          std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v3 + 928));
                          std::string::~string((void *)(v3 + 3136));
                        }
                        *(_DWORD *)(((v3 + 3136) >> 3) + 0x7FFF8000) = -117901064;
                        *(_WORD *)(((v3 + 928) >> 3) + 0x7FFF8000) = -1800;
                        v123 = ((v3 + 1216) >> 3) + 2147450880;
                        *(_WORD *)v123 = -1800;
                        *(_BYTE *)(v123 + 2) = -8;
                        __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++((__gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v3 + 416));
                      }
                      *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) = -8;
                      *(_BYTE *)(((v3 + 416) >> 3) + 0x7FFF8000) = -8;
                      *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) = -8;
                      __for_range_6 = (std::unordered_map<data::EventType,unsigned int> *)(v3 + 6640);
                      *(_BYTE *)(((v3 + 736) >> 3) + 0x7FFF8000) = 0;
                      if ( *(_BYTE *)(((v3 + 736) >> 3) + 0x7FFF8000) )
                        __asan_report_store8(v3 + 736, v56);
                      *(std::unordered_map<data::EventType,unsigned int>::iterator *)(v3 + 736) = std::unordered_map<data::EventType,unsigned int>::begin(__for_range_6);
                      *(_BYTE *)(((v3 + 768) >> 3) + 0x7FFF8000) = 0;
                      if ( *(_BYTE *)(((v3 + 768) >> 3) + 0x7FFF8000) )
                        __asan_report_store8(v3 + 768, v56);
                      *(std::unordered_map<data::EventType,unsigned int>::iterator *)(v3 + 768) = std::unordered_map<data::EventType,unsigned int>::end(__for_range_6);
                      while ( std::__detail::operator!=<std::pair<data::EventType const,unsigned int>,false>(
                                (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,unsigned int>,false> *)(v3 + 736),
                                (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,unsigned int>,false> *)(v3 + 768)) )
                      {
                        v180 = std::__detail::_Node_iterator<std::pair<data::EventType const,unsigned int>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<const data::EventType,unsigned int>,false,false> *const)(v3 + 736));
                        event_type = std::get<0ul,data::EventType const,unsigned int>(v180);
                        v124 = (std::tuple_element<1,const std::pair<const data::EventType,unsigned int> >::type *)std::get<1ul,data::EventType const,unsigned int>(v180);
                        group_count = v124;
                        if ( *(_BYTE *)(((unsigned __int64)v124 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v124 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v124 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v124);
                        }
                        if ( *group_count > 0xF )
                        {
                          *(_DWORD *)(((v3 + 4288) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v3 + 4288) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 4319) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 4319) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 4288, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v3 + 4288),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/lua_config_mgr.cpp",
                            "loadAllSceneScript",
                            2696);
                          v125 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                   (common::milog::MiLogStream *const)(v3 + 4288),
                                   (const char (*)[16])"[CONFIG_ERROR] ");
                          v126 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                                   v125,
                                   (const char (*)[35])"dungeon_broadcast_evt_group_count:");
                          v127 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                   v126,
                                   group_count);
                          v128 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                                   v127,
                                   (const char (*)[14])", event_type:");
                          v129 = common::milog::MiLogStream::operator<<<data::EventType,(data::EventType*)0>(
                                   v128,
                                   event_type);
                          v130 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                   v129,
                                   (const char (*)[12])", scene_id:");
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v130,
                            (const unsigned int *)(v3 + 208));
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4288));
                          *(_DWORD *)(((v3 + 4288) >> 3) + 0x7FFF8000) = -117901064;
                          HIDWORD(v172) = -1;
                        }
                        std::__detail::_Node_iterator<std::pair<data::EventType const,unsigned int>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<const data::EventType,unsigned int>,false,false> *const)(v3 + 736));
                      }
                      *(_BYTE *)(((v3 + 736) >> 3) + 0x7FFF8000) = -8;
                      *(_BYTE *)(((v3 + 768) >> 3) + 0x7FFF8000) = -8;
                      *(_DWORD *)(((v3 + 4352) >> 3) + 0x7FFF8000) = 0;
                      *(_DWORD *)(((v3 + 4544) >> 3) + 0x7FFF8000) = 0;
                      *(_DWORD *)(((v3 + 4480) >> 3) + 0x7FFF8000) = 0;
                      if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(v3 + 208);
                      }
                      v131 = *(_DWORD *)(v3 + 208);
                      if ( *(char *)(((v3 + 4480) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v3 + 4511) >> 3) + 0x7FFF8000) != 0
                        && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 4511) >> 3) + 0x7FFF8000) )
                      {
                        v131 = 32;
                        __asan_report_store_n(v3 + 4480, 32LL);
                      }
                      common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v3 + 4480), v131);
                      *(_DWORD *)(((v3 + 4416) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v3 + 4416) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v3 + 4447) >> 3) + 0x7FFF8000) != 0
                        && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 4447) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v3 + 4416, 32LL);
                      }
                      std::operator+<char>((std::string *)(v3 + 4416), (const std::string *)(v3 + 1344), "scene");
                      if ( *(char *)(((v3 + 4544) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v3 + 4575) >> 3) + 0x7FFF8000) != 0
                        && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 4575) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v3 + 4544, 32LL);
                      }
                      std::operator+<char>(
                        (std::string *)(v3 + 4544),
                        (std::string *)(v3 + 4416),
                        (std::string *)(v3 + 4480));
                      if ( *(char *)(((v3 + 4352) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v3 + 4383) >> 3) + 0x7FFF8000) != 0
                        && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 4383) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v3 + 4352, 32LL);
                      }
                      std::operator+<char>((std::string *)(v3 + 4352), (std::string *)(v3 + 4544), "_monster.pool.lua");
                      std::string::~string((void *)(v3 + 4544));
                      *(_DWORD *)(((v3 + 4544) >> 3) + 0x7FFF8000) = -117901064;
                      std::string::~string((void *)(v3 + 4416));
                      *(_DWORD *)(((v3 + 4416) >> 3) + 0x7FFF8000) = -117901064;
                      std::string::~string((void *)(v3 + 4480));
                      *(_DWORD *)(((v3 + 4480) >> 3) + 0x7FFF8000) = -117901064;
                      if ( common::tools::FileUtils::fileExists((const std::string *)(v3 + 4352)) )
                        goto LABEL_286;
                      *(_WORD *)(((v3 + 960) >> 3) + 0x7FFF8000) = 0;
                      if ( *(_WORD *)(((v3 + 960) >> 3) + 0x7FFF8000) )
                        __asan_report_store16();
                      LuaScriptMgr::createFromFilePath(
                        (const std::string *)(v3 + 960),
                        (const LuaConfigMgr *)(v3 + 4352));
                      if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v3 + 960)) )
                      {
                        *(_DWORD *)(((v3 + 4608) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v3 + 4608) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v3 + 4639) >> 3) + 0x7FFF8000) != 0
                          && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 4639) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v3 + 4608, 32LL);
                        }
                        common::milog::MiLogStream::create(
                          (common::milog::MiLogStream *)(v3 + 4608),
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/lua_config_mgr.cpp",
                          "loadAllSceneScript",
                          2708);
                        v132 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                 (common::milog::MiLogStream *const)(v3 + 4608),
                                 (const char (*)[16])"[CONFIG_ERROR] ");
                        v133 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                                 v132,
                                 (const char (*)[53])"LuaScriptMgr::createFromFilePath fails, script_path:");
                        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                          v133,
                          (const std::string *)(v3 + 4352));
                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4608));
                        *(_DWORD *)(((v3 + 4608) >> 3) + 0x7FFF8000) = -117901064;
                        HIDWORD(v172) = -1;
                        v134 = 0;
                      }
                      else
                      {
                        v135 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 960));
                        if ( SceneScriptConfig::loadMonstersPool((SceneScriptConfig *const)(v3 + 5824), v135) )
                        {
                          *(_DWORD *)(((v3 + 4672) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v3 + 4672) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 4703) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 4703) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 4672, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v3 + 4672),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/lua_config_mgr.cpp",
                            "loadAllSceneScript",
                            2715);
                          v136 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                   (common::milog::MiLogStream *const)(v3 + 4672),
                                   (const char (*)[16])"[CONFIG_ERROR] ");
                          v137 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                                   v136,
                                   (const char (*)[37])"loadMonstersPool fails, script_path:");
                          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                            v137,
                            (const std::string *)(v3 + 1664));
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4672));
                          *(_DWORD *)(((v3 + 4672) >> 3) + 0x7FFF8000) = -117901064;
                          HIDWORD(v172) = -1;
                          v134 = 0;
                        }
                        else
                        {
                          *(_DWORD *)(((v3 + 4736) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v3 + 4736) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 4767) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 4767) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 4736, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v3 + 4736),
                            &common::milog::MiLogDefault::default_log_obj_,
                            1u,
                            "./src/lua_config_mgr.cpp",
                            "loadAllSceneScript",
                            2720);
                          v138 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(
                                   (common::milog::MiLogStream *const)(v3 + 4736),
                                   (const char (*)[10])"scene_id:");
                          v139 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                   v138,
                                   (const unsigned int *)(v3 + 208));
                          v140 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
                                   v139,
                                   (const char (*)[27])byte_1A53EB40);
                          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                            v140,
                            (const std::string *)(v3 + 4352));
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4736));
                          *(_DWORD *)(((v3 + 4736) >> 3) + 0x7FFF8000) = -117901064;
                          v134 = 1;
                        }
                      }
                      std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v3 + 960));
                      *(_WORD *)(((v3 + 960) >> 3) + 0x7FFF8000) = -1800;
                      if ( v134 == 1 )
                      {
LABEL_286:
                        *(_DWORD *)(((v3 + 4800) >> 3) + 0x7FFF8000) = 0;
                        *(_DWORD *)(((v3 + 4992) >> 3) + 0x7FFF8000) = 0;
                        *(_DWORD *)(((v3 + 4928) >> 3) + 0x7FFF8000) = 0;
                        if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) != 0
                          && *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) <= 3 )
                        {
                          __asan_report_load4(v3 + 208);
                        }
                        v142 = *(_DWORD *)(v3 + 208);
                        if ( *(char *)(((v3 + 4928) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v3 + 4959) >> 3) + 0x7FFF8000) != 0
                          && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 4959) >> 3) + 0x7FFF8000) )
                        {
                          v142 = 32;
                          __asan_report_store_n(v3 + 4928, 32LL);
                        }
                        common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v3 + 4928), v142);
                        *(_DWORD *)(((v3 + 4864) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v3 + 4864) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v3 + 4895) >> 3) + 0x7FFF8000) != 0
                          && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 4895) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v3 + 4864, 32LL);
                        }
                        std::operator+<char>((std::string *)(v3 + 4864), (const std::string *)(v3 + 1344), "scene");
                        if ( *(char *)(((v3 + 4992) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v3 + 5023) >> 3) + 0x7FFF8000) != 0
                          && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 5023) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v3 + 4992, 32LL);
                        }
                        std::operator+<char>(
                          (std::string *)(v3 + 4992),
                          (std::string *)(v3 + 4864),
                          (std::string *)(v3 + 4928));
                        if ( *(char *)(((v3 + 4800) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v3 + 4831) >> 3) + 0x7FFF8000) != 0
                          && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 4831) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v3 + 4800, 32LL);
                        }
                        std::operator+<char>(
                          (std::string *)(v3 + 4800),
                          (std::string *)(v3 + 4992),
                          "_vision_type_mutex.lua");
                        std::string::~string((void *)(v3 + 4992));
                        *(_DWORD *)(((v3 + 4992) >> 3) + 0x7FFF8000) = -117901064;
                        std::string::~string((void *)(v3 + 4864));
                        *(_DWORD *)(((v3 + 4864) >> 3) + 0x7FFF8000) = -117901064;
                        std::string::~string((void *)(v3 + 4928));
                        *(_DWORD *)(((v3 + 4928) >> 3) + 0x7FFF8000) = -117901064;
                        if ( common::tools::FileUtils::fileExists((const std::string *)(v3 + 4800)) )
                          goto LABEL_388;
                        *(_WORD *)(((v3 + 992) >> 3) + 0x7FFF8000) = 0;
                        if ( *(_WORD *)(((v3 + 992) >> 3) + 0x7FFF8000) )
                          __asan_report_store16();
                        LuaScriptMgr::createFromFilePath(
                          (const std::string *)(v3 + 992),
                          (const LuaConfigMgr *)(v3 + 4800));
                        if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v3 + 992)) )
                        {
                          *(_DWORD *)(((v3 + 5056) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v3 + 5056) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 5087) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 5087) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 5056, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v3 + 5056),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/lua_config_mgr.cpp",
                            "loadAllSceneScript",
                            2730);
                          v143 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                   (common::milog::MiLogStream *const)(v3 + 5056),
                                   (const char (*)[16])"[CONFIG_ERROR] ");
                          v144 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                                   v143,
                                   (const char (*)[53])"LuaScriptMgr::createFromFilePath fails, script_path:");
                          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                            v144,
                            (const std::string *)(v3 + 4800));
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 5056));
                          *(_DWORD *)(((v3 + 5056) >> 3) + 0x7FFF8000) = -117901064;
                          HIDWORD(v172) = -1;
                          v145 = 0;
                        }
                        else
                        {
                          v146 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 992));
                          if ( SceneScriptConfig::loadVisionTypeMutex((SceneScriptConfig *const)(v3 + 5824), v146) )
                          {
                            *(_DWORD *)(((v3 + 5120) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v3 + 5120) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v3 + 5151) >> 3) + 0x7FFF8000) != 0
                              && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 5151) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v3 + 5120, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v3 + 5120),
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/lua_config_mgr.cpp",
                              "loadAllSceneScript",
                              2737);
                            v147 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                     (common::milog::MiLogStream *const)(v3 + 5120),
                                     (const char (*)[16])"[CONFIG_ERROR] ");
                            v148 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                                     v147,
                                     (const char (*)[40])"loadVisionTypeMutex fails, script_path:");
                            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                              v148,
                              (const std::string *)(v3 + 4800));
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 5120));
                            *(_DWORD *)(((v3 + 5120) >> 3) + 0x7FFF8000) = -117901064;
                            HIDWORD(v172) = -1;
                            v145 = 0;
                          }
                          else
                          {
                            *(_DWORD *)(((v3 + 5184) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v3 + 5184) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v3 + 5215) >> 3) + 0x7FFF8000) != 0
                              && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 5215) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v3 + 5184, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v3 + 5184),
                              &common::milog::MiLogDefault::default_log_obj_,
                              1u,
                              "./src/lua_config_mgr.cpp",
                              "loadAllSceneScript",
                              2742);
                            v149 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(
                                     (common::milog::MiLogStream *const)(v3 + 5184),
                                     (const char (*)[10])"scene_id:");
                            v150 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                     v149,
                                     (const unsigned int *)(v3 + 208));
                            v151 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                                     v150,
                                     (const char (*)[40])byte_1A53EC20);
                            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                              v151,
                              (const std::string *)(v3 + 4800));
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 5184));
                            *(_DWORD *)(((v3 + 5184) >> 3) + 0x7FFF8000) = -117901064;
                            v145 = 1;
                          }
                        }
                        std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v3 + 992));
                        *(_WORD *)(((v3 + 992) >> 3) + 0x7FFF8000) = -1800;
                        if ( v145 == 1 )
                        {
LABEL_388:
                          if ( HK4EDesignConfig::isCreateStaticMesh(configa)
                            && SceneScriptConfig::initStaticGroupLoadMesh((SceneScriptConfig *const)(v3 + 5824)) )
                          {
                            *(_DWORD *)(((v3 + 5248) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v3 + 5248) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v3 + 5279) >> 3) + 0x7FFF8000) != 0
                              && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 5279) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v3 + 5248, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v3 + 5248),
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/lua_config_mgr.cpp",
                              "loadAllSceneScript",
                              2747);
                            v155 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                     (common::milog::MiLogStream *const)(v3 + 5248),
                                     (const char (*)[16])"[CONFIG_ERROR] ");
                            v156 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                                     v155,
                                     (const char (*)[44])"initStaticGroupLoadMesh fails, script_path:");
                            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                              v156,
                              (const std::string *)(v3 + 1664));
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 5248));
                            *(_DWORD *)(((v3 + 5248) >> 3) + 0x7FFF8000) = -117901064;
                            HIDWORD(v172) = -1;
                            v152 = 0;
                          }
                          else
                          {
                            v157 = std::unordered_map<unsigned int,SceneScriptConfig>::emplace<unsigned int &,SceneScriptConfig&>(
                                     &thisa->scene_script_config_map,
                                     (unsigned int *)(v3 + 208),
                                     (SceneScriptConfig *)(v3 + 5824),
                                     (unsigned int *)&thisa->scene_script_config_map,
                                     v153);
                            if ( !v157.second )
                            {
                              *(_DWORD *)(((v3 + 5312) >> 3) + 0x7FFF8000) = 0;
                              if ( *(char *)(((v3 + 5312) >> 3) + 0x7FFF8000) < 0
                                || *(_BYTE *)(((v3 + 5343) >> 3) + 0x7FFF8000) != 0
                                && (char)((v3 - 33) & 7) >= *(_BYTE *)(((v3 + 5343) >> 3) + 0x7FFF8000) )
                              {
                                __asan_report_store_n(v3 + 5312, 32LL);
                              }
                              common::milog::MiLogStream::create(
                                (common::milog::MiLogStream *)(v3 + 5312),
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/lua_config_mgr.cpp",
                                "loadAllSceneScript",
                                2754);
                              v158 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                       (common::milog::MiLogStream *const)(v3 + 5312),
                                       (const char (*)[16])"[CONFIG_ERROR] ");
                              v159 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
                                       v158,
                                       (const char (*)[26])byte_1A53ECE0);
                              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                v159,
                                (const unsigned int *)(v3 + 208));
                              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 5312));
                              *(_DWORD *)(((v3 + 5312) >> 3) + 0x7FFF8000) = -117901064;
                              HIDWORD(v172) = -1;
                            }
                            v152 = 1;
                          }
                        }
                        else
                        {
                          v152 = 0;
                        }
                        std::string::~string((void *)(v3 + 4800));
                        v141 = v152 == 1;
                      }
                      else
                      {
                        v141 = 0;
                      }
                      std::string::~string((void *)(v3 + 4352));
                      v55 = v141;
                    }
                    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v3 + 1152));
                    if ( v55 )
                      v49 = 2;
                    else
                      v49 = 1;
                  }
                  std::string::~string((void *)(v3 + 2752));
                  if ( v49 )
                  {
                    if ( v49 == 2 )
                      v46 = 2;
                    else
                      v46 = 1;
                  }
                  else
                  {
                    v46 = 0;
                  }
                }
                luabind::adl::object::~object((luabind::adl::object *const)(v3 + 896));
                if ( v46 )
                {
                  if ( v46 == 2 )
                    v42 = 2;
                  else
                    v42 = 1;
                }
                else
                {
                  v42 = 0;
                }
              }
              else
              {
                v42 = 0;
              }
              luabind::adl::object::~object((luabind::adl::object *const)(v3 + 864));
              if ( v42 )
              {
                if ( v42 == 2 )
                  v27 = 2;
                else
                  v27 = 0;
              }
              else
              {
                v27 = 1;
              }
            }
          }
          luabind::adl::object::~object((luabind::adl::object *const)(v3 + 832));
          if ( v27 )
          {
            if ( v27 == 2 )
              v160 = 2;
            else
              v160 = 1;
          }
          else
          {
            v160 = 0;
          }
          SceneScriptConfig::~SceneScriptConfig((SceneScriptConfig *const)(v3 + 5824));
          if ( v160 )
          {
            if ( v160 == 2 )
              v20 = 2;
            else
              v20 = 1;
          }
          else
          {
            v20 = 0;
          }
        }
        std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v3 + 800));
        if ( v20 )
        {
          if ( v20 == 2 )
            v17 = 2;
          else
            v17 = 1;
        }
        else
        {
          v17 = 0;
        }
      }
      std::string::~string((void *)(v3 + 1664));
      if ( v17 )
      {
        if ( v17 == 2 )
          v161 = 2;
        else
          v161 = 1;
      }
      else
      {
        v161 = 0;
      }
      std::string::~string((void *)(v3 + 1536));
      if ( v161 )
      {
        if ( v161 == 2 )
          v162 = 2;
        else
          v162 = 1;
      }
      else
      {
        v162 = 0;
      }
      std::string::~string((void *)(v3 + 1344));
      if ( v162 )
      {
        if ( v162 == 2 )
          v163 = 2;
        else
          v163 = 1;
      }
      else
      {
        v163 = 0;
      }
      *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) = -8;
      *(_DWORD *)(((v3 + 1344) >> 3) + 0x7FFF8000) = -117901064;
      *(_DWORD *)(((v3 + 1536) >> 3) + 0x7FFF8000) = -117901064;
      *(_DWORD *)(((v3 + 1664) >> 3) + 0x7FFF8000) = -117901064;
      *(_WORD *)(((v3 + 800) >> 3) + 0x7FFF8000) = -1800;
      __asan_poison_stack_memory(v3 + 5824, 872LL);
      *(_WORD *)(((v3 + 832) >> 3) + 0x7FFF8000) = -1800;
      *(_WORD *)(((v3 + 864) >> 3) + 0x7FFF8000) = -1800;
      *(_WORD *)(((v3 + 896) >> 3) + 0x7FFF8000) = -1800;
      *(_DWORD *)(((v3 + 2752) >> 3) + 0x7FFF8000) = -117901064;
      v164 = ((v3 + 1152) >> 3) + 2147450880;
      *(_WORD *)v164 = -1800;
      *(_BYTE *)(v164 + 2) = -8;
      *(_DWORD *)(((v3 + 4352) >> 3) + 0x7FFF8000) = -117901064;
      *(_DWORD *)(((v3 + 4800) >> 3) + 0x7FFF8000) = -117901064;
      if ( v163 && v163 != 2 )
      {
        v165 = 0;
        goto LABEL_380;
      }
      std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false> *const)(v3 + 288));
    }
    v165 = 1;
LABEL_380:
    if ( v165 == 1 )
      v2 = HIDWORD(v172);
  }
  if ( v168 == (Vector2 *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8098) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 160) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v3 >> 3) + 0x7FFF80A4) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8420) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862763) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147451044 - (((_DWORD)v5 + 2147451052) & 0xFFFFFFF8) + 900) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_8(v3, 8512LL, v168);
  }
  return v2;
};

// Line 2764: range 000000000F300886-000000000F30429E
int32_t __cdecl LuaConfigMgr::loadAllActivityScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  uint32_t DefaultWorldMainSceneId; // edx
  char v6; // al
  std::unordered_map<unsigned int,SceneScriptConfig> *p_scene_script_config_map; // rdx
  std::unordered_map<unsigned int,SceneScriptConfig> *v8; // rdx
  bool v9; // al
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  int32_t v12; // r14d
  unsigned __int64 v13; // rax
  char *v14; // rsi
  char *v15; // rsi
  unsigned int *v16; // rax
  int *v17; // rdx
  int v18; // ecx
  char v19; // al
  unsigned int v20; // esi
  __int64 p_activity_lua_base_dir; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  unsigned __int64 v27; // rax
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v28; // r14
  char *v29; // rsi
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rax
  char *v32; // rsi
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v33; // rax
  int *v34; // rdx
  int v35; // ecx
  char v36; // al
  std::pair<std::_Rb_tree_const_iterator<unsigned int>,bool> v37; // rax
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // rax
  common::milog::MiLogStream *v40; // rax
  common::milog::MiLogStream *v41; // rax
  char *v42; // rsi
  uint32_t v43; // ecx
  char v44; // al
  unsigned int v45; // esi
  common::milog::MiLogStream *v46; // r14
  __int64 v47; // rax
  unsigned __int64 v48; // rax
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v49; // r14
  char *v50; // rsi
  common::milog::MiLogStream *v51; // rax
  common::milog::MiLogStream *v52; // rax
  __int64 v53; // rsi
  int v54; // ecx
  char v55; // dl
  uint32_t v56; // edi
  luabind::adl::object *v57; // rsi
  GroupInfoScriptConfig *v58; // r8
  common::milog::MiLogStream *v59; // rax
  common::milog::MiLogStream *v60; // rax
  int v61; // eax
  int v62; // ecx
  char v63; // al
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,GroupInfoScriptConfig>,false,false>,bool> v64; // rax
  common::milog::MiLogStream *v65; // rax
  common::milog::MiLogStream *v66; // rax
  unsigned int v67; // esi
  __int64 v68; // rsi
  int v69; // ecx
  char v70; // al
  __int64 v71; // rsi
  int v72; // ecx
  char v73; // dl
  int v74; // ecx
  char v75; // al
  GroupScriptConfig *v76; // r8
  common::milog::MiLogStream *v77; // rax
  common::milog::MiLogStream *v78; // rax
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>,bool> v79; // rax
  common::milog::MiLogStream *v80; // rax
  common::milog::MiLogStream *v81; // rax
  std::pair<std::__detail::_Node_iterator<unsigned int,true,false>,bool> v82; // rax
  common::milog::MiLogStream *v83; // rax
  common::milog::MiLogStream *v84; // rax
  std::vector<unsigned int> *v85; // rax
  unsigned __int64 v86; // rax
  unsigned __int64 v87; // rax
  HK4EDesignConfig *configa; // [rsp+0h] [rbp-1320h]
  int32_t ret; // [rsp+1Ch] [rbp-1304h]
  SceneScriptConfig *scene_script_config; // [rsp+20h] [rbp-1300h]
  std::set<unsigned int> *__for_range; // [rsp+28h] [rbp-12F8h]
  std::vector<unsigned int> *__for_range_0; // [rsp+30h] [rbp-12F0h]
  BlockScriptConfig *block_script_config; // [rsp+38h] [rbp-12E8h]
  std::vector<luabind::adl::object> *__for_range_1; // [rsp+40h] [rbp-12E0h]
  luabind::adl::object *group_obj; // [rsp+48h] [rbp-12D8h]
  char v98[4816]; // [rsp+50h] [rbp-12D0h] BYREF

  configa = config;
  v2 = (unsigned __int64)v98;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_7(4768LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "53 48 1 9 <unknown> 64 1 9 <unknown> 80 4 18 main_scene_id:2765 96 4 16 activity_id:2777 112 4 1"
                        "3 block_id:2805 128 4 13 group_id:2844 144 8 9 iter:2766 176 8 9 <unknown> 208 8 16 __for_begin:"
                        "2777 240 8 14 __for_end:2777 272 8 16 __for_begin:2805 304 8 14 __for_end:2805 336 8 16 __for_be"
                        "gin:2834 368 8 14 __for_end:2834 400 16 21 scene_script_ptr:2788 432 16 21 block_script_ptr:2819"
                        " 464 24 14 block_vec:2797 528 24 18 group_obj_vec:2827 592 32 9 <unknown> 656 32 11 str_id:2779 "
                        "720 32 13 base_dir:2780 784 32 9 <unknown> 848 32 9 <unknown> 912 32 16 script_path:2787 976 32 "
                        "9 <unknown> 1040 32 9 <unknown> 1104 32 9 <unknown> 1168 32 9 <unknown> 1232 32 9 <unknown> 1296"
                        " 32 9 <unknown> 1360 32 22 block_script_path:2818 1424 32 9 <unknown> 1488 32 9 <unknown> 1552 3"
                        "2 9 <unknown> 1616 32 9 <unknown> 1680 32 9 <unknown> 1744 32 9 <unknown> 1808 32 9 <unknown> 18"
                        "72 32 9 <unknown> 1936 32 9 <unknown> 2000 32 9 <unknown> 2064 32 22 group_script_path:2852 2128"
                        " 32 9 <unknown> 2192 32 9 <unknown> 2256 32 9 <unknown> 2320 32 9 <unknown> 2384 32 9 <unknown> "
                        "2448 32 9 <unknown> 2512 32 9 <unknown> 2576 32 9 <unknown> 2640 48 17 activity_set:2775 2720 30"
                        "4 29 group_info_script_config:2836 3088 1544 24 group_script_config:2853";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::loadAllActivityScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234556927;
  v4[536862723] = -234556924;
  v4[536862724] = 61956;
  v4[536862724] = -234881024;
  v4[536862725] = 62194;
  v4[536862725] = -234881024;
  v4[536862726] = 62194;
  v4[536862726] = -234881024;
  v4[536862727] = 62194;
  v4[536862727] = -234881024;
  v4[536862728] = 62194;
  v4[536862728] = -234881024;
  v4[536862729] = 62194;
  v4[536862729] = -234881024;
  v4[536862730] = 62194;
  v4[536862730] = -234881024;
  v4[536862731] = 62194;
  v4[536862731] = -234881024;
  v4[536862732] = 62194;
  v4[536862733] = 62194;
  v4[536862734] = 62194;
  v4[536862735] = -218959360;
  v4[536862736] = 62194;
  v4[536862737] = -218959360;
  v4[536862738] = 62194;
  v4[536862739] = -219021312;
  v4[536862740] = 62194;
  v4[536862741] = -219021312;
  v4[536862742] = 62194;
  v4[536862743] = -219021312;
  v4[536862744] = 62194;
  v4[536862745] = -219021312;
  v4[536862746] = 62194;
  v4[536862747] = -219021312;
  v4[536862748] = 62194;
  v4[536862749] = -219021312;
  v4[536862750] = 62194;
  v4[536862751] = -219021312;
  v4[536862752] = 62194;
  v4[536862753] = -219021312;
  v4[536862754] = 62194;
  v4[536862755] = -219021312;
  v4[536862756] = 62194;
  v4[536862757] = -219021312;
  v4[536862758] = 62194;
  v4[536862759] = -219021312;
  v4[536862760] = 62194;
  v4[536862761] = -219021312;
  v4[536862762] = 62194;
  v4[536862763] = -219021312;
  v4[536862764] = 62194;
  v4[536862765] = -219021312;
  v4[536862766] = 62194;
  v4[536862767] = -219021312;
  v4[536862768] = 62194;
  v4[536862769] = -219021312;
  v4[536862770] = 62194;
  v4[536862771] = -219021312;
  v4[536862772] = 62194;
  v4[536862773] = -219021312;
  v4[536862774] = 62194;
  v4[536862775] = -219021312;
  v4[536862776] = 62194;
  v4[536862777] = -219021312;
  v4[536862778] = 62194;
  v4[536862779] = -219021312;
  v4[536862780] = 62194;
  v4[536862781] = -219021312;
  v4[536862782] = 62194;
  v4[536862783] = -219021312;
  v4[536862784] = 62194;
  v4[536862785] = -219021312;
  v4[536862786] = 62194;
  v4[536862787] = -219021312;
  v4[536862788] = 62194;
  v4[536862789] = -219021312;
  v4[536862790] = 62194;
  v4[536862791] = -219021312;
  v4[536862792] = 62194;
  v4[536862793] = -219021312;
  v4[536862794] = 62194;
  v4[536862795] = -219021312;
  v4[536862796] = 62194;
  v4[536862797] = -219021312;
  v4[536862798] = 62194;
  v4[536862799] = -219021312;
  v4[536862800] = 62194;
  v4[536862801] = -219021312;
  v4[536862802] = 62194;
  v4[536862804] = -218959118;
  v4[536862814] = -219021312;
  v4[536862815] = -218959118;
  v4[536862816] = 62194;
  v4[536862864] = -218103808;
  v4[536862865] = -202116109;
  v4[536862866] = -202116109;
  v4[536862867] = -202116109;
  v4[536862868] = -202116109;
  DefaultWorldMainSceneId = TxtConfigMgr::getDefaultWorldMainSceneId(&config->txt_config_mgr);
  v6 = *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000);
  LOBYTE(config) = v6 != 0;
  if ( v6 != 0 && v6 <= 3 )
    __asan_report_store4(v2 + 80, config);
  *(_DWORD *)(v2 + 80) = DefaultWorldMainSceneId;
  p_scene_script_config_map = &this->scene_script_config_map;
  if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 144, config);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v2 + 144) = std::unordered_map<unsigned int,SceneScriptConfig>::find(
                                                                                  p_scene_script_config_map,
                                                                                  (const std::unordered_map<unsigned int,SceneScriptConfig>::key_type *)(v2 + 80));
  v8 = &this->scene_script_config_map;
  if ( *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 176, v2 + 80);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v2 + 176) = std::unordered_map<unsigned int,SceneScriptConfig>::end(v8);
  v9 = std::__detail::operator==<std::pair<unsigned int const,SceneScriptConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 144),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 176));
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
  if ( v9 )
  {
    *(_DWORD *)(((v2 + 592) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 592) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 623) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 623) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 592, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 592),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllActivityScript",
      2769);
    v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 592),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v11 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
            v10,
            (const char (*)[33])"cannot find scene script config:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v2 + 80));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 592));
    v12 = -1;
  }
  else
  {
    scene_script_config = &std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 144))->second;
    ret = 0;
    v13 = ((v2 + 2640) >> 3) + 2147450880;
    *(_DWORD *)v13 = 0;
    *(_WORD *)(v13 + 4) = 0;
    std::set<unsigned int>::set((std::set<unsigned int> *const)(v2 + 2640));
    v14 = (char *)(v2 + 2640);
    NewActivityExcelConfigMgr::getHaveGroupActionActivity(
      &configa->txt_config_mgr.new_activity_config_mgr,
      (std::set<unsigned int> *)(v2 + 2640));
    __for_range = (std::set<unsigned int> *)(v2 + 2640);
    *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 208, v14);
    *(std::set<unsigned int>::iterator *)(v2 + 208) = std::set<unsigned int>::begin(__for_range);
    *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 240, v14);
    *(std::set<unsigned int>::iterator *)(v2 + 240) = std::set<unsigned int>::end(__for_range);
    while ( 1 )
    {
      v15 = (char *)(v2 + 240);
      if ( !std::operator!=(
              (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v2 + 208),
              (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v2 + 240)) )
        break;
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 4;
      v16 = (unsigned int *)std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v2 + 208));
      v17 = (int *)v16;
      if ( *(_BYTE *)(((unsigned __int64)v16 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v16 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v16 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v16);
      }
      v18 = *v17;
      v19 = *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000);
      if ( v19 != 0 && v19 <= 3 )
      {
        LOBYTE(v15) = v19 != 0;
        __asan_report_store4(v2 + 96, v15);
      }
      *(_DWORD *)(v2 + 96) = v18;
      *(_DWORD *)(((v2 + 656) >> 3) + 0x7FFF8000) = 0;
      v20 = *(_DWORD *)(v2 + 96);
      if ( *(char *)(((v2 + 656) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 687) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 687) >> 3) + 0x7FFF8000) )
      {
        v20 = 32;
        __asan_report_store_n(v2 + 656, 32LL);
      }
      common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v2 + 656), v20);
      *(_DWORD *)(((v2 + 720) >> 3) + 0x7FFF8000) = 0;
      *(_DWORD *)(((v2 + 784) >> 3) + 0x7FFF8000) = 0;
      p_activity_lua_base_dir = (__int64)&configa->activity_lua_base_dir;
      if ( *(char *)(((v2 + 784) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 815) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 815) >> 3) + 0x7FFF8000) )
      {
        p_activity_lua_base_dir = 32LL;
        __asan_report_store_n(v2 + 784, 32LL);
      }
      std::operator+<char>(
        (std::string *)(v2 + 784),
        (const std::string *)p_activity_lua_base_dir,
        (const std::string *)(v2 + 656));
      if ( *(char *)(((v2 + 720) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 751) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 751) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 720, 32LL);
      }
      std::operator+<char>((std::string *)(v2 + 720), (std::string *)(v2 + 784), "/");
      std::string::~string((void *)(v2 + 784));
      *(_DWORD *)(((v2 + 784) >> 3) + 0x7FFF8000) = -117901064;
      if ( common::tools::FileUtils::fileExists((const std::string *)(v2 + 720)) )
      {
        *(_DWORD *)(((v2 + 848) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 848) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 879) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 879) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 848, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 848),
          &common::milog::MiLogDefault::default_log_obj_,
          2u,
          "./src/lua_config_mgr.cpp",
          "loadAllActivityScript",
          2783);
        v22 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                (common::milog::MiLogStream *const)(v2 + 848),
                (const char (*)[12])"ActivityId:");
        v23 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v22,
                (const unsigned int *)(v2 + 96));
        v24 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(
                v23,
                (const char (*)[19])" has no group dir!");
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v24, (const std::string *)(v2 + 720));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 848));
        *(_DWORD *)(((v2 + 848) >> 3) + 0x7FFF8000) = -117901064;
      }
      else
      {
        *(_DWORD *)(((v2 + 912) >> 3) + 0x7FFF8000) = 0;
        *(_DWORD *)(((v2 + 1040) >> 3) + 0x7FFF8000) = 0;
        *(_DWORD *)(((v2 + 976) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 976) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1007) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 1007) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 976, 32LL);
        }
        std::operator+<char>((std::string *)(v2 + 976), (const std::string *)(v2 + 720), "activity");
        if ( *(char *)(((v2 + 1040) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1071) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 1071) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1040, 32LL);
        }
        std::operator+<char>((std::string *)(v2 + 1040), (std::string *)(v2 + 976), (const std::string *)(v2 + 656));
        if ( *(char *)(((v2 + 912) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 943) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 943) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 912, 32LL);
        }
        std::operator+<char>((std::string *)(v2 + 912), (std::string *)(v2 + 1040), ".lua");
        std::string::~string((void *)(v2 + 1040));
        *(_DWORD *)(((v2 + 1040) >> 3) + 0x7FFF8000) = -117901064;
        std::string::~string((void *)(v2 + 976));
        *(_DWORD *)(((v2 + 976) >> 3) + 0x7FFF8000) = -117901064;
        *(_WORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = 0;
        if ( *(_WORD *)(((v2 + 400) >> 3) + 0x7FFF8000) )
          __asan_report_store16();
        LuaScriptMgr::createFromFilePath((const std::string *)(v2 + 400), (const LuaConfigMgr *)(v2 + 912));
        if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v2 + 400)) )
        {
          *(_DWORD *)(((v2 + 1104) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 1104) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1135) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 1135) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 1104, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 1104),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadAllActivityScript",
            2791);
          v25 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 1104),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v26 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                  v25,
                  (const char (*)[53])"LuaScriptMgr::createFromFilePath fails, script_path:");
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v26, (const std::string *)(v2 + 912));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1104));
          *(_DWORD *)(((v2 + 1104) >> 3) + 0x7FFF8000) = -117901064;
          ret = -1;
        }
        else
        {
          v27 = ((v2 + 464) >> 3) + 2147450880;
          *(_WORD *)v27 = 0;
          *(_BYTE *)(v27 + 2) = 0;
          std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 464));
          v28 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 400));
          *(_DWORD *)(((v2 + 1168) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 48);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 1168),
            "blocks",
            (const std::allocator<char> *)(v2 + 48));
          v29 = (char *)(v2 + 1168);
          LOBYTE(v28) = LuaScript::getGlobalVector<unsigned int>(
                          v28,
                          (const std::string *)(v2 + 1168),
                          (std::vector<unsigned int> *)(v2 + 464)) != 0;
          std::string::~string((void *)(v2 + 1168));
          *(_DWORD *)(((v2 + 1168) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 48);
          *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v28 )
          {
            *(_DWORD *)(((v2 + 1232) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1232) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1263) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 1263) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1232, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1232),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "loadAllActivityScript",
              2800);
            v30 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1232),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v31 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                    v30,
                    (const char (*)[45])"getGlobalVariable blocks fails, activity id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v31, (const unsigned int *)(v2 + 96));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1232));
            *(_DWORD *)(((v2 + 1232) >> 3) + 0x7FFF8000) = -117901064;
            ret = -1;
          }
          else
          {
            __for_range_0 = (std::vector<unsigned int> *)(v2 + 464);
            *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v2 + 272, v29);
            *(std::vector<unsigned int>::iterator *)(v2 + 272) = std::vector<unsigned int>::begin(__for_range_0);
            *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v2 + 304, v29);
            *(std::vector<unsigned int>::iterator *)(v2 + 304) = std::vector<unsigned int>::end(__for_range_0);
            while ( 1 )
            {
              v32 = (char *)(v2 + 304);
              if ( !__gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(
                      (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v2 + 272),
                      (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v2 + 304)) )
                break;
              *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 4;
              v33 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*((const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v2 + 272));
              v34 = (int *)v33;
              if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v33 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v33);
              }
              v35 = *v34;
              v36 = *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000);
              if ( v36 != 0 && v36 <= 3 )
              {
                LOBYTE(v32) = v36 != 0;
                __asan_report_store4(v2 + 112, v32);
              }
              *(_DWORD *)(v2 + 112) = v35;
              v37 = std::set<unsigned int>::insert(
                      &this->all_block_set,
                      (const std::set<unsigned int>::value_type *)(v2 + 112));
              if ( !v37.second )
              {
                *(_DWORD *)(((v2 + 1296) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 1296) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1327) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 1327) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1296, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 1296),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "loadAllActivityScript",
                  2810);
                v38 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 1296),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v39 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                        v38,
                        (const char (*)[20])"duplicate block_id:");
                v40 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v39,
                        (const unsigned int *)(v2 + 112));
                v41 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                        v40,
                        (const char (*)[15])", activity id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v41,
                  (const unsigned int *)(v2 + 96));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1296));
                *(_DWORD *)(((v2 + 1296) >> 3) + 0x7FFF8000) = -117901064;
                ret = -1;
              }
              else
              {
                v42 = (char *)(v2 + 112);
                block_script_config = std::unordered_map<unsigned int,BlockScriptConfig>::operator[](
                                        &scene_script_config->block_config_map,
                                        (const std::unordered_map<unsigned int,BlockScriptConfig>::key_type *)(v2 + 112));
                if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_load4(v2 + 112);
                v43 = *(_DWORD *)(v2 + 112);
                v44 = *(_BYTE *)(((unsigned __int64)block_script_config >> 3) + 0x7FFF8000);
                if ( v44 != 0 && v44 <= 3 )
                {
                  LOBYTE(v42) = v44 != 0;
                  __asan_report_store4(block_script_config, v42);
                }
                block_script_config->block_id = v43;
                *(_DWORD *)(((v2 + 1360) >> 3) + 0x7FFF8000) = 0;
                *(_DWORD *)(((v2 + 1680) >> 3) + 0x7FFF8000) = 0;
                *(_DWORD *)(((v2 + 1616) >> 3) + 0x7FFF8000) = 0;
                v45 = *(_DWORD *)(v2 + 112);
                if ( *(char *)(((v2 + 1616) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1647) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 1647) >> 3) + 0x7FFF8000) )
                {
                  v45 = 32;
                  __asan_report_store_n(v2 + 1616, 32LL);
                }
                common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v2 + 1616), v45);
                *(_DWORD *)(((v2 + 1552) >> 3) + 0x7FFF8000) = 0;
                *(_DWORD *)(((v2 + 1488) >> 3) + 0x7FFF8000) = 0;
                *(_DWORD *)(((v2 + 1424) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 1424) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1455) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 1455) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1424, 32LL);
                }
                std::operator+<char>((std::string *)(v2 + 1424), (const std::string *)(v2 + 720), "activity");
                if ( *(char *)(((v2 + 1488) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1519) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 1519) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1488, 32LL);
                }
                std::operator+<char>(
                  (std::string *)(v2 + 1488),
                  (std::string *)(v2 + 1424),
                  (const std::string *)(v2 + 656));
                if ( *(char *)(((v2 + 1552) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1583) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 1583) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1552, 32LL);
                }
                std::operator+<char>((std::string *)(v2 + 1552), (std::string *)(v2 + 1488), "_block");
                if ( *(char *)(((v2 + 1680) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1711) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 1711) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1680, 32LL);
                }
                std::operator+<char>((std::string *)(v2 + 1680), (std::string *)(v2 + 1552), (std::string *)(v2 + 1616));
                if ( *(char *)(((v2 + 1360) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1391) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 1391) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1360, 32LL);
                }
                std::operator+<char>((std::string *)(v2 + 1360), (std::string *)(v2 + 1680), ".lua");
                std::string::~string((void *)(v2 + 1680));
                *(_DWORD *)(((v2 + 1680) >> 3) + 0x7FFF8000) = -117901064;
                std::string::~string((void *)(v2 + 1552));
                *(_DWORD *)(((v2 + 1552) >> 3) + 0x7FFF8000) = -117901064;
                std::string::~string((void *)(v2 + 1488));
                *(_DWORD *)(((v2 + 1488) >> 3) + 0x7FFF8000) = -117901064;
                std::string::~string((void *)(v2 + 1424));
                *(_DWORD *)(((v2 + 1424) >> 3) + 0x7FFF8000) = -117901064;
                std::string::~string((void *)(v2 + 1616));
                *(_DWORD *)(((v2 + 1616) >> 3) + 0x7FFF8000) = -117901064;
                *(_WORD *)(((v2 + 432) >> 3) + 0x7FFF8000) = 0;
                if ( *(_WORD *)(((v2 + 432) >> 3) + 0x7FFF8000) )
                  __asan_report_store16();
                LuaScriptMgr::createFromFilePath((const std::string *)(v2 + 432), (const LuaConfigMgr *)(v2 + 1360));
                if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v2 + 432)) )
                {
                  *(_DWORD *)(((v2 + 1744) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1744) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1775) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 1775) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1744, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1744),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "loadAllActivityScript",
                    2822);
                  v46 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1744),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  v47 = std::string::c_str(v2 + 1360);
                  common::milog::MiLogStream::operator()(v46, &byte_1A53E800, v47);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1744));
                  *(_DWORD *)(((v2 + 1744) >> 3) + 0x7FFF8000) = -117901064;
                  ret = -1;
                }
                else
                {
                  v48 = ((v2 + 528) >> 3) + 2147450880;
                  *(_WORD *)v48 = 0;
                  *(_BYTE *)(v48 + 2) = 0;
                  std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v2 + 528));
                  v49 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 432));
                  *(_DWORD *)(((v2 + 1808) >> 3) + 0x7FFF8000) = 0;
                  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<char>::allocator(v2 + 64);
                  std::string::basic_string<std::allocator<char>>(
                    (std::string *const)(v2 + 1808),
                    "groups",
                    (const std::allocator<char> *)(v2 + 64));
                  v50 = (char *)(v2 + 1808);
                  LOBYTE(v49) = LuaScript::getGlobalVector<luabind::adl::object>(
                                  v49,
                                  (const std::string *)(v2 + 1808),
                                  (std::vector<luabind::adl::object> *)(v2 + 528)) != 0;
                  std::string::~string((void *)(v2 + 1808));
                  *(_DWORD *)(((v2 + 1808) >> 3) + 0x7FFF8000) = -117901064;
                  std::allocator<char>::~allocator(v2 + 64);
                  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
                  if ( (_BYTE)v49 )
                  {
                    *(_DWORD *)(((v2 + 1872) >> 3) + 0x7FFF8000) = 0;
                    if ( *(char *)(((v2 + 1872) >> 3) + 0x7FFF8000) < 0
                      || *(_BYTE *)(((v2 + 1903) >> 3) + 0x7FFF8000) != 0
                      && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 1903) >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_store_n(v2 + 1872, 32LL);
                    }
                    common::milog::MiLogStream::create(
                      (common::milog::MiLogStream *)(v2 + 1872),
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/lua_config_mgr.cpp",
                      "loadAllActivityScript",
                      2830);
                    v51 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                            (common::milog::MiLogStream *const)(v2 + 1872),
                            (const char (*)[16])"[CONFIG_ERROR] ");
                    v52 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                            v51,
                            (const char (*)[45])"getGlobalVariable groups fails, activity id:");
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v52,
                      (const unsigned int *)(v2 + 96));
                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1872));
                    *(_DWORD *)(((v2 + 1872) >> 3) + 0x7FFF8000) = -117901064;
                    ret = -1;
                  }
                  else
                  {
                    __for_range_1 = (std::vector<luabind::adl::object> *)(v2 + 528);
                    *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = 0;
                    if ( *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) )
                      __asan_report_store8(v2 + 336, v50);
                    *(std::vector<luabind::adl::object>::iterator *)(v2 + 336) = std::vector<luabind::adl::object>::begin(__for_range_1);
                    *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = 0;
                    if ( *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) )
                      __asan_report_store8(v2 + 368, v50);
                    *(std::vector<luabind::adl::object>::iterator *)(v2 + 368) = std::vector<luabind::adl::object>::end(__for_range_1);
                    while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                              (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v2 + 336),
                              (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v2 + 368)) )
                    {
                      group_obj = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v2 + 336));
                      v53 = 304LL;
                      __asan_unpoison_stack_memory(v2 + 2720, 304LL);
                      GroupInfoScriptConfig::GroupInfoScriptConfig((GroupInfoScriptConfig *const)(v2 + 2720));
                      if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(v2 + 112);
                      }
                      v54 = *(_DWORD *)(v2 + 112);
                      v55 = *(_BYTE *)(((v2 + 2724) >> 3) + 0x7FFF8000);
                      if ( v55 != 0 && (char)(((v2 - 96 + 4) & 7) + 3) >= v55 )
                      {
                        LOBYTE(v53) = v55 != 0;
                        __asan_report_store4(v2 + 2724, v53);
                      }
                      *(_DWORD *)(v2 + 2724) = v54;
                      if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(v2 + 96);
                      }
                      v56 = *(_DWORD *)(v2 + 96);
                      if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
                      {
                        v56 = v2 + 80;
                        __asan_report_load4(v2 + 80);
                      }
                      v57 = group_obj;
                      if ( (unsigned int)LuaConfigMgr::loadGroupInfoScriptConfig(
                                           this,
                                           group_obj,
                                           (std::vector<std::string> *)(v2 + 2720),
                                           *(_DWORD *)(v2 + 80),
                                           v56) )
                      {
                        *(_DWORD *)(((v2 + 1936) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v2 + 1936) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v2 + 1967) >> 3) + 0x7FFF8000) != 0
                          && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 1967) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v2 + 1936, 32LL);
                        }
                        common::milog::MiLogStream::create(
                          (common::milog::MiLogStream *)(v2 + 1936),
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/lua_config_mgr.cpp",
                          "loadAllActivityScript",
                          2840);
                        v59 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                (common::milog::MiLogStream *const)(v2 + 1936),
                                (const char (*)[16])"[CONFIG_ERROR] ");
                        v60 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                                v59,
                                (const char (*)[52])"loadGroupInfoScriptConfig fails, group_script_path:");
                        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                          v60,
                          (const std::string *)(v2 + 912));
                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1936));
                        *(_DWORD *)(((v2 + 1936) >> 3) + 0x7FFF8000) = -117901064;
                        ret = -1;
                      }
                      else
                      {
                        *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 4;
                        v61 = *(unsigned __int8 *)(((v2 + 2720) >> 3) + 0x7FFF8000);
                        if ( (_BYTE)v61 != 0 && (char)v61 <= 3 )
                          __asan_report_load4(v2 + 2720);
                        v62 = *(_DWORD *)(v2 + 2720);
                        v63 = *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000);
                        if ( v63 != 0 && v63 <= 3 )
                        {
                          LOBYTE(v57) = v63 != 0;
                          __asan_report_store4(v2 + 128, v57);
                        }
                        *(_DWORD *)(v2 + 128) = v62;
                        v64 = std::unordered_map<unsigned int,GroupInfoScriptConfig>::emplace<unsigned int &,GroupInfoScriptConfig&>(
                                &scene_script_config->group_info_map,
                                (unsigned int *)(v2 + 128),
                                (GroupInfoScriptConfig *)(v2 + 2720),
                                (unsigned int *)&scene_script_config->group_info_map,
                                v58);
                        if ( !v64.second )
                        {
                          *(_DWORD *)(((v2 + 2000) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v2 + 2000) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 2031) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 2031) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 2000, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v2 + 2000),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/lua_config_mgr.cpp",
                            "loadAllActivityScript",
                            2847);
                          v65 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                  (common::milog::MiLogStream *const)(v2 + 2000),
                                  (const char (*)[16])"[CONFIG_ERROR] ");
                          v66 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                                  v65,
                                  (const char (*)[20])"duplicate group_id:");
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v66,
                            (const unsigned int *)(v2 + 128));
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2000));
                          *(_DWORD *)(((v2 + 2000) >> 3) + 0x7FFF8000) = -117901064;
                          ret = -1;
                        }
                        else
                        {
                          *(_DWORD *)(((v2 + 2064) >> 3) + 0x7FFF8000) = 0;
                          *(_DWORD *)(((v2 + 2384) >> 3) + 0x7FFF8000) = 0;
                          *(_DWORD *)(((v2 + 2320) >> 3) + 0x7FFF8000) = 0;
                          if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0
                            && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
                          {
                            __asan_report_load4(v2 + 128);
                          }
                          v67 = *(_DWORD *)(v2 + 128);
                          if ( *(char *)(((v2 + 2320) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 2351) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 2351) >> 3) + 0x7FFF8000) )
                          {
                            v67 = 32;
                            __asan_report_store_n(v2 + 2320, 32LL);
                          }
                          common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v2 + 2320), v67);
                          *(_DWORD *)(((v2 + 2256) >> 3) + 0x7FFF8000) = 0;
                          *(_DWORD *)(((v2 + 2192) >> 3) + 0x7FFF8000) = 0;
                          *(_DWORD *)(((v2 + 2128) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v2 + 2128) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 2159) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 2159) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 2128, 32LL);
                          }
                          std::operator+<char>((std::string *)(v2 + 2128), (const std::string *)(v2 + 720), "activity");
                          if ( *(char *)(((v2 + 2192) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 2223) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 2223) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 2192, 32LL);
                          }
                          std::operator+<char>(
                            (std::string *)(v2 + 2192),
                            (std::string *)(v2 + 2128),
                            (const std::string *)(v2 + 656));
                          if ( *(char *)(((v2 + 2256) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 2287) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 2287) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 2256, 32LL);
                          }
                          std::operator+<char>((std::string *)(v2 + 2256), (std::string *)(v2 + 2192), "_group");
                          if ( *(char *)(((v2 + 2384) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 2415) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 2415) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 2384, 32LL);
                          }
                          std::operator+<char>(
                            (std::string *)(v2 + 2384),
                            (std::string *)(v2 + 2256),
                            (std::string *)(v2 + 2320));
                          if ( *(char *)(((v2 + 2064) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 2095) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 2095) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 2064, 32LL);
                          }
                          std::operator+<char>((std::string *)(v2 + 2064), (std::string *)(v2 + 2384), ".lua");
                          std::string::~string((void *)(v2 + 2384));
                          *(_DWORD *)(((v2 + 2384) >> 3) + 0x7FFF8000) = -117901064;
                          std::string::~string((void *)(v2 + 2256));
                          *(_DWORD *)(((v2 + 2256) >> 3) + 0x7FFF8000) = -117901064;
                          std::string::~string((void *)(v2 + 2192));
                          *(_DWORD *)(((v2 + 2192) >> 3) + 0x7FFF8000) = -117901064;
                          std::string::~string((void *)(v2 + 2128));
                          *(_DWORD *)(((v2 + 2128) >> 3) + 0x7FFF8000) = -117901064;
                          std::string::~string((void *)(v2 + 2320));
                          *(_DWORD *)(((v2 + 2320) >> 3) + 0x7FFF8000) = -117901064;
                          v68 = 1544LL;
                          __asan_unpoison_stack_memory(v2 + 3088, 1544LL);
                          GroupScriptConfig::GroupScriptConfig((GroupScriptConfig *const)(v2 + 3088));
                          if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0
                            && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
                          {
                            __asan_report_load4(v2 + 112);
                          }
                          v69 = *(_DWORD *)(v2 + 112);
                          v70 = *(_BYTE *)(((v2 + 4240) >> 3) + 0x7FFF8000);
                          if ( v70 != 0 && v70 <= 3 )
                          {
                            LOBYTE(v68) = v70 != 0;
                            __asan_report_store4(v2 + 4240, v68);
                          }
                          *(_DWORD *)(v2 + 4240) = v69;
                          v71 = (((_BYTE)v2 - 96 + 20) & 7u) + 3;
                          if ( *(_BYTE *)(((v2 + 2740) >> 3) + 0x7FFF8000) != 0
                            && (char)(((v2 - 96 + 20) & 7) + 3) >= *(_BYTE *)(((v2 + 2740) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_load4(v2 + 2740);
                          }
                          v72 = *(_DWORD *)(v2 + 2740);
                          v73 = *(_BYTE *)(((v2 + 4244) >> 3) + 0x7FFF8000);
                          if ( v73 != 0 && (char)(((v2 - 108) & 7) + 3) >= v73 )
                          {
                            LOBYTE(v71) = v73 != 0;
                            __asan_report_store4(v2 + 4244, v71);
                          }
                          *(_DWORD *)(v2 + 4244) = v72;
                          if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0
                            && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
                          {
                            __asan_report_load4(v2 + 128);
                          }
                          v74 = *(_DWORD *)(v2 + 128);
                          v75 = *(_BYTE *)(((v2 + 4248) >> 3) + 0x7FFF8000);
                          if ( v75 != 0 && v75 <= 3 )
                          {
                            LOBYTE(v71) = v75 != 0;
                            __asan_report_store4(v2 + 4248, v71);
                          }
                          *(_DWORD *)(v2 + 4248) = v74;
                          if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0
                            && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
                          {
                            __asan_report_load4(v2 + 80);
                          }
                          if ( LuaConfigMgr::loadGroupScriptConfig(
                                 this,
                                 (const std::string *)(v2 + 2064),
                                 (GroupScriptConfig *)(v2 + 3088),
                                 *(_DWORD *)(v2 + 80)) )
                          {
                            *(_DWORD *)(((v2 + 2448) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v2 + 2448) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v2 + 2479) >> 3) + 0x7FFF8000) != 0
                              && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 2479) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v2 + 2448, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v2 + 2448),
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/lua_config_mgr.cpp",
                              "loadAllActivityScript",
                              2860);
                            v77 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                    (common::milog::MiLogStream *const)(v2 + 2448),
                                    (const char (*)[16])"[CONFIG_ERROR] ");
                            v78 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                                    v77,
                                    (const char (*)[48])"loadGroupScriptConfig fails, group_script_path:");
                            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                              v78,
                              (const std::string *)(v2 + 2064));
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2448));
                            *(_DWORD *)(((v2 + 2448) >> 3) + 0x7FFF8000) = -117901064;
                            ret = -1;
                          }
                          else
                          {
                            v79 = std::unordered_map<unsigned int,GroupScriptConfig>::emplace<unsigned int &,GroupScriptConfig&>(
                                    &scene_script_config->group_config_map,
                                    (unsigned int *)(v2 + 128),
                                    (GroupScriptConfig *)(v2 + 3088),
                                    (unsigned int *)&scene_script_config->group_config_map,
                                    v76);
                            if ( !v79.second )
                            {
                              *(_DWORD *)(((v2 + 2512) >> 3) + 0x7FFF8000) = 0;
                              if ( *(char *)(((v2 + 2512) >> 3) + 0x7FFF8000) < 0
                                || *(_BYTE *)(((v2 + 2543) >> 3) + 0x7FFF8000) != 0
                                && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 2543) >> 3) + 0x7FFF8000) )
                              {
                                __asan_report_store_n(v2 + 2512, 32LL);
                              }
                              common::milog::MiLogStream::create(
                                (common::milog::MiLogStream *)(v2 + 2512),
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/lua_config_mgr.cpp",
                                "loadAllActivityScript",
                                2867);
                              v80 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                      (common::milog::MiLogStream *const)(v2 + 2512),
                                      (const char (*)[16])"[CONFIG_ERROR] ");
                              v81 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                                      v80,
                                      (const char (*)[20])"duplicate group_id:");
                              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                v81,
                                (const unsigned int *)(v2 + 128));
                              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2512));
                              *(_DWORD *)(((v2 + 2512) >> 3) + 0x7FFF8000) = -117901064;
                              ret = -1;
                            }
                            else
                            {
                              v82 = std::unordered_set<unsigned int>::insert(
                                      &block_script_config->group_set,
                                      (const std::unordered_set<unsigned int>::value_type *)(v2 + 128));
                              if ( !v82.second )
                              {
                                *(_DWORD *)(((v2 + 2576) >> 3) + 0x7FFF8000) = 0;
                                if ( *(char *)(((v2 + 2576) >> 3) + 0x7FFF8000) < 0
                                  || *(_BYTE *)(((v2 + 2607) >> 3) + 0x7FFF8000) != 0
                                  && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 2607) >> 3) + 0x7FFF8000) )
                                {
                                  __asan_report_store_n(v2 + 2576, 32LL);
                                }
                                common::milog::MiLogStream::create(
                                  (common::milog::MiLogStream *)(v2 + 2576),
                                  &common::milog::MiLogDefault::default_log_obj_,
                                  4u,
                                  "./src/lua_config_mgr.cpp",
                                  "loadAllActivityScript",
                                  2873);
                                v83 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                        (common::milog::MiLogStream *const)(v2 + 2576),
                                        (const char (*)[16])"[CONFIG_ERROR] ");
                                v84 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                                        v83,
                                        (const char (*)[20])"duplicate group_id:");
                                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                  v84,
                                  (const unsigned int *)(v2 + 128));
                                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2576));
                                *(_DWORD *)(((v2 + 2576) >> 3) + 0x7FFF8000) = -117901064;
                                ret = -1;
                              }
                              v85 = std::unordered_map<unsigned int,std::vector<unsigned int>>::operator[](
                                      &scene_script_config->activity_group_vec_map,
                                      (const std::unordered_map<unsigned int,std::vector<unsigned int>>::key_type *)(v2 + 96));
                              std::vector<unsigned int>::push_back(
                                v85,
                                (const std::vector<unsigned int>::value_type *)(v2 + 128));
                            }
                          }
                          GroupScriptConfig::~GroupScriptConfig((GroupScriptConfig *const)(v2 + 3088));
                          std::string::~string((void *)(v2 + 2064));
                        }
                      }
                      GroupInfoScriptConfig::~GroupInfoScriptConfig((GroupInfoScriptConfig *const)(v2 + 2720));
                      __asan_poison_stack_memory(v2 + 2720, 304LL);
                      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
                      *(_DWORD *)(((v2 + 2064) >> 3) + 0x7FFF8000) = -117901064;
                      __asan_poison_stack_memory(v2 + 3088, 1544LL);
                      __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v2 + 336));
                    }
                    *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
                    *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = -8;
                  }
                  std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v2 + 528));
                }
                std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v2 + 432));
                std::string::~string((void *)(v2 + 1360));
              }
              *(_DWORD *)(((v2 + 1360) >> 3) + 0x7FFF8000) = -117901064;
              *(_WORD *)(((v2 + 432) >> 3) + 0x7FFF8000) = -1800;
              v86 = ((v2 + 528) >> 3) + 2147450880;
              *(_WORD *)v86 = -1800;
              *(_BYTE *)(v86 + 2) = -8;
              __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++((__gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v2 + 272));
            }
            *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
            *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
            *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
          }
          std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 464));
        }
        std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v2 + 400));
        std::string::~string((void *)(v2 + 912));
      }
      std::string::~string((void *)(v2 + 720));
      std::string::~string((void *)(v2 + 656));
      *(_DWORD *)(((v2 + 656) >> 3) + 0x7FFF8000) = -117901064;
      *(_DWORD *)(((v2 + 720) >> 3) + 0x7FFF8000) = -117901064;
      *(_DWORD *)(((v2 + 912) >> 3) + 0x7FFF8000) = -117901064;
      *(_WORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = -1800;
      v87 = ((v2 + 464) >> 3) + 2147450880;
      *(_WORD *)v87 = -1800;
      *(_BYTE *)(v87 + 2) = -8;
      std::_Rb_tree_const_iterator<unsigned int>::operator++((std::_Rb_tree_const_iterator<unsigned int> *const)(v2 + 208));
    }
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
    v12 = ret;
    std::set<unsigned int>::~set((std::set<unsigned int> *const)(v2 + 2640));
  }
  if ( v98 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8144) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 332) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8150) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF824C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862806) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147451216 - (((_DWORD)v4 + 2147451224) & 0xFFFFFFF8) + 260) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_7(v2, 4768LL, v98);
  }
  return v12;
};

// Line 2886: range 000000000F3042A0-000000000F306B58
int32_t __cdecl LuaConfigMgr::loadGroupsReplacementScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rax
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // r14
  char *v9; // rsi
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  bool v12; // r14
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  unsigned __int64 v19; // rax
  bool v20; // r14
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  char *v23; // rsi
  char *v24; // rsi
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v25; // rax
  int *v26; // rdx
  int v27; // ecx
  char v28; // al
  std::unordered_set<unsigned int> *v29; // rax
  std::pair<std::__detail::_Node_iterator<unsigned int,true,false>,bool> v30; // rax
  common::milog::MiLogStream *v31; // rdi
  unsigned int v32; // edx
  std::unordered_set<unsigned int> *v33; // rax
  unsigned __int64 v34; // rax
  common::milog::MiLogStream *v35; // rax
  char *v36; // rsi
  std::__detail::_Node_const_iterator<unsigned int,true,false>::reference v37; // rax
  unsigned int v38; // esi
  const char *v39; // rcx
  char *v40; // rsi
  std::__detail::_Node_const_iterator<unsigned int,true,false>::reference v41; // rax
  unsigned int v42; // esi
  const char *v43; // rcx
  int32_t ret; // [rsp+14h] [rbp-8CCh]
  std::vector<luabind::adl::object> *__for_range; // [rsp+18h] [rbp-8C8h]
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *__for_range_1; // [rsp+20h] [rbp-8C0h]
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *__for_range_3; // [rsp+28h] [rbp-8B8h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false>::reference v50; // [rsp+30h] [rbp-8B0h]
  std::tuple_element<0,std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *group_id_0; // [rsp+38h] [rbp-8A8h]
  std::tuple_element<1,const std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *replace_by_set; // [rsp+40h] [rbp-8A0h]
  const unsigned int *group_0; // [rsp+50h] [rbp-890h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false>::reference v54; // [rsp+58h] [rbp-888h]
  std::tuple_element<0,std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *group_id; // [rsp+60h] [rbp-880h]
  std::tuple_element<1,const std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *replace_set; // [rsp+68h] [rbp-878h]
  const unsigned int *group; // [rsp+78h] [rbp-868h]
  luabind::adl::object *replacement_obj; // [rsp+80h] [rbp-860h]
  std::vector<unsigned int> *__for_range_0; // [rsp+88h] [rbp-858h]
  char v60[2128]; // [rsp+90h] [rbp-850h] BYREF

  v2 = (unsigned __int64)v60;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_6(2080LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "43 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 line:2913 96 4 13 group_id:2917 112"
                        " 4 21 replace_group_id:2942 128 8 16 __for_begin:2914 160 8 14 __for_end:2914 192 8 16 __for_beg"
                        "in:2942 224 8 14 __for_end:2942 256 8 16 __for_begin:2963 288 8 14 __for_end:2963 320 8 16 __for"
                        "_begin:2966 352 8 14 __for_end:2966 384 8 16 __for_begin:2973 416 8 14 __for_end:2973 448 8 16 _"
                        "_for_begin:2976 480 8 14 __for_end:2976 512 16 15 script_ptr:2897 544 24 24 replacement_obj_vec:"
                        "2905 608 24 23 replace_groups_vec:2934 672 32 13 lua_path:2890 736 32 9 <unknown> 800 32 9 <unkn"
                        "own> 864 32 9 <unknown> 928 32 9 <unknown> 992 32 9 <unknown> 1056 32 9 <unknown> 1120 32 9 <unk"
                        "nown> 1184 32 9 <unknown> 1248 32 9 <unknown> 1312 32 9 <unknown> 1376 32 9 <unknown> 1440 32 9 "
                        "<unknown> 1504 32 15 groups_str:2965 1568 32 9 <unknown> 1632 32 9 <unknown> 1696 32 9 <unknown>"
                        " 1760 32 9 <unknown> 1824 32 15 groups_str:2975 1888 32 9 <unknown> 1952 32 9 <unknown> 2016 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::loadGroupsReplacementScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234556927;
  v4[536862723] = -234556924;
  v4[536862724] = -218959360;
  v4[536862725] = -218959360;
  v4[536862726] = -218959360;
  v4[536862727] = -218959360;
  v4[536862728] = -218959360;
  v4[536862729] = -218959360;
  v4[536862730] = -218959360;
  v4[536862731] = -218959360;
  v4[536862732] = -218959360;
  v4[536862733] = -218959360;
  v4[536862734] = -218959360;
  v4[536862735] = -218959360;
  v4[536862736] = -219021312;
  v4[536862737] = -234881024;
  v4[536862738] = -218959118;
  v4[536862739] = -234881024;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -218959118;
  v4[536862754] = -218959118;
  v4[536862756] = -218959118;
  v4[536862758] = -218959118;
  v4[536862760] = -218959118;
  v4[536862762] = -218959118;
  v4[536862764] = -218959118;
  v4[536862766] = -218959118;
  v4[536862768] = -218959118;
  v4[536862770] = -218959118;
  v4[536862772] = -218959118;
  v4[536862774] = -218959118;
  v4[536862776] = -218959118;
  v4[536862778] = -218959118;
  v4[536862780] = -218959118;
  v4[536862782] = -218959118;
  v4[536862784] = -202116109;
  ret = 0;
  if ( *(char *)(((v2 + 672) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) )
  {
    config = (HK4EDesignConfig *)32;
    __asan_report_store_n(v2 + 672, 32LL);
  }
  std::operator+<char>((std::string *)(v2 + 672), &config->scene_lua_base_dir, "groups_replacement.lua");
  if ( common::tools::FileUtils::fileExists((const std::string *)(v2 + 672)) )
  {
    if ( *(char *)(((v2 + 736) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 736, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 736),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "loadGroupsReplacementScript",
      2893);
    common::milog::MiLogStream::operator<<<char [124],(char *[124])0>(
      (common::milog::MiLogStream *const)(v2 + 736),
      (const char (*)[124])byte_1A53F840);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 736));
    *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
    v5 = 0;
  }
  else
  {
    if ( *(_WORD *)(((v2 + 512) >> 3) + 0x7FFF8000) )
      __asan_report_store16();
    LuaScriptMgr::createFromFilePath((const std::string *)(v2 + 512), (const LuaConfigMgr *)(v2 + 672));
    if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v2 + 512)) )
    {
      if ( *(char *)(((v2 + 800) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 800, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 800),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "loadGroupsReplacementScript",
        2900);
      v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 800),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v7 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
             v6,
             (const char (*)[53])"LuaScriptMgr::createFromFilePath fails, script_path:");
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, (const std::string *)(v2 + 672));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 800));
      *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
      v5 = -1;
    }
    else
    {
      std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v2 + 544));
      v8 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 512));
      std::allocator<char>::allocator(v2 + 32);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 864),
        "replacements",
        (const std::allocator<char> *)(v2 + 32));
      v9 = (char *)(v2 + 864);
      LOBYTE(v8) = LuaScript::getGlobalVector<luabind::adl::object>(
                     v8,
                     (const std::string *)(v2 + 864),
                     (std::vector<luabind::adl::object> *)(v2 + 544)) != 0;
      std::string::~string((void *)(v2 + 864));
      *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 32);
      *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v8 )
      {
        *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 928) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 928, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 928),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "loadGroupsReplacementScript",
          2908);
        v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 928),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v11 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                v10,
                (const char (*)[49])"getGlobalVariable replacements fails from file: ");
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v11, (const std::string *)(v2 + 672));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 928));
        *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
        v5 = -1;
      }
      else
      {
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 4;
        if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v2 + 80, v9);
        *(_DWORD *)(v2 + 80) = 0;
        __for_range = (std::vector<luabind::adl::object> *)(v2 + 544);
        *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 128, v9);
        *(std::vector<luabind::adl::object>::iterator *)(v2 + 128) = std::vector<luabind::adl::object>::begin(__for_range);
        *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 160, v9);
        *(std::vector<luabind::adl::object>::iterator *)(v2 + 160) = std::vector<luabind::adl::object>::end(__for_range);
        while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                  (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v2 + 128),
                  (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v2 + 160)) )
        {
          replacement_obj = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v2 + 128));
          if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_load4(v2 + 80);
          ++*(_DWORD *)(v2 + 80);
          *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 4;
          if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_store4(v2 + 96, v2 + 160);
          *(_DWORD *)(v2 + 96) = 0;
          *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 48);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 992),
            "id",
            (const std::allocator<char> *)(v2 + 48));
          v12 = ScriptUtil::getTableValue<unsigned int>(
                  &ScriptUtil::no_exception_instance,
                  replacement_obj,
                  (const std::string *)(v2 + 992),
                  (unsigned int *)(v2 + 96)) != 0;
          std::string::~string((void *)(v2 + 992));
          *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 48);
          *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
          if ( v12 )
          {
            *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1056) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1056, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1056),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "loadGroupsReplacementScript",
              2920);
            v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1056),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v14 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                    v13,
                    (const char (*)[46])"replacement config missing field <id> @ line=");
            common::milog::MiLogStream::operator<<<int,(int *)0>(v14, (const int *)(v2 + 80));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1056));
            *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -117901064;
            ret = -1;
          }
          else if ( std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::count(
                      &this->group_replace_set_map,
                      (const std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::key_type *)(v2 + 96)) )
          {
            *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1120) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1151) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1151) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1120, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1120),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "loadGroupsReplacementScript",
              2928);
            v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1120),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v16 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                    v15,
                    (const char (*)[33])"duplicate replacement config id=");
            v17 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v16,
                    (const unsigned int *)(v2 + 96));
            v18 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v17, (const char (*)[8])" @line=");
            common::milog::MiLogStream::operator<<<int,(int *)0>(v18, (const int *)(v2 + 80));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1120));
            *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -117901064;
            ret = -1;
          }
          else
          {
            v19 = ((v2 + 608) >> 3) + 2147450880;
            *(_WORD *)v19 = 0;
            *(_BYTE *)(v19 + 2) = 0;
            std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 608));
            *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 64);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 1184),
              "replace_groups",
              (const std::allocator<char> *)(v2 + 64));
            v20 = ScriptUtil::getTableValue<std::vector<unsigned int>>(
                    &ScriptUtil::no_exception_instance,
                    replacement_obj,
                    (const std::string *)(v2 + 1184),
                    (std::vector<unsigned int> *)(v2 + 608)) != 0;
            std::string::~string((void *)(v2 + 1184));
            *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 64);
            *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
            if ( v20 )
            {
              *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 1248) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 1279) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1279) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 1248, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 1248),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "loadGroupsReplacementScript",
                2937);
              v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 1248),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v22 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
                      v21,
                      (const char (*)[58])"replacement config missing field <replace_groups> @ line=");
              common::milog::MiLogStream::operator<<<int,(int *)0>(v22, (const int *)(v2 + 80));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1248));
              *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = -117901064;
              ret = -1;
            }
            else
            {
              v23 = (char *)(v2 + 96);
              std::unordered_set<unsigned int>::insert(
                &this->join_replace_group_set,
                (const std::unordered_set<unsigned int>::value_type *)(v2 + 96));
              __for_range_0 = (std::vector<unsigned int> *)(v2 + 608);
              *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v2 + 192, v23);
              *(std::vector<unsigned int>::iterator *)(v2 + 192) = std::vector<unsigned int>::begin(__for_range_0);
              *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v2 + 224, v23);
              *(std::vector<unsigned int>::iterator *)(v2 + 224) = std::vector<unsigned int>::end(__for_range_0);
              while ( 1 )
              {
                v24 = (char *)(v2 + 224);
                if ( !__gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(
                        (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v2 + 192),
                        (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v2 + 224)) )
                  break;
                *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 4;
                v25 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*((const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v2 + 192));
                v26 = (int *)v25;
                if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v25 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v25);
                }
                v27 = *v26;
                v28 = *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000);
                if ( v28 != 0 && v28 <= 3 )
                {
                  LOBYTE(v24) = v28 != 0;
                  __asan_report_store4(v2 + 112, v24);
                }
                *(_DWORD *)(v2 + 112) = v27;
                v29 = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::operator[](
                        &this->group_replace_set_map,
                        (const std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::key_type *)(v2 + 96));
                v30 = std::unordered_set<unsigned int>::insert(
                        v29,
                        (const std::unordered_set<unsigned int>::value_type *)(v2 + 112));
                if ( !v30.second )
                {
                  *(_DWORD *)(((v2 + 1312) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1312) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1343) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1343) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1312, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1312),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "loadGroupsReplacementScript",
                    2946);
                  v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1312),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) <= 3 )
                  {
                    v31 = (common::milog::MiLogStream *)(v2 + 96);
                    __asan_report_load4(v2 + 96);
                  }
                  v32 = *(_DWORD *)(v2 + 96);
                  if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
                  {
                    v31 = (common::milog::MiLogStream *)(v2 + 112);
                    __asan_report_load4(v2 + 112);
                  }
                  common::milog::MiLogStream::operator()(
                    v31,
                    "duplicate replace_groud_id=%u for group_id=%u",
                    *(unsigned int *)(v2 + 112),
                    v32);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1312));
                  *(_DWORD *)(((v2 + 1312) >> 3) + 0x7FFF8000) = -117901064;
                  ret = -1;
                }
                v33 = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::operator[](
                        &this->group_replaced_by_set_map,
                        (const std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::key_type *)(v2 + 112));
                std::unordered_set<unsigned int>::insert(
                  v33,
                  (const std::unordered_set<unsigned int>::value_type *)(v2 + 96));
                std::unordered_set<unsigned int>::insert(
                  &this->join_replace_group_set,
                  (const std::unordered_set<unsigned int>::value_type *)(v2 + 112));
                __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++((__gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v2 + 192));
              }
              *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
            }
            std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 608));
          }
          *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
          v34 = ((v2 + 608) >> 3) + 2147450880;
          *(_WORD *)v34 = -1800;
          *(_BYTE *)(v34 + 2) = -8;
          __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v2 + 128));
        }
        *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
        if ( LuaConfigMgr::hasCyclicReplacement(this) )
        {
          *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 1376) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1407) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1407) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 1376, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 1376),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadGroupsReplacementScript",
            2957);
          v35 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 1376),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator()(v35, "cycle(s) detected in groups replacement script!");
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1376));
          *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = -117901064;
          ret = -1;
        }
        *(_DWORD *)(((v2 + 1440) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 1440) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1471) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 1471) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1440, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 1440),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/lua_config_mgr.cpp",
          "loadGroupsReplacementScript",
          2962);
        common::milog::MiLogStream::operator()((common::milog::MiLogStream *const)(v2 + 1440), "group_replace_set_map:");
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1440));
        *(_DWORD *)(((v2 + 1440) >> 3) + 0x7FFF8000) = -117901064;
        __for_range_1 = &this->group_replace_set_map;
        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 256, "group_replace_set_map:");
        *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::iterator *)(v2 + 256) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::begin(__for_range_1);
        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 288, "group_replace_set_map:");
        *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::iterator *)(v2 + 288) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::end(__for_range_1);
        while ( 1 )
        {
          v36 = (char *)(v2 + 288);
          if ( !std::__detail::operator!=<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false>(
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 256),
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 288)) )
            break;
          v54 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 256));
          group_id = std::get<0ul,unsigned int const,std::unordered_set<unsigned int>>(v54);
          replace_set = (std::tuple_element<1,const std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *)std::get<1ul,unsigned int const,std::unordered_set<unsigned int>>(v54);
          *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = 0;
          std::string::basic_string(v2 + 1504);
          *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v2 + 320, v36);
          *(std::unordered_set<unsigned int>::const_iterator *)(v2 + 320) = std::unordered_set<unsigned int>::begin(replace_set);
          *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v2 + 352, v36);
          *(std::unordered_set<unsigned int>::const_iterator *)(v2 + 352) = std::unordered_set<unsigned int>::end(replace_set);
          while ( std::__detail::operator!=<unsigned int,false>(
                    (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 320),
                    (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 352)) )
          {
            v37 = std::__detail::_Node_const_iterator<unsigned int,true,false>::operator*((const std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v2 + 320));
            group = v37;
            *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = 0;
            *(_DWORD *)(((v2 + 1568) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((unsigned __int64)v37 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v37 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v37 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v37);
            }
            v38 = *group;
            if ( *(char *)(((v2 + 1568) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1599) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1599) >> 3) + 0x7FFF8000) )
            {
              v38 = 32;
              __asan_report_store_n(v2 + 1568, 32LL);
            }
            common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v2 + 1568), v38);
            if ( *(char *)(((v2 + 1632) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1663) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1663) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1632, 32LL);
            }
            std::operator+<char>((std::string *)(v2 + 1632), (std::string *)(v2 + 1568), ", ");
            std::string::operator+=(v2 + 1504, v2 + 1632);
            std::string::~string((void *)(v2 + 1632));
            *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = -117901064;
            std::string::~string((void *)(v2 + 1568));
            *(_DWORD *)(((v2 + 1568) >> 3) + 0x7FFF8000) = -117901064;
            std::__detail::_Node_const_iterator<unsigned int,true,false>::operator++((std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v2 + 320));
          }
          *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
          *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 1696) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1727) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 1727) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 1696, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 1696),
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/lua_config_mgr.cpp",
            "loadGroupsReplacementScript",
            2970);
          v39 = (const char *)std::string::c_str(v2 + 1504);
          if ( *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)group_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(group_id);
          }
          common::milog::MiLogStream::operator()(
            (common::milog::MiLogStream *const)(v2 + 1696),
            " group=%u replaces[%s]",
            *group_id,
            v39);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1696));
          *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = -117901064;
          std::string::~string((void *)(v2 + 1504));
          *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = -117901064;
          std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 256));
        }
        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
        *(_DWORD *)(((v2 + 1760) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 1760) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1791) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1791) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1760, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 1760),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/lua_config_mgr.cpp",
          "loadGroupsReplacementScript",
          2972);
        common::milog::MiLogStream::operator()(
          (common::milog::MiLogStream *const)(v2 + 1760),
          "group_replaced_by_set_map:");
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1760));
        *(_DWORD *)(((v2 + 1760) >> 3) + 0x7FFF8000) = -117901064;
        __for_range_3 = &this->group_replaced_by_set_map;
        *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 384, "group_replaced_by_set_map:");
        *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::iterator *)(v2 + 384) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::begin(__for_range_3);
        *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 416, "group_replaced_by_set_map:");
        *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::iterator *)(v2 + 416) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::end(__for_range_3);
        while ( 1 )
        {
          v40 = (char *)(v2 + 416);
          if ( !std::__detail::operator!=<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false>(
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 384),
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 416)) )
            break;
          v50 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 384));
          group_id_0 = std::get<0ul,unsigned int const,std::unordered_set<unsigned int>>(v50);
          replace_by_set = (std::tuple_element<1,const std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *)std::get<1ul,unsigned int const,std::unordered_set<unsigned int>>(v50);
          *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = 0;
          std::string::basic_string(v2 + 1824);
          *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v2 + 448, v40);
          *(std::unordered_set<unsigned int>::const_iterator *)(v2 + 448) = std::unordered_set<unsigned int>::begin(replace_by_set);
          *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v2 + 480, v40);
          *(std::unordered_set<unsigned int>::const_iterator *)(v2 + 480) = std::unordered_set<unsigned int>::end(replace_by_set);
          while ( std::__detail::operator!=<unsigned int,false>(
                    (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 448),
                    (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 480)) )
          {
            v41 = std::__detail::_Node_const_iterator<unsigned int,true,false>::operator*((const std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v2 + 448));
            group_0 = v41;
            *(_DWORD *)(((v2 + 1952) >> 3) + 0x7FFF8000) = 0;
            *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v41 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v41);
            }
            v42 = *group_0;
            if ( *(char *)(((v2 + 1888) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1919) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1919) >> 3) + 0x7FFF8000) )
            {
              v42 = 32;
              __asan_report_store_n(v2 + 1888, 32LL);
            }
            common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v2 + 1888), v42);
            if ( *(char *)(((v2 + 1952) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1983) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 1983) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1952, 32LL);
            }
            std::operator+<char>((std::string *)(v2 + 1952), (std::string *)(v2 + 1888), ", ");
            std::string::operator+=(v2 + 1824, v2 + 1952);
            std::string::~string((void *)(v2 + 1952));
            *(_DWORD *)(((v2 + 1952) >> 3) + 0x7FFF8000) = -117901064;
            std::string::~string((void *)(v2 + 1888));
            *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = -117901064;
            std::__detail::_Node_const_iterator<unsigned int,true,false>::operator++((std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v2 + 448));
          }
          *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = -8;
          *(_DWORD *)(((v2 + 2016) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 2016) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 2047) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 2047) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 2016, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 2016),
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/lua_config_mgr.cpp",
            "loadGroupsReplacementScript",
            2980);
          v43 = (const char *)std::string::c_str(v2 + 1824);
          if ( *(_BYTE *)(((unsigned __int64)group_id_0 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)group_id_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_id_0 >> 3)
                                                                         + 0x7FFF8000) )
          {
            __asan_report_load4(group_id_0);
          }
          common::milog::MiLogStream::operator()(
            (common::milog::MiLogStream *const)(v2 + 2016),
            " group=%u replaced_by[%s]",
            *group_id_0,
            v43);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2016));
          *(_DWORD *)(((v2 + 2016) >> 3) + 0x7FFF8000) = -117901064;
          std::string::~string((void *)(v2 + 1824));
          *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = -117901064;
          std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 384));
        }
        *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = -8;
        v5 = ret;
      }
      std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v2 + 544));
    }
    std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v2 + 512));
  }
  std::string::~string((void *)(v2 + 672));
  if ( v60 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF804C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 84) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80FC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862744) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450968 - (((_DWORD)v4 + 2147450976) & 0xFFFFFFF8) + 172) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_6(v2, 2080LL, v60);
  }
  return v5;
};

// Line 2994: range 000000000F306B5A-000000000F308506
int32_t __cdecl LuaConfigMgr::loadGroupVersionInfoConfig(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  int32_t v2; // r14d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  HK4EDesignConfig *v6; // rdi
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  bool v12; // al
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // r14
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  int v18; // r15d
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // r14
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  unsigned __int64 v23; // rax
  const Json::Value *v24; // rax
  int v25; // r15d
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  int v29; // r15d
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rax
  int v37; // r15d
  const std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > > *v38; // rax
  unsigned int *v39; // rcx
  const std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > > *v40; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,std::string >,false,false>,bool> v41; // rax
  common::milog::MiLogStream *v42; // rax
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  common::milog::MiLogStream *v45; // rax
  int v46; // r15d
  int v47; // eax
  unsigned __int64 v48; // rdx
  unsigned __int64 v49; // rdx
  int v50; // edx
  common::milog::MiLogStream *v51; // r14
  std::unordered_map<unsigned int,std::string>::size_type v52; // rax
  common::milog::MiLogStream *v53; // rax
  Json::Value *version_jval_ptr; // [rsp+28h] [rbp-5D8h]
  char v57[1488]; // [rsp+30h] [rbp-5D0h] BYREF

  v3 = (unsigned __int64)v57;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_5(1440LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "24 48 1 9 <unknown> 64 4 13 group_id:3017 80 8 9 <unknown> 112 16 7 it:3008 144 16 9 <unknown> 1"
                        "76 32 14 file_path:2995 240 32 9 <unknown> 304 32 9 <unknown> 368 32 20 version_pattern:3007 432"
                        " 32 17 group_id_str:3011 496 32 9 <unknown> 560 32 9 <unknown> 624 32 9 <unknown> 688 32 9 <unkn"
                        "own> 752 32 9 <unknown> 816 32 16 version_str:3029 880 32 9 <unknown> 944 32 26 pattern_match_re"
                        "sults:3039 1008 32 9 <unknown> 1072 32 9 <unknown> 1136 32 9 <unknown> 1200 40 9 root:3001 1280 "
                        "40 13 key_jval:3010 1360 40 15 value_jval:3023";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::loadGroupVersionInfoConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = 61956;
  v5[536862722] = -234881024;
  v5[536862723] = 62194;
  v5[536862724] = 62194;
  v5[536862725] = 62194;
  v5[536862726] = -219021312;
  v5[536862727] = 62194;
  v5[536862728] = -219021312;
  v5[536862729] = 62194;
  v5[536862730] = -219021312;
  v5[536862731] = 62194;
  v5[536862732] = -219021312;
  v5[536862733] = 62194;
  v5[536862734] = -219021312;
  v5[536862735] = 62194;
  v5[536862736] = -219021312;
  v5[536862737] = 62194;
  v5[536862738] = -219021312;
  v5[536862739] = 62194;
  v5[536862740] = -219021312;
  v5[536862741] = 62194;
  v5[536862742] = -219021312;
  v5[536862743] = 62194;
  v5[536862744] = -219021312;
  v5[536862745] = 62194;
  v5[536862746] = -219021312;
  v5[536862747] = 62194;
  v5[536862748] = -219021312;
  v5[536862749] = 62194;
  v5[536862750] = -219021312;
  v5[536862751] = 62194;
  v5[536862752] = -219021312;
  v5[536862753] = 62194;
  v5[536862754] = -219021312;
  v5[536862755] = 62194;
  v5[536862756] = -219021312;
  v5[536862757] = 62194;
  v5[536862758] = -234881024;
  v5[536862759] = -218959118;
  v5[536862761] = -218959360;
  v5[536862762] = 62194;
  v5[536862763] = -218103808;
  v5[536862764] = -202116109;
  v6 = LuaConfigMgr::getConfig(this);
  if ( *(char *)(((v3 + 176) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v3 + 207) >> 3) + 0x7FFF8000) != 0
    && (char)((v3 - 96 + 47) & 7) >= *(_BYTE *)(((v3 + 207) >> 3) + 0x7FFF8000) )
  {
    v6 = (HK4EDesignConfig *)(v3 + 176);
    __asan_report_store_n(v3 + 176, 32LL);
  }
  std::operator+<char>((std::string *)(v3 + 176), &v6->scene_lua_base_dir, "groups_info.json");
  if ( common::tools::FileUtils::fileExists((const std::string *)(v3 + 176)) )
  {
    if ( *(char *)(((v3 + 240) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 271) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 96 + 111) & 7) >= *(_BYTE *)(((v3 + 271) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 240, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v3 + 240),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadGroupVersionInfoConfig",
      2998);
    v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v3 + 240),
           (const char (*)[16])"[CONFIG_ERROR] ");
    v8 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v7, (const char (*)[19])"json config file: ");
    v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, (const std::string *)(v3 + 176));
    common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v9, (const char (*)[12])" not found!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 240));
    *(_DWORD *)(((v3 + 240) >> 3) + 0x7FFF8000) = -117901064;
    v2 = -1;
  }
  else
  {
    Json::Value::Value(v3 + 1200, 0LL);
    if ( !parseJsonFile((const std::string *)(v3 + 176), (Json::Value *)(v3 + 1200)) )
    {
      if ( *(char *)(((v3 + 304) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 335) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 79) & 7) >= *(_BYTE *)(((v3 + 335) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 304, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 304),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "loadGroupVersionInfoConfig",
        3004);
      v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v3 + 304),
              (const char (*)[16])"[CONFIG_ERROR] ");
      v11 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
              v10,
              (const char (*)[28])"parseJsonFile fails, path: ");
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v11, (const std::string *)(v3 + 176));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 304));
      *(_DWORD *)(((v3 + 304) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
    }
    else
    {
      std::basic_regex<char,std::regex_traits<char>>::basic_regex(
        (std::basic_regex<char,std::regex_traits<char> > *const)(v3 + 368),
        "^\\d+\\.\\d+",
        (std::basic_regex<char,std::regex_traits<char> >::flag_type)16);
      if ( *(_WORD *)(((v3 + 112) >> 3) + 0x7FFF8000) )
        __asan_report_store16();
      Json::Value::begin((Json::Value_0 *const)(v3 + 1200));
      while ( 1 )
      {
        *(_WORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
        if ( *(_WORD *)(((v3 + 144) >> 3) + 0x7FFF8000) )
          __asan_report_store16();
        Json::Value::end((Json::Value_0 *const)(v3 + 1200));
        v12 = Json::ValueIteratorBase::operator!=(
                (const Json::ValueIteratorBase *const)(v3 + 112),
                (const Json::ValueIteratorBase::SelfType *)(v3 + 144));
        *(_WORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = -1800;
        if ( !v12 )
          break;
        v13 = ((v3 + 1280) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_BYTE *)(v13 + 4) = 0;
        if ( *(char *)(((v3 + 1280) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v3 + 1319) >> 3) + 0x7FFF8000) != 0
          && (char)((v3 + 39) & 7) >= *(_BYTE *)(((v3 + 1319) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v3 + 1280, 40LL);
        }
        Json::ValueIteratorBase::key((Json::ValueIteratorBase *)(v3 + 1280));
        *(_DWORD *)(((v3 + 432) >> 3) + 0x7FFF8000) = 0;
        std::string::basic_string(v3 + 432);
        if ( !fromJson<std::string>((const Json::Value *)(v3 + 1280), (std::string *)(v3 + 432)) )
        {
          *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 496) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 527) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 96 + 111) & 7) >= *(_BYTE *)(((v3 + 527) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 496, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 496),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadGroupVersionInfoConfig",
            3014);
          v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v3 + 496),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v15 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
                  v14,
                  (const char (*)[27])"parse group_id_str fails: ");
          *(_DWORD *)(((v3 + 560) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 560) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 591) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 79) & 7) >= *(_BYTE *)(((v3 + 591) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 560, 32LL);
          }
          Json::Value::asString[abi:cxx11]((Json::String *)(v3 + 560), (Json::Value_0 *)(v3 + 1280));
          v16 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                  v15,
                  (const std::string *)(v3 + 560));
          v17 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v16, (const char (*)[7])" file:");
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, (const std::string *)(v3 + 176));
          std::string::~string((void *)(v3 + 560));
          *(_DWORD *)(((v3 + 560) >> 3) + 0x7FFF8000) = -117901064;
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 496));
          *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v18 = 0;
        }
        else
        {
          *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
          if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_store4(v3 + 64, v3 + 432);
          *(_DWORD *)(v3 + 64) = 0;
          if ( common::tools::StringUtils::strToNum<unsigned int>(
                 (const std::string *)(v3 + 432),
                 (unsigned int *)(v3 + 64),
                 1) )
          {
            *(_DWORD *)(((v3 + 624) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 624) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 655) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 113) & 7) >= *(_BYTE *)(((v3 + 655) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 624, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 624),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "loadGroupVersionInfoConfig",
              3020);
            v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 624),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v20 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
                    v19,
                    (const char (*)[23])"parse group_id fails: ");
            *(_DWORD *)(((v3 + 688) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 688) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 719) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 96 + 47) & 7) >= *(_BYTE *)(((v3 + 719) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 688, 32LL);
            }
            Json::Value::asString[abi:cxx11]((Json::String *)(v3 + 688), (Json::Value_0 *)(v3 + 1280));
            v21 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                    v20,
                    (const std::string *)(v3 + 688));
            v22 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v21, (const char (*)[7])" file:");
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, (const std::string *)(v3 + 176));
            std::string::~string((void *)(v3 + 688));
            *(_DWORD *)(((v3 + 688) >> 3) + 0x7FFF8000) = -117901064;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 624));
            *(_DWORD *)(((v3 + 624) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            v18 = 0;
          }
          else
          {
            v23 = ((v3 + 1360) >> 3) + 2147450880;
            *(_DWORD *)v23 = 0;
            *(_BYTE *)(v23 + 4) = 0;
            v24 = Json::ValueIterator::operator*((Json::ValueIterator *const)(v3 + 112));
            Json::Value::Value((Json::Value *)(v3 + 1360), v24);
            *(_DWORD *)(((v3 + 752) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v3 + 48);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v3 + 752),
              "version",
              (const std::allocator<char> *)(v3 + 48));
            version_jval_ptr = jsonValueFind((Json::Value *)(v3 + 1360), (const std::string *)(v3 + 752));
            std::string::~string((void *)(v3 + 752));
            *(_DWORD *)(((v3 + 752) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v3 + 48);
            *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
            if ( version_jval_ptr )
            {
              *(_DWORD *)(((v3 + 816) >> 3) + 0x7FFF8000) = 0;
              std::string::basic_string(v3 + 816);
              if ( !fromJson<std::string>(version_jval_ptr, (std::string *)(v3 + 816)) )
              {
                *(_DWORD *)(((v3 + 880) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v3 + 880) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v3 + 911) >> 3) + 0x7FFF8000) != 0
                  && (char)((v3 - 113) & 7) >= *(_BYTE *)(((v3 + 911) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v3 + 880, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v3 + 880),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "loadGroupVersionInfoConfig",
                  3032);
                v26 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                        (common::milog::MiLogStream *const)(v3 + 880),
                        (const char (*)[28])"get version fail, group_id:");
                v27 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v26,
                        (const unsigned int *)(v3 + 64));
                v28 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v27, (const char (*)[7])" file:");
                common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                  v28,
                  (const std::string *)(v3 + 176));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 880));
                *(_DWORD *)(((v3 + 880) >> 3) + 0x7FFF8000) = -117901064;
                v2 = -1;
                v29 = 0;
              }
              else if ( (unsigned __int8)std::string::empty(v3 + 816) )
              {
                v29 = 1;
              }
              else
              {
                *(_DWORD *)(((v3 + 944) >> 3) + 0x7FFF8000) = 0;
                std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::match_results((std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v3 + 944));
                if ( !std::regex_search<std::char_traits<char>,std::allocator<char>,std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string>>>,char,std::regex_traits<char>>(
                        (const std::string *)(v3 + 816),
                        (std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *)(v3 + 944),
                        (const std::basic_regex<char,std::regex_traits<char> > *)(v3 + 368),
                        (std::regex_constants::match_flag_type)0)
                  || std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::empty((const std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v3 + 944)) )
                {
                  *(_DWORD *)(((v3 + 1008) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v3 + 1008) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v3 + 1039) >> 3) + 0x7FFF8000) != 0
                    && (char)((v3 - 96 + 111) & 7) >= *(_BYTE *)(((v3 + 1039) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v3 + 1008, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v3 + 1008),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "loadGroupVersionInfoConfig",
                    3042);
                  v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v3 + 1008),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  v32 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                          v31,
                          (const char (*)[17])"invalid version:");
                  v33 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                          v32,
                          (const std::string *)(v3 + 816));
                  v34 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                          v33,
                          (const char (*)[14])" in group_id:");
                  v35 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v34,
                          (const unsigned int *)(v3 + 64));
                  v36 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v35, (const char (*)[7])" file:");
                  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                    v36,
                    (const std::string *)(v3 + 176));
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1008));
                  *(_DWORD *)(((v3 + 1008) >> 3) + 0x7FFF8000) = -117901064;
                  v2 = -1;
                  v37 = 0;
                }
                else
                {
                  v38 = std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::operator[](
                          (const std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v3 + 944),
                          0LL);
                  v41 = std::unordered_map<unsigned int,std::string>::emplace<unsigned int &,std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string>> const&>(
                          &this->group_version_map,
                          (unsigned int *)(v3 + 64),
                          v38,
                          v39,
                          v40);
                  if ( !v41.second )
                  {
                    *(_DWORD *)(((v3 + 1072) >> 3) + 0x7FFF8000) = 0;
                    if ( *(char *)(((v3 + 1072) >> 3) + 0x7FFF8000) < 0
                      || *(_BYTE *)(((v3 + 1103) >> 3) + 0x7FFF8000) != 0
                      && (char)((v3 + 79) & 7) >= *(_BYTE *)(((v3 + 1103) >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_store_n(v3 + 1072, 32LL);
                    }
                    common::milog::MiLogStream::create(
                      (common::milog::MiLogStream *)(v3 + 1072),
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/lua_config_mgr.cpp",
                      "loadGroupVersionInfoConfig",
                      3047);
                    v42 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                            (common::milog::MiLogStream *const)(v3 + 1072),
                            (const char (*)[16])"[CONFIG_ERROR] ");
                    v43 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                            v42,
                            (const char (*)[20])"duplicate group_id:");
                    v44 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v43,
                            (const unsigned int *)(v3 + 64));
                    v45 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(
                            v44,
                            (const char (*)[7])" file:");
                    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                      v45,
                      (const std::string *)(v3 + 176));
                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1072));
                    *(_DWORD *)(((v3 + 1072) >> 3) + 0x7FFF8000) = -117901064;
                    v2 = -1;
                    v37 = 0;
                  }
                  else
                  {
                    v37 = 1;
                  }
                }
                std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::~match_results((std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v3 + 944));
                if ( v37 == 1 )
                  v29 = 2;
                else
                  v29 = 0;
              }
              std::string::~string((void *)(v3 + 816));
              if ( v29 )
              {
                if ( v29 == 2 )
                  v25 = 2;
                else
                  v25 = 0;
              }
              else
              {
                v25 = 1;
              }
            }
            else
            {
              v25 = 0;
            }
            Json::Value::~Value((Json::Value_0 *const)(v3 + 1360));
            if ( v25 )
            {
              if ( v25 == 2 )
                v18 = 2;
              else
                v18 = 0;
            }
            else
            {
              v18 = 1;
            }
          }
        }
        std::string::~string((void *)(v3 + 432));
        if ( v18 )
        {
          if ( v18 == 2 )
            v46 = 2;
          else
            v46 = 1;
        }
        else
        {
          v46 = 0;
        }
        Json::Value::~Value((Json::Value_0 *const)(v3 + 1280));
        if ( v46 )
        {
          if ( v46 == 2 )
            v47 = 2;
          else
            v47 = 1;
        }
        else
        {
          v47 = 0;
        }
        v48 = ((v3 + 1280) >> 3) + 2147450880;
        *(_DWORD *)v48 = -117901064;
        *(_BYTE *)(v48 + 4) = -8;
        *(_DWORD *)(((v3 + 432) >> 3) + 0x7FFF8000) = -117901064;
        *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
        v49 = ((v3 + 1360) >> 3) + 2147450880;
        *(_DWORD *)v49 = -117901064;
        *(_BYTE *)(v49 + 4) = -8;
        *(_DWORD *)(((v3 + 816) >> 3) + 0x7FFF8000) = -117901064;
        *(_DWORD *)(((v3 + 944) >> 3) + 0x7FFF8000) = -117901064;
        if ( !v47 )
        {
          v50 = 0;
          goto LABEL_84;
        }
        Json::ValueIterator::operator++((Json::ValueIterator *const)(v3 + 112));
      }
      v50 = 1;
LABEL_84:
      *(_WORD *)(((v3 + 112) >> 3) + 0x7FFF8000) = -1800;
      if ( v50 == 1 )
      {
        *(_DWORD *)(((v3 + 1136) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v3 + 1136) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v3 + 1167) >> 3) + 0x7FFF8000) != 0
          && (char)((v3 - 113) & 7) >= *(_BYTE *)(((v3 + 1167) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v3 + 1136, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 1136),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/lua_config_mgr.cpp",
          "loadGroupVersionInfoConfig",
          3051);
        v51 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(
                (common::milog::MiLogStream *const)(v3 + 1136),
                (const char (*)[6])"load ");
        *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 0;
        v52 = std::unordered_map<unsigned int,std::string>::size(&this->group_version_map);
        if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
          v52 = __asan_report_store8(v3 + 80, "load ");
        *(_QWORD *)(v3 + 80) = v52;
        v53 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                v51,
                (const unsigned __int64 *)(v3 + 80));
        common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
          v53,
          (const char (*)[43])" version-only groups from groups_info.json");
        *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1136));
        *(_DWORD *)(((v3 + 1136) >> 3) + 0x7FFF8000) = -117901064;
        v2 = 0;
      }
      std::basic_regex<char,std::regex_traits<char>>::~basic_regex((std::basic_regex<char,std::regex_traits<char> > *const)(v3 + 368));
    }
    Json::Value::~Value((Json::Value_0 *const)(v3 + 1200));
  }
  std::string::~string((void *)(v3 + 176));
  if ( v57 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF80AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 180) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_5(v3, 1440LL, v57);
  }
  return v2;
};

// Line 3057: range 000000000F308508-000000000F3088C7
__int64 __fastcall LuaConfigMgr::loadEntityApplyLogicState(
        LuaConfigMgr *const this,
        GroupScriptConfig *group_script_config,
        uint32_t config_id,
        const std::vector<std::string> *apply_logic_state_vec)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  std::set<std::string> *v7; // rax
  std::pair<std::_Rb_tree_const_iterator<std::string >,bool> v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  __int64 result; // rax
  unsigned int ret; // [rsp+2Ch] [rbp-F4h]
  __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> >::reference logic_state; // [rsp+38h] [rbp-E8h]
  char v20[224]; // [rsp+40h] [rbp-E0h] BYREF

  v4 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_2(192LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "4 48 4 14 config_id:3056 64 8 16 __for_begin:3059 96 8 14 __for_end:3059 128 32 9 <unknown>";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::loadEntityApplyLogicState;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -218959360;
  v6[536862723] = -218959360;
  v6[536862725] = -202116109;
  *(_DWORD *)(v4 + 48) = config_id;
  ret = 0;
  if ( *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v4 + 64, group_script_config);
  *(std::vector<std::string>::const_iterator *)(v4 + 64) = std::vector<std::string>::begin(apply_logic_state_vec);
  if ( *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v4 + 96, group_script_config);
  *(std::vector<std::string>::const_iterator *)(v4 + 96) = std::vector<std::string>::end(apply_logic_state_vec);
  while ( __gnu_cxx::operator!=<std::string const*,std::vector<std::string>>(
            (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v4 + 64),
            (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v4 + 96)) )
  {
    logic_state = __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator*((const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v4 + 64));
    v7 = std::unordered_map<unsigned int,std::set<std::string>>::operator[](
           &group_script_config->entity_apply_logic_state_set_map,
           (const std::unordered_map<unsigned int,std::set<std::string>>::key_type *)(v4 + 48));
    v8 = std::set<std::string>::emplace<std::string const&>(v7, logic_state, (const std::string *)v7);
    if ( !v8.second )
    {
      *(_DWORD *)(((v4 + 128) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v4 + 128) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 159) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 97) & 7) >= *(_BYTE *)(((v4 + 159) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 128, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 128),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "loadEntityApplyLogicState",
        3063);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v4 + 128),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v10 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
              v9,
              (const char (*)[23])"duplicate logic_state:");
      v11 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v10, logic_state);
      v12 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v11, (const char (*)[12])" config_id:");
      v13 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)(v4 + 48));
      v14 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v13, (const char (*)[11])" group_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &group_script_config->group_id);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 128));
      *(_DWORD *)(((v4 + 128) >> 3) + 0x7FFF8000) = -117901064;
      ret = -1;
    }
    __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator++((__gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v4 + 64));
  }
  result = ret;
  if ( v20 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3071: range 000000000F3088C8-000000000F308A98
std::string *__fastcall LuaConfigMgr::findGroupVersionInGroupsInfo[abi:cxx11](
        std::string *retstr,
        const LuaConfigMgr *const this,
        uint32_t group_id)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::unordered_map<unsigned int,std::string> *p_group_version_map; // rsi
  char v9[160]; // [rsp+20h] [rbp-A0h] BYREF

  v3 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 13 group_id:3070 64 32 9 <unknown>";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::findGroupVersionInGroupsInfo[abi:cxx11];
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862723] = -202116109;
  *(_DWORD *)(v3 + 48) = group_id;
  std::string::basic_string(v3 + 64);
  p_group_version_map = &this->group_version_map;
  if ( *(char *)(((unsigned __int64)retstr >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)((((unsigned __int64)&retstr->_anon_0._M_allocated_capacity + 15) >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)retstr + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&retstr->_anon_0._M_allocated_capacity + 15) >> 3)
                                                        + 0x7FFF8000) )
  {
    p_group_version_map = (std::unordered_map<unsigned int,std::string> *)32;
    __asan_report_store_n(retstr, 32LL);
  }
  common::tools::MiscUtils::findMapWithDefaultValue<std::unordered_map<unsigned int,std::string>>(
    retstr,
    p_group_version_map,
    (const std::unordered_map<unsigned int,std::string>::key_type *)(v3 + 48),
    (std::unordered_map<unsigned int,std::string>::mapped_type *)(v3 + 64));
  std::string::~string((void *)(v3 + 64));
  if ( v9 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return retstr;
};

// Line 3076: range 000000000F308A9A-000000000F308CD0
const std::unordered_map<unsigned int,std::vector<unsigned int>> *__fastcall LuaConfigMgr::findDynamicGroupMapByDetailType(
        const LuaConfigMgr *const this,
        uint32_t type,
        uint32_t sub_type)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>> > > > *p_detail_type_dynamic_group_map; // rdx
  bool v7; // al
  const std::unordered_map<unsigned int,std::vector<unsigned int>> *result; // rax
  char v10[208]; // [rsp+10h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "5 32 4 9 type:3075 48 4 13 sub_type:3075 64 8 9 iter:3077 96 8 9 <unknown> 128 8 9 <unknown>";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::findDynamicGroupMapByDetailType;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556924;
  v5[536862722] = -218959360;
  v5[536862723] = -218959360;
  v5[536862724] = -202116352;
  *(_DWORD *)(v3 + 32) = type;
  *(_DWORD *)(v3 + 48) = sub_type;
  std::pair<unsigned int,unsigned int>::pair<unsigned int &,unsigned int &,true>(
    (std::pair<unsigned int,unsigned int> *const)(v3 + 96),
    (unsigned int *)(v3 + 32),
    (unsigned int *)(v3 + 48));
  if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 64, v3 + 32);
  *(std::unordered_map<std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>> > > >::const_iterator *)(v3 + 64) = std::unordered_map<std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::unordered_map<unsigned int,std::vector<unsigned int>>>>>::find(&this->detail_type_dynamic_group_map, (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>> > > >::key_type *)(v3 + 96));
  *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = 0;
  p_detail_type_dynamic_group_map = &this->detail_type_dynamic_group_map;
  if ( *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 128, v3 + 96);
  *(std::unordered_map<std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>> > > >::const_iterator *)(v3 + 128) = std::unordered_map<std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::unordered_map<unsigned int,std::vector<unsigned int>>>>>::end(p_detail_type_dynamic_group_map);
  v7 = std::__detail::operator!=<std::pair<std::pair const<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>>,true>(
         (const std::__detail::_Node_iterator_base<std::pair<const std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>> >,true> *)(v3 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<const std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>> >,true> *)(v3 + 128));
  *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>>>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,std::unordered_map<unsigned int,std::vector<unsigned int>> >,false,true> *const)(v3 + 64))->second;
  else
    result = 0LL;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 3086: range 000000000F308CD2-000000000F308EEF
const std::unordered_set<unsigned int> *__fastcall LuaConfigMgr::getGroupIdSetByRegisterEventType(
        const LuaConfigMgr *const this,
        const std::unordered_set<unsigned int> *event_type)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<data::EventType,std::unordered_set<unsigned int>> *p_register_event_type_group_id_set_map; // rdx
  std::unordered_map<data::EventType,std::unordered_set<unsigned int>> *v6; // rdx
  bool v7; // al
  const std::unordered_set<unsigned int> *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 15 event_type:3085 64 8 9 iter:3088 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::getGroupIdSetByRegisterEventType;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = (_DWORD)event_type;
  if ( !(_BYTE)`guard variable for'LuaConfigMgr::getGroupIdSetByRegisterEventType(data::EventType)::empty_set
    && __cxa_guard_acquire(&`guard variable for'LuaConfigMgr::getGroupIdSetByRegisterEventType(data::EventType)::empty_set) )
  {
    std::unordered_set<unsigned int>::unordered_set((std::unordered_set<unsigned int> *const)&LuaConfigMgr::getGroupIdSetByRegisterEventType(data::EventType)const::empty_set);
    __cxa_guard_release(&`guard variable for'LuaConfigMgr::getGroupIdSetByRegisterEventType(data::EventType)::empty_set);
    event_type = &LuaConfigMgr::getGroupIdSetByRegisterEventType(data::EventType)const::empty_set;
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_set<unsigned int>::~unordered_set,
      (void *)&LuaConfigMgr::getGroupIdSetByRegisterEventType(data::EventType)const::empty_set,
      &_dso_handle);
  }
  p_register_event_type_group_id_set_map = &this->register_event_type_group_id_set_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, event_type);
  *(std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::find(p_register_event_type_group_id_set_map, (const std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::key_type *)(v2 + 48));
  v6 = &this->register_event_type_group_id_set_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 96) = std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::end(v6);
  v7 = std::__detail::operator!=<std::pair<data::EventType const,std::unordered_set<unsigned int>>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<data::EventType const,std::unordered_set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 64))->second;
  else
    result = &LuaConfigMgr::getGroupIdSetByRegisterEventType(data::EventType)const::empty_set;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3097: range 000000000F308EF0-000000000F30910D
const std::unordered_set<unsigned int> *__fastcall LuaConfigMgr::getEventChainLevelChangeGroupSet(
        const LuaConfigMgr *const this,
        const std::unordered_set<unsigned int> *chain_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *p_gadget_chain_event_chain_to_groupset_map; // rdx
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *v6; // rdx
  bool v7; // al
  const std::unordered_set<unsigned int> *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 chain_id:3096 64 8 22 group_id_set_iter:3099 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::getEventChainLevelChangeGroupSet;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = (_DWORD)chain_id;
  if ( !(_BYTE)`guard variable for'LuaConfigMgr::getEventChainLevelChangeGroupSet(unsigned int)::empty_set
    && __cxa_guard_acquire(&`guard variable for'LuaConfigMgr::getEventChainLevelChangeGroupSet(unsigned int)::empty_set) )
  {
    std::unordered_set<unsigned int>::unordered_set((std::unordered_set<unsigned int> *const)&LuaConfigMgr::getEventChainLevelChangeGroupSet(unsigned int)const::empty_set);
    __cxa_guard_release(&`guard variable for'LuaConfigMgr::getEventChainLevelChangeGroupSet(unsigned int)::empty_set);
    chain_id = &LuaConfigMgr::getEventChainLevelChangeGroupSet(unsigned int)const::empty_set;
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_set<unsigned int>::~unordered_set,
      (void *)&LuaConfigMgr::getEventChainLevelChangeGroupSet(unsigned int)const::empty_set,
      &_dso_handle);
  }
  p_gadget_chain_event_chain_to_groupset_map = &this->gadget_chain_event_chain_to_groupset_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, chain_id);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::find(p_gadget_chain_event_chain_to_groupset_map, (const std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::key_type *)(v2 + 48));
  v6 = &this->gadget_chain_event_chain_to_groupset_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 64))->second;
  else
    result = &LuaConfigMgr::getEventChainLevelChangeGroupSet(unsigned int)const::empty_set;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3109: range 000000000F30910E-000000000F309E77
int32_t __cdecl LuaConfigMgr::loadDummyPointScriptConfig(
        LuaConfigMgr *const this,
        const std::string *dummy_point_script_path,
        SceneScriptConfig *scene_script_config)
{
  int32_t v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  __int64 v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rdx
  common::milog::MiLogStream *v10; // rdx
  common::milog::MiLogStream *v11; // rax
  unsigned __int64 v12; // rax
  char *v13; // rsi
  common::milog::MiLogStream *v14; // rdx
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rdx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rdx
  int v20; // edx
  const char (*v22)[4]; // [rsp+0h] [rbp-5B0h]
  LuaScript *v23; // [rsp+10h] [rbp-5A0h]
  bool v24; // [rsp+10h] [rbp-5A0h]
  std::map<std::string,luabind::adl::object> *__for_range; // [rsp+38h] [rbp-578h]
  std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> >::reference v28; // [rsp+40h] [rbp-570h]
  std::tuple_element<0,std::pair<const std::string,luabind::adl::object> >::type *name; // [rsp+48h] [rbp-568h]
  std::tuple_element<1,const std::pair<const std::string,luabind::adl::object> >::type *lua_obj; // [rsp+50h] [rbp-560h]
  DummyPointScriptConfig *dummy_point_config; // [rsp+58h] [rbp-558h]
  char v32[1360]; // [rsp+60h] [rbp-550h] BYREF

  v4 = (unsigned __int64)v32;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_5(1312LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "14 32 1 9 <unknown> 48 1 9 <unknown> 64 8 16 __for_begin:3138 96 8 14 __for_end:3138 128 16 15 s"
                        "cript_ptr:3116 160 16 28 dummy_points_config_obj:3123 192 32 9 <unknown> 256 32 9 <unknown> 320 "
                        "32 9 <unknown> 384 32 9 <unknown> 448 32 9 <unknown> 512 32 9 <unknown> 576 48 16 lua_obj_map:31"
                        "31 656 520 6 f:3110";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::loadDummyPointScriptConfig;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234753535;
  v6[536862722] = -218959360;
  v6[536862723] = -218959360;
  v6[536862724] = -219021312;
  v6[536862725] = -219021312;
  v6[536862727] = -218959118;
  v6[536862729] = -218959118;
  v6[536862731] = -218959118;
  v6[536862733] = -218959118;
  v6[536862735] = -218959118;
  v6[536862737] = -218959118;
  v6[536862739] = -219021312;
  v6[536862740] = 62194;
  v6[536862756] = -218103808;
  v6[536862757] = -202116109;
  v6[536862758] = -202116109;
  v6[536862759] = -202116109;
  v6[536862760] = -202116109;
  v7 = std::string::c_str(dummy_point_script_path);
  std::ifstream::basic_ifstream(v4 + 656, v7, 8LL);
  if ( (unsigned __int8)std::ios::good(v4 + 912) != 1 )
  {
    v3 = 0;
  }
  else
  {
    if ( *(_WORD *)(((v4 + 128) >> 3) + 0x7FFF8000) )
      __asan_report_store16();
    LuaScriptMgr::createFromFilePath((const std::string *)(v4 + 128), (const LuaConfigMgr *)dummy_point_script_path);
    if ( std::operator==<LuaScript>((const std::shared_ptr<LuaScript> *)(v4 + 128), 0LL) )
    {
      if ( *(char *)(((v4 + 192) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 64 + 31) & 7) >= *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 192, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 192),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "loadDummyPointScriptConfig",
        3119);
      v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v4 + 192),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v9 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
             v8,
             (const char (*)[26])"script_ptr is null, path:");
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v9, dummy_point_script_path);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 192));
      *(_DWORD *)(((v4 + 192) >> 3) + 0x7FFF8000) = -117901064;
      v3 = -1;
    }
    else
    {
      luabind::adl::object::object((luabind::adl::object *const)(v4 + 160));
      v23 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128));
      std::allocator<char>::allocator(v4 + 32);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v4 + 256),
        "dummy_points",
        (const std::allocator<char> *)(v4 + 32));
      LOBYTE(v23) = LuaScript::getGlobalVariable(
                      v23,
                      (const std::string *)(v4 + 256),
                      (luabind::adl::object *)(v4 + 160)) != 0;
      std::string::~string((void *)(v4 + 256));
      *(_DWORD *)(((v4 + 256) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v4 + 32);
      *(_BYTE *)(((v4 + 32) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v23 )
      {
        *(_DWORD *)(((v4 + 320) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v4 + 320) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v4 + 351) >> 3) + 0x7FFF8000) != 0
          && (char)((v4 + 95) & 7) >= *(_BYTE *)(((v4 + 351) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v4 + 320, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v4 + 320),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "loadDummyPointScriptConfig",
          3127);
        v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v4 + 320),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v11 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v10, dummy_point_script_path);
        common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(v11, (const char (*)[69])byte_1A5405E0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 320));
        *(_DWORD *)(((v4 + 320) >> 3) + 0x7FFF8000) = -117901064;
        v3 = -1;
      }
      else
      {
        v12 = ((v4 + 576) >> 3) + 2147450880;
        *(_DWORD *)v12 = 0;
        *(_WORD *)(v12 + 4) = 0;
        std::map<std::string,luabind::adl::object>::map((std::map<std::string,luabind::adl::object> *const)(v4 + 576));
        v13 = (char *)(v4 + 160);
        if ( ScriptUtil::getTableValueAsMap<std::string,luabind::adl::object>(
               &ScriptUtil::no_exception_instance,
               (const luabind::adl::object *)(v4 + 160),
               (std::map<std::string,luabind::adl::object> *)(v4 + 576)) )
        {
          *(_DWORD *)(((v4 + 384) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v4 + 384) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v4 + 415) >> 3) + 0x7FFF8000) != 0
            && (char)((v4 - 97) & 7) >= *(_BYTE *)(((v4 + 415) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v4 + 384, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v4 + 384),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadDummyPointScriptConfig",
            3134);
          v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v4 + 384),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v15 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v14, dummy_point_script_path);
          common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(v15, (const char (*)[69])byte_1A5405E0);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 384));
          *(_DWORD *)(((v4 + 384) >> 3) + 0x7FFF8000) = -117901064;
          v3 = -1;
        }
        else
        {
          __for_range = (std::map<std::string,luabind::adl::object> *)(v4 + 576);
          *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v4 + 64, v13);
          *(std::map<std::string,luabind::adl::object>::iterator *)(v4 + 64) = std::map<std::string,luabind::adl::object>::begin(__for_range);
          *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v4 + 96, v13);
          *(std::map<std::string,luabind::adl::object>::iterator *)(v4 + 96) = std::map<std::string,luabind::adl::object>::end(__for_range);
          while ( 1 )
          {
            if ( !std::operator!=(
                    (const std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> >::_Self *)(v4 + 64),
                    (const std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> >::_Self *)(v4 + 96)) )
            {
              v20 = 1;
              goto LABEL_32;
            }
            v28 = std::_Rb_tree_iterator<std::pair<std::string const,luabind::adl::object>>::operator*((const std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> > *const)(v4 + 64));
            name = std::get<0ul,std::string const,luabind::adl::object>(v28);
            lua_obj = (std::tuple_element<1,const std::pair<const std::string,luabind::adl::object> >::type *)std::get<1ul,std::string const,luabind::adl::object>(v28);
            dummy_point_config = std::unordered_map<std::string,DummyPointScriptConfig>::operator[](
                                   &scene_script_config->dummy_point_config_map,
                                   name);
            *(_DWORD *)(((v4 + 448) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v4 + 48);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v4 + 448),
              off_1A536440,
              (const std::allocator<char> *)(v4 + 48));
            v24 = ScriptUtil::getTableValue<Vector3,char const(&)[4],Vector3&>(
                    &ScriptUtil::no_exception_instance,
                    lua_obj,
                    (const std::string *)(v4 + 448),
                    &dummy_point_config->pos,
                    (const char (*)[4])off_1A536400,
                    &dummy_point_config->rot,
                    v22,
                    &dummy_point_config->pos) != 0;
            std::string::~string((void *)(v4 + 448));
            *(_DWORD *)(((v4 + 448) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v4 + 48);
            *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) = -8;
            if ( v24 )
              break;
            std::_Rb_tree_iterator<std::pair<std::string const,luabind::adl::object>>::operator++((std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> > *const)(v4 + 64));
          }
          *(_DWORD *)(((v4 + 512) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v4 + 512) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v4 + 543) >> 3) + 0x7FFF8000) != 0
            && (char)((v4 + 31) & 7) >= *(_BYTE *)(((v4 + 543) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v4 + 512, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v4 + 512),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadDummyPointScriptConfig",
            3143);
          v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v4 + 512),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v17 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
                  v16,
                  (const char (*)[55])"SCRIPT_UTIL.getTableValue dummy_point_obj fails, name:");
          v18 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, name);
          v19 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v18, (const char (*)[7])" path:");
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v19, dummy_point_script_path);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 512));
          *(_DWORD *)(((v4 + 512) >> 3) + 0x7FFF8000) = -117901064;
          v3 = -1;
          v20 = 0;
LABEL_32:
          *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) = -8;
          if ( v20 == 1 )
            v3 = 0;
        }
        std::map<std::string,luabind::adl::object>::~map((std::map<std::string,luabind::adl::object> *const)(v4 + 576));
      }
      luabind::adl::object::~object((luabind::adl::object *const)(v4 + 160));
    }
    std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v4 + 128));
  }
  std::ifstream::~ifstream(v4 + 656);
  if ( v32 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF804C) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8090) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8098) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF80A0) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    __asan_stack_free_5(v4, 1312LL, v32);
  }
  return v3;
};

// Line 3153: range 000000000F309E78-000000000F30A9E6
int32_t __cdecl LuaConfigMgr::loadAllGadgetScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 p_server_script; // rsi
  std::string *p_gadget_lua_base_dir; // rsi
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  _DWORD *v9; // rax
  LuaScript *v10; // rax
  LuaContent *v11; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,LuaContent>,false,false>,bool> v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rdx
  _DWORD *v15; // rax
  int32_t ret; // [rsp+14h] [rbp-37Ch]
  data::GadgetExcelConfigMap *__for_range; // [rsp+20h] [rbp-370h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,data::GadgetExcelConfig>,false,false>::reference __in; // [rsp+28h] [rbp-368h]
  const unsigned int *gadget_id; // [rsp+30h] [rbp-360h]
  std::tuple_element<1,std::pair<unsigned int const,data::GadgetExcelConfig> >::type *gadget_config; // [rsp+38h] [rbp-358h]
  char v23[848]; // [rsp+40h] [rbp-350h] BYREF

  v2 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(800LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "11 48 1 9 <unknown> 64 8 16 __for_begin:3156 96 8 14 __for_end:3156 128 16 15 script_ptr:3164 16"
                        "0 32 18 server_script:3158 224 32 9 <unknown> 288 32 16 script_path:3163 352 32 9 <unknown> 416 "
                        "32 9 <unknown> 480 32 9 <unknown> 544 192 12 content:3171";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::loadAllGadgetScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -219021312;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862743] = -202116109;
  v4[536862744] = -202116109;
  ret = 0;
  __for_range = &config->txt_config_mgr.gadget_config_mgr.gadget_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, config);
  *(std::unordered_map<unsigned int,data::GadgetExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::GadgetExcelConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, config);
  *(std::unordered_map<unsigned int,data::GadgetExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::GadgetExcelConfig>::end(__for_range);
  while ( std::__detail::operator!=<std::pair<unsigned int const,data::GadgetExcelConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::GadgetExcelConfig>,false> *)(v2 + 64),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::GadgetExcelConfig>,false> *)(v2 + 96)) )
  {
    __in = std::__detail::_Node_iterator<std::pair<unsigned int const,data::GadgetExcelConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::GadgetExcelConfig>,false,false> *const)(v2 + 64));
    gadget_id = std::get<0ul,unsigned int const,data::GadgetExcelConfig>(__in);
    gadget_config = std::get<1ul,unsigned int const,data::GadgetExcelConfig>(__in);
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      off_1A537D00,
      (const std::allocator<char> *)(v2 + 48));
    p_server_script = (__int64)&gadget_config->server_script;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      p_server_script = 32LL;
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::tools::StringUtils::trim(
      (std::string *)(v2 + 160),
      (const std::string *)p_server_script,
      (const std::string *)(v2 + 224),
      1);
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( !(unsigned __int8)std::string::empty(v2 + 160) )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      p_gadget_lua_base_dir = &config->gadget_lua_base_dir;
      if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
      {
        p_gadget_lua_base_dir = (std::string *)32;
        __asan_report_store_n(v2 + 352, 32LL);
      }
      std::operator+<char>((std::string *)(v2 + 352), p_gadget_lua_base_dir, (const std::string *)(v2 + 160));
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      std::operator+<char>((std::string *)(v2 + 288), (std::string *)(v2 + 352), ".lua");
      std::string::~string((void *)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      *(_WORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
      if ( *(_WORD *)(((v2 + 128) >> 3) + 0x7FFF8000) )
        __asan_report_store16();
      LuaScriptMgr::createFromFilePath((const std::string *)(v2 + 128), (const LuaConfigMgr *)(v2 + 288));
      if ( std::operator==<LuaScript>((const std::shared_ptr<LuaScript> *)(v2 + 128), 0LL) )
      {
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 416, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 416),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "loadAllGadgetScript",
          3167);
        v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
               (common::milog::MiLogStream *const)(v2 + 416),
               (const char (*)[16])"[CONFIG_ERROR] ");
        v8 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
               v7,
               (const char (*)[33])"gadget script_ptr is null, path:");
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, (const std::string *)(v2 + 288));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
        ret = -1;
      }
      else
      {
        v9 = (_DWORD *)(((v2 + 544) >> 3) + 2147450880);
        *v9 = 0;
        v9[1] = 0;
        v9[2] = 0;
        v9[3] = 0;
        v9[4] = 0;
        v9[5] = 0;
        LuaContent::LuaContent((LuaContent *const)(v2 + 544));
        v10 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 128));
        LuaScript::copyContent(v10, (LuaContent *)(v2 + 544));
        v12 = std::unordered_map<unsigned int,LuaContent>::emplace<unsigned int const&,LuaContent&>(
                &this->gadget_script_map,
                gadget_id,
                (LuaContent *)(v2 + 544),
                (const unsigned int *)&this->gadget_script_map,
                v11);
        if ( !v12.second )
        {
          *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 480) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 480, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 480),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadAllGadgetScript",
            3175);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 480),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v14 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                  v13,
                  (const char (*)[21])"duplicate gadget_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, gadget_id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 480));
          *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
          ret = -1;
        }
        LuaContent::~LuaContent((LuaContent *const)(v2 + 544));
      }
      std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v2 + 128));
      std::string::~string((void *)(v2 + 288));
    }
    std::string::~string((void *)(v2 + 160));
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
    *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
    *(_WORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = -1800;
    v15 = (_DWORD *)(((v2 + 544) >> 3) + 2147450880);
    *v15 = -117901064;
    v15[1] = -117901064;
    v15[2] = -117901064;
    v15[3] = -117901064;
    v15[4] = -117901064;
    v15[5] = -117901064;
    std::__detail::_Node_iterator<std::pair<unsigned int const,data::GadgetExcelConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,data::GadgetExcelConfig>,false,false> *const)(v2 + 64));
  }
  if ( v23 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF805C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 100) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8060) = -168430091;
  }
  return ret;
};

// Line 3184: range 000000000F30A9E8-000000000F30B556
int32_t __cdecl LuaConfigMgr::loadAllMonsterScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 p_server_script; // rsi
  std::string *p_monster_lua_base_dir; // rsi
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  _DWORD *v9; // rax
  LuaScript *v10; // rax
  LuaContent *v11; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,LuaContent>,false,false>,bool> v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rdx
  _DWORD *v15; // rax
  int32_t ret; // [rsp+14h] [rbp-37Ch]
  data::MonsterExcelConfigMap *__for_range; // [rsp+20h] [rbp-370h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MonsterExcelConfig>,false,false>::reference v20; // [rsp+28h] [rbp-368h]
  std::tuple_element<0,std::pair<unsigned int const,data::MonsterExcelConfig> >::type *monster_id; // [rsp+30h] [rbp-360h]
  std::tuple_element<1,const std::pair<unsigned int const,data::MonsterExcelConfig> >::type *monster_config; // [rsp+38h] [rbp-358h]
  char v23[848]; // [rsp+40h] [rbp-350h] BYREF

  v2 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(800LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "11 48 1 9 <unknown> 64 8 16 __for_begin:3187 96 8 14 __for_end:3187 128 16 15 script_ptr:3195 16"
                        "0 32 18 server_script:3189 224 32 9 <unknown> 288 32 16 script_path:3194 352 32 9 <unknown> 416 "
                        "32 9 <unknown> 480 32 9 <unknown> 544 192 12 content:3202";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::loadAllMonsterScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -219021312;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862743] = -202116109;
  v4[536862744] = -202116109;
  ret = 0;
  __for_range = &config->txt_config_mgr.monster_config_mgr.monster_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, config);
  *(std::unordered_map<unsigned int,data::MonsterExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::MonsterExcelConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, config);
  *(std::unordered_map<unsigned int,data::MonsterExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::MonsterExcelConfig>::end(__for_range);
  while ( std::__detail::operator!=<std::pair<unsigned int const,data::MonsterExcelConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::MonsterExcelConfig>,false> *)(v2 + 64),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::MonsterExcelConfig>,false> *)(v2 + 96)) )
  {
    v20 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MonsterExcelConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MonsterExcelConfig>,false,false> *const)(v2 + 64));
    monster_id = std::get<0ul,unsigned int const,data::MonsterExcelConfig>(v20);
    monster_config = (std::tuple_element<1,const std::pair<unsigned int const,data::MonsterExcelConfig> >::type *)std::get<1ul,unsigned int const,data::MonsterExcelConfig>(v20);
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      off_1A537D00,
      (const std::allocator<char> *)(v2 + 48));
    p_server_script = (__int64)&monster_config->server_script;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      p_server_script = 32LL;
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::tools::StringUtils::trim(
      (std::string *)(v2 + 160),
      (const std::string *)p_server_script,
      (const std::string *)(v2 + 224),
      1);
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( !(unsigned __int8)std::string::empty(v2 + 160) )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      p_monster_lua_base_dir = &config->monster_lua_base_dir;
      if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
      {
        p_monster_lua_base_dir = (std::string *)32;
        __asan_report_store_n(v2 + 352, 32LL);
      }
      std::operator+<char>((std::string *)(v2 + 352), p_monster_lua_base_dir, (const std::string *)(v2 + 160));
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      std::operator+<char>((std::string *)(v2 + 288), (std::string *)(v2 + 352), ".lua");
      std::string::~string((void *)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      *(_WORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
      if ( *(_WORD *)(((v2 + 128) >> 3) + 0x7FFF8000) )
        __asan_report_store16();
      LuaScriptMgr::createFromFilePath((const std::string *)(v2 + 128), (const LuaConfigMgr *)(v2 + 288));
      if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v2 + 128)) )
      {
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 416, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 416),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "loadAllMonsterScript",
          3198);
        v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
               (common::milog::MiLogStream *const)(v2 + 416),
               (const char (*)[16])"[CONFIG_ERROR] ");
        v8 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
               v7,
               (const char (*)[34])"monster script_ptr is null, path:");
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, (const std::string *)(v2 + 288));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
        ret = -1;
      }
      else
      {
        v9 = (_DWORD *)(((v2 + 544) >> 3) + 2147450880);
        *v9 = 0;
        v9[1] = 0;
        v9[2] = 0;
        v9[3] = 0;
        v9[4] = 0;
        v9[5] = 0;
        LuaContent::LuaContent((LuaContent *const)(v2 + 544));
        v10 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 128));
        LuaScript::copyContent(v10, (LuaContent *)(v2 + 544));
        v12 = std::unordered_map<unsigned int,LuaContent>::emplace<unsigned int const&,LuaContent&>(
                &this->monster_script_map,
                monster_id,
                (LuaContent *)(v2 + 544),
                (const unsigned int *)&this->monster_script_map,
                v11);
        if ( !v12.second )
        {
          *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 480) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 480, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 480),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadAllMonsterScript",
            3206);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 480),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  v13,
                  (const char (*)[22])"duplicate monster_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, monster_id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 480));
          *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
          ret = -1;
        }
        LuaContent::~LuaContent((LuaContent *const)(v2 + 544));
      }
      std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v2 + 128));
      std::string::~string((void *)(v2 + 288));
    }
    std::string::~string((void *)(v2 + 160));
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
    *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
    *(_WORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = -1800;
    v15 = (_DWORD *)(((v2 + 544) >> 3) + 2147450880);
    *v15 = -117901064;
    v15[1] = -117901064;
    v15[2] = -117901064;
    v15[3] = -117901064;
    v15[4] = -117901064;
    v15[5] = -117901064;
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MonsterExcelConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MonsterExcelConfig>,false,false> *const)(v2 + 64));
  }
  if ( v23 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF805C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 100) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8060) = -168430091;
  }
  return ret;
};

// Line 3215: range 000000000F30C148-000000000F30D92A
int32_t __cdecl LuaConfigMgr::loadAllQuestScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rax
  int32_t v8; // r14d
  common::milog::MiLogStream *v9; // rax
  const char *v10; // rsi
  common::milog::MiLogStream *v11; // r14
  int v12; // edx
  char v13; // al
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // r14
  char *v16; // rsi
  const std::filesystem::__cxx11::directory_entry *v17; // rax
  const std::filesystem::__cxx11::path *v18; // rax
  unsigned __int64 v19; // rax
  const std::filesystem::__cxx11::directory_entry *v20; // rax
  const std::filesystem::__cxx11::path *v21; // rsi
  unsigned __int64 v22; // rax
  const std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > > *v24; // rsi
  bool v25; // r14
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  char *v29; // rsi
  common::milog::MiLogStream *v30; // r14
  std::unordered_set<unsigned int>::size_type v31; // rax
  common::milog::MiLogStream *v32; // rax
  char *v33; // rsi
  unsigned int *v34; // rax
  int32_t ret; // [rsp+1Ch] [rbp-5B4h]
  data::MainQuestExcelConfigMap *__for_range; // [rsp+28h] [rbp-5A8h]
  data::RandomMainQuestExcelConfigMap *__for_range_0; // [rsp+38h] [rbp-598h]
  std::unordered_set<unsigned int> *__for_range_1; // [rsp+40h] [rbp-590h]
  uint32_t *parent_quest_id_1; // [rsp+48h] [rbp-588h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false>::reference v42; // [rsp+50h] [rbp-580h]
  std::tuple_element<0,std::pair<unsigned int const,data::RandomMainQuestExcelConfig> >::type *parent_quest_id_0; // [rsp+58h] [rbp-578h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false>::reference v44; // [rsp+68h] [rbp-568h]
  std::tuple_element<0,std::pair<unsigned int const,data::MainQuestExcelConfig> >::type *parent_quest_id; // [rsp+70h] [rbp-560h]
  char v46[1360]; // [rsp+80h] [rbp-550h] BYREF

  v2 = (unsigned __int64)v46;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1312LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "26 32 4 9 <unknown> 48 4 20 parent_quest_id:3251 64 8 16 __for_begin:3299 96 8 14 __for_end:3299"
                        " 128 8 16 __for_begin:3310 160 8 14 __for_end:3310 192 8 9 <unknown> 224 8 16 __for_begin:3318 2"
                        "56 8 14 __for_end:3318 288 16 7 ec:3227 320 16 9 iter:3228 352 16 8 end:3229 384 16 9 func:3262 "
                        "416 32 9 <unknown> 480 32 17 file_pattern:3225 544 32 9 <unknown> 608 32 9 <unknown> 672 32 9 na"
                        "me:3243 736 32 6 m:3246 800 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <unknown> 992 32 9 <unkno"
                        "wn> 1056 40 9 path:3217 1136 40 9 <unknown> 1216 56 24 parent_quest_id_set:3216";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::loadAllQuestScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862725] = -218959360;
  v4[536862726] = -218959360;
  v4[536862727] = -218959360;
  v4[536862728] = -218959360;
  v4[536862729] = -219021312;
  v4[536862730] = -219021312;
  v4[536862731] = -219021312;
  v4[536862732] = -219021312;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -218959118;
  v4[536862754] = -218959360;
  v4[536862755] = 62194;
  v4[536862756] = -234881024;
  v4[536862757] = -218959118;
  v4[536862759] = -218103808;
  v4[536862760] = -202116109;
  std::unordered_set<unsigned int>::unordered_set((std::unordered_set<unsigned int> *const)(v2 + 1216));
  std::filesystem::__cxx11::path::path<std::string,std::filesystem::__cxx11::path>(
    (std::filesystem::__cxx11::path *const)(v2 + 1056),
    &config->quest_lua_base_dir,
    auto_format);
  if ( !std::filesystem::is_directory((const std::filesystem::__cxx11::path *)(v2 + 1056)) )
  {
    if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 416, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 416),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllQuestScript",
      3220);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 416),
           (const char (*)[16])"[CONFIG_ERROR] ");
    v6 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v5, (const char (*)[10])byte_1A540E20);
    v7 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &config->quest_lua_base_dir);
    common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v7, (const char (*)[10])byte_1A5272E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
    *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
    v8 = -1;
  }
  else
  {
    std::basic_regex<char,std::regex_traits<char>>::basic_regex(
      (std::basic_regex<char,std::regex_traits<char> > *const)(v2 + 480),
      "^Q(\\d+)ShareConfig.lua$",
      (std::basic_regex<char,std::regex_traits<char> >::flag_type)16);
    ret = 0;
    std::error_code::error_code((std::error_code *const)(v2 + 288));
    std::filesystem::__cxx11::directory_iterator::directory_iterator(
      (std::filesystem::__cxx11::directory_iterator *const)(v2 + 320),
      (const std::filesystem::__cxx11::path *)(v2 + 1056),
      (std::error_code *)(v2 + 288));
    if ( *(_WORD *)(((v2 + 352) >> 3) + 0x7FFF8000) )
      __asan_report_store16();
    *(_QWORD *)(v2 + 352) = 0LL;
    *(_QWORD *)(v2 + 360) = 0LL;
    if ( std::error_code::value((const std::error_code *const)(v2 + 288)) )
    {
      if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 544, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 544),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "loadAllQuestScript",
        3233);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 544),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v10 = "loadAllQuestScript fails directory_iterator error code : ";
      v11 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
              v9,
              (const char (*)[58])"loadAllQuestScript fails directory_iterator error code : ");
      v12 = std::error_code::value((const std::error_code *const)(v2 + 288));
      v13 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
      if ( v13 != 0 && v13 <= 3 )
      {
        LOBYTE(v10) = v13 != 0;
        __asan_report_store4(v2 + 32, v10);
      }
      *(_DWORD *)(v2 + 32) = v12;
      v14 = common::milog::MiLogStream::operator<<<int,(int *)0>(v11, (const int *)(v2 + 32));
      v15 = common::milog::MiLogStream::operator<<<char [3],(char *[3])0>(v14, (const char (*)[3])", ");
      if ( *(char *)(((v2 + 608) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 608, 32LL);
      }
      std::error_code::message[abi:cxx11]((std::string *)(v2 + 608), (const std::error_code *const)(v2 + 288));
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v15, (const std::string *)(v2 + 608));
      std::string::~string((void *)(v2 + 608));
      *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = -117901064;
      *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
      *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = -117901064;
      v8 = -1;
    }
    else
    {
      while ( 1 )
      {
        v16 = (char *)(v2 + 352);
        if ( !std::filesystem::__cxx11::operator!=(
                (const std::filesystem::__cxx11::directory_iterator *)(v2 + 320),
                (const std::filesystem::__cxx11::directory_iterator *)(v2 + 352)) )
          break;
        v17 = (const std::filesystem::__cxx11::directory_entry *)std::filesystem::__cxx11::directory_iterator::operator*(v2 + 320);
        v18 = std::filesystem::__cxx11::directory_entry::operator std::filesystem::__cxx11::path const&(v17);
        if ( std::filesystem::is_regular_file(v18) )
        {
          *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
          v19 = ((v2 + 1136) >> 3) + 2147450880;
          *(_DWORD *)v19 = 0;
          *(_BYTE *)(v19 + 4) = 0;
          v20 = std::filesystem::__cxx11::directory_iterator::operator->((const std::filesystem::__cxx11::directory_iterator *const)(v2 + 320));
          v21 = std::filesystem::__cxx11::directory_entry::path(v20);
          if ( *(char *)(((v2 + 1136) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1175) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 105) & 7) >= *(_BYTE *)(((v2 + 1175) >> 3) + 0x7FFF8000) )
          {
            v21 = (const std::filesystem::__cxx11::path *)40;
            __asan_report_store_n(v2 + 1136, 40LL);
          }
          std::filesystem::__cxx11::path::filename((std::filesystem::__cxx11::path *)(v2 + 1136), v21);
          if ( *(char *)(((v2 + 672) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 672, 32LL);
          }
          std::filesystem::__cxx11::path::string(
            (std::string *)(v2 + 672),
            (const std::filesystem::__cxx11::path *const)(v2 + 1136));
          std::filesystem::__cxx11::path::~path((std::filesystem::__cxx11::path *const)(v2 + 1136));
          v22 = ((v2 + 1136) >> 3) + 2147450880;
          *(_DWORD *)v22 = -117901064;
          *(_BYTE *)(v22 + 4) = -8;
          *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
          std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::match_results((std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v2 + 736));
          if ( std::regex_match<std::char_traits<char>,std::allocator<char>,std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string>>>,char,std::regex_traits<char>>(
                 (const std::string *)(v2 + 672),
                 (std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *)(v2 + 736),
                 (const std::basic_regex<char,std::regex_traits<char> > *)(v2 + 480),
                 (std::regex_constants::match_flag_type)0)
            && std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::size((const std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v2 + 736)) == 2 )
          {
            *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v2 + 48, v2 + 736);
            *(_DWORD *)(v2 + 48) = 0;
            *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
            v24 = std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::operator[](
                    (const std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v2 + 736),
                    1uLL);
            if ( *(char *)(((v2 + 800) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) )
            {
              v24 = (const std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > > *)32;
              __asan_report_store_n(v2 + 800, 32LL);
            }
            std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string>>::operator std::string(
              (std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > >::string_type *)(v2 + 800),
              v24);
            v25 = common::tools::StringUtils::strToNum<unsigned int>(
                    (const std::string *)(v2 + 800),
                    (unsigned int *)(v2 + 48),
                    1) != 0;
            std::string::~string((void *)(v2 + 800));
            *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
            if ( v25 )
            {
              ret = -1;
              *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 864) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 864, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 864),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "loadAllQuestScript",
                3255);
              v26 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 864),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v27 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v26, (const char (*)[7])"file: ");
              v28 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                      v27,
                      (const std::string *)(v2 + 672));
              common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v28, (const char (*)[32])byte_1A540F40);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 864));
              *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = -117901064;
            }
            else
            {
              std::unordered_set<unsigned int>::insert(
                (std::unordered_set<unsigned int> *const)(v2 + 1216),
                (const std::unordered_set<unsigned int>::value_type *)(v2 + 48));
            }
          }
          std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::~match_results((std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v2 + 736));
          std::string::~string((void *)(v2 + 672));
        }
        *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = -117901064;
        *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
        *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
        std::filesystem::__cxx11::directory_iterator::operator++(v2 + 320);
      }
      *(_WORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 384, v16);
      *(_QWORD *)(v2 + 384) = this;
      if ( *(_BYTE *)(((v2 + 392) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 392, v16);
      *(_QWORD *)(v2 + 392) = config;
      __for_range = &config->txt_config_mgr.quest_config_mgr.main_quest_excel_config_map;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 64, v16);
      *(std::unordered_map<unsigned int,data::MainQuestExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::MainQuestExcelConfig>::begin(__for_range);
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 96, v16);
      *(std::unordered_map<unsigned int,data::MainQuestExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::MainQuestExcelConfig>::end(__for_range);
      while ( 1 )
      {
        v29 = (char *)(v2 + 96);
        if ( !std::__detail::operator!=<std::pair<unsigned int const,data::MainQuestExcelConfig>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::MainQuestExcelConfig>,false> *)(v2 + 64),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::MainQuestExcelConfig>,false> *)(v2 + 96)) )
          break;
        v44 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false> *const)(v2 + 64));
        parent_quest_id = std::get<0ul,unsigned int const,data::MainQuestExcelConfig>(v44);
        std::get<1ul,unsigned int const,data::MainQuestExcelConfig>(v44);
        std::unordered_set<unsigned int>::erase((std::unordered_set<unsigned int> *const)(v2 + 1216), parent_quest_id);
        if ( *(_BYTE *)(((unsigned __int64)parent_quest_id >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)parent_quest_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)parent_quest_id >> 3)
                                                                            + 0x7FFF8000) )
        {
          __asan_report_load4(parent_quest_id);
        }
        if ( LuaConfigMgr::loadAllQuestScript(HK4EDesignConfig &)::{lambda(unsigned int,std::unordered_map<unsigned int,ParentQuestScriptConfig> &)#1}::operator()(
               (const LuaConfigMgr::loadAllQuestScript::<lambda(uint32_t, std::unordered_map<unsigned int, ParentQuestScriptConfig>&)> *const)(v2 + 384),
               *parent_quest_id,
               &this->parent_quest_script_config_map) )
        {
          ret = -1;
        }
        std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false> *const)(v2 + 64));
      }
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      __for_range_0 = &config->txt_config_mgr.quest_config_mgr.random_main_quest_excel_config_map;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 128, v29);
      *(std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::const_iterator *)(v2 + 128) = std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::begin(__for_range_0);
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 160, v29);
      *(std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::const_iterator *)(v2 + 160) = std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::end(__for_range_0);
      while ( std::__detail::operator!=<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false> *)(v2 + 128),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false> *)(v2 + 160)) )
      {
        v42 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false> *const)(v2 + 128));
        parent_quest_id_0 = std::get<0ul,unsigned int const,data::RandomMainQuestExcelConfig>(v42);
        std::get<1ul,unsigned int const,data::RandomMainQuestExcelConfig>(v42);
        std::unordered_set<unsigned int>::erase((std::unordered_set<unsigned int> *const)(v2 + 1216), parent_quest_id_0);
        std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false> *const)(v2 + 128));
      }
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
      *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 928) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 928, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 928),
        &common::milog::MiLogDefault::default_log_obj_,
        2u,
        "./src/lua_config_mgr.cpp",
        "loadAllQuestScript",
        3315);
      v30 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
              (common::milog::MiLogStream *const)(v2 + 928),
              (const char (*)[44])byte_1A540F80);
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
      v31 = std::unordered_set<unsigned int>::size((const std::unordered_set<unsigned int> *const)(v2 + 1216));
      if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) )
        v31 = __asan_report_store8(v2 + 192, byte_1A540F80);
      *(_QWORD *)(v2 + 192) = v31;
      v32 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
              v30,
              (const unsigned __int64 *)(v2 + 192));
      common::milog::MiLogStream::operator<<<char [3],(char *[3])0>(v32, (const char (*)[3])" :");
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 928));
      *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
      *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 992) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 992, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 992),
        &common::milog::MiLogDefault::default_log_obj_,
        2u,
        "./src/lua_config_mgr.cpp",
        "loadAllQuestScript",
        3316);
      v33 = (char *)(v2 + 1216);
      common::milog::MiLogStream::operator<<<unsigned int>(
        (common::milog::MiLogStream *const)(v2 + 992),
        (const std::unordered_set<unsigned int> *)(v2 + 1216));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 992));
      *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = -117901064;
      __for_range_1 = (std::unordered_set<unsigned int> *)(v2 + 1216);
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 224, v33);
      *(std::unordered_set<unsigned int>::iterator *)(v2 + 224) = std::unordered_set<unsigned int>::begin(__for_range_1);
      *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 256, v33);
      *(std::unordered_set<unsigned int>::iterator *)(v2 + 256) = std::unordered_set<unsigned int>::end(__for_range_1);
      while ( std::__detail::operator!=<unsigned int,false>(
                (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 224),
                (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 256)) )
      {
        v34 = (unsigned int *)std::__detail::_Node_iterator<unsigned int,true,false>::operator*((const std::__detail::_Node_iterator<unsigned int,true,false> *const)(v2 + 224));
        parent_quest_id_1 = v34;
        if ( *(_BYTE *)(((unsigned __int64)v34 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v34 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v34 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v34);
        }
        if ( LuaConfigMgr::loadAllQuestScript(HK4EDesignConfig &)::{lambda(unsigned int,std::unordered_map<unsigned int,ParentQuestScriptConfig> &)#1}::operator()(
               (const LuaConfigMgr::loadAllQuestScript::<lambda(uint32_t, std::unordered_map<unsigned int, ParentQuestScriptConfig>&)> *const)(v2 + 384),
               *parent_quest_id_1,
               &this->parent_quest_script_config_extra_map) )
        {
          ret = -1;
        }
        std::__detail::_Node_iterator<unsigned int,true,false>::operator++((std::__detail::_Node_iterator<unsigned int,true,false> *const)(v2 + 224));
      }
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
      v8 = ret;
    }
    std::filesystem::__cxx11::directory_iterator::~directory_iterator((std::filesystem::__cxx11::directory_iterator *const)(v2 + 352));
    std::filesystem::__cxx11::directory_iterator::~directory_iterator((std::filesystem::__cxx11::directory_iterator *const)(v2 + 320));
    std::basic_regex<char,std::regex_traits<char>>::~basic_regex((std::basic_regex<char,std::regex_traits<char> > *const)(v2 + 480));
  }
  std::filesystem::__cxx11::path::~path((std::filesystem::__cxx11::path *const)(v2 + 1056));
  std::unordered_set<unsigned int>::~unordered_set((std::unordered_set<unsigned int> *const)(v2 + 1216));
  if ( v46 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8068) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8070) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8078) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8080) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8088) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8090) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF809C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1312LL, v46);
  }
  return v8;
};

// Line 3262: range 000000000F30B558-000000000F30C147
__int64 __fastcall LuaConfigMgr::loadAllQuestScript(HK4EDesignConfig &)::{lambda(unsigned int,std::unordered_map<unsigned int,ParentQuestScriptConfig> &)#1}::operator()(
        unsigned __int64 __closure,
        uint32_t parent_quest_id,
        std::unordered_map<unsigned int,ParentQuestScriptConfig> *parent_quest_map)
{
  unsigned int v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  unsigned int v7; // esi
  __int64 v8; // rsi
  __int64 v9; // rax
  __int64 v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  char *v13; // rsi
  uint32_t v14; // ecx
  char v15; // al
  LuaConfigMgr *v16; // r14
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  int v20; // [rsp+4h] [rbp-77Ch]
  std::unordered_map<unsigned int,ParentQuestScriptConfig>::mapped_type *parent_quest_script_config; // [rsp+28h] [rbp-758h]
  char v23[1872]; // [rsp+30h] [rbp-750h] BYREF

  v4 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_5(1824LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "11 48 4 20 parent_quest_id:3262 64 16 21 quest_script_ptr:3278 96 16 9 <unknown> 128 32 22 quest"
                        "_script_path:3265 192 32 9 <unknown> 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 44"
                        "8 32 9 <unknown> 512 520 6 f:3266 1168 520 10 f_txt:3270";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::loadAllQuestScript(HK4EDesignConfig &)::{lambda(unsigned int,std::unordered_map<unsigned int,ParentQuestScriptConfig> &)#1}::operator();
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -219021312;
  v6[536862723] = -219021312;
  v6[536862725] = -218959118;
  v6[536862727] = -218959118;
  v6[536862729] = -218959118;
  v6[536862731] = -218959118;
  v6[536862733] = -218959118;
  v6[536862735] = -218959118;
  v6[536862752] = -218959360;
  v6[536862753] = -218959118;
  v6[536862754] = -218959118;
  v6[536862755] = -218959118;
  v6[536862756] = 62194;
  v6[536862772] = -218103808;
  v6[536862773] = -202116109;
  v6[536862774] = -202116109;
  v6[536862775] = -202116109;
  v6[536862776] = -202116109;
  *(_DWORD *)(v4 + 48) = parent_quest_id;
  v7 = *(_DWORD *)(v4 + 48);
  if ( *(char *)(((v4 + 256) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v4 + 287) >> 3) + 0x7FFF8000) != 0
    && (char)((v4 + 31) & 7) >= *(_BYTE *)(((v4 + 287) >> 3) + 0x7FFF8000) )
  {
    v7 = 32;
    __asan_report_store_n(v4 + 256, 32LL);
  }
  common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v4 + 256), v7);
  if ( *(_BYTE *)(((__closure + 8) >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure + 8);
  v8 = *(_QWORD *)(__closure + 8) + 96LL;
  if ( *(char *)(((v4 + 192) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) != 0
    && (char)((v4 - 64 + 31) & 7) >= *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) )
  {
    v8 = 32LL;
    __asan_report_store_n(v4 + 192, 32LL);
  }
  std::operator+<char>((std::string *)(v4 + 192), (const std::string *)v8, "Q");
  if ( *(char *)(((v4 + 320) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v4 + 351) >> 3) + 0x7FFF8000) != 0
    && (char)((v4 + 95) & 7) >= *(_BYTE *)(((v4 + 351) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v4 + 320, 32LL);
  }
  std::operator+<char>((std::string *)(v4 + 320), (std::string *)(v4 + 192), (std::string *)(v4 + 256));
  if ( *(char *)(((v4 + 128) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v4 + 159) >> 3) + 0x7FFF8000) != 0
    && (char)((v4 - 97) & 7) >= *(_BYTE *)(((v4 + 159) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v4 + 128, 32LL);
  }
  std::operator+<char>((std::string *)(v4 + 128), (std::string *)(v4 + 320), "ShareConfig.lua");
  std::string::~string((void *)(v4 + 320));
  *(_DWORD *)(((v4 + 320) >> 3) + 0x7FFF8000) = -117901064;
  std::string::~string((void *)(v4 + 192));
  *(_DWORD *)(((v4 + 192) >> 3) + 0x7FFF8000) = -117901064;
  std::string::~string((void *)(v4 + 256));
  *(_DWORD *)(((v4 + 256) >> 3) + 0x7FFF8000) = -117901064;
  __asan_unpoison_stack_memory(v4 + 512, 520LL);
  v9 = std::string::c_str(v4 + 128);
  std::ifstream::basic_ifstream(v4 + 512, v9, 8LL);
  if ( (unsigned __int8)std::ios::good(v4 + 768) == 1 )
    goto LABEL_19;
  std::string::operator+=(v4 + 128, ".txt");
  __asan_unpoison_stack_memory(v4 + 1168, 520LL);
  v10 = std::string::c_str(v4 + 128);
  std::ifstream::basic_ifstream(v4 + 1168, v10, 8LL);
  if ( (unsigned __int8)std::ios::good(v4 + 1424) != 1 )
  {
    v3 = 0;
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  std::ifstream::~ifstream(v4 + 1168);
  __asan_poison_stack_memory(v4 + 1168, 520LL);
  if ( v20 == 1 )
  {
LABEL_19:
    *(_WORD *)(((v4 + 64) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)((__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8(__closure);
    if ( *(_WORD *)(((v4 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store16();
    LuaScriptMgr::createFromFilePath((const std::string *)(v4 + 64), (const LuaConfigMgr *)(v4 + 128));
    if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v4 + 64)) )
    {
      *(_DWORD *)(((v4 + 384) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v4 + 384) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 415) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 97) & 7) >= *(_BYTE *)(((v4 + 415) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 384, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 384),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "operator()",
        3281);
      v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v4 + 384),
              (const char (*)[16])"[CONFIG_ERROR] ");
      v12 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
              v11,
              (const char (*)[53])"LuaScriptMgr::createFromFilePath fails, script_path:");
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v12, (const std::string *)(v4 + 128));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 384));
      *(_DWORD *)(((v4 + 384) >> 3) + 0x7FFF8000) = -117901064;
      v3 = -1;
    }
    else
    {
      v13 = (char *)(v4 + 48);
      parent_quest_script_config = std::unordered_map<unsigned int,ParentQuestScriptConfig>::operator[](
                                     parent_quest_map,
                                     (const std::unordered_map<unsigned int,ParentQuestScriptConfig>::key_type *)(v4 + 48));
      v14 = *(_DWORD *)(v4 + 48);
      v15 = *(_BYTE *)(((unsigned __int64)parent_quest_script_config >> 3) + 0x7FFF8000);
      if ( v15 != 0 && v15 <= 3 )
      {
        LOBYTE(v13) = v15 != 0;
        __asan_report_store4(parent_quest_script_config, v13);
      }
      parent_quest_script_config->parent_quest_id = v14;
      if ( *(_BYTE *)((__closure >> 3) + 0x7FFF8000) )
        __asan_report_load8(__closure);
      v16 = *(LuaConfigMgr **)__closure;
      *(_WORD *)(((v4 + 96) >> 3) + 0x7FFF8000) = 0;
      std::shared_ptr<LuaScript>::shared_ptr(
        (std::shared_ptr<LuaScript> *const)(v4 + 96),
        (const std::shared_ptr<LuaScript> *)(v4 + 64));
      LOBYTE(v16) = LuaConfigMgr::loadParentQuestScriptConfig(
                      v16,
                      (LuaScriptPtr *)(v4 + 96),
                      parent_quest_script_config) != 0;
      std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v4 + 96));
      *(_WORD *)(((v4 + 96) >> 3) + 0x7FFF8000) = -1800;
      if ( (_BYTE)v16 )
      {
        *(_DWORD *)(((v4 + 448) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v4 + 448) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v4 + 479) >> 3) + 0x7FFF8000) != 0
          && (char)((v4 - 64 + 31) & 7) >= *(_BYTE *)(((v4 + 479) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v4 + 448, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v4 + 448),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "operator()",
          3292);
        v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v4 + 448),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v18 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, (const std::string *)(v4 + 128));
        common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(v18, (const char (*)[46])byte_1A540B80);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 448));
        *(_DWORD *)(((v4 + 448) >> 3) + 0x7FFF8000) = -117901064;
        v3 = -1;
      }
      else
      {
        v3 = 0;
      }
    }
    std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v4 + 64));
  }
  std::ifstream::~ifstream(v4 + 512);
  std::string::~string((void *)(v4 + 128));
  if ( v23 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8014) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8024) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF802C) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8034) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF803C) = 0;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8080) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF80DC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v6 + 536862754) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v6 + 2147451008 - (((_DWORD)v6 + 2147451016) & 0xFFFFFFF8) + 100) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    __asan_stack_free_5(v4, 1824LL, v23);
  }
  return v3;
};

// Line 3329: range 000000000F30D92C-000000000F30E3A0
int32_t __cdecl LuaConfigMgr::fillParentScriptAction(
        const LuaConfigMgr *const this,
        const std::map<std::string,luabind::adl::object> *lua_obj_map,
        std::vector<data::QuestExec> *action_vec)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  const char *v6; // rax
  bool v7; // r14
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rdx
  unsigned __int64 v10; // rax
  char *v11; // rsi
  unsigned __int64 v12; // rax
  int v13; // ecx
  char v14; // al
  data::QuestExec *v15; // rdx
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rdx
  unsigned __int64 v18; // rax
  unsigned __int64 v19; // rax
  int32_t result; // eax
  int32_t ret; // [rsp+2Ch] [rbp-284h]
  std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> >::reference v23; // [rsp+38h] [rbp-278h]
  std::tuple_element<0,std::pair<const std::string,luabind::adl::object> >::type *action_str; // [rsp+40h] [rbp-270h]
  std::tuple_element<1,const std::pair<const std::string,luabind::adl::object> >::type *lua_action_obj; // [rsp+48h] [rbp-268h]
  std::vector<luabind::adl::object> *__for_range_0; // [rsp+50h] [rbp-260h]
  luabind::adl::object *lua_obj; // [rsp+58h] [rbp-258h]
  char v28[592]; // [rsp+60h] [rbp-250h] BYREF

  v3 = (unsigned __int64)v28;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_4(544LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "11 48 1 9 <unknown> 64 4 9 type:3333 80 8 16 __for_begin:3331 112 8 14 __for_end:3331 144 8 16 _"
                        "_for_begin:3343 176 8 14 __for_end:3343 208 24 19 lua_object_vec:3340 272 32 9 <unknown> 336 32 "
                        "9 <unknown> 400 32 9 <unknown> 464 40 9 exec:3345";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::fillParentScriptAction;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = 61956;
  v5[536862722] = -234881024;
  v5[536862723] = 62194;
  v5[536862723] = -234881024;
  v5[536862724] = 62194;
  v5[536862724] = -234881024;
  v5[536862725] = 62194;
  v5[536862725] = -234881024;
  v5[536862726] = 62194;
  v5[536862727] = -218959360;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -218103808;
  v5[536862736] = -202116109;
  ret = 0;
  if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 80, lua_obj_map);
  *(std::map<std::string,luabind::adl::object>::const_iterator *)(v3 + 80) = std::map<std::string,luabind::adl::object>::begin(lua_obj_map);
  if ( *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 112, lua_obj_map);
  *(std::map<std::string,luabind::adl::object>::const_iterator *)(v3 + 112) = std::map<std::string,luabind::adl::object>::end(lua_obj_map);
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> >::_Self *)(v3 + 80),
            (const std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> >::_Self *)(v3 + 112)) )
  {
    v23 = std::_Rb_tree_const_iterator<std::pair<std::string const,luabind::adl::object>>::operator*((const std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> > *const)(v3 + 80));
    action_str = std::get<0ul,std::string const,luabind::adl::object>(v23);
    lua_action_obj = (std::tuple_element<1,const std::pair<const std::string,luabind::adl::object> >::type *)std::get<1ul,std::string const,luabind::adl::object>(v23);
    *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
    *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v3 + 48);
    v6 = (const char *)std::string::c_str(action_str);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v3 + 272),
      v6,
      (const std::allocator<char> *)(v3 + 48));
    v7 = !data::enumStrToVal((const std::string *)(v3 + 272), (data::QuestExecType *)(v3 + 64));
    std::string::~string((void *)(v3 + 272));
    *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v3 + 48);
    *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v7 )
    {
      ret = -1;
      *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 336, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 336),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "fillParentScriptAction",
        3337);
      v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v3 + 336),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v9 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
             v8,
             (const char (*)[43])"enumNameToVal QuestExecType failed,action:");
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v9, action_str);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
      *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
    }
    else
    {
      v10 = ((v3 + 208) >> 3) + 2147450880;
      *(_WORD *)v10 = 0;
      *(_BYTE *)(v10 + 2) = 0;
      std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v3 + 208));
      if ( !ScriptUtil::getTableValueAsVector<luabind::adl::object>(
              &ScriptUtil::no_exception_instance,
              lua_action_obj,
              (std::vector<luabind::adl::object> *)(v3 + 208)) )
      {
        __for_range_0 = (std::vector<luabind::adl::object> *)(v3 + 208);
        *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 144, lua_action_obj);
        *(std::vector<luabind::adl::object>::iterator *)(v3 + 144) = std::vector<luabind::adl::object>::begin(__for_range_0);
        *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 176, lua_action_obj);
        *(std::vector<luabind::adl::object>::iterator *)(v3 + 176) = std::vector<luabind::adl::object>::end(__for_range_0);
        while ( 1 )
        {
          v11 = (char *)(v3 + 176);
          if ( !__gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                  (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 144),
                  (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 176)) )
            break;
          lua_obj = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 144));
          v12 = ((v3 + 464) >> 3) + 2147450880;
          *(_DWORD *)v12 = 0;
          *(_BYTE *)(v12 + 4) = 0;
          data::QuestExec::QuestExec((data::QuestExec *const)(v3 + 464));
          if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_load4(v3 + 64);
          v13 = *(_DWORD *)(v3 + 64);
          v14 = *(_BYTE *)(((v3 + 472) >> 3) + 0x7FFF8000);
          if ( v14 != 0 && v14 <= 3 )
          {
            LOBYTE(v11) = v14 != 0;
            __asan_report_store4(v3 + 472, v11);
          }
          *(_DWORD *)(v3 + 472) = v13;
          if ( ScriptUtil::getTableValueAsVector<std::string>(
                 &ScriptUtil::no_exception_instance,
                 lua_obj,
                 (std::vector<std::string> *)(v3 + 480)) )
          {
            ret = -1;
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 400),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "fillParentScriptAction",
              3354);
            v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 400),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v17 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                    v16,
                    (const char (*)[48])"getTableValueAsVector failed,quest action name:");
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, action_str);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
          }
          else
          {
            v15 = std::move<data::QuestExec &>((data::QuestExec *)(v3 + 464));
            std::vector<data::QuestExec>::emplace_back<data::QuestExec>(action_vec, v15, v15);
          }
          data::QuestExec::~QuestExec((data::QuestExec *const)(v3 + 464));
          v18 = ((v3 + 464) >> 3) + 2147450880;
          *(_DWORD *)v18 = -117901064;
          *(_BYTE *)(v18 + 4) = -8;
          __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 144));
        }
        *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = -8;
      }
      std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v3 + 208));
    }
    *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
    v19 = ((v3 + 208) >> 3) + 2147450880;
    *(_WORD *)v19 = -1800;
    *(_BYTE *)(v19 + 2) = -8;
    std::_Rb_tree_const_iterator<std::pair<std::string const,luabind::adl::object>>::operator++((std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> > *const)(v3 + 80));
  }
  result = ret;
  if ( v28 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8040) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8040) = -168430091;
  }
  return result;
};

// Line 3364: range 000000000F30E3A2-000000000F314186
int32_t __cdecl LuaConfigMgr::fillQuestScriptConfig(
        const LuaConfigMgr *const this,
        const std::map<std::string,luabind::adl::object> *lua_obj_map,
        std::map<unsigned int,QuestScriptConfig> *fill_map)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rdx
  bool v8; // r14
  bool v9; // r14
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  __int64 v12; // rsi
  __int64 v13; // rdx
  bool v14; // r14
  unsigned __int64 v15; // rax
  char *v16; // rsi
  int v17; // r14d
  char *v18; // rsi
  unsigned int NumFromLuaStrOr; // edx
  char v20; // al
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  char *v25; // rsi
  uint32_t v26; // ecx
  char v27; // al
  _DWORD *v28; // rax
  SceneExcelConfigMgr *p_scene_config_mgr; // rcx
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rax
  bool v35; // r14
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // rax
  QuestNpcScriptConfigPosition *v40; // rax
  QuestNpcScriptConfigPosition *v41; // rdx
  _DWORD *v42; // rax
  unsigned __int64 v43; // rax
  bool v44; // r14
  unsigned __int64 v45; // rax
  char *v46; // rsi
  int v47; // r14d
  char *v48; // rsi
  unsigned int v49; // edx
  char v50; // al
  common::milog::MiLogStream *v51; // rax
  common::milog::MiLogStream *v52; // rax
  common::milog::MiLogStream *v53; // rax
  common::milog::MiLogStream *v54; // rax
  char *v55; // rsi
  uint32_t v56; // ecx
  char v57; // dl
  unsigned __int64 v58; // rax
  bool v59; // r14
  unsigned __int64 v60; // rax
  char *v61; // rsi
  int v62; // r14d
  char *v63; // rsi
  unsigned int v64; // edx
  char v65; // al
  common::milog::MiLogStream *v66; // rax
  common::milog::MiLogStream *v67; // rax
  common::milog::MiLogStream *v68; // rax
  common::milog::MiLogStream *v69; // rax
  char *v70; // rsi
  uint32_t v71; // ecx
  char v72; // dl
  unsigned __int64 v73; // rax
  bool v74; // r14
  unsigned __int64 v75; // rax
  char *v76; // rsi
  int v77; // r14d
  char *v78; // rsi
  char *v79; // rsi
  unsigned int v80; // edx
  char v81; // al
  unsigned int v82; // edx
  char v83; // al
  char *v84; // rsi
  common::milog::MiLogStream *v85; // rax
  common::milog::MiLogStream *v86; // rax
  common::milog::MiLogStream *v87; // rax
  common::milog::MiLogStream *v88; // rax
  char *v89; // rsi
  uint32_t v90; // ecx
  char v91; // dl
  uint32_t v92; // ecx
  char v93; // dl
  unsigned __int64 v94; // rax
  bool v95; // r14
  unsigned __int64 v96; // rax
  common::milog::MiLogStream *v97; // rax
  common::milog::MiLogStream *v98; // r14
  std::vector<int>::size_type v99; // rax
  common::milog::MiLogStream *v100; // rax
  common::milog::MiLogStream *v101; // rax
  int v102; // r14d
  std::vector<int> *v103; // rax
  common::milog::MiLogStream *v104; // rax
  common::milog::MiLogStream *v105; // rax
  common::milog::MiLogStream *v106; // rax
  unsigned __int64 v107; // rax
  bool v108; // r14
  unsigned __int64 v109; // rax
  char *v110; // rsi
  int v111; // r14d
  char *v112; // rsi
  unsigned int v113; // edx
  char v114; // al
  common::milog::MiLogStream *v115; // rax
  common::milog::MiLogStream *v116; // rax
  common::milog::MiLogStream *v117; // rax
  common::milog::MiLogStream *v118; // rax
  _DWORD *v119; // rax
  __int64 v120; // rsi
  int v121; // ecx
  char v122; // al
  bool v123; // r14
  common::milog::MiLogStream *v124; // rax
  common::milog::MiLogStream *v125; // rax
  common::milog::MiLogStream *v126; // rax
  common::milog::MiLogStream *v127; // rax
  QuestTransmitPointScriptConfig *v128; // rax
  unsigned int *v129; // rcx
  QuestTransmitPointScriptConfig *v130; // r8
  _DWORD *v131; // rax
  unsigned __int64 v132; // rax
  bool v133; // r14
  unsigned __int64 v134; // rax
  char *v135; // rsi
  common::milog::MiLogStream *v136; // rax
  common::milog::MiLogStream *v137; // rax
  char *v138; // rsi
  common::milog::MiLogStream *v139; // rax
  common::milog::MiLogStream *v140; // rax
  common::milog::MiLogStream *v141; // rax
  common::milog::MiLogStream *v142; // rax
  DungeonExcelConfigMgr *p_dungeon_config_mgr; // rcx
  __int64 v144; // rsi
  common::milog::MiLogStream *v145; // rax
  common::milog::MiLogStream *v146; // rax
  common::milog::MiLogStream *v147; // rax
  common::milog::MiLogStream *v148; // rax
  common::milog::MiLogStream *v149; // rax
  common::milog::MiLogStream *v150; // rax
  _DWORD *v151; // rax
  int v152; // ecx
  char v153; // dl
  int v154; // ecx
  char v155; // al
  bool v156; // r14
  common::milog::MiLogStream *v157; // rax
  common::milog::MiLogStream *v158; // rax
  common::milog::MiLogStream *v159; // rax
  common::milog::MiLogStream *v160; // rax
  QuestEnterDungeonPointScriptConfig *v161; // rax
  unsigned int *v162; // rcx
  QuestEnterDungeonPointScriptConfig *v163; // r8
  _DWORD *v164; // rax
  unsigned __int64 v165; // rax
  const char (*v167)[11]; // [rsp+0h] [rbp-13B0h]
  std::map<unsigned int,QuestScriptConfig> *fill_mapa; // [rsp+8h] [rbp-13A8h]
  int32_t ret; // [rsp+20h] [rbp-1390h]
  unsigned int scene_id; // [rsp+24h] [rbp-138Ch]
  std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> >::reference v171; // [rsp+30h] [rbp-1380h]
  std::tuple_element<0,std::pair<const std::string,luabind::adl::object> >::type *quest_id_str; // [rsp+38h] [rbp-1378h]
  std::tuple_element<1,const std::pair<const std::string,luabind::adl::object> >::type *lua_quest_obj; // [rsp+40h] [rbp-1370h]
  QuestScriptConfig *quest_script_config; // [rsp+48h] [rbp-1368h]
  std::vector<luabind::adl::object> *__for_range_0; // [rsp+50h] [rbp-1360h]
  __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> >::reference lua_obj; // [rsp+58h] [rbp-1358h]
  QuestNpcScriptConfig *npc_config; // [rsp+60h] [rbp-1350h]
  const data::SceneExcelConfig *scene_config; // [rsp+68h] [rbp-1348h]
  std::vector<luabind::adl::object> *__for_range_1; // [rsp+70h] [rbp-1340h]
  __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> >::reference lua_obj_0; // [rsp+78h] [rbp-1338h]
  QuestMonsterScriptConfig *monster_config; // [rsp+80h] [rbp-1330h]
  std::vector<luabind::adl::object> *__for_range_2; // [rsp+88h] [rbp-1328h]
  __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> >::reference lua_obj_1; // [rsp+90h] [rbp-1320h]
  QuestItemScriptConfig *item_config; // [rsp+98h] [rbp-1318h]
  std::vector<luabind::adl::object> *__for_range_3; // [rsp+A0h] [rbp-1310h]
  __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> >::reference lua_obj_2; // [rsp+A8h] [rbp-1308h]
  QuestGadgetScriptConfig *gadget_config; // [rsp+B0h] [rbp-1300h]
  std::vector<luabind::adl::object> *__for_range_4; // [rsp+B8h] [rbp-12F8h]
  __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> >::reference lua_obj_3; // [rsp+C0h] [rbp-12F0h]
  std::vector<luabind::adl::object> *__for_range_5; // [rsp+C8h] [rbp-12E8h]
  __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> >::reference lua_obj_4; // [rsp+D0h] [rbp-12E0h]
  char v192[4816]; // [rsp+E0h] [rbp-12D0h] BYREF

  fill_mapa = fill_map;
  v3 = (unsigned __int64)v192;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_7(4768LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "109 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 "
                        "9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unknown> 208 1 9 <unk"
                        "nown> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 288 1 9 <unknown> "
                        "304 1 9 <unknown> 320 1 9 <unknown> 336 1 9 <unknown> 352 1 9 <unknown> 368 1 9 <unknown> 384 1 "
                        "9 <unknown> 400 1 9 <unknown> 416 1 9 <unknown> 432 4 13 quest_id:3368 448 4 11 npc_id:3400 464 "
                        "4 15 monster_id:3444 480 4 12 item_id:3468 496 4 14 gadget_id:3492 512 4 18 chest_drop_id:3493 5"
                        "28 4 13 point_id:3542 544 4 13 point_id:3578 560 4 15 dungeon_id:3579 576 8 16 __for_begin:3366 "
                        "608 8 14 __for_end:3366 640 8 16 __for_begin:3398 672 8 14 __for_end:3398 704 8 16 __for_begin:3"
                        "442 736 8 14 __for_end:3442 768 8 16 __for_begin:3466 800 8 14 __for_end:3466 832 8 16 __for_beg"
                        "in:3490 864 8 14 __for_end:3490 896 8 9 <unknown> 928 8 9 <unknown> 960 8 16 __for_begin:3540 99"
                        "2 8 14 __for_end:3540 1024 8 16 __for_begin:3576 1056 8 14 __for_end:3576 1088 16 19 lua_avatar_"
                        "obj:3376 1120 16 16 lua_npc_obj:3390 1152 16 20 lua_monster_obj:3434 1184 16 17 lua_item_obj:345"
                        "8 1216 16 19 lua_gadget_obj:3482 1248 16 22 lua_quest_var_obj:3509 1280 16 27 lua_transmit_point"
                        "_obj:3532 1312 16 32 lua_enter_dungeon_point_obj:3566 1344 24 19 lua_npc_vector:3393 1408 24 20 "
                        "lua_monster_vec:3437 1472 24 17 lua_item_vec:3461 1536 24 19 lua_gadget_vec:3485 1600 24 18 ques"
                        "t_var_vec:3512 1664 24 15 lua_tp_vec:3535 1728 24 15 lua_tp_vec:3569 1792 32 9 <unknown> 1856 32"
                        " 9 <unknown> 1920 32 9 <unknown> 1984 32 9 <unknown> 2048 32 9 <unknown> 2112 32 9 <unknown> 217"
                        "6 32 9 <unknown> 2240 32 9 <unknown> 2304 32 9 <unknown> 2368 32 9 <unknown> 2432 32 9 <unknown>"
                        " 2496 32 9 <unknown> 2560 32 9 <unknown> 2624 32 9 <unknown> 2688 32 9 <unknown> 2752 32 9 <unkn"
                        "own> 2816 32 9 <unknown> 2880 32 9 <unknown> 2944 32 9 <unknown> 3008 32 9 <unknown> 3072 32 9 <"
                        "unknown> 3136 32 9 <unknown> 3200 32 9 <unknown> 3264 32 9 <unknown> 3328 32 9 <unknown> 3392 32"
                        " 9 <unknown> 3456 32 9 <unknown> 3520 32 9 <unknown> 3584 32 12 pos_str:3544 3648 32 9 <unknown>"
                        " 3712 32 9 <unknown> 3776 32 9 <unknown> 3840 32 9 <unknown> 3904 32 9 <unknown> 3968 32 9 <unkn"
                        "own> 4032 32 9 <unknown> 4096 32 12 pos_str:3580 4160 32 9 <unknown> 4224 32 9 <unknown> 4288 32"
                        " 9 <unknown> 4352 32 9 <unknown> 4416 32 9 <unknown> 4480 64 23 npc_postion_config:3411 4576 64 "
                        "11 config:3553 4672 64 11 config:3595";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::fillQuestScriptConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234753535;
  v5[536862723] = -234753535;
  v5[536862724] = -234753535;
  v5[536862725] = -234753535;
  v5[536862726] = -234753535;
  v5[536862727] = -234753535;
  v5[536862728] = -234753535;
  v5[536862729] = -234753535;
  v5[536862730] = -234753535;
  v5[536862731] = -234753535;
  v5[536862732] = -234753535;
  v5[536862733] = -234556927;
  v5[536862734] = -234556924;
  v5[536862735] = -234556924;
  v5[536862736] = -234556924;
  v5[536862737] = -234556924;
  v5[536862738] = -218959360;
  v5[536862739] = -218959360;
  v5[536862740] = -218959360;
  v5[536862741] = -218959360;
  v5[536862742] = -218959360;
  v5[536862743] = -218959360;
  v5[536862744] = -218959360;
  v5[536862745] = -218959360;
  v5[536862746] = -218959360;
  v5[536862747] = -218959360;
  v5[536862748] = -218959360;
  v5[536862749] = -218959360;
  v5[536862750] = -218959360;
  v5[536862751] = -218959360;
  v5[536862752] = -218959360;
  v5[536862753] = -218959360;
  v5[536862754] = -219021312;
  v5[536862755] = -219021312;
  v5[536862756] = -219021312;
  v5[536862757] = -219021312;
  v5[536862758] = -219021312;
  v5[536862759] = -219021312;
  v5[536862760] = -219021312;
  v5[536862761] = -219021312;
  v5[536862762] = -234881024;
  v5[536862763] = -218959118;
  v5[536862764] = -234881024;
  v5[536862765] = -218959118;
  v5[536862766] = -234881024;
  v5[536862767] = -218959118;
  v5[536862768] = -234881024;
  v5[536862769] = -218959118;
  v5[536862770] = -234881024;
  v5[536862771] = -218959118;
  v5[536862772] = -234881024;
  v5[536862773] = -218959118;
  v5[536862774] = -234881024;
  v5[536862775] = -218959118;
  v5[536862777] = -218959118;
  v5[536862779] = -218959118;
  v5[536862781] = -218959118;
  v5[536862783] = -218959118;
  v5[536862785] = -218959118;
  v5[536862787] = -218959118;
  v5[536862789] = -218959118;
  v5[536862791] = -218959118;
  v5[536862793] = -218959118;
  v5[536862795] = -218959118;
  v5[536862797] = -218959118;
  v5[536862799] = -218959118;
  v5[536862801] = -218959118;
  v5[536862803] = -218959118;
  v5[536862805] = -218959118;
  v5[536862807] = -218959118;
  v5[536862809] = -218959118;
  v5[536862811] = -218959118;
  v5[536862813] = -218959118;
  v5[536862815] = -218959118;
  v5[536862817] = -218959118;
  v5[536862819] = -218959118;
  v5[536862821] = -218959118;
  v5[536862823] = -218959118;
  v5[536862825] = -218959118;
  v5[536862827] = -218959118;
  v5[536862829] = -218959118;
  v5[536862831] = -218959118;
  v5[536862833] = -218959118;
  v5[536862835] = -218959118;
  v5[536862837] = -218959118;
  v5[536862839] = -218959118;
  v5[536862841] = -218959118;
  v5[536862843] = -218959118;
  v5[536862845] = -218959118;
  v5[536862847] = -218959118;
  v5[536862849] = -218959118;
  v5[536862851] = -218959118;
  v5[536862853] = -218959118;
  v5[536862855] = -218959118;
  v5[536862857] = -218959118;
  v5[536862859] = -218959118;
  v5[536862862] = -218959118;
  v5[536862865] = -218959118;
  v5[536862868] = -202116109;
  ret = 0;
  if ( *(_BYTE *)(((v3 + 576) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 576, lua_obj_map);
  *(std::map<std::string,luabind::adl::object>::const_iterator *)(v3 + 576) = std::map<std::string,luabind::adl::object>::begin(lua_obj_map);
  if ( *(_BYTE *)(((v3 + 608) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 608, lua_obj_map);
  *(std::map<std::string,luabind::adl::object>::const_iterator *)(v3 + 608) = std::map<std::string,luabind::adl::object>::end(lua_obj_map);
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> >::_Self *)(v3 + 576),
            (const std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> >::_Self *)(v3 + 608)) )
  {
    v171 = std::_Rb_tree_const_iterator<std::pair<std::string const,luabind::adl::object>>::operator*((const std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> > *const)(v3 + 576));
    quest_id_str = std::get<0ul,std::string const,luabind::adl::object>(v171);
    lua_quest_obj = (std::tuple_element<1,const std::pair<const std::string,luabind::adl::object> >::type *)std::get<1ul,std::string const,luabind::adl::object>(v171);
    *(_BYTE *)(((v3 + 432) >> 3) + 0x7FFF8000) = 4;
    if ( *(_BYTE *)(((v3 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 432) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v3 + 432, v3 + 608);
    *(_DWORD *)(v3 + 432) = 0;
    if ( !common::tools::StringUtils::strToNum<unsigned int>(quest_id_str, (unsigned int *)(v3 + 432), 1) )
    {
      quest_script_config = std::map<unsigned int,QuestScriptConfig>::operator[](
                              fill_mapa,
                              (const std::map<unsigned int,QuestScriptConfig>::key_type *)(v3 + 432));
      *(_WORD *)(((v3 + 1088) >> 3) + 0x7FFF8000) = 0;
      luabind::adl::object::object((luabind::adl::object *const)(v3 + 1088));
      *(_DWORD *)(((v3 + 1856) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v3 + 48);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v3 + 1856),
        "avatar",
        (const std::allocator<char> *)(v3 + 48));
      v8 = ScriptUtil::getTableValue(
             &ScriptUtil::no_exception_instance,
             lua_quest_obj,
             (const std::string *)(v3 + 1856),
             (luabind::adl::object *)(v3 + 1088)) == 0;
      std::string::~string((void *)(v3 + 1856));
      *(_DWORD *)(((v3 + 1856) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v3 + 48);
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      if ( v8 )
      {
        *(_DWORD *)(((v3 + 1920) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v3 + 64);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v3 + 1920),
          "scene_id",
          (const std::allocator<char> *)(v3 + 64));
        ScriptUtil::getTableValue<unsigned int>(
          &ScriptUtil::no_exception_instance,
          (const luabind::adl::object *)(v3 + 1088),
          (const std::string *)(v3 + 1920),
          &quest_script_config->avatar_config.scene_id);
        std::string::~string((void *)(v3 + 1920));
        *(_DWORD *)(((v3 + 1920) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v3 + 64);
        *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
        *(_DWORD *)(((v3 + 1984) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v3 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v3 + 1984),
          off_1A536440,
          (const std::allocator<char> *)(v3 + 80));
        v9 = ScriptUtil::getTableValue<std::string>(
               &ScriptUtil::no_exception_instance,
               (const luabind::adl::object *)(v3 + 1088),
               (const std::string *)(v3 + 1984),
               &quest_script_config->avatar_config.pos_str) != 0;
        std::string::~string((void *)(v3 + 1984));
        *(_DWORD *)(((v3 + 1984) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v3 + 80);
        *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v9 )
        {
          *(_DWORD *)(((v3 + 2048) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 2048) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 2079) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 96 + 127) & 7) >= *(_BYTE *)(((v3 + 2079) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 2048, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 2048),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "fillQuestScriptConfig",
            3382);
          v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v3 + 2048),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v11 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v10, (const char (*)[35])byte_1A541CA0);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v3 + 432));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2048));
          *(_DWORD *)(((v3 + 2048) >> 3) + 0x7FFF8000) = -117901064;
          ret = -1;
LABEL_257:
          luabind::adl::object::~object((luabind::adl::object *const)(v3 + 1088));
          goto LABEL_258;
        }
        *(_DWORD *)(((v3 + 2112) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v3 + 96);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v3 + 2112),
          "offline_dungeon_id",
          (const std::allocator<char> *)(v3 + 96));
        ScriptUtil::getTableValue<unsigned int>(
          &ScriptUtil::no_exception_instance,
          (const luabind::adl::object *)(v3 + 1088),
          (const std::string *)(v3 + 2112),
          &quest_script_config->avatar_config.offline_dungeon_id);
        std::string::~string((void *)(v3 + 2112));
        *(_DWORD *)(((v3 + 2112) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v3 + 96);
        *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = -8;
        v12 = ((_BYTE)quest_script_config + 4) & 7;
        v13 = (*(_BYTE *)(((unsigned __int64)&quest_script_config->avatar_config.is_loaded >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v12 >= *(_BYTE *)(((unsigned __int64)&quest_script_config->avatar_config.is_loaded >> 3) + 0x7FFF8000));
        if ( (_BYTE)v13 )
          __asan_report_store1(&quest_script_config->avatar_config.is_loaded, v12, v13);
        quest_script_config->avatar_config.is_loaded = 1;
      }
      *(_WORD *)(((v3 + 1120) >> 3) + 0x7FFF8000) = 0;
      luabind::adl::object::object((luabind::adl::object *const)(v3 + 1120));
      *(_DWORD *)(((v3 + 2176) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v3 + 112);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v3 + 2176),
        "npcs",
        (const std::allocator<char> *)(v3 + 112));
      v14 = ScriptUtil::getTableValue(
              &ScriptUtil::no_exception_instance,
              lua_quest_obj,
              (const std::string *)(v3 + 2176),
              (luabind::adl::object *)(v3 + 1120)) == 0;
      std::string::~string((void *)(v3 + 2176));
      *(_DWORD *)(((v3 + 2176) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v3 + 112);
      *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = -8;
      if ( !v14 )
        goto LABEL_68;
      v15 = ((v3 + 1344) >> 3) + 2147450880;
      *(_WORD *)v15 = 0;
      *(_BYTE *)(v15 + 2) = 0;
      std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v3 + 1344));
      v16 = (char *)(v3 + 1120);
      if ( ScriptUtil::getTableValueAsVector<luabind::adl::object>(
             &ScriptUtil::no_exception_instance,
             (const luabind::adl::object *)(v3 + 1120),
             (std::vector<luabind::adl::object> *)(v3 + 1344)) )
      {
        v17 = 0;
      }
      else
      {
        __for_range_0 = (std::vector<luabind::adl::object> *)(v3 + 1344);
        *(_BYTE *)(((v3 + 640) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v3 + 640) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 640, v16);
        *(std::vector<luabind::adl::object>::iterator *)(v3 + 640) = std::vector<luabind::adl::object>::begin(__for_range_0);
        *(_BYTE *)(((v3 + 672) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v3 + 672) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 672, v16);
        *(std::vector<luabind::adl::object>::iterator *)(v3 + 672) = std::vector<luabind::adl::object>::end(__for_range_0);
        while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                  (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 640),
                  (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 672)) )
        {
          lua_obj = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 640));
          *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) = 4;
          if ( *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_store4(v3 + 448, v3 + 672);
          *(_DWORD *)(v3 + 448) = 0;
          *(_DWORD *)(((v3 + 2240) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v3 + 128);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v3 + 2240),
            "id",
            (const std::allocator<char> *)(v3 + 128));
          v18 = (char *)(v3 + 2240);
          NumFromLuaStrOr = getNumFromLuaStrOrNum<unsigned int>(lua_obj, (const std::string *)(v3 + 2240));
          v20 = *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000);
          if ( v20 != 0 && v20 <= 3 )
          {
            LOBYTE(v18) = v20 != 0;
            __asan_report_store4(v3 + 448, v18);
          }
          *(_DWORD *)(v3 + 448) = NumFromLuaStrOr;
          std::string::~string((void *)(v3 + 2240));
          *(_DWORD *)(((v3 + 2240) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v3 + 128);
          *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = -8;
          if ( *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_load4(v3 + 448);
          if ( *(_DWORD *)(v3 + 448) )
          {
            v25 = (char *)(v3 + 448);
            npc_config = std::map<unsigned int,QuestNpcScriptConfig>::operator[](
                           &quest_script_config->npc_config_map,
                           (const std::map<unsigned int,QuestNpcScriptConfig>::key_type *)(v3 + 448));
            if ( *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 448);
            v26 = *(_DWORD *)(v3 + 448);
            v27 = *(_BYTE *)(((unsigned __int64)npc_config >> 3) + 0x7FFF8000);
            if ( v27 != 0 && v27 <= 3 )
            {
              LOBYTE(v25) = v27 != 0;
              __asan_report_store4(npc_config, v25);
            }
            npc_config->npc_id = v26;
            v28 = (_DWORD *)(((v3 + 4480) >> 3) + 2147450880);
            *v28 = 0;
            v28[1] = 0;
            QuestNpcScriptConfigPosition::QuestNpcScriptConfigPosition((QuestNpcScriptConfigPosition *const)(v3 + 4480));
            *(_DWORD *)(((v3 + 2368) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v3 + 144);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v3 + 2368),
              "scene_id",
              (const std::allocator<char> *)(v3 + 144));
            ScriptUtil::getTableValue<unsigned int>(
              &ScriptUtil::no_exception_instance,
              lua_obj,
              (const std::string *)(v3 + 2368),
              (unsigned int *)(v3 + 4536));
            std::string::~string((void *)(v3 + 2368));
            *(_DWORD *)(((v3 + 2368) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v3 + 144);
            *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = -8;
            *(_DWORD *)(((v3 + 2432) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v3 + 160);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v3 + 2432),
              "room_id",
              (const std::allocator<char> *)(v3 + 160));
            ScriptUtil::getTableValue<unsigned int>(
              &ScriptUtil::no_exception_instance,
              lua_obj,
              (const std::string *)(v3 + 2432),
              (unsigned int *)(v3 + 4540));
            std::string::~string((void *)(v3 + 2432));
            *(_DWORD *)(((v3 + 2432) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v3 + 160);
            *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = -8;
            p_scene_config_mgr = &LuaConfigMgr::getConfig(this)->txt_config_mgr.scene_config_mgr;
            if ( *(_BYTE *)(((v3 + 4536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 4536) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 4536);
            scene_config = data::SceneExcelConfigMgrBase::findSceneExcelConfig(
                             p_scene_config_mgr,
                             *(_DWORD *)(v3 + 4536));
            if ( !scene_config )
              goto LABEL_59;
            if ( *(_BYTE *)(((unsigned __int64)&scene_config->type >> 3) + 0x7FFF8000) != 0
              && (char)((((_BYTE)scene_config + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&scene_config->type >> 3)
                                                                          + 0x7FFF8000) )
            {
              __asan_report_load4(&scene_config->type);
            }
            if ( scene_config->type != SCENE_ROOM )
              goto LABEL_59;
            if ( *(_BYTE *)(((v3 + 4540) >> 3) + 0x7FFF8000) != 0
              && (char)(((v3 - 68) & 7) + 3) >= *(_BYTE *)(((v3 + 4540) >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v3 + 4540);
            }
            if ( !*(_DWORD *)(v3 + 4540) )
            {
              *(_DWORD *)(((v3 + 2496) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 2496) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 2527) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 96 + 63) & 7) >= *(_BYTE *)(((v3 + 2527) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 2496, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 2496),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "fillQuestScriptConfig",
                3419);
              v30 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 2496),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v31 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                      v30,
                      (const char (*)[20])byte_1A541E00);
              v32 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                      v31,
                      (const char (*)[11])" scene id:");
              v33 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v32,
                      (const unsigned int *)(v3 + 4536));
              v34 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                      v33,
                      (const char (*)[11])" quest id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v34,
                (const unsigned int *)(v3 + 432));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2496));
              *(_DWORD *)(((v3 + 2496) >> 3) + 0x7FFF8000) = -117901064;
              ret = -1;
            }
            else
            {
LABEL_59:
              *(_DWORD *)(((v3 + 2560) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v3 + 176);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v3 + 2560),
                off_1A536440,
                (const std::allocator<char> *)(v3 + 176));
              v35 = ScriptUtil::getTableValue<std::string>(
                      &ScriptUtil::no_exception_instance,
                      lua_obj,
                      (const std::string *)(v3 + 2560),
                      (std::string *)(v3 + 4480)) != 0;
              std::string::~string((void *)(v3 + 2560));
              *(_DWORD *)(((v3 + 2560) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v3 + 176);
              *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = -8;
              if ( v35 )
              {
                *(_DWORD *)(((v3 + 2624) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v3 + 2624) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v3 + 2655) >> 3) + 0x7FFF8000) != 0
                  && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 2655) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v3 + 2624, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v3 + 2624),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "fillQuestScriptConfig",
                  3426);
                v36 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v3 + 2624),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v37 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                        v36,
                        (const char (*)[15])byte_1A541E80);
                v38 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                        v37,
                        (const std::string *)(v3 + 4480));
                v39 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                        v38,
                        (const char (*)[11])" quest id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v39,
                  (const unsigned int *)(v3 + 432));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2624));
                *(_DWORD *)(((v3 + 2624) >> 3) + 0x7FFF8000) = -117901064;
                ret = -1;
              }
              else
              {
                v40 = std::move<QuestNpcScriptConfigPosition &>((QuestNpcScriptConfigPosition *)(v3 + 4480));
                std::vector<QuestNpcScriptConfigPosition>::emplace_back<QuestNpcScriptConfigPosition>(
                  &npc_config->pos_list,
                  v40,
                  v41);
              }
            }
            QuestNpcScriptConfigPosition::~QuestNpcScriptConfigPosition((QuestNpcScriptConfigPosition *const)(v3 + 4480));
          }
          else
          {
            *(_DWORD *)(((v3 + 2304) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 2304) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 2335) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 96 + 127) & 7) >= *(_BYTE *)(((v3 + 2335) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 2304, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 2304),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "fillQuestScriptConfig",
              3404);
            v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 2304),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v22 = common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(
                    v21,
                    (const char (*)[18])byte_1A541D40);
            v23 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v22,
                    (const unsigned int *)(v3 + 448));
            v24 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v23, (const char (*)[11])" quest id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v24,
              (const unsigned int *)(v3 + 432));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2304));
            *(_DWORD *)(((v3 + 2304) >> 3) + 0x7FFF8000) = -117901064;
            ret = -1;
          }
          *(_BYTE *)(((v3 + 448) >> 3) + 0x7FFF8000) = -8;
          v42 = (_DWORD *)(((v3 + 4480) >> 3) + 2147450880);
          *v42 = -117901064;
          v42[1] = -117901064;
          __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 640));
        }
        *(_BYTE *)(((v3 + 640) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v3 + 672) >> 3) + 0x7FFF8000) = -8;
        v17 = 1;
      }
      std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v3 + 1344));
      v43 = ((v3 + 1344) >> 3) + 2147450880;
      *(_WORD *)v43 = -1800;
      *(_BYTE *)(v43 + 2) = -8;
      if ( v17 == 1 )
      {
LABEL_68:
        *(_WORD *)(((v3 + 1152) >> 3) + 0x7FFF8000) = 0;
        luabind::adl::object::object((luabind::adl::object *const)(v3 + 1152));
        *(_DWORD *)(((v3 + 2688) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v3 + 192);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v3 + 2688),
          "monsters",
          (const std::allocator<char> *)(v3 + 192));
        v44 = ScriptUtil::getTableValue(
                &ScriptUtil::no_exception_instance,
                lua_quest_obj,
                (const std::string *)(v3 + 2688),
                (luabind::adl::object *)(v3 + 1152)) == 0;
        std::string::~string((void *)(v3 + 2688));
        *(_DWORD *)(((v3 + 2688) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v3 + 192);
        *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) = -8;
        if ( !v44 )
          goto LABEL_95;
        v45 = ((v3 + 1408) >> 3) + 2147450880;
        *(_WORD *)v45 = 0;
        *(_BYTE *)(v45 + 2) = 0;
        std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v3 + 1408));
        v46 = (char *)(v3 + 1152);
        if ( ScriptUtil::getTableValueAsVector<luabind::adl::object>(
               &ScriptUtil::no_exception_instance,
               (const luabind::adl::object *)(v3 + 1152),
               (std::vector<luabind::adl::object> *)(v3 + 1408)) )
        {
          v47 = 0;
        }
        else
        {
          __for_range_1 = (std::vector<luabind::adl::object> *)(v3 + 1408);
          *(_BYTE *)(((v3 + 704) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v3 + 704) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v3 + 704, v46);
          *(std::vector<luabind::adl::object>::iterator *)(v3 + 704) = std::vector<luabind::adl::object>::begin(__for_range_1);
          *(_BYTE *)(((v3 + 736) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v3 + 736) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v3 + 736, v46);
          *(std::vector<luabind::adl::object>::iterator *)(v3 + 736) = std::vector<luabind::adl::object>::end(__for_range_1);
          while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                    (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 704),
                    (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 736)) )
          {
            lua_obj_0 = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 704));
            *(_BYTE *)(((v3 + 464) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 464) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 464, v3 + 736);
            *(_DWORD *)(v3 + 464) = 0;
            *(_DWORD *)(((v3 + 2752) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v3 + 208);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v3 + 2752),
              "id",
              (const std::allocator<char> *)(v3 + 208));
            v48 = (char *)(v3 + 2752);
            v49 = getNumFromLuaStrOrNum<unsigned int>(lua_obj_0, (const std::string *)(v3 + 2752));
            v50 = *(_BYTE *)(((v3 + 464) >> 3) + 0x7FFF8000);
            if ( v50 != 0 && v50 <= 3 )
            {
              LOBYTE(v48) = v50 != 0;
              __asan_report_store4(v3 + 464, v48);
            }
            *(_DWORD *)(v3 + 464) = v49;
            std::string::~string((void *)(v3 + 2752));
            *(_DWORD *)(((v3 + 2752) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v3 + 208);
            *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) = -8;
            if ( *(_BYTE *)(((v3 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 464) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 464);
            if ( *(_DWORD *)(v3 + 464) )
            {
              v55 = (char *)(v3 + 464);
              monster_config = std::map<unsigned int,QuestMonsterScriptConfig>::operator[](
                                 &quest_script_config->monster_config_map,
                                 (const std::map<unsigned int,QuestMonsterScriptConfig>::key_type *)(v3 + 464));
              if ( *(_BYTE *)(((v3 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 464) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v3 + 464);
              v56 = *(_DWORD *)(v3 + 464);
              v57 = *(_BYTE *)(((unsigned __int64)monster_config >> 3) + 0x7FFF8000);
              if ( v57 != 0 && (char)(((unsigned __int8)monster_config & 7) + 3) >= v57 )
              {
                LOBYTE(v55) = v57 != 0;
                __asan_report_store4(monster_config, v55);
              }
              monster_config->monster_id = v56;
            }
            else
            {
              *(_DWORD *)(((v3 + 2816) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 2816) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 2847) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 96 + 127) & 7) >= *(_BYTE *)(((v3 + 2847) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 2816, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 2816),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "fillQuestScriptConfig",
                3448);
              v51 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 2816),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v52 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                      v51,
                      (const char (*)[22])byte_1A541EC0);
              v53 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v52,
                      (const unsigned int *)(v3 + 464));
              v54 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                      v53,
                      (const char (*)[11])" quest id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v54,
                (const unsigned int *)(v3 + 432));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 2816));
              *(_DWORD *)(((v3 + 2816) >> 3) + 0x7FFF8000) = -117901064;
              ret = -1;
            }
            *(_BYTE *)(((v3 + 464) >> 3) + 0x7FFF8000) = -8;
            __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 704));
          }
          *(_BYTE *)(((v3 + 704) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v3 + 736) >> 3) + 0x7FFF8000) = -8;
          v47 = 1;
        }
        std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v3 + 1408));
        v58 = ((v3 + 1408) >> 3) + 2147450880;
        *(_WORD *)v58 = -1800;
        *(_BYTE *)(v58 + 2) = -8;
        if ( v47 == 1 )
        {
LABEL_95:
          *(_WORD *)(((v3 + 1184) >> 3) + 0x7FFF8000) = 0;
          luabind::adl::object::object((luabind::adl::object *const)(v3 + 1184));
          *(_DWORD *)(((v3 + 2880) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v3 + 224);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v3 + 2880),
            "items",
            (const std::allocator<char> *)(v3 + 224));
          v59 = ScriptUtil::getTableValue(
                  &ScriptUtil::no_exception_instance,
                  lua_quest_obj,
                  (const std::string *)(v3 + 2880),
                  (luabind::adl::object *)(v3 + 1184)) == 0;
          std::string::~string((void *)(v3 + 2880));
          *(_DWORD *)(((v3 + 2880) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v3 + 224);
          *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) = -8;
          if ( !v59 )
            goto LABEL_122;
          v60 = ((v3 + 1472) >> 3) + 2147450880;
          *(_WORD *)v60 = 0;
          *(_BYTE *)(v60 + 2) = 0;
          std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v3 + 1472));
          v61 = (char *)(v3 + 1184);
          if ( ScriptUtil::getTableValueAsVector<luabind::adl::object>(
                 &ScriptUtil::no_exception_instance,
                 (const luabind::adl::object *)(v3 + 1184),
                 (std::vector<luabind::adl::object> *)(v3 + 1472)) )
          {
            v62 = 0;
          }
          else
          {
            __for_range_2 = (std::vector<luabind::adl::object> *)(v3 + 1472);
            *(_BYTE *)(((v3 + 768) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((v3 + 768) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v3 + 768, v61);
            *(std::vector<luabind::adl::object>::iterator *)(v3 + 768) = std::vector<luabind::adl::object>::begin(__for_range_2);
            *(_BYTE *)(((v3 + 800) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((v3 + 800) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v3 + 800, v61);
            *(std::vector<luabind::adl::object>::iterator *)(v3 + 800) = std::vector<luabind::adl::object>::end(__for_range_2);
            while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                      (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 768),
                      (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 800)) )
            {
              lua_obj_1 = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 768));
              *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) = 4;
              if ( *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_store4(v3 + 480, v3 + 800);
              *(_DWORD *)(v3 + 480) = 0;
              *(_DWORD *)(((v3 + 2944) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v3 + 240);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v3 + 2944),
                "id",
                (const std::allocator<char> *)(v3 + 240));
              v63 = (char *)(v3 + 2944);
              v64 = getNumFromLuaStrOrNum<unsigned int>(lua_obj_1, (const std::string *)(v3 + 2944));
              v65 = *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000);
              if ( v65 != 0 && v65 <= 3 )
              {
                LOBYTE(v63) = v65 != 0;
                __asan_report_store4(v3 + 480, v63);
              }
              *(_DWORD *)(v3 + 480) = v64;
              std::string::~string((void *)(v3 + 2944));
              *(_DWORD *)(((v3 + 2944) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v3 + 240);
              *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) = -8;
              if ( *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v3 + 480);
              if ( *(_DWORD *)(v3 + 480) )
              {
                v70 = (char *)(v3 + 480);
                item_config = std::map<unsigned int,QuestItemScriptConfig>::operator[](
                                &quest_script_config->item_config_map,
                                (const std::map<unsigned int,QuestItemScriptConfig>::key_type *)(v3 + 480));
                if ( *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_load4(v3 + 480);
                v71 = *(_DWORD *)(v3 + 480);
                v72 = *(_BYTE *)(((unsigned __int64)item_config >> 3) + 0x7FFF8000);
                if ( v72 != 0 && (char)(((unsigned __int8)item_config & 7) + 3) >= v72 )
                {
                  LOBYTE(v70) = v72 != 0;
                  __asan_report_store4(item_config, v70);
                }
                item_config->item_id = v71;
              }
              else
              {
                *(_DWORD *)(((v3 + 3008) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v3 + 3008) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v3 + 3039) >> 3) + 0x7FFF8000) != 0
                  && (char)((v3 - 96 + 63) & 7) >= *(_BYTE *)(((v3 + 3039) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v3 + 3008, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v3 + 3008),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "fillQuestScriptConfig",
                  3472);
                v66 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v3 + 3008),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v67 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(
                        v66,
                        (const char (*)[19])byte_1A541F40);
                v68 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v67,
                        (const unsigned int *)(v3 + 480));
                v69 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                        v68,
                        (const char (*)[11])" quest id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v69,
                  (const unsigned int *)(v3 + 432));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3008));
                *(_DWORD *)(((v3 + 3008) >> 3) + 0x7FFF8000) = -117901064;
                ret = -1;
              }
              *(_BYTE *)(((v3 + 480) >> 3) + 0x7FFF8000) = -8;
              __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 768));
            }
            *(_BYTE *)(((v3 + 768) >> 3) + 0x7FFF8000) = -8;
            *(_BYTE *)(((v3 + 800) >> 3) + 0x7FFF8000) = -8;
            v62 = 1;
          }
          std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v3 + 1472));
          v73 = ((v3 + 1472) >> 3) + 2147450880;
          *(_WORD *)v73 = -1800;
          *(_BYTE *)(v73 + 2) = -8;
          if ( v62 == 1 )
          {
LABEL_122:
            *(_WORD *)(((v3 + 1216) >> 3) + 0x7FFF8000) = 0;
            luabind::adl::object::object((luabind::adl::object *const)(v3 + 1216));
            *(_DWORD *)(((v3 + 3072) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v3 + 256) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v3 + 256);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v3 + 3072),
              "gadgets",
              (const std::allocator<char> *)(v3 + 256));
            v74 = ScriptUtil::getTableValue(
                    &ScriptUtil::no_exception_instance,
                    lua_quest_obj,
                    (const std::string *)(v3 + 3072),
                    (luabind::adl::object *)(v3 + 1216)) == 0;
            std::string::~string((void *)(v3 + 3072));
            *(_DWORD *)(((v3 + 3072) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v3 + 256);
            *(_BYTE *)(((v3 + 256) >> 3) + 0x7FFF8000) = -8;
            if ( !v74 )
              goto LABEL_159;
            v75 = ((v3 + 1536) >> 3) + 2147450880;
            *(_WORD *)v75 = 0;
            *(_BYTE *)(v75 + 2) = 0;
            std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v3 + 1536));
            v76 = (char *)(v3 + 1216);
            if ( ScriptUtil::getTableValueAsVector<luabind::adl::object>(
                   &ScriptUtil::no_exception_instance,
                   (const luabind::adl::object *)(v3 + 1216),
                   (std::vector<luabind::adl::object> *)(v3 + 1536)) )
            {
              v77 = 0;
            }
            else
            {
              __for_range_3 = (std::vector<luabind::adl::object> *)(v3 + 1536);
              *(_BYTE *)(((v3 + 832) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 832) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 832, v76);
              *(std::vector<luabind::adl::object>::iterator *)(v3 + 832) = std::vector<luabind::adl::object>::begin(__for_range_3);
              *(_BYTE *)(((v3 + 864) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 864) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 864, v76);
              *(std::vector<luabind::adl::object>::iterator *)(v3 + 864) = std::vector<luabind::adl::object>::end(__for_range_3);
              while ( 1 )
              {
                v78 = (char *)(v3 + 864);
                if ( !__gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                        (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 832),
                        (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 864)) )
                  break;
                lua_obj_2 = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 832));
                *(_BYTE *)(((v3 + 496) >> 3) + 0x7FFF8000) = 4;
                if ( *(_BYTE *)(((v3 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 496) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_store4(v3 + 496, v78);
                *(_DWORD *)(v3 + 496) = 0;
                *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000) = 4;
                if ( *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_store4(v3 + 512, v78);
                *(_DWORD *)(v3 + 512) = 0;
                *(_DWORD *)(((v3 + 3136) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v3 + 272) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v3 + 272);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v3 + 3136),
                  "id",
                  (const std::allocator<char> *)(v3 + 272));
                v79 = (char *)(v3 + 3136);
                v80 = getNumFromLuaStrOrNum<unsigned int>(lua_obj_2, (const std::string *)(v3 + 3136));
                v81 = *(_BYTE *)(((v3 + 496) >> 3) + 0x7FFF8000);
                if ( v81 != 0 && v81 <= 3 )
                {
                  LOBYTE(v79) = v81 != 0;
                  __asan_report_store4(v3 + 496, v79);
                }
                *(_DWORD *)(v3 + 496) = v80;
                std::string::~string((void *)(v3 + 3136));
                *(_DWORD *)(((v3 + 3136) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v3 + 272);
                *(_BYTE *)(((v3 + 272) >> 3) + 0x7FFF8000) = -8;
                *(_DWORD *)(((v3 + 3200) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v3 + 288) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v3 + 288);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v3 + 3200),
                  "chest_drop_id",
                  (const std::allocator<char> *)(v3 + 288));
                v84 = (char *)(v3 + 3200);
                v82 = getNumFromLuaStrOrNum<unsigned int>(lua_obj_2, (const std::string *)(v3 + 3200));
                v83 = *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000);
                LOBYTE(v84) = v83 != 0;
                if ( v83 != 0 && v83 <= 3 )
                  __asan_report_store4(v3 + 512, v84);
                *(_DWORD *)(v3 + 512) = v82;
                std::string::~string((void *)(v3 + 3200));
                *(_DWORD *)(((v3 + 3200) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v3 + 288);
                *(_BYTE *)(((v3 + 288) >> 3) + 0x7FFF8000) = -8;
                if ( *(_BYTE *)(((v3 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 496) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_load4(v3 + 496);
                if ( *(_DWORD *)(v3 + 496) )
                {
                  *(_BYTE *)(((v3 + 896) >> 3) + 0x7FFF8000) = 0;
                  if ( *(_BYTE *)(((v3 + 896) >> 3) + 0x7FFF8000) )
                    __asan_report_store8(v3 + 896, v84);
                  *(std::pair<unsigned int,unsigned int> *)(v3 + 896) = std::make_pair<unsigned int &,unsigned int &>(
                                                                          (unsigned int *)(v3 + 496),
                                                                          (unsigned int *)(v3 + 512));
                  v89 = (char *)(v3 + 896);
                  gadget_config = std::map<std::pair<unsigned int,unsigned int>,QuestGadgetScriptConfig>::operator[](
                                    &quest_script_config->gadget_config_map,
                                    (std::map<std::pair<unsigned int,unsigned int>,QuestGadgetScriptConfig>::key_type *)(v3 + 896));
                  *(_BYTE *)(((v3 + 896) >> 3) + 0x7FFF8000) = -8;
                  if ( *(_BYTE *)(((v3 + 496) >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((v3 + 496) >> 3) + 0x7FFF8000) <= 3 )
                  {
                    __asan_report_load4(v3 + 496);
                  }
                  v90 = *(_DWORD *)(v3 + 496);
                  v91 = *(_BYTE *)(((unsigned __int64)gadget_config >> 3) + 0x7FFF8000);
                  if ( v91 != 0 && (char)(((unsigned __int8)gadget_config & 7) + 3) >= v91 )
                  {
                    LOBYTE(v89) = v91 != 0;
                    __asan_report_store4(gadget_config, v89);
                  }
                  gadget_config->gadget_id = v90;
                  if ( *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000) <= 3 )
                  {
                    __asan_report_load4(v3 + 512);
                  }
                  v92 = *(_DWORD *)(v3 + 512);
                  v93 = *(_BYTE *)(((unsigned __int64)&gadget_config->chest_drop_id >> 3) + 0x7FFF8000);
                  if ( v93 != 0 && (char)((((_BYTE)gadget_config + 4) & 7) + 3) >= v93 )
                  {
                    LOBYTE(v89) = v93 != 0;
                    __asan_report_store4(&gadget_config->chest_drop_id, v89);
                  }
                  gadget_config->chest_drop_id = v92;
                }
                else
                {
                  *(_DWORD *)(((v3 + 3264) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v3 + 3264) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v3 + 3295) >> 3) + 0x7FFF8000) != 0
                    && (char)((v3 - 96 + 63) & 7) >= *(_BYTE *)(((v3 + 3295) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v3 + 3264, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v3 + 3264),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "fillQuestScriptConfig",
                    3498);
                  v85 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v3 + 3264),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  v86 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                          v85,
                          (const char (*)[21])byte_1A541F80);
                  v87 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v86,
                          (const unsigned int *)(v3 + 496));
                  v88 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                          v87,
                          (const char (*)[11])" quest id:");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v88,
                    (const unsigned int *)(v3 + 432));
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3264));
                  *(_DWORD *)(((v3 + 3264) >> 3) + 0x7FFF8000) = -117901064;
                  ret = -1;
                }
                *(_BYTE *)(((v3 + 496) >> 3) + 0x7FFF8000) = -8;
                *(_BYTE *)(((v3 + 512) >> 3) + 0x7FFF8000) = -8;
                __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 832));
              }
              *(_BYTE *)(((v3 + 832) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v3 + 864) >> 3) + 0x7FFF8000) = -8;
              v77 = 1;
            }
            std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v3 + 1536));
            v94 = ((v3 + 1536) >> 3) + 2147450880;
            *(_WORD *)v94 = -1800;
            *(_BYTE *)(v94 + 2) = -8;
            if ( v77 == 1 )
            {
LABEL_159:
              *(_WORD *)(((v3 + 1248) >> 3) + 0x7FFF8000) = 0;
              luabind::adl::object::object((luabind::adl::object *const)(v3 + 1248));
              *(_DWORD *)(((v3 + 3328) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v3 + 304) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v3 + 304);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v3 + 3328),
                "quest_var",
                (const std::allocator<char> *)(v3 + 304));
              v95 = ScriptUtil::getTableValue(
                      &ScriptUtil::no_exception_instance,
                      lua_quest_obj,
                      (const std::string *)(v3 + 3328),
                      (luabind::adl::object *)(v3 + 1248)) == 0;
              std::string::~string((void *)(v3 + 3328));
              *(_DWORD *)(((v3 + 3328) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v3 + 304);
              *(_BYTE *)(((v3 + 304) >> 3) + 0x7FFF8000) = -8;
              if ( !v95 )
                goto LABEL_172;
              v96 = ((v3 + 1600) >> 3) + 2147450880;
              *(_WORD *)v96 = 0;
              *(_BYTE *)(v96 + 2) = 0;
              std::vector<int>::vector((std::vector<int> *const)(v3 + 1600));
              if ( ScriptUtil::getTableValueAsVector<int>(
                     &ScriptUtil::no_exception_instance,
                     (const luabind::adl::object *)(v3 + 1248),
                     (std::vector<int> *)(v3 + 1600)) )
              {
                *(_DWORD *)(((v3 + 3456) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v3 + 3456) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v3 + 3487) >> 3) + 0x7FFF8000) != 0
                  && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 3487) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v3 + 3456, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v3 + 3456),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "fillQuestScriptConfig",
                  3526);
                v104 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                         (common::milog::MiLogStream *const)(v3 + 3456),
                         (const char (*)[16])"[CONFIG_ERROR] ");
                v105 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                         v104,
                         (const char (*)[20])byte_1A542060);
                v106 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                         v105,
                         (const char (*)[11])" quest id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v106,
                  (const unsigned int *)(v3 + 432));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3456));
                *(_DWORD *)(((v3 + 3456) >> 3) + 0x7FFF8000) = -117901064;
                ret = -1;
                v102 = 0;
              }
              else if ( std::vector<int>::size((const std::vector<int> *const)(v3 + 1600)) == 5 )
              {
                v103 = std::move<std::vector<int> &>((std::vector<int> *)(v3 + 1600));
                std::vector<int>::operator=(&quest_script_config->quest_var, v103);
                v102 = 1;
              }
              else
              {
                *(_DWORD *)(((v3 + 3392) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v3 + 3392) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v3 + 3423) >> 3) + 0x7FFF8000) != 0
                  && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 3423) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v3 + 3392, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v3 + 3392),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "fillQuestScriptConfig",
                  3517);
                v97 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v3 + 3392),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v98 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
                        v97,
                        (const char (*)[54])byte_1A542000);
                *(_BYTE *)(((v3 + 928) >> 3) + 0x7FFF8000) = 0;
                v99 = std::vector<int>::size((const std::vector<int> *const)(v3 + 1600));
                if ( *(_BYTE *)(((v3 + 928) >> 3) + 0x7FFF8000) )
                  v99 = __asan_report_store8(v3 + 928, byte_1A542000);
                *(_QWORD *)(v3 + 928) = v99;
                v100 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                         v98,
                         (const unsigned __int64 *)(v3 + 928));
                v101 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                         v100,
                         (const char (*)[11])" quest id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v101,
                  (const unsigned int *)(v3 + 432));
                *(_BYTE *)(((v3 + 928) >> 3) + 0x7FFF8000) = -8;
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3392));
                *(_DWORD *)(((v3 + 3392) >> 3) + 0x7FFF8000) = -117901064;
                ret = -1;
                v102 = 0;
              }
              std::vector<int>::~vector((std::vector<int> *const)(v3 + 1600));
              v107 = ((v3 + 1600) >> 3) + 2147450880;
              *(_WORD *)v107 = -1800;
              *(_BYTE *)(v107 + 2) = -8;
              if ( v102 == 1 )
              {
LABEL_172:
                *(_WORD *)(((v3 + 1280) >> 3) + 0x7FFF8000) = 0;
                luabind::adl::object::object((luabind::adl::object *const)(v3 + 1280));
                *(_DWORD *)(((v3 + 3520) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v3 + 320) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v3 + 320);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v3 + 3520),
                  "transmit_points",
                  (const std::allocator<char> *)(v3 + 320));
                v108 = ScriptUtil::getTableValue(
                         &ScriptUtil::no_exception_instance,
                         lua_quest_obj,
                         (const std::string *)(v3 + 3520),
                         (luabind::adl::object *)(v3 + 1280)) == 0;
                std::string::~string((void *)(v3 + 3520));
                *(_DWORD *)(((v3 + 3520) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v3 + 320);
                *(_BYTE *)(((v3 + 320) >> 3) + 0x7FFF8000) = -8;
                if ( !v108 )
                  goto LABEL_206;
                v109 = ((v3 + 1664) >> 3) + 2147450880;
                *(_WORD *)v109 = 0;
                *(_BYTE *)(v109 + 2) = 0;
                std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v3 + 1664));
                v110 = (char *)(v3 + 1280);
                if ( ScriptUtil::getTableValueAsVector<luabind::adl::object>(
                       &ScriptUtil::no_exception_instance,
                       (const luabind::adl::object *)(v3 + 1280),
                       (std::vector<luabind::adl::object> *)(v3 + 1664)) )
                {
                  v111 = 0;
                }
                else
                {
                  __for_range_4 = (std::vector<luabind::adl::object> *)(v3 + 1664);
                  *(_BYTE *)(((v3 + 960) >> 3) + 0x7FFF8000) = 0;
                  if ( *(_BYTE *)(((v3 + 960) >> 3) + 0x7FFF8000) )
                    __asan_report_store8(v3 + 960, v110);
                  *(std::vector<luabind::adl::object>::iterator *)(v3 + 960) = std::vector<luabind::adl::object>::begin(__for_range_4);
                  *(_BYTE *)(((v3 + 992) >> 3) + 0x7FFF8000) = 0;
                  if ( *(_BYTE *)(((v3 + 992) >> 3) + 0x7FFF8000) )
                    __asan_report_store8(v3 + 992, v110);
                  *(std::vector<luabind::adl::object>::iterator *)(v3 + 992) = std::vector<luabind::adl::object>::end(__for_range_4);
                  while ( __gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                            (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 960),
                            (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 992)) )
                  {
                    lua_obj_3 = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 960));
                    *(_BYTE *)(((v3 + 528) >> 3) + 0x7FFF8000) = 4;
                    if ( *(_BYTE *)(((v3 + 528) >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((v3 + 528) >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_store4(v3 + 528, v3 + 992);
                    }
                    *(_DWORD *)(v3 + 528) = 0;
                    *(_DWORD *)(((v3 + 3584) >> 3) + 0x7FFF8000) = 0;
                    std::string::basic_string(v3 + 3584);
                    *(_DWORD *)(((v3 + 3648) >> 3) + 0x7FFF8000) = 0;
                    *(_BYTE *)(((v3 + 336) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v3 + 336);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v3 + 3648),
                      "point_id",
                      (const std::allocator<char> *)(v3 + 336));
                    v112 = (char *)(v3 + 3648);
                    v113 = getNumFromLuaStrOrNum<unsigned int>(lua_obj_3, (const std::string *)(v3 + 3648));
                    v114 = *(_BYTE *)(((v3 + 528) >> 3) + 0x7FFF8000);
                    if ( v114 != 0 && v114 <= 3 )
                    {
                      LOBYTE(v112) = v114 != 0;
                      __asan_report_store4(v3 + 528, v112);
                    }
                    *(_DWORD *)(v3 + 528) = v113;
                    std::string::~string((void *)(v3 + 3648));
                    *(_DWORD *)(((v3 + 3648) >> 3) + 0x7FFF8000) = -117901064;
                    std::allocator<char>::~allocator(v3 + 336);
                    *(_BYTE *)(((v3 + 336) >> 3) + 0x7FFF8000) = -8;
                    *(_DWORD *)(((v3 + 3712) >> 3) + 0x7FFF8000) = 0;
                    *(_BYTE *)(((v3 + 352) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v3 + 352);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v3 + 3712),
                      "scene_id",
                      (const std::allocator<char> *)(v3 + 352));
                    scene_id = getNumFromLuaStrOrNum<unsigned int>(lua_obj_3, (const std::string *)(v3 + 3712));
                    std::string::~string((void *)(v3 + 3712));
                    *(_DWORD *)(((v3 + 3712) >> 3) + 0x7FFF8000) = -117901064;
                    std::allocator<char>::~allocator(v3 + 352);
                    *(_BYTE *)(((v3 + 352) >> 3) + 0x7FFF8000) = -8;
                    if ( *(_BYTE *)(((v3 + 528) >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((v3 + 528) >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_load4(v3 + 528);
                    }
                    if ( *(_DWORD *)(v3 + 528) )
                    {
                      v119 = (_DWORD *)(((v3 + 4576) >> 3) + 2147450880);
                      *v119 = 0;
                      v119[1] = 0;
                      QuestTransmitPointScriptConfig::QuestTransmitPointScriptConfig((QuestTransmitPointScriptConfig *const)(v3 + 4576));
                      v120 = (((_BYTE)v3 - 96 + 68) & 7u) + 3;
                      if ( *(_BYTE *)(((v3 + 4580) >> 3) + 0x7FFF8000) != 0
                        && (char)(((v3 - 96 + 68) & 7) + 3) >= *(_BYTE *)(((v3 + 4580) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store4(v3 + 4580, v120);
                      }
                      *(_DWORD *)(v3 + 4580) = scene_id;
                      if ( *(_BYTE *)(((v3 + 528) >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((v3 + 528) >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(v3 + 528);
                      }
                      v121 = *(_DWORD *)(v3 + 528);
                      v122 = *(_BYTE *)(((v3 + 4576) >> 3) + 0x7FFF8000);
                      if ( v122 != 0 && v122 <= 3 )
                      {
                        LOBYTE(v120) = v122 != 0;
                        __asan_report_store4(v3 + 4576, v120);
                      }
                      *(_DWORD *)(v3 + 4576) = v121;
                      *(_DWORD *)(((v3 + 3840) >> 3) + 0x7FFF8000) = 0;
                      *(_BYTE *)(((v3 + 368) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v3 + 368);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v3 + 3840),
                        off_1A536440,
                        (const std::allocator<char> *)(v3 + 368));
                      v123 = ScriptUtil::getTableValue<std::string>(
                               &ScriptUtil::no_exception_instance,
                               lua_obj_3,
                               (const std::string *)(v3 + 3840),
                               (std::string *)(v3 + 4584)) != 0;
                      std::string::~string((void *)(v3 + 3840));
                      *(_DWORD *)(((v3 + 3840) >> 3) + 0x7FFF8000) = -117901064;
                      std::allocator<char>::~allocator(v3 + 368);
                      *(_BYTE *)(((v3 + 368) >> 3) + 0x7FFF8000) = -8;
                      if ( v123 )
                      {
                        *(_DWORD *)(((v3 + 3904) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v3 + 3904) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v3 + 3935) >> 3) + 0x7FFF8000) != 0
                          && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 3935) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v3 + 3904, 32LL);
                        }
                        common::milog::MiLogStream::create(
                          (common::milog::MiLogStream *)(v3 + 3904),
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/lua_config_mgr.cpp",
                          "fillQuestScriptConfig",
                          3558);
                        v124 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                 (common::milog::MiLogStream *const)(v3 + 3904),
                                 (const char (*)[16])"[CONFIG_ERROR] ");
                        v125 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                                 v124,
                                 (const char (*)[15])byte_1A541E80);
                        v126 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                                 v125,
                                 (const std::string *)(v3 + 4584));
                        v127 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                                 v126,
                                 (const char (*)[11])" quest id:");
                        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v127,
                          (const unsigned int *)(v3 + 432));
                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3904));
                        *(_DWORD *)(((v3 + 3904) >> 3) + 0x7FFF8000) = -117901064;
                        ret = -1;
                      }
                      else
                      {
                        v128 = std::move<QuestTransmitPointScriptConfig &>((QuestTransmitPointScriptConfig *)(v3 + 4576));
                        std::map<unsigned int,QuestTransmitPointScriptConfig>::emplace<unsigned int &,QuestTransmitPointScriptConfig>(
                          &quest_script_config->transmit_point_map,
                          (unsigned int *)(v3 + 528),
                          v128,
                          v129,
                          v130);
                      }
                      QuestTransmitPointScriptConfig::~QuestTransmitPointScriptConfig((QuestTransmitPointScriptConfig *const)(v3 + 4576));
                    }
                    else
                    {
                      *(_DWORD *)(((v3 + 3776) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v3 + 3776) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v3 + 3807) >> 3) + 0x7FFF8000) != 0
                        && (char)((v3 - 96 + 63) & 7) >= *(_BYTE *)(((v3 + 3807) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v3 + 3776, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v3 + 3776),
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/lua_config_mgr.cpp",
                        "fillQuestScriptConfig",
                        3549);
                      v115 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                               (common::milog::MiLogStream *const)(v3 + 3776),
                               (const char (*)[16])"[CONFIG_ERROR] ");
                      v116 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                               v115,
                               (const char (*)[20])byte_1A542120);
                      v117 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                               v116,
                               (const unsigned int *)(v3 + 528));
                      v118 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                               v117,
                               (const char (*)[11])" quest id:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v118,
                        (const unsigned int *)(v3 + 432));
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 3776));
                      *(_DWORD *)(((v3 + 3776) >> 3) + 0x7FFF8000) = -117901064;
                      ret = -1;
                    }
                    std::string::~string((void *)(v3 + 3584));
                    *(_BYTE *)(((v3 + 528) >> 3) + 0x7FFF8000) = -8;
                    *(_DWORD *)(((v3 + 3584) >> 3) + 0x7FFF8000) = -117901064;
                    v131 = (_DWORD *)(((v3 + 4576) >> 3) + 2147450880);
                    *v131 = -117901064;
                    v131[1] = -117901064;
                    __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 960));
                  }
                  *(_BYTE *)(((v3 + 960) >> 3) + 0x7FFF8000) = -8;
                  *(_BYTE *)(((v3 + 992) >> 3) + 0x7FFF8000) = -8;
                  v111 = 1;
                }
                std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v3 + 1664));
                v132 = ((v3 + 1664) >> 3) + 2147450880;
                *(_WORD *)v132 = -1800;
                *(_BYTE *)(v132 + 2) = -8;
                if ( v111 == 1 )
                {
LABEL_206:
                  *(_WORD *)(((v3 + 1312) >> 3) + 0x7FFF8000) = 0;
                  luabind::adl::object::object((luabind::adl::object *const)(v3 + 1312));
                  *(_DWORD *)(((v3 + 3968) >> 3) + 0x7FFF8000) = 0;
                  *(_BYTE *)(((v3 + 384) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<char>::allocator(v3 + 384);
                  std::string::basic_string<std::allocator<char>>(
                    (std::string *const)(v3 + 3968),
                    "transmit_points_enter_dungeon",
                    (const std::allocator<char> *)(v3 + 384));
                  v133 = ScriptUtil::getTableValue(
                           &ScriptUtil::no_exception_instance,
                           lua_quest_obj,
                           (const std::string *)(v3 + 3968),
                           (luabind::adl::object *)(v3 + 1312)) == 0;
                  std::string::~string((void *)(v3 + 3968));
                  *(_DWORD *)(((v3 + 3968) >> 3) + 0x7FFF8000) = -117901064;
                  std::allocator<char>::~allocator(v3 + 384);
                  *(_BYTE *)(((v3 + 384) >> 3) + 0x7FFF8000) = -8;
                  if ( v133 )
                  {
                    v134 = ((v3 + 1728) >> 3) + 2147450880;
                    *(_WORD *)v134 = 0;
                    *(_BYTE *)(v134 + 2) = 0;
                    std::vector<luabind::adl::object>::vector((std::vector<luabind::adl::object> *const)(v3 + 1728));
                    v135 = (char *)(v3 + 1312);
                    if ( ScriptUtil::getTableValueAsVector<luabind::adl::object>(
                           &ScriptUtil::no_exception_instance,
                           (const luabind::adl::object *)(v3 + 1312),
                           (std::vector<luabind::adl::object> *)(v3 + 1728)) )
                    {
                      *(_DWORD *)(((v3 + 4032) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v3 + 4032) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v3 + 4063) >> 3) + 0x7FFF8000) != 0
                        && (char)((v3 - 96 + 63) & 7) >= *(_BYTE *)(((v3 + 4063) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v3 + 4032, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v3 + 4032),
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/lua_config_mgr.cpp",
                        "fillQuestScriptConfig",
                        3572);
                      v136 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                               (common::milog::MiLogStream *const)(v3 + 4032),
                               (const char (*)[16])"[CONFIG_ERROR] ");
                      v137 = common::milog::MiLogStream::operator<<<char [57],(char *[57])0>(
                               v136,
                               (const char (*)[57])byte_1A5421A0);
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v137,
                        (const unsigned int *)(v3 + 432));
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4032));
                      *(_DWORD *)(((v3 + 4032) >> 3) + 0x7FFF8000) = -117901064;
                      ret = -1;
                    }
                    else
                    {
                      __for_range_5 = (std::vector<luabind::adl::object> *)(v3 + 1728);
                      *(_BYTE *)(((v3 + 1024) >> 3) + 0x7FFF8000) = 0;
                      if ( *(_BYTE *)(((v3 + 1024) >> 3) + 0x7FFF8000) )
                        __asan_report_store8(v3 + 1024, v135);
                      *(std::vector<luabind::adl::object>::iterator *)(v3 + 1024) = std::vector<luabind::adl::object>::begin(__for_range_5);
                      *(_BYTE *)(((v3 + 1056) >> 3) + 0x7FFF8000) = 0;
                      if ( *(_BYTE *)(((v3 + 1056) >> 3) + 0x7FFF8000) )
                        __asan_report_store8(v3 + 1056, v135);
                      *(std::vector<luabind::adl::object>::iterator *)(v3 + 1056) = std::vector<luabind::adl::object>::end(__for_range_5);
                      while ( 1 )
                      {
                        v138 = (char *)(v3 + 1056);
                        if ( !__gnu_cxx::operator!=<luabind::adl::object *,std::vector<luabind::adl::object>>(
                                (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 1024),
                                (const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *)(v3 + 1056)) )
                          break;
                        lua_obj_4 = __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator*((const __gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 1024));
                        *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) = 4;
                        if ( *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) != 0
                          && *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) <= 3 )
                        {
                          __asan_report_store4(v3 + 544, v138);
                        }
                        *(_DWORD *)(v3 + 544) = 0;
                        *(_BYTE *)(((v3 + 560) >> 3) + 0x7FFF8000) = 4;
                        if ( *(_BYTE *)(((v3 + 560) >> 3) + 0x7FFF8000) != 0
                          && *(_BYTE *)(((v3 + 560) >> 3) + 0x7FFF8000) <= 3 )
                        {
                          __asan_report_store4(v3 + 560, v138);
                        }
                        *(_DWORD *)(v3 + 560) = 0;
                        *(_DWORD *)(((v3 + 4096) >> 3) + 0x7FFF8000) = 0;
                        std::string::basic_string(v3 + 4096);
                        *(_DWORD *)(((v3 + 4160) >> 3) + 0x7FFF8000) = 0;
                        *(_BYTE *)(((v3 + 400) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v3 + 400);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v3 + 4160),
                          "point_id",
                          (const std::allocator<char> *)(v3 + 400));
                        ScriptUtil::getTableValue<unsigned int,char const(&)[11],unsigned int &>(
                          &ScriptUtil::no_exception_instance,
                          lua_obj_4,
                          (const std::string *)(v3 + 4160),
                          (unsigned int *)(v3 + 544),
                          (const char (*)[11])"dungeon_id",
                          (unsigned int *)(v3 + 560),
                          v167,
                          (unsigned int *)fill_mapa);
                        std::string::~string((void *)(v3 + 4160));
                        *(_DWORD *)(((v3 + 4160) >> 3) + 0x7FFF8000) = -117901064;
                        std::allocator<char>::~allocator(v3 + 400);
                        *(_BYTE *)(((v3 + 400) >> 3) + 0x7FFF8000) = -8;
                        if ( *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) != 0
                          && *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) <= 3 )
                        {
                          __asan_report_load4(v3 + 544);
                        }
                        if ( *(_DWORD *)(v3 + 544) )
                        {
                          p_dungeon_config_mgr = &LuaConfigMgr::getConfig(this)->txt_config_mgr.dungeon_config_mgr;
                          if ( *(_BYTE *)(((v3 + 560) >> 3) + 0x7FFF8000) != 0
                            && *(_BYTE *)(((v3 + 560) >> 3) + 0x7FFF8000) <= 3 )
                          {
                            __asan_report_load4(v3 + 560);
                          }
                          v144 = *(unsigned int *)(v3 + 560);
                          if ( data::DungeonExcelConfigMgrBase::findDungeonExcelConfig(p_dungeon_config_mgr, v144) )
                          {
                            v151 = (_DWORD *)(((v3 + 4672) >> 3) + 2147450880);
                            *v151 = 0;
                            v151[1] = 0;
                            QuestEnterDungeonPointScriptConfig::QuestEnterDungeonPointScriptConfig((QuestEnterDungeonPointScriptConfig *const)(v3 + 4672));
                            if ( *(_BYTE *)(((v3 + 560) >> 3) + 0x7FFF8000) != 0
                              && *(_BYTE *)(((v3 + 560) >> 3) + 0x7FFF8000) <= 3 )
                            {
                              __asan_report_load4(v3 + 560);
                            }
                            v152 = *(_DWORD *)(v3 + 560);
                            v153 = *(_BYTE *)(((v3 + 4676) >> 3) + 0x7FFF8000);
                            if ( v153 != 0 && (char)(((v3 + 68) & 7) + 3) >= v153 )
                            {
                              LOBYTE(v144) = v153 != 0;
                              __asan_report_store4(v3 + 4676, v144);
                            }
                            *(_DWORD *)(v3 + 4676) = v152;
                            if ( *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) != 0
                              && *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) <= 3 )
                            {
                              __asan_report_load4(v3 + 544);
                            }
                            v154 = *(_DWORD *)(v3 + 544);
                            v155 = *(_BYTE *)(((v3 + 4672) >> 3) + 0x7FFF8000);
                            if ( v155 != 0 && v155 <= 3 )
                            {
                              LOBYTE(v144) = v155 != 0;
                              __asan_report_store4(v3 + 4672, v144);
                            }
                            *(_DWORD *)(v3 + 4672) = v154;
                            *(_DWORD *)(((v3 + 4352) >> 3) + 0x7FFF8000) = 0;
                            *(_BYTE *)(((v3 + 416) >> 3) + 0x7FFF8000) = 1;
                            std::allocator<char>::allocator(v3 + 416);
                            std::string::basic_string<std::allocator<char>>(
                              (std::string *const)(v3 + 4352),
                              off_1A536440,
                              (const std::allocator<char> *)(v3 + 416));
                            v156 = ScriptUtil::getTableValue<std::string>(
                                     &ScriptUtil::no_exception_instance,
                                     lua_obj_4,
                                     (const std::string *)(v3 + 4352),
                                     (std::string *)(v3 + 4680)) != 0;
                            std::string::~string((void *)(v3 + 4352));
                            *(_DWORD *)(((v3 + 4352) >> 3) + 0x7FFF8000) = -117901064;
                            std::allocator<char>::~allocator(v3 + 416);
                            *(_BYTE *)(((v3 + 416) >> 3) + 0x7FFF8000) = -8;
                            if ( v156 )
                            {
                              *(_DWORD *)(((v3 + 4416) >> 3) + 0x7FFF8000) = 0;
                              if ( *(char *)(((v3 + 4416) >> 3) + 0x7FFF8000) < 0
                                || *(_BYTE *)(((v3 + 4447) >> 3) + 0x7FFF8000) != 0
                                && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 4447) >> 3) + 0x7FFF8000) )
                              {
                                __asan_report_store_n(v3 + 4416, 32LL);
                              }
                              common::milog::MiLogStream::create(
                                (common::milog::MiLogStream *)(v3 + 4416),
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/lua_config_mgr.cpp",
                                "fillQuestScriptConfig",
                                3600);
                              v157 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                       (common::milog::MiLogStream *const)(v3 + 4416),
                                       (const char (*)[16])"[CONFIG_ERROR] ");
                              v158 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                                       v157,
                                       (const char (*)[15])byte_1A541E80);
                              v159 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                                       v158,
                                       (const std::string *)(v3 + 4680));
                              v160 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                                       v159,
                                       (const char (*)[11])" quest id:");
                              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                v160,
                                (const unsigned int *)(v3 + 432));
                              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4416));
                              *(_DWORD *)(((v3 + 4416) >> 3) + 0x7FFF8000) = -117901064;
                              ret = -1;
                            }
                            else
                            {
                              v161 = std::move<QuestEnterDungeonPointScriptConfig &>((QuestEnterDungeonPointScriptConfig *)(v3 + 4672));
                              std::map<unsigned int,QuestEnterDungeonPointScriptConfig>::emplace<unsigned int &,QuestEnterDungeonPointScriptConfig>(
                                &quest_script_config->enter_dungeon_point_map,
                                (unsigned int *)(v3 + 544),
                                v161,
                                v162,
                                v163);
                            }
                            QuestEnterDungeonPointScriptConfig::~QuestEnterDungeonPointScriptConfig((QuestEnterDungeonPointScriptConfig *const)(v3 + 4672));
                          }
                          else
                          {
                            *(_DWORD *)(((v3 + 4288) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v3 + 4288) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v3 + 4319) >> 3) + 0x7FFF8000) != 0
                              && (char)((v3 - 96 + 63) & 7) >= *(_BYTE *)(((v3 + 4319) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v3 + 4288, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v3 + 4288),
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/lua_config_mgr.cpp",
                              "fillQuestScriptConfig",
                              3591);
                            v145 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                     (common::milog::MiLogStream *const)(v3 + 4288),
                                     (const char (*)[16])"[CONFIG_ERROR] ");
                            v146 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                                     v145,
                                     (const char (*)[22])byte_1A542240);
                            v147 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                     v146,
                                     (const unsigned int *)(v3 + 560));
                            v148 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                                     v147,
                                     (const char (*)[11])" point_id:");
                            v149 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                     v148,
                                     (const unsigned int *)(v3 + 544));
                            v150 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                                     v149,
                                     (const char (*)[11])" quest id:");
                            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                              v150,
                              (const unsigned int *)(v3 + 432));
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4288));
                            *(_DWORD *)(((v3 + 4288) >> 3) + 0x7FFF8000) = -117901064;
                            ret = -1;
                          }
                        }
                        else
                        {
                          *(_DWORD *)(((v3 + 4224) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v3 + 4224) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v3 + 4255) >> 3) + 0x7FFF8000) != 0
                            && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 4255) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v3 + 4224, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v3 + 4224),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/lua_config_mgr.cpp",
                            "fillQuestScriptConfig",
                            3584);
                          v139 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                   (common::milog::MiLogStream *const)(v3 + 4224),
                                   (const char (*)[16])"[CONFIG_ERROR] ");
                          v140 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                                   v139,
                                   (const char (*)[20])byte_1A542120);
                          v141 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                   v140,
                                   (const unsigned int *)(v3 + 544));
                          v142 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                                   v141,
                                   (const char (*)[11])" quest id:");
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v142,
                            (const unsigned int *)(v3 + 432));
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 4224));
                          *(_DWORD *)(((v3 + 4224) >> 3) + 0x7FFF8000) = -117901064;
                          ret = -1;
                        }
                        std::string::~string((void *)(v3 + 4096));
                        *(_BYTE *)(((v3 + 544) >> 3) + 0x7FFF8000) = -8;
                        *(_BYTE *)(((v3 + 560) >> 3) + 0x7FFF8000) = -8;
                        *(_DWORD *)(((v3 + 4096) >> 3) + 0x7FFF8000) = -117901064;
                        v164 = (_DWORD *)(((v3 + 4672) >> 3) + 2147450880);
                        *v164 = -117901064;
                        v164[1] = -117901064;
                        __gnu_cxx::__normal_iterator<luabind::adl::object *,std::vector<luabind::adl::object>>::operator++((__gnu_cxx::__normal_iterator<luabind::adl::object*,std::vector<luabind::adl::object> > *const)(v3 + 1024));
                      }
                      *(_BYTE *)(((v3 + 1024) >> 3) + 0x7FFF8000) = -8;
                      *(_BYTE *)(((v3 + 1056) >> 3) + 0x7FFF8000) = -8;
                    }
                    std::vector<luabind::adl::object>::~vector((std::vector<luabind::adl::object> *const)(v3 + 1728));
                    v165 = ((v3 + 1728) >> 3) + 2147450880;
                    *(_WORD *)v165 = -1800;
                    *(_BYTE *)(v165 + 2) = -8;
                  }
                  luabind::adl::object::~object((luabind::adl::object *const)(v3 + 1312));
                }
                luabind::adl::object::~object((luabind::adl::object *const)(v3 + 1280));
              }
              luabind::adl::object::~object((luabind::adl::object *const)(v3 + 1248));
            }
            luabind::adl::object::~object((luabind::adl::object *const)(v3 + 1216));
          }
          luabind::adl::object::~object((luabind::adl::object *const)(v3 + 1184));
        }
        luabind::adl::object::~object((luabind::adl::object *const)(v3 + 1152));
      }
      luabind::adl::object::~object((luabind::adl::object *const)(v3 + 1120));
      goto LABEL_257;
    }
    *(_DWORD *)(((v3 + 1792) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v3 + 1792) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 1823) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 96 + 127) & 7) >= *(_BYTE *)(((v3 + 1823) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 1792, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v3 + 1792),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "fillQuestScriptConfig",
      3371);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v3 + 1792),
           (const char (*)[16])"[CONFIG_ERROR] ");
    v7 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(v6, (const char (*)[34])byte_1A541C00);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, quest_id_str);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1792));
    *(_DWORD *)(((v3 + 1792) >> 3) + 0x7FFF8000) = -117901064;
    ret = -1;
LABEL_258:
    *(_BYTE *)(((v3 + 432) >> 3) + 0x7FFF8000) = -8;
    *(_WORD *)(((v3 + 1088) >> 3) + 0x7FFF8000) = -1800;
    *(_WORD *)(((v3 + 1120) >> 3) + 0x7FFF8000) = -1800;
    *(_WORD *)(((v3 + 1152) >> 3) + 0x7FFF8000) = -1800;
    *(_WORD *)(((v3 + 1184) >> 3) + 0x7FFF8000) = -1800;
    *(_WORD *)(((v3 + 1216) >> 3) + 0x7FFF8000) = -1800;
    *(_WORD *)(((v3 + 1248) >> 3) + 0x7FFF8000) = -1800;
    *(_WORD *)(((v3 + 1280) >> 3) + 0x7FFF8000) = -1800;
    *(_WORD *)(((v3 + 1312) >> 3) + 0x7FFF8000) = -1800;
    std::_Rb_tree_const_iterator<std::pair<std::string const,luabind::adl::object>>::operator++((std::_Rb_tree_const_iterator<std::pair<const std::string,luabind::adl::object> > *const)(v3 + 576));
  }
  if ( v192 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF824C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 596) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_7(v3, 4768LL, v192);
  }
  return ret;
};

// Line 3613: range 000000000F314188-000000000F315560
int32_t __cdecl LuaConfigMgr::loadParentQuestScriptConfig(
        const LuaConfigMgr *const this,
        LuaScriptPtr *p_quest_script_ptr,
        ParentQuestScriptConfig *output_config)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r15d
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // r15
  bool v8; // r15
  unsigned __int64 v9; // rax
  unsigned __int64 v10; // rax
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // r15
  bool v12; // r15
  unsigned __int64 v13; // rax
  unsigned __int64 v14; // rax
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // r15
  bool v16; // r15
  unsigned __int64 v17; // rax
  unsigned __int64 v18; // rax
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // r15
  unsigned __int64 v20; // rax
  unsigned __int64 v21; // rax
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // r15
  unsigned __int64 v23; // rax
  unsigned __int64 v24; // rax
  int32_t ret; // [rsp+2Ch] [rbp-574h]
  char v28[1392]; // [rsp+30h] [rbp-570h] BYREF

  v3 = (unsigned __int64)v28;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_5(1344LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "29 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 9"
                        " <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 16 26 lua_finish_action_obj:3620 208 16 33 lu"
                        "a_finish_action_obj_server:3623 240 16 24 lua_fail_action_obj:3638 272 16 31 lua_fail_action_obj"
                        "_server:3641 304 16 26 lua_cancel_action_obj:3655 336 16 33 lua_cancel_action_obj_server:3658 36"
                        "8 16 19 lua_rewind_obj:3673 400 16 18 lua_quest_obj:3687 432 32 9 <unknown> 496 32 9 <unknown> 5"
                        "60 32 9 <unknown> 624 32 9 <unknown> 688 32 9 <unknown> 752 32 9 <unknown> 816 32 9 <unknown> 88"
                        "0 32 9 <unknown> 944 48 16 lua_obj_map:3626 1024 48 16 lua_obj_map:3644 1104 48 16 lua_obj_map:3"
                        "661 1184 48 16 lua_obj_map:3676 1264 48 16 lua_obj_map:3690";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::loadParentQuestScriptConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234753535;
  v5[536862723] = -234753535;
  v5[536862724] = -234753535;
  v5[536862725] = 61953;
  v5[536862726] = 62194;
  v5[536862727] = 62194;
  v5[536862728] = 62194;
  v5[536862729] = 62194;
  v5[536862730] = 62194;
  v5[536862731] = 62194;
  v5[536862732] = 62194;
  v5[536862733] = 62194;
  v5[536862734] = -219021312;
  v5[536862735] = 62194;
  v5[536862736] = -219021312;
  v5[536862737] = 62194;
  v5[536862738] = -219021312;
  v5[536862739] = 62194;
  v5[536862740] = -219021312;
  v5[536862741] = 62194;
  v5[536862742] = -219021312;
  v5[536862743] = 62194;
  v5[536862744] = -219021312;
  v5[536862745] = 62194;
  v5[536862746] = -219021312;
  v5[536862747] = 62194;
  v5[536862748] = -219021312;
  v5[536862749] = 62194;
  v5[536862751] = -218959118;
  v5[536862753] = -219021312;
  v5[536862754] = 62194;
  v5[536862756] = -218959118;
  v5[536862758] = -219021312;
  v5[536862759] = 62194;
  v5[536862761] = -202116109;
  if ( std::operator==<LuaScript>(0LL, p_quest_script_ptr) )
  {
    v6 = -1;
  }
  else
  {
    ret = 0;
    luabind::adl::object::object((luabind::adl::object *const)(v3 + 176));
    v7 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_quest_script_ptr);
    std::allocator<char>::allocator(v3 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v3 + 432),
      "finish_action",
      (const std::allocator<char> *)(v3 + 48));
    LOBYTE(v7) = LuaScript::getGlobalVariable(v7, (const std::string *)(v3 + 432), (luabind::adl::object *)(v3 + 176)) == 0;
    std::string::~string((void *)(v3 + 432));
    *(_DWORD *)(((v3 + 432) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v3 + 48);
    *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( (_BYTE)v7 )
    {
      *(_WORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
      luabind::adl::object::object((luabind::adl::object *const)(v3 + 208));
      *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v3 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v3 + 496),
        "SERVER",
        (const std::allocator<char> *)(v3 + 64));
      v8 = ScriptUtil::getTableValue(
             &ScriptUtil::no_exception_instance,
             (const luabind::adl::object *)(v3 + 176),
             (const std::string *)(v3 + 496),
             (luabind::adl::object *)(v3 + 208)) == 0;
      std::string::~string((void *)(v3 + 496));
      *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v3 + 64);
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v8 )
      {
        v9 = ((v3 + 944) >> 3) + 2147450880;
        *(_DWORD *)v9 = 0;
        *(_WORD *)(v9 + 4) = 0;
        std::map<std::string,luabind::adl::object>::map((std::map<std::string,luabind::adl::object> *const)(v3 + 944));
        if ( !ScriptUtil::getTableValueAsMap<std::string,luabind::adl::object>(
                &ScriptUtil::no_exception_instance,
                (const luabind::adl::object *)(v3 + 208),
                (std::map<std::string,luabind::adl::object> *)(v3 + 944))
          && LuaConfigMgr::fillParentScriptAction(
               this,
               (const std::map<std::string,luabind::adl::object> *)(v3 + 944),
               &output_config->finish_action_vec) )
        {
          ret = -1;
        }
        std::map<std::string,luabind::adl::object>::~map((std::map<std::string,luabind::adl::object> *const)(v3 + 944));
        v10 = ((v3 + 944) >> 3) + 2147450880;
        *(_DWORD *)v10 = -117901064;
        *(_WORD *)(v10 + 4) = -1800;
      }
      luabind::adl::object::~object((luabind::adl::object *const)(v3 + 208));
      *(_WORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -1800;
    }
    *(_WORD *)(((v3 + 240) >> 3) + 0x7FFF8000) = 0;
    luabind::adl::object::object((luabind::adl::object *const)(v3 + 240));
    v11 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_quest_script_ptr);
    *(_DWORD *)(((v3 + 560) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v3 + 80);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v3 + 560),
      "fail_action",
      (const std::allocator<char> *)(v3 + 80));
    LOBYTE(v11) = LuaScript::getGlobalVariable(v11, (const std::string *)(v3 + 560), (luabind::adl::object *)(v3 + 240)) == 0;
    std::string::~string((void *)(v3 + 560));
    *(_DWORD *)(((v3 + 560) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v3 + 80);
    *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
    if ( (_BYTE)v11 )
    {
      *(_WORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
      luabind::adl::object::object((luabind::adl::object *const)(v3 + 272));
      *(_DWORD *)(((v3 + 624) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v3 + 96);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v3 + 624),
        "SERVER",
        (const std::allocator<char> *)(v3 + 96));
      v12 = ScriptUtil::getTableValue(
              &ScriptUtil::no_exception_instance,
              (const luabind::adl::object *)(v3 + 240),
              (const std::string *)(v3 + 624),
              (luabind::adl::object *)(v3 + 272)) == 0;
      std::string::~string((void *)(v3 + 624));
      *(_DWORD *)(((v3 + 624) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v3 + 96);
      *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = -8;
      if ( v12 )
      {
        v13 = ((v3 + 1024) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_WORD *)(v13 + 4) = 0;
        std::map<std::string,luabind::adl::object>::map((std::map<std::string,luabind::adl::object> *const)(v3 + 1024));
        if ( !ScriptUtil::getTableValueAsMap<std::string,luabind::adl::object>(
                &ScriptUtil::no_exception_instance,
                (const luabind::adl::object *)(v3 + 272),
                (std::map<std::string,luabind::adl::object> *)(v3 + 1024))
          && LuaConfigMgr::fillParentScriptAction(
               this,
               (const std::map<std::string,luabind::adl::object> *)(v3 + 1024),
               &output_config->fail_action_vec) )
        {
          ret = -1;
        }
        std::map<std::string,luabind::adl::object>::~map((std::map<std::string,luabind::adl::object> *const)(v3 + 1024));
        v14 = ((v3 + 1024) >> 3) + 2147450880;
        *(_DWORD *)v14 = -117901064;
        *(_WORD *)(v14 + 4) = -1800;
      }
      luabind::adl::object::~object((luabind::adl::object *const)(v3 + 272));
      *(_WORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -1800;
    }
    *(_WORD *)(((v3 + 304) >> 3) + 0x7FFF8000) = 0;
    luabind::adl::object::object((luabind::adl::object *const)(v3 + 304));
    v15 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_quest_script_ptr);
    *(_DWORD *)(((v3 + 688) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v3 + 112);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v3 + 688),
      "cancel_action",
      (const std::allocator<char> *)(v3 + 112));
    LOBYTE(v15) = LuaScript::getGlobalVariable(v15, (const std::string *)(v3 + 688), (luabind::adl::object *)(v3 + 304)) == 0;
    std::string::~string((void *)(v3 + 688));
    *(_DWORD *)(((v3 + 688) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v3 + 112);
    *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = -8;
    if ( (_BYTE)v15 )
    {
      *(_WORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
      luabind::adl::object::object((luabind::adl::object *const)(v3 + 336));
      *(_DWORD *)(((v3 + 752) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v3 + 128);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v3 + 752),
        "SERVER",
        (const std::allocator<char> *)(v3 + 128));
      v16 = ScriptUtil::getTableValue(
              &ScriptUtil::no_exception_instance,
              (const luabind::adl::object *)(v3 + 304),
              (const std::string *)(v3 + 752),
              (luabind::adl::object *)(v3 + 336)) == 0;
      std::string::~string((void *)(v3 + 752));
      *(_DWORD *)(((v3 + 752) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v3 + 128);
      *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = -8;
      if ( v16 )
      {
        v17 = ((v3 + 1104) >> 3) + 2147450880;
        *(_DWORD *)v17 = 0;
        *(_WORD *)(v17 + 4) = 0;
        std::map<std::string,luabind::adl::object>::map((std::map<std::string,luabind::adl::object> *const)(v3 + 1104));
        if ( !ScriptUtil::getTableValueAsMap<std::string,luabind::adl::object>(
                &ScriptUtil::no_exception_instance,
                (const luabind::adl::object *)(v3 + 336),
                (std::map<std::string,luabind::adl::object> *)(v3 + 1104))
          && LuaConfigMgr::fillParentScriptAction(
               this,
               (const std::map<std::string,luabind::adl::object> *)(v3 + 1104),
               &output_config->cancel_action_vec) )
        {
          ret = -1;
        }
        std::map<std::string,luabind::adl::object>::~map((std::map<std::string,luabind::adl::object> *const)(v3 + 1104));
        v18 = ((v3 + 1104) >> 3) + 2147450880;
        *(_DWORD *)v18 = -117901064;
        *(_WORD *)(v18 + 4) = -1800;
      }
      luabind::adl::object::~object((luabind::adl::object *const)(v3 + 336));
      *(_WORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -1800;
    }
    *(_WORD *)(((v3 + 368) >> 3) + 0x7FFF8000) = 0;
    luabind::adl::object::object((luabind::adl::object *const)(v3 + 368));
    v19 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_quest_script_ptr);
    *(_DWORD *)(((v3 + 816) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v3 + 144);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v3 + 816),
      "rewind_data",
      (const std::allocator<char> *)(v3 + 144));
    LOBYTE(v19) = LuaScript::getGlobalVariable(v19, (const std::string *)(v3 + 816), (luabind::adl::object *)(v3 + 368)) == 0;
    std::string::~string((void *)(v3 + 816));
    *(_DWORD *)(((v3 + 816) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v3 + 144);
    *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = -8;
    if ( (_BYTE)v19 )
    {
      v20 = ((v3 + 1184) >> 3) + 2147450880;
      *(_DWORD *)v20 = 0;
      *(_WORD *)(v20 + 4) = 0;
      std::map<std::string,luabind::adl::object>::map((std::map<std::string,luabind::adl::object> *const)(v3 + 1184));
      if ( !ScriptUtil::getTableValueAsMap<std::string,luabind::adl::object>(
              &ScriptUtil::no_exception_instance,
              (const luabind::adl::object *)(v3 + 368),
              (std::map<std::string,luabind::adl::object> *)(v3 + 1184))
        && LuaConfigMgr::fillQuestScriptConfig(
             this,
             (const std::map<std::string,luabind::adl::object> *)(v3 + 1184),
             &output_config->rewind_config_map) )
      {
        ret = -1;
      }
      std::map<std::string,luabind::adl::object>::~map((std::map<std::string,luabind::adl::object> *const)(v3 + 1184));
      v21 = ((v3 + 1184) >> 3) + 2147450880;
      *(_DWORD *)v21 = -117901064;
      *(_WORD *)(v21 + 4) = -1800;
    }
    *(_WORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
    luabind::adl::object::object((luabind::adl::object *const)(v3 + 400));
    v22 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_quest_script_ptr);
    *(_DWORD *)(((v3 + 880) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v3 + 160);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v3 + 880),
      "quest_data",
      (const std::allocator<char> *)(v3 + 160));
    LOBYTE(v22) = LuaScript::getGlobalVariable(v22, (const std::string *)(v3 + 880), (luabind::adl::object *)(v3 + 400)) == 0;
    std::string::~string((void *)(v3 + 880));
    *(_DWORD *)(((v3 + 880) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v3 + 160);
    *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = -8;
    if ( (_BYTE)v22 )
    {
      v23 = ((v3 + 1264) >> 3) + 2147450880;
      *(_DWORD *)v23 = 0;
      *(_WORD *)(v23 + 4) = 0;
      std::map<std::string,luabind::adl::object>::map((std::map<std::string,luabind::adl::object> *const)(v3 + 1264));
      if ( !ScriptUtil::getTableValueAsMap<std::string,luabind::adl::object>(
              &ScriptUtil::no_exception_instance,
              (const luabind::adl::object *)(v3 + 400),
              (std::map<std::string,luabind::adl::object> *)(v3 + 1264))
        && LuaConfigMgr::fillQuestScriptConfig(
             this,
             (const std::map<std::string,luabind::adl::object> *)(v3 + 1264),
             &output_config->quest_config_map) )
      {
        ret = -1;
      }
      std::map<std::string,luabind::adl::object>::~map((std::map<std::string,luabind::adl::object> *const)(v3 + 1264));
      v24 = ((v3 + 1264) >> 3) + 2147450880;
      *(_DWORD *)v24 = -117901064;
      *(_WORD *)(v24 + 4) = -1800;
    }
    v6 = ret;
    luabind::adl::object::~object((luabind::adl::object *const)(v3 + 400));
    luabind::adl::object::~object((luabind::adl::object *const)(v3 + 368));
    luabind::adl::object::~object((luabind::adl::object *const)(v3 + 304));
    luabind::adl::object::~object((luabind::adl::object *const)(v3 + 240));
    luabind::adl::object::~object((luabind::adl::object *const)(v3 + 176));
  }
  if ( v28 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF80A0) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 168) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_5(v3, 1344LL, v28);
  }
  return v6;
};

// Line 3704: range 000000000F315562-000000000F315FFC
int32_t __cdecl LuaConfigMgr::loadAllRandomQuestScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  unsigned int v5; // esi
  std::string *p_quest_lua_base_dir; // rsi
  __int64 v7; // rax
  __int64 v8; // rax
  __int64 v9; // rax
  std::unordered_map<unsigned int,std::string>::mapped_type *v10; // rax
  data::RandomMainQuestExcelConfigMap *__for_range; // [rsp+20h] [rbp-8F0h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false>::reference v14; // [rsp+28h] [rbp-8E8h]
  std::tuple_element<0,std::pair<unsigned int const,data::RandomMainQuestExcelConfig> >::type *parent_quest_id; // [rsp+30h] [rbp-8E0h]
  char v16[2256]; // [rsp+40h] [rbp-8D0h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_6(2208LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "10 48 8 16 __for_begin:3706 80 8 14 __for_end:3706 112 32 22 quest_script_path:3709 176 32 9 <un"
                        "known> 240 32 9 <unknown> 304 32 9 <unknown> 368 32 9 <unknown> 432 392 14 script_ss:3722 896 52"
                        "0 6 f:3710 1552 520 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::loadAllRandomQuestScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862721] = -234881024;
  v4[536862722] = 62194;
  v4[536862722] = -234881024;
  v4[536862723] = 62194;
  v4[536862724] = -219021312;
  v4[536862725] = 62194;
  v4[536862726] = -219021312;
  v4[536862727] = 62194;
  v4[536862728] = -219021312;
  v4[536862729] = 62194;
  v4[536862730] = -219021312;
  v4[536862731] = 62194;
  v4[536862732] = -219021312;
  v4[536862733] = 62194;
  v4[536862745] = -234881024;
  v4[536862746] = -218959118;
  v4[536862747] = -218959118;
  v4[536862764] = -218959360;
  v4[536862765] = -218959118;
  v4[536862766] = -218959118;
  v4[536862767] = -218959118;
  v4[536862768] = 62194;
  v4[536862784] = -218103808;
  v4[536862785] = -202116109;
  v4[536862786] = -202116109;
  v4[536862787] = -202116109;
  v4[536862788] = -202116109;
  __for_range = &config->txt_config_mgr.quest_config_mgr.random_main_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 48, config);
  *(std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::const_iterator *)(v2 + 48) = std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 80, config);
  *(std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::const_iterator *)(v2 + 80) = std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::end(__for_range);
  while ( std::__detail::operator!=<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false> *)(v2 + 48),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false> *)(v2 + 80)) )
  {
    v14 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false> *const)(v2 + 48));
    parent_quest_id = std::get<0ul,unsigned int const,data::RandomMainQuestExcelConfig>(v14);
    std::get<1ul,unsigned int const,data::RandomMainQuestExcelConfig>(v14);
    *(_DWORD *)(((v2 + 112) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 304) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 240) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((unsigned __int64)parent_quest_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)parent_quest_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)parent_quest_id >> 3)
                                                                        + 0x7FFF8000) )
    {
      __asan_report_load4(parent_quest_id);
    }
    v5 = *parent_quest_id;
    if ( *(char *)(((v2 + 240) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 271) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 111) & 7) >= *(_BYTE *)(((v2 + 271) >> 3) + 0x7FFF8000) )
    {
      v5 = 32;
      __asan_report_store_n(v2 + 240, 32LL);
    }
    common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v2 + 240), v5);
    *(_DWORD *)(((v2 + 176) >> 3) + 0x7FFF8000) = 0;
    p_quest_lua_base_dir = &config->quest_lua_base_dir;
    if ( *(char *)(((v2 + 176) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 207) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 47) & 7) >= *(_BYTE *)(((v2 + 207) >> 3) + 0x7FFF8000) )
    {
      p_quest_lua_base_dir = (std::string *)32;
      __asan_report_store_n(v2 + 176, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 176), p_quest_lua_base_dir, "Q");
    if ( *(char *)(((v2 + 304) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 335) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 79) & 7) >= *(_BYTE *)(((v2 + 335) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 304, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 304), (std::string *)(v2 + 176), (std::string *)(v2 + 240));
    if ( *(char *)(((v2 + 112) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 143) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 113) & 7) >= *(_BYTE *)(((v2 + 143) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 112, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 112), (std::string *)(v2 + 304), "ShareConfig.lua");
    std::string::~string((void *)(v2 + 304));
    *(_DWORD *)(((v2 + 304) >> 3) + 0x7FFF8000) = -117901064;
    std::string::~string((void *)(v2 + 176));
    *(_DWORD *)(((v2 + 176) >> 3) + 0x7FFF8000) = -117901064;
    std::string::~string((void *)(v2 + 240));
    *(_DWORD *)(((v2 + 240) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v2 + 896, 520LL);
    v7 = std::string::c_str(v2 + 112);
    std::ifstream::basic_ifstream(v2 + 896, v7, 8LL);
    if ( (unsigned __int8)std::ios::good(v2 + 1152) == 1
      || (std::string::operator+=(v2 + 112, ".txt"),
          __asan_unpoison_stack_memory(v2 + 1552, 520LL),
          v8 = std::string::c_str(v2 + 112),
          std::ifstream::basic_ifstream(v2 + 1552, v8, 8LL),
          std::ifstream::operator=(v2 + 896, v2 + 1552),
          std::ifstream::~ifstream(v2 + 1552),
          __asan_poison_stack_memory(v2 + 1552, 520LL),
          (unsigned __int8)std::ios::good(v2 + 1152) == 1) )
    {
      __asan_unpoison_stack_memory(v2 + 432, 392LL);
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream(v2 + 432);
      v9 = std::ifstream::rdbuf(v2 + 896);
      std::ostream::operator<<(v2 + 448, v9);
      *(_DWORD *)(((v2 + 368) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 368) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 399) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 113) & 7) >= *(_BYTE *)(((v2 + 399) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 368, 32LL);
      }
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::str(v2 + 368, v2 + 432);
      v10 = std::unordered_map<unsigned int,std::string>::operator[](
              &this->random_quest_script_template_str_map,
              parent_quest_id);
      std::string::operator=(v10, v2 + 368);
      std::string::~string((void *)(v2 + 368));
      *(_DWORD *)(((v2 + 368) >> 3) + 0x7FFF8000) = -117901064;
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream(v2 + 432);
    }
    std::ifstream::~ifstream(v2 + 896);
    std::string::~string((void *)(v2 + 112));
    *(_DWORD *)(((v2 + 112) >> 3) + 0x7FFF8000) = -117901064;
    __asan_poison_stack_memory(v2 + 896, 520LL);
    __asan_poison_stack_memory(v2 + 432, 392LL);
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false> *const)(v2 + 48));
  }
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF810C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 276) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_6(v2, 2208LL, v16);
  }
  return 0;
};

// Line 3731: range 000000000F315FFE-000000000F317442
int32_t __cdecl LuaConfigMgr::loadAllPatternGroupScriptConfig(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rax
  int32_t v8; // r14d
  __int64 v9; // rsi
  __int64 v10; // rdx
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  const char *v14; // rsi
  common::milog::MiLogStream *v15; // r14
  int v16; // edx
  char v17; // al
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // r14
  const boost::filesystem::directory_entry *v20; // rax
  const boost::filesystem::directory_entry *v21; // rax
  const boost::filesystem::path *v22; // rsi
  const std::string *v23; // rax
  const std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > > *v25; // rsi
  bool v26; // r14
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  char *v30; // rsi
  uint32_t v31; // ecx
  char v32; // al
  const boost::filesystem::directory_entry *v33; // rax
  const boost::filesystem::path *v34; // rax
  const std::string *v35; // rsi
  uint32_t v36; // ecx
  char v37; // al
  char *v38; // rsi
  common::milog::MiLogStream *v39; // rax
  common::milog::MiLogStream *v40; // rax
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // rax
  uint32_t v43; // ecx
  char v44; // al
  __int64 v45; // rsi
  int32_t ret; // [rsp+10h] [rbp-430h]
  uint32_t main_scene_id; // [rsp+14h] [rbp-42Ch]
  PatternGroupScriptConfig *pattern_config; // [rsp+18h] [rbp-428h]
  GroupInfoScriptConfig *group_info_config; // [rsp+28h] [rbp-418h]
  char v51[1040]; // [rsp+30h] [rbp-410h] BYREF

  v2 = (unsigned __int64)v51;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(992LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "18 32 4 9 <unknown> 48 4 15 pattern_id:3791 64 8 9 iter:3751 96 8 8 end:3752 128 16 7 ec:3750 16"
                        "0 32 9 path:3735 224 32 9 <unknown> 288 32 17 file_pattern:3747 352 32 9 <unknown> 416 32 9 <unk"
                        "nown> 480 32 9 name:3781 544 32 9 <unknown> 608 32 6 m:3786 672 32 9 <unknown> 736 32 9 <unknown"
                        "> 800 32 14 file_path:3802 864 32 9 <unknown> 928 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::loadAllPatternGroupScriptConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -219021312;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -202116109;
  main_scene_id = TxtConfigMgr::getDefaultWorldMainSceneId(&config->txt_config_mgr);
  boost::filesystem::path::path((boost::filesystem::path *const)(v2 + 160), &config->rand_task_lua_base_dir);
  if ( !boost::filesystem::is_directory((const boost::filesystem::path *)(v2 + 160)) )
  {
    if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 224, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 224),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllPatternGroupScriptConfig",
      3742);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 224),
           (const char (*)[16])"[CONFIG_ERROR] ");
    v6 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v5, (const char (*)[10])byte_1A540E20);
    v7 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &config->rand_task_lua_base_dir);
    common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v7, (const char (*)[10])byte_1A5272E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    v8 = -1;
  }
  else
  {
    std::basic_regex<char,std::regex_traits<char>>::basic_regex(
      (std::basic_regex<char,std::regex_traits<char> > *const)(v2 + 288),
      "^pattern_(\\d+).lua$",
      (std::basic_regex<char,std::regex_traits<char> >::flag_type)16);
    ret = 0;
    if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v2 + 128, "^pattern_(\\d+).lua$");
    *(_DWORD *)(v2 + 128) = 0;
    v9 = ((_BYTE)v2 - 124) & 7;
    v10 = (*(_BYTE *)(((v2 + 132) >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v9 >= *(_BYTE *)(((v2 + 132) >> 3) + 0x7FFF8000));
    if ( (_BYTE)v10 )
      __asan_report_store1(v2 + 132, v9, v10);
    *(_BYTE *)(v2 + 132) = 0;
    if ( *(_BYTE *)(((v2 + 136) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 136, v9);
    *(_QWORD *)(v2 + 136) = &boost::system::detail::cat_holder<void>::system_category_instance;
    boost::filesystem::directory_iterator::directory_iterator(
      (boost::filesystem::directory_iterator *const)(v2 + 64),
      (const boost::filesystem::path *)(v2 + 160),
      (boost::system::error_code *)(v2 + 128));
    boost::filesystem::directory_iterator::directory_iterator((boost::filesystem::directory_iterator *const)(v2 + 96));
    if ( boost::system::error_code::value((const boost::system::error_code *const)(v2 + 128)) )
    {
      if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 352, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 352),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "loadAllPatternGroupScriptConfig",
        3762);
      v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v2 + 352),
              (const char (*)[16])"[CONFIG_ERROR] ");
      v12 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
              v11,
              (const char (*)[45])"loadAllPatternGroupScriptConfig fails path: ");
      v13 = common::milog::MiLogStream::operator<<<boost::filesystem::path,(boost::filesystem::path*)0>(
              v12,
              (const boost::filesystem::path *)(v2 + 160));
      v14 = " , directory_iterator error code : ";
      v15 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
              v13,
              (const char (*)[36])" , directory_iterator error code : ");
      v16 = boost::system::error_code::value((const boost::system::error_code *const)(v2 + 128));
      v17 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
      if ( v17 != 0 && v17 <= 3 )
      {
        LOBYTE(v14) = v17 != 0;
        __asan_report_store4(v2 + 32, v14);
      }
      *(_DWORD *)(v2 + 32) = v16;
      v18 = common::milog::MiLogStream::operator<<<int,(int *)0>(v15, (const int *)(v2 + 32));
      v19 = common::milog::MiLogStream::operator<<<char [3],(char *[3])0>(v18, (const char (*)[3])", ");
      if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 416, 32LL);
      }
      boost::system::error_code::message[abi:cxx11](
        (std::string *)(v2 + 416),
        (const boost::system::error_code *const)(v2 + 128));
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v19, (const std::string *)(v2 + 416));
      std::string::~string((void *)(v2 + 416));
      *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
      *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      v8 = -1;
    }
    else
    {
      while ( boost::iterators::operator!=<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long,boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long>(
                (const boost::iterators::iterator_facade<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long int> *)(v2 + 64),
                (const boost::iterators::iterator_facade<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long int> *)(v2 + 96)) )
      {
        v20 = boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long,false,false>::operator*((const boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long int,false,false> *const)(v2 + 64));
        if ( boost::filesystem::is_regular_file(v20) )
        {
          *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
          *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
          v21 = boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long,false,false>::operator->((const boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long int,false,false> *const)(v2 + 64));
          v22 = boost::filesystem::directory_entry::path(v21);
          if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
          {
            v22 = (const boost::filesystem::path *)32;
            __asan_report_store_n(v2 + 544, 32LL);
          }
          boost::filesystem::path::leaf((boost::filesystem::path *)(v2 + 544), v22);
          v23 = boost::filesystem::path::string[abi:cxx11]((const boost::filesystem::path *const)(v2 + 544));
          std::string::basic_string(v2 + 480, v23);
          boost::filesystem::path::~path((boost::filesystem::path *const)(v2 + 544));
          *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = -117901064;
          *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = 0;
          std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::match_results((std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v2 + 608));
          if ( std::regex_match<std::char_traits<char>,std::allocator<char>,std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string>>>,char,std::regex_traits<char>>(
                 (const std::string *)(v2 + 480),
                 (std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *)(v2 + 608),
                 (const std::basic_regex<char,std::regex_traits<char> > *)(v2 + 288),
                 (std::regex_constants::match_flag_type)0)
            && std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::size((const std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v2 + 608)) == 2 )
          {
            *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v2 + 48, v2 + 608);
            *(_DWORD *)(v2 + 48) = 0;
            *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
            v25 = std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::operator[](
                    (const std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v2 + 608),
                    1uLL);
            if ( *(char *)(((v2 + 672) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) )
            {
              v25 = (const std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > > *)32;
              __asan_report_store_n(v2 + 672, 32LL);
            }
            std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string>>::operator std::string(
              (std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > >::string_type *)(v2 + 672),
              v25);
            v26 = common::tools::StringUtils::strToNum<unsigned int>(
                    (const std::string *)(v2 + 672),
                    (unsigned int *)(v2 + 48),
                    1) != 0;
            std::string::~string((void *)(v2 + 672));
            *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = -117901064;
            if ( v26 )
            {
              ret = -1;
              *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 736) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 736, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 736),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "loadAllPatternGroupScriptConfig",
                3795);
              v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 736),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v28 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v27, (const char (*)[7])"file: ");
              v29 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                      v28,
                      (const std::string *)(v2 + 480));
              common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v29, (const char (*)[32])byte_1A540F40);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 736));
              *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
            }
            else
            {
              v30 = (char *)(v2 + 48);
              pattern_config = std::unordered_map<unsigned int,PatternGroupScriptConfig>::operator[](
                                 &this->pattern_group_config_map,
                                 (const std::unordered_map<unsigned int,PatternGroupScriptConfig>::key_type *)(v2 + 48));
              if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v2 + 48);
              v31 = *(_DWORD *)(v2 + 48);
              v32 = *(_BYTE *)(((unsigned __int64)&pattern_config->pattern_id >> 3) + 0x7FFF8000);
              if ( v32 != 0 && v32 <= 3 )
              {
                LOBYTE(v30) = v32 != 0;
                __asan_report_store4(&pattern_config->pattern_id, v30);
              }
              pattern_config->pattern_id = v31;
              *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
              v33 = boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long,false,false>::operator->((const boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long int,false,false> *const)(v2 + 64));
              v34 = boost::filesystem::directory_entry::path(v33);
              v35 = boost::filesystem::path::string[abi:cxx11](v34);
              std::string::basic_string(v2 + 800, v35);
              if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v2 + 48);
              v36 = *(_DWORD *)(v2 + 48);
              v37 = *(_BYTE *)(((unsigned __int64)&pattern_config->group_config.group_id >> 3) + 0x7FFF8000);
              if ( v37 != 0 && v37 <= 3 )
              {
                LOBYTE(v35) = v37 != 0;
                __asan_report_store4(&pattern_config->group_config.group_id, v35);
              }
              pattern_config->group_config.group_id = v36;
              v38 = (char *)(v2 + 800);
              if ( LuaConfigMgr::loadGroupScriptConfig(
                     this,
                     (const std::string *)(v2 + 800),
                     &pattern_config->group_config,
                     main_scene_id) )
              {
                ret = -1;
                *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 864) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 864, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 864),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "loadAllPatternGroupScriptConfig",
                  3810);
                v39 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 864),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v40 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                        v39,
                        (const char (*)[36])"loadGroupScriptConfig fails, path: ");
                v38 = (char *)(v2 + 800);
                common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                  v40,
                  (const std::string *)(v2 + 800));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 864));
                *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = -117901064;
              }
              if ( !std::unordered_map<unsigned int,NpcScriptConfig>::empty(&pattern_config->group_config.npc_config_map) )
              {
                *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 928) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 928, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 928),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/lua_config_mgr.cpp",
                  "loadAllPatternGroupScriptConfig",
                  3814);
                v41 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 928),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v42 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                        v41,
                        (const char (*)[41])"pattern group cannot has npc,pattern_id:");
                v38 = (char *)(v2 + 48);
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v42,
                  (const unsigned int *)(v2 + 48));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 928));
                *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
                ret = -1;
              }
              group_info_config = &pattern_config->group_info_config;
              if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v2 + 48);
              v43 = *(_DWORD *)(v2 + 48);
              v44 = *(_BYTE *)(((unsigned __int64)group_info_config >> 3) + 0x7FFF8000);
              if ( v44 != 0 && v44 <= 3 )
              {
                LOBYTE(v38) = v44 != 0;
                __asan_report_store4(group_info_config, v38);
              }
              group_info_config->group_id = v43;
              v45 = (((_BYTE)pattern_config + 12) & 7u) + 3;
              if ( *(_BYTE *)(((unsigned __int64)&pattern_config->group_info_config.block_id >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)pattern_config + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&pattern_config->group_info_config.block_id >> 3)
                                                                              + 0x7FFF8000) )
              {
                __asan_report_store4(&pattern_config->group_info_config.block_id, v45);
              }
              pattern_config->group_info_config.block_id = 0;
              if ( *(char *)(((unsigned __int64)&pattern_config->group_info_config.is_dynamic_load >> 3) + 0x7FFF8000) < 0 )
                __asan_report_store1(
                  &pattern_config->group_info_config.is_dynamic_load,
                  v45,
                  &pattern_config->group_info_config.is_dynamic_load);
              pattern_config->group_info_config.is_dynamic_load = 0;
              std::string::~string((void *)(v2 + 800));
            }
          }
          std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::~match_results((std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v2 + 608));
          std::string::~string((void *)(v2 + 480));
        }
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
        *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = -117901064;
        *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
        *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
        boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long,false,false>::operator++((boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator,boost::filesystem::directory_entry,boost::iterators::single_pass_traversal_tag,boost::filesystem::directory_entry&,long int,false,false> *const)(v2 + 64));
      }
      v8 = ret;
    }
    boost::filesystem::directory_iterator::~directory_iterator((boost::filesystem::directory_iterator *const)(v2 + 96));
    boost::filesystem::directory_iterator::~directory_iterator((boost::filesystem::directory_iterator *const)(v2 + 64));
    std::basic_regex<char,std::regex_traits<char>>::~basic_regex((std::basic_regex<char,std::regex_traits<char> > *const)(v2 + 288));
  }
  boost::filesystem::path::~path((boost::filesystem::path *const)(v2 + 160));
  if ( v51 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8074) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862732) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450920 - (((_DWORD)v4 + 2147450928) & 0xFFFFFFF8) + 84) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8068) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8070) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8078) = -168430091;
  }
  return v8;
};

// Line 3829: range 000000000F317444-000000000F317661
const std::unordered_set<unsigned int> *__fastcall LuaConfigMgr::queryGroupReplaceSet(
        const LuaConfigMgr *const this,
        const std::unordered_set<unsigned int> *group_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *p_group_replace_set_map; // rdx
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *v6; // rdx
  bool v7; // al
  const std::unordered_set<unsigned int> *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 group_id:3828 64 8 7 it:3831 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::queryGroupReplaceSet;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = (_DWORD)group_id;
  if ( !(_BYTE)`guard variable for'LuaConfigMgr::queryGroupReplaceSet(unsigned int)::empty_set
    && __cxa_guard_acquire(&`guard variable for'LuaConfigMgr::queryGroupReplaceSet(unsigned int)::empty_set) )
  {
    std::unordered_set<unsigned int>::unordered_set((std::unordered_set<unsigned int> *const)&LuaConfigMgr::queryGroupReplaceSet(unsigned int)const::empty_set);
    __cxa_guard_release(&`guard variable for'LuaConfigMgr::queryGroupReplaceSet(unsigned int)::empty_set);
    group_id = &LuaConfigMgr::queryGroupReplaceSet(unsigned int)const::empty_set;
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_set<unsigned int>::~unordered_set,
      (void *)&LuaConfigMgr::queryGroupReplaceSet(unsigned int)const::empty_set,
      &_dso_handle);
  }
  p_group_replace_set_map = &this->group_replace_set_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, group_id);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::find(p_group_replace_set_map, (const std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::key_type *)(v2 + 48));
  v6 = &this->group_replace_set_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &LuaConfigMgr::queryGroupReplaceSet(unsigned int)const::empty_set;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3841: range 000000000F317662-000000000F31787F
const std::unordered_set<unsigned int> *__fastcall LuaConfigMgr::queryGroupReplacedBySet(
        const LuaConfigMgr *const this,
        const std::unordered_set<unsigned int> *group_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *p_group_replaced_by_set_map; // rdx
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *v6; // rdx
  bool v7; // al
  const std::unordered_set<unsigned int> *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 group_id:3840 64 8 7 it:3843 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::queryGroupReplacedBySet;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = (_DWORD)group_id;
  if ( !(_BYTE)`guard variable for'LuaConfigMgr::queryGroupReplacedBySet(unsigned int)::empty_set
    && __cxa_guard_acquire(&`guard variable for'LuaConfigMgr::queryGroupReplacedBySet(unsigned int)::empty_set) )
  {
    std::unordered_set<unsigned int>::unordered_set((std::unordered_set<unsigned int> *const)&LuaConfigMgr::queryGroupReplacedBySet(unsigned int)const::empty_set);
    __cxa_guard_release(&`guard variable for'LuaConfigMgr::queryGroupReplacedBySet(unsigned int)::empty_set);
    group_id = &LuaConfigMgr::queryGroupReplacedBySet(unsigned int)const::empty_set;
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_set<unsigned int>::~unordered_set,
      (void *)&LuaConfigMgr::queryGroupReplacedBySet(unsigned int)const::empty_set,
      &_dso_handle);
  }
  p_group_replaced_by_set_map = &this->group_replaced_by_set_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, group_id);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::find(p_group_replaced_by_set_map, (const std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::key_type *)(v2 + 48));
  v6 = &this->group_replaced_by_set_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &LuaConfigMgr::queryGroupReplacedBySet(unsigned int)const::empty_set;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3852: range 000000000F31821A-000000000F3189AF
bool __cdecl LuaConfigMgr::hasCyclicReplacement(const LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  char *v5; // rsi
  bool v6; // r15
  bool result; // al
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *__for_range; // [rsp+10h] [rbp-230h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false>::reference v9; // [rsp+18h] [rbp-228h]
  unsigned int *from_group; // [rsp+20h] [rbp-220h]
  char v11[528]; // [rsp+30h] [rbp-210h] BYREF

  v2 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(480LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "8 48 4 10 count:3854 64 8 16 __for_begin:3882 96 8 14 __for_end:3882 128 32 8 dfs:3857 192 32 9 "
                        "<unknown> 256 32 9 <unknown> 320 32 9 <unknown> 384 56 12 visited:3853";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::hasCyclicReplacement;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218103808;
  v4[536862734] = -202116109;
  std::unordered_set<unsigned int>::unordered_set((std::unordered_set<unsigned int> *const)(v2 + 384));
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, v1);
  *(_DWORD *)(v2 + 48) = 0;
  std::function<void ()(unsigned int,unsigned int,std::string)>::function((std::function<void(unsigned int,unsigned int,std::string)> *const)(v2 + 128));
  if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 192, v1);
  *(_QWORD *)(v2 + 192) = v2 + 48;
  if ( *(_BYTE *)(((v2 + 200) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 200, v1);
  *(_QWORD *)(v2 + 200) = v2 + 384;
  if ( *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 208, v1);
  *(_QWORD *)(v2 + 208) = v2 + 128;
  if ( *(_BYTE *)(((v2 + 216) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 216, v1);
  *(_QWORD *)(v2 + 216) = this;
  v5 = (char *)(v2 + 192);
  std::function<void ()(unsigned int,unsigned int,std::string)>::operator=<LuaConfigMgr::hasCyclicReplacement(void)::{lambda(unsigned int,unsigned int,std::string)#1}>(
    (std::function<void(unsigned int,unsigned int,std::string)> *const)(v2 + 128),
    (LuaConfigMgr::hasCyclicReplacement::<lambda(uint32_t, uint32_t, std::string)> *)(v2 + 192));
  *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = -117901064;
  __for_range = &this->group_replace_set_map;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 0;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v5);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::begin(__for_range);
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v5);
  *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::end(__for_range);
  while ( std::__detail::operator!=<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 64),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 96)) )
  {
    v9 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 64));
    from_group = std::get<0ul,unsigned int const,std::unordered_set<unsigned int>>(v9);
    std::get<1ul,unsigned int const,std::unordered_set<unsigned int>>(v9);
    *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
    std::string::basic_string(v2 + 256);
    if ( *(_BYTE *)(((unsigned __int64)from_group >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)from_group & 7) + 3) >= *(_BYTE *)(((unsigned __int64)from_group >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(from_group);
    }
    std::function<void ()(unsigned int,unsigned int,std::string)>::operator()(
      (const std::function<void(unsigned int,unsigned int,std::string)> *const)(v2 + 128),
      *from_group,
      *from_group,
      (std::string *)(v2 + 256));
    std::string::~string((void *)(v2 + 256));
    *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = -117901064;
    std::unordered_set<unsigned int>::insert((std::unordered_set<unsigned int> *const)(v2 + 384), from_group);
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 64));
  }
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 - 32 + 127) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 320, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 320),
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/lua_config_mgr.cpp",
    "hasCyclicReplacement",
    3888);
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_load4(v2 + 48);
  common::milog::MiLogStream::operator()(
    (common::milog::MiLogStream *const)(v2 + 320),
    "%u cycle detected.",
    *(unsigned int *)(v2 + 48));
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 320));
  *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_load4(v2 + 48);
  v6 = *(_DWORD *)(v2 + 48) != 0;
  std::function<void ()(unsigned int,unsigned int,std::string)>::~function((std::function<void(unsigned int,unsigned int,std::string)> *const)(v2 + 128));
  std::unordered_set<unsigned int>::~unordered_set((std::unordered_set<unsigned int> *const)(v2 + 384));
  result = v6;
  if ( v11 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8014) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF802C) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = -168430091;
  }
  return result;
};

// Line 3858: range 000000000F317880-000000000F318218
void __fastcall LuaConfigMgr::hasCyclicReplacement(void)const::{lambda(unsigned int,unsigned int,std::string)#1}::operator()(
        unsigned __int64 __closure,
        uint32_t start,
        uint32_t curr,
        std::string *p_str)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  const char *v7; // rsi
  uint32_t *v8; // rdx
  uint32_t *v9; // rax
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *v10; // rdx
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *v11; // rdx
  bool v12; // al
  unsigned int v13; // esi
  char *v14; // rsi
  unsigned int *v15; // rax
  unsigned int *v16; // rdx
  std::function<void(unsigned int,unsigned int,std::string)> *v17; // r14
  unsigned int next; // [rsp+24h] [rbp-1FCh]
  std::unordered_set<unsigned int> *__for_range; // [rsp+28h] [rbp-1F8h]
  char v23[496]; // [rsp+30h] [rbp-1F0h] BYREF

  v4 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_3(448LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "9 48 4 9 curr:3858 64 8 9 iter:3870 96 8 9 <unknown> 128 8 16 __for_begin:3874 160 8 14 __for_en"
                        "d:3874 192 32 9 <unknown> 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown>";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::hasCyclicReplacement(void)const::{lambda(unsigned int,unsigned int,std::string)#1}::operator();
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -218959360;
  v6[536862723] = -218959360;
  v6[536862724] = -218959360;
  v6[536862725] = -218959360;
  v6[536862727] = -218959118;
  v6[536862729] = -218959118;
  v6[536862731] = -218959118;
  v6[536862733] = -202116109;
  *(_DWORD *)(v4 + 48) = curr;
  if ( *(_BYTE *)(((__closure + 8) >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure + 8);
  if ( std::unordered_set<unsigned int>::count(
         *(const std::unordered_set<unsigned int> *const *)(__closure + 8),
         (const std::unordered_set<unsigned int>::key_type *)(v4 + 48)) )
  {
    if ( start == *(_DWORD *)(v4 + 48) )
    {
      if ( *(char *)(((v4 + 192) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 64 + 31) & 7) >= *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 192, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 192),
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/lua_config_mgr.cpp",
        "operator()",
        3864);
      v7 = (const char *)std::string::c_str(p_str);
      if ( *(_BYTE *)((__closure >> 3) + 0x7FFF8000) )
        __asan_report_load8(__closure);
      v8 = *(uint32_t **)__closure;
      if ( *(_BYTE *)((*(_QWORD *)__closure >> 3) + 0x7FFF8000LL) != 0
        && (char)((*(_QWORD *)__closure & 7) + 3) >= *(_BYTE *)((*(_QWORD *)__closure >> 3) + 0x7FFF8000LL) )
      {
        __asan_report_load4(*(_QWORD *)__closure);
      }
      common::milog::MiLogStream::operator()(
        (common::milog::MiLogStream *const)(v4 + 192),
        " deteced cycle#%u: %s%u",
        *v8,
        v7,
        start);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 192));
      *(_DWORD *)(((v4 + 192) >> 3) + 0x7FFF8000) = -117901064;
      if ( *(_BYTE *)((__closure >> 3) + 0x7FFF8000) )
        __asan_report_load8(__closure);
      v9 = *(uint32_t **)__closure;
      if ( *(_BYTE *)((*(_QWORD *)__closure >> 3) + 0x7FFF8000LL) != 0
        && (char)((*(_QWORD *)__closure & 7) + 3) >= *(_BYTE *)((*(_QWORD *)__closure >> 3) + 0x7FFF8000LL) )
      {
        __asan_report_load4(*(_QWORD *)__closure);
      }
      ++*v9;
    }
  }
  else
  {
    if ( *(_BYTE *)(((__closure + 8) >> 3) + 0x7FFF8000) )
      __asan_report_load8(__closure + 8);
    std::unordered_set<unsigned int>::insert(
      *(std::unordered_set<unsigned int> *const *)(__closure + 8),
      (const std::unordered_set<unsigned int>::value_type *)(v4 + 48));
    if ( *(_BYTE *)(((__closure + 24) >> 3) + 0x7FFF8000) )
      __asan_report_load8(__closure + 24);
    v10 = (std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *)(*(_QWORD *)(__closure + 24) + 696LL);
    if ( *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v4 + 64, v4 + 48);
    *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v4 + 64) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::find(v10, (const std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::key_type *)(v4 + 48));
    v11 = (std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *)(*(_QWORD *)(__closure + 24) + 696LL);
    if ( *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v4 + 96, v4 + 48);
    *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v4 + 96) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::end(v11);
    v12 = std::__detail::operator!=<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v4 + 64),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v4 + 96));
    *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v12 )
    {
      *(_DWORD *)(((v4 + 320) >> 3) + 0x7FFF8000) = 0;
      *(_DWORD *)(((v4 + 256) >> 3) + 0x7FFF8000) = 0;
      v13 = *(_DWORD *)(v4 + 48);
      if ( *(char *)(((v4 + 256) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 287) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 64 + 95) & 7) >= *(_BYTE *)(((v4 + 287) >> 3) + 0x7FFF8000) )
      {
        v13 = 32;
        __asan_report_store_n(v4 + 256, 32LL);
      }
      common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v4 + 256), v13);
      if ( *(char *)(((v4 + 320) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 351) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 + 95) & 7) >= *(_BYTE *)(((v4 + 351) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 320, 32LL);
      }
      std::operator+<char>((std::string *)(v4 + 320), (std::string *)(v4 + 256), "->");
      v14 = (char *)(v4 + 320);
      std::string::operator+=(p_str, v4 + 320);
      std::string::~string((void *)(v4 + 320));
      *(_DWORD *)(((v4 + 320) >> 3) + 0x7FFF8000) = -117901064;
      std::string::~string((void *)(v4 + 256));
      *(_DWORD *)(((v4 + 256) >> 3) + 0x7FFF8000) = -117901064;
      __for_range = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v4 + 64))->second;
      *(_BYTE *)(((v4 + 128) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v4 + 128) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v4 + 128, v14);
      *(std::unordered_set<unsigned int>::const_iterator *)(v4 + 128) = std::unordered_set<unsigned int>::begin(__for_range);
      *(_BYTE *)(((v4 + 160) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v4 + 160) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v4 + 160, v14);
      *(std::unordered_set<unsigned int>::const_iterator *)(v4 + 160) = std::unordered_set<unsigned int>::end(__for_range);
      while ( std::__detail::operator!=<unsigned int,false>(
                (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v4 + 128),
                (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v4 + 160)) )
      {
        v15 = (unsigned int *)std::__detail::_Node_const_iterator<unsigned int,true,false>::operator*((const std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v4 + 128));
        v16 = v15;
        if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v15 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v15);
        }
        next = *v16;
        if ( *(_BYTE *)(((__closure + 16) >> 3) + 0x7FFF8000) )
          __asan_report_load8(__closure + 16);
        v17 = *(std::function<void(unsigned int,unsigned int,std::string)> **)(__closure + 16);
        *(_DWORD *)(((v4 + 384) >> 3) + 0x7FFF8000) = 0;
        std::string::basic_string(v4 + 384, p_str);
        std::function<void ()(unsigned int,unsigned int,std::string)>::operator()(
          v17,
          start,
          next,
          (std::string *)(v4 + 384));
        std::string::~string((void *)(v4 + 384));
        *(_DWORD *)(((v4 + 384) >> 3) + 0x7FFF8000) = -117901064;
        std::__detail::_Node_const_iterator<unsigned int,true,false>::operator++((std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v4 + 128));
      }
      *(_BYTE *)(((v4 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v4 + 160) >> 3) + 0x7FFF8000) = -8;
    }
    if ( *(_BYTE *)(((__closure + 8) >> 3) + 0x7FFF8000) )
      __asan_report_load8(__closure + 8);
    std::unordered_set<unsigned int>::erase(
      *(std::unordered_set<unsigned int> *const *)(__closure + 8),
      (const std::unordered_set<unsigned int>::key_type *)(v4 + 48));
  }
  if ( v23 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 3894: range 000000000F3189B0-000000000F31977E
int32_t __cdecl LuaConfigMgr::loadAllCommonScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::string *p_common_lua_base_dir; // rsi
  bool v6; // r14
  unsigned __int64 v7; // rax
  common::milog::MiLogStream *v8; // rax
  int32_t v9; // r14d
  unsigned __int64 v10; // rax
  int32_t AllFilesWithExtension; // edx
  char v12; // al
  char *v13; // rsi
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  unsigned __int64 v17; // rax
  _DWORD *v18; // rax
  LuaCommonContent *v19; // r8
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rdx
  common::milog::MiLogStream *v22; // rdx
  _DWORD *v23; // rax
  std::unordered_map<std::string,LuaCommonContent> *v24; // rax
  std::vector<std::string> *__for_range; // [rsp+10h] [rbp-380h]
  std::string *script_path; // [rsp+18h] [rbp-378h]
  char v29[880]; // [rsp+20h] [rbp-370h] BYREF

  v2 = (unsigned __int64)v29;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(832LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "13 48 1 9 <unknown> 64 4 8 ret:3901 80 8 16 __for_begin:3909 112 8 14 __for_end:3909 144 24 13 f"
                        "ile_vec:3900 208 32 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 "
                        "9 <unknown> 528 40 9 <unknown> 608 56 27 temp_common_script_map:3908 704 96 16 lua_content:3911";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::loadAllCommonScript;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = 61956;
  v4[536862722] = -234881024;
  v4[536862723] = 62194;
  v4[536862723] = -234881024;
  v4[536862724] = 62194;
  v4[536862725] = -218959360;
  v4[536862726] = 62194;
  v4[536862727] = -219021312;
  v4[536862728] = 62194;
  v4[536862729] = -219021312;
  v4[536862730] = 62194;
  v4[536862731] = -219021312;
  v4[536862732] = 62194;
  v4[536862733] = -219021312;
  v4[536862734] = 62194;
  v4[536862735] = -219021312;
  v4[536862736] = 62194;
  v4[536862737] = -234881024;
  v4[536862738] = -218959118;
  v4[536862740] = -234881024;
  v4[536862741] = -218959118;
  v4[536862745] = -202116109;
  p_common_lua_base_dir = &config->common_lua_base_dir;
  std::filesystem::__cxx11::path::path<std::string,std::filesystem::__cxx11::path>(
    (std::filesystem::__cxx11::path *const)(v2 + 528),
    &config->common_lua_base_dir,
    auto_format);
  v6 = !std::filesystem::is_directory((const std::filesystem::__cxx11::path *)(v2 + 528));
  std::filesystem::__cxx11::path::~path((std::filesystem::__cxx11::path *const)(v2 + 528));
  v7 = ((v2 + 528) >> 3) + 2147450880;
  *(_DWORD *)v7 = -117901064;
  *(_BYTE *)(v7 + 4) = -8;
  if ( v6 )
  {
    *(_DWORD *)(((v2 + 208) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 208) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 239) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 48 + 31) & 7) >= *(_BYTE *)(((v2 + 239) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 208, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 208),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "loadAllCommonScript",
      3897);
    v8 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
           (common::milog::MiLogStream *const)(v2 + 208),
           (const char (*)[38])"common_dir not directory, common_dir:");
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, &config->common_lua_base_dir);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 208));
    v9 = -1;
  }
  else
  {
    v10 = ((v2 + 144) >> 3) + 2147450880;
    *(_WORD *)v10 = 0;
    *(_BYTE *)(v10 + 2) = 0;
    std::vector<std::string>::vector((std::vector<std::string> *const)(v2 + 144));
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 4;
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v2 + 64, p_common_lua_base_dir);
    *(_DWORD *)(v2 + 64) = 0;
    *(_DWORD *)(((v2 + 272) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 272),
      ".lua",
      (const std::allocator<char> *)(v2 + 48));
    v13 = (char *)(v2 + 272);
    AllFilesWithExtension = common::tools::FileUtils::getAllFilesWithExtension(
                              &config->common_lua_base_dir,
                              (const std::string *)(v2 + 272),
                              (std::vector<std::string> *)(v2 + 144));
    v12 = *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000);
    LOBYTE(v13) = v12 != 0;
    if ( v12 != 0 && v12 <= 3 )
      __asan_report_store4(v2 + 64, v13);
    *(_DWORD *)(v2 + 64) = AllFilesWithExtension;
    std::string::~string((void *)(v2 + 272));
    *(_DWORD *)(((v2 + 272) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_load4(v2 + 64);
    if ( *(_DWORD *)(v2 + 64) )
    {
      *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 336) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 336, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 336),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/lua_config_mgr.cpp",
        "loadAllCommonScript",
        3905);
      v14 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
              (common::milog::MiLogStream *const)(v2 + 336),
              (const char (*)[44])"getAllFilesWithExtension fails, common_dir:");
      v15 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v14, &config->common_lua_base_dir);
      v16 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v15, (const char (*)[7])" ret: ");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v16, (const int *)(v2 + 64));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 336));
      *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = -117901064;
      if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_load4(v2 + 64);
      v9 = *(_DWORD *)(v2 + 64);
    }
    else
    {
      v17 = ((v2 + 608) >> 3) + 2147450880;
      *(_DWORD *)v17 = 0;
      *(_WORD *)(v17 + 4) = 0;
      *(_BYTE *)(v17 + 6) = 0;
      std::unordered_map<std::string,LuaCommonContent>::unordered_map((std::unordered_map<std::string,LuaCommonContent> *const)(v2 + 608));
      __for_range = (std::vector<std::string> *)(v2 + 144);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 80, v13);
      *(std::vector<std::string>::iterator *)(v2 + 80) = std::vector<std::string>::begin(__for_range);
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 112, v13);
      *(std::vector<std::string>::iterator *)(v2 + 112) = std::vector<std::string>::end(__for_range);
      while ( __gnu_cxx::operator!=<std::string *,std::vector<std::string>>(
                (const __gnu_cxx::__normal_iterator<std::string*,std::vector<std::string> > *)(v2 + 80),
                (const __gnu_cxx::__normal_iterator<std::string*,std::vector<std::string> > *)(v2 + 112)) )
      {
        script_path = __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::operator*((const __gnu_cxx::__normal_iterator<std::string*,std::vector<std::string> > *const)(v2 + 80));
        v18 = (_DWORD *)(((v2 + 704) >> 3) + 2147450880);
        *v18 = 0;
        v18[1] = 0;
        v18[2] = 0;
        LuaCommonContent::LuaCommonContent((LuaCommonContent *const)(v2 + 704));
        if ( LuaScriptMgr::getCommonLuaContentFromFile(script_path, (LuaCommonContent *)(v2 + 704)) )
        {
          *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 400) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 81) & 7) >= *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 400, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 400),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadAllCommonScript",
            3914);
          v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 400),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v21 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
                  v20,
                  (const char (*)[32])"common content load fail, path:");
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, script_path);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 400));
          *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = -117901064;
          if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_store4(v2 + 64, script_path);
          *(_DWORD *)(v2 + 64) = -1;
        }
        else
        {
          std::unordered_map<std::string,LuaCommonContent>::emplace<std::string&,LuaCommonContent&>(
            (std::unordered_map<std::string,LuaCommonContent> *const)(v2 + 608),
            script_path,
            (LuaCommonContent *)(v2 + 704),
            script_path,
            v19);
          *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 464) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 48 + 31) & 7) >= *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 464, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 464),
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/lua_config_mgr.cpp",
            "loadAllCommonScript",
            3919);
          v22 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
                  (common::milog::MiLogStream *const)(v2 + 464),
                  (const char (*)[23])"[CommonLua] file_path:");
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, script_path);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 464));
          *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = -117901064;
        }
        LuaCommonContent::~LuaCommonContent((LuaCommonContent *const)(v2 + 704));
        v23 = (_DWORD *)(((v2 + 704) >> 3) + 2147450880);
        *v23 = -117901064;
        v23[1] = -117901064;
        v23[2] = -117901064;
        __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::operator++((__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string> > *const)(v2 + 80));
      }
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      v24 = std::move<std::unordered_map<std::string,LuaCommonContent> &>((std::unordered_map<std::string,LuaCommonContent> *)(v2 + 608));
      std::unordered_map<std::string,LuaCommonContent>::operator=(&this->common_script_map, v24);
      if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_load4(v2 + 64);
      v9 = *(_DWORD *)(v2 + 64);
      std::unordered_map<std::string,LuaCommonContent>::~unordered_map((std::unordered_map<std::string,LuaCommonContent> *const)(v2 + 608));
    }
    std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 144));
  }
  if ( v29 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 76) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return v9;
};

// Line 3926: range 000000000F319780-000000000F319D3E
std::string *__cdecl LuaConfigMgr::getLuaRequireString(
        std::string *retstr,
        const LuaConfigMgr *const this,
        const std::string *path_str,
        const std::string *lua_base_str)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  common::milog::MiLogStream *v7; // rdx
  std::unordered_map<std::string,LuaCommonContent> *p_common_script_map; // rdx
  std::unordered_map<std::string,LuaCommonContent> *v9; // rdx
  bool v10; // al
  LuaCommonContent *p_second; // rdx
  char v15[352]; // [rsp+20h] [rbp-160h] BYREF

  v4 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_3(320LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "6 48 1 9 <unknown> 64 8 9 iter:3931 96 8 9 <unknown> 128 32 9 <unknown> 192 32 8 key:3930 256 32 9 <unknown>";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::getLuaRequireString;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234753551;
  v6[536862722] = -218959360;
  v6[536862723] = -218959360;
  v6[536862725] = -218959118;
  v6[536862727] = -218959118;
  v6[536862729] = -202116109;
  if ( *(char *)(((v4 + 128) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v4 + 159) >> 3) + 0x7FFF8000) != 0
    && (char)((v4 - 97) & 7) >= *(_BYTE *)(((v4 + 159) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v4 + 128, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v4 + 128),
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/lua_config_mgr.cpp",
    "getLuaRequireString",
    3928);
  v7 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
         (common::milog::MiLogStream *const)(v4 + 128),
         (const char (*)[13])"try get lua:");
  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, path_str);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 128));
  *(_DWORD *)(((v4 + 128) >> 3) + 0x7FFF8000) = -117901064;
  *(_DWORD *)(((v4 + 192) >> 3) + 0x7FFF8000) = 0;
  *(_DWORD *)(((v4 + 256) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v4 + 256) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v4 + 287) >> 3) + 0x7FFF8000) != 0
    && (char)((v4 + 31) & 7) >= *(_BYTE *)(((v4 + 287) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v4 + 256, 32LL);
  }
  std::operator+<char>((std::string *)(v4 + 256), lua_base_str, path_str);
  if ( *(char *)(((v4 + 192) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) != 0
    && (char)((v4 - 33) & 7) >= *(_BYTE *)(((v4 + 223) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v4 + 192, 32LL);
  }
  std::operator+<char>((std::string *)(v4 + 192), (std::string *)(v4 + 256), ".lua");
  std::string::~string((void *)(v4 + 256));
  *(_DWORD *)(((v4 + 256) >> 3) + 0x7FFF8000) = -117901064;
  *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) = 0;
  p_common_script_map = &this->common_script_map;
  if ( *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v4 + 64, v4 + 256);
  *(std::unordered_map<std::string,LuaCommonContent>::const_iterator *)(v4 + 64) = std::unordered_map<std::string,LuaCommonContent>::find(
                                                                                     p_common_script_map,
                                                                                     (const std::unordered_map<std::string,LuaCommonContent>::key_type *)(v4 + 192));
  *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) = 0;
  v9 = &this->common_script_map;
  if ( *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v4 + 96, v4 + 192);
  *(std::unordered_map<std::string,LuaCommonContent>::const_iterator *)(v4 + 96) = std::unordered_map<std::string,LuaCommonContent>::end(v9);
  v10 = std::__detail::operator==<std::pair<std::string const,LuaCommonContent>,true>(
          (const std::__detail::_Node_iterator_base<std::pair<const std::string,LuaCommonContent>,true> *)(v4 + 64),
          (const std::__detail::_Node_iterator_base<std::pair<const std::string,LuaCommonContent>,true> *)(v4 + 96));
  *(_BYTE *)(((v4 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v10 )
  {
    *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v4 + 48);
    std::string::basic_string<std::allocator<char>>(retstr, byte_1A4C6700, (const std::allocator<char> *)(v4 + 48));
    std::allocator<char>::~allocator(v4 + 48);
    *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) = -8;
  }
  else
  {
    p_second = &std::__detail::_Node_const_iterator<std::pair<std::string const,LuaCommonContent>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,LuaCommonContent>,false,true> *const)(v4 + 64))->second;
    std::string::basic_string(retstr, p_second);
  }
  std::string::~string((void *)(v4 + 192));
  if ( v15 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF801C) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return retstr;
};

// Line 3940: range 000000000F319D40-000000000F31A9B2
int32_t __cdecl LuaConfigMgr::rewriteWorldSceneGroupTemplesMap(LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  int32_t v2; // r14d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  HK4EDesignConfig *Config; // rax
  uint32_t DefaultWorldId; // edx
  char v8; // al
  SceneExcelConfigMgr *p_scene_config_mgr; // rcx
  __int64 v10; // rsi
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  uint32_t main_scene_id; // ecx
  char v14; // al
  std::unordered_map<unsigned int,SceneScriptConfig> *p_scene_script_config_map; // rdx
  std::unordered_map<unsigned int,SceneScriptConfig> *v16; // rdx
  char *v17; // rsi
  bool v18; // al
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  char *v21; // rsi
  std::unordered_map<unsigned int,unsigned int> *v22; // rcx
  const unsigned int *v23; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>,bool> v24; // rax
  common::milog::MiLogStream *v25; // rdx
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rdx
  int v28; // edx
  int v29; // edx
  common::milog::MiLogStream *v30; // rax
  int32_t result; // eax
  const data::WorldExcelConfig *world_config_ptr; // [rsp+10h] [rbp-280h]
  std::unordered_map<unsigned int,GroupScriptConfig> *__for_range; // [rsp+20h] [rbp-270h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::reference v34; // [rsp+28h] [rbp-268h]
  std::tuple_element<0,std::pair<unsigned int const,GroupScriptConfig> >::type *group_id; // [rsp+30h] [rbp-260h]
  std::unordered_map<unsigned int,GadgetScriptConfig> *__for_range_0; // [rsp+40h] [rbp-250h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false>::reference v37; // [rsp+48h] [rbp-248h]
  std::tuple_element<0,std::pair<unsigned int const,GadgetScriptConfig> >::type *config_id; // [rsp+50h] [rbp-240h]
  std::tuple_element<1,const std::pair<unsigned int const,GadgetScriptConfig> >::type *gadget_script_config; // [rsp+58h] [rbp-238h]
  char v40[560]; // [rsp+60h] [rbp-230h] BYREF

  v3 = (unsigned __int64)v40;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_3(512LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "12 32 4 13 world_id:3941 48 4 18 main_scene_id:3948 64 8 29 scene_script_config_iter:3949 96 8 9"
                        " <unknown> 128 8 16 __for_begin:3956 160 8 14 __for_end:3956 192 8 16 __for_begin:3958 224 8 14 "
                        "__for_end:3958 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 32 9 <unknown>";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::rewriteWorldSceneGroupTemplesMap;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556924;
  v5[536862722] = -218959360;
  v5[536862723] = -218959360;
  v5[536862724] = -218959360;
  v5[536862725] = -218959360;
  v5[536862726] = -218959360;
  v5[536862727] = -218959360;
  v5[536862729] = -218959118;
  v5[536862731] = -218959118;
  v5[536862733] = -218959118;
  v5[536862735] = -202116109;
  Config = LuaConfigMgr::getConfig(this);
  DefaultWorldId = ConstValueExcelConfigMgr::getDefaultWorldId(&Config->txt_config_mgr.const_value_config_mgr);
  v8 = *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000);
  if ( v8 != 0 && v8 <= 3 )
  {
    LOBYTE(v1) = v8 != 0;
    __asan_report_store4(v3 + 32, v1);
  }
  *(_DWORD *)(v3 + 32) = DefaultWorldId;
  p_scene_config_mgr = &LuaConfigMgr::getConfig(this)->txt_config_mgr.scene_config_mgr;
  if ( *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_load4(v3 + 32);
  v10 = *(unsigned int *)(v3 + 32);
  world_config_ptr = data::SceneExcelConfigMgrBase::findWorldExcelConfig(p_scene_config_mgr, v10);
  if ( world_config_ptr )
  {
    if ( *(_BYTE *)(((unsigned __int64)&world_config_ptr->main_scene_id >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&world_config_ptr->main_scene_id >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&world_config_ptr->main_scene_id);
    }
    main_scene_id = world_config_ptr->main_scene_id;
    v14 = *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000);
    LOBYTE(v10) = v14 != 0;
    if ( v14 != 0 && v14 <= 3 )
      __asan_report_store4(v3 + 48, v10);
    *(_DWORD *)(v3 + 48) = main_scene_id;
    p_scene_script_config_map = &this->scene_script_config_map;
    if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v3 + 64, v10);
    *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v3 + 64) = std::unordered_map<unsigned int,SceneScriptConfig>::find(
                                                                                   p_scene_script_config_map,
                                                                                   (const std::unordered_map<unsigned int,SceneScriptConfig>::key_type *)(v3 + 48));
    v16 = &this->scene_script_config_map;
    if ( *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v3 + 96, v3 + 48);
    *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v3 + 96) = std::unordered_map<unsigned int,SceneScriptConfig>::end(v16);
    v17 = (char *)(v3 + 96);
    v18 = std::__detail::operator==<std::pair<unsigned int const,SceneScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v3 + 64),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v3 + 96));
    *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v18 )
    {
      *(_DWORD *)(((v3 + 320) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 320) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 351) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 351) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 320, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 320),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/lua_config_mgr.cpp",
        "rewriteWorldSceneGroupTemplesMap",
        3952);
      v19 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
              (common::milog::MiLogStream *const)(v3 + 320),
              (const char (*)[15])"main_scene_id:");
      v20 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, (const unsigned int *)(v3 + 48));
      common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v20, (const char (*)[23])" SceneConfig not found");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 320));
      v2 = -1;
    }
    else
    {
      __for_range = &std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v3 + 64))->second.group_config_map;
      *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v3 + 128, v17);
      *(std::unordered_map<unsigned int,GroupScriptConfig>::const_iterator *)(v3 + 128) = std::unordered_map<unsigned int,GroupScriptConfig>::begin(__for_range);
      *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v3 + 160, v17);
      *(std::unordered_map<unsigned int,GroupScriptConfig>::const_iterator *)(v3 + 160) = std::unordered_map<unsigned int,GroupScriptConfig>::end(__for_range);
      while ( 1 )
      {
        v21 = (char *)(v3 + 160);
        if ( !std::__detail::operator!=<std::pair<unsigned int const,GroupScriptConfig>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v3 + 128),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v3 + 160)) )
          break;
        v34 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v3 + 128));
        group_id = std::get<0ul,unsigned int const,GroupScriptConfig>(v34);
        __for_range_0 = &std::get<1ul,unsigned int const,GroupScriptConfig>(v34)->gadget_config_map;
        *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 192, v21);
        *(std::unordered_map<unsigned int,GadgetScriptConfig>::const_iterator *)(v3 + 192) = std::unordered_map<unsigned int,GadgetScriptConfig>::begin(__for_range_0);
        *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 224, v21);
        *(std::unordered_map<unsigned int,GadgetScriptConfig>::const_iterator *)(v3 + 224) = std::unordered_map<unsigned int,GadgetScriptConfig>::end(__for_range_0);
        while ( 1 )
        {
          if ( !std::__detail::operator!=<std::pair<unsigned int const,GadgetScriptConfig>,false>(
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GadgetScriptConfig>,false> *)(v3 + 192),
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GadgetScriptConfig>,false> *)(v3 + 224)) )
          {
            v28 = 1;
            goto LABEL_51;
          }
          v37 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false> *const)(v3 + 192));
          config_id = std::get<0ul,unsigned int const,GadgetScriptConfig>(v37);
          gadget_script_config = (std::tuple_element<1,const std::pair<unsigned int const,GadgetScriptConfig> >::type *)std::get<1ul,unsigned int const,GadgetScriptConfig>(v37);
          if ( *(_BYTE *)(((unsigned __int64)&gadget_script_config->interact_id >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)gadget_script_config - 100) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&gadget_script_config->interact_id >> 3)
                                                                                 + 0x7FFF8000) )
          {
            __asan_report_load4(&gadget_script_config->interact_id);
          }
          if ( gadget_script_config->interact_id )
          {
            if ( *(_BYTE *)(((unsigned __int64)&gadget_script_config->explore_config >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&gadget_script_config->explore_config >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&gadget_script_config->explore_config);
            }
            if ( gadget_script_config->explore_config.type )
            {
              if ( *(_BYTE *)(((unsigned __int64)&gadget_script_config->explore_config.exp >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)gadget_script_config - 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&gadget_script_config->explore_config.exp >> 3)
                                                                                    + 0x7FFF8000) )
              {
                __asan_report_load4(&gadget_script_config->explore_config.exp);
              }
              if ( gadget_script_config->explore_config.exp )
              {
                v22 = std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::operator[](
                        &this->world_scene_group_temples_map,
                        group_id);
                v24 = std::unordered_map<unsigned int,unsigned int>::emplace<unsigned int const&,unsigned int const&>(
                        v22,
                        config_id,
                        &gadget_script_config->area_id,
                        (const unsigned int *)v22,
                        v23);
                if ( !v24.second )
                  break;
              }
            }
          }
          std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false> *const)(v3 + 192));
        }
        *(_DWORD *)(((v3 + 384) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v3 + 384) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v3 + 415) >> 3) + 0x7FFF8000) != 0
          && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 415) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v3 + 384, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 384),
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/lua_config_mgr.cpp",
          "rewriteWorldSceneGroupTemplesMap",
          3966);
        v25 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                (common::milog::MiLogStream *const)(v3 + 384),
                (const char (*)[21])"duplicate config_id:");
        v26 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v25, config_id);
        v27 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v26, (const char (*)[11])" group_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v27, group_id);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 384));
        *(_DWORD *)(((v3 + 384) >> 3) + 0x7FFF8000) = -117901064;
        v2 = -1;
        v28 = 0;
LABEL_51:
        *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) = -8;
        if ( v28 != 1 )
        {
          v29 = 0;
          goto LABEL_55;
        }
        std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v3 + 128));
      }
      v29 = 1;
LABEL_55:
      *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = -8;
      if ( v29 == 1 )
      {
        *(_DWORD *)(((v3 + 448) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v3 + 448) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v3 + 479) >> 3) + 0x7FFF8000) != 0
          && (char)((v3 - 64 + 31) & 7) >= *(_BYTE *)(((v3 + 479) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v3 + 448, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 448),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/lua_config_mgr.cpp",
          "rewriteWorldSceneGroupTemplesMap",
          3972);
        v30 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                (common::milog::MiLogStream *const)(v3 + 448),
                (const char (*)[21])"load temple configs:");
        common::milog::MiLogStream::operator<<<unsigned int,std::unordered_map<unsigned int,unsigned int>>(
          v30,
          &this->world_scene_group_temples_map);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 448));
        v2 = 0;
      }
    }
  }
  else
  {
    if ( *(char *)(((v3 + 256) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 287) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 287) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 256, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v3 + 256),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "rewriteWorldSceneGroupTemplesMap",
      3945);
    v11 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
            (common::milog::MiLogStream *const)(v3 + 256),
            (const char (*)[22])"findWorldExcelConfig ");
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v3 + 32));
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 256));
    v2 = -1;
  }
  result = v2;
  if ( v40 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8024) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF802C) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8034) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF803C) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3977: range 000000000F31A9B4-000000000F31BB57
__int64 __fastcall LuaConfigMgr::checkGroupGadgetScriptConfig(
        LuaConfigMgr *const this,
        const GadgetScriptConfig *gadget_script_config,
        uint32_t scene_id)
{
  unsigned int v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  data::GadgetExcelConfigMgrBase *p_gadget_config_mgr; // rcx
  common::milog::MiLogStream *v8; // rax
  int type; // eax
  common::milog::MiLogStream *v10; // rax
  int v11; // eax
  __int64 v12; // rsi
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v13; // rax
  int *v14; // rdx
  int v15; // ecx
  char v16; // al
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  int v21; // eax
  __int64 v22; // rsi
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v23; // rax
  int *v24; // rdx
  int v25; // ecx
  char v26; // al
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  int v30; // eax
  __int64 v31; // rsi
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v32; // rax
  int *v33; // rdx
  int v34; // ecx
  char v35; // al
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // rax
  common::milog::MiLogStream *v40; // rax
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // rax
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  common::milog::MiLogStream *v45; // rax
  common::milog::MiLogStream *v46; // rax
  common::milog::MiLogStream *v47; // rax
  __int64 result; // rax
  HK4EDesignConfig *config; // [rsp+20h] [rbp-350h]
  const data::GadgetExcelConfig *gadget_excel_config_ptr; // [rsp+28h] [rbp-348h]
  const data::SceneExcelConfig *scene_config_ptr; // [rsp+48h] [rbp-328h]
  char v54[784]; // [rsp+60h] [rbp-310h] BYREF

  v4 = (unsigned __int64)v54;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_4(736LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "14 32 4 13 voice_id:3994 48 4 16 argument_id:4021 64 4 16 argument_id:4039 80 4 13 scene_id:3976"
                        " 96 32 9 <unknown> 160 32 9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 4"
                        "16 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 <unknown> 672 32 9 <unknown>";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::checkGroupGadgetScriptConfig;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556924;
  v6[536862722] = -234556924;
  v6[536862724] = -218959118;
  v6[536862726] = -218959118;
  v6[536862728] = -218959118;
  v6[536862730] = -218959118;
  v6[536862732] = -218959118;
  v6[536862734] = -218959118;
  v6[536862736] = -218959118;
  v6[536862738] = -218959118;
  v6[536862740] = -218959118;
  v6[536862742] = -202116109;
  *(_DWORD *)(v4 + 80) = scene_id;
  config = LuaConfigMgr::getConfig(this);
  p_gadget_config_mgr = &config->txt_config_mgr.gadget_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&gadget_script_config->gadget_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)gadget_script_config + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&gadget_script_config->gadget_id >> 3)
                                                                       + 0x7FFF8000) )
  {
    __asan_report_load4(&gadget_script_config->gadget_id);
  }
  gadget_excel_config_ptr = data::GadgetExcelConfigMgrBase::findGadgetExcelConfig(
                              p_gadget_config_mgr,
                              gadget_script_config->gadget_id);
  if ( !gadget_excel_config_ptr )
  {
    if ( *(char *)(((v4 + 96) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v4 + 127) >> 3) + 0x7FFF8000) != 0
      && (char)((v4 + 127) & 7) >= *(_BYTE *)(((v4 + 127) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v4 + 96, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v4 + 96),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkGroupGadgetScriptConfig",
      3982);
    v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v4 + 96),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      v8,
      (const char (*)[29])"findGadgetExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 96));
    v3 = -1;
    goto LABEL_80;
  }
  if ( *(_BYTE *)(((unsigned __int64)&gadget_excel_config_ptr->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)gadget_excel_config_ptr + 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&gadget_excel_config_ptr->type >> 3)
                                                                           + 0x7FFF8000) )
  {
    __asan_report_load4(&gadget_excel_config_ptr->type);
  }
  type = gadget_excel_config_ptr->type;
  if ( type == 71 )
  {
    if ( std::vector<unsigned int>::size(&gadget_script_config->argument_vec) == 1 )
    {
      v31 = 0LL;
      v32 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                  &gadget_script_config->argument_vec,
                                                                                                  0LL);
      v33 = (int *)v32;
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v32 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v32);
      }
      v34 = *v33;
      v35 = *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000);
      if ( v35 != 0 && v35 <= 3 )
      {
        LOBYTE(v31) = v35 != 0;
        __asan_report_store4(v4 + 64, v31);
      }
      *(_DWORD *)(v4 + 64) = v34;
      if ( data::GadgetArgumentExcelConfigMgrBase::findDeshretObeliskArgumentExcelConfig(
             &config->txt_config_mgr.gadget_argument_config_mgr,
             *(_DWORD *)(v4 + 64)) )
      {
        scene_config_ptr = data::SceneExcelConfigMgrBase::findSceneExcelConfig(
                             &config->txt_config_mgr.scene_config_mgr,
                             *(_DWORD *)(v4 + 80));
        if ( scene_config_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&scene_config_ptr->type >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)scene_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&scene_config_ptr->type >> 3)
                                                                            + 0x7FFF8000) )
          {
            __asan_report_load4(&scene_config_ptr->type);
          }
          if ( scene_config_ptr->type == SCENE_WORLD )
          {
            v30 = 1;
          }
          else
          {
            if ( *(char *)(((v4 + 672) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v4 + 703) >> 3) + 0x7FFF8000) != 0
              && (char)((v4 - 96 + 31) & 7) >= *(_BYTE *)(((v4 + 703) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v4 + 672, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v4 + 672),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "checkGroupGadgetScriptConfig",
              4056);
            v42 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v4 + 672),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v43 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                    v42,
                    (const char (*)[52])byte_1A543840);
            v44 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v43,
                    (const unsigned int *)(v4 + 80));
            v45 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                    v44,
                    (const char (*)[14])", config_id: ");
            v46 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v45,
                    &gadget_script_config->config_id);
            v47 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    v46,
                    (const char (*)[16])", argument_id: ");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v47, (const unsigned int *)(v4 + 64));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 672));
            v3 = -1;
            v30 = 0;
          }
        }
        else
        {
          if ( *(char *)(((v4 + 608) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v4 + 639) >> 3) + 0x7FFF8000) != 0
            && (char)((v4 + 127) & 7) >= *(_BYTE *)(((v4 + 639) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v4 + 608, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v4 + 608),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "checkGroupGadgetScriptConfig",
            4051);
          v40 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v4 + 608),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v41 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v40, (const char (*)[26])byte_1A543800);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v41, (const unsigned int *)(v4 + 80));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 608));
          v3 = -1;
          v30 = 0;
        }
      }
      else
      {
        if ( *(char *)(((v4 + 544) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v4 + 575) >> 3) + 0x7FFF8000) != 0
          && (char)((v4 - 32 + 95) & 7) >= *(_BYTE *)(((v4 + 575) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v4 + 544, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v4 + 544),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "checkGroupGadgetScriptConfig",
          4044);
        v36 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v4 + 544),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v37 = common::milog::MiLogStream::operator<<<char [60],(char *[60])0>(
                v36,
                (const char (*)[60])"findDeshretObeliskArgumentExcelConfig failed, argument id: ");
        v38 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v37,
                (const unsigned int *)(v4 + 64));
        v39 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v38, (const char (*)[14])", gadget_id: ");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v39, &gadget_script_config->gadget_id);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 544));
        v3 = -1;
        v30 = 0;
      }
    }
    else
    {
      if ( *(char *)(((v4 + 480) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 511) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 32 + 31) & 7) >= *(_BYTE *)(((v4 + 511) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 480, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 480),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkGroupGadgetScriptConfig",
        4035);
      v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v4 + 480),
              (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
        v29,
        (const char (*)[52])"DeshretObeliskGadget should have exactly 1 argument");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 480));
      v3 = -1;
      v30 = 0;
    }
    if ( v30 )
      goto LABEL_79;
    goto LABEL_80;
  }
  if ( type > 71 )
    goto LABEL_78;
  if ( type == 69 )
  {
    if ( std::vector<unsigned int>::size(&gadget_script_config->argument_vec) == 1 )
    {
      v22 = 0LL;
      v23 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                  &gadget_script_config->argument_vec,
                                                                                                  0LL);
      v24 = (int *)v23;
      if ( *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v23 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v23);
      }
      v25 = *v24;
      v26 = *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000);
      if ( v26 != 0 && v26 <= 3 )
      {
        LOBYTE(v22) = v26 != 0;
        __asan_report_store4(v4 + 48, v22);
      }
      *(_DWORD *)(v4 + 48) = v25;
      if ( data::GadgetArgumentExcelConfigMgrBase::findNightCrowArgumentExcelConfig(
             &config->txt_config_mgr.gadget_argument_config_mgr,
             *(_DWORD *)(v4 + 48)) )
      {
        v21 = 1;
      }
      else
      {
        if ( *(char *)(((v4 + 416) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v4 + 447) >> 3) + 0x7FFF8000) != 0
          && (char)((v4 - 96 + 31) & 7) >= *(_BYTE *)(((v4 + 447) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v4 + 416, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v4 + 416),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "checkGroupGadgetScriptConfig",
          4026);
        v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v4 + 416),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v28 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
                v27,
                (const char (*)[55])"findNightCrowArgumentExcelConfig failed, argument id: ");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v28, (const unsigned int *)(v4 + 48));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 416));
        v3 = -1;
        v21 = 0;
      }
    }
    else
    {
      if ( *(char *)(((v4 + 352) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 383) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 + 127) & 7) >= *(_BYTE *)(((v4 + 383) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 352, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 352),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkGroupGadgetScriptConfig",
        4017);
      v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v4 + 352),
              (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
        v20,
        (const char (*)[41])"night crow gadget should have 1 argument");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 352));
      v3 = -1;
      v21 = 0;
    }
    if ( v21 )
      goto LABEL_79;
    goto LABEL_80;
  }
  if ( type > 69 )
  {
LABEL_78:
    v3 = 0;
    goto LABEL_80;
  }
  if ( type != 56 )
  {
    if ( type != 59 )
      goto LABEL_78;
    if ( !std::vector<unsigned int>::size(&gadget_script_config->argument_vec) )
    {
      if ( *(char *)(((v4 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 32 + 95) & 7) >= *(_BYTE *)(((v4 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkGroupGadgetScriptConfig",
        4006);
      v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v4 + 288),
              (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
        v19,
        (const char (*)[36])"screen should have a live_id config");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 288));
      v3 = -1;
      goto LABEL_80;
    }
LABEL_79:
    v3 = 0;
    goto LABEL_80;
  }
  if ( std::vector<unsigned int>::size(&gadget_script_config->argument_vec) )
  {
    v12 = 0LL;
    v13 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                &gadget_script_config->argument_vec,
                                                                                                0LL);
    v14 = (int *)v13;
    if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v13 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v13);
    }
    v15 = *v14;
    v16 = *(_BYTE *)(((v4 + 32) >> 3) + 0x7FFF8000);
    if ( v16 != 0 && v16 <= 3 )
    {
      LOBYTE(v12) = v16 != 0;
      __asan_report_store4(v4 + 32, v12);
    }
    *(_DWORD *)(v4 + 32) = v15;
    if ( data::ActivityEchoShellExcelConfigMgrBase::findEchoShellExcelConfig(
           &config->txt_config_mgr.activity_echo_shell_config_mgr,
           *(_DWORD *)(v4 + 32)) )
    {
      v11 = 1;
    }
    else
    {
      if ( *(char *)(((v4 + 224) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 255) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 32 + 31) & 7) >= *(_BYTE *)(((v4 + 255) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 224, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 224),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkGroupGadgetScriptConfig",
        3997);
      v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v4 + 224),
              (const char (*)[16])"[CONFIG_ERROR] ");
      v18 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
              v17,
              (const char (*)[43])"findEchoShellExcelConfig failed, voice_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, (const unsigned int *)(v4 + 32));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 224));
      v3 = -1;
      v11 = 0;
    }
  }
  else
  {
    if ( *(char *)(((v4 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v4 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v4 - 96 + 31) & 7) >= *(_BYTE *)(((v4 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v4 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v4 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkGroupGadgetScriptConfig",
      3991);
    v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v4 + 160),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
      v10,
      (const char (*)[48])"gadget echo shell should have a voice_id config");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 160));
    v3 = -1;
    v11 = 0;
  }
  if ( v11 )
    goto LABEL_79;
LABEL_80:
  result = v3;
  if ( v54 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8010) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8018) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8028) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8030) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8038) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8040) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8048) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8050) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8058) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8058) = -168430091;
  }
  return result;
};

// Line 4068: range 000000000F31BB58-000000000F31BD5D
const std::map<unsigned int,MonsterScriptConfig> *__cdecl LuaConfigMgr::findMonsterPoolByPoolId(
        const LuaConfigMgr *const this,
        uint32_t monster_pool_id)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  const HK4EDesignConfig *Config; // rax
  uint32_t DefaultWorldMainSceneId; // edx
  const std::map<unsigned int,MonsterScriptConfig> *result; // rax
  const SceneScriptConfig *scene_script_config_ptr; // [rsp+18h] [rbp-88h]
  char v9[128]; // [rsp+20h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::findMonsterPoolByPoolId;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450888) = -202116109;
  Config = LuaConfigMgr::getConfig(this);
  DefaultWorldMainSceneId = TxtConfigMgr::getDefaultWorldMainSceneId(&Config->txt_config_mgr);
  scene_script_config_ptr = LuaConfigMgr::findSceneScriptConfig(this, DefaultWorldMainSceneId);
  if ( scene_script_config_ptr )
  {
    result = SceneScriptConfig::findMonsterPoolByPoolId(scene_script_config_ptr, monster_pool_id);
  }
  else
  {
    if ( *(char *)(((v2 + 32) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 63) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 63) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 32, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 32),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/lua_config_mgr.cpp",
      "findMonsterPoolByPoolId",
      4073);
    common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
      (common::milog::MiLogStream *const)(v2 + 32),
      (const char (*)[36])"main scene scritp config not found!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 32));
    result = 0LL;
  }
  if ( v9 == (char *)v2 )
  {
    *(_DWORD *)((v2 >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 4080: range 000000000F31BD5E-000000000F31BF19
const std::set<unsigned int> *__fastcall LuaConfigMgr::queryGadgetGroups(
        const LuaConfigMgr *const this,
        __int64 gadget_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,std::set<unsigned int>> *p_gadget_id_to_groups_map; // rdx
  std::unordered_map<unsigned int,std::set<unsigned int>> *v6; // rdx
  bool v7; // al
  const std::set<unsigned int> *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 14 gadget_id:4079 64 8 9 iter:4081 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::queryGadgetGroups;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = gadget_id;
  p_gadget_id_to_groups_map = &this->gadget_id_to_groups_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, gadget_id);
  *(std::unordered_map<unsigned int,std::set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::set<unsigned int>>::find(
                                                                                            p_gadget_id_to_groups_map,
                                                                                            (const std::unordered_map<unsigned int,std::set<unsigned int>>::key_type *)(v2 + 48));
  v6 = &this->gadget_id_to_groups_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,std::set<unsigned int>>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,std::set<unsigned int>>::end(v6);
  v7 = std::__detail::operator!=<std::pair<unsigned int const,std::set<unsigned int>>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<unsigned int> >,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<unsigned int> >,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<unsigned int> >,false,false> *const)(v2 + 64))->second;
  else
    result = 0LL;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4090: range 000000000F31BF1A-000000000F32001D
int32_t __cdecl LuaConfigMgr::doLuaStaticCheck(const LuaConfigMgr *const this)
{
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  int32_t v4; // r14d
  const HK4EDesignConfig *Config; // rax
  std::string *p_metalua_base_dir; // rsi
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  LuaScript *v9; // rax
  char *v10; // rsi
  common::milog::MiLogStream *v11; // rax
  int v12; // eax
  char *v13; // rsi
  common::milog::MiLogStream *v14; // rax
  unsigned __int64 v15; // rax
  char v16; // dl
  __int64 v17; // rsi
  char *v18; // rsi
  const GroupScriptConfig *v19; // rsi
  char *v20; // rsi
  unsigned int *v21; // rax
  int *v22; // rdx
  int v23; // ecx
  char v24; // al
  common::milog::MiLogStream *v25; // rax
  common::tools::csvfile *v26; // rax
  common::tools::csvfile *v27; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v28; // rax
  std::array<unsigned int,4>::reference v29; // rax
  int *v30; // rdx
  int v31; // r14d
  std::array<unsigned int,4>::reference v32; // rax
  _DWORD *v33; // rdx
  int v34; // r14d
  std::array<unsigned int,4>::reference v35; // rax
  _DWORD *v36; // rdx
  int v37; // r14d
  std::array<unsigned int,4>::reference v38; // rax
  _DWORD *v39; // rdx
  std::array<unsigned int,4>::reference v40; // rax
  int *v41; // rdx
  double v42; // xmm0_8
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v43; // r14
  std::array<unsigned int,4>::reference v44; // rax
  unsigned int *v45; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // r14
  std::array<unsigned int,4>::reference v48; // rax
  unsigned int *v49; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // r14
  std::array<unsigned int,4>::reference v52; // rax
  unsigned int *v53; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v55; // r14
  std::array<unsigned int,4>::reference v56; // rax
  unsigned int *v57; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v58; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v59; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v60; // rax
  common::tools::csvfile *v61; // rax
  const std::string *v62; // rsi
  common::tools::csvfile *v63; // rax
  common::tools::csvfile *v64; // rax
  common::tools::csvfile *v65; // rax
  common::tools::csvfile *v66; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v67; // rax
  common::tools::csvfile *v68; // rax
  const std::string *v69; // rsi
  common::tools::csvfile *v70; // rax
  common::tools::csvfile *v71; // rax
  common::tools::csvfile *v72; // rax
  common::tools::csvfile *v73; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v74; // rax
  std::array<unsigned int,4>::reference v75; // rax
  int *v76; // rdx
  int v77; // r14d
  std::array<unsigned int,4>::reference v78; // rax
  _DWORD *v79; // rdx
  int v80; // r14d
  std::array<unsigned int,4>::reference v81; // rax
  _DWORD *v82; // rdx
  int v83; // r14d
  std::array<unsigned int,4>::reference v84; // rax
  _DWORD *v85; // rdx
  std::array<unsigned int,4>::reference v86; // rax
  int *v87; // rdx
  double v88; // xmm0_8
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v89; // r14
  std::array<unsigned int,4>::reference v90; // rax
  unsigned int *v91; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v92; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v93; // r14
  std::array<unsigned int,4>::reference v94; // rax
  unsigned int *v95; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v96; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v97; // r14
  std::array<unsigned int,4>::reference v98; // rax
  unsigned int *v99; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v100; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v101; // r14
  std::array<unsigned int,4>::reference v102; // rax
  unsigned int *v103; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v104; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v105; // rdx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v106; // rax
  common::tools::csvfile *v107; // rax
  const std::string *v108; // rsi
  common::tools::csvfile *v109; // rax
  common::tools::csvfile *v110; // rax
  common::tools::csvfile *v111; // rax
  common::tools::csvfile *v112; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v113; // rax
  common::tools::csvfile *v114; // rax
  const std::string *v115; // rsi
  common::tools::csvfile *v116; // rax
  common::tools::csvfile *v117; // rax
  common::milog::MiLogStream *v118; // rcx
  double v119; // xmm0_8
  common::milog::MiLogStream *v120; // rax
  common::milog::MiLogStream *v121; // rcx
  double v122; // xmm0_8
  lua_State_0 *L; // [rsp+20h] [rbp-12B0h]
  std::unordered_map<unsigned int,SceneScriptConfig> *__for_range; // [rsp+28h] [rbp-12A8h]
  std::set<unsigned int> *__for_range_3; // [rsp+30h] [rbp-12A0h]
  const GroupScriptConfig *script_config_ptr; // [rsp+38h] [rbp-1298h]
  std::unordered_map<unsigned int,SceneScriptConfig> *__for_range_1; // [rsp+40h] [rbp-1290h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::reference v129; // [rsp+48h] [rbp-1288h]
  std::unordered_map<unsigned int,GroupScriptConfig> *__for_range_2; // [rsp+60h] [rbp-1270h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::reference v131; // [rsp+68h] [rbp-1268h]
  std::map<std::string,std::vector<std::string>> *__for_range_4; // [rsp+80h] [rbp-1250h]
  std::map<std::string,std::vector<std::string>> *__for_range_6; // [rsp+88h] [rbp-1248h]
  std::map<std::string,std::vector<std::string>> *__for_range_8; // [rsp+90h] [rbp-1240h]
  std::map<std::string,std::vector<std::string>> *__for_range_10; // [rsp+98h] [rbp-1238h]
  std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::reference v136; // [rsp+A0h] [rbp-1230h]
  std::tuple_element<0,std::pair<const std::string,std::vector<std::string> > >::type *func_name_2; // [rsp+A8h] [rbp-1228h]
  std::tuple_element<1,const std::pair<const std::string,std::vector<std::string> > >::type *err_infos_2; // [rsp+B0h] [rbp-1220h]
  std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::reference v139; // [rsp+C8h] [rbp-1208h]
  std::tuple_element<0,std::pair<const std::string,std::vector<std::string> > >::type *func_name_1; // [rsp+D0h] [rbp-1200h]
  std::tuple_element<1,const std::pair<const std::string,std::vector<std::string> > >::type *err_infos_1; // [rsp+D8h] [rbp-11F8h]
  common::tools::transcribe_cv_t_2 *array_ptr_0; // [rsp+E0h] [rbp-11F0h]
  double total_0; // [rsp+F0h] [rbp-11E0h]
  double rate_0; // [rsp+F8h] [rbp-11D8h]
  std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::reference v145; // [rsp+110h] [rbp-11C0h]
  std::tuple_element<0,std::pair<const std::string,std::vector<std::string> > >::type *func_name_0; // [rsp+118h] [rbp-11B8h]
  std::tuple_element<1,const std::pair<const std::string,std::vector<std::string> > >::type *err_infos_0; // [rsp+120h] [rbp-11B0h]
  std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::reference v148; // [rsp+138h] [rbp-1198h]
  std::tuple_element<0,std::pair<const std::string,std::vector<std::string> > >::type *func_name; // [rsp+140h] [rbp-1190h]
  std::tuple_element<1,const std::pair<const std::string,std::vector<std::string> > >::type *err_infos; // [rsp+148h] [rbp-1188h]
  common::tools::transcribe_cv_t_2 *array_ptr; // [rsp+150h] [rbp-1180h]
  double total; // [rsp+160h] [rbp-1170h]
  double rate; // [rsp+168h] [rbp-1168h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::reference v154; // [rsp+188h] [rbp-1148h]
  std::unordered_map<unsigned int,GroupScriptConfig> *__for_range_0; // [rsp+1A0h] [rbp-1130h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::reference v156; // [rsp+1A8h] [rbp-1128h]
  char v157[4368]; // [rsp+1C0h] [rbp-1110h] BYREF

  v1 = (unsigned __int64)v157;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_7(4320LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "61 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 4 16 group_count:4116 "
                        "112 4 13 group_id:4181 128 8 16 __for_begin:4117 160 8 14 __for_end:4117 192 8 16 __for_begin:41"
                        "19 224 8 14 __for_end:4119 256 8 16 __for_begin:4163 288 8 14 __for_end:4163 320 8 16 __for_begi"
                        "n:4165 352 8 14 __for_end:4165 384 8 16 __for_begin:4181 416 8 14 __for_end:4181 448 8 16 __for_"
                        "begin:4201 480 8 14 __for_end:4201 512 8 16 __for_begin:4217 544 8 14 __for_end:4217 576 8 16 __"
                        "for_begin:4224 608 8 14 __for_end:4224 640 8 16 __for_begin:4230 672 8 14 __for_end:4230 704 8 1"
                        "6 __for_begin:4251 736 8 14 __for_end:4251 768 8 16 __for_begin:4267 800 8 14 __for_end:4267 832"
                        " 8 16 __for_begin:4274 864 8 14 __for_end:4274 896 8 16 __for_begin:4280 928 8 14 __for_end:4280"
                        " 960 8 9 <unknown> 992 8 9 <unknown> 1024 16 9 <unknown> 1056 16 19 lua_script_ptr:4103 1088 16 "
                        "9 <unknown> 1120 16 8 oss:4204 1152 16 8 oss:4227 1184 16 8 oss:4254 1216 16 8 oss:4277 1248 32 "
                        "9 <unknown> 1312 32 16 parser_path:4101 1376 32 9 <unknown> 1440 32 9 <unknown> 1504 32 9 <unkno"
                        "wn> 1568 32 9 <unknown> 1632 32 9 <unknown> 1696 32 9 <unknown> 1760 32 9 <unknown> 1824 32 9 <u"
                        "nknown> 1888 32 9 <unknown> 1952 32 9 <unknown> 2016 32 9 <unknown> 2080 32 9 <unknown> 2144 32 "
                        "9 <unknown> 2208 32 9 <unknown> 2272 40 10 param:4158 2352 400 12 context:4160 2816 616 8 csv:41"
                        "99 3568 616 16 skipped_csv:4249";
  *(_QWORD *)(v1 + 16) = LuaConfigMgr::doLuaStaticCheck;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753535;
  v3[536862722] = -234753535;
  v3[536862723] = -234556924;
  v3[536862724] = -218959360;
  v3[536862725] = -218959360;
  v3[536862726] = -218959360;
  v3[536862727] = -218959360;
  v3[536862728] = -218959360;
  v3[536862729] = -218959360;
  v3[536862730] = -218959360;
  v3[536862731] = -218959360;
  v3[536862732] = -218959360;
  v3[536862733] = -218959360;
  v3[536862734] = -218959360;
  v3[536862735] = -218959360;
  v3[536862736] = -218959360;
  v3[536862737] = -218959360;
  v3[536862738] = -218959360;
  v3[536862739] = -218959360;
  v3[536862740] = -218959360;
  v3[536862741] = -218959360;
  v3[536862742] = -218959360;
  v3[536862743] = -218959360;
  v3[536862744] = -218959360;
  v3[536862745] = -218959360;
  v3[536862746] = -218959360;
  v3[536862747] = -218959360;
  v3[536862748] = -218959360;
  v3[536862749] = -218959360;
  v3[536862750] = -218959360;
  v3[536862751] = -218959360;
  v3[536862752] = -219021312;
  v3[536862753] = -219021312;
  v3[536862754] = -219021312;
  v3[536862755] = -219021312;
  v3[536862756] = -219021312;
  v3[536862757] = -219021312;
  v3[536862758] = -219021312;
  v3[536862760] = -218959118;
  v3[536862762] = -218959118;
  v3[536862764] = -218959118;
  v3[536862766] = -218959118;
  v3[536862768] = -218959118;
  v3[536862770] = -218959118;
  v3[536862772] = -218959118;
  v3[536862774] = -218959118;
  v3[536862776] = -218959118;
  v3[536862778] = -218959118;
  v3[536862780] = -218959118;
  v3[536862782] = -218959118;
  v3[536862784] = -218959118;
  v3[536862786] = -218959118;
  v3[536862788] = -218959118;
  v3[536862790] = -218959118;
  v3[536862792] = -218959360;
  v3[536862793] = 62194;
  v3[536862806] = -218959118;
  v3[536862807] = -218959118;
  v3[536862827] = -218959360;
  v3[536862828] = -218959118;
  v3[536862829] = -218959118;
  v3[536862830] = -218959118;
  v3[536862831] = 62194;
  v3[536862850] = -218103808;
  v3[536862851] = -202116109;
  v3[536862852] = -202116109;
  v3[536862853] = -202116109;
  v3[536862854] = -202116109;
  LuaScriptMgr::getLuaScriptMgr();
  if ( *(_WORD *)(((v1 + 1024) >> 3) + 0x7FFF8000) )
    __asan_report_store16();
  LuaScriptMgr::getLuaState((LuaScriptMgr *const)(v1 + 1024));
  L = std::__shared_ptr<lua_State,(__gnu_cxx::_Lock_policy)2>::get((const std::__shared_ptr<lua_State,(__gnu_cxx::_Lock_policy)2> *const)(v1 + 1024));
  std::shared_ptr<lua_State>::~shared_ptr((std::shared_ptr<lua_State> *const)(v1 + 1024));
  *(_WORD *)(((v1 + 1024) >> 3) + 0x7FFF8000) = -1800;
  if ( L )
  {
    Config = LuaConfigMgr::getConfig(this);
    LuaScriptMgr::appendPacakgeRequirePath(&Config->metalua_base_dir);
    *(_DWORD *)(((v1 + 1312) >> 3) + 0x7FFF8000) = 0;
    p_metalua_base_dir = &LuaConfigMgr::getConfig(this)->metalua_base_dir;
    if ( *(char *)(((v1 + 1312) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v1 + 1343) >> 3) + 0x7FFF8000) != 0
      && (char)((v1 - 32 + 95) & 7) >= *(_BYTE *)(((v1 + 1343) >> 3) + 0x7FFF8000) )
    {
      p_metalua_base_dir = (std::string *)32;
      __asan_report_store_n(v1 + 1312, 32LL);
    }
    std::operator+<char>((std::string *)(v1 + 1312), p_metalua_base_dir, &this->lua_parser_file);
    *(_DWORD *)(((v1 + 1376) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v1 + 1376) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v1 + 1407) >> 3) + 0x7FFF8000) != 0
      && (char)((v1 + 127) & 7) >= *(_BYTE *)(((v1 + 1407) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v1 + 1376, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v1 + 1376),
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/lua_config_mgr.cpp",
      "doLuaStaticCheck",
      4102);
    v7 = common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(
           (common::milog::MiLogStream *const)(v1 + 1376),
           (const char (*)[18])" lua parser path:");
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, (const std::string *)(v1 + 1312));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 1376));
    *(_DWORD *)(((v1 + 1376) >> 3) + 0x7FFF8000) = -117901064;
    *(_WORD *)(((v1 + 1056) >> 3) + 0x7FFF8000) = 0;
    *(_WORD *)(((v1 + 1088) >> 3) + 0x7FFF8000) = 0;
    if ( *(_WORD *)(((v1 + 1088) >> 3) + 0x7FFF8000) )
      __asan_report_store16();
    LuaScriptMgr::getLuaState((LuaScriptMgr *const)(v1 + 1088));
    if ( *(_WORD *)(((v1 + 1056) >> 3) + 0x7FFF8000) )
      __asan_report_store16();
    common::tools::perf::make_shared<LuaScript,std::shared_ptr<lua_State>>(
      (common::tools::perf::allocator<LuaScript,LuaScript> *)(v1 + 1056),
      (std::shared_ptr<lua_State> *)(v1 + 1088));
    std::shared_ptr<lua_State>::~shared_ptr((std::shared_ptr<lua_State> *const)(v1 + 1088));
    *(_WORD *)(((v1 + 1088) >> 3) + 0x7FFF8000) = -1800;
    if ( std::operator==<LuaScript>((const std::shared_ptr<LuaScript> *)(v1 + 1056), 0LL) )
    {
      *(_DWORD *)(((v1 + 1440) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v1 + 1440) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v1 + 1471) >> 3) + 0x7FFF8000) != 0
        && (char)((v1 - 96 + 31) & 7) >= *(_BYTE *)(((v1 + 1471) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v1 + 1440, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v1 + 1440),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "doLuaStaticCheck",
        4106);
      v8 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
             (common::milog::MiLogStream *const)(v1 + 1440),
             (const char (*)[25])"create LuaScript failed:");
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, (const std::string *)(v1 + 1312));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 1440));
      *(_DWORD *)(((v1 + 1440) >> 3) + 0x7FFF8000) = -117901064;
      v4 = -1;
    }
    else
    {
      v9 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 1056));
      v10 = (char *)(v1 + 1312);
      if ( LuaScript::loadNormalLuaFile(v9, (const std::string *)(v1 + 1312), this) )
      {
        *(_DWORD *)(((v1 + 1504) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v1 + 1504) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v1 + 1535) >> 3) + 0x7FFF8000) != 0
          && (char)((v1 - 32 + 31) & 7) >= *(_BYTE *)(((v1 + 1535) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v1 + 1504, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v1 + 1504),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/lua_config_mgr.cpp",
          "doLuaStaticCheck",
          4112);
        v11 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                (common::milog::MiLogStream *const)(v1 + 1504),
                (const char (*)[49])" skip lua static check loadNormalLuaFile failed:");
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v11, (const std::string *)(v1 + 1312));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 1504));
        *(_DWORD *)(((v1 + 1504) >> 3) + 0x7FFF8000) = -117901064;
        v4 = 0;
      }
      else
      {
        *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) = 4;
        v12 = *(unsigned __int8 *)(((v1 + 96) >> 3) + 0x7FFF8000);
        if ( (_BYTE)v12 != 0 && (char)v12 <= 3 )
          __asan_report_store4(v1 + 96, v10);
        *(_DWORD *)(v1 + 96) = 0;
        __for_range = &this->scene_script_config_map;
        *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 128, v10);
        *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v1 + 128) = std::unordered_map<unsigned int,SceneScriptConfig>::begin(__for_range);
        *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 160, v10);
        *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v1 + 160) = std::unordered_map<unsigned int,SceneScriptConfig>::end(__for_range);
        while ( 1 )
        {
          v13 = (char *)(v1 + 160);
          if ( !std::__detail::operator!=<std::pair<unsigned int const,SceneScriptConfig>,false>(
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v1 + 128),
                  (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v1 + 160)) )
            break;
          v154 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v1 + 128));
          std::get<0ul,unsigned int const,SceneScriptConfig>(v154);
          __for_range_0 = &std::get<1ul,unsigned int const,SceneScriptConfig>(v154)->group_config_map;
          *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 192, v13);
          *(std::unordered_map<unsigned int,GroupScriptConfig>::const_iterator *)(v1 + 192) = std::unordered_map<unsigned int,GroupScriptConfig>::begin(__for_range_0);
          *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 224, v13);
          *(std::unordered_map<unsigned int,GroupScriptConfig>::const_iterator *)(v1 + 224) = std::unordered_map<unsigned int,GroupScriptConfig>::end(__for_range_0);
          while ( std::__detail::operator!=<std::pair<unsigned int const,GroupScriptConfig>,false>(
                    (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v1 + 192),
                    (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v1 + 224)) )
          {
            v156 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v1 + 192));
            std::get<0ul,unsigned int const,GroupScriptConfig>(v156);
            std::get<1ul,unsigned int const,GroupScriptConfig>(v156);
            if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v1 + 96);
            ++*(_DWORD *)(v1 + 96);
            std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v1 + 192));
          }
          *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) = -8;
          std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v1 + 128));
        }
        *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) = -8;
        *(_DWORD *)(((v1 + 1568) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v1 + 1568) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v1 + 1599) >> 3) + 0x7FFF8000) != 0
          && (char)((v1 - 32 + 95) & 7) >= *(_BYTE *)(((v1 + 1599) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v1 + 1568, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v1 + 1568),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/lua_config_mgr.cpp",
          "doLuaStaticCheck",
          4124);
        v14 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                (common::milog::MiLogStream *const)(v1 + 1568),
                (const char (*)[15])" total groups:");
        v17 = v1 + 96;
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v1 + 96));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 1568));
        *(_DWORD *)(((v1 + 1568) >> 3) + 0x7FFF8000) = -117901064;
        v15 = ((v1 + 2272) >> 3) + 2147450880;
        *(_DWORD *)v15 = 0;
        *(_BYTE *)(v15 + 4) = 0;
        v16 = *(_BYTE *)(((v1 + 2311) >> 3) + 0x7FFF8000);
        LOBYTE(v17) = v16 != 0;
        if ( *(char *)(((v1 + 2272) >> 3) + 0x7FFF8000) < 0 || v16 != 0 && (char)((v1 - 32 + 39) & 7) >= v16 )
        {
          v17 = 40LL;
          __asan_report_store_n(v1 + 2272, 40LL);
        }
        *(_QWORD *)(v1 + 2272) = 0LL;
        *(_QWORD *)(v1 + 2280) = 0LL;
        *(_QWORD *)(v1 + 2288) = 0LL;
        *(_QWORD *)(v1 + 2296) = 0LL;
        *(_QWORD *)(v1 + 2304) = 0LL;
        if ( *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v1 + 2304, v17);
        *(_DWORD *)(v1 + 2304) = 200000;
        std::shared_ptr<LuaScript>::operator=(
          (std::shared_ptr<LuaScript> *const)(v1 + 2272),
          (const std::shared_ptr<LuaScript> *)(v1 + 1056));
        __asan_unpoison_stack_memory(v1 + 2352, 400LL);
        LuaASTContext::LuaASTContext((LuaASTContext *const)(v1 + 2352), this);
        if ( *(char *)(((unsigned __int64)&this->is_do_partial_lua_static_check >> 3) + 0x7FFF8000) < 0 )
          __asan_report_load1(&this->is_do_partial_lua_static_check, this, &this->is_do_partial_lua_static_check);
        if ( !this->is_do_partial_lua_static_check )
        {
          __for_range_1 = &this->scene_script_config_map;
          *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 256, this);
          *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v1 + 256) = std::unordered_map<unsigned int,SceneScriptConfig>::begin(__for_range_1);
          *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 288, this);
          *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v1 + 288) = std::unordered_map<unsigned int,SceneScriptConfig>::end(__for_range_1);
          while ( 1 )
          {
            v18 = (char *)(v1 + 288);
            if ( !std::__detail::operator!=<std::pair<unsigned int const,SceneScriptConfig>,false>(
                    (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v1 + 256),
                    (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v1 + 288)) )
              break;
            v129 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v1 + 256));
            std::get<0ul,unsigned int const,SceneScriptConfig>(v129);
            __for_range_2 = &std::get<1ul,unsigned int const,SceneScriptConfig>(v129)->group_config_map;
            *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v1 + 320, v18);
            *(std::unordered_map<unsigned int,GroupScriptConfig>::const_iterator *)(v1 + 320) = std::unordered_map<unsigned int,GroupScriptConfig>::begin(__for_range_2);
            *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) = 0;
            if ( *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v1 + 352, v18);
            *(std::unordered_map<unsigned int,GroupScriptConfig>::const_iterator *)(v1 + 352) = std::unordered_map<unsigned int,GroupScriptConfig>::end(__for_range_2);
            while ( std::__detail::operator!=<std::pair<unsigned int const,GroupScriptConfig>,false>(
                      (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v1 + 320),
                      (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v1 + 352)) )
            {
              v131 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v1 + 320));
              std::get<0ul,unsigned int const,GroupScriptConfig>(v131);
              v19 = std::get<1ul,unsigned int const,GroupScriptConfig>(v131);
              LuaConfigMgr::doStaticCheckSingleGroupLua(
                this,
                v19,
                (LuaASTContext *)(v1 + 2352),
                (LuaStaticCheckParam *)(v1 + 2272));
              if ( *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v1 + 2304);
              if ( *(int *)(v1 + 2304) <= 0 )
                break;
              std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v1 + 320));
            }
            *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) = -8;
            *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) = -8;
            if ( *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v1 + 2304);
            if ( *(int *)(v1 + 2304) <= 0 )
              break;
            std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v1 + 256));
          }
          *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) = -8;
        }
        else
        {
          __for_range_3 = &this->partial_group_id_set;
          *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 384, this);
          *(std::set<unsigned int>::iterator *)(v1 + 384) = std::set<unsigned int>::begin(__for_range_3);
          *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 416, this);
          *(std::set<unsigned int>::iterator *)(v1 + 416) = std::set<unsigned int>::end(__for_range_3);
          while ( 1 )
          {
            v20 = (char *)(v1 + 416);
            if ( !std::operator!=(
                    (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v1 + 384),
                    (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v1 + 416)) )
              break;
            *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) = 4;
            v21 = (unsigned int *)std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v1 + 384));
            v22 = (int *)v21;
            if ( *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v21 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v21);
            }
            v23 = *v22;
            v24 = *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000);
            if ( v24 != 0 && v24 <= 3 )
            {
              LOBYTE(v20) = v24 != 0;
              __asan_report_store4(v1 + 112, v20);
            }
            *(_DWORD *)(v1 + 112) = v23;
            script_config_ptr = LuaConfigMgr::findGroupScriptConfig(this, *(_DWORD *)(v1 + 112));
            if ( script_config_ptr )
            {
              LuaConfigMgr::doStaticCheckSingleGroupLua(
                this,
                script_config_ptr,
                (LuaASTContext *)(v1 + 2352),
                (LuaStaticCheckParam *)(v1 + 2272));
              if ( *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v1 + 2304);
              if ( *(int *)(v1 + 2304) <= 0 )
                break;
            }
            else
            {
              *(_DWORD *)(((v1 + 1632) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v1 + 1632) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v1 + 1663) >> 3) + 0x7FFF8000) != 0
                && (char)((v1 + 127) & 7) >= *(_BYTE *)(((v1 + 1663) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v1 + 1632, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v1 + 1632),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "doLuaStaticCheck",
                4186);
              v25 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                      (common::milog::MiLogStream *const)(v1 + 1632),
                      (const char (*)[37])"cannot find group config, group_id: ");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v25,
                (const unsigned int *)(v1 + 112));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 1632));
              *(_DWORD *)(((v1 + 1632) >> 3) + 0x7FFF8000) = -117901064;
            }
            std::_Rb_tree_const_iterator<unsigned int>::operator++((std::_Rb_tree_const_iterator<unsigned int> *const)(v1 + 384));
          }
          *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) = -8;
        }
        __asan_unpoison_stack_memory(v1 + 2816, 616LL);
        *(_DWORD *)(((v1 + 1760) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v1 + 48);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v1 + 1760),
          ";",
          (const std::allocator<char> *)(v1 + 48));
        *(_DWORD *)(((v1 + 1696) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v1 + 32);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v1 + 1696),
          "lua_static_check_result.txt",
          (const std::allocator<char> *)(v1 + 32));
        common::tools::csvfile::csvfile(
          (common::tools::csvfile *const)(v1 + 2816),
          (const std::string *)(v1 + 1696),
          (const std::string *)(v1 + 1760));
        std::string::~string((void *)(v1 + 1696));
        *(_DWORD *)(((v1 + 1696) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v1 + 32);
        *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
        std::string::~string((void *)(v1 + 1760));
        *(_DWORD *)(((v1 + 1760) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v1 + 48);
        *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
        v26 = common::tools::csvfile::operator<<(
                (common::tools::csvfile *const)(v1 + 2816),
                "------------------------------ScriptLib Checkers-----------------------");
        common::tools::csvfile::operator<<(
          v26,
          (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
        __for_range_4 = (std::map<std::string,std::vector<std::string>> *)(v1 + 2368);
        *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 448, common::tools::endrow);
        *(std::map<std::string,std::vector<std::string>>::iterator *)(v1 + 448) = std::map<std::string,std::vector<std::string>>::begin(__for_range_4);
        *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 480, common::tools::endrow);
        *(std::map<std::string,std::vector<std::string>>::iterator *)(v1 + 480) = std::map<std::string,std::vector<std::string>>::end(__for_range_4);
        while ( std::operator!=(
                  (const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::_Self *)(v1 + 448),
                  (const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::_Self *)(v1 + 480)) )
        {
          v148 = std::_Rb_tree_iterator<std::pair<std::string const,std::vector<std::string>>>::operator*((const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > > *const)(v1 + 448));
          func_name = std::get<0ul,std::string const,std::vector<std::string>>(v148);
          err_infos = (std::tuple_element<1,const std::pair<const std::string,std::vector<std::string> > >::type *)std::get<1ul,std::string const,std::vector<std::string>>(v148);
          v27 = common::tools::csvfile::operator<<(
                  (common::tools::csvfile *const)(v1 + 2816),
                  "-------------------------------------------------------------------");
          common::tools::csvfile::operator<<(
            v27,
            (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
          *(_WORD *)(((v1 + 1120) >> 3) + 0x7FFF8000) = 0;
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1120));
          v28 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                  (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1120),
                  func_name);
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v28, ":");
          array_ptr = common::tools::MiscUtils::findMapValuePointer<std::unordered_map<std::string,std::array<unsigned int,4ul>>>(
                        (std::unordered_map<std::string,std::array<unsigned int,4>> *)(v1 + 2464),
                        func_name);
          if ( array_ptr )
          {
            v29 = std::array<unsigned int,4ul>::operator[](array_ptr, 0LL);
            v30 = (int *)v29;
            if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v29 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v29);
            }
            v31 = *v30;
            v32 = std::array<unsigned int,4ul>::operator[](array_ptr, 1uLL);
            v33 = v32;
            if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v32 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v32);
            }
            v34 = *v33 + v31;
            v35 = std::array<unsigned int,4ul>::operator[](array_ptr, 2uLL);
            v36 = v35;
            if ( *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v35 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v35);
            }
            v37 = *v36 + v34;
            v38 = std::array<unsigned int,4ul>::operator[](array_ptr, 3uLL);
            v39 = v38;
            if ( *(_BYTE *)(((unsigned __int64)v38 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v38 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v38 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v38);
            }
            total = (double)(v37 + *v39);
            if ( total == 0.0 )
            {
              v42 = 0.0;
            }
            else
            {
              v40 = std::array<unsigned int,4ul>::operator[](array_ptr, 0LL);
              v41 = (int *)v40;
              if ( *(_BYTE *)(((unsigned __int64)v40 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v40 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v40 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v40);
              }
              v42 = 1.0 - (double)*v41 / total;
            }
            rate = v42;
            v43 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                    (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1120),
                    " unkown(");
            v44 = std::array<unsigned int,4ul>::operator[](array_ptr, 0LL);
            v45 = v44;
            if ( *(_BYTE *)(((unsigned __int64)v44 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v44 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v44 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v44);
            }
            v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v43, *v45);
            v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, ") ok(");
            v48 = std::array<unsigned int,4ul>::operator[](array_ptr, 1uLL);
            v49 = v48;
            if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v48 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v48);
            }
            v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, *v49);
            v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, ") fail(");
            v52 = std::array<unsigned int,4ul>::operator[](array_ptr, 2uLL);
            v53 = v52;
            if ( *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v52 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v52);
            }
            v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, *v53);
            v55 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, ") skip(");
            v56 = std::array<unsigned int,4ul>::operator[](array_ptr, 3uLL);
            v57 = v56;
            if ( *(_BYTE *)(((unsigned __int64)v56 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v56 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v56 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v56);
            }
            v58 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v55, *v57);
            v59 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v58, ") rate(");
            v60 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v59, rate);
            common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v60, ")");
          }
          *(_DWORD *)(((v1 + 1824) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v1 + 1824) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v1 + 1855) >> 3) + 0x7FFF8000) != 0
            && (char)((v1 - 32 + 95) & 7) >= *(_BYTE *)(((v1 + 1855) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v1 + 1824, 32LL);
          }
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::str[abi:cxx11](
            (std::string *)(v1 + 1824),
            (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1120));
          v61 = common::tools::csvfile::operator<<(
                  (common::tools::csvfile *const)(v1 + 2816),
                  (const std::string *)(v1 + 1824));
          common::tools::csvfile::operator<<(
            v61,
            (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
          std::string::~string((void *)(v1 + 1824));
          *(_DWORD *)(((v1 + 1824) >> 3) + 0x7FFF8000) = -117901064;
          *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 512, common::tools::endrow);
          *(std::vector<std::string>::const_iterator *)(v1 + 512) = std::vector<std::string>::begin(err_infos);
          *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 544, common::tools::endrow);
          *(std::vector<std::string>::const_iterator *)(v1 + 544) = std::vector<std::string>::end(err_infos);
          while ( __gnu_cxx::operator!=<std::string const*,std::vector<std::string>>(
                    (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v1 + 512),
                    (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v1 + 544)) )
          {
            v62 = __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator*((const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v1 + 512));
            v63 = common::tools::csvfile::operator<<((common::tools::csvfile *const)(v1 + 2816), v62);
            common::tools::csvfile::operator<<(
              v63,
              (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
            __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator++((__gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v1 + 512));
          }
          *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) = -8;
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::~StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1120));
          *(_WORD *)(((v1 + 1120) >> 3) + 0x7FFF8000) = -1800;
          std::_Rb_tree_iterator<std::pair<std::string const,std::vector<std::string>>>::operator++((std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > > *const)(v1 + 448));
        }
        *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) = -8;
        v64 = common::tools::csvfile::operator<<(
                (common::tools::csvfile *const)(v1 + 2816),
                "-------------------------------------------------------------------");
        common::tools::csvfile::operator<<(
          v64,
          (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
        v65 = common::tools::csvfile::operator<<(
                (common::tools::csvfile *const)(v1 + 2816),
                "------------------------------Gramma Checkers----------------------");
        common::tools::csvfile::operator<<(
          v65,
          (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
        __for_range_6 = (std::map<std::string,std::vector<std::string>> *)(v1 + 2600);
        *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 576, common::tools::endrow);
        *(std::map<std::string,std::vector<std::string>>::iterator *)(v1 + 576) = std::map<std::string,std::vector<std::string>>::begin(__for_range_6);
        *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 608, common::tools::endrow);
        *(std::map<std::string,std::vector<std::string>>::iterator *)(v1 + 608) = std::map<std::string,std::vector<std::string>>::end(__for_range_6);
        while ( std::operator!=(
                  (const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::_Self *)(v1 + 576),
                  (const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::_Self *)(v1 + 608)) )
        {
          v145 = std::_Rb_tree_iterator<std::pair<std::string const,std::vector<std::string>>>::operator*((const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > > *const)(v1 + 576));
          func_name_0 = std::get<0ul,std::string const,std::vector<std::string>>(v145);
          err_infos_0 = (std::tuple_element<1,const std::pair<const std::string,std::vector<std::string> > >::type *)std::get<1ul,std::string const,std::vector<std::string>>(v145);
          v66 = common::tools::csvfile::operator<<(
                  (common::tools::csvfile *const)(v1 + 2816),
                  "-------------------------------------------------------------------");
          common::tools::csvfile::operator<<(
            v66,
            (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
          *(_WORD *)(((v1 + 1152) >> 3) + 0x7FFF8000) = 0;
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1152));
          v67 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                  (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1152),
                  func_name_0);
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v67, ":\n");
          *(_DWORD *)(((v1 + 1888) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v1 + 1888) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v1 + 1919) >> 3) + 0x7FFF8000) != 0
            && (char)((v1 + 127) & 7) >= *(_BYTE *)(((v1 + 1919) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v1 + 1888, 32LL);
          }
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::str[abi:cxx11](
            (std::string *)(v1 + 1888),
            (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1152));
          v68 = common::tools::csvfile::operator<<(
                  (common::tools::csvfile *const)(v1 + 2816),
                  (const std::string *)(v1 + 1888));
          common::tools::csvfile::operator<<(
            v68,
            (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
          std::string::~string((void *)(v1 + 1888));
          *(_DWORD *)(((v1 + 1888) >> 3) + 0x7FFF8000) = -117901064;
          *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 640, common::tools::endrow);
          *(std::vector<std::string>::const_iterator *)(v1 + 640) = std::vector<std::string>::begin(err_infos_0);
          *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 672, common::tools::endrow);
          *(std::vector<std::string>::const_iterator *)(v1 + 672) = std::vector<std::string>::end(err_infos_0);
          while ( __gnu_cxx::operator!=<std::string const*,std::vector<std::string>>(
                    (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v1 + 640),
                    (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v1 + 672)) )
          {
            v69 = __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator*((const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v1 + 640));
            v70 = common::tools::csvfile::operator<<((common::tools::csvfile *const)(v1 + 2816), v69);
            common::tools::csvfile::operator<<(
              v70,
              (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
            __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator++((__gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v1 + 640));
          }
          *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) = -8;
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::~StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1152));
          *(_WORD *)(((v1 + 1152) >> 3) + 0x7FFF8000) = -1800;
          std::_Rb_tree_iterator<std::pair<std::string const,std::vector<std::string>>>::operator++((std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > > *const)(v1 + 576));
        }
        *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) = -8;
        v71 = common::tools::csvfile::operator<<(
                (common::tools::csvfile *const)(v1 + 2816),
                "-------------------------------------------------------------------");
        common::tools::csvfile::operator<<(
          v71,
          (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
        __asan_unpoison_stack_memory(v1 + 3568, 616LL);
        *(_DWORD *)(((v1 + 2016) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v1 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v1 + 2016),
          ";",
          (const std::allocator<char> *)(v1 + 80));
        *(_DWORD *)(((v1 + 1952) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v1 + 64);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v1 + 1952),
          "preVer_lua_static_check_result.txt",
          (const std::allocator<char> *)(v1 + 64));
        common::tools::csvfile::csvfile(
          (common::tools::csvfile *const)(v1 + 3568),
          (const std::string *)(v1 + 1952),
          (const std::string *)(v1 + 2016));
        std::string::~string((void *)(v1 + 1952));
        *(_DWORD *)(((v1 + 1952) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v1 + 64);
        *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
        std::string::~string((void *)(v1 + 2016));
        *(_DWORD *)(((v1 + 2016) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v1 + 80);
        *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) = -8;
        v72 = common::tools::csvfile::operator<<(
                (common::tools::csvfile *const)(v1 + 3568),
                "------------------------------ScriptLib Checkers-----------------------");
        common::tools::csvfile::operator<<(
          v72,
          (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
        __for_range_8 = (std::map<std::string,std::vector<std::string>> *)(v1 + 2416);
        *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 704, common::tools::endrow);
        *(std::map<std::string,std::vector<std::string>>::iterator *)(v1 + 704) = std::map<std::string,std::vector<std::string>>::begin(__for_range_8);
        *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 736, common::tools::endrow);
        *(std::map<std::string,std::vector<std::string>>::iterator *)(v1 + 736) = std::map<std::string,std::vector<std::string>>::end(__for_range_8);
        while ( std::operator!=(
                  (const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::_Self *)(v1 + 704),
                  (const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::_Self *)(v1 + 736)) )
        {
          v139 = std::_Rb_tree_iterator<std::pair<std::string const,std::vector<std::string>>>::operator*((const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > > *const)(v1 + 704));
          func_name_1 = std::get<0ul,std::string const,std::vector<std::string>>(v139);
          err_infos_1 = (std::tuple_element<1,const std::pair<const std::string,std::vector<std::string> > >::type *)std::get<1ul,std::string const,std::vector<std::string>>(v139);
          v73 = common::tools::csvfile::operator<<(
                  (common::tools::csvfile *const)(v1 + 3568),
                  "-------------------------------------------------------------------");
          common::tools::csvfile::operator<<(
            v73,
            (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
          *(_WORD *)(((v1 + 1184) >> 3) + 0x7FFF8000) = 0;
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1184));
          v74 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                  (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1184),
                  func_name_1);
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v74, ":");
          array_ptr_0 = common::tools::MiscUtils::findMapValuePointer<std::unordered_map<std::string,std::array<unsigned int,4ul>>>(
                          (std::unordered_map<std::string,std::array<unsigned int,4>> *)(v1 + 2464),
                          func_name_1);
          if ( array_ptr_0 )
          {
            v75 = std::array<unsigned int,4ul>::operator[](array_ptr_0, 0LL);
            v76 = (int *)v75;
            if ( *(_BYTE *)(((unsigned __int64)v75 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v75 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v75 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v75);
            }
            v77 = *v76;
            v78 = std::array<unsigned int,4ul>::operator[](array_ptr_0, 1uLL);
            v79 = v78;
            if ( *(_BYTE *)(((unsigned __int64)v78 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v78 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v78 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v78);
            }
            v80 = *v79 + v77;
            v81 = std::array<unsigned int,4ul>::operator[](array_ptr_0, 2uLL);
            v82 = v81;
            if ( *(_BYTE *)(((unsigned __int64)v81 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v81 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v81 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v81);
            }
            v83 = *v82 + v80;
            v84 = std::array<unsigned int,4ul>::operator[](array_ptr_0, 3uLL);
            v85 = v84;
            if ( *(_BYTE *)(((unsigned __int64)v84 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v84 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v84 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v84);
            }
            total_0 = (double)(v83 + *v85);
            if ( total_0 == 0.0 )
            {
              v88 = 0.0;
            }
            else
            {
              v86 = std::array<unsigned int,4ul>::operator[](array_ptr_0, 0LL);
              v87 = (int *)v86;
              if ( *(_BYTE *)(((unsigned __int64)v86 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v86 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v86 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v86);
              }
              v88 = 1.0 - (double)*v87 / total_0;
            }
            rate_0 = v88;
            v89 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                    (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1184),
                    " unkown(");
            v90 = std::array<unsigned int,4ul>::operator[](array_ptr_0, 0LL);
            v91 = v90;
            if ( *(_BYTE *)(((unsigned __int64)v90 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v90 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v90 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v90);
            }
            v92 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v89, *v91);
            v93 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v92, ") ok(");
            v94 = std::array<unsigned int,4ul>::operator[](array_ptr_0, 1uLL);
            v95 = v94;
            if ( *(_BYTE *)(((unsigned __int64)v94 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v94 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v94 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v94);
            }
            v96 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v93, *v95);
            v97 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v96, ") fail(");
            v98 = std::array<unsigned int,4ul>::operator[](array_ptr_0, 2uLL);
            v99 = v98;
            if ( *(_BYTE *)(((unsigned __int64)v98 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v98 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v98 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v98);
            }
            v100 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v97, *v99);
            v101 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v100, ") skip(");
            v102 = std::array<unsigned int,4ul>::operator[](array_ptr_0, 3uLL);
            v103 = v102;
            if ( *(_BYTE *)(((unsigned __int64)v102 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v102 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v102 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v102);
            }
            v104 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v101, *v103);
            v105 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v104, ") rate(");
            v106 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v105, rate_0);
            common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v106, ")");
          }
          *(_DWORD *)(((v1 + 2080) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v1 + 2080) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v1 + 2111) >> 3) + 0x7FFF8000) != 0
            && (char)((v1 - 32 + 95) & 7) >= *(_BYTE *)(((v1 + 2111) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v1 + 2080, 32LL);
          }
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::str[abi:cxx11](
            (std::string *)(v1 + 2080),
            (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1184));
          v107 = common::tools::csvfile::operator<<(
                   (common::tools::csvfile *const)(v1 + 3568),
                   (const std::string *)(v1 + 2080));
          common::tools::csvfile::operator<<(
            v107,
            (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
          std::string::~string((void *)(v1 + 2080));
          *(_DWORD *)(((v1 + 2080) >> 3) + 0x7FFF8000) = -117901064;
          *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 768, common::tools::endrow);
          *(std::vector<std::string>::const_iterator *)(v1 + 768) = std::vector<std::string>::begin(err_infos_1);
          *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 800, common::tools::endrow);
          *(std::vector<std::string>::const_iterator *)(v1 + 800) = std::vector<std::string>::end(err_infos_1);
          while ( __gnu_cxx::operator!=<std::string const*,std::vector<std::string>>(
                    (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v1 + 768),
                    (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v1 + 800)) )
          {
            v108 = __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator*((const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v1 + 768));
            v109 = common::tools::csvfile::operator<<((common::tools::csvfile *const)(v1 + 3568), v108);
            common::tools::csvfile::operator<<(
              v109,
              (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
            __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator++((__gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v1 + 768));
          }
          *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) = -8;
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::~StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1184));
          *(_WORD *)(((v1 + 1184) >> 3) + 0x7FFF8000) = -1800;
          std::_Rb_tree_iterator<std::pair<std::string const,std::vector<std::string>>>::operator++((std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > > *const)(v1 + 704));
        }
        *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) = -8;
        v110 = common::tools::csvfile::operator<<(
                 (common::tools::csvfile *const)(v1 + 3568),
                 "-------------------------------------------------------------------");
        common::tools::csvfile::operator<<(
          v110,
          (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
        v111 = common::tools::csvfile::operator<<(
                 (common::tools::csvfile *const)(v1 + 3568),
                 "------------------------------Gramma Checkers----------------------");
        common::tools::csvfile::operator<<(
          v111,
          (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
        __for_range_10 = (std::map<std::string,std::vector<std::string>> *)(v1 + 2600);
        *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 832, common::tools::endrow);
        *(std::map<std::string,std::vector<std::string>>::iterator *)(v1 + 832) = std::map<std::string,std::vector<std::string>>::begin(__for_range_10);
        *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 864, common::tools::endrow);
        *(std::map<std::string,std::vector<std::string>>::iterator *)(v1 + 864) = std::map<std::string,std::vector<std::string>>::end(__for_range_10);
        while ( std::operator!=(
                  (const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::_Self *)(v1 + 832),
                  (const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > >::_Self *)(v1 + 864)) )
        {
          v136 = std::_Rb_tree_iterator<std::pair<std::string const,std::vector<std::string>>>::operator*((const std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > > *const)(v1 + 832));
          func_name_2 = std::get<0ul,std::string const,std::vector<std::string>>(v136);
          err_infos_2 = (std::tuple_element<1,const std::pair<const std::string,std::vector<std::string> > >::type *)std::get<1ul,std::string const,std::vector<std::string>>(v136);
          v112 = common::tools::csvfile::operator<<(
                   (common::tools::csvfile *const)(v1 + 3568),
                   "-------------------------------------------------------------------");
          common::tools::csvfile::operator<<(
            v112,
            (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
          *(_WORD *)(((v1 + 1216) >> 3) + 0x7FFF8000) = 0;
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1216));
          v113 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                   (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1216),
                   func_name_2);
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v113, ":\n");
          *(_DWORD *)(((v1 + 2144) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v1 + 2144) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v1 + 2175) >> 3) + 0x7FFF8000) != 0
            && (char)((v1 + 127) & 7) >= *(_BYTE *)(((v1 + 2175) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v1 + 2144, 32LL);
          }
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::str[abi:cxx11](
            (std::string *)(v1 + 2144),
            (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1216));
          v114 = common::tools::csvfile::operator<<(
                   (common::tools::csvfile *const)(v1 + 3568),
                   (const std::string *)(v1 + 2144));
          common::tools::csvfile::operator<<(
            v114,
            (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
          std::string::~string((void *)(v1 + 2144));
          *(_DWORD *)(((v1 + 2144) >> 3) + 0x7FFF8000) = -117901064;
          *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 896, common::tools::endrow);
          *(std::vector<std::string>::const_iterator *)(v1 + 896) = std::vector<std::string>::begin(err_infos_2);
          *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) = 0;
          if ( *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v1 + 928, common::tools::endrow);
          *(std::vector<std::string>::const_iterator *)(v1 + 928) = std::vector<std::string>::end(err_infos_2);
          while ( __gnu_cxx::operator!=<std::string const*,std::vector<std::string>>(
                    (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v1 + 896),
                    (const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *)(v1 + 928)) )
          {
            v115 = __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator*((const __gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v1 + 896));
            v116 = common::tools::csvfile::operator<<((common::tools::csvfile *const)(v1 + 3568), v115);
            common::tools::csvfile::operator<<(
              v116,
              (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
            __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator++((__gnu_cxx::__normal_iterator<const std::string*,std::vector<std::string> > *const)(v1 + 896));
          }
          *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) = -8;
          *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) = -8;
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::~StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v1 + 1216));
          *(_WORD *)(((v1 + 1216) >> 3) + 0x7FFF8000) = -1800;
          std::_Rb_tree_iterator<std::pair<std::string const,std::vector<std::string>>>::operator++((std::_Rb_tree_iterator<std::pair<const std::string,std::vector<std::string> > > *const)(v1 + 832));
        }
        *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) = -8;
        v117 = common::tools::csvfile::operator<<(
                 (common::tools::csvfile *const)(v1 + 3568),
                 "-------------------------------------------------------------------");
        common::tools::csvfile::operator<<(
          v117,
          (common::tools::csvfile *(*)(common::tools::csvfile *))common::tools::endrow);
        common::tools::csvfile::~csvfile((common::tools::csvfile *const)(v1 + 3568));
        common::tools::csvfile::~csvfile((common::tools::csvfile *const)(v1 + 2816));
        __asan_poison_stack_memory(v1 + 2816, 616LL);
        __asan_poison_stack_memory(v1 + 3568, 616LL);
        *(_DWORD *)(((v1 + 2208) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v1 + 2208) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v1 + 2239) >> 3) + 0x7FFF8000) != 0
          && (char)((v1 - 96 + 31) & 7) >= *(_BYTE *)(((v1 + 2239) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v1 + 2208, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v1 + 2208),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/lua_config_mgr.cpp",
          "doLuaStaticCheck",
          4292);
        v118 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                 (common::milog::MiLogStream *const)(v1 + 2208),
                 (const char (*)[20])" parser cost time: ");
        *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 2288) >> 3) + 0x7FFF8000) )
          __asan_report_load8(v1 + 2288);
        v119 = (double)(int)*(_QWORD *)(v1 + 2288) / 1000000.0;
        if ( *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 960, " parser cost time: ");
        *(double *)(v1 + 960) = v119;
        v120 = common::milog::MiLogStream::operator<<<double,(double *)0>(v118, (const double *)(v1 + 960));
        v121 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                 v120,
                 (const char (*)[21])", checker cost time:");
        *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v1 + 2296) >> 3) + 0x7FFF8000) )
          __asan_report_load8(v1 + 2296);
        v122 = (double)(int)*(_QWORD *)(v1 + 2296) / 1000000.0;
        if ( *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v1 + 992, ", checker cost time:");
        *(double *)(v1 + 992) = v122;
        common::milog::MiLogStream::operator<<<double,(double *)0>(v121, (const double *)(v1 + 992));
        *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) = -8;
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 2208));
        *(_DWORD *)(((v1 + 2208) >> 3) + 0x7FFF8000) = -117901064;
        if ( *(_BYTE *)(((v1 + 2648) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2648) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v1 + 2648);
        if ( *(_DWORD *)(v1 + 2648) )
        {
          v4 = -1;
        }
        else
        {
          if ( *(_BYTE *)(((v1 + 2308) >> 3) + 0x7FFF8000) != 0
            && (char)(((v1 - 32 + 36) & 7) + 3) >= *(_BYTE *)(((v1 + 2308) >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v1 + 2308);
          }
          v4 = *(_DWORD *)(v1 + 2308);
        }
        LuaASTContext::~LuaASTContext((LuaASTContext *const)(v1 + 2352));
        LuaStaticCheckParam::~LuaStaticCheckParam((LuaStaticCheckParam *const)(v1 + 2272));
      }
    }
    std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v1 + 1056));
    std::string::~string((void *)(v1 + 1312));
  }
  else
  {
    *(_DWORD *)(((v1 + 1248) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v1 + 1248) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v1 + 1279) >> 3) + 0x7FFF8000) != 0
      && (char)((v1 - 32 + 31) & 7) >= *(_BYTE *)(((v1 + 1279) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v1 + 1248, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v1 + 1248),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "doLuaStaticCheck",
      4096);
    common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
      (common::milog::MiLogStream *const)(v1 + 1248),
      (const char (*)[20])" lua state nullptr.");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 1248));
    v4 = -1;
  }
  if ( v157 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8094) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 156) & 0xFFFFFFF8) >> 3));
    *(_DWORD *)((v1 >> 3) + 0x7FFF80A0) = 0;
    *(_QWORD *)((v1 >> 3) + 0x7FFF80A8) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8114) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862764) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147451048 - (((_DWORD)v3 + 2147451056) & 0xFFFFFFF8) + 116) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v1 >> 3) + 0x7FFF8120) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8158) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8214) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862808) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147451224 - (((_DWORD)v3 + 2147451232) & 0xFFFFFFF8) + 196) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_7(v1, 4320LL, v157);
  }
  return v4;
};

// Line 4303: range 000000000F32001E-000000000F321056
void __cdecl LuaConfigMgr::doStaticCheckSingleGroupLua(
        const LuaConfigMgr *const this,
        const GroupScriptConfig *script_config,
        LuaASTContext *context,
        LuaStaticCheckParam *param)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  __int64 v7; // rsi
  uint32_t group_id; // ecx
  char v9; // al
  LuaScript *v10; // r14
  luabind::adl::object *v11; // r15
  bool v12; // r14
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  unsigned __int64 v15; // rax
  unsigned int *v16; // rsi
  common::milog::MiLogStream *v17; // rax
  int64_t v18; // rcx
  uint32_t v19; // ecx
  char v20; // al
  std::map<unsigned int,std::string> *p_line_2_file_path_map; // rsi
  std::unordered_map<unsigned int,float> *p_group_id_2_ver_map; // rdx
  std::unordered_map<unsigned int,float> *v23; // rdx
  unsigned int *v24; // rsi
  bool v25; // al
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,float>,false,false>::pointer v26; // rdx
  float *p_second; // rax
  float second; // xmm0_4
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,float>,false,false>::pointer v29; // rdx
  char v30; // cl
  std::map<unsigned int,std::string> *v31; // rcx
  char v32; // al
  std::map<unsigned int,std::string>::mapped_type *v33; // rax
  int32_t v34; // ecx
  int64_t v35; // rcx
  const std::string *v36; // [rsp+0h] [rbp-3E0h]
  unsigned int *v37; // [rsp+8h] [rbp-3D8h]
  std::string *lua_content_str; // [rsp+38h] [rbp-3A8h]
  int64_t parse_begin_time_us; // [rsp+40h] [rbp-3A0h]
  int64_t dfs_begin_time_us; // [rsp+48h] [rbp-398h]
  unsigned int v44[228]; // [rsp+50h] [rbp-390h] BYREF

  v4 = (unsigned __int64)v44;
  v37 = v44;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_4(864LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "14 32 1 9 <unknown> 48 4 13 group_id:4314 64 4 9 <unknown> 80 8 9 <unknown> 112 8 16 target_iter"
                        ":4332 144 8 9 <unknown> 176 16 12 ret_obj:4305 208 16 10 timer:4307 240 32 9 <unknown> 304 32 9 "
                        "<unknown> 368 32 9 <unknown> 432 32 9 <unknown> 496 32 9 <unknown> 560 232 14 root_node:4321";
  *(_QWORD *)(v4 + 16) = LuaConfigMgr::doStaticCheckSingleGroupLua;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556927;
  v6[536862722] = 61956;
  v6[536862722] = -234881024;
  v6[536862723] = 62194;
  v6[536862723] = -234881024;
  v6[536862724] = 62194;
  v6[536862724] = -234881024;
  v6[536862725] = 62194;
  v6[536862726] = 62194;
  v6[536862727] = 62194;
  v6[536862728] = -219021312;
  v6[536862729] = 62194;
  v6[536862730] = -219021312;
  v6[536862731] = 62194;
  v6[536862732] = -219021312;
  v6[536862733] = 62194;
  v6[536862734] = -219021312;
  v6[536862735] = 62194;
  v6[536862736] = -219021312;
  v6[536862737] = 62194;
  v6[536862744] = -218103808;
  v6[536862745] = -202116109;
  v6[536862746] = -202116109;
  lua_content_str = &script_config->script_content.lua_content;
  luabind::adl::object::object((luabind::adl::object *const)(v4 + 176));
  if ( *(_BYTE *)(((unsigned __int64)&param->count >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&param->count >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&param->count);
  }
  --param->count;
  common::tools::TimeUtils::Timer::Timer((common::tools::TimeUtils::Timer *const)(v4 + 208));
  parse_begin_time_us = common::tools::TimeUtils::Timer::time((const common::tools::TimeUtils::Timer *const)(v4 + 208));
  v7 = 0LL;
  if ( std::operator==<LuaScript>(&param->lua_script_ptr, 0LL) )
  {
    if ( *(char *)(((v4 + 240) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v4 + 271) >> 3) + 0x7FFF8000) != 0
      && (char)((v4 - 16 + 31) & 7) >= *(_BYTE *)(((v4 + 271) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v4 + 240, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v4 + 240),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "doStaticCheckSingleGroupLua",
      4311);
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
      (common::milog::MiLogStream *const)(v4 + 240),
      (const char (*)[26])"lua_script_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 240));
    *(_DWORD *)(((v4 + 240) >> 3) + 0x7FFF8000) = -117901064;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&script_config->group_id >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&script_config->group_id >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&script_config->group_id);
    }
    group_id = script_config->group_id;
    v9 = *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000);
    LOBYTE(v7) = v9 != 0;
    if ( v9 != 0 && v9 <= 3 )
      __asan_report_store4(v4 + 48, v7);
    *(_DWORD *)(v4 + 48) = group_id;
    v10 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)param);
    if ( *(_BYTE *)(((v4 + 80) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v4 + 80, v7);
    *(std::reference_wrapper<luabind::adl::object> *)(v4 + 80) = std::ref<luabind::adl::object>((luabind::adl::object *)(v4 + 176));
    v11 = std::reference_wrapper<luabind::adl::object>::operator luabind::adl::object&((const std::reference_wrapper<luabind::adl::object> *const)(v4 + 80));
    std::allocator<char>::allocator(v4 + 32);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v4 + 368),
      "parseAST",
      (const std::allocator<char> *)(v4 + 32));
    std::function<void ()(std::string const&,std::string const&,std::exception const&)>::function(
      (std::function<void(const std::string&,const std::string&,const std::exception&)> *const)(v4 + 304),
      0LL);
    v12 = LuaScript::executeFunc<luabind::adl::object,std::string const&,unsigned int &>(
            v10,
            (LuaLogFunc *)(v4 + 304),
            (const std::string *)(v4 + 368),
            v11,
            lua_content_str,
            (unsigned int *)(v4 + 48),
            v36,
            v44) != 0;
    std::function<void ()(std::string const&,std::string const&,std::exception const&)>::~function((std::function<void(const std::string&,const std::string&,const std::exception&)> *const)(v4 + 304));
    *(_DWORD *)(((v4 + 304) >> 3) + 0x7FFF8000) = -117901064;
    std::string::~string((void *)(v4 + 368));
    *(_DWORD *)(((v4 + 368) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v4 + 32);
    *(_BYTE *)(((v4 + 32) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v4 + 80) >> 3) + 0x7FFF8000) = -8;
    if ( v12 )
    {
      *(_DWORD *)(((v4 + 432) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v4 + 432) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v4 + 463) >> 3) + 0x7FFF8000) != 0
        && (char)((v4 - 49) & 7) >= *(_BYTE *)(((v4 + 463) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v4 + 432, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v4 + 432),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "doStaticCheckSingleGroupLua",
        4317);
      v13 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
              (common::milog::MiLogStream *const)(v4 + 432),
              (const char (*)[22])" parse ast for file: ");
      v14 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
              v13,
              &script_config->script_content.file_path);
      common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v14, (const char (*)[9])" failed.");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 432));
      *(_DWORD *)(((v4 + 432) >> 3) + 0x7FFF8000) = -117901064;
      if ( *(_BYTE *)(((unsigned __int64)&param->ret >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)param + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&param->ret >> 3) + 0x7FFF8000) )
      {
        __asan_report_store4(&param->ret, (((_BYTE)param + 36) & 7u) + 3);
      }
      param->ret = -1;
    }
    else
    {
      v15 = ((v4 + 560) >> 3) + 2147450880;
      *(_DWORD *)v15 = 0;
      *(_DWORD *)(v15 + 4) = 0;
      *(_DWORD *)(v15 + 8) = 0;
      *(_DWORD *)(v15 + 12) = 0;
      *(_DWORD *)(v15 + 16) = 0;
      *(_DWORD *)(v15 + 20) = 0;
      *(_DWORD *)(v15 + 24) = 0;
      *(_BYTE *)(v15 + 28) = 0;
      LuaASTNode::LuaASTNode((LuaASTNode *const)(v4 + 560));
      if ( *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_load4(v4 + 48);
      v16 = (unsigned int *)(v4 + 560);
      if ( LuaStaticChecker::parseASTFromLuaObject(
             (luabind::adl::object *)(v4 + 176),
             (LuaASTNode *)(v4 + 560),
             *(_DWORD *)(v4 + 48)) )
      {
        *(_DWORD *)(((v4 + 496) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v4 + 496) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v4 + 527) >> 3) + 0x7FFF8000) != 0
          && (char)((v4 - 16 + 31) & 7) >= *(_BYTE *)(((v4 + 527) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v4 + 496, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v4 + 496),
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/lua_config_mgr.cpp",
          "doStaticCheckSingleGroupLua",
          4324);
        v17 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
                (common::milog::MiLogStream *const)(v4 + 496),
                (const char (*)[25])" parse ast tree failed: ");
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
          v17,
          &script_config->script_content.file_path);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v4 + 496));
        *(_DWORD *)(((v4 + 496) >> 3) + 0x7FFF8000) = -117901064;
      }
      else
      {
        v18 = common::tools::TimeUtils::Timer::time((const common::tools::TimeUtils::Timer *const)(v4 + 208))
            - parse_begin_time_us;
        if ( *(_BYTE *)(((unsigned __int64)&param->ast_parser_time_us >> 3) + 0x7FFF8000) )
          __asan_report_load8(&param->ast_parser_time_us);
        param->ast_parser_time_us += v18;
        if ( *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v4 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v4 + 48);
        v19 = *(_DWORD *)(v4 + 48);
        v20 = *(_BYTE *)(((unsigned __int64)&context->group_id >> 3) + 0x7FFF8000);
        if ( v20 != 0 && v20 <= 3 )
        {
          LOBYTE(v16) = v20 != 0;
          __asan_report_store4(&context->group_id, v16);
        }
        context->group_id = v19;
        p_line_2_file_path_map = &script_config->script_content.line_2_file_path_map;
        std::map<unsigned int,std::string>::operator=(
          &context->line_2_file_path_map,
          &script_config->script_content.line_2_file_path_map);
        if ( *(char *)(((unsigned __int64)&context->is_version_skip >> 3) + 0x7FFF8000) < 0 )
          __asan_report_store1(&context->is_version_skip, p_line_2_file_path_map, &context->is_version_skip);
        context->is_version_skip = 0;
        *(_BYTE *)(((v4 + 112) >> 3) + 0x7FFF8000) = 0;
        p_group_id_2_ver_map = &this->group_id_2_ver_map;
        if ( *(_BYTE *)(((v4 + 112) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v4 + 112, p_line_2_file_path_map);
        *(std::unordered_map<unsigned int,float>::const_iterator *)(v4 + 112) = std::unordered_map<unsigned int,float>::find(
                                                                                  p_group_id_2_ver_map,
                                                                                  (const std::unordered_map<unsigned int,float>::key_type *)(v4 + 48));
        *(_BYTE *)(((v4 + 144) >> 3) + 0x7FFF8000) = 0;
        v23 = &this->group_id_2_ver_map;
        if ( *(_BYTE *)(((v4 + 144) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v4 + 144, v4 + 48);
        *(std::unordered_map<unsigned int,float>::const_iterator *)(v4 + 144) = std::unordered_map<unsigned int,float>::end(v23);
        v24 = (unsigned int *)(v4 + 144);
        v25 = std::__detail::operator!=<std::pair<unsigned int const,float>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,float>,false> *)(v4 + 112),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,float>,false> *)(v4 + 144));
        *(_BYTE *)(((v4 + 144) >> 3) + 0x7FFF8000) = -8;
        if ( v25 )
        {
          v26 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,float>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,float>,false,false> *const)(v4 + 112));
          p_second = &v26->second;
          if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(p_second);
          }
          second = v26->second;
          v24 = (unsigned int *)((((_BYTE)context - 116) & 7u) + 3);
          if ( *(_BYTE *)(((unsigned __int64)&context->version >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)context - 116) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&context->version >> 3)
                                                                    + 0x7FFF8000) )
          {
            __asan_report_store4(&context->version, v24);
          }
          context->version = second;
          v29 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,float>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,float>,false,false> *const)(v4 + 112));
          v30 = *(_BYTE *)(((unsigned __int64)&v29->second >> 3) + 0x7FFF8000);
          LOBYTE(v24) = v30 != 0;
          if ( v30 != 0 && (char)((((_BYTE)v29 + 4) & 7) + 3) >= v30 )
            __asan_report_load4(&v29->second);
          if ( v29->second < 2.5 )
          {
            if ( *(char *)(((unsigned __int64)&context->is_version_skip >> 3) + 0x7FFF8000) < 0 )
              __asan_report_store1(&context->is_version_skip, v24, &context->is_version_skip);
            context->is_version_skip = 1;
          }
        }
        v31 = &context->line_2_file_path_map;
        *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) = 4;
        v32 = *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000);
        if ( v32 != 0 && v32 <= 3 )
        {
          LOBYTE(v24) = v32 != 0;
          __asan_report_store4(v4 + 64, v24);
        }
        *(_DWORD *)(v4 + 64) = 0;
        v33 = std::map<unsigned int,std::string>::operator[](
                v31,
                (std::map<unsigned int,std::string>::key_type *)(v4 + 64));
        std::string::operator=(v33, &script_config->script_content.file_path);
        *(_BYTE *)(((v4 + 64) >> 3) + 0x7FFF8000) = -8;
        dfs_begin_time_us = common::tools::TimeUtils::Timer::time((const common::tools::TimeUtils::Timer *const)(v4 + 208));
        v34 = LuaStaticChecker::dfsLuaAST((const LuaASTNode *)(v4 + 560), context);
        if ( *(_BYTE *)(((unsigned __int64)&param->ret >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)param + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&param->ret >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(&param->ret);
        }
        param->ret |= v34;
        v35 = common::tools::TimeUtils::Timer::time((const common::tools::TimeUtils::Timer *const)(v4 + 208))
            - dfs_begin_time_us;
        if ( *(_BYTE *)(((unsigned __int64)&param->checker_time_us >> 3) + 0x7FFF8000) )
          __asan_report_load8(&param->checker_time_us);
        param->checker_time_us += v35;
      }
      LuaASTNode::~LuaASTNode((LuaASTNode *const)(v4 + 560));
    }
  }
  common::tools::TimeUtils::Timer::~Timer((common::tools::TimeUtils::Timer *const)(v4 + 208));
  luabind::adl::object::~object((luabind::adl::object *const)(v4 + 176));
  if ( v37 == (unsigned int *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8060) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8068) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8068) = -168430091;
  }
};

// Line 4352: range 000000000F321058-000000000F321555
const std::set<data::EventType> *__cdecl LuaConfigMgr::getValidDungeonBroadcastEventSet(const LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 v5; // rsi
  __int64 v6; // rsi
  __int64 v7; // rsi
  __int64 v8; // rsi
  __int64 v9; // rsi
  const std::set<data::EventType> *result; // rax
  char v11[208]; // [rsp+20h] [rbp-D0h] BYREF

  v2 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(160LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 1 9 <unknown> 64 1 9 <unknown> 80 44 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::getValidDungeonBroadcastEventSet;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = 61953;
  v4[536862723] = 0x4000000;
  v4[536862724] = -202116109;
  if ( !(_BYTE)`guard variable for'LuaConfigMgr::getValidDungeonBroadcastEventSet(void)::valid_dungeon_broadcast_event_set
    && __cxa_guard_acquire(&`guard variable for'LuaConfigMgr::getValidDungeonBroadcastEventSet(void)::valid_dungeon_broadcast_event_set) )
  {
    if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v2 + 80, v1);
    *(_DWORD *)(v2 + 80) = 33;
    v5 = (((_BYTE)v2 + 84) & 7u) + 3;
    if ( *(_BYTE *)(((v2 + 84) >> 3) + 0x7FFF8000) != 0
      && (char)(((v2 + 84) & 7) + 3) >= *(_BYTE *)(((v2 + 84) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store4(v2 + 84, v5);
    }
    *(_DWORD *)(v2 + 84) = 8;
    if ( *(_BYTE *)(((v2 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 88) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v2 + 88, v5);
    *(_DWORD *)(v2 + 88) = 58;
    v6 = (((_BYTE)v2 + 92) & 7u) + 3;
    if ( *(_BYTE *)(((v2 + 92) >> 3) + 0x7FFF8000) != 0
      && (char)(((v2 + 92) & 7) + 3) >= *(_BYTE *)(((v2 + 92) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store4(v2 + 92, v6);
    }
    *(_DWORD *)(v2 + 92) = 69;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v2 + 96, v6);
    *(_DWORD *)(v2 + 96) = 60;
    v7 = (((_BYTE)v2 + 100) & 7u) + 3;
    if ( *(_BYTE *)(((v2 + 100) >> 3) + 0x7FFF8000) != 0
      && (char)(((v2 + 100) & 7) + 3) >= *(_BYTE *)(((v2 + 100) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store4(v2 + 100, v7);
    }
    *(_DWORD *)(v2 + 100) = 98;
    if ( *(_BYTE *)(((v2 + 104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 104) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v2 + 104, v7);
    *(_DWORD *)(v2 + 104) = 97;
    v8 = (((_BYTE)v2 + 108) & 7u) + 3;
    if ( *(_BYTE *)(((v2 + 108) >> 3) + 0x7FFF8000) != 0
      && (char)(((v2 + 108) & 7) + 3) >= *(_BYTE *)(((v2 + 108) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store4(v2 + 108, v8);
    }
    *(_DWORD *)(v2 + 108) = 101;
    if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v2 + 112, v8);
    *(_DWORD *)(v2 + 112) = 100;
    v9 = (((_BYTE)v2 + 116) & 7u) + 3;
    if ( *(_BYTE *)(((v2 + 116) >> 3) + 0x7FFF8000) != 0
      && (char)(((v2 + 116) & 7) + 3) >= *(_BYTE *)(((v2 + 116) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store4(v2 + 116, v9);
    }
    *(_DWORD *)(v2 + 116) = 99;
    if ( *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v2 + 120, v9);
    *(_DWORD *)(v2 + 120) = 102;
    std::allocator<data::EventType>::allocator((std::allocator<data::EventType> *const)(v2 + 64));
    std::set<data::EventType>::set(
      (std::set<data::EventType> *const)&LuaConfigMgr::getValidDungeonBroadcastEventSet(void)const::valid_dungeon_broadcast_event_set,
      (std::initializer_list<data::EventType>)__PAIR128__(11LL, v2 + 80),
      (const std::less<data::EventType> *)(v2 + 48),
      (const std::set<data::EventType>::allocator_type *)(v2 + 64));
    __cxa_guard_release(&`guard variable for'LuaConfigMgr::getValidDungeonBroadcastEventSet(void)::valid_dungeon_broadcast_event_set);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::set<data::EventType>::~set,
      (void *)&LuaConfigMgr::getValidDungeonBroadcastEventSet(void)const::valid_dungeon_broadcast_event_set,
      &_dso_handle);
    std::allocator<data::EventType>::~allocator((std::allocator<data::EventType> *const)(v2 + 64));
  }
  result = &LuaConfigMgr::getValidDungeonBroadcastEventSet(void)const::valid_dungeon_broadcast_event_set;
  if ( v11 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 4371: range 000000000F321556-000000000F321AE1
int32_t __cdecl LuaConfigMgr::checkAllPatternGroupScriptConfig(const LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  char *v5; // rsi
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rdx
  common::milog::MiLogStream *v10; // rax
  int32_t result; // eax
  int32_t ret; // [rsp+14h] [rbp-14Ch]
  std::unordered_map<unsigned int,PatternGroupScriptConfig> *__for_range; // [rsp+18h] [rbp-148h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,PatternGroupScriptConfig>,false,false>::reference v14; // [rsp+20h] [rbp-140h]
  std::tuple_element<0,std::pair<unsigned int const,PatternGroupScriptConfig> >::type *pattern_id; // [rsp+28h] [rbp-138h]
  std::unordered_map<unsigned int,GadgetScriptConfig> *__for_range_0; // [rsp+40h] [rbp-120h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false>::reference v17; // [rsp+48h] [rbp-118h]
  std::tuple_element<0,std::pair<unsigned int const,GadgetScriptConfig> >::type *config_id; // [rsp+50h] [rbp-110h]
  std::tuple_element<1,const std::pair<unsigned int const,GadgetScriptConfig> >::type *gadget_config; // [rsp+58h] [rbp-108h]
  char v20[256]; // [rsp+60h] [rbp-100h] BYREF

  v2 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(224LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 8 16 __for_begin:4373 64 8 14 __for_end:4373 96 8 16 __for_begin:4376 128 8 14 __for_end:43"
                        "76 160 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::checkAllPatternGroupScriptConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -202116109;
  ret = 0;
  __for_range = &this->pattern_group_config_map;
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<unsigned int,PatternGroupScriptConfig>::const_iterator *)(v2 + 32) = std::unordered_map<unsigned int,PatternGroupScriptConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<unsigned int,PatternGroupScriptConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,PatternGroupScriptConfig>::end(__for_range);
  while ( 1 )
  {
    v5 = (char *)(v2 + 64);
    if ( !std::__detail::operator!=<std::pair<unsigned int const,PatternGroupScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,PatternGroupScriptConfig>,false> *)(v2 + 32),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,PatternGroupScriptConfig>,false> *)(v2 + 64)) )
      break;
    v14 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,PatternGroupScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,PatternGroupScriptConfig>,false,false> *const)(v2 + 32));
    pattern_id = std::get<0ul,unsigned int const,PatternGroupScriptConfig>(v14);
    __for_range_0 = &std::get<1ul,unsigned int const,PatternGroupScriptConfig>(v14)->group_config.gadget_config_map;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 96, v5);
    *(std::unordered_map<unsigned int,GadgetScriptConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,GadgetScriptConfig>::begin(__for_range_0);
    *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 128, v5);
    *(std::unordered_map<unsigned int,GadgetScriptConfig>::const_iterator *)(v2 + 128) = std::unordered_map<unsigned int,GadgetScriptConfig>::end(__for_range_0);
    while ( std::__detail::operator!=<std::pair<unsigned int const,GadgetScriptConfig>,false>(
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GadgetScriptConfig>,false> *)(v2 + 96),
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GadgetScriptConfig>,false> *)(v2 + 128)) )
    {
      v17 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false> *const)(v2 + 96));
      config_id = std::get<0ul,unsigned int const,GadgetScriptConfig>(v17);
      gadget_config = (std::tuple_element<1,const std::pair<unsigned int const,GadgetScriptConfig> >::type *)std::get<1ul,unsigned int const,GadgetScriptConfig>(v17);
      if ( *(_BYTE *)(((unsigned __int64)&gadget_config->explore_config >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&gadget_config->explore_config >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&gadget_config->explore_config);
      }
      if ( gadget_config->explore_config.type )
        goto LABEL_22;
      if ( *(_BYTE *)(((unsigned __int64)&gadget_config->explore_config.exp >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)gadget_config - 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&gadget_config->explore_config.exp >> 3)
                                                                     + 0x7FFF8000) )
      {
        __asan_report_load4(&gadget_config->explore_config.exp);
      }
      if ( gadget_config->explore_config.exp )
      {
LABEL_22:
        ret = -1;
        *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 160, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 160),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "checkAllPatternGroupScriptConfig",
          4381);
        v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
               (common::milog::MiLogStream *const)(v2 + 160),
               (const char (*)[16])"[CONFIG_ERROR] ");
        v7 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(v6, (const char (*)[17])" pattern group: ");
        v8 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, pattern_id);
        v9 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
               v8,
               (const char (*)[20])" gadget config_id: ");
        v10 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, config_id);
        common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v10, (const char (*)[26])byte_1A544A20);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
        *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
      }
      std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false> *const)(v2 + 96));
    }
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,PatternGroupScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,PatternGroupScriptConfig>,false,false> *const)(v2 + 32));
  }
  result = ret;
  if ( v20 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 4390: range 000000000F321AE2-000000000F322AD9
int32_t __cdecl LuaConfigMgr::checkGroupScriptConfig(const LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  char *v5; // rsi
  char *v6; // rsi
  char *v7; // rsi
  const std::unordered_map<std::string,proto::GroupVariableType> *p_variable_name_type_map; // rdx
  const std::unordered_map<std::string,proto::GroupVariableType> *v9; // rdx
  std::__detail::_Node_const_iterator<std::pair<const std::string,proto::GroupVariableType>,false,true>::pointer v10; // rax
  char v11; // dl
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rdx
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rdx
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rdx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rdx
  uint32_t *p_gadget_id; // rax
  __int64 v21; // rsi
  uint32_t gadget_id; // ecx
  char v23; // al
  GadgetExcelConfigMgr *p_gadget_config_mgr; // rdx
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rdx
  common::milog::MiLogStream *v29; // rax
  common::milog::MiLogStream *v30; // rdx
  __int64 v31; // rsi
  __int64 v32; // rdx
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rdx
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // rdx
  int32_t result; // eax
  int32_t ret; // [rsp+1Ch] [rbp-354h]
  std::unordered_map<unsigned int,SceneScriptConfig> *__for_range; // [rsp+20h] [rbp-350h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::reference v42; // [rsp+28h] [rbp-348h]
  std::tuple_element<0,std::pair<unsigned int const,SceneScriptConfig> >::type *scene_id; // [rsp+30h] [rbp-340h]
  std::unordered_map<unsigned int,GroupScriptConfig> *__for_range_0; // [rsp+40h] [rbp-330h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::reference v45; // [rsp+48h] [rbp-328h]
  std::tuple_element<0,std::pair<unsigned int const,GroupScriptConfig> >::type *group_id; // [rsp+50h] [rbp-320h]
  std::tuple_element<1,const std::pair<unsigned int const,GroupScriptConfig> >::type *group_script_config; // [rsp+58h] [rbp-318h]
  const std::unordered_map<unsigned int,std::set<std::string>> *__for_range_1; // [rsp+60h] [rbp-310h]
  const std::unordered_map<unsigned int,GadgetScriptConfig> *__for_range_3; // [rsp+68h] [rbp-308h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false>::reference v50; // [rsp+70h] [rbp-300h]
  std::tuple_element<1,const std::pair<unsigned int const,GadgetScriptConfig> >::type *gadget_script_config; // [rsp+80h] [rbp-2F0h]
  const data::GadgetExcelConfig *gadget_excel_config_ptr; // [rsp+90h] [rbp-2E0h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false>::reference v53; // [rsp+98h] [rbp-2D8h]
  std::tuple_element<0,std::pair<unsigned int const,std::set<std::string> > >::type *config_id; // [rsp+A0h] [rbp-2D0h]
  const std::tuple_element<1,std::pair<unsigned int const,std::set<std::string> > >::type *__for_range_2; // [rsp+B0h] [rbp-2C0h]
  std::_Rb_tree_const_iterator<std::string >::reference logic_state; // [rsp+B8h] [rbp-2B8h]
  char v57[688]; // [rsp+C0h] [rbp-2B0h] BYREF

  v2 = (unsigned __int64)v57;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(640LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "16 48 4 14 gadget_id:4411 64 8 16 __for_begin:4393 96 8 14 __for_end:4393 128 8 16 __for_begin:4"
                        "395 160 8 14 __for_end:4395 192 8 16 __for_begin:4397 224 8 14 __for_end:4397 256 8 16 __for_beg"
                        "in:4399 288 8 14 __for_end:4399 320 8 9 iter:4401 352 8 9 <unknown> 384 8 16 __for_begin:4409 41"
                        "6 8 14 __for_end:4409 448 32 9 <unknown> 512 32 9 <unknown> 576 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::checkGroupScriptConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862725] = -218959360;
  v4[536862726] = -218959360;
  v4[536862727] = -218959360;
  v4[536862728] = -218959360;
  v4[536862729] = -218959360;
  v4[536862730] = -218959360;
  v4[536862731] = -218959360;
  v4[536862732] = -218959360;
  v4[536862733] = -218959360;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -202116109;
  ret = 0;
  __for_range = &this->scene_script_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,SceneScriptConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::unordered_map<unsigned int,SceneScriptConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,SceneScriptConfig>::end(__for_range);
  while ( 1 )
  {
    v5 = (char *)(v2 + 96);
    if ( !std::__detail::operator!=<std::pair<unsigned int const,SceneScriptConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 64),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v2 + 96)) )
      break;
    v42 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 64));
    scene_id = std::get<0ul,unsigned int const,SceneScriptConfig>(v42);
    __for_range_0 = &std::get<1ul,unsigned int const,SceneScriptConfig>(v42)->group_config_map;
    *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 128, v5);
    *(std::unordered_map<unsigned int,GroupScriptConfig>::const_iterator *)(v2 + 128) = std::unordered_map<unsigned int,GroupScriptConfig>::begin(__for_range_0);
    *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 160, v5);
    *(std::unordered_map<unsigned int,GroupScriptConfig>::const_iterator *)(v2 + 160) = std::unordered_map<unsigned int,GroupScriptConfig>::end(__for_range_0);
    while ( 1 )
    {
      v6 = (char *)(v2 + 160);
      if ( !std::__detail::operator!=<std::pair<unsigned int const,GroupScriptConfig>,false>(
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v2 + 128),
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GroupScriptConfig>,false> *)(v2 + 160)) )
        break;
      v45 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v2 + 128));
      group_id = std::get<0ul,unsigned int const,GroupScriptConfig>(v45);
      group_script_config = (std::tuple_element<1,const std::pair<unsigned int const,GroupScriptConfig> >::type *)std::get<1ul,unsigned int const,GroupScriptConfig>(v45);
      __for_range_1 = &group_script_config->entity_apply_logic_state_set_map;
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 192, v6);
      *(std::unordered_map<unsigned int,std::set<std::string>>::const_iterator *)(v2 + 192) = std::unordered_map<unsigned int,std::set<std::string>>::begin(__for_range_1);
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 224, v6);
      *(std::unordered_map<unsigned int,std::set<std::string>>::const_iterator *)(v2 + 224) = std::unordered_map<unsigned int,std::set<std::string>>::end(__for_range_1);
      while ( 1 )
      {
        v7 = (char *)(v2 + 224);
        if ( !std::__detail::operator!=<std::pair<unsigned int const,std::set<std::string>>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<std::string> >,false> *)(v2 + 192),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<std::string> >,false> *)(v2 + 224)) )
          break;
        v53 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<std::string>>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false> *const)(v2 + 192));
        config_id = std::get<0ul,unsigned int const,std::set<std::string>>(v53);
        __for_range_2 = std::get<1ul,unsigned int const,std::set<std::string>>(v53);
        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 256, v7);
        *(std::set<std::string>::iterator *)(v2 + 256) = std::set<std::string>::begin(__for_range_2);
        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
        if ( *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 288, v7);
        *(std::set<std::string>::iterator *)(v2 + 288) = std::set<std::string>::end(__for_range_2);
        while ( std::operator!=(
                  (const std::_Rb_tree_const_iterator<std::string >::_Self *)(v2 + 256),
                  (const std::_Rb_tree_const_iterator<std::string >::_Self *)(v2 + 288)) )
        {
          logic_state = std::_Rb_tree_const_iterator<std::string>::operator*((const std::_Rb_tree_const_iterator<std::string > *const)(v2 + 256));
          *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
          p_variable_name_type_map = &group_script_config->variable_name_type_map;
          if ( *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v2 + 320, v2 + 288);
          *(std::unordered_map<std::string,proto::GroupVariableType>::const_iterator *)(v2 + 320) = std::unordered_map<std::string,proto::GroupVariableType>::find(p_variable_name_type_map, logic_state);
          *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
          v9 = &group_script_config->variable_name_type_map;
          if ( *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) )
            __asan_report_store8(v2 + 352, logic_state);
          *(std::unordered_map<std::string,proto::GroupVariableType>::const_iterator *)(v2 + 352) = std::unordered_map<std::string,proto::GroupVariableType>::end(v9);
          if ( std::__detail::operator==<std::pair<std::string const,proto::GroupVariableType>,true>(
                 (const std::__detail::_Node_iterator_base<std::pair<const std::string,proto::GroupVariableType>,true> *)(v2 + 320),
                 (const std::__detail::_Node_iterator_base<std::pair<const std::string,proto::GroupVariableType>,true> *)(v2 + 352)) )
          {
            goto LABEL_36;
          }
          v10 = std::__detail::_Node_const_iterator<std::pair<std::string const,proto::GroupVariableType>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,proto::GroupVariableType>,false,true> *const)(v2 + 320));
          if ( *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&v10->second);
          }
          if ( v10->second == VARIABLE_TYPE_LOGIC_STATE )
            v11 = 0;
          else
LABEL_36:
            v11 = 1;
          *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
          if ( v11 )
          {
            *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 33) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 448, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 448),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "checkGroupScriptConfig",
              4404);
            v12 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 448),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v13 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v12,
                    (const char (*)[13])"logic_state:");
            v14 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v13, logic_state);
            v15 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
                    v14,
                    (const char (*)[27])" is not LogicState, group:");
            v16 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, group_id);
            v17 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v16, (const char (*)[8])" scene:");
            v18 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, scene_id);
            v19 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                    v18,
                    (const char (*)[12])" config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, config_id);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
            *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
            ret = -1;
          }
          *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
          std::_Rb_tree_const_iterator<std::string>::operator++((std::_Rb_tree_const_iterator<std::string > *const)(v2 + 256));
        }
        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
        std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<std::string>>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<std::string> >,false,false> *const)(v2 + 192));
      }
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
      __for_range_3 = &group_script_config->gadget_config_map;
      *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 384, v7);
      *(std::unordered_map<unsigned int,GadgetScriptConfig>::const_iterator *)(v2 + 384) = std::unordered_map<unsigned int,GadgetScriptConfig>::begin(__for_range_3);
      *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 416, v7);
      *(std::unordered_map<unsigned int,GadgetScriptConfig>::const_iterator *)(v2 + 416) = std::unordered_map<unsigned int,GadgetScriptConfig>::end(__for_range_3);
      while ( std::__detail::operator!=<std::pair<unsigned int const,GadgetScriptConfig>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GadgetScriptConfig>,false> *)(v2 + 384),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,GadgetScriptConfig>,false> *)(v2 + 416)) )
      {
        v50 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false> *const)(v2 + 384));
        std::get<0ul,unsigned int const,GadgetScriptConfig>(v50);
        gadget_script_config = (std::tuple_element<1,const std::pair<unsigned int const,GadgetScriptConfig> >::type *)std::get<1ul,unsigned int const,GadgetScriptConfig>(v50);
        *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 4;
        p_gadget_id = &gadget_script_config->gadget_id;
        v21 = (((_BYTE)gadget_script_config + 4) & 7u) + 3;
        if ( *(_BYTE *)(((unsigned __int64)p_gadget_id >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)gadget_script_config + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_gadget_id >> 3)
                                                                             + 0x7FFF8000) )
        {
          __asan_report_load4(p_gadget_id);
        }
        gadget_id = gadget_script_config->gadget_id;
        v23 = *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000);
        if ( v23 != 0 && v23 <= 3 )
        {
          LOBYTE(v21) = v23 != 0;
          __asan_report_store4(v2 + 48, v21);
        }
        *(_DWORD *)(v2 + 48) = gadget_id;
        p_gadget_config_mgr = &LuaConfigMgr::getConfig(this)->txt_config_mgr.gadget_config_mgr;
        if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 48);
        gadget_excel_config_ptr = data::GadgetExcelConfigMgrBase::findGadgetExcelConfig(
                                    p_gadget_config_mgr,
                                    *(_DWORD *)(v2 + 48));
        if ( gadget_excel_config_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&gadget_excel_config_ptr->type >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)gadget_excel_config_ptr + 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&gadget_excel_config_ptr->type >> 3)
                                                                                   + 0x7FFF8000) )
          {
            __asan_report_load4(&gadget_excel_config_ptr->type);
          }
          if ( gadget_excel_config_ptr->type == CustomGadget )
          {
            v31 = ((_BYTE)gadget_script_config + 76) & 7;
            v32 = (*(_BYTE *)(((unsigned __int64)&gadget_script_config->is_persistent >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v31 >= *(_BYTE *)(((unsigned __int64)&gadget_script_config->is_persistent >> 3) + 0x7FFF8000));
            if ( (_BYTE)v32 )
              __asan_report_load1(&gadget_script_config->is_persistent, v31, v32);
            if ( !gadget_script_config->is_persistent )
            {
              *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 576) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 576, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 576),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "checkGroupScriptConfig",
                4424);
              v33 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 576),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v34 = common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(
                      v33,
                      (const char (*)[69])byte_1A544CA0);
              v35 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v34,
                      (const unsigned int *)(v2 + 48));
              v36 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v35, (const char (*)[8])" group:");
              v37 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v36, group_id);
              v38 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v37, (const char (*)[8])" scene:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v38, scene_id);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 576));
              *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
              ret = -1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 512, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 512),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "checkGroupScriptConfig",
            4416);
          v25 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 512),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v26 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                  v25,
                  (const char (*)[40])"findGadgetExcelConfig fails, gadget_id:");
          v27 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v26,
                  (const unsigned int *)(v2 + 48));
          v28 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v27, (const char (*)[8])" group:");
          v29 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v28, group_id);
          v30 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v29, (const char (*)[8])" scene:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v30, scene_id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
          *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
          ret = -1;
        }
        *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
        std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,GadgetScriptConfig>,false,false> *const)(v2 + 384));
      }
      *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = -8;
      std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,GroupScriptConfig>,false,false> *const)(v2 + 128));
    }
    *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v2 + 64));
  }
  result = ret;
  if ( v57 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4435: range 000000000F322ADA-000000000F323532
int32_t __cdecl LuaConfigMgr::checkRegisterEventTypeGroup(const LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // r14
  std::unordered_set<unsigned int>::size_type v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rdi
  __int64 v10; // rsi
  std::tuple_element<0,std::pair<const data::EventType,std::unordered_set<unsigned int> > >::type v11; // ecx
  char v12; // al
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // r14
  std::unordered_set<unsigned int>::size_type v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rdi
  __int64 v18; // rsi
  std::tuple_element<0,std::pair<const data::EventType,std::unordered_set<unsigned int> > >::type v19; // ecx
  char v20; // al
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rdi
  __int64 v23; // rsi
  std::tuple_element<0,std::pair<const data::EventType,std::unordered_set<unsigned int> > >::type v24; // ecx
  char v25; // al
  int32_t result; // eax
  int32_t ret; // [rsp+1Ch] [rbp-1F4h]
  std::unordered_map<data::EventType,std::unordered_set<unsigned int>> *__for_range; // [rsp+20h] [rbp-1F0h]
  std::__detail::_Node_const_iterator<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false,false>::reference v29; // [rsp+28h] [rbp-1E8h]
  std::tuple_element<0,std::pair<const data::EventType,std::unordered_set<unsigned int> > >::type *event_type; // [rsp+30h] [rbp-1E0h]
  std::tuple_element<1,const std::pair<const data::EventType,std::unordered_set<unsigned int> > >::type *group_id_set; // [rsp+38h] [rbp-1D8h]
  char v32[464]; // [rsp+40h] [rbp-1D0h] BYREF

  v2 = (unsigned __int64)v32;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(416LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "10 48 4 9 <unknown> 64 4 9 <unknown> 80 4 9 <unknown> 96 8 16 __for_begin:4437 128 8 14 __for_en"
                        "d:4437 160 8 9 <unknown> 192 8 9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::checkRegisterEventTypeGroup;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -234556924;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862725] = -218959360;
  v4[536862726] = -218959360;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -202116109;
  ret = 0;
  __for_range = &this->register_event_type_group_id_set_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 96) = std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::begin(__for_range);
  if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 128, v1);
  *(std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 128) = std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::end(__for_range);
  while ( std::__detail::operator!=<std::pair<data::EventType const,std::unordered_set<unsigned int>>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false> *)(v2 + 96),
            (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false> *)(v2 + 128)) )
  {
    v29 = std::__detail::_Node_const_iterator<std::pair<data::EventType const,std::unordered_set<unsigned int>>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 96));
    event_type = std::get<0ul,data::EventType const,std::unordered_set<unsigned int>>(v29);
    group_id_set = (std::tuple_element<1,const std::pair<const data::EventType,std::unordered_set<unsigned int> > >::type *)std::get<1ul,data::EventType const,std::unordered_set<unsigned int>>(v29);
    if ( *(_BYTE *)(((unsigned __int64)event_type >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)event_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)event_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(event_type);
    }
    if ( *event_type == EVENT_SET_GAME_TIME )
    {
      if ( std::unordered_set<unsigned int>::size(group_id_set) > 0xA )
      {
        *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 224, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 224),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "checkRegisterEventTypeGroup",
          4447);
        v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
               (common::milog::MiLogStream *const)(v2 + 224),
               (const char (*)[16])"[CONFIG_ERROR] ");
        v6 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
               v5,
               (const char (*)[31])"invalid register group count: ");
        *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
        v7 = std::unordered_set<unsigned int>::size(group_id_set);
        if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) )
          v7 = __asan_report_store8(v2 + 160, "invalid register group count: ");
        *(_QWORD *)(v2 + 160) = v7;
        v8 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
               v6,
               (const unsigned __int64 *)(v2 + 160));
        v9 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
               v8,
               (const char (*)[28])", more than 10, event_type:");
        *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 4;
        v10 = ((unsigned __int8)event_type & 7u) + 3;
        if ( *(_BYTE *)(((unsigned __int64)event_type >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)event_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)event_type >> 3) + 0x7FFF8000) )
        {
          v9 = (common::milog::MiLogStream *)event_type;
          __asan_report_load4(event_type);
        }
        v11 = *event_type;
        v12 = *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000);
        if ( v12 != 0 && v12 <= 3 )
        {
          v9 = (common::milog::MiLogStream *)(v2 + 48);
          LOBYTE(v10) = v12 != 0;
          __asan_report_store4(v2 + 48, v10);
        }
        *(_DWORD *)(v2 + 48) = v11;
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v2 + 48));
        *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
        *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
        ret = -1;
      }
    }
    else if ( *event_type == EVENT_GADGET_CHAIN_LEVEL_CHANGE )
    {
      if ( std::unordered_set<unsigned int>::size(group_id_set) > 0x96 )
      {
        *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 288, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 288),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "checkRegisterEventTypeGroup",
          4456);
        v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 288),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v14 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                v13,
                (const char (*)[31])"invalid register group count: ");
        *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
        v15 = std::unordered_set<unsigned int>::size(group_id_set);
        if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) )
          v15 = __asan_report_store8(v2 + 192, "invalid register group count: ");
        *(_QWORD *)(v2 + 192) = v15;
        v16 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                v14,
                (const unsigned __int64 *)(v2 + 192));
        v17 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                v16,
                (const char (*)[29])", more than 150, event_type:");
        *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 4;
        v18 = ((unsigned __int8)event_type & 7u) + 3;
        if ( *(_BYTE *)(((unsigned __int64)event_type >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)event_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)event_type >> 3) + 0x7FFF8000) )
        {
          v17 = (common::milog::MiLogStream *)event_type;
          __asan_report_load4(event_type);
        }
        v19 = *event_type;
        v20 = *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000);
        if ( v20 != 0 && v20 <= 3 )
        {
          v17 = (common::milog::MiLogStream *)(v2 + 64);
          LOBYTE(v18) = v20 != 0;
          __asan_report_store4(v2 + 64, v18);
        }
        *(_DWORD *)(v2 + 64) = v19;
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v2 + 64));
        *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
        *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
        *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
        ret = -1;
      }
    }
    else
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 352, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 352),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkRegisterEventTypeGroup",
        4463);
      v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v2 + 352),
              (const char (*)[16])"[CONFIG_ERROR] ");
      v22 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
              v21,
              (const char (*)[21])"unknown event_type: ");
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 4;
      v23 = ((unsigned __int8)event_type & 7u) + 3;
      if ( *(_BYTE *)(((unsigned __int64)event_type >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)event_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)event_type >> 3) + 0x7FFF8000) )
      {
        v22 = (common::milog::MiLogStream *)event_type;
        __asan_report_load4(event_type);
      }
      v24 = *event_type;
      v25 = *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000);
      if ( v25 != 0 && v25 <= 3 )
      {
        v22 = (common::milog::MiLogStream *)(v2 + 80);
        LOBYTE(v23) = v25 != 0;
        __asan_report_store4(v2 + 80, v23);
      }
      *(_DWORD *)(v2 + 80) = v24;
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, (const unsigned int *)(v2 + 80));
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      ret = -1;
    }
    std::__detail::_Node_const_iterator<std::pair<data::EventType const,std::unordered_set<unsigned int>>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 96));
  }
  result = ret;
  if ( v32 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = -168430091;
  }
  return result;
};

// Line 4473: range 000000000F323534-000000000F324080
int32_t __cdecl LuaConfigMgr::checkEventConditionGroup(const LuaConfigMgr *const this)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::unordered_map<data::EventType,std::unordered_set<unsigned int>> *p_register_event_type_group_id_set_map; // rcx
  char v6; // al
  std::unordered_map<data::EventType,std::unordered_set<unsigned int>> *v7; // rdx
  bool v8; // al
  common::milog::MiLogStream *v9; // rax
  int32_t v10; // r14d
  unsigned __int64 v11; // rax
  std::unordered_set<unsigned int> *p_second; // rsi
  const data::GadgetExcelConfigMgrBase *v13; // rcx
  std::tuple_element<0,std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *v14; // rsi
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rdx
  char *v17; // rsi
  unsigned int *v18; // rax
  int *v19; // rdx
  int v20; // ecx
  char v21; // al
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  int32_t result; // eax
  int32_t ret; // [rsp+1Ch] [rbp-284h]
  GadgetExcelConfigMgr *gadget_config_mgr; // [rsp+20h] [rbp-280h]
  std::unordered_map<unsigned int,std::unordered_set<unsigned int>> *__for_range; // [rsp+28h] [rbp-278h]
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false>::reference v28; // [rsp+30h] [rbp-270h]
  std::tuple_element<0,std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *chain_id; // [rsp+38h] [rbp-268h]
  std::tuple_element<1,const std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *group_id_set; // [rsp+40h] [rbp-260h]
  char v31[592]; // [rsp+50h] [rbp-250h] BYREF

  v2 = (unsigned __int64)v31;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(544LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "12 32 4 9 <unknown> 48 4 13 group_id:4495 64 8 39 chain_level_change_group_id_set_it:4476 96 8 9"
                        " <unknown> 128 8 16 __for_begin:4487 160 8 14 __for_end:4487 192 8 16 __for_begin:4495 224 8 14 "
                        "__for_end:4495 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 56 48 event_conditio"
                        "n_not_configured_group_id_set:4484";
  *(_QWORD *)(v2 + 16) = LuaConfigMgr::checkEventConditionGroup;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862725] = -218959360;
  v4[536862726] = -218959360;
  v4[536862727] = -218959360;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218103808;
  v4[536862736] = -202116109;
  ret = 0;
  p_register_event_type_group_id_set_map = &this->register_event_type_group_id_set_map;
  v6 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
  LOBYTE(v1) = v6 != 0;
  if ( v6 != 0 && v6 <= 3 )
    __asan_report_store4(v2 + 32, v1);
  *(_DWORD *)(v2 + 32) = 3101;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::find(p_register_event_type_group_id_set_map, (const std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::key_type *)(v2 + 32));
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
  v7 = &this->register_event_type_group_id_set_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 32);
  *(std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 96) = std::unordered_map<data::EventType,std::unordered_set<unsigned int>>::end(v7);
  v8 = std::__detail::operator==<std::pair<data::EventType const,std::unordered_set<unsigned int>>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v8 )
  {
    *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 256) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 256, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 256),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "checkEventConditionGroup",
      4479);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 256),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [86],(char *[86])0>(
      v9,
      (const char (*)[86])"register_event_type_group_id_set_map[EVENT_GADGET_CHAIN_LEVEL_CHANGE] does not exist!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 256));
    v10 = -1;
  }
  else
  {
    v11 = ((v2 + 448) >> 3) + 2147450880;
    *(_DWORD *)v11 = 0;
    *(_WORD *)(v11 + 4) = 0;
    *(_BYTE *)(v11 + 6) = 0;
    p_second = &std::__detail::_Node_const_iterator<std::pair<data::EventType const,std::unordered_set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<const data::EventType,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 64))->second;
    std::unordered_set<unsigned int>::unordered_set((std::unordered_set<unsigned int> *const)(v2 + 448), p_second);
    gadget_config_mgr = &LuaConfigMgr::getConfig(this)->txt_config_mgr.gadget_config_mgr;
    __for_range = &this->gadget_chain_event_chain_to_groupset_map;
    *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 128, p_second);
    *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 128) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::begin(__for_range);
    *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 160, p_second);
    *(std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::const_iterator *)(v2 + 160) = std::unordered_map<unsigned int,std::unordered_set<unsigned int>>::end(__for_range);
    while ( std::__detail::operator!=<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false>(
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 128),
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false> *)(v2 + 160)) )
    {
      v28 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 128));
      chain_id = std::get<0ul,unsigned int const,std::unordered_set<unsigned int>>(v28);
      group_id_set = (std::tuple_element<1,const std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *)std::get<1ul,unsigned int const,std::unordered_set<unsigned int>>(v28);
      v13 = gadget_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)chain_id >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)chain_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)chain_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(chain_id);
      }
      v14 = (std::tuple_element<0,std::pair<unsigned int const,std::unordered_set<unsigned int> > >::type *)*chain_id;
      if ( !data::GadgetExcelConfigMgrBase::findGadgetChainExcelConfig(v13, (uint32_t)v14) )
      {
        *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 320, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 320),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "checkEventConditionGroup",
          4492);
        v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 320),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v16 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                v15,
                (const char (*)[52])"event_condition (chain_id) is not valid! chain_id: ");
        v14 = chain_id;
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, chain_id);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 320));
        *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
        ret = -1;
      }
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 192, v14);
      *(std::unordered_set<unsigned int>::const_iterator *)(v2 + 192) = std::unordered_set<unsigned int>::begin(group_id_set);
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) )
        __asan_report_store8(v2 + 224, v14);
      *(std::unordered_set<unsigned int>::const_iterator *)(v2 + 224) = std::unordered_set<unsigned int>::end(group_id_set);
      while ( 1 )
      {
        v17 = (char *)(v2 + 224);
        if ( !std::__detail::operator!=<unsigned int,false>(
                (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 192),
                (const std::__detail::_Node_iterator_base<unsigned int,false> *)(v2 + 224)) )
          break;
        *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 4;
        v18 = (unsigned int *)std::__detail::_Node_const_iterator<unsigned int,true,false>::operator*((const std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v2 + 192));
        v19 = (int *)v18;
        if ( *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v18 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v18);
        }
        v20 = *v19;
        v21 = *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000);
        if ( v21 != 0 && v21 <= 3 )
        {
          LOBYTE(v17) = v21 != 0;
          __asan_report_store4(v2 + 48, v17);
        }
        *(_DWORD *)(v2 + 48) = v20;
        std::unordered_set<unsigned int>::erase(
          (std::unordered_set<unsigned int> *const)(v2 + 448),
          (const std::unordered_set<unsigned int>::key_type *)(v2 + 48));
        std::__detail::_Node_const_iterator<unsigned int,true,false>::operator++((std::__detail::_Node_const_iterator<unsigned int,true,false> *const)(v2 + 192));
      }
      *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
      std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int>>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_set<unsigned int> >,false,false> *const)(v2 + 128));
    }
    *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
    if ( !std::unordered_set<unsigned int>::empty((const std::unordered_set<unsigned int> *const)(v2 + 448)) )
    {
      *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 384) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 384, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 384),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "checkEventConditionGroup",
        4503);
      v22 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v2 + 384),
              (const char (*)[16])"[CONFIG_ERROR] ");
      v23 = common::milog::MiLogStream::operator<<<char [94],(char *[94])0>(v22, (const char (*)[94])byte_1A545140);
      common::milog::MiLogStream::operator<<<unsigned int>(v23, (const std::unordered_set<unsigned int> *)(v2 + 448));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 384));
      *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
    }
    v10 = ret;
    std::unordered_set<unsigned int>::~unordered_set((std::unordered_set<unsigned int> *const)(v2 + 448));
  }
  result = v10;
  if ( v31 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8034) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF803C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = -168430091;
  }
  return result;
};

// Line 4511: range 000000000F324082-000000000F32585E
int32_t __cdecl LuaConfigMgr::loadAllGroupInfoLuaStaticJsonConfig(LuaConfigMgr *const this)
{
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  HK4EDesignConfig *Config; // rdi
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rax
  int32_t v8; // r15d
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  bool v11; // al
  unsigned __int64 v12; // rax
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  Json::Value *v15; // rcx
  Json::Value *v16; // rsi
  std::__shared_ptr_access<Json::Value,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // rcx
  std::__shared_ptr_access<Json::Value,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v18; // rcx
  bool v19; // al
  unsigned __int64 v20; // rax
  unsigned __int64 v21; // rax
  __int64 v23; // rsi
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  common::milog::MiLogStream *v30; // rax
  const std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > > *v31; // rsi
  bool v32; // r15
  common::milog::MiLogStream *v33; // rax
  float *v34; // rax
  int *v35; // rdx
  char v36; // cl
  char *v37; // rsi
  int v38; // xmm0_4
  char *v39; // rsi
  std::unordered_map<unsigned int,float>::mapped_type *v40; // rax
  _DWORD *v41; // rdx
  char v42; // cl
  int v44; // [rsp+4h] [rbp-51Ch]
  char v46[1296]; // [rsp+10h] [rbp-510h] BYREF

  v1 = (unsigned __int64)v46;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_5(1248LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "23 32 4 13 group_id:4531 48 4 14 valid_ver:4538 64 4 9 temp:4542 80 16 9 iter:4528 112 16 9 <unk"
                        "nown> 144 16 24 group_info_json_ptr:4536 176 16 13 sub_iter:4539 208 16 9 <unknown> 240 32 14 fi"
                        "le_path:4512 304 32 9 <unknown> 368 32 9 <unknown> 432 32 20 version_pattern:4527 496 32 12 key_"
                        "str:4530 560 32 9 <unknown> 624 32 15 nested_key:4541 688 32 15 nested_val:4545 752 32 26 patter"
                        "n_match_results:4546 816 32 9 <unknown> 880 32 9 <unknown> 944 32 9 <unknown> 1008 40 9 root:451"
                        "9 1088 40 9 <unknown> 1168 40 9 <unknown>";
  *(_QWORD *)(v1 + 16) = LuaConfigMgr::loadAllGroupInfoLuaStaticJsonConfig;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234556924;
  v3[536862722] = 61956;
  v3[536862723] = 62194;
  v3[536862724] = 62194;
  v3[536862725] = 62194;
  v3[536862726] = 62194;
  v3[536862727] = 62194;
  v3[536862728] = -219021312;
  v3[536862729] = 62194;
  v3[536862730] = -219021312;
  v3[536862731] = 62194;
  v3[536862732] = -219021312;
  v3[536862733] = 62194;
  v3[536862734] = -219021312;
  v3[536862735] = 62194;
  v3[536862736] = -219021312;
  v3[536862737] = 62194;
  v3[536862738] = -219021312;
  v3[536862739] = 62194;
  v3[536862740] = -219021312;
  v3[536862741] = 62194;
  v3[536862742] = -219021312;
  v3[536862743] = 62194;
  v3[536862744] = -219021312;
  v3[536862745] = 62194;
  v3[536862746] = -219021312;
  v3[536862747] = 62194;
  v3[536862748] = -219021312;
  v3[536862749] = 62194;
  v3[536862750] = -219021312;
  v3[536862751] = 62194;
  v3[536862752] = -234881024;
  v3[536862753] = -218959118;
  v3[536862755] = -218959360;
  v3[536862756] = 62194;
  v3[536862757] = -218103808;
  v3[536862758] = -202116109;
  Config = LuaConfigMgr::getConfig(this);
  if ( *(char *)(((v1 + 240) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v1 + 271) >> 3) + 0x7FFF8000) != 0
    && (char)((v1 - 32 + 47) & 7) >= *(_BYTE *)(((v1 + 271) >> 3) + 0x7FFF8000) )
  {
    Config = (HK4EDesignConfig *)(v1 + 240);
    __asan_report_store_n(v1 + 240, 32LL);
  }
  std::operator+<char>((std::string *)(v1 + 240), &Config->scene_lua_base_dir, "groups_info.json");
  if ( common::tools::FileUtils::fileExists((const std::string *)(v1 + 240)) )
  {
    if ( *(char *)(((v1 + 304) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v1 + 335) >> 3) + 0x7FFF8000) != 0
      && (char)((v1 - 32 + 111) & 7) >= *(_BYTE *)(((v1 + 335) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v1 + 304, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v1 + 304),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/lua_config_mgr.cpp",
      "loadAllGroupInfoLuaStaticJsonConfig",
      4515);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v1 + 304),
           (const char (*)[16])"[CONFIG_ERROR] ");
    v6 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v5, (const char (*)[19])"json config file: ");
    v7 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, (const std::string *)(v1 + 240));
    common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v7, (const char (*)[12])" not found!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 304));
    *(_DWORD *)(((v1 + 304) >> 3) + 0x7FFF8000) = -117901064;
    v8 = -1;
  }
  else
  {
    Json::Value::Value(v1 + 1008, 0LL);
    if ( !parseJsonFile((const std::string *)(v1 + 240), (Json::Value *)(v1 + 1008)) )
    {
      if ( *(char *)(((v1 + 368) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v1 + 399) >> 3) + 0x7FFF8000) != 0
        && (char)((v1 - 113) & 7) >= *(_BYTE *)(((v1 + 399) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v1 + 368, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v1 + 368),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/lua_config_mgr.cpp",
        "loadAllGroupInfoLuaStaticJsonConfig",
        4522);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v1 + 368),
             (const char (*)[16])"[CONFIG_ERROR] ");
      v10 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
              v9,
              (const char (*)[28])"parseJsonFile fails, path: ");
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v10, (const std::string *)(v1 + 240));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 368));
      *(_DWORD *)(((v1 + 368) >> 3) + 0x7FFF8000) = -117901064;
      v8 = -1;
    }
    else
    {
      std::basic_regex<char,std::regex_traits<char>>::basic_regex(
        (std::basic_regex<char,std::regex_traits<char> > *const)(v1 + 432),
        "^\\d+\\.\\d+",
        (std::basic_regex<char,std::regex_traits<char> >::flag_type)16);
      if ( *(_WORD *)(((v1 + 80) >> 3) + 0x7FFF8000) )
        __asan_report_store16();
      Json::Value::begin((Json::Value_0 *const)(v1 + 1008));
      while ( 1 )
      {
        *(_WORD *)(((v1 + 112) >> 3) + 0x7FFF8000) = 0;
        if ( *(_WORD *)(((v1 + 112) >> 3) + 0x7FFF8000) )
          __asan_report_store16();
        Json::Value::end((Json::Value_0 *const)(v1 + 1008));
        v11 = Json::ValueIteratorBase::operator!=(
                (const Json::ValueIteratorBase *const)(v1 + 80),
                (const Json::ValueIteratorBase::SelfType *)(v1 + 112));
        *(_WORD *)(((v1 + 112) >> 3) + 0x7FFF8000) = -1800;
        if ( !v11 )
          break;
        *(_DWORD *)(((v1 + 496) >> 3) + 0x7FFF8000) = 0;
        v12 = ((v1 + 1088) >> 3) + 2147450880;
        *(_DWORD *)v12 = 0;
        *(_BYTE *)(v12 + 4) = 0;
        if ( *(char *)(((v1 + 1088) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v1 + 1127) >> 3) + 0x7FFF8000) != 0
          && (char)((v1 + 103) & 7) >= *(_BYTE *)(((v1 + 1127) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v1 + 1088, 40LL);
        }
        Json::ValueIteratorBase::key((Json::ValueIteratorBase *)(v1 + 1088));
        if ( *(char *)(((v1 + 496) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v1 + 527) >> 3) + 0x7FFF8000) != 0
          && (char)((v1 - 32 + 47) & 7) >= *(_BYTE *)(((v1 + 527) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v1 + 496, 32LL);
        }
        Json::Value::asString[abi:cxx11]((Json::String *)(v1 + 496), (Json::Value_0 *)(v1 + 1088));
        Json::Value::~Value((Json::Value_0 *const)(v1 + 1088));
        v13 = ((v1 + 1088) >> 3) + 2147450880;
        *(_DWORD *)v13 = -117901064;
        *(_BYTE *)(v13 + 4) = -8;
        *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = 4;
        if ( *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v1 + 32, v1 + 1088);
        *(_DWORD *)(v1 + 32) = 0;
        if ( common::tools::StringUtils::strToNum<unsigned int>(
               (const std::string *)(v1 + 496),
               (unsigned int *)(v1 + 32),
               1) )
        {
          *(_DWORD *)(((v1 + 560) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v1 + 560) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v1 + 591) >> 3) + 0x7FFF8000) != 0
            && (char)((v1 - 32 + 111) & 7) >= *(_BYTE *)(((v1 + 591) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v1 + 560, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v1 + 560),
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/lua_config_mgr.cpp",
            "loadAllGroupInfoLuaStaticJsonConfig",
            4534);
          v14 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                  (common::milog::MiLogStream *const)(v1 + 560),
                  (const char (*)[56])"failed to transfer key from string to uint32, key_str: ");
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v14, (const std::string *)(v1 + 496));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 560));
          *(_DWORD *)(((v1 + 560) >> 3) + 0x7FFF8000) = -117901064;
        }
        *(_WORD *)(((v1 + 144) >> 3) + 0x7FFF8000) = 0;
        v15 = (Json::Value *)Json::Value::operator[](
                               (Json::Value_0 *const)(v1 + 1008),
                               (const Json::String *)(v1 + 496));
        if ( *(_WORD *)(((v1 + 144) >> 3) + 0x7FFF8000) )
          __asan_report_store16();
        v16 = v15;
        common::tools::perf::make_shared<Json::Value,Json::Value&>(
          (common::tools::perf::allocator<Json::Value,Json::Value> *)(v1 + 144),
          v15);
        *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = 4;
        if ( *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v1 + 48, v16);
        *(_DWORD *)(v1 + 48) = 0;
        *(_WORD *)(((v1 + 176) >> 3) + 0x7FFF8000) = 0;
        v17 = std::__shared_ptr_access<Json::Value,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Json::Value,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 144));
        if ( *(_WORD *)(((v1 + 176) >> 3) + 0x7FFF8000) )
          __asan_report_store16();
        Json::Value::begin((Json::Value_0 *const)v17);
        while ( 1 )
        {
          *(_WORD *)(((v1 + 208) >> 3) + 0x7FFF8000) = 0;
          v18 = std::__shared_ptr_access<Json::Value,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Json::Value,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 144));
          if ( *(_WORD *)(((v1 + 208) >> 3) + 0x7FFF8000) )
            __asan_report_store16();
          Json::Value::end((Json::Value_0 *const)v18);
          v19 = Json::ValueIteratorBase::operator!=(
                  (const Json::ValueIteratorBase *const)(v1 + 176),
                  (const Json::ValueIteratorBase::SelfType *)(v1 + 208));
          *(_WORD *)(((v1 + 208) >> 3) + 0x7FFF8000) = -1800;
          if ( !v19 )
            break;
          *(_DWORD *)(((v1 + 624) >> 3) + 0x7FFF8000) = 0;
          v20 = ((v1 + 1168) >> 3) + 2147450880;
          *(_DWORD *)v20 = 0;
          *(_BYTE *)(v20 + 4) = 0;
          if ( *(char *)(((v1 + 1168) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v1 + 1207) >> 3) + 0x7FFF8000) != 0
            && (char)((v1 - 112 + 39) & 7) >= *(_BYTE *)(((v1 + 1207) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v1 + 1168, 40LL);
          }
          Json::ValueIteratorBase::key((Json::ValueIteratorBase *)(v1 + 1168));
          if ( *(char *)(((v1 + 624) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v1 + 655) >> 3) + 0x7FFF8000) != 0
            && (char)((v1 - 113) & 7) >= *(_BYTE *)(((v1 + 655) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v1 + 624, 32LL);
          }
          Json::Value::asString[abi:cxx11]((Json::String *)(v1 + 624), (Json::Value_0 *)(v1 + 1168));
          Json::Value::~Value((Json::Value_0 *const)(v1 + 1168));
          v21 = ((v1 + 1168) >> 3) + 2147450880;
          *(_DWORD *)v21 = -117901064;
          *(_BYTE *)(v21 + 4) = -8;
          *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = 4;
          if ( *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) <= 3 )
            __asan_report_store4(v1 + 64, v1 + 1168);
          *(_DWORD *)(v1 + 64) = 0;
          if ( !(unsigned int)std::string::compare(v1 + 624, "version")
            || !(unsigned int)std::string::compare(v1 + 624, "lastModVer") )
          {
            *(_DWORD *)(((v1 + 688) >> 3) + 0x7FFF8000) = 0;
            v23 = (__int64)Json::ValueIterator::operator->((Json::ValueIterator *const)(v1 + 176));
            if ( *(char *)(((v1 + 688) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v1 + 719) >> 3) + 0x7FFF8000) != 0
              && (char)((v1 - 80 + 31) & 7) >= *(_BYTE *)(((v1 + 719) >> 3) + 0x7FFF8000) )
            {
              v23 = 32LL;
              __asan_report_store_n(v1 + 688, 32LL);
            }
            Json::Value::asString[abi:cxx11]((Json::String *)(v1 + 688), (Json::Value_0 *)v23);
            *(_DWORD *)(((v1 + 752) >> 3) + 0x7FFF8000) = 0;
            std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::match_results((std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v1 + 752));
            if ( !std::regex_search<std::char_traits<char>,std::allocator<char>,std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string>>>,char,std::regex_traits<char>>(
                    (const std::string *)(v1 + 688),
                    (std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *)(v1 + 752),
                    (const std::basic_regex<char,std::regex_traits<char> > *)(v1 + 432),
                    (std::regex_constants::match_flag_type)0)
              || std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::empty((const std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v1 + 752)) )
            {
              *(_DWORD *)(((v1 + 816) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v1 + 816) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v1 + 847) >> 3) + 0x7FFF8000) != 0
                && (char)((v1 - 32 + 111) & 7) >= *(_BYTE *)(((v1 + 847) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v1 + 816, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v1 + 816),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "loadAllGroupInfoLuaStaticJsonConfig",
                4550);
              v25 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v1 + 816),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v26 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                      v25,
                      (const char (*)[17])"invalid version:");
              v27 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                      v26,
                      (const std::string *)(v1 + 688));
              v28 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                      v27,
                      (const char (*)[14])" in group_id:");
              v29 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v28,
                      (const unsigned int *)(v1 + 32));
              v30 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v29, (const char (*)[7])" file:");
              common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v30, (const std::string *)(v1 + 240));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 816));
              *(_DWORD *)(((v1 + 816) >> 3) + 0x7FFF8000) = -117901064;
            }
            else
            {
              *(_DWORD *)(((v1 + 880) >> 3) + 0x7FFF8000) = 0;
              v31 = std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::operator[](
                      (const std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v1 + 752),
                      0LL);
              if ( *(char *)(((v1 + 880) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v1 + 911) >> 3) + 0x7FFF8000) != 0
                && (char)((v1 - 113) & 7) >= *(_BYTE *)(((v1 + 911) >> 3) + 0x7FFF8000) )
              {
                v31 = (const std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > > *)32;
                __asan_report_store_n(v1 + 880, 32LL);
              }
              std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string>>::operator std::string(
                (std::sub_match<__gnu_cxx::__normal_iterator<char const*,std::string > >::string_type *)(v1 + 880),
                v31);
              v32 = common::tools::StringUtils::strToNum<float>((const std::string *)(v1 + 880), (float *)(v1 + 64), 1) != 0;
              std::string::~string((void *)(v1 + 880));
              *(_DWORD *)(((v1 + 880) >> 3) + 0x7FFF8000) = -117901064;
              if ( v32 )
              {
                *(_DWORD *)(((v1 + 944) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v1 + 944) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v1 + 975) >> 3) + 0x7FFF8000) != 0
                  && (char)((v1 - 80 + 31) & 7) >= *(_BYTE *)(((v1 + 975) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v1 + 944, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v1 + 944),
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/lua_config_mgr.cpp",
                  "loadAllGroupInfoLuaStaticJsonConfig",
                  4556);
                v33 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                        (common::milog::MiLogStream *const)(v1 + 944),
                        (const char (*)[56])"failed to transfer value from string to float, target: ");
                common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                  v33,
                  (const std::string *)(v1 + 688));
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 944));
                *(_DWORD *)(((v1 + 944) >> 3) + 0x7FFF8000) = -117901064;
              }
              v37 = (char *)(v1 + 64);
              v34 = (float *)std::max<float>((const float *)(v1 + 48), (const float *)(v1 + 64));
              v35 = (int *)v34;
              v36 = *(_BYTE *)(((unsigned __int64)v34 >> 3) + 0x7FFF8000);
              LOBYTE(v37) = v36 != 0;
              if ( v36 != 0 && (char)(((unsigned __int8)v34 & 7) + 3) >= v36 )
                __asan_report_load4(v34);
              v38 = *v35;
              if ( *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_store4(v1 + 48, v37);
              *(_DWORD *)(v1 + 48) = v38;
            }
            std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string>>::~match_results((std::match_results<__gnu_cxx::__normal_iterator<char const*,std::string >> *const)(v1 + 752));
            std::string::~string((void *)(v1 + 688));
            *(_DWORD *)(((v1 + 688) >> 3) + 0x7FFF8000) = -117901064;
            *(_DWORD *)(((v1 + 752) >> 3) + 0x7FFF8000) = -117901064;
          }
          std::string::~string((void *)(v1 + 624));
          *(_DWORD *)(((v1 + 624) >> 3) + 0x7FFF8000) = -117901064;
          *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
          Json::ValueIterator::operator++((Json::ValueIterator *const)(v1 + 176));
        }
        *(_WORD *)(((v1 + 176) >> 3) + 0x7FFF8000) = -1800;
        if ( *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v1 + 48);
        v44 = *(_DWORD *)(v1 + 48);
        v39 = (char *)(v1 + 32);
        v40 = std::unordered_map<unsigned int,float>::operator[](
                &this->group_id_2_ver_map,
                (const std::unordered_map<unsigned int,float>::key_type *)(v1 + 32));
        v41 = v40;
        v42 = *(_BYTE *)(((unsigned __int64)v40 >> 3) + 0x7FFF8000);
        if ( v42 != 0 && (char)(((unsigned __int8)v40 & 7) + 3) >= v42 )
        {
          LOBYTE(v39) = v42 != 0;
          __asan_report_store4(v40, v39);
        }
        *v41 = v44;
        std::shared_ptr<Json::Value>::~shared_ptr((std::shared_ptr<Json::Value> *const)(v1 + 144));
        std::string::~string((void *)(v1 + 496));
        *(_DWORD *)(((v1 + 496) >> 3) + 0x7FFF8000) = -117901064;
        *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
        *(_WORD *)(((v1 + 144) >> 3) + 0x7FFF8000) = -1800;
        *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
        Json::ValueIterator::operator++((Json::ValueIterator *const)(v1 + 80));
      }
      *(_WORD *)(((v1 + 80) >> 3) + 0x7FFF8000) = -1800;
      v8 = 0;
      std::basic_regex<char,std::regex_traits<char>>::~basic_regex((std::basic_regex<char,std::regex_traits<char> > *const)(v1 + 432));
    }
    Json::Value::~Value((Json::Value_0 *const)(v1 + 1008));
  }
  std::string::~string((void *)(v1 + 240));
  if ( v46 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8094) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 156) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_5(v1, 1248LL, v46);
  }
  return v8;
};

// Line 4569: range 000000000F325860-000000000F3262B9
int32_t __cdecl LuaConfigMgr::loadGroupsToCheckConfig(LuaConfigMgr *const this)
{
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  HK4EDesignConfig *Config; // rdi
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // r15d
  unsigned __int64 v8; // rax
  unsigned __int64 v9; // rdx
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  char v16[1136]; // [rsp+10h] [rbp-470h] BYREF

  v1 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_5(1088LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "8 32 4 13 group_id:4584 48 32 14 file_path:4570 112 32 9 <unknown> 176 32 17 group_id_str:4583 2"
                        "40 32 9 <unknown> 304 32 9 <unknown> 368 32 9 <unknown> 432 528 15 group_file:4578";
  *(_QWORD *)(v1 + 16) = LuaConfigMgr::loadGroupsToCheckConfig;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = 61956;
  v3[536862722] = -219021312;
  v3[536862723] = 62194;
  v3[536862724] = -219021312;
  v3[536862725] = 62194;
  v3[536862726] = -219021312;
  v3[536862727] = 62194;
  v3[536862728] = -219021312;
  v3[536862729] = 62194;
  v3[536862730] = -219021312;
  v3[536862731] = 62194;
  v3[536862732] = -219021312;
  v3[536862733] = 62194;
  v3[536862750] = -202116109;
  v3[536862751] = -202116109;
  v3[536862752] = -202116109;
  v3[536862753] = -202116109;
  Config = LuaConfigMgr::getConfig(this);
  if ( *(char *)(((v1 + 48) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v1 + 79) >> 3) + 0x7FFF8000) != 0
    && (char)((v1 + 79) & 7) >= *(_BYTE *)(((v1 + 79) >> 3) + 0x7FFF8000) )
  {
    Config = (HK4EDesignConfig *)(v1 + 48);
    __asan_report_store_n(v1 + 48, 32LL);
  }
  std::operator+<char>((std::string *)(v1 + 48), &Config->scene_lua_base_dir, "groups_to_check.txt");
  if ( common::tools::FileUtils::fileExists((const std::string *)(v1 + 48)) )
  {
    if ( *(char *)(((unsigned __int64)&this->is_do_partial_lua_static_check >> 3) + 0x7FFF8000) < 0 )
      __asan_report_store1(&this->is_do_partial_lua_static_check, Config, &this->is_do_partial_lua_static_check);
    this->is_do_partial_lua_static_check = 0;
    if ( *(char *)(((v1 + 112) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v1 + 143) >> 3) + 0x7FFF8000) != 0
      && (char)((v1 - 113) & 7) >= *(_BYTE *)(((v1 + 143) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v1 + 112, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v1 + 112),
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/lua_config_mgr.cpp",
      "loadGroupsToCheckConfig",
      4574);
    v5 = common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
           (common::milog::MiLogStream *const)(v1 + 112),
           (const char (*)[30])"groups_to_check config file: ");
    v6 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v5, (const std::string *)(v1 + 48));
    common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v6, (const char (*)[12])" not found!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 112));
    *(_DWORD *)(((v1 + 112) >> 3) + 0x7FFF8000) = -117901064;
    v7 = 0;
  }
  else
  {
    if ( *(char *)(((unsigned __int64)&this->is_do_partial_lua_static_check >> 3) + 0x7FFF8000) < 0 )
      __asan_report_store1(&this->is_do_partial_lua_static_check, Config, &this->is_do_partial_lua_static_check);
    this->is_do_partial_lua_static_check = 1;
    std::fstream::basic_fstream(v1 + 432);
    std::fstream::open(v1 + 432, v1 + 48, 8LL);
    if ( (unsigned __int8)std::fstream::is_open(v1 + 432) )
    {
      std::set<unsigned int>::clear(&this->partial_group_id_set);
      std::string::basic_string(v1 + 176);
      if ( *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v1 + 32, v1 + 48);
      *(_DWORD *)(v1 + 32) = 0;
      while ( 1 )
      {
        v8 = std::getline<char,std::char_traits<char>,std::allocator<char>>(v1 + 432, v1 + 176);
        if ( *(_BYTE *)((v8 >> 3) + 0x7FFF8000) )
          v8 = __asan_report_load8(v8);
        v9 = *(_QWORD *)v8 - 24LL;
        if ( *(_BYTE *)((v9 >> 3) + 0x7FFF8000) )
          v8 = __asan_report_load8(*(_QWORD *)v8 - 24LL);
        if ( !(unsigned __int8)std::ios::operator bool(*(_QWORD *)v9 + v8) )
          break;
        if ( common::tools::StringUtils::strToNum<unsigned int>(
               (const std::string *)(v1 + 176),
               (unsigned int *)(v1 + 32),
               1) )
        {
          *(_DWORD *)(((v1 + 240) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v1 + 240) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v1 + 271) >> 3) + 0x7FFF8000) != 0
            && (char)((v1 - 16 + 31) & 7) >= *(_BYTE *)(((v1 + 271) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v1 + 240, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v1 + 240),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadGroupsToCheckConfig",
            4589);
          v10 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                  (common::milog::MiLogStream *const)(v1 + 240),
                  (const char (*)[31])"strToNum failed, group_id_str:");
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v10, (const std::string *)(v1 + 176));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 240));
          *(_DWORD *)(((v1 + 240) >> 3) + 0x7FFF8000) = -117901064;
        }
        else
        {
          std::set<unsigned int>::insert(
            &this->partial_group_id_set,
            (const std::set<unsigned int>::value_type *)(v1 + 32));
        }
      }
      std::fstream::close(v1 + 432);
      std::string::~string((void *)(v1 + 176));
      *(_DWORD *)(((v1 + 176) >> 3) + 0x7FFF8000) = -117901064;
      *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
      *(_DWORD *)(((v1 + 368) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v1 + 368) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v1 + 399) >> 3) + 0x7FFF8000) != 0
        && (char)((v1 - 113) & 7) >= *(_BYTE *)(((v1 + 399) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v1 + 368, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v1 + 368),
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/lua_config_mgr.cpp",
        "loadGroupsToCheckConfig",
        4601);
      v13 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
              (common::milog::MiLogStream *const)(v1 + 368),
              (const char (*)[23])"partial_group_id_set: ");
      common::milog::MiLogStream::operator<<<unsigned int>(v13, &this->partial_group_id_set);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 368));
      *(_DWORD *)(((v1 + 368) >> 3) + 0x7FFF8000) = -117901064;
      v7 = 0;
    }
    else
    {
      if ( *(char *)(((v1 + 304) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v1 + 335) >> 3) + 0x7FFF8000) != 0
        && (char)((v1 + 79) & 7) >= *(_BYTE *)(((v1 + 335) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v1 + 304, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v1 + 304),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/lua_config_mgr.cpp",
        "loadGroupsToCheckConfig",
        4598);
      v11 = common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
              (common::milog::MiLogStream *const)(v1 + 304),
              (const char (*)[30])"groups_to_check config file: ");
      v12 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v11, (const std::string *)(v1 + 48));
      common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(v12, (const char (*)[17])" failed to open!");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v1 + 304));
      *(_DWORD *)(((v1 + 304) >> 3) + 0x7FFF8000) = -117901064;
      v7 = -1;
    }
    std::fstream::~fstream(v1 + 432);
  }
  std::string::~string((void *)(v1 + 48));
  if ( v16 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8078) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8080) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_5(v1, 1088LL, v16);
  }
  return v7;
};

// Line 4607: range 000000000F3262BA-000000000F327DBE
int32_t __cdecl LuaConfigMgr::loadAllDummyPointsScript(LuaConfigMgr *const this, HK4EDesignConfig *config)
{
  int32_t v2; // r14d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  char *v6; // rsi
  unsigned int first; // ecx
  char v8; // al
  unsigned int v9; // esi
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  int v12; // r15d
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r15d
  std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // r15
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  _BOOL4 v19; // r15d
  unsigned __int64 v20; // rax
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  _BOOL4 v23; // r15d
  std::unordered_map<unsigned int,SceneScriptConfig> *p_scene_script_config_map; // rdx
  std::unordered_map<unsigned int,SceneScriptConfig> *v25; // rdx
  char *v26; // rsi
  bool v27; // al
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rdx
  int v32; // eax
  bool v33; // r15
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rax
  int v38; // edx
  int v39; // r15d
  int v40; // r15d
  int v41; // eax
  unsigned __int64 v42; // rdx
  int v43; // eax
  Vector3 *v45; // [rsp+8h] [rbp-5D8h]
  int32_t ret; // [rsp+24h] [rbp-5BCh]
  data::SceneExcelConfigMap *__for_range; // [rsp+30h] [rbp-5B0h]
  std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false>::reference p; // [rsp+38h] [rbp-5A8h]
  SceneScriptConfig *scene_script_config; // [rsp+40h] [rbp-5A0h]
  std::map<std::string,luabind::adl::object> *__for_range_0; // [rsp+48h] [rbp-598h]
  std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> >::reference v52; // [rsp+50h] [rbp-590h]
  std::tuple_element<0,std::pair<const std::string,luabind::adl::object> >::type *id_str; // [rsp+58h] [rbp-588h]
  std::tuple_element<1,const std::pair<const std::string,luabind::adl::object> >::type *lua_obj; // [rsp+60h] [rbp-580h]
  DummyPointScriptConfig *dummy_point_config; // [rsp+68h] [rbp-578h]
  char v56[1392]; // [rsp+70h] [rbp-570h] BYREF

  v3 = (unsigned __int64)v56;
  v45 = (Vector3 *)v56;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_5(1344LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "27 48 1 9 <unknown> 64 1 9 <unknown> 80 4 13 scene_id:4613 96 4 7 id:4657 112 8 16 __for_begin:4"
                        "611 144 8 14 __for_end:4611 176 8 9 iter:4647 208 8 9 <unknown> 240 8 16 __for_begin:4655 272 8 "
                        "14 __for_end:4655 304 16 21 scene_script_ptr:4624 336 16 32 new_dummy_points_config_obj:4632 368"
                        " 32 14 scene_dir:4614 432 32 22 scene_script_name:4615 496 32 9 <unknown> 560 32 16 script_path:"
                        "4618 624 32 9 <unknown> 688 32 9 <unknown> 752 32 9 <unknown> 816 32 9 <unknown> 880 32 9 <unkno"
                        "wn> 944 32 9 <unknown> 1008 32 9 <unknown> 1072 32 9 <unknown> 1136 32 9 <unknown> 1200 32 9 <un"
                        "known> 1264 48 16 lua_obj_map:4640";
  *(_QWORD *)(v3 + 16) = LuaConfigMgr::loadAllDummyPointsScript;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234556927;
  v5[536862723] = 61956;
  v5[536862723] = -234881024;
  v5[536862724] = 62194;
  v5[536862724] = -234881024;
  v5[536862725] = 62194;
  v5[536862725] = -234881024;
  v5[536862726] = 62194;
  v5[536862726] = -234881024;
  v5[536862727] = 62194;
  v5[536862727] = -234881024;
  v5[536862728] = 62194;
  v5[536862728] = -234881024;
  v5[536862729] = 62194;
  v5[536862730] = 62194;
  v5[536862731] = 62194;
  v5[536862732] = -219021312;
  v5[536862733] = 62194;
  v5[536862734] = -219021312;
  v5[536862735] = 62194;
  v5[536862736] = -219021312;
  v5[536862737] = 62194;
  v5[536862738] = -219021312;
  v5[536862739] = 62194;
  v5[536862740] = -219021312;
  v5[536862741] = 62194;
  v5[536862742] = -219021312;
  v5[536862743] = 62194;
  v5[536862744] = -219021312;
  v5[536862745] = 62194;
  v5[536862746] = -219021312;
  v5[536862747] = 62194;
  v5[536862748] = -219021312;
  v5[536862749] = 62194;
  v5[536862750] = -219021312;
  v5[536862751] = 62194;
  v5[536862752] = -219021312;
  v5[536862753] = 62194;
  v5[536862754] = -219021312;
  v5[536862755] = 62194;
  v5[536862756] = -219021312;
  v5[536862757] = 62194;
  v5[536862758] = -219021312;
  v5[536862759] = 62194;
  v5[536862761] = -202116109;
  ret = 0;
  __for_range = &config->txt_config_mgr.scene_config_mgr.scene_excel_config_map;
  if ( *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 112, config);
  *(std::unordered_map<unsigned int,data::SceneExcelConfig>::iterator *)(v3 + 112) = std::unordered_map<unsigned int,data::SceneExcelConfig>::begin(__for_range);
  if ( *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v3 + 144, config);
  *(std::unordered_map<unsigned int,data::SceneExcelConfig>::iterator *)(v3 + 144) = std::unordered_map<unsigned int,data::SceneExcelConfig>::end(__for_range);
  while ( 1 )
  {
    v6 = (char *)(v3 + 144);
    if ( !std::__detail::operator!=<std::pair<unsigned int const,data::SceneExcelConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::SceneExcelConfig>,false> *)(v3 + 112),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::SceneExcelConfig>,false> *)(v3 + 144)) )
      break;
    p = std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false> *const)(v3 + 112));
    *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 4;
    if ( *(_BYTE *)(((unsigned __int64)p >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)p >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(p);
    }
    first = p->first;
    v8 = *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000);
    if ( v8 != 0 && v8 <= 3 )
    {
      LOBYTE(v6) = v8 != 0;
      __asan_report_store4(v3 + 80, v6);
    }
    *(_DWORD *)(v3 + 80) = first;
    *(_DWORD *)(((v3 + 368) >> 3) + 0x7FFF8000) = 0;
    std::string::basic_string(v3 + 368, &config->dummy_points_base_dir);
    *(_DWORD *)(((v3 + 432) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_load4(v3 + 80);
    v9 = *(_DWORD *)(v3 + 80);
    if ( *(char *)(((v3 + 496) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 527) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 16 + 31) & 7) >= *(_BYTE *)(((v3 + 527) >> 3) + 0x7FFF8000) )
    {
      v9 = 32;
      __asan_report_store_n(v3 + 496, 32LL);
    }
    common::tools::StringUtils::numToStr<unsigned int>((std::string *)(v3 + 496), v9);
    if ( *(char *)(((v3 + 432) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 463) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 49) & 7) >= *(_BYTE *)(((v3 + 463) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 432, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 432), "scene", (std::string *)(v3 + 496));
    std::string::~string((void *)(v3 + 496));
    *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = -117901064;
    *(_DWORD *)(((v3 + 560) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v3 + 624) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v3 + 624) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 655) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 113) & 7) >= *(_BYTE *)(((v3 + 655) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 624, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 624), (const std::string *)(v3 + 368), (const std::string *)(v3 + 432));
    if ( *(char *)(((v3 + 560) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 591) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 79) & 7) >= *(_BYTE *)(((v3 + 591) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v3 + 560, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 560), (std::string *)(v3 + 624), "_dummy_points.lua");
    std::string::~string((void *)(v3 + 624));
    *(_DWORD *)(((v3 + 624) >> 3) + 0x7FFF8000) = -117901064;
    if ( common::tools::FileUtils::fileExists((const std::string *)(v3 + 560)) )
    {
      *(_DWORD *)(((v3 + 688) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 688) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 719) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 49) & 7) >= *(_BYTE *)(((v3 + 719) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 688, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 688),
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/lua_config_mgr.cpp",
        "loadAllDummyPointsScript",
        4621);
      v10 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(
              (common::milog::MiLogStream *const)(v3 + 688),
              (const char (*)[10])"scene_id:");
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v3 + 80));
      common::milog::MiLogStream::operator<<<char [70],(char *[70])0>(v11, (const char (*)[70])byte_1A53E0C0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 688));
      *(_DWORD *)(((v3 + 688) >> 3) + 0x7FFF8000) = -117901064;
      v12 = 0;
    }
    else
    {
      *(_WORD *)(((v3 + 304) >> 3) + 0x7FFF8000) = 0;
      if ( *(_WORD *)(((v3 + 304) >> 3) + 0x7FFF8000) )
        __asan_report_store16();
      LuaScriptMgr::createFromFilePath((const std::string *)(v3 + 304), (const LuaConfigMgr *)(v3 + 560));
      if ( std::operator==<LuaScript>(0LL, (const std::shared_ptr<LuaScript> *)(v3 + 304)) )
      {
        *(_DWORD *)(((v3 + 752) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v3 + 752) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v3 + 783) >> 3) + 0x7FFF8000) != 0
          && (char)((v3 - 16 + 31) & 7) >= *(_BYTE *)(((v3 + 783) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v3 + 752, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 752),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/lua_config_mgr.cpp",
          "loadAllDummyPointsScript",
          4627);
        v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v3 + 752),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v14 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                v13,
                (const char (*)[53])"LuaScriptMgr::createFromFilePath fails, script_path:");
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v14, (const std::string *)(v3 + 560));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 752));
        *(_DWORD *)(((v3 + 752) >> 3) + 0x7FFF8000) = -117901064;
        ret = -1;
        v15 = 0;
      }
      else
      {
        *(_WORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
        luabind::adl::object::object((luabind::adl::object *const)(v3 + 336));
        v16 = std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LuaScript,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 304));
        *(_DWORD *)(((v3 + 816) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v3 + 48);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v3 + 816),
          "dummy_points",
          (const std::allocator<char> *)(v3 + 48));
        LOBYTE(v16) = LuaScript::getGlobalVariable(
                        v16,
                        (const std::string *)(v3 + 816),
                        (luabind::adl::object *)(v3 + 336)) != 0;
        std::string::~string((void *)(v3 + 816));
        *(_DWORD *)(((v3 + 816) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v3 + 48);
        *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
        if ( (_BYTE)v16 )
        {
          *(_DWORD *)(((v3 + 880) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 880) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 911) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 113) & 7) >= *(_BYTE *)(((v3 + 911) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 880, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 880),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/lua_config_mgr.cpp",
            "loadAllDummyPointsScript",
            4636);
          v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v3 + 880),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v18 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                  v17,
                  (const std::string *)(v3 + 560));
          common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(v18, (const char (*)[69])byte_1A5405E0);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 880));
          *(_DWORD *)(((v3 + 880) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v19 = 0;
        }
        else
        {
          v20 = ((v3 + 1264) >> 3) + 2147450880;
          *(_DWORD *)v20 = 0;
          *(_WORD *)(v20 + 4) = 0;
          std::map<std::string,luabind::adl::object>::map((std::map<std::string,luabind::adl::object> *const)(v3 + 1264));
          if ( ScriptUtil::getTableValueAsMap<std::string,luabind::adl::object>(
                 &ScriptUtil::no_exception_instance,
                 (const luabind::adl::object *)(v3 + 336),
                 (std::map<std::string,luabind::adl::object> *)(v3 + 1264)) )
          {
            *(_DWORD *)(((v3 + 944) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 944) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 975) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 49) & 7) >= *(_BYTE *)(((v3 + 975) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 944, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 944),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/lua_config_mgr.cpp",
              "loadAllDummyPointsScript",
              4643);
            v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 944),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                    v21,
                    (const std::string *)(v3 + 560));
            common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(v22, (const char (*)[69])byte_1A5405E0);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 944));
            *(_DWORD *)(((v3 + 944) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            v23 = 0;
          }
          else
          {
            *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = 0;
            p_scene_script_config_map = &this->scene_script_config_map;
            if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v3 + 176, v3 + 336);
            *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v3 + 176) = std::unordered_map<unsigned int,SceneScriptConfig>::find(
                                                                                            p_scene_script_config_map,
                                                                                            (const std::unordered_map<unsigned int,SceneScriptConfig>::key_type *)(v3 + 80));
            *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
            v25 = &this->scene_script_config_map;
            if ( *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) )
              __asan_report_store8(v3 + 208, v3 + 80);
            *(std::unordered_map<unsigned int,SceneScriptConfig>::iterator *)(v3 + 208) = std::unordered_map<unsigned int,SceneScriptConfig>::end(v25);
            v26 = (char *)(v3 + 208);
            v27 = std::__detail::operator==<std::pair<unsigned int const,SceneScriptConfig>,false>(
                    (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v3 + 176),
                    (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,SceneScriptConfig>,false> *)(v3 + 208));
            *(_BYTE *)(((v3 + 208) >> 3) + 0x7FFF8000) = -8;
            if ( v27 )
            {
              *(_DWORD *)(((v3 + 1008) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 1008) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 1039) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 16 + 31) & 7) >= *(_BYTE *)(((v3 + 1039) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 1008, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 1008),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/lua_config_mgr.cpp",
                "loadAllDummyPointsScript",
                4650);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 1008),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                      v28,
                      (const char (*)[33])"cannot find scene script config:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 80));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1008));
              *(_DWORD *)(((v3 + 1008) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v23 = 0;
            }
            else
            {
              scene_script_config = &std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,SceneScriptConfig>,false,false> *const)(v3 + 176))->second;
              __for_range_0 = (std::map<std::string,luabind::adl::object> *)(v3 + 1264);
              *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 240, v26);
              *(std::map<std::string,luabind::adl::object>::iterator *)(v3 + 240) = std::map<std::string,luabind::adl::object>::begin(__for_range_0);
              *(_BYTE *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 272) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 272, v26);
              *(std::map<std::string,luabind::adl::object>::iterator *)(v3 + 272) = std::map<std::string,luabind::adl::object>::end(__for_range_0);
              while ( std::operator!=(
                        (const std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> >::_Self *)(v3 + 240),
                        (const std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> >::_Self *)(v3 + 272)) )
              {
                v52 = std::_Rb_tree_iterator<std::pair<std::string const,luabind::adl::object>>::operator*((const std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> > *const)(v3 + 240));
                id_str = std::get<0ul,std::string const,luabind::adl::object>(v52);
                lua_obj = (std::tuple_element<1,const std::pair<const std::string,luabind::adl::object> >::type *)std::get<1ul,std::string const,luabind::adl::object>(v52);
                *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = 4;
                if ( *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) <= 3 )
                  __asan_report_store4(v3 + 96, v3 + 272);
                *(_DWORD *)(v3 + 96) = 0;
                if ( common::tools::StringUtils::strToNum<unsigned int>(id_str, (unsigned int *)(v3 + 96), 1) )
                {
                  *(_DWORD *)(((v3 + 1072) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v3 + 1072) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v3 + 1103) >> 3) + 0x7FFF8000) != 0
                    && (char)((v3 + 79) & 7) >= *(_BYTE *)(((v3 + 1103) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v3 + 1072, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v3 + 1072),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/lua_config_mgr.cpp",
                    "loadAllDummyPointsScript",
                    4660);
                  v30 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v3 + 1072),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  v31 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                          v30,
                          (const char (*)[49])"dummy_points id cannot cast to uint32_t, id_str:");
                  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v31, id_str);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1072));
                  *(_DWORD *)(((v3 + 1072) >> 3) + 0x7FFF8000) = -117901064;
                  v2 = -1;
                  v32 = 0;
                }
                else
                {
                  dummy_point_config = std::unordered_map<unsigned int,DummyPointScriptConfig>::operator[](
                                         &scene_script_config->new_dummy_point_config_map,
                                         (const std::unordered_map<unsigned int,DummyPointScriptConfig>::key_type *)(v3 + 96));
                  *(_DWORD *)(((v3 + 1136) >> 3) + 0x7FFF8000) = 0;
                  *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<char>::allocator(v3 + 64);
                  std::string::basic_string<std::allocator<char>>(
                    (std::string *const)(v3 + 1136),
                    off_1A536440,
                    (const std::allocator<char> *)(v3 + 64));
                  v33 = ScriptUtil::getTableValue<Vector3,char const(&)[4],Vector3&>(
                          &ScriptUtil::no_exception_instance,
                          lua_obj,
                          (const std::string *)(v3 + 1136),
                          &dummy_point_config->pos,
                          (const char (*)[4])off_1A536400,
                          &dummy_point_config->rot,
                          (const char (*)[4])&dummy_point_config->rot,
                          v45) != 0;
                  std::string::~string((void *)(v3 + 1136));
                  *(_DWORD *)(((v3 + 1136) >> 3) + 0x7FFF8000) = -117901064;
                  std::allocator<char>::~allocator(v3 + 64);
                  *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
                  if ( v33 )
                  {
                    *(_DWORD *)(((v3 + 1200) >> 3) + 0x7FFF8000) = 0;
                    if ( *(char *)(((v3 + 1200) >> 3) + 0x7FFF8000) < 0
                      || *(_BYTE *)(((v3 + 1231) >> 3) + 0x7FFF8000) != 0
                      && (char)((v3 - 49) & 7) >= *(_BYTE *)(((v3 + 1231) >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_store_n(v3 + 1200, 32LL);
                    }
                    common::milog::MiLogStream::create(
                      (common::milog::MiLogStream *)(v3 + 1200),
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/lua_config_mgr.cpp",
                      "loadAllDummyPointsScript",
                      4666);
                    v34 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                            (common::milog::MiLogStream *const)(v3 + 1200),
                            (const char (*)[16])"[CONFIG_ERROR] ");
                    v35 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                            v34,
                            (const char (*)[53])"SCRIPT_UTIL.getTableValue dummy_point_obj fails, id:");
                    v36 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v35,
                            (const unsigned int *)(v3 + 96));
                    v37 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(
                            v36,
                            (const char (*)[7])" path:");
                    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                      v37,
                      (const std::string *)(v3 + 560));
                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 1200));
                    *(_DWORD *)(((v3 + 1200) >> 3) + 0x7FFF8000) = -117901064;
                    v2 = -1;
                    v32 = 0;
                  }
                  else
                  {
                    v32 = 1;
                  }
                }
                *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = -8;
                if ( v32 != 1 )
                {
                  v38 = 0;
                  goto LABEL_71;
                }
                std::_Rb_tree_iterator<std::pair<std::string const,luabind::adl::object>>::operator++((std::_Rb_tree_iterator<std::pair<const std::string,luabind::adl::object> > *const)(v3 + 240));
              }
              v38 = 1;
LABEL_71:
              *(_BYTE *)(((v3 + 240) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v3 + 272) >> 3) + 0x7FFF8000) = -8;
              v23 = v38 == 1;
            }
          }
          std::map<std::string,luabind::adl::object>::~map((std::map<std::string,luabind::adl::object> *const)(v3 + 1264));
          v19 = v23;
        }
        luabind::adl::object::~object((luabind::adl::object *const)(v3 + 336));
        if ( v19 )
          v15 = 2;
        else
          v15 = 1;
      }
      std::shared_ptr<LuaScript>::~shared_ptr((std::shared_ptr<LuaScript> *const)(v3 + 304));
      if ( v15 )
      {
        if ( v15 == 2 )
          v12 = 2;
        else
          v12 = 1;
      }
      else
      {
        v12 = 0;
      }
    }
    std::string::~string((void *)(v3 + 560));
    if ( v12 )
    {
      if ( v12 == 2 )
        v39 = 2;
      else
        v39 = 1;
    }
    else
    {
      v39 = 0;
    }
    std::string::~string((void *)(v3 + 432));
    if ( v39 )
    {
      if ( v39 == 2 )
        v40 = 2;
      else
        v40 = 1;
    }
    else
    {
      v40 = 0;
    }
    std::string::~string((void *)(v3 + 368));
    if ( v40 )
    {
      if ( v40 == 2 )
        v41 = 2;
      else
        v41 = 1;
    }
    else
    {
      v41 = 0;
    }
    *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
    *(_DWORD *)(((v3 + 368) >> 3) + 0x7FFF8000) = -117901064;
    *(_DWORD *)(((v3 + 432) >> 3) + 0x7FFF8000) = -117901064;
    *(_DWORD *)(((v3 + 560) >> 3) + 0x7FFF8000) = -117901064;
    *(_WORD *)(((v3 + 304) >> 3) + 0x7FFF8000) = -1800;
    *(_WORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -1800;
    v42 = ((v3 + 1264) >> 3) + 2147450880;
    *(_DWORD *)v42 = -117901064;
    *(_WORD *)(v42 + 4) = -1800;
    *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = -8;
    if ( v41 && v41 != 2 )
    {
      v43 = 0;
      goto LABEL_101;
    }
    std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,data::SceneExcelConfig>,false,false> *const)(v3 + 112));
  }
  v43 = 1;
LABEL_101:
  if ( v43 == 1 )
    v2 = ret;
  if ( v45 == (Vector3 *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF80A0) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 168) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_5(v3, 1344LL, v45);
  }
  return v2;
};
