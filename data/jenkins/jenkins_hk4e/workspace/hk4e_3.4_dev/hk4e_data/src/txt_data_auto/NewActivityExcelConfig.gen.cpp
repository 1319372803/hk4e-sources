// File: /data/jenkins/jenkins_hk4e/workspace/hk4e_3.4_dev/hk4e_data/src/txt_data_auto/NewActivityExcelConfig.gen.cpp

// Line 12: range 000000000EE87485-000000000EE877F8
const char *__fastcall data::enumValToStr(data::NewActivityType e, __int64 a2)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // al
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdi
  int v8; // ecx
  char v9; // al
  const char *result; // rax
  std::_Rb_tree_const_iterator<std::pair<const data::NewActivityType,std::pair<std::string,std::string > > >::pointer v11; // rax
  const std::map<data::NewActivityType,std::pair<std::string,std::string >> *map; // [rsp+18h] [rbp-E8h]
  char v13[224]; // [rsp+20h] [rbp-E0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 9 <unknown> 48 4 4 e:11 64 8 7 iter:14 96 8 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumValToStr;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862725] = -202116109;
  *(_DWORD *)(v2 + 48) = e;
  map = data::getNewActivityTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, a2);
  *(std::map<data::NewActivityType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityType,std::pair<std::string,std::string>>::find(map, (const std::map<data::NewActivityType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::map<data::NewActivityType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityType,std::pair<std::string,std::string>>::end(map);
  v5 = std::operator==(
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumValToStr",
      17);
    v6 = "invalid e:";
    v7 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[11])"invalid e:");
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = 4;
    v8 = *(_DWORD *)(v2 + 48);
    v9 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
    if ( v9 != 0 && v9 <= 3 )
    {
      v7 = (common::milog::MiLogStream *)(v2 + 32);
      LOBYTE(v6) = v9 != 0;
      __asan_report_store4(v2 + 32, v6);
    }
    *(_DWORD *)(v2 + 32) = v8;
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 32));
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = "INVALID_NewActivityType";
  }
  else
  {
    v11 = std::_Rb_tree_const_iterator<std::pair<data::NewActivityType const,std::pair<std::string,std::string>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityType,std::pair<std::string,std::string > > > *const)(v2 + 64));
    result = (const char *)std::string::c_str(&v11->second.second);
  }
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 24: range 000000000EE877F9-000000000EE87DB1
__int64 __fastcall data::enumNameToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  const char *v6; // rsi
  char *v7; // rsi
  bool v8; // al
  common::milog::MiLogStream *v9; // rax
  std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityType>,false,true>::pointer v10; // rax
  data::NewActivityType second; // ecx
  char v12; // dl
  const std::unordered_map<std::string,data::NewActivityType> *m; // [rsp+18h] [rbp-188h]
  char v15[384]; // [rsp+20h] [rbp-180h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "7 48 1 9 <unknown> 64 8 5 it:33 96 8 9 <unknown> 128 8 4 s:23 160 32 9 <unknown> 224 32 9 <unkno"
                        "wn> 288 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumNameToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -202116109;
  *(_QWORD *)(v2 + 128) = s;
  if ( *(_QWORD *)(v2 + 128) )
  {
    m = data::getNewActivityTypeNameMap[abi:cxx11]();
    std::allocator<char>::allocator(v2 + 48);
    v6 = *(const char **)(v2 + 128);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      v6,
      (const std::allocator<char> *)(v2 + 48));
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 64, v6);
    *(std::unordered_map<std::string,data::NewActivityType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityType>::find(
                                                                                            m,
                                                                                            (const std::unordered_map<std::string,data::NewActivityType>::key_type *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 96, v2 + 224);
    *(std::unordered_map<std::string,data::NewActivityType>::const_iterator *)(v2 + 96) = std::unordered_map<std::string,data::NewActivityType>::end(m);
    v7 = (char *)(v2 + 96);
    v8 = std::__detail::operator==<std::pair<std::string const,data::NewActivityType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityType>,true> *)(v2 + 64),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityType>,true> *)(v2 + 96));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumNameToVal",
        36);
      v9 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v9, (const char *const *)(v2 + 128));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v10 = std::__detail::_Node_const_iterator<std::pair<std::string const,data::NewActivityType>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityType>,false,true> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v10->second);
      }
      second = v10->second;
      v12 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v12 != 0 && (char)((e & 7) + 3) >= v12 )
      {
        LOBYTE(v7) = v12 != 0;
        __asan_report_store4(e, v7);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumNameToVal",
      27);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 160),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = 0xFFFFFFFFLL;
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 45: range 000000000EE87DB2-000000000EE8BA0E
__int64 __fastcall data::enumStrToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int v5; // eax
  std::pair<const std::string,data::NewActivityType> *i; // r14
  const char *v7; // rsi
  char *v8; // rsi
  bool v9; // al
  common::milog::MiLogStream *v10; // rax
  std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityType>,false,true>::pointer v11; // rax
  data::NewActivityType second; // ecx
  char v13; // dl
  unsigned int v14; // ebx
  char v17[5616]; // [rsp+20h] [rbp-15F0h] BYREF

  v2 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_7(5568LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "101 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 4 9 <unknown> 128 4 "
                        "9 <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 4 9 <unknown> 208 4 9 <unk"
                        "nown> 224 4 9 <unknown> 240 4 9 <unknown> 256 4 9 <unknown> 272 4 9 <unknown> 288 4 9 <unknown> "
                        "304 4 9 <unknown> 320 4 9 <unknown> 336 4 9 <unknown> 352 4 9 <unknown> 368 4 9 <unknown> 384 4 "
                        "9 <unknown> 400 4 9 <unknown> 416 4 9 <unknown> 432 4 9 <unknown> 448 4 9 <unknown> 464 4 9 <unk"
                        "nown> 480 4 9 <unknown> 496 4 9 <unknown> 512 4 9 <unknown> 528 4 9 <unknown> 544 4 9 <unknown> "
                        "560 4 9 <unknown> 576 4 9 <unknown> 592 4 9 <unknown> 608 4 9 <unknown> 624 4 9 <unknown> 640 4 "
                        "9 <unknown> 656 4 9 <unknown> 672 4 9 <unknown> 688 4 9 <unknown> 704 4 9 <unknown> 720 4 9 <unk"
                        "nown> 736 4 9 <unknown> 752 4 9 <unknown> 768 4 9 <unknown> 784 4 9 <unknown> 800 4 9 <unknown> "
                        "816 4 9 <unknown> 832 4 9 <unknown> 848 4 9 <unknown> 864 4 9 <unknown> 880 4 9 <unknown> 896 4 "
                        "9 <unknown> 912 4 9 <unknown> 928 4 9 <unknown> 944 4 9 <unknown> 960 4 9 <unknown> 976 4 9 <unk"
                        "nown> 992 4 9 <unknown> 1008 4 9 <unknown> 1024 4 9 <unknown> 1040 4 9 <unknown> 1056 4 9 <unkno"
                        "wn> 1072 4 9 <unknown> 1088 4 9 <unknown> 1104 4 9 <unknown> 1120 4 9 <unknown> 1136 4 9 <unknow"
                        "n> 1152 4 9 <unknown> 1168 4 9 <unknown> 1184 4 9 <unknown> 1200 4 9 <unknown> 1216 4 9 <unknown"
                        "> 1232 4 9 <unknown> 1248 4 9 <unknown> 1264 4 9 <unknown> 1280 4 9 <unknown> 1296 4 9 <unknown>"
                        " 1312 4 9 <unknown> 1328 4 9 <unknown> 1344 4 9 <unknown> 1360 4 9 <unknown> 1376 4 9 <unknown> "
                        "1392 4 9 <unknown> 1408 4 9 <unknown> 1424 4 9 <unknown> 1440 4 9 <unknown> 1456 4 9 <unknown> 1"
                        "472 4 9 <unknown> 1488 4 9 <unknown> 1504 4 9 <unknown> 1520 4 9 <unknown> 1536 4 9 <unknown> 15"
                        "52 8 6 it:146 1584 8 9 <unknown> 1616 8 4 s:44 1648 32 9 <unknown> 1712 32 9 <unknown> 1776 32 9"
                        " <unknown> 1840 3600 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumStrToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234556927;
  v4[536862724] = -234556924;
  v4[536862725] = -234556924;
  v4[536862726] = -234556924;
  v4[536862727] = -234556924;
  v4[536862728] = -234556924;
  v4[536862729] = -234556924;
  v4[536862730] = -234556924;
  v4[536862731] = -234556924;
  v4[536862732] = -234556924;
  v4[536862733] = -234556924;
  v4[536862734] = -234556924;
  v4[536862735] = -234556924;
  v4[536862736] = -234556924;
  v4[536862737] = -234556924;
  v4[536862738] = -234556924;
  v4[536862739] = -234556924;
  v4[536862740] = -234556924;
  v4[536862741] = -234556924;
  v4[536862742] = -234556924;
  v4[536862743] = -234556924;
  v4[536862744] = -234556924;
  v4[536862745] = -234556924;
  v4[536862746] = -234556924;
  v4[536862747] = -234556924;
  v4[536862748] = -234556924;
  v4[536862749] = -234556924;
  v4[536862750] = -234556924;
  v4[536862751] = -234556924;
  v4[536862752] = -234556924;
  v4[536862753] = -234556924;
  v4[536862754] = -234556924;
  v4[536862755] = -234556924;
  v4[536862756] = -234556924;
  v4[536862757] = -234556924;
  v4[536862758] = -234556924;
  v4[536862759] = -234556924;
  v4[536862760] = -234556924;
  v4[536862761] = -234556924;
  v4[536862762] = -234556924;
  v4[536862763] = -234556924;
  v4[536862764] = -234556924;
  v4[536862765] = -234556924;
  v4[536862766] = -234556924;
  v4[536862767] = -234556924;
  v4[536862768] = 61956;
  v4[536862768] = -234881024;
  v4[536862769] = 62194;
  v4[536862769] = -234881024;
  v4[536862770] = 62194;
  v4[536862770] = -234881024;
  v4[536862771] = 62194;
  v4[536862772] = -219021312;
  v4[536862773] = 62194;
  v4[536862774] = -219021312;
  v4[536862775] = 62194;
  v4[536862776] = -219021312;
  v4[536862777] = 62194;
  v4[536862890] = -202116109;
  v4[536862891] = -202116109;
  v4[536862892] = -202116109;
  v4[536862893] = -202116109;
  *(_QWORD *)(v2 + 1616) = s;
  if ( *(_QWORD *)(v2 + 1616) )
  {
    if ( !(_BYTE)`guard variable for'data::enumStrToVal(char const*,data::NewActivityType &)::m
      && __cxa_guard_acquire(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityType &)::m) )
    {
      if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 112, e);
      *(_DWORD *)(v2 + 112) = 1;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 1840),
        (const char (*)[10])byte_1A43C6C0,
        (data::NewActivityType *)(v2 + 112));
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 128, byte_1A43C6C0);
      *(_DWORD *)(v2 + 128) = 2;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 1880),
        (const char (*)[10])byte_1A43C700,
        (data::NewActivityType *)(v2 + 128));
      if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 144, byte_1A43C700);
      *(_DWORD *)(v2 + 144) = 3;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 1920),
        (const char (*)[13])byte_1A43C740,
        (data::NewActivityType *)(v2 + 144));
      if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 160, byte_1A43C740);
      *(_DWORD *)(v2 + 160) = 4;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 1960),
        (const char (*)[13])byte_1A43C780,
        (data::NewActivityType *)(v2 + 160));
      if ( *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 176, byte_1A43C780);
      *(_DWORD *)(v2 + 176) = 5;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[7],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2000),
        (const char (*)[7])byte_1A43C7C0,
        (data::NewActivityType *)(v2 + 176));
      if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 192, byte_1A43C7C0);
      *(_DWORD *)(v2 + 192) = 6;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2040),
        (const char (*)[13])byte_1A43C800,
        (data::NewActivityType *)(v2 + 192));
      if ( *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 208, byte_1A43C800);
      *(_DWORD *)(v2 + 208) = 7;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2080),
        (const char (*)[13])byte_1A43C840,
        (data::NewActivityType *)(v2 + 208));
      if ( *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 224, byte_1A43C840);
      *(_DWORD *)(v2 + 224) = 8;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2120),
        (const char (*)[16])byte_1A43C880,
        (data::NewActivityType *)(v2 + 224));
      if ( *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 240, byte_1A43C880);
      *(_DWORD *)(v2 + 240) = 9;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2160),
        (const char (*)[10])byte_1A43C8C0,
        (data::NewActivityType *)(v2 + 240));
      if ( *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 256, byte_1A43C8C0);
      *(_DWORD *)(v2 + 256) = 10;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2200),
        (const char (*)[13])byte_1A43C900,
        (data::NewActivityType *)(v2 + 256));
      if ( *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 272, byte_1A43C900);
      *(_DWORD *)(v2 + 272) = 1100;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2240),
        (const char (*)[16])byte_1A43C940,
        (data::NewActivityType *)(v2 + 272));
      if ( *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 288, byte_1A43C940);
      *(_DWORD *)(v2 + 288) = 1200;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2280),
        (const char (*)[16])byte_1A43C980,
        (data::NewActivityType *)(v2 + 288));
      if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 304, byte_1A43C980);
      *(_DWORD *)(v2 + 304) = 1201;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2320),
        (const char (*)[13])byte_1A43C9C0,
        (data::NewActivityType *)(v2 + 304));
      if ( *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 320, byte_1A43C9C0);
      *(_DWORD *)(v2 + 320) = 1202;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2360),
        (const char (*)[13])byte_1A43CA00,
        (data::NewActivityType *)(v2 + 320));
      if ( *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 336, byte_1A43CA00);
      *(_DWORD *)(v2 + 336) = 1203;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2400),
        (const char (*)[13])byte_1A43CA40,
        (data::NewActivityType *)(v2 + 336));
      if ( *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 352, byte_1A43CA40);
      *(_DWORD *)(v2 + 352) = 1204;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2440),
        (const char (*)[10])byte_1A43CA80,
        (data::NewActivityType *)(v2 + 352));
      if ( *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 368, byte_1A43CA80);
      *(_DWORD *)(v2 + 368) = 99;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2480),
        (const char (*)[10])byte_1A43CAC0,
        (data::NewActivityType *)(v2 + 368));
      if ( *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 384, byte_1A43CAC0);
      *(_DWORD *)(v2 + 384) = 1205;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2520),
        (const char (*)[22])byte_1A43CB00,
        (data::NewActivityType *)(v2 + 384));
      if ( *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 400, byte_1A43CB00);
      *(_DWORD *)(v2 + 400) = 1300;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2560),
        (const char (*)[10])byte_1A43CB40,
        (data::NewActivityType *)(v2 + 400));
      if ( *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 416, byte_1A43CB40);
      *(_DWORD *)(v2 + 416) = 1301;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2600),
        (const char (*)[13])byte_1A43CB80,
        (data::NewActivityType *)(v2 + 416));
      if ( *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 432, byte_1A43CB80);
      *(_DWORD *)(v2 + 432) = 1302;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2640),
        (const char (*)[16])byte_1A43CBC0,
        (data::NewActivityType *)(v2 + 432));
      if ( *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 448, byte_1A43CBC0);
      *(_DWORD *)(v2 + 448) = 1401;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2680),
        (const char (*)[19])byte_1A43CC00,
        (data::NewActivityType *)(v2 + 448));
      if ( *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 464, byte_1A43CC00);
      *(_DWORD *)(v2 + 464) = 1501;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2720),
        (const char (*)[19])byte_1A43CC40,
        (data::NewActivityType *)(v2 + 464));
      if ( *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 480, byte_1A43CC40);
      *(_DWORD *)(v2 + 480) = 1400;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2760),
        (const char (*)[10])byte_1A43CC80,
        (data::NewActivityType *)(v2 + 480));
      if ( *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 496, byte_1A43CC80);
      *(_DWORD *)(v2 + 496) = 1402;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2800),
        (const char (*)[13])byte_1A43CCC0,
        (data::NewActivityType *)(v2 + 496));
      if ( *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 512, byte_1A43CCC0);
      *(_DWORD *)(v2 + 512) = 1403;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2840),
        (const char (*)[19])byte_1A43CD00,
        (data::NewActivityType *)(v2 + 512));
      if ( *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 528, byte_1A43CD00);
      *(_DWORD *)(v2 + 528) = 1404;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2880),
        (const char (*)[19])byte_1A43CD40,
        (data::NewActivityType *)(v2 + 528));
      if ( *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 544, byte_1A43CD40);
      *(_DWORD *)(v2 + 544) = 1405;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[11],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2920),
        (const char (*)[11])byte_1A43CD80,
        (data::NewActivityType *)(v2 + 544));
      if ( *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 560, byte_1A43CD80);
      *(_DWORD *)(v2 + 560) = 1502;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 2960),
        (const char (*)[13])byte_1A43CDC0,
        (data::NewActivityType *)(v2 + 560));
      if ( *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 576, byte_1A43CDC0);
      *(_DWORD *)(v2 + 576) = 1503;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3000),
        (const char (*)[13])byte_1A43CE00,
        (data::NewActivityType *)(v2 + 576));
      if ( *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 592, byte_1A43CE00);
      *(_DWORD *)(v2 + 592) = 1504;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3040),
        (const char (*)[10])byte_1A43CE40,
        (data::NewActivityType *)(v2 + 592));
      if ( *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 608, byte_1A43CE40);
      *(_DWORD *)(v2 + 608) = 1505;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3080),
        (const char (*)[16])byte_1A43CE80,
        (data::NewActivityType *)(v2 + 608));
      if ( *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 624, byte_1A43CE80);
      *(_DWORD *)(v2 + 624) = 1506;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3120),
        (const char (*)[19])byte_1A43CEC0,
        (data::NewActivityType *)(v2 + 624));
      if ( *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 640, byte_1A43CEC0);
      *(_DWORD *)(v2 + 640) = 1507;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3160),
        (const char (*)[13])byte_1A43CF00,
        (data::NewActivityType *)(v2 + 640));
      if ( *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 656, byte_1A43CF00);
      *(_DWORD *)(v2 + 656) = 1508;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[15],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3200),
        (const char (*)[15])byte_1A43CF40,
        (data::NewActivityType *)(v2 + 656));
      if ( *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 672, byte_1A43CF40);
      *(_DWORD *)(v2 + 672) = 1600;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3240),
        (const char (*)[10])byte_1A43CF80,
        (data::NewActivityType *)(v2 + 672));
      if ( *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 688, byte_1A43CF80);
      *(_DWORD *)(v2 + 688) = 1601;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3280),
        (const char (*)[13])byte_1A43CFC0,
        (data::NewActivityType *)(v2 + 688));
      if ( *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 704, byte_1A43CFC0);
      *(_DWORD *)(v2 + 704) = 1602;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3320),
        (const char (*)[13])byte_1A43D000,
        (data::NewActivityType *)(v2 + 704));
      if ( *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 720, byte_1A43D000);
      *(_DWORD *)(v2 + 720) = 1603;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3360),
        (const char (*)[19])byte_1A43D040,
        (data::NewActivityType *)(v2 + 720));
      if ( *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 736, byte_1A43D040);
      *(_DWORD *)(v2 + 736) = 1604;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[25],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3400),
        (const char (*)[25])byte_1A43D080,
        (data::NewActivityType *)(v2 + 736));
      if ( *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 752, byte_1A43D080);
      *(_DWORD *)(v2 + 752) = 2001;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3440),
        (const char (*)[19])byte_1A43D0C0,
        (data::NewActivityType *)(v2 + 752));
      if ( *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 768, byte_1A43D0C0);
      *(_DWORD *)(v2 + 768) = 2002;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3480),
        (const char (*)[13])byte_1A43D100,
        (data::NewActivityType *)(v2 + 768));
      if ( *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 784, byte_1A43D100);
      *(_DWORD *)(v2 + 784) = 2003;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3520),
        (const char (*)[19])byte_1A43D140,
        (data::NewActivityType *)(v2 + 784));
      if ( *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 800, byte_1A43D140);
      *(_DWORD *)(v2 + 800) = 2004;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3560),
        (const char (*)[19])byte_1A43D180,
        (data::NewActivityType *)(v2 + 800));
      if ( *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 816, byte_1A43D180);
      *(_DWORD *)(v2 + 816) = 2005;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[17],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3600),
        (const char (*)[17])byte_1A43D1C0,
        (data::NewActivityType *)(v2 + 816));
      if ( *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 832, byte_1A43D1C0);
      *(_DWORD *)(v2 + 832) = 2100;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3640),
        (const char (*)[16])byte_1A43D200,
        (data::NewActivityType *)(v2 + 832));
      if ( *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 848, byte_1A43D200);
      *(_DWORD *)(v2 + 848) = 2101;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3680),
        (const char (*)[10])byte_1A43D240,
        (data::NewActivityType *)(v2 + 848));
      if ( *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 864, byte_1A43D240);
      *(_DWORD *)(v2 + 864) = 2102;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3720),
        (const char (*)[13])byte_1A43D280,
        (data::NewActivityType *)(v2 + 864));
      if ( *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 880, byte_1A43D280);
      *(_DWORD *)(v2 + 880) = 2103;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3760),
        (const char (*)[13])byte_1A43D2C0,
        (data::NewActivityType *)(v2 + 880));
      if ( *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 896, byte_1A43D2C0);
      *(_DWORD *)(v2 + 896) = 2104;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3800),
        (const char (*)[19])byte_1A43D300,
        (data::NewActivityType *)(v2 + 896));
      if ( *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 912, byte_1A43D300);
      *(_DWORD *)(v2 + 912) = 2105;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3840),
        (const char (*)[19])byte_1A43D340,
        (data::NewActivityType *)(v2 + 912));
      if ( *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 928, byte_1A43D340);
      *(_DWORD *)(v2 + 928) = 2200;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3880),
        (const char (*)[13])byte_1A43D380,
        (data::NewActivityType *)(v2 + 928));
      if ( *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 944, byte_1A43D380);
      *(_DWORD *)(v2 + 944) = 2201;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3920),
        (const char (*)[19])byte_1A43D3C0,
        (data::NewActivityType *)(v2 + 944));
      if ( *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 960, byte_1A43D3C0);
      *(_DWORD *)(v2 + 960) = 2202;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 3960),
        (const char (*)[13])byte_1A43D400,
        (data::NewActivityType *)(v2 + 960));
      if ( *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 976, byte_1A43D400);
      *(_DWORD *)(v2 + 976) = 2203;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4000),
        (const char (*)[19])byte_1A43D440,
        (data::NewActivityType *)(v2 + 976));
      if ( *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 992, byte_1A43D440);
      *(_DWORD *)(v2 + 992) = 2204;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4040),
        (const char (*)[16])byte_1A43D480,
        (data::NewActivityType *)(v2 + 992));
      if ( *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1008, byte_1A43D480);
      *(_DWORD *)(v2 + 1008) = 2301;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4080),
        (const char (*)[16])byte_1A43D4C0,
        (data::NewActivityType *)(v2 + 1008));
      if ( *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1024, byte_1A43D4C0);
      *(_DWORD *)(v2 + 1024) = 2302;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4120),
        (const char (*)[13])byte_1A43D500,
        (data::NewActivityType *)(v2 + 1024));
      if ( *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1040, byte_1A43D500);
      *(_DWORD *)(v2 + 1040) = 2400;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4160),
        (const char (*)[16])byte_1A43D540,
        (data::NewActivityType *)(v2 + 1040));
      if ( *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1056, byte_1A43D540);
      *(_DWORD *)(v2 + 1056) = 2401;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4200),
        (const char (*)[13])byte_1A43D580,
        (data::NewActivityType *)(v2 + 1056));
      if ( *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1072, byte_1A43D580);
      *(_DWORD *)(v2 + 1072) = 2402;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4240),
        (const char (*)[13])byte_1A43D5C0,
        (data::NewActivityType *)(v2 + 1072));
      if ( *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1088, byte_1A43D5C0);
      *(_DWORD *)(v2 + 1088) = 2501;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4280),
        (const char (*)[16])byte_1A43D600,
        (data::NewActivityType *)(v2 + 1088));
      if ( *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1104, byte_1A43D600);
      *(_DWORD *)(v2 + 1104) = 2502;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4320),
        (const char (*)[16])byte_1A43D640,
        (data::NewActivityType *)(v2 + 1104));
      if ( *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1120, byte_1A43D640);
      *(_DWORD *)(v2 + 1120) = 2503;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4360),
        (const char (*)[10])byte_1A43D680,
        (data::NewActivityType *)(v2 + 1120));
      if ( *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1136, byte_1A43D680);
      *(_DWORD *)(v2 + 1136) = 2600;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4400),
        (const char (*)[16])byte_1A43D6C0,
        (data::NewActivityType *)(v2 + 1136));
      if ( *(_BYTE *)(((v2 + 1152) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1152) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1152, byte_1A43D6C0);
      *(_DWORD *)(v2 + 1152) = 2601;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4440),
        (const char (*)[19])byte_1A43D700,
        (data::NewActivityType *)(v2 + 1152));
      if ( *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1168, byte_1A43D700);
      *(_DWORD *)(v2 + 1168) = 2602;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4480),
        (const char (*)[13])byte_1A43D740,
        (data::NewActivityType *)(v2 + 1168));
      if ( *(_BYTE *)(((v2 + 1184) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1184) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1184, byte_1A43D740);
      *(_DWORD *)(v2 + 1184) = 2603;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4520),
        (const char (*)[13])byte_1A43D780,
        (data::NewActivityType *)(v2 + 1184));
      if ( *(_BYTE *)(((v2 + 1200) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1200) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1200, byte_1A43D780);
      *(_DWORD *)(v2 + 1200) = 2702;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4560),
        (const char (*)[19])byte_1A43D7C0,
        (data::NewActivityType *)(v2 + 1200));
      if ( *(_BYTE *)(((v2 + 1216) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1216) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1216, byte_1A43D7C0);
      *(_DWORD *)(v2 + 1216) = 2703;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4600),
        (const char (*)[16])byte_1A43D800,
        (data::NewActivityType *)(v2 + 1216));
      if ( *(_BYTE *)(((v2 + 1232) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1232) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1232, byte_1A43D800);
      *(_DWORD *)(v2 + 1232) = 2704;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4640),
        (const char (*)[16])byte_1A43D840,
        (data::NewActivityType *)(v2 + 1232));
      if ( *(_BYTE *)(((v2 + 1248) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1248) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1248, byte_1A43D840);
      *(_DWORD *)(v2 + 1248) = 2801;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4680),
        (const char (*)[19])byte_1A43D880,
        (data::NewActivityType *)(v2 + 1248));
      if ( *(_BYTE *)(((v2 + 1264) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1264) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1264, byte_1A43D880);
      *(_DWORD *)(v2 + 1264) = 2802;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4720),
        (const char (*)[16])byte_1A43D8C0,
        (data::NewActivityType *)(v2 + 1264));
      if ( *(_BYTE *)(((v2 + 1280) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1280) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1280, byte_1A43D8C0);
      *(_DWORD *)(v2 + 1280) = 2803;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4760),
        (const char (*)[22])byte_1A43D900,
        (data::NewActivityType *)(v2 + 1280));
      if ( *(_BYTE *)(((v2 + 1296) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1296) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1296, byte_1A43D900);
      *(_DWORD *)(v2 + 1296) = 3000;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4800),
        (const char (*)[22])byte_1A43D940,
        (data::NewActivityType *)(v2 + 1296));
      if ( *(_BYTE *)(((v2 + 1312) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1312) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1312, byte_1A43D940);
      *(_DWORD *)(v2 + 1312) = 3001;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4840),
        (const char (*)[13])byte_1A43D980,
        (data::NewActivityType *)(v2 + 1312));
      if ( *(_BYTE *)(((v2 + 1328) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1328) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1328, byte_1A43D980);
      *(_DWORD *)(v2 + 1328) = 3002;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[10],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4880),
        (const char (*)[10])byte_1A43D9C0,
        (data::NewActivityType *)(v2 + 1328));
      if ( *(_BYTE *)(((v2 + 1344) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1344) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1344, byte_1A43D9C0);
      *(_DWORD *)(v2 + 1344) = 3003;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4920),
        (const char (*)[16])byte_1A43DA00,
        (data::NewActivityType *)(v2 + 1344));
      if ( *(_BYTE *)(((v2 + 1360) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1360) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1360, byte_1A43DA00);
      *(_DWORD *)(v2 + 1360) = 3101;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 4960),
        (const char (*)[16])byte_1A43DA40,
        (data::NewActivityType *)(v2 + 1360));
      if ( *(_BYTE *)(((v2 + 1376) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1376) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1376, byte_1A43DA40);
      *(_DWORD *)(v2 + 1376) = 3102;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5000),
        (const char (*)[22])byte_1A43DA80,
        (data::NewActivityType *)(v2 + 1376));
      if ( *(_BYTE *)(((v2 + 1392) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1392) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1392, byte_1A43DA80);
      *(_DWORD *)(v2 + 1392) = 3103;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5040),
        (const char (*)[22])byte_1A43DAC0,
        (data::NewActivityType *)(v2 + 1392));
      if ( *(_BYTE *)(((v2 + 1408) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1408) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1408, byte_1A43DAC0);
      *(_DWORD *)(v2 + 1408) = 3201;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5080),
        (const char (*)[19])byte_1A43DB00,
        (data::NewActivityType *)(v2 + 1408));
      if ( *(_BYTE *)(((v2 + 1424) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1424) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1424, byte_1A43DB00);
      *(_DWORD *)(v2 + 1424) = 3202;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5120),
        (const char (*)[16])byte_1A43DB40,
        (data::NewActivityType *)(v2 + 1424));
      if ( *(_BYTE *)(((v2 + 1440) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1440) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1440, byte_1A43DB40);
      *(_DWORD *)(v2 + 1440) = 3203;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5160),
        (const char (*)[16])byte_1A43DB80,
        (data::NewActivityType *)(v2 + 1440));
      if ( *(_BYTE *)(((v2 + 1456) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1456) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1456, byte_1A43DB80);
      *(_DWORD *)(v2 + 1456) = 3300;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5200),
        (const char (*)[16])byte_1A43DBC0,
        (data::NewActivityType *)(v2 + 1456));
      if ( *(_BYTE *)(((v2 + 1472) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1472) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1472, byte_1A43DBC0);
      *(_DWORD *)(v2 + 1472) = 3301;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5240),
        (const char (*)[22])byte_1A43DC00,
        (data::NewActivityType *)(v2 + 1472));
      if ( *(_BYTE *)(((v2 + 1488) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1488) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1488, byte_1A43DC00);
      *(_DWORD *)(v2 + 1488) = 3400;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[13],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5280),
        (const char (*)[13])byte_1A43DC40,
        (data::NewActivityType *)(v2 + 1488));
      if ( *(_BYTE *)(((v2 + 1504) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1504) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1504, byte_1A43DC40);
      *(_DWORD *)(v2 + 1504) = 3401;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5320),
        (const char (*)[19])byte_1A43DC80,
        (data::NewActivityType *)(v2 + 1504));
      if ( *(_BYTE *)(((v2 + 1520) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1520) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1520, byte_1A43DC80);
      *(_DWORD *)(v2 + 1520) = 3402;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5360),
        (const char (*)[16])byte_1A43DCC0,
        (data::NewActivityType *)(v2 + 1520));
      if ( *(_BYTE *)(((v2 + 1536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1536) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1536, byte_1A43DCC0);
      *(_DWORD *)(v2 + 1536) = 3403;
      std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
        (std::pair<const std::string,data::NewActivityType> *const)(v2 + 5400),
        (const char (*)[19])byte_1A43DD00,
        (data::NewActivityType *)(v2 + 1536));
      std::allocator<std::pair<std::string const,data::NewActivityType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityType> > *const)(v2 + 80));
      std::unordered_map<std::string,data::NewActivityType>::unordered_map(
        &data::enumStrToVal(char const*,data::NewActivityType &)::m,
        (std::initializer_list<std::pair<const std::string,data::NewActivityType> >)__PAIR128__(90LL, v2 + 1840),
        0LL,
        (const std::unordered_map<std::string,data::NewActivityType>::hasher *)(v2 + 48),
        (const std::unordered_map<std::string,data::NewActivityType>::key_equal *)(v2 + 64),
        (const std::unordered_map<std::string,data::NewActivityType>::allocator_type *)(v2 + 80));
      __cxa_guard_release(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityType &)::m);
      __cxa_atexit(
        (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityType>::~unordered_map,
        &data::enumStrToVal(char const*,data::NewActivityType &)::m,
        &_dso_handle);
      std::allocator<std::pair<std::string const,data::NewActivityType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityType> > *const)(v2 + 80));
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
      for ( i = (std::pair<const std::string,data::NewActivityType> *)(v2 + 5440);
            i != (std::pair<const std::string,data::NewActivityType> *)(v2 + 1840);
            std::pair<std::string const,data::NewActivityType>::~pair(i) )
      {
        --i;
      }
      __asan_poison_stack_memory(v2 + 1840, 3600LL);
      *(_BYTE *)(((v2 + 1536) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1520) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1504) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1488) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1472) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1456) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1440) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1424) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1408) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1392) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1376) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1360) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1344) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1328) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1312) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1296) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1280) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1264) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1248) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1232) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1216) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1200) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1184) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1152) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
    }
    *(_BYTE *)(((v2 + 1552) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 1712) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    v7 = *(const char **)(v2 + 1616);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 1712),
      v7,
      (const std::allocator<char> *)(v2 + 96));
    if ( *(_BYTE *)(((v2 + 1552) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 1552, v7);
    *(std::unordered_map<std::string,data::NewActivityType>::iterator *)(v2 + 1552) = std::unordered_map<std::string,data::NewActivityType>::find(
                                                                                        &data::enumStrToVal(char const*,data::NewActivityType &)::m,
                                                                                        (const std::unordered_map<std::string,data::NewActivityType>::key_type *)(v2 + 1712));
    std::string::~string((void *)(v2 + 1712));
    *(_DWORD *)(((v2 + 1712) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 1584) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 1584) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 1584, v2 + 1712);
    *(std::unordered_map<std::string,data::NewActivityType>::iterator *)(v2 + 1584) = std::unordered_map<std::string,data::NewActivityType>::end(&data::enumStrToVal(char const*,data::NewActivityType &)::m);
    v8 = (char *)(v2 + 1584);
    v9 = std::__detail::operator==<std::pair<std::string const,data::NewActivityType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityType>,true> *)(v2 + 1552),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityType>,true> *)(v2 + 1584));
    *(_BYTE *)(((v2 + 1584) >> 3) + 0x7FFF8000) = -8;
    if ( v9 )
    {
      *(_DWORD *)(((v2 + 1776) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 1776) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 1807) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 64 + 79) & 7) >= *(_BYTE *)(((v2 + 1807) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 1776, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 1776),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumStrToVal",
        149);
      v10 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              (common::milog::MiLogStream *const)(v2 + 1776),
              (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v10, (const char *const *)(v2 + 1616));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1776));
      v5 = -1;
    }
    else
    {
      v11 = std::__detail::_Node_iterator<std::pair<std::string const,data::NewActivityType>,false,true>::operator->((const std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityType>,false,true> *const)(v2 + 1552));
      if ( *(_BYTE *)(((unsigned __int64)&v11->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v11->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v11->second);
      }
      second = v11->second;
      v13 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v13 != 0 && (char)((e & 7) + 3) >= v13 )
      {
        LOBYTE(v8) = v13 != 0;
        __asan_report_store4(e, v8);
      }
      *(_DWORD *)e = second;
      v5 = 0;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 1648) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1679) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 113) & 7) >= *(_BYTE *)(((v2 + 1679) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1648, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1648),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumStrToVal",
      48);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 1648),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1648));
    v5 = -1;
  }
  v14 = v5;
  if ( v17 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF82B0) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 696) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_7(v2, 5568LL, v17);
  }
  return v14;
};

// Line 158: range 000000000EE8BA0F-000000000EE8BA25
const char *__cdecl data::getDescription(data::NewActivityType e)
{
  __int64 v1; // rsi

  return data::enumValToStr(e, v1);
};

// Line 163: range 000000000EE8BA26-000000000EE8BBDB
bool __cdecl data::isValidNewActivityType(uint32_t n)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  const std::map<data::NewActivityType,std::pair<std::string,std::string >> *v5; // rcx
  const std::map<data::NewActivityType,std::pair<std::string,std::string >> *v6; // rcx
  bool result; // al
  char v8[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 5 e:164 64 8 9 <unknown> 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityType;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, v1);
  *(_DWORD *)(v2 + 48) = n;
  v5 = data::getNewActivityTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::map<data::NewActivityType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityType,std::pair<std::string,std::string>>::end(v5);
  v6 = data::getNewActivityTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::map<data::NewActivityType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityType,std::pair<std::string,std::string>>::find(v6, (const std::map<data::NewActivityType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  result = std::operator!=(
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 169: range 000000000EE8BBDC-000000000EE8BD3D
bool __cdecl data::isValidNewActivityTypeName(const std::string *name)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  const std::unordered_map<std::string,data::NewActivityType> *v5; // rcx
  const std::unordered_map<std::string,data::NewActivityType> *v6; // rcx
  bool result; // al
  char v8[128]; // [rsp+10h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 9 <unknown> 64 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityTypeName;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202116352;
  v5 = data::getNewActivityTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<std::string,data::NewActivityType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityType>::end(v5);
  v6 = data::getNewActivityTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<std::string,data::NewActivityType>::const_iterator *)(v2 + 32) = std::unordered_map<std::string,data::NewActivityType>::find(
                                                                                          v6,
                                                                                          name);
  result = std::__detail::operator!=<std::pair<std::string const,data::NewActivityType>,true>(
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityType>,true> *)(v2 + 32),
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityType>,true> *)(v2 + 64));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 174: range 000000000EE8BD3E-000000000EE8EDEF
const std::unordered_map<std::string,data::NewActivityType> *__cdecl data::getNewActivityTypeNameMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const std::string,data::NewActivityType> *i; // r14
  char v6[5360]; // [rsp+10h] [rbp-14F0h] BYREF

  v1 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_7(5312LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "95 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9 "
                        "<unknown> 128 4 9 <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 4 9 <unkno"
                        "wn> 208 4 9 <unknown> 224 4 9 <unknown> 240 4 9 <unknown> 256 4 9 <unknown> 272 4 9 <unknown> 28"
                        "8 4 9 <unknown> 304 4 9 <unknown> 320 4 9 <unknown> 336 4 9 <unknown> 352 4 9 <unknown> 368 4 9 "
                        "<unknown> 384 4 9 <unknown> 400 4 9 <unknown> 416 4 9 <unknown> 432 4 9 <unknown> 448 4 9 <unkno"
                        "wn> 464 4 9 <unknown> 480 4 9 <unknown> 496 4 9 <unknown> 512 4 9 <unknown> 528 4 9 <unknown> 54"
                        "4 4 9 <unknown> 560 4 9 <unknown> 576 4 9 <unknown> 592 4 9 <unknown> 608 4 9 <unknown> 624 4 9 "
                        "<unknown> 640 4 9 <unknown> 656 4 9 <unknown> 672 4 9 <unknown> 688 4 9 <unknown> 704 4 9 <unkno"
                        "wn> 720 4 9 <unknown> 736 4 9 <unknown> 752 4 9 <unknown> 768 4 9 <unknown> 784 4 9 <unknown> 80"
                        "0 4 9 <unknown> 816 4 9 <unknown> 832 4 9 <unknown> 848 4 9 <unknown> 864 4 9 <unknown> 880 4 9 "
                        "<unknown> 896 4 9 <unknown> 912 4 9 <unknown> 928 4 9 <unknown> 944 4 9 <unknown> 960 4 9 <unkno"
                        "wn> 976 4 9 <unknown> 992 4 9 <unknown> 1008 4 9 <unknown> 1024 4 9 <unknown> 1040 4 9 <unknown>"
                        " 1056 4 9 <unknown> 1072 4 9 <unknown> 1088 4 9 <unknown> 1104 4 9 <unknown> 1120 4 9 <unknown> "
                        "1136 4 9 <unknown> 1152 4 9 <unknown> 1168 4 9 <unknown> 1184 4 9 <unknown> 1200 4 9 <unknown> 1"
                        "216 4 9 <unknown> 1232 4 9 <unknown> 1248 4 9 <unknown> 1264 4 9 <unknown> 1280 4 9 <unknown> 12"
                        "96 4 9 <unknown> 1312 4 9 <unknown> 1328 4 9 <unknown> 1344 4 9 <unknown> 1360 4 9 <unknown> 137"
                        "6 4 9 <unknown> 1392 4 9 <unknown> 1408 4 9 <unknown> 1424 4 9 <unknown> 1440 4 9 <unknown> 1456"
                        " 4 9 <unknown> 1472 4 9 <unknown> 1488 4 9 <unknown> 1504 4 9 <unknown> 1520 4 9 <unknown> 1536 "
                        "3640 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityTypeNameMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753535;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862724] = -234556924;
  v3[536862725] = -234556924;
  v3[536862726] = -234556924;
  v3[536862727] = -234556924;
  v3[536862728] = -234556924;
  v3[536862729] = -234556924;
  v3[536862730] = -234556924;
  v3[536862731] = -234556924;
  v3[536862732] = -234556924;
  v3[536862733] = -234556924;
  v3[536862734] = -234556924;
  v3[536862735] = -234556924;
  v3[536862736] = -234556924;
  v3[536862737] = -234556924;
  v3[536862738] = -234556924;
  v3[536862739] = -234556924;
  v3[536862740] = -234556924;
  v3[536862741] = -234556924;
  v3[536862742] = -234556924;
  v3[536862743] = -234556924;
  v3[536862744] = -234556924;
  v3[536862745] = -234556924;
  v3[536862746] = -234556924;
  v3[536862747] = -234556924;
  v3[536862748] = -234556924;
  v3[536862749] = -234556924;
  v3[536862750] = -234556924;
  v3[536862751] = -234556924;
  v3[536862752] = -234556924;
  v3[536862753] = -234556924;
  v3[536862754] = -234556924;
  v3[536862755] = -234556924;
  v3[536862756] = -234556924;
  v3[536862757] = -234556924;
  v3[536862758] = -234556924;
  v3[536862759] = -234556924;
  v3[536862760] = -234556924;
  v3[536862761] = -234556924;
  v3[536862762] = -234556924;
  v3[536862763] = -234556924;
  v3[536862764] = -234556924;
  v3[536862765] = -234556924;
  v3[536862766] = -234556924;
  v3[536862767] = -234556924;
  v3[536862881] = -218103808;
  v3[536862882] = -202116109;
  v3[536862883] = -202116109;
  v3[536862884] = -202116109;
  v3[536862885] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityTypeNameMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityTypeNameMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[21],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1536),
      (const char (*)[21])"NEW_ACTIVITY_GENERAL",
      (data::NewActivityType *)(v1 + 80));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, "NEW_ACTIVITY_GENERAL");
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1576),
      (const char (*)[22])"NEW_ACTIVITY_SEA_LAMP",
      (data::NewActivityType *)(v1 + 96));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, "NEW_ACTIVITY_SEA_LAMP");
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1616),
      (const char (*)[22])"NEW_ACTIVITY_CRUCIBLE",
      (data::NewActivityType *)(v1 + 112));
    if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 128, "NEW_ACTIVITY_CRUCIBLE");
    *(_DWORD *)(v1 + 128) = 3;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1656),
      (const char (*)[22])"NEW_ACTIVITY_SALESMAN",
      (data::NewActivityType *)(v1 + 128));
    if ( *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 144, "NEW_ACTIVITY_SALESMAN");
    *(_DWORD *)(v1 + 144) = 4;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[26],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1696),
      (const char (*)[26])"NEW_ACTIVITY_TRIAL_AVATAR",
      (data::NewActivityType *)(v1 + 144));
    if ( *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 160, "NEW_ACTIVITY_TRIAL_AVATAR");
    *(_DWORD *)(v1 + 160) = 5;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[20],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1736),
      (const char (*)[20])"NEW_ACTIVITY_SIGNIN",
      (data::NewActivityType *)(v1 + 160));
    if ( *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 176, "NEW_ACTIVITY_SIGNIN");
    *(_DWORD *)(v1 + 176) = 6;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1776),
      (const char (*)[19])"NEW_ACTIVITY_BONUS",
      (data::NewActivityType *)(v1 + 176));
    if ( *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 192, "NEW_ACTIVITY_BONUS");
    *(_DWORD *)(v1 + 192) = 7;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[25],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1816),
      (const char (*)[25])"NEW_ACTIVITY_NEWBEEBONUS",
      (data::NewActivityType *)(v1 + 192));
    if ( *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 208, "NEW_ACTIVITY_NEWBEEBONUS");
    *(_DWORD *)(v1 + 208) = 8;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1856),
      (const char (*)[28])"NEW_ACTIVITY_PERSONAL_LIINE",
      (data::NewActivityType *)(v1 + 208));
    if ( *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 224, "NEW_ACTIVITY_PERSONAL_LIINE");
    *(_DWORD *)(v1 + 224) = 9;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1896),
      (const char (*)[22])"NEW_ACTIVITY_DELIVERY",
      (data::NewActivityType *)(v1 + 224));
    if ( *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 240, "NEW_ACTIVITY_DELIVERY");
    *(_DWORD *)(v1 + 240) = 10;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[20],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1936),
      (const char (*)[20])"NEW_ACTIVITY_FLIGHT",
      (data::NewActivityType *)(v1 + 240));
    if ( *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 256, "NEW_ACTIVITY_FLIGHT");
    *(_DWORD *)(v1 + 256) = 1100;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 1976),
      (const char (*)[19])"NEW_ACTIVITY_ASTER",
      (data::NewActivityType *)(v1 + 256));
    if ( *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 272, "NEW_ACTIVITY_ASTER");
    *(_DWORD *)(v1 + 272) = 1200;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[25],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2016),
      (const char (*)[25])"NEW_ACTIVITY_DRAGONSPINE",
      (data::NewActivityType *)(v1 + 272));
    if ( *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 288, "NEW_ACTIVITY_DRAGONSPINE");
    *(_DWORD *)(v1 + 288) = 1201;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[21],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2056),
      (const char (*)[21])"NEW_ACTIVITY_REUNION",
      (data::NewActivityType *)(v1 + 288));
    if ( *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 304, "NEW_ACTIVITY_REUNION");
    *(_DWORD *)(v1 + 304) = 1202;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[20],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2096),
      (const char (*)[20])"NEW_ACTIVITY_EFFIGY",
      (data::NewActivityType *)(v1 + 304));
    if ( *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 320, "NEW_ACTIVITY_EFFIGY");
    *(_DWORD *)(v1 + 320) = 1203;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[25],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2136),
      (const char (*)[25])"NEW_ACTIVITY_TOWER_RESET",
      (data::NewActivityType *)(v1 + 320));
    if ( *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 336, "NEW_ACTIVITY_TOWER_RESET");
    *(_DWORD *)(v1 + 336) = 1204;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[26],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2176),
      (const char (*)[26])"NEW_ACTIVITY_TREASURE_MAP",
      (data::NewActivityType *)(v1 + 336));
    if ( *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 352, "NEW_ACTIVITY_TREASURE_MAP");
    *(_DWORD *)(v1 + 352) = 99;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[18],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2216),
      (const char (*)[18])"NEW_ACTIVITY_TEMP",
      (data::NewActivityType *)(v1 + 352));
    if ( *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 368, "NEW_ACTIVITY_TEMP");
    *(_DWORD *)(v1 + 368) = 1205;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[25],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2256),
      (const char (*)[25])"NEW_ACTIVITY_SALESMAN_MP",
      (data::NewActivityType *)(v1 + 368));
    if ( *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 384, "NEW_ACTIVITY_SALESMAN_MP");
    *(_DWORD *)(v1 + 384) = 1300;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[22],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2296),
      (const char (*)[22])"NEW_ACTIVITY_BLESSING",
      (data::NewActivityType *)(v1 + 384));
    if ( *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 400, "NEW_ACTIVITY_BLESSING");
    *(_DWORD *)(v1 + 400) = 1301;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[24],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2336),
      (const char (*)[24])"NEW_ACTIVITY_EXPEDITION",
      (data::NewActivityType *)(v1 + 400));
    if ( *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 416, "NEW_ACTIVITY_EXPEDITION");
    *(_DWORD *)(v1 + 416) = 1302;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[26],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2376),
      (const char (*)[26])"NEW_ACTIVITY_SEA_LAMP_NEW",
      (data::NewActivityType *)(v1 + 416));
    if ( *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 432, "NEW_ACTIVITY_SEA_LAMP_NEW");
    *(_DWORD *)(v1 + 432) = 1401;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[30],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2416),
      (const char (*)[30])"NEW_ACTIVITY_OPERATIONS_BONUS",
      (data::NewActivityType *)(v1 + 432));
    if ( *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 448, "NEW_ACTIVITY_OPERATIONS_BONUS");
    *(_DWORD *)(v1 + 448) = 1501;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[45],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2456),
      (const char (*)[45])"NEW_ACTIVITY_MONSTER_BANNER_DRAKE_PRIMO_ROCK",
      (data::NewActivityType *)(v1 + 448));
    if ( *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 464, "NEW_ACTIVITY_MONSTER_BANNER_DRAKE_PRIMO_ROCK");
    *(_DWORD *)(v1 + 464) = 1400;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[24],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2496),
      (const char (*)[24])"NEW_ACTIVITY_FLEUR_FAIR",
      (data::NewActivityType *)(v1 + 464));
    if ( *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 480, "NEW_ACTIVITY_FLEUR_FAIR");
    *(_DWORD *)(v1 + 480) = 1402;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[29],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2536),
      (const char (*)[29])"NEW_ACTIVITY_ARENA_CHALLENGE",
      (data::NewActivityType *)(v1 + 480));
    if ( *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 496, "NEW_ACTIVITY_ARENA_CHALLENGE");
    *(_DWORD *)(v1 + 496) = 1403;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[36],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2576),
      (const char (*)[36])"NEW_ACTIVITY_WATER_SPIRIT_CHALLENGE",
      (data::NewActivityType *)(v1 + 496));
    if ( *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 512, "NEW_ACTIVITY_WATER_SPIRIT_CHALLENGE");
    *(_DWORD *)(v1 + 512) = 1404;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[30],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2616),
      (const char (*)[30])"NEW_ACTIVITY_SIGNIN_COMPANION",
      (data::NewActivityType *)(v1 + 512));
    if ( *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 528, "NEW_ACTIVITY_SIGNIN_COMPANION");
    *(_DWORD *)(v1 + 528) = 1405;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[18],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2656),
      (const char (*)[18])"NEW_ACTIVITY_COOP",
      (data::NewActivityType *)(v1 + 528));
    if ( *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 544, "NEW_ACTIVITY_COOP");
    *(_DWORD *)(v1 + 544) = 1502;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2696),
      (const char (*)[28])"NEW_ACTIVITY_CHANNELER_SLAB",
      (data::NewActivityType *)(v1 + 544));
    if ( *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 560, "NEW_ACTIVITY_CHANNELER_SLAB");
    *(_DWORD *)(v1 + 560) = 1503;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[23],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2736),
      (const char (*)[23])"NEW_ACTIVITY_MISTTRIAL",
      (data::NewActivityType *)(v1 + 560));
    if ( *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 576, "NEW_ACTIVITY_MISTTRIAL");
    *(_DWORD *)(v1 + 576) = 1504;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[25],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2776),
      (const char (*)[25])"NEW_ACTIVITY_HIDEANDSEEK",
      (data::NewActivityType *)(v1 + 576));
    if ( *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 592, "NEW_ACTIVITY_HIDEANDSEEK");
    *(_DWORD *)(v1 + 592) = 1505;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2816),
      (const char (*)[28])"NEW_ACTIVITY_FIND_HILICHURL",
      (data::NewActivityType *)(v1 + 592));
    if ( *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 608, "NEW_ACTIVITY_FIND_HILICHURL");
    *(_DWORD *)(v1 + 608) = 1506;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[39],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2856),
      (const char (*)[39])"NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_ICE",
      (data::NewActivityType *)(v1 + 608));
    if ( *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 624, "NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_ICE");
    *(_DWORD *)(v1 + 624) = 1507;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[23],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2896),
      (const char (*)[23])"NEW_ACTIVITY_HOMEWORLD",
      (data::NewActivityType *)(v1 + 624));
    if ( *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 640, "NEW_ACTIVITY_HOMEWORLD");
    *(_DWORD *)(v1 + 640) = 1508;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[16],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2936),
      (const char (*)[16])"NEW_ACTIVITY_H5",
      (data::NewActivityType *)(v1 + 640));
    if ( *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 656, "NEW_ACTIVITY_H5");
    *(_DWORD *)(v1 + 656) = 1600;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[25],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 2976),
      (const char (*)[25])"NEW_ACTIVITY_SUMMER_TIME",
      (data::NewActivityType *)(v1 + 656));
    if ( *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 672, "NEW_ACTIVITY_SUMMER_TIME");
    *(_DWORD *)(v1 + 672) = 1601;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3016),
      (const char (*)[28])"NEW_ACTIVITY_BUOYANT_COMBAT",
      (data::NewActivityType *)(v1 + 672));
    if ( *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 688, "NEW_ACTIVITY_BUOYANT_COMBAT");
    *(_DWORD *)(v1 + 688) = 1602;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[24],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3056),
      (const char (*)[24])"NEW_ACTIVITY_ECHO_SHELL",
      (data::NewActivityType *)(v1 + 688));
    if ( *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 704, "NEW_ACTIVITY_ECHO_SHELL");
    *(_DWORD *)(v1 + 704) = 1603;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[30],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3096),
      (const char (*)[30])"NEW_ACTIVITY_BOUNCE_CONJURING",
      (data::NewActivityType *)(v1 + 704));
    if ( *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 720, "NEW_ACTIVITY_BOUNCE_CONJURING");
    *(_DWORD *)(v1 + 720) = 1604;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[33],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3136),
      (const char (*)[33])"NEW_ACTIVITY_DAOQI_ADVERTISEMENT",
      (data::NewActivityType *)(v1 + 720));
    if ( *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 736, "NEW_ACTIVITY_DAOQI_ADVERTISEMENT");
    *(_DWORD *)(v1 + 736) = 2001;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[24],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3176),
      (const char (*)[24])"NEW_ACTIVITY_BLITZ_RUSH",
      (data::NewActivityType *)(v1 + 736));
    if ( *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 752, "NEW_ACTIVITY_BLITZ_RUSH");
    *(_DWORD *)(v1 + 752) = 2002;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3216),
      (const char (*)[19])"NEW_ACTIVITY_CHESS",
      (data::NewActivityType *)(v1 + 752));
    if ( *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 768, "NEW_ACTIVITY_CHESS");
    *(_DWORD *)(v1 + 768) = 2003;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[40],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3256),
      (const char (*)[40])"NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_FIRE",
      (data::NewActivityType *)(v1 + 768));
    if ( *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 784, "NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_FIRE");
    *(_DWORD *)(v1 + 784) = 2004;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[38],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3296),
      (const char (*)[38])"NEW_ACTIVITY_MONSTER_BANNER_PERPETUAL",
      (data::NewActivityType *)(v1 + 784));
    if ( *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 800, "NEW_ACTIVITY_MONSTER_BANNER_PERPETUAL");
    *(_DWORD *)(v1 + 800) = 2005;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[30],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3336),
      (const char (*)[30])"NEW_ACTIVITY_PERSONAL_LIINE_2",
      (data::NewActivityType *)(v1 + 800));
    if ( *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 816, "NEW_ACTIVITY_PERSONAL_LIINE_2");
    *(_DWORD *)(v1 + 816) = 2100;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3376),
      (const char (*)[28])"NEW_ACTIVITY_GENERAL_BANNER",
      (data::NewActivityType *)(v1 + 816));
    if ( *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 832, "NEW_ACTIVITY_GENERAL_BANNER");
    *(_DWORD *)(v1 + 832) = 2101;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[23],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3416),
      (const char (*)[23])"NEW_ACTIVITY_LUNA_RITE",
      (data::NewActivityType *)(v1 + 832));
    if ( *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 848, "NEW_ACTIVITY_LUNA_RITE");
    *(_DWORD *)(v1 + 848) = 2102;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[18],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3456),
      (const char (*)[18])"NEW_ACTIVITY_SUMO",
      (data::NewActivityType *)(v1 + 848));
    if ( *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 864, "NEW_ACTIVITY_SUMO");
    *(_DWORD *)(v1 + 864) = 2103;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[27],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3496),
      (const char (*)[27])"NEW_ACTIVITY_MOONFIN_TRIAL",
      (data::NewActivityType *)(v1 + 864));
    if ( *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 880, "NEW_ACTIVITY_MOONFIN_TRIAL");
    *(_DWORD *)(v1 + 880) = 2104;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[41],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3536),
      (const char (*)[41])"NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_WATER",
      (data::NewActivityType *)(v1 + 880));
    if ( *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 896, "NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_WATER");
    *(_DWORD *)(v1 + 896) = 2105;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[35],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3576),
      (const char (*)[35])"NEW_ACTIVITY_MONSTER_BANNER_RAIJIN",
      (data::NewActivityType *)(v1 + 896));
    if ( *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 912, "NEW_ACTIVITY_MONSTER_BANNER_RAIJIN");
    *(_DWORD *)(v1 + 912) = 2200;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[26],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3616),
      (const char (*)[26])"NEW_ACTIVITY_PLANT_FLOWER",
      (data::NewActivityType *)(v1 + 912));
    if ( *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 928, "NEW_ACTIVITY_PLANT_FLOWER");
    *(_DWORD *)(v1 + 928) = 2201;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[31],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3656),
      (const char (*)[31])"NEW_ACTIVITY_ROGUELIKE_DUNGEON",
      (data::NewActivityType *)(v1 + 928));
    if ( *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 944, "NEW_ACTIVITY_ROGUELIKE_DUNGEON");
    *(_DWORD *)(v1 + 944) = 2202;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[24],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3696),
      (const char (*)[24])"NEW_ACTIVITY_MUSIC_GAME",
      (data::NewActivityType *)(v1 + 944));
    if ( *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 960, "NEW_ACTIVITY_MUSIC_GAME");
    *(_DWORD *)(v1 + 960) = 2203;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[17],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3736),
      (const char (*)[17])"NEW_ACTIVITY_DIG",
      (data::NewActivityType *)(v1 + 960));
    if ( *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 976, "NEW_ACTIVITY_DIG");
    *(_DWORD *)(v1 + 976) = 2204;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3776),
      (const char (*)[28])"NEW_ACTIVITY_MOONFIN_BANNER",
      (data::NewActivityType *)(v1 + 976));
    if ( *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 992, "NEW_ACTIVITY_MOONFIN_BANNER");
    *(_DWORD *)(v1 + 992) = 2301;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[25],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3816),
      (const char (*)[25])"NEW_ACTIVITY_WINTER_CAMP",
      (data::NewActivityType *)(v1 + 992));
    if ( *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1008, "NEW_ACTIVITY_WINTER_CAMP");
    *(_DWORD *)(v1 + 1008) = 2302;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3856),
      (const char (*)[19])"NEW_ACTIVITY_HACHI",
      (data::NewActivityType *)(v1 + 1008));
    if ( *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1024, "NEW_ACTIVITY_HACHI");
    *(_DWORD *)(v1 + 1024) = 2400;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[20],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3896),
      (const char (*)[20])"NEW_ACTIVITY_POTION",
      (data::NewActivityType *)(v1 + 1024));
    if ( *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1040, "NEW_ACTIVITY_POTION");
    *(_DWORD *)(v1 + 1040) = 2401;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[27],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3936),
      (const char (*)[27])"NEW_ACTIVITY_TANUKI_TRAVEL",
      (data::NewActivityType *)(v1 + 1040));
    if ( *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1056, "NEW_ACTIVITY_TANUKI_TRAVEL");
    *(_DWORD *)(v1 + 1056) = 2402;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[26],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 3976),
      (const char (*)[26])"NEW_ACTIVITY_SEA_LAMP_2_4",
      (data::NewActivityType *)(v1 + 1056));
    if ( *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1072, "NEW_ACTIVITY_SEA_LAMP_2_4");
    *(_DWORD *)(v1 + 1072) = 2501;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[29],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4016),
      (const char (*)[29])"NEW_ACTIVITY_MICHIAE_MATSURI",
      (data::NewActivityType *)(v1 + 1072));
    if ( *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1088, "NEW_ACTIVITY_MICHIAE_MATSURI");
    *(_DWORD *)(v1 + 1088) = 2502;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[23],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4056),
      (const char (*)[23])"NEW_ACTIVITY_BARTENDER",
      (data::NewActivityType *)(v1 + 1088));
    if ( *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1104, "NEW_ACTIVITY_BARTENDER");
    *(_DWORD *)(v1 + 1104) = 2503;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[17],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4096),
      (const char (*)[17])"NEW_ACTIVITY_UGC",
      (data::NewActivityType *)(v1 + 1104));
    if ( *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1120, "NEW_ACTIVITY_UGC");
    *(_DWORD *)(v1 + 1120) = 2600;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[21],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4136),
      (const char (*)[21])"NEW_ACTIVITY_IRODORI",
      (data::NewActivityType *)(v1 + 1120));
    if ( *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1136, "NEW_ACTIVITY_IRODORI");
    *(_DWORD *)(v1 + 1136) = 2601;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[26],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4176),
      (const char (*)[26])"NEW_ACTIVITY_CRYSTAL_LINK",
      (data::NewActivityType *)(v1 + 1136));
    if ( *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1152, "NEW_ACTIVITY_CRYSTAL_LINK");
    *(_DWORD *)(v1 + 1152) = 2602;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4216),
      (const char (*)[19])"NEW_ACTIVITY_SPICE",
      (data::NewActivityType *)(v1 + 1152));
    if ( *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1168, "NEW_ACTIVITY_SPICE");
    *(_DWORD *)(v1 + 1168) = 2603;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4256),
      (const char (*)[19])"NEW_ACTIVITY_PHOTO",
      (data::NewActivityType *)(v1 + 1168));
    if ( *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1184, "NEW_ACTIVITY_PHOTO");
    *(_DWORD *)(v1 + 1184) = 2702;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[39],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4296),
      (const char (*)[39])"NEW_ACTIVITY_LUMINANCE_STONE_CHALLENGE",
      (data::NewActivityType *)(v1 + 1184));
    if ( *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1200, "NEW_ACTIVITY_LUMINANCE_STONE_CHALLENGE");
    *(_DWORD *)(v1 + 1200) = 2703;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[19],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4336),
      (const char (*)[19])"NEW_ACTIVITY_GACHA",
      (data::NewActivityType *)(v1 + 1200));
    if ( *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1216, "NEW_ACTIVITY_GACHA");
    *(_DWORD *)(v1 + 1216) = 2704;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[25],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4376),
      (const char (*)[25])"NEW_ACTIVITY_ROGUE_DIARY",
      (data::NewActivityType *)(v1 + 1216));
    if ( *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1232, "NEW_ACTIVITY_ROGUE_DIARY");
    *(_DWORD *)(v1 + 1232) = 2801;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[29],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4416),
      (const char (*)[29])"NEW_ACTIVITY_SUMMER_TIME_2_8",
      (data::NewActivityType *)(v1 + 1232));
    if ( *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1248, "NEW_ACTIVITY_SUMMER_TIME_2_8");
    *(_DWORD *)(v1 + 1248) = 2802;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[18],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4456),
      (const char (*)[18])"NEW_ACTIVITY_GEAR",
      (data::NewActivityType *)(v1 + 1248));
    if ( *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1264, "NEW_ACTIVITY_GEAR");
    *(_DWORD *)(v1 + 1264) = 2803;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[26],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4496),
      (const char (*)[26])"NEW_ACTIVITY_ISLAND_PARTY",
      (data::NewActivityType *)(v1 + 1264));
    if ( *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1280, "NEW_ACTIVITY_ISLAND_PARTY");
    *(_DWORD *)(v1 + 1280) = 3000;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[30],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4536),
      (const char (*)[30])"NEW_ACTIVITY_GRAVEN_INNOCENCE",
      (data::NewActivityType *)(v1 + 1280));
    if ( *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1296, "NEW_ACTIVITY_GRAVEN_INNOCENCE");
    *(_DWORD *)(v1 + 1296) = 3001;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4576),
      (const char (*)[28])"NEW_ACTIVITY_INSTABLE_SPRAY",
      (data::NewActivityType *)(v1 + 1296));
    if ( *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1312, "NEW_ACTIVITY_INSTABLE_SPRAY");
    *(_DWORD *)(v1 + 1312) = 3002;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4616),
      (const char (*)[28])"NEW_ACTIVITY_MUQADAS_POTION",
      (data::NewActivityType *)(v1 + 1312));
    if ( *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1328, "NEW_ACTIVITY_MUQADAS_POTION");
    *(_DWORD *)(v1 + 1328) = 3003;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[29],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4656),
      (const char (*)[29])"NEW_ACTIVITY_TREASURE_SEELIE",
      (data::NewActivityType *)(v1 + 1328));
    if ( *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1344, "NEW_ACTIVITY_TREASURE_SEELIE");
    *(_DWORD *)(v1 + 1344) = 3101;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[24],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4696),
      (const char (*)[24])"NEW_ACTIVITY_WIND_FIELD",
      (data::NewActivityType *)(v1 + 1344));
    if ( *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1360, "NEW_ACTIVITY_WIND_FIELD");
    *(_DWORD *)(v1 + 1360) = 3102;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[32],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4736),
      (const char (*)[32])"NEW_ACTIVITY_ROCK_BOARD_EXPLORE",
      (data::NewActivityType *)(v1 + 1360));
    if ( *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1376, "NEW_ACTIVITY_ROCK_BOARD_EXPLORE");
    *(_DWORD *)(v1 + 1376) = 3103;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[21],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4776),
      (const char (*)[21])"NEW_ACTIVITY_VINTAGE",
      (data::NewActivityType *)(v1 + 1376));
    if ( *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1392, "NEW_ACTIVITY_VINTAGE");
    *(_DWORD *)(v1 + 1392) = 3201;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4816),
      (const char (*)[28])"NEW_ACTIVITY_FUNGUS_FIGHTER",
      (data::NewActivityType *)(v1 + 1392));
    if ( *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1408, "NEW_ACTIVITY_FUNGUS_FIGHTER");
    *(_DWORD *)(v1 + 1408) = 3202;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[28],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4856),
      (const char (*)[28])"NEW_ACTIVITY_CHAR_AMUSEMENT",
      (data::NewActivityType *)(v1 + 1408));
    if ( *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1424, "NEW_ACTIVITY_CHAR_AMUSEMENT");
    *(_DWORD *)(v1 + 1424) = 3203;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[33],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4896),
      (const char (*)[33])"NEW_ACTIVITY_EFFIGY_CHALLENGE_V2",
      (data::NewActivityType *)(v1 + 1424));
    if ( *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1440, "NEW_ACTIVITY_EFFIGY_CHALLENGE_V2");
    *(_DWORD *)(v1 + 1440) = 3300;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[27],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4936),
      (const char (*)[27])"NEW_ACTIVITY_BRICK_BREAKER",
      (data::NewActivityType *)(v1 + 1440));
    if ( *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1456, "NEW_ACTIVITY_BRICK_BREAKER");
    *(_DWORD *)(v1 + 1456) = 3301;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[26],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 4976),
      (const char (*)[26])"NEW_ACTIVITY_COIN_COLLECT",
      (data::NewActivityType *)(v1 + 1456));
    if ( *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1472, "NEW_ACTIVITY_COIN_COLLECT");
    *(_DWORD *)(v1 + 1472) = 3400;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[24],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 5016),
      (const char (*)[24])"NEW_ACTIVITY_DUEL_HEART",
      (data::NewActivityType *)(v1 + 1472));
    if ( *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1488, "NEW_ACTIVITY_DUEL_HEART");
    *(_DWORD *)(v1 + 1488) = 3401;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[26],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 5056),
      (const char (*)[26])"NEW_ACTIVITY_SEA_LAMP_3_4",
      (data::NewActivityType *)(v1 + 1488));
    if ( *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1504, "NEW_ACTIVITY_SEA_LAMP_3_4");
    *(_DWORD *)(v1 + 1504) = 3402;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[36],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 5096),
      (const char (*)[36])"NEW_ACTIVITY_ELECTROHERCULES_BATTLE",
      (data::NewActivityType *)(v1 + 1504));
    if ( *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1520, "NEW_ACTIVITY_ELECTROHERCULES_BATTLE");
    *(_DWORD *)(v1 + 1520) = 3403;
    std::pair<std::string const,data::NewActivityType>::pair<char const(&)[24],data::NewActivityType,true>(
      (std::pair<const std::string,data::NewActivityType> *const)(v1 + 5136),
      (const char (*)[24])"NEW_ACTIVITY_TEAM_CHAIN",
      (data::NewActivityType *)(v1 + 1520));
    std::allocator<std::pair<std::string const,data::NewActivityType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityType> > *const)(v1 + 64));
    std::unordered_map<std::string,data::NewActivityType>::unordered_map(
      &data::getNewActivityTypeNameMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const std::string,data::NewActivityType> >)__PAIR128__(91LL, v1 + 1536),
      0LL,
      (const std::unordered_map<std::string,data::NewActivityType>::hasher *)(v1 + 32),
      (const std::unordered_map<std::string,data::NewActivityType>::key_equal *)(v1 + 48),
      (const std::unordered_map<std::string,data::NewActivityType>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityTypeNameMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityType>::~unordered_map,
      &data::getNewActivityTypeNameMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<std::string const,data::NewActivityType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityType> > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const std::string,data::NewActivityType> *)(v1 + 5176);
          i != (std::pair<const std::string,data::NewActivityType> *)(v1 + 1536);
          std::pair<std::string const,data::NewActivityType>::~pair(i) )
    {
      --i;
    }
  }
  if ( v6 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8290) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 664) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_7(v1, 5312LL, v6);
  }
  return &data::getNewActivityTypeNameMap[abi:cxx11](void)::m;
};

// Line 273: range 000000000EE8EDF0-000000000EE9592F
const std::map<data::NewActivityType,std::pair<std::string,std::string >> *__cdecl data::getNewActivityTypeEnumMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *i; // r14
  _DWORD *v5; // rax
  _DWORD *v6; // rax
  _DWORD *v7; // rax
  _DWORD *v8; // rax
  _DWORD *v9; // rax
  _DWORD *v10; // rax
  _DWORD *v11; // rax
  _DWORD *v12; // rax
  _DWORD *v13; // rax
  _DWORD *v14; // rax
  _DWORD *v15; // rax
  _DWORD *v16; // rax
  _DWORD *v17; // rax
  _DWORD *v18; // rax
  _DWORD *v19; // rax
  _DWORD *v20; // rax
  _DWORD *v21; // rax
  _DWORD *v22; // rax
  _DWORD *v23; // rax
  _DWORD *v24; // rax
  _DWORD *v25; // rax
  _DWORD *v26; // rax
  _DWORD *v27; // rax
  _DWORD *v28; // rax
  _DWORD *v29; // rax
  _DWORD *v30; // rax
  _DWORD *v31; // rax
  _DWORD *v32; // rax
  _DWORD *v33; // rax
  _DWORD *v34; // rax
  _DWORD *v35; // rax
  _DWORD *v36; // rax
  _DWORD *v37; // rax
  _DWORD *v38; // rax
  _DWORD *v39; // rax
  _DWORD *v40; // rax
  _DWORD *v41; // rax
  _DWORD *v42; // rax
  _DWORD *v43; // rax
  _DWORD *v44; // rax
  _DWORD *v45; // rax
  _DWORD *v46; // rax
  _DWORD *v47; // rax
  _DWORD *v48; // rax
  _DWORD *v49; // rax
  _DWORD *v50; // rax
  _DWORD *v51; // rax
  _DWORD *v52; // rax
  _DWORD *v53; // rax
  _DWORD *v54; // rax
  _DWORD *v55; // rax
  _DWORD *v56; // rax
  _DWORD *v57; // rax
  _DWORD *v58; // rax
  _DWORD *v59; // rax
  _DWORD *v60; // rax
  _DWORD *v61; // rax
  _DWORD *v62; // rax
  _DWORD *v63; // rax
  _DWORD *v64; // rax
  _DWORD *v65; // rax
  _DWORD *v66; // rax
  _DWORD *v67; // rax
  _DWORD *v68; // rax
  _DWORD *v69; // rax
  _DWORD *v70; // rax
  _DWORD *v71; // rax
  _DWORD *v72; // rax
  _DWORD *v73; // rax
  _DWORD *v74; // rax
  _DWORD *v75; // rax
  _DWORD *v76; // rax
  _DWORD *v77; // rax
  _DWORD *v78; // rax
  _DWORD *v79; // rax
  _DWORD *v80; // rax
  _DWORD *v81; // rax
  _DWORD *v82; // rax
  _DWORD *v83; // rax
  _DWORD *v84; // rax
  _DWORD *v85; // rax
  _DWORD *v86; // rax
  _DWORD *v87; // rax
  _DWORD *v88; // rax
  _DWORD *v89; // rax
  _DWORD *v90; // rax
  _DWORD *v91; // rax
  _DWORD *v92; // rax
  _DWORD *v93; // rax
  _DWORD *v94; // rax
  char v96[17136]; // [rsp+10h] [rbp-42F0h] BYREF

  v1 = (unsigned __int64)v96;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_9(17088LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "185 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9 <unknown> 128 4 "
                        "9 <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 4 9 <unknown> 208 4 9 <unk"
                        "nown> 224 4 9 <unknown> 240 4 9 <unknown> 256 4 9 <unknown> 272 4 9 <unknown> 288 4 9 <unknown> "
                        "304 4 9 <unknown> 320 4 9 <unknown> 336 4 9 <unknown> 352 4 9 <unknown> 368 4 9 <unknown> 384 4 "
                        "9 <unknown> 400 4 9 <unknown> 416 4 9 <unknown> 432 4 9 <unknown> 448 4 9 <unknown> 464 4 9 <unk"
                        "nown> 480 4 9 <unknown> 496 4 9 <unknown> 512 4 9 <unknown> 528 4 9 <unknown> 544 4 9 <unknown> "
                        "560 4 9 <unknown> 576 4 9 <unknown> 592 4 9 <unknown> 608 4 9 <unknown> 624 4 9 <unknown> 640 4 "
                        "9 <unknown> 656 4 9 <unknown> 672 4 9 <unknown> 688 4 9 <unknown> 704 4 9 <unknown> 720 4 9 <unk"
                        "nown> 736 4 9 <unknown> 752 4 9 <unknown> 768 4 9 <unknown> 784 4 9 <unknown> 800 4 9 <unknown> "
                        "816 4 9 <unknown> 832 4 9 <unknown> 848 4 9 <unknown> 864 4 9 <unknown> 880 4 9 <unknown> 896 4 "
                        "9 <unknown> 912 4 9 <unknown> 928 4 9 <unknown> 944 4 9 <unknown> 960 4 9 <unknown> 976 4 9 <unk"
                        "nown> 992 4 9 <unknown> 1008 4 9 <unknown> 1024 4 9 <unknown> 1040 4 9 <unknown> 1056 4 9 <unkno"
                        "wn> 1072 4 9 <unknown> 1088 4 9 <unknown> 1104 4 9 <unknown> 1120 4 9 <unknown> 1136 4 9 <unknow"
                        "n> 1152 4 9 <unknown> 1168 4 9 <unknown> 1184 4 9 <unknown> 1200 4 9 <unknown> 1216 4 9 <unknown"
                        "> 1232 4 9 <unknown> 1248 4 9 <unknown> 1264 4 9 <unknown> 1280 4 9 <unknown> 1296 4 9 <unknown>"
                        " 1312 4 9 <unknown> 1328 4 9 <unknown> 1344 4 9 <unknown> 1360 4 9 <unknown> 1376 4 9 <unknown> "
                        "1392 4 9 <unknown> 1408 4 9 <unknown> 1424 4 9 <unknown> 1440 4 9 <unknown> 1456 4 9 <unknown> 1"
                        "472 4 9 <unknown> 1488 4 9 <unknown> 1504 4 9 <unknown> 1520 4 9 <unknown> 1536 64 9 <unknown> 1"
                        "632 64 9 <unknown> 1728 64 9 <unknown> 1824 64 9 <unknown> 1920 64 9 <unknown> 2016 64 9 <unknow"
                        "n> 2112 64 9 <unknown> 2208 64 9 <unknown> 2304 64 9 <unknown> 2400 64 9 <unknown> 2496 64 9 <un"
                        "known> 2592 64 9 <unknown> 2688 64 9 <unknown> 2784 64 9 <unknown> 2880 64 9 <unknown> 2976 64 9"
                        " <unknown> 3072 64 9 <unknown> 3168 64 9 <unknown> 3264 64 9 <unknown> 3360 64 9 <unknown> 3456 "
                        "64 9 <unknown> 3552 64 9 <unknown> 3648 64 9 <unknown> 3744 64 9 <unknown> 3840 64 9 <unknown> 3"
                        "936 64 9 <unknown> 4032 64 9 <unknown> 4128 64 9 <unknown> 4224 64 9 <unknown> 4320 64 9 <unknow"
                        "n> 4416 64 9 <unknown> 4512 64 9 <unknown> 4608 64 9 <unknown> 4704 64 9 <unknown> 4800 64 9 <un"
                        "known> 4896 64 9 <unknown> 4992 64 9 <unknown> 5088 64 9 <unknown> 5184 64 9 <unknown> 5280 64 9"
                        " <unknown> 5376 64 9 <unknown> 5472 64 9 <unknown> 5568 64 9 <unknown> 5664 64 9 <unknown> 5760 "
                        "64 9 <unknown> 5856 64 9 <unknown> 5952 64 9 <unknown> 6048 64 9 <unknown> 6144 64 9 <unknown> 6"
                        "240 64 9 <unknown> 6336 64 9 <unknown> 6432 64 9 <unknown> 6528 64 9 <unknown> 6624 64 9 <unknow"
                        "n> 6720 64 9 <unknown> 6816 64 9 <unknown> 6912 64 9 <unknown> 7008 64 9 <unknown> 7104 64 9 <un"
                        "known> 7200 64 9 <unknown> 7296 64 9 <unknown> 7392 64 9 <unknown> 7488 64 9 <unknown> 7584 64 9"
                        " <unknown> 7680 64 9 <unknown> 7776 64 9 <unknown> 7872 64 9 <unknown> 7968 64 9 <unknown> 8064 "
                        "64 9 <unknown> 8160 64 9 <unknown> 8256 64 9 <unknown> 8352 64 9 <unknown> 8448 64 9 <unknown> 8"
                        "544 64 9 <unknown> 8640 64 9 <unknown> 8736 64 9 <unknown> 8832 64 9 <unknown> 8928 64 9 <unknow"
                        "n> 9024 64 9 <unknown> 9120 64 9 <unknown> 9216 64 9 <unknown> 9312 64 9 <unknown> 9408 64 9 <un"
                        "known> 9504 64 9 <unknown> 9600 64 9 <unknown> 9696 64 9 <unknown> 9792 64 9 <unknown> 9888 64 9"
                        " <unknown> 9984 64 9 <unknown> 10080 64 9 <unknown> 10176 64 9 <unknown> 10272 6552 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityTypeEnumMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753551;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862724] = -234556924;
  v3[536862725] = -234556924;
  v3[536862726] = -234556924;
  v3[536862727] = -234556924;
  v3[536862728] = -234556924;
  v3[536862729] = -234556924;
  v3[536862730] = -234556924;
  v3[536862731] = -234556924;
  v3[536862732] = -234556924;
  v3[536862733] = -234556924;
  v3[536862734] = -234556924;
  v3[536862735] = -234556924;
  v3[536862736] = -234556924;
  v3[536862737] = -234556924;
  v3[536862738] = -234556924;
  v3[536862739] = -234556924;
  v3[536862740] = -234556924;
  v3[536862741] = -234556924;
  v3[536862742] = -234556924;
  v3[536862743] = -234556924;
  v3[536862744] = -234556924;
  v3[536862745] = -234556924;
  v3[536862746] = -234556924;
  v3[536862747] = -234556924;
  v3[536862748] = -234556924;
  v3[536862749] = -234556924;
  v3[536862750] = -234556924;
  v3[536862751] = -234556924;
  v3[536862752] = -234556924;
  v3[536862753] = -234556924;
  v3[536862754] = -234556924;
  v3[536862755] = -234556924;
  v3[536862756] = -234556924;
  v3[536862757] = -234556924;
  v3[536862758] = -234556924;
  v3[536862759] = -234556924;
  v3[536862760] = -234556924;
  v3[536862761] = -234556924;
  v3[536862762] = -234556924;
  v3[536862763] = -234556924;
  v3[536862764] = -234556924;
  v3[536862765] = -234556924;
  v3[536862766] = -234556924;
  v3[536862767] = -234556924;
  v3[536862770] = -218959118;
  v3[536862773] = -218959118;
  v3[536862776] = -218959118;
  v3[536862779] = -218959118;
  v3[536862782] = -218959118;
  v3[536862785] = -218959118;
  v3[536862788] = -218959118;
  v3[536862791] = -218959118;
  v3[536862794] = -218959118;
  v3[536862797] = -218959118;
  v3[536862800] = -218959118;
  v3[536862803] = -218959118;
  v3[536862806] = -218959118;
  v3[536862809] = -218959118;
  v3[536862812] = -218959118;
  v3[536862815] = -218959118;
  v3[536862818] = -218959118;
  v3[536862821] = -218959118;
  v3[536862824] = -218959118;
  v3[536862827] = -218959118;
  v3[536862830] = -218959118;
  v3[536862833] = -218959118;
  v3[536862836] = -218959118;
  v3[536862839] = -218959118;
  v3[536862842] = -218959118;
  v3[536862845] = -218959118;
  v3[536862848] = -218959118;
  v3[536862851] = -218959118;
  v3[536862854] = -218959118;
  v3[536862857] = -218959118;
  v3[536862860] = -218959118;
  v3[536862863] = -218959118;
  v3[536862866] = -218959118;
  v3[536862869] = -218959118;
  v3[536862872] = -218959118;
  v3[536862875] = -218959118;
  v3[536862878] = -218959118;
  v3[536862881] = -218959118;
  v3[536862884] = -218959118;
  v3[536862887] = -218959118;
  v3[536862890] = -218959118;
  v3[536862893] = -218959118;
  v3[536862896] = -218959118;
  v3[536862899] = -218959118;
  v3[536862902] = -218959118;
  v3[536862905] = -218959118;
  v3[536862908] = -218959118;
  v3[536862911] = -218959118;
  v3[536862914] = -218959118;
  v3[536862917] = -218959118;
  v3[536862920] = -218959118;
  v3[536862923] = -218959118;
  v3[536862926] = -218959118;
  v3[536862929] = -218959118;
  v3[536862932] = -218959118;
  v3[536862935] = -218959118;
  v3[536862938] = -218959118;
  v3[536862941] = -218959118;
  v3[536862944] = -218959118;
  v3[536862947] = -218959118;
  v3[536862950] = -218959118;
  v3[536862953] = -218959118;
  v3[536862956] = -218959118;
  v3[536862959] = -218959118;
  v3[536862962] = -218959118;
  v3[536862965] = -218959118;
  v3[536862968] = -218959118;
  v3[536862971] = -218959118;
  v3[536862974] = -218959118;
  v3[536862977] = -218959118;
  v3[536862980] = -218959118;
  v3[536862983] = -218959118;
  v3[536862986] = -218959118;
  v3[536862989] = -218959118;
  v3[536862992] = -218959118;
  v3[536862995] = -218959118;
  v3[536862998] = -218959118;
  v3[536863001] = -218959118;
  v3[536863004] = -218959118;
  v3[536863007] = -218959118;
  v3[536863010] = -218959118;
  v3[536863013] = -218959118;
  v3[536863016] = -218959118;
  v3[536863019] = -218959118;
  v3[536863022] = -218959118;
  v3[536863025] = -218959118;
  v3[536863028] = -218959118;
  v3[536863031] = -218959118;
  v3[536863034] = -218959118;
  v3[536863037] = -218959118;
  v3[536863040] = -218959118;
  v3[536863245] = -218103808;
  v3[536863246] = -202116109;
  v3[536863247] = -202116109;
  v3[536863248] = -202116109;
  v3[536863249] = -202116109;
  v3[536863250] = -202116109;
  v3[536863251] = -202116109;
  v3[536863252] = -202116109;
  v3[536863253] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityTypeEnumMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityTypeEnumMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string,std::string>::pair<char const(&)[1],char const(&)[21],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1536),
      (const char (*)[1])byte_1A3FEBE0,
      (const char (*)[21])"NEW_ACTIVITY_GENERAL");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10272),
      (data::NewActivityType *)(v1 + 80),
      (const std::pair<std::string,std::string > *)(v1 + 1536));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, v1 + 80);
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[22],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1632),
      (const char (*)[10])byte_1A43C6C0,
      (const char (*)[22])"NEW_ACTIVITY_SEA_LAMP");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10344),
      (data::NewActivityType *)(v1 + 96),
      (const std::pair<std::string,std::string > *)(v1 + 1632));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, v1 + 96);
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[22],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1728),
      (const char (*)[10])byte_1A43C700,
      (const char (*)[22])"NEW_ACTIVITY_CRUCIBLE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10416),
      (data::NewActivityType *)(v1 + 112),
      (const std::pair<std::string,std::string > *)(v1 + 1728));
    if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 128, v1 + 112);
    *(_DWORD *)(v1 + 128) = 3;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[22],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1824),
      (const char (*)[13])byte_1A43C740,
      (const char (*)[22])"NEW_ACTIVITY_SALESMAN");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10488),
      (data::NewActivityType *)(v1 + 128),
      (const std::pair<std::string,std::string > *)(v1 + 1824));
    if ( *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 144, v1 + 128);
    *(_DWORD *)(v1 + 144) = 4;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[26],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1920),
      (const char (*)[13])byte_1A43C780,
      (const char (*)[26])"NEW_ACTIVITY_TRIAL_AVATAR");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10560),
      (data::NewActivityType *)(v1 + 144),
      (const std::pair<std::string,std::string > *)(v1 + 1920));
    if ( *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 160, v1 + 144);
    *(_DWORD *)(v1 + 160) = 5;
    std::pair<std::string,std::string>::pair<char const(&)[7],char const(&)[20],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2016),
      (const char (*)[7])byte_1A43C7C0,
      (const char (*)[20])"NEW_ACTIVITY_SIGNIN");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10632),
      (data::NewActivityType *)(v1 + 160),
      (const std::pair<std::string,std::string > *)(v1 + 2016));
    if ( *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 176, v1 + 160);
    *(_DWORD *)(v1 + 176) = 6;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[19],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2112),
      (const char (*)[13])byte_1A43C800,
      (const char (*)[19])"NEW_ACTIVITY_BONUS");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10704),
      (data::NewActivityType *)(v1 + 176),
      (const std::pair<std::string,std::string > *)(v1 + 2112));
    if ( *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 192, v1 + 176);
    *(_DWORD *)(v1 + 192) = 7;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[25],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2208),
      (const char (*)[13])byte_1A43C840,
      (const char (*)[25])"NEW_ACTIVITY_NEWBEEBONUS");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10776),
      (data::NewActivityType *)(v1 + 192),
      (const std::pair<std::string,std::string > *)(v1 + 2208));
    if ( *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 208, v1 + 192);
    *(_DWORD *)(v1 + 208) = 8;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2304),
      (const char (*)[16])byte_1A43C880,
      (const char (*)[28])"NEW_ACTIVITY_PERSONAL_LIINE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10848),
      (data::NewActivityType *)(v1 + 208),
      (const std::pair<std::string,std::string > *)(v1 + 2304));
    if ( *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 224, v1 + 208);
    *(_DWORD *)(v1 + 224) = 9;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[22],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2400),
      (const char (*)[10])byte_1A43C8C0,
      (const char (*)[22])"NEW_ACTIVITY_DELIVERY");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10920),
      (data::NewActivityType *)(v1 + 224),
      (const std::pair<std::string,std::string > *)(v1 + 2400));
    if ( *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 240, v1 + 224);
    *(_DWORD *)(v1 + 240) = 10;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[20],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2496),
      (const char (*)[13])byte_1A43C900,
      (const char (*)[20])"NEW_ACTIVITY_FLIGHT");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 10992),
      (data::NewActivityType *)(v1 + 240),
      (const std::pair<std::string,std::string > *)(v1 + 2496));
    if ( *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 256, v1 + 240);
    *(_DWORD *)(v1 + 256) = 1100;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[19],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2592),
      (const char (*)[16])byte_1A43C940,
      (const char (*)[19])"NEW_ACTIVITY_ASTER");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11064),
      (data::NewActivityType *)(v1 + 256),
      (const std::pair<std::string,std::string > *)(v1 + 2592));
    if ( *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 272, v1 + 256);
    *(_DWORD *)(v1 + 272) = 1200;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[25],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2688),
      (const char (*)[16])byte_1A43C980,
      (const char (*)[25])"NEW_ACTIVITY_DRAGONSPINE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11136),
      (data::NewActivityType *)(v1 + 272),
      (const std::pair<std::string,std::string > *)(v1 + 2688));
    if ( *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 288, v1 + 272);
    *(_DWORD *)(v1 + 288) = 1201;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[21],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2784),
      (const char (*)[13])byte_1A43C9C0,
      (const char (*)[21])"NEW_ACTIVITY_REUNION");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11208),
      (data::NewActivityType *)(v1 + 288),
      (const std::pair<std::string,std::string > *)(v1 + 2784));
    if ( *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 304, v1 + 288);
    *(_DWORD *)(v1 + 304) = 1202;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[20],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2880),
      (const char (*)[13])byte_1A43CA00,
      (const char (*)[20])"NEW_ACTIVITY_EFFIGY");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11280),
      (data::NewActivityType *)(v1 + 304),
      (const std::pair<std::string,std::string > *)(v1 + 2880));
    if ( *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 320, v1 + 304);
    *(_DWORD *)(v1 + 320) = 1203;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[25],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2976),
      (const char (*)[13])byte_1A43CA40,
      (const char (*)[25])"NEW_ACTIVITY_TOWER_RESET");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11352),
      (data::NewActivityType *)(v1 + 320),
      (const std::pair<std::string,std::string > *)(v1 + 2976));
    if ( *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 336, v1 + 320);
    *(_DWORD *)(v1 + 336) = 1204;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[26],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3072),
      (const char (*)[10])byte_1A43CA80,
      (const char (*)[26])"NEW_ACTIVITY_TREASURE_MAP");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11424),
      (data::NewActivityType *)(v1 + 336),
      (const std::pair<std::string,std::string > *)(v1 + 3072));
    if ( *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 352, v1 + 336);
    *(_DWORD *)(v1 + 352) = 99;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[18],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3168),
      (const char (*)[10])byte_1A43CAC0,
      (const char (*)[18])"NEW_ACTIVITY_TEMP");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11496),
      (data::NewActivityType *)(v1 + 352),
      (const std::pair<std::string,std::string > *)(v1 + 3168));
    if ( *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 368, v1 + 352);
    *(_DWORD *)(v1 + 368) = 1205;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[25],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3264),
      (const char (*)[22])byte_1A43CB00,
      (const char (*)[25])"NEW_ACTIVITY_SALESMAN_MP");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11568),
      (data::NewActivityType *)(v1 + 368),
      (const std::pair<std::string,std::string > *)(v1 + 3264));
    if ( *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 384, v1 + 368);
    *(_DWORD *)(v1 + 384) = 1300;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[22],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3360),
      (const char (*)[10])byte_1A43CB40,
      (const char (*)[22])"NEW_ACTIVITY_BLESSING");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11640),
      (data::NewActivityType *)(v1 + 384),
      (const std::pair<std::string,std::string > *)(v1 + 3360));
    if ( *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 400, v1 + 384);
    *(_DWORD *)(v1 + 400) = 1301;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[24],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3456),
      (const char (*)[13])byte_1A43CB80,
      (const char (*)[24])"NEW_ACTIVITY_EXPEDITION");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11712),
      (data::NewActivityType *)(v1 + 400),
      (const std::pair<std::string,std::string > *)(v1 + 3456));
    if ( *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 416, v1 + 400);
    *(_DWORD *)(v1 + 416) = 1302;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[26],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3552),
      (const char (*)[16])byte_1A43CBC0,
      (const char (*)[26])"NEW_ACTIVITY_SEA_LAMP_NEW");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11784),
      (data::NewActivityType *)(v1 + 416),
      (const std::pair<std::string,std::string > *)(v1 + 3552));
    if ( *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 432, v1 + 416);
    *(_DWORD *)(v1 + 432) = 1401;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[30],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3648),
      (const char (*)[19])byte_1A43CC00,
      (const char (*)[30])"NEW_ACTIVITY_OPERATIONS_BONUS");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11856),
      (data::NewActivityType *)(v1 + 432),
      (const std::pair<std::string,std::string > *)(v1 + 3648));
    if ( *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 448, v1 + 432);
    *(_DWORD *)(v1 + 448) = 1501;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3744),
      (const char (*)[19])byte_1A43CC40,
      (const char (*)[45])"NEW_ACTIVITY_MONSTER_BANNER_DRAKE_PRIMO_ROCK");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 11928),
      (data::NewActivityType *)(v1 + 448),
      (const std::pair<std::string,std::string > *)(v1 + 3744));
    if ( *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 464, v1 + 448);
    *(_DWORD *)(v1 + 464) = 1400;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[24],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3840),
      (const char (*)[10])byte_1A43CC80,
      (const char (*)[24])"NEW_ACTIVITY_FLEUR_FAIR");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12000),
      (data::NewActivityType *)(v1 + 464),
      (const std::pair<std::string,std::string > *)(v1 + 3840));
    if ( *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 480, v1 + 464);
    *(_DWORD *)(v1 + 480) = 1402;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[29],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3936),
      (const char (*)[13])byte_1A43CCC0,
      (const char (*)[29])"NEW_ACTIVITY_ARENA_CHALLENGE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12072),
      (data::NewActivityType *)(v1 + 480),
      (const std::pair<std::string,std::string > *)(v1 + 3936));
    if ( *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 496, v1 + 480);
    *(_DWORD *)(v1 + 496) = 1403;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[36],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4032),
      (const char (*)[19])byte_1A43CD00,
      (const char (*)[36])"NEW_ACTIVITY_WATER_SPIRIT_CHALLENGE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12144),
      (data::NewActivityType *)(v1 + 496),
      (const std::pair<std::string,std::string > *)(v1 + 4032));
    if ( *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 512, v1 + 496);
    *(_DWORD *)(v1 + 512) = 1404;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[30],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4128),
      (const char (*)[19])byte_1A43CD40,
      (const char (*)[30])"NEW_ACTIVITY_SIGNIN_COMPANION");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12216),
      (data::NewActivityType *)(v1 + 512),
      (const std::pair<std::string,std::string > *)(v1 + 4128));
    if ( *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 528, v1 + 512);
    *(_DWORD *)(v1 + 528) = 1405;
    std::pair<std::string,std::string>::pair<char const(&)[11],char const(&)[18],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4224),
      (const char (*)[11])byte_1A43CD80,
      (const char (*)[18])"NEW_ACTIVITY_COOP");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12288),
      (data::NewActivityType *)(v1 + 528),
      (const std::pair<std::string,std::string > *)(v1 + 4224));
    if ( *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 544, v1 + 528);
    *(_DWORD *)(v1 + 544) = 1502;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4320),
      (const char (*)[13])byte_1A43CDC0,
      (const char (*)[28])"NEW_ACTIVITY_CHANNELER_SLAB");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12360),
      (data::NewActivityType *)(v1 + 544),
      (const std::pair<std::string,std::string > *)(v1 + 4320));
    if ( *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 560, v1 + 544);
    *(_DWORD *)(v1 + 560) = 1503;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[23],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4416),
      (const char (*)[13])byte_1A43CE00,
      (const char (*)[23])"NEW_ACTIVITY_MISTTRIAL");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12432),
      (data::NewActivityType *)(v1 + 560),
      (const std::pair<std::string,std::string > *)(v1 + 4416));
    if ( *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 576, v1 + 560);
    *(_DWORD *)(v1 + 576) = 1504;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[25],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4512),
      (const char (*)[10])byte_1A43CE40,
      (const char (*)[25])"NEW_ACTIVITY_HIDEANDSEEK");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12504),
      (data::NewActivityType *)(v1 + 576),
      (const std::pair<std::string,std::string > *)(v1 + 4512));
    if ( *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 592, v1 + 576);
    *(_DWORD *)(v1 + 592) = 1505;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4608),
      (const char (*)[16])byte_1A43CE80,
      (const char (*)[28])"NEW_ACTIVITY_FIND_HILICHURL");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12576),
      (data::NewActivityType *)(v1 + 592),
      (const std::pair<std::string,std::string > *)(v1 + 4608));
    if ( *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 608, v1 + 592);
    *(_DWORD *)(v1 + 608) = 1506;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4704),
      (const char (*)[19])byte_1A43CEC0,
      (const char (*)[39])"NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_ICE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12648),
      (data::NewActivityType *)(v1 + 608),
      (const std::pair<std::string,std::string > *)(v1 + 4704));
    if ( *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 624, v1 + 608);
    *(_DWORD *)(v1 + 624) = 1507;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[23],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4800),
      (const char (*)[13])byte_1A43CF00,
      (const char (*)[23])"NEW_ACTIVITY_HOMEWORLD");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12720),
      (data::NewActivityType *)(v1 + 624),
      (const std::pair<std::string,std::string > *)(v1 + 4800));
    if ( *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 640, v1 + 624);
    *(_DWORD *)(v1 + 640) = 1508;
    std::pair<std::string,std::string>::pair<char const(&)[15],char const(&)[16],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4896),
      (const char (*)[15])byte_1A43CF40,
      (const char (*)[16])"NEW_ACTIVITY_H5");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12792),
      (data::NewActivityType *)(v1 + 640),
      (const std::pair<std::string,std::string > *)(v1 + 4896));
    if ( *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 656, v1 + 640);
    *(_DWORD *)(v1 + 656) = 1600;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[25],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4992),
      (const char (*)[10])byte_1A43CF80,
      (const char (*)[25])"NEW_ACTIVITY_SUMMER_TIME");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12864),
      (data::NewActivityType *)(v1 + 656),
      (const std::pair<std::string,std::string > *)(v1 + 4992));
    if ( *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 672, v1 + 656);
    *(_DWORD *)(v1 + 672) = 1601;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5088),
      (const char (*)[13])byte_1A43CFC0,
      (const char (*)[28])"NEW_ACTIVITY_BUOYANT_COMBAT");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 12936),
      (data::NewActivityType *)(v1 + 672),
      (const std::pair<std::string,std::string > *)(v1 + 5088));
    if ( *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 688, v1 + 672);
    *(_DWORD *)(v1 + 688) = 1602;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[24],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5184),
      (const char (*)[13])byte_1A43D000,
      (const char (*)[24])"NEW_ACTIVITY_ECHO_SHELL");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13008),
      (data::NewActivityType *)(v1 + 688),
      (const std::pair<std::string,std::string > *)(v1 + 5184));
    if ( *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 704, v1 + 688);
    *(_DWORD *)(v1 + 704) = 1603;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[30],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5280),
      (const char (*)[19])byte_1A43D040,
      (const char (*)[30])"NEW_ACTIVITY_BOUNCE_CONJURING");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13080),
      (data::NewActivityType *)(v1 + 704),
      (const std::pair<std::string,std::string > *)(v1 + 5280));
    if ( *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 720, v1 + 704);
    *(_DWORD *)(v1 + 720) = 1604;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5376),
      (const char (*)[25])byte_1A43D080,
      (const char (*)[33])"NEW_ACTIVITY_DAOQI_ADVERTISEMENT");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13152),
      (data::NewActivityType *)(v1 + 720),
      (const std::pair<std::string,std::string > *)(v1 + 5376));
    if ( *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 736, v1 + 720);
    *(_DWORD *)(v1 + 736) = 2001;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[24],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5472),
      (const char (*)[19])byte_1A43D0C0,
      (const char (*)[24])"NEW_ACTIVITY_BLITZ_RUSH");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13224),
      (data::NewActivityType *)(v1 + 736),
      (const std::pair<std::string,std::string > *)(v1 + 5472));
    if ( *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 752, v1 + 736);
    *(_DWORD *)(v1 + 752) = 2002;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[19],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5568),
      (const char (*)[13])byte_1A43D100,
      (const char (*)[19])"NEW_ACTIVITY_CHESS");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13296),
      (data::NewActivityType *)(v1 + 752),
      (const std::pair<std::string,std::string > *)(v1 + 5568));
    if ( *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 768, v1 + 752);
    *(_DWORD *)(v1 + 768) = 2003;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5664),
      (const char (*)[19])byte_1A43D140,
      (const char (*)[40])"NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_FIRE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13368),
      (data::NewActivityType *)(v1 + 768),
      (const std::pair<std::string,std::string > *)(v1 + 5664));
    if ( *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 784, v1 + 768);
    *(_DWORD *)(v1 + 784) = 2004;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5760),
      (const char (*)[19])byte_1A43D180,
      (const char (*)[38])"NEW_ACTIVITY_MONSTER_BANNER_PERPETUAL");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13440),
      (data::NewActivityType *)(v1 + 784),
      (const std::pair<std::string,std::string > *)(v1 + 5760));
    if ( *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 800, v1 + 784);
    *(_DWORD *)(v1 + 800) = 2005;
    std::pair<std::string,std::string>::pair<char const(&)[17],char const(&)[30],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5856),
      (const char (*)[17])byte_1A43D1C0,
      (const char (*)[30])"NEW_ACTIVITY_PERSONAL_LIINE_2");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13512),
      (data::NewActivityType *)(v1 + 800),
      (const std::pair<std::string,std::string > *)(v1 + 5856));
    if ( *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 816, v1 + 800);
    *(_DWORD *)(v1 + 816) = 2100;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5952),
      (const char (*)[16])byte_1A43D200,
      (const char (*)[28])"NEW_ACTIVITY_GENERAL_BANNER");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13584),
      (data::NewActivityType *)(v1 + 816),
      (const std::pair<std::string,std::string > *)(v1 + 5952));
    if ( *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 832, v1 + 816);
    *(_DWORD *)(v1 + 832) = 2101;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[23],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6048),
      (const char (*)[10])byte_1A43D240,
      (const char (*)[23])"NEW_ACTIVITY_LUNA_RITE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13656),
      (data::NewActivityType *)(v1 + 832),
      (const std::pair<std::string,std::string > *)(v1 + 6048));
    if ( *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 848, v1 + 832);
    *(_DWORD *)(v1 + 848) = 2102;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[18],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6144),
      (const char (*)[13])byte_1A43D280,
      (const char (*)[18])"NEW_ACTIVITY_SUMO");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13728),
      (data::NewActivityType *)(v1 + 848),
      (const std::pair<std::string,std::string > *)(v1 + 6144));
    if ( *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 864, v1 + 848);
    *(_DWORD *)(v1 + 864) = 2103;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[27],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6240),
      (const char (*)[13])byte_1A43D2C0,
      (const char (*)[27])"NEW_ACTIVITY_MOONFIN_TRIAL");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13800),
      (data::NewActivityType *)(v1 + 864),
      (const std::pair<std::string,std::string > *)(v1 + 6240));
    if ( *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 880, v1 + 864);
    *(_DWORD *)(v1 + 880) = 2104;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6336),
      (const char (*)[19])byte_1A43D300,
      (const char (*)[41])"NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_WATER");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13872),
      (data::NewActivityType *)(v1 + 880),
      (const std::pair<std::string,std::string > *)(v1 + 6336));
    if ( *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 896, v1 + 880);
    *(_DWORD *)(v1 + 896) = 2105;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[35],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6432),
      (const char (*)[19])byte_1A43D340,
      (const char (*)[35])"NEW_ACTIVITY_MONSTER_BANNER_RAIJIN");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 13944),
      (data::NewActivityType *)(v1 + 896),
      (const std::pair<std::string,std::string > *)(v1 + 6432));
    if ( *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 912, v1 + 896);
    *(_DWORD *)(v1 + 912) = 2200;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[26],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6528),
      (const char (*)[13])byte_1A43D380,
      (const char (*)[26])"NEW_ACTIVITY_PLANT_FLOWER");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14016),
      (data::NewActivityType *)(v1 + 912),
      (const std::pair<std::string,std::string > *)(v1 + 6528));
    if ( *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 928, v1 + 912);
    *(_DWORD *)(v1 + 928) = 2201;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[31],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6624),
      (const char (*)[19])byte_1A43D3C0,
      (const char (*)[31])"NEW_ACTIVITY_ROGUELIKE_DUNGEON");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14088),
      (data::NewActivityType *)(v1 + 928),
      (const std::pair<std::string,std::string > *)(v1 + 6624));
    if ( *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 944, v1 + 928);
    *(_DWORD *)(v1 + 944) = 2202;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[24],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6720),
      (const char (*)[13])byte_1A43D400,
      (const char (*)[24])"NEW_ACTIVITY_MUSIC_GAME");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14160),
      (data::NewActivityType *)(v1 + 944),
      (const std::pair<std::string,std::string > *)(v1 + 6720));
    if ( *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 960, v1 + 944);
    *(_DWORD *)(v1 + 960) = 2203;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[17],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6816),
      (const char (*)[19])byte_1A43D440,
      (const char (*)[17])"NEW_ACTIVITY_DIG");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14232),
      (data::NewActivityType *)(v1 + 960),
      (const std::pair<std::string,std::string > *)(v1 + 6816));
    if ( *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 976, v1 + 960);
    *(_DWORD *)(v1 + 976) = 2204;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6912),
      (const char (*)[16])byte_1A43D480,
      (const char (*)[28])"NEW_ACTIVITY_MOONFIN_BANNER");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14304),
      (data::NewActivityType *)(v1 + 976),
      (const std::pair<std::string,std::string > *)(v1 + 6912));
    if ( *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 992, v1 + 976);
    *(_DWORD *)(v1 + 992) = 2301;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[25],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7008),
      (const char (*)[16])byte_1A43D4C0,
      (const char (*)[25])"NEW_ACTIVITY_WINTER_CAMP");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14376),
      (data::NewActivityType *)(v1 + 992),
      (const std::pair<std::string,std::string > *)(v1 + 7008));
    if ( *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1008, v1 + 992);
    *(_DWORD *)(v1 + 1008) = 2302;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[19],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7104),
      (const char (*)[13])byte_1A43D500,
      (const char (*)[19])"NEW_ACTIVITY_HACHI");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14448),
      (data::NewActivityType *)(v1 + 1008),
      (const std::pair<std::string,std::string > *)(v1 + 7104));
    if ( *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1024, v1 + 1008);
    *(_DWORD *)(v1 + 1024) = 2400;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[20],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7200),
      (const char (*)[16])byte_1A43D540,
      (const char (*)[20])"NEW_ACTIVITY_POTION");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14520),
      (data::NewActivityType *)(v1 + 1024),
      (const std::pair<std::string,std::string > *)(v1 + 7200));
    if ( *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1040, v1 + 1024);
    *(_DWORD *)(v1 + 1040) = 2401;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[27],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7296),
      (const char (*)[13])byte_1A43D580,
      (const char (*)[27])"NEW_ACTIVITY_TANUKI_TRAVEL");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14592),
      (data::NewActivityType *)(v1 + 1040),
      (const std::pair<std::string,std::string > *)(v1 + 7296));
    if ( *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1056, v1 + 1040);
    *(_DWORD *)(v1 + 1056) = 2402;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[26],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7392),
      (const char (*)[13])byte_1A43D5C0,
      (const char (*)[26])"NEW_ACTIVITY_SEA_LAMP_2_4");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14664),
      (data::NewActivityType *)(v1 + 1056),
      (const std::pair<std::string,std::string > *)(v1 + 7392));
    if ( *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1072, v1 + 1056);
    *(_DWORD *)(v1 + 1072) = 2501;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[29],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7488),
      (const char (*)[16])byte_1A43D600,
      (const char (*)[29])"NEW_ACTIVITY_MICHIAE_MATSURI");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14736),
      (data::NewActivityType *)(v1 + 1072),
      (const std::pair<std::string,std::string > *)(v1 + 7488));
    if ( *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1088, v1 + 1072);
    *(_DWORD *)(v1 + 1088) = 2502;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[23],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7584),
      (const char (*)[16])byte_1A43D640,
      (const char (*)[23])"NEW_ACTIVITY_BARTENDER");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14808),
      (data::NewActivityType *)(v1 + 1088),
      (const std::pair<std::string,std::string > *)(v1 + 7584));
    if ( *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1104, v1 + 1088);
    *(_DWORD *)(v1 + 1104) = 2503;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[17],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7680),
      (const char (*)[10])byte_1A43D680,
      (const char (*)[17])"NEW_ACTIVITY_UGC");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14880),
      (data::NewActivityType *)(v1 + 1104),
      (const std::pair<std::string,std::string > *)(v1 + 7680));
    if ( *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1120, v1 + 1104);
    *(_DWORD *)(v1 + 1120) = 2600;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[21],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7776),
      (const char (*)[16])byte_1A43D6C0,
      (const char (*)[21])"NEW_ACTIVITY_IRODORI");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 14952),
      (data::NewActivityType *)(v1 + 1120),
      (const std::pair<std::string,std::string > *)(v1 + 7776));
    if ( *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1136, v1 + 1120);
    *(_DWORD *)(v1 + 1136) = 2601;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[26],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7872),
      (const char (*)[19])byte_1A43D700,
      (const char (*)[26])"NEW_ACTIVITY_CRYSTAL_LINK");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15024),
      (data::NewActivityType *)(v1 + 1136),
      (const std::pair<std::string,std::string > *)(v1 + 7872));
    if ( *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1152, v1 + 1136);
    *(_DWORD *)(v1 + 1152) = 2602;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[19],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7968),
      (const char (*)[13])byte_1A43D740,
      (const char (*)[19])"NEW_ACTIVITY_SPICE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15096),
      (data::NewActivityType *)(v1 + 1152),
      (const std::pair<std::string,std::string > *)(v1 + 7968));
    if ( *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1168, v1 + 1152);
    *(_DWORD *)(v1 + 1168) = 2603;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[19],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8064),
      (const char (*)[13])byte_1A43D780,
      (const char (*)[19])"NEW_ACTIVITY_PHOTO");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15168),
      (data::NewActivityType *)(v1 + 1168),
      (const std::pair<std::string,std::string > *)(v1 + 8064));
    if ( *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1184, v1 + 1168);
    *(_DWORD *)(v1 + 1184) = 2702;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8160),
      (const char (*)[19])byte_1A43D7C0,
      (const char (*)[39])"NEW_ACTIVITY_LUMINANCE_STONE_CHALLENGE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15240),
      (data::NewActivityType *)(v1 + 1184),
      (const std::pair<std::string,std::string > *)(v1 + 8160));
    if ( *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1200, v1 + 1184);
    *(_DWORD *)(v1 + 1200) = 2703;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[19],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8256),
      (const char (*)[16])byte_1A43D800,
      (const char (*)[19])"NEW_ACTIVITY_GACHA");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15312),
      (data::NewActivityType *)(v1 + 1200),
      (const std::pair<std::string,std::string > *)(v1 + 8256));
    if ( *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1216, v1 + 1200);
    *(_DWORD *)(v1 + 1216) = 2704;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[25],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8352),
      (const char (*)[16])byte_1A43D840,
      (const char (*)[25])"NEW_ACTIVITY_ROGUE_DIARY");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15384),
      (data::NewActivityType *)(v1 + 1216),
      (const std::pair<std::string,std::string > *)(v1 + 8352));
    if ( *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1232, v1 + 1216);
    *(_DWORD *)(v1 + 1232) = 2801;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[29],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8448),
      (const char (*)[19])byte_1A43D880,
      (const char (*)[29])"NEW_ACTIVITY_SUMMER_TIME_2_8");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15456),
      (data::NewActivityType *)(v1 + 1232),
      (const std::pair<std::string,std::string > *)(v1 + 8448));
    if ( *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1248, v1 + 1232);
    *(_DWORD *)(v1 + 1248) = 2802;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[18],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8544),
      (const char (*)[16])byte_1A43D8C0,
      (const char (*)[18])"NEW_ACTIVITY_GEAR");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15528),
      (data::NewActivityType *)(v1 + 1248),
      (const std::pair<std::string,std::string > *)(v1 + 8544));
    if ( *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1264, v1 + 1248);
    *(_DWORD *)(v1 + 1264) = 2803;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[26],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8640),
      (const char (*)[22])byte_1A43D900,
      (const char (*)[26])"NEW_ACTIVITY_ISLAND_PARTY");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15600),
      (data::NewActivityType *)(v1 + 1264),
      (const std::pair<std::string,std::string > *)(v1 + 8640));
    if ( *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1280, v1 + 1264);
    *(_DWORD *)(v1 + 1280) = 3000;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[30],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8736),
      (const char (*)[22])byte_1A43D940,
      (const char (*)[30])"NEW_ACTIVITY_GRAVEN_INNOCENCE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15672),
      (data::NewActivityType *)(v1 + 1280),
      (const std::pair<std::string,std::string > *)(v1 + 8736));
    if ( *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1296, v1 + 1280);
    *(_DWORD *)(v1 + 1296) = 3001;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8832),
      (const char (*)[13])byte_1A43D980,
      (const char (*)[28])"NEW_ACTIVITY_INSTABLE_SPRAY");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15744),
      (data::NewActivityType *)(v1 + 1296),
      (const std::pair<std::string,std::string > *)(v1 + 8832));
    if ( *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1312, v1 + 1296);
    *(_DWORD *)(v1 + 1312) = 3002;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8928),
      (const char (*)[10])byte_1A43D9C0,
      (const char (*)[28])"NEW_ACTIVITY_MUQADAS_POTION");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15816),
      (data::NewActivityType *)(v1 + 1312),
      (const std::pair<std::string,std::string > *)(v1 + 8928));
    if ( *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1328, v1 + 1312);
    *(_DWORD *)(v1 + 1328) = 3003;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[29],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9024),
      (const char (*)[16])byte_1A43DA00,
      (const char (*)[29])"NEW_ACTIVITY_TREASURE_SEELIE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15888),
      (data::NewActivityType *)(v1 + 1328),
      (const std::pair<std::string,std::string > *)(v1 + 9024));
    if ( *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1344, v1 + 1328);
    *(_DWORD *)(v1 + 1344) = 3101;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[24],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9120),
      (const char (*)[16])byte_1A43DA40,
      (const char (*)[24])"NEW_ACTIVITY_WIND_FIELD");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 15960),
      (data::NewActivityType *)(v1 + 1344),
      (const std::pair<std::string,std::string > *)(v1 + 9120));
    if ( *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1360, v1 + 1344);
    *(_DWORD *)(v1 + 1360) = 3102;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[32],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9216),
      (const char (*)[22])byte_1A43DA80,
      (const char (*)[32])"NEW_ACTIVITY_ROCK_BOARD_EXPLORE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16032),
      (data::NewActivityType *)(v1 + 1360),
      (const std::pair<std::string,std::string > *)(v1 + 9216));
    if ( *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1376, v1 + 1360);
    *(_DWORD *)(v1 + 1376) = 3103;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[21],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9312),
      (const char (*)[22])byte_1A43DAC0,
      (const char (*)[21])"NEW_ACTIVITY_VINTAGE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16104),
      (data::NewActivityType *)(v1 + 1376),
      (const std::pair<std::string,std::string > *)(v1 + 9312));
    if ( *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1392, v1 + 1376);
    *(_DWORD *)(v1 + 1392) = 3201;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9408),
      (const char (*)[19])byte_1A43DB00,
      (const char (*)[28])"NEW_ACTIVITY_FUNGUS_FIGHTER");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16176),
      (data::NewActivityType *)(v1 + 1392),
      (const std::pair<std::string,std::string > *)(v1 + 9408));
    if ( *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1408, v1 + 1392);
    *(_DWORD *)(v1 + 1408) = 3202;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9504),
      (const char (*)[16])byte_1A43DB40,
      (const char (*)[28])"NEW_ACTIVITY_CHAR_AMUSEMENT");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16248),
      (data::NewActivityType *)(v1 + 1408),
      (const std::pair<std::string,std::string > *)(v1 + 9504));
    if ( *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1424, v1 + 1408);
    *(_DWORD *)(v1 + 1424) = 3203;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9600),
      (const char (*)[16])byte_1A43DB80,
      (const char (*)[33])"NEW_ACTIVITY_EFFIGY_CHALLENGE_V2");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16320),
      (data::NewActivityType *)(v1 + 1424),
      (const std::pair<std::string,std::string > *)(v1 + 9600));
    if ( *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1440, v1 + 1424);
    *(_DWORD *)(v1 + 1440) = 3300;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[27],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9696),
      (const char (*)[16])byte_1A43DBC0,
      (const char (*)[27])"NEW_ACTIVITY_BRICK_BREAKER");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16392),
      (data::NewActivityType *)(v1 + 1440),
      (const std::pair<std::string,std::string > *)(v1 + 9696));
    if ( *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1456, v1 + 1440);
    *(_DWORD *)(v1 + 1456) = 3301;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[26],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9792),
      (const char (*)[22])byte_1A43DC00,
      (const char (*)[26])"NEW_ACTIVITY_COIN_COLLECT");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16464),
      (data::NewActivityType *)(v1 + 1456),
      (const std::pair<std::string,std::string > *)(v1 + 9792));
    if ( *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1472, v1 + 1456);
    *(_DWORD *)(v1 + 1472) = 3400;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[24],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9888),
      (const char (*)[13])byte_1A43DC40,
      (const char (*)[24])"NEW_ACTIVITY_DUEL_HEART");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16536),
      (data::NewActivityType *)(v1 + 1472),
      (const std::pair<std::string,std::string > *)(v1 + 9888));
    if ( *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1488, v1 + 1472);
    *(_DWORD *)(v1 + 1488) = 3401;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[26],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9984),
      (const char (*)[19])byte_1A43DC80,
      (const char (*)[26])"NEW_ACTIVITY_SEA_LAMP_3_4");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16608),
      (data::NewActivityType *)(v1 + 1488),
      (const std::pair<std::string,std::string > *)(v1 + 9984));
    if ( *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1504, v1 + 1488);
    *(_DWORD *)(v1 + 1504) = 3402;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[36],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10080),
      (const char (*)[16])byte_1A43DCC0,
      (const char (*)[36])"NEW_ACTIVITY_ELECTROHERCULES_BATTLE");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16680),
      (data::NewActivityType *)(v1 + 1504),
      (const std::pair<std::string,std::string > *)(v1 + 10080));
    if ( *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1520, v1 + 1504);
    *(_DWORD *)(v1 + 1520) = 3403;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[24],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10176),
      (const char (*)[19])byte_1A43DD00,
      (const char (*)[24])"NEW_ACTIVITY_TEAM_CHAIN");
    std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::pair<data::NewActivityType,true>(
      (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *const)(v1 + 16752),
      (data::NewActivityType *)(v1 + 1520),
      (const std::pair<std::string,std::string > *)(v1 + 10176));
    std::allocator<std::pair<data::NewActivityType const,std::pair<std::string,std::string>>>::allocator((std::allocator<std::pair<const data::NewActivityType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    std::map<data::NewActivityType,std::pair<std::string,std::string>>::map(
      &data::getNewActivityTypeEnumMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const data::NewActivityType,std::pair<std::string,std::string > > >)__PAIR128__(91LL, v1 + 10272),
      (const std::less<data::NewActivityType> *)(v1 + 48),
      (const std::map<data::NewActivityType,std::pair<std::string,std::string >>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityTypeEnumMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::map<data::NewActivityType,std::pair<std::string,std::string>>::~map,
      &data::getNewActivityTypeEnumMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<data::NewActivityType const,std::pair<std::string,std::string>>>::~allocator((std::allocator<std::pair<const data::NewActivityType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *)(v1 + 16824);
          i != (std::pair<const data::NewActivityType,std::pair<std::string,std::string > > *)(v1 + 10272);
          std::pair<data::NewActivityType const,std::pair<std::string,std::string>>::~pair(i) )
    {
      --i;
    }
    __asan_poison_stack_memory(v1 + 10272, 6552LL);
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10176));
    v5 = (_DWORD *)(((v1 + 10176) >> 3) + 2147450880);
    *v5 = -117901064;
    v5[1] = -117901064;
    *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10080));
    v6 = (_DWORD *)(((v1 + 10080) >> 3) + 2147450880);
    *v6 = -117901064;
    v6[1] = -117901064;
    *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9984));
    v7 = (_DWORD *)(((v1 + 9984) >> 3) + 2147450880);
    *v7 = -117901064;
    v7[1] = -117901064;
    *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9888));
    v8 = (_DWORD *)(((v1 + 9888) >> 3) + 2147450880);
    *v8 = -117901064;
    v8[1] = -117901064;
    *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9792));
    v9 = (_DWORD *)(((v1 + 9792) >> 3) + 2147450880);
    *v9 = -117901064;
    v9[1] = -117901064;
    *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9696));
    v10 = (_DWORD *)(((v1 + 9696) >> 3) + 2147450880);
    *v10 = -117901064;
    v10[1] = -117901064;
    *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9600));
    v11 = (_DWORD *)(((v1 + 9600) >> 3) + 2147450880);
    *v11 = -117901064;
    v11[1] = -117901064;
    *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9504));
    v12 = (_DWORD *)(((v1 + 9504) >> 3) + 2147450880);
    *v12 = -117901064;
    v12[1] = -117901064;
    *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9408));
    v13 = (_DWORD *)(((v1 + 9408) >> 3) + 2147450880);
    *v13 = -117901064;
    v13[1] = -117901064;
    *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9312));
    v14 = (_DWORD *)(((v1 + 9312) >> 3) + 2147450880);
    *v14 = -117901064;
    v14[1] = -117901064;
    *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9216));
    v15 = (_DWORD *)(((v1 + 9216) >> 3) + 2147450880);
    *v15 = -117901064;
    v15[1] = -117901064;
    *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9120));
    v16 = (_DWORD *)(((v1 + 9120) >> 3) + 2147450880);
    *v16 = -117901064;
    v16[1] = -117901064;
    *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9024));
    v17 = (_DWORD *)(((v1 + 9024) >> 3) + 2147450880);
    *v17 = -117901064;
    v17[1] = -117901064;
    *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8928));
    v18 = (_DWORD *)(((v1 + 8928) >> 3) + 2147450880);
    *v18 = -117901064;
    v18[1] = -117901064;
    *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8832));
    v19 = (_DWORD *)(((v1 + 8832) >> 3) + 2147450880);
    *v19 = -117901064;
    v19[1] = -117901064;
    *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8736));
    v20 = (_DWORD *)(((v1 + 8736) >> 3) + 2147450880);
    *v20 = -117901064;
    v20[1] = -117901064;
    *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8640));
    v21 = (_DWORD *)(((v1 + 8640) >> 3) + 2147450880);
    *v21 = -117901064;
    v21[1] = -117901064;
    *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8544));
    v22 = (_DWORD *)(((v1 + 8544) >> 3) + 2147450880);
    *v22 = -117901064;
    v22[1] = -117901064;
    *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8448));
    v23 = (_DWORD *)(((v1 + 8448) >> 3) + 2147450880);
    *v23 = -117901064;
    v23[1] = -117901064;
    *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8352));
    v24 = (_DWORD *)(((v1 + 8352) >> 3) + 2147450880);
    *v24 = -117901064;
    v24[1] = -117901064;
    *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8256));
    v25 = (_DWORD *)(((v1 + 8256) >> 3) + 2147450880);
    *v25 = -117901064;
    v25[1] = -117901064;
    *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8160));
    v26 = (_DWORD *)(((v1 + 8160) >> 3) + 2147450880);
    *v26 = -117901064;
    v26[1] = -117901064;
    *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8064));
    v27 = (_DWORD *)(((v1 + 8064) >> 3) + 2147450880);
    *v27 = -117901064;
    v27[1] = -117901064;
    *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7968));
    v28 = (_DWORD *)(((v1 + 7968) >> 3) + 2147450880);
    *v28 = -117901064;
    v28[1] = -117901064;
    *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7872));
    v29 = (_DWORD *)(((v1 + 7872) >> 3) + 2147450880);
    *v29 = -117901064;
    v29[1] = -117901064;
    *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7776));
    v30 = (_DWORD *)(((v1 + 7776) >> 3) + 2147450880);
    *v30 = -117901064;
    v30[1] = -117901064;
    *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7680));
    v31 = (_DWORD *)(((v1 + 7680) >> 3) + 2147450880);
    *v31 = -117901064;
    v31[1] = -117901064;
    *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7584));
    v32 = (_DWORD *)(((v1 + 7584) >> 3) + 2147450880);
    *v32 = -117901064;
    v32[1] = -117901064;
    *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7488));
    v33 = (_DWORD *)(((v1 + 7488) >> 3) + 2147450880);
    *v33 = -117901064;
    v33[1] = -117901064;
    *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7392));
    v34 = (_DWORD *)(((v1 + 7392) >> 3) + 2147450880);
    *v34 = -117901064;
    v34[1] = -117901064;
    *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7296));
    v35 = (_DWORD *)(((v1 + 7296) >> 3) + 2147450880);
    *v35 = -117901064;
    v35[1] = -117901064;
    *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7200));
    v36 = (_DWORD *)(((v1 + 7200) >> 3) + 2147450880);
    *v36 = -117901064;
    v36[1] = -117901064;
    *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7104));
    v37 = (_DWORD *)(((v1 + 7104) >> 3) + 2147450880);
    *v37 = -117901064;
    v37[1] = -117901064;
    *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7008));
    v38 = (_DWORD *)(((v1 + 7008) >> 3) + 2147450880);
    *v38 = -117901064;
    v38[1] = -117901064;
    *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6912));
    v39 = (_DWORD *)(((v1 + 6912) >> 3) + 2147450880);
    *v39 = -117901064;
    v39[1] = -117901064;
    *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6816));
    v40 = (_DWORD *)(((v1 + 6816) >> 3) + 2147450880);
    *v40 = -117901064;
    v40[1] = -117901064;
    *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6720));
    v41 = (_DWORD *)(((v1 + 6720) >> 3) + 2147450880);
    *v41 = -117901064;
    v41[1] = -117901064;
    *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6624));
    v42 = (_DWORD *)(((v1 + 6624) >> 3) + 2147450880);
    *v42 = -117901064;
    v42[1] = -117901064;
    *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6528));
    v43 = (_DWORD *)(((v1 + 6528) >> 3) + 2147450880);
    *v43 = -117901064;
    v43[1] = -117901064;
    *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6432));
    v44 = (_DWORD *)(((v1 + 6432) >> 3) + 2147450880);
    *v44 = -117901064;
    v44[1] = -117901064;
    *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6336));
    v45 = (_DWORD *)(((v1 + 6336) >> 3) + 2147450880);
    *v45 = -117901064;
    v45[1] = -117901064;
    *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6240));
    v46 = (_DWORD *)(((v1 + 6240) >> 3) + 2147450880);
    *v46 = -117901064;
    v46[1] = -117901064;
    *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6144));
    v47 = (_DWORD *)(((v1 + 6144) >> 3) + 2147450880);
    *v47 = -117901064;
    v47[1] = -117901064;
    *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6048));
    v48 = (_DWORD *)(((v1 + 6048) >> 3) + 2147450880);
    *v48 = -117901064;
    v48[1] = -117901064;
    *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5952));
    v49 = (_DWORD *)(((v1 + 5952) >> 3) + 2147450880);
    *v49 = -117901064;
    v49[1] = -117901064;
    *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5856));
    v50 = (_DWORD *)(((v1 + 5856) >> 3) + 2147450880);
    *v50 = -117901064;
    v50[1] = -117901064;
    *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5760));
    v51 = (_DWORD *)(((v1 + 5760) >> 3) + 2147450880);
    *v51 = -117901064;
    v51[1] = -117901064;
    *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5664));
    v52 = (_DWORD *)(((v1 + 5664) >> 3) + 2147450880);
    *v52 = -117901064;
    v52[1] = -117901064;
    *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5568));
    v53 = (_DWORD *)(((v1 + 5568) >> 3) + 2147450880);
    *v53 = -117901064;
    v53[1] = -117901064;
    *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5472));
    v54 = (_DWORD *)(((v1 + 5472) >> 3) + 2147450880);
    *v54 = -117901064;
    v54[1] = -117901064;
    *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5376));
    v55 = (_DWORD *)(((v1 + 5376) >> 3) + 2147450880);
    *v55 = -117901064;
    v55[1] = -117901064;
    *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5280));
    v56 = (_DWORD *)(((v1 + 5280) >> 3) + 2147450880);
    *v56 = -117901064;
    v56[1] = -117901064;
    *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5184));
    v57 = (_DWORD *)(((v1 + 5184) >> 3) + 2147450880);
    *v57 = -117901064;
    v57[1] = -117901064;
    *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5088));
    v58 = (_DWORD *)(((v1 + 5088) >> 3) + 2147450880);
    *v58 = -117901064;
    v58[1] = -117901064;
    *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4992));
    v59 = (_DWORD *)(((v1 + 4992) >> 3) + 2147450880);
    *v59 = -117901064;
    v59[1] = -117901064;
    *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4896));
    v60 = (_DWORD *)(((v1 + 4896) >> 3) + 2147450880);
    *v60 = -117901064;
    v60[1] = -117901064;
    *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4800));
    v61 = (_DWORD *)(((v1 + 4800) >> 3) + 2147450880);
    *v61 = -117901064;
    v61[1] = -117901064;
    *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4704));
    v62 = (_DWORD *)(((v1 + 4704) >> 3) + 2147450880);
    *v62 = -117901064;
    v62[1] = -117901064;
    *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4608));
    v63 = (_DWORD *)(((v1 + 4608) >> 3) + 2147450880);
    *v63 = -117901064;
    v63[1] = -117901064;
    *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4512));
    v64 = (_DWORD *)(((v1 + 4512) >> 3) + 2147450880);
    *v64 = -117901064;
    v64[1] = -117901064;
    *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4416));
    v65 = (_DWORD *)(((v1 + 4416) >> 3) + 2147450880);
    *v65 = -117901064;
    v65[1] = -117901064;
    *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4320));
    v66 = (_DWORD *)(((v1 + 4320) >> 3) + 2147450880);
    *v66 = -117901064;
    v66[1] = -117901064;
    *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4224));
    v67 = (_DWORD *)(((v1 + 4224) >> 3) + 2147450880);
    *v67 = -117901064;
    v67[1] = -117901064;
    *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4128));
    v68 = (_DWORD *)(((v1 + 4128) >> 3) + 2147450880);
    *v68 = -117901064;
    v68[1] = -117901064;
    *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4032));
    v69 = (_DWORD *)(((v1 + 4032) >> 3) + 2147450880);
    *v69 = -117901064;
    v69[1] = -117901064;
    *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3936));
    v70 = (_DWORD *)(((v1 + 3936) >> 3) + 2147450880);
    *v70 = -117901064;
    v70[1] = -117901064;
    *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3840));
    v71 = (_DWORD *)(((v1 + 3840) >> 3) + 2147450880);
    *v71 = -117901064;
    v71[1] = -117901064;
    *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3744));
    v72 = (_DWORD *)(((v1 + 3744) >> 3) + 2147450880);
    *v72 = -117901064;
    v72[1] = -117901064;
    *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3648));
    v73 = (_DWORD *)(((v1 + 3648) >> 3) + 2147450880);
    *v73 = -117901064;
    v73[1] = -117901064;
    *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3552));
    v74 = (_DWORD *)(((v1 + 3552) >> 3) + 2147450880);
    *v74 = -117901064;
    v74[1] = -117901064;
    *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3456));
    v75 = (_DWORD *)(((v1 + 3456) >> 3) + 2147450880);
    *v75 = -117901064;
    v75[1] = -117901064;
    *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3360));
    v76 = (_DWORD *)(((v1 + 3360) >> 3) + 2147450880);
    *v76 = -117901064;
    v76[1] = -117901064;
    *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3264));
    v77 = (_DWORD *)(((v1 + 3264) >> 3) + 2147450880);
    *v77 = -117901064;
    v77[1] = -117901064;
    *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3168));
    v78 = (_DWORD *)(((v1 + 3168) >> 3) + 2147450880);
    *v78 = -117901064;
    v78[1] = -117901064;
    *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3072));
    v79 = (_DWORD *)(((v1 + 3072) >> 3) + 2147450880);
    *v79 = -117901064;
    v79[1] = -117901064;
    *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2976));
    v80 = (_DWORD *)(((v1 + 2976) >> 3) + 2147450880);
    *v80 = -117901064;
    v80[1] = -117901064;
    *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2880));
    v81 = (_DWORD *)(((v1 + 2880) >> 3) + 2147450880);
    *v81 = -117901064;
    v81[1] = -117901064;
    *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2784));
    v82 = (_DWORD *)(((v1 + 2784) >> 3) + 2147450880);
    *v82 = -117901064;
    v82[1] = -117901064;
    *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2688));
    v83 = (_DWORD *)(((v1 + 2688) >> 3) + 2147450880);
    *v83 = -117901064;
    v83[1] = -117901064;
    *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2592));
    v84 = (_DWORD *)(((v1 + 2592) >> 3) + 2147450880);
    *v84 = -117901064;
    v84[1] = -117901064;
    *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2496));
    v85 = (_DWORD *)(((v1 + 2496) >> 3) + 2147450880);
    *v85 = -117901064;
    v85[1] = -117901064;
    *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2400));
    v86 = (_DWORD *)(((v1 + 2400) >> 3) + 2147450880);
    *v86 = -117901064;
    v86[1] = -117901064;
    *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2304));
    v87 = (_DWORD *)(((v1 + 2304) >> 3) + 2147450880);
    *v87 = -117901064;
    v87[1] = -117901064;
    *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2208));
    v88 = (_DWORD *)(((v1 + 2208) >> 3) + 2147450880);
    *v88 = -117901064;
    v88[1] = -117901064;
    *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2112));
    v89 = (_DWORD *)(((v1 + 2112) >> 3) + 2147450880);
    *v89 = -117901064;
    v89[1] = -117901064;
    *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2016));
    v90 = (_DWORD *)(((v1 + 2016) >> 3) + 2147450880);
    *v90 = -117901064;
    v90[1] = -117901064;
    *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1920));
    v91 = (_DWORD *)(((v1 + 1920) >> 3) + 2147450880);
    *v91 = -117901064;
    v91[1] = -117901064;
    *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1824));
    v92 = (_DWORD *)(((v1 + 1824) >> 3) + 2147450880);
    *v92 = -117901064;
    v92[1] = -117901064;
    *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1728));
    v93 = (_DWORD *)(((v1 + 1728) >> 3) + 2147450880);
    *v93 = -117901064;
    v93[1] = -117901064;
    *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1632));
    v94 = (_DWORD *)(((v1 + 1632) >> 3) + 2147450880);
    *v94 = -117901064;
    v94[1] = -117901064;
    *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1536));
  }
  if ( v96 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8850) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 2136) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_9(v1, 17088LL, v96);
  }
  return &data::getNewActivityTypeEnumMap[abi:cxx11](void)::m;
};

// Line 372: range 000000000EE95930-000000000EE95CA3
const char *__fastcall data::enumValToStr(data::NewActivityScheduleCondType e, __int64 a2)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // al
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdi
  int v8; // ecx
  char v9; // al
  const char *result; // rax
  std::_Rb_tree_const_iterator<std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > >::pointer v11; // rax
  const std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >> *map; // [rsp+18h] [rbp-E8h]
  char v13[224]; // [rsp+20h] [rbp-E0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 9 <unknown> 48 4 5 e:371 64 8 8 iter:374 96 8 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumValToStr;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862725] = -202116109;
  *(_DWORD *)(v2 + 48) = e;
  map = data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, a2);
  *(std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string>>::find(map, (const std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string>>::end(map);
  v5 = std::operator==(
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumValToStr",
      377);
    v6 = "invalid e:";
    v7 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[11])"invalid e:");
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = 4;
    v8 = *(_DWORD *)(v2 + 48);
    v9 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
    if ( v9 != 0 && v9 <= 3 )
    {
      v7 = (common::milog::MiLogStream *)(v2 + 32);
      LOBYTE(v6) = v9 != 0;
      __asan_report_store4(v2 + 32, v6);
    }
    *(_DWORD *)(v2 + 32) = v8;
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 32));
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = "INVALID_NewActivityScheduleCondType";
  }
  else
  {
    v11 = std::_Rb_tree_const_iterator<std::pair<data::NewActivityScheduleCondType const,std::pair<std::string,std::string>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > > *const)(v2 + 64));
    result = (const char *)std::string::c_str(&v11->second.second);
  }
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 384: range 000000000EE95CA4-000000000EE9625C
__int64 __fastcall data::enumNameToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  const char *v6; // rsi
  char *v7; // rsi
  bool v8; // al
  common::milog::MiLogStream *v9; // rax
  std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityScheduleCondType>,false,true>::pointer v10; // rax
  data::NewActivityScheduleCondType second; // ecx
  char v12; // dl
  const std::unordered_map<std::string,data::NewActivityScheduleCondType> *m; // [rsp+18h] [rbp-188h]
  char v15[384]; // [rsp+20h] [rbp-180h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "7 48 1 9 <unknown> 64 8 6 it:393 96 8 9 <unknown> 128 8 5 s:383 160 32 9 <unknown> 224 32 9 <unk"
                        "nown> 288 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumNameToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -202116109;
  *(_QWORD *)(v2 + 128) = s;
  if ( *(_QWORD *)(v2 + 128) )
  {
    m = data::getNewActivityScheduleCondTypeNameMap[abi:cxx11]();
    std::allocator<char>::allocator(v2 + 48);
    v6 = *(const char **)(v2 + 128);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      v6,
      (const std::allocator<char> *)(v2 + 48));
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 64, v6);
    *(std::unordered_map<std::string,data::NewActivityScheduleCondType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityScheduleCondType>::find(m, (const std::unordered_map<std::string,data::NewActivityScheduleCondType>::key_type *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 96, v2 + 224);
    *(std::unordered_map<std::string,data::NewActivityScheduleCondType>::const_iterator *)(v2 + 96) = std::unordered_map<std::string,data::NewActivityScheduleCondType>::end(m);
    v7 = (char *)(v2 + 96);
    v8 = std::__detail::operator==<std::pair<std::string const,data::NewActivityScheduleCondType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityScheduleCondType>,true> *)(v2 + 64),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityScheduleCondType>,true> *)(v2 + 96));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumNameToVal",
        396);
      v9 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v9, (const char *const *)(v2 + 128));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v10 = std::__detail::_Node_const_iterator<std::pair<std::string const,data::NewActivityScheduleCondType>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityScheduleCondType>,false,true> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v10->second);
      }
      second = v10->second;
      v12 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v12 != 0 && (char)((e & 7) + 3) >= v12 )
      {
        LOBYTE(v7) = v12 != 0;
        __asan_report_store4(e, v7);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumNameToVal",
      387);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 160),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = 0xFFFFFFFFLL;
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 405: range 000000000EE9625D-000000000EE96CB8
__int64 __fastcall data::enumStrToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  std::pair<const std::string,data::NewActivityScheduleCondType> *i; // r14
  unsigned __int64 v7; // rax
  const char *v8; // rsi
  char *v9; // rsi
  bool v10; // al
  common::milog::MiLogStream *v11; // rax
  std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityScheduleCondType>,false,true>::pointer v12; // rax
  data::NewActivityScheduleCondType second; // ecx
  char v14; // dl
  char v16[656]; // [rsp+20h] [rbp-290h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(608LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "14 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 4 9 <unknown> 128 4 9"
                        " <unknown> 144 4 9 <unknown> 160 8 6 it:419 192 8 9 <unknown> 224 8 5 s:404 256 32 9 <unknown> 3"
                        "20 32 9 <unknown> 384 32 9 <unknown> 448 120 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumStrToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234556927;
  v4[536862724] = -234556924;
  v4[536862725] = -218959360;
  v4[536862726] = -218959360;
  v4[536862727] = -218959360;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862737] = -218103808;
  v4[536862738] = -202116109;
  *(_QWORD *)(v2 + 224) = s;
  if ( *(_QWORD *)(v2 + 224) )
  {
    if ( !(_BYTE)`guard variable for'data::enumStrToVal(char const*,data::NewActivityScheduleCondType &)::m
      && __cxa_guard_acquire(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityScheduleCondType &)::m) )
    {
      if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 112, e);
      *(_DWORD *)(v2 + 112) = 1;
      std::pair<std::string const,data::NewActivityScheduleCondType>::pair<char const(&)[25],data::NewActivityScheduleCondType,true>(
        (std::pair<const std::string,data::NewActivityScheduleCondType> *const)(v2 + 448),
        (const char (*)[25])byte_1A440CC0,
        (data::NewActivityScheduleCondType *)(v2 + 112));
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 128, byte_1A440CC0);
      *(_DWORD *)(v2 + 128) = 2;
      std::pair<std::string const,data::NewActivityScheduleCondType>::pair<char const(&)[13],data::NewActivityScheduleCondType,true>(
        (std::pair<const std::string,data::NewActivityScheduleCondType> *const)(v2 + 488),
        (const char (*)[13])byte_1A440D00,
        (data::NewActivityScheduleCondType *)(v2 + 128));
      if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 144, byte_1A440D00);
      *(_DWORD *)(v2 + 144) = 3;
      std::pair<std::string const,data::NewActivityScheduleCondType>::pair<char const(&)[16],data::NewActivityScheduleCondType,true>(
        (std::pair<const std::string,data::NewActivityScheduleCondType> *const)(v2 + 528),
        (const char (*)[16])byte_1A440D40,
        (data::NewActivityScheduleCondType *)(v2 + 144));
      std::allocator<std::pair<std::string const,data::NewActivityScheduleCondType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityScheduleCondType> > *const)(v2 + 80));
      std::unordered_map<std::string,data::NewActivityScheduleCondType>::unordered_map(
        &data::enumStrToVal(char const*,data::NewActivityScheduleCondType &)::m,
        (std::initializer_list<std::pair<const std::string,data::NewActivityScheduleCondType> >)__PAIR128__(
                                                                                                  3LL,
                                                                                                  v2 + 448),
        0LL,
        (const std::unordered_map<std::string,data::NewActivityScheduleCondType>::hasher *)(v2 + 48),
        (const std::unordered_map<std::string,data::NewActivityScheduleCondType>::key_equal *)(v2 + 64),
        (const std::unordered_map<std::string,data::NewActivityScheduleCondType>::allocator_type *)(v2 + 80));
      __cxa_guard_release(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityScheduleCondType &)::m);
      __cxa_atexit(
        (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityScheduleCondType>::~unordered_map,
        &data::enumStrToVal(char const*,data::NewActivityScheduleCondType &)::m,
        &_dso_handle);
      std::allocator<std::pair<std::string const,data::NewActivityScheduleCondType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityScheduleCondType> > *const)(v2 + 80));
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
      for ( i = (std::pair<const std::string,data::NewActivityScheduleCondType> *)(v2 + 568);
            i != (std::pair<const std::string,data::NewActivityScheduleCondType> *)(v2 + 448);
            std::pair<std::string const,data::NewActivityScheduleCondType>::~pair(i) )
      {
        --i;
      }
      v7 = ((v2 + 448) >> 3) + 2147450880;
      *(_DWORD *)v7 = -117901064;
      *(_DWORD *)(v7 + 4) = -117901064;
      *(_DWORD *)(v7 + 8) = -117901064;
      *(_WORD *)(v7 + 12) = -1800;
      *(_BYTE *)(v7 + 14) = -8;
      *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
    }
    *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    v8 = *(const char **)(v2 + 224);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 320),
      v8,
      (const std::allocator<char> *)(v2 + 96));
    if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 160, v8);
    *(std::unordered_map<std::string,data::NewActivityScheduleCondType>::iterator *)(v2 + 160) = std::unordered_map<std::string,data::NewActivityScheduleCondType>::find(
                                                                                                   &data::enumStrToVal(char const*,data::NewActivityScheduleCondType &)::m,
                                                                                                   (const std::unordered_map<std::string,data::NewActivityScheduleCondType>::key_type *)(v2 + 320));
    std::string::~string((void *)(v2 + 320));
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 192, v2 + 320);
    *(std::unordered_map<std::string,data::NewActivityScheduleCondType>::iterator *)(v2 + 192) = std::unordered_map<std::string,data::NewActivityScheduleCondType>::end(&data::enumStrToVal(char const*,data::NewActivityScheduleCondType &)::m);
    v9 = (char *)(v2 + 192);
    v10 = std::__detail::operator==<std::pair<std::string const,data::NewActivityScheduleCondType>,true>(
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityScheduleCondType>,true> *)(v2 + 160),
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityScheduleCondType>,true> *)(v2 + 192));
    *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
    if ( v10 )
    {
      *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 384) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 384, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 384),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumStrToVal",
        422);
      v11 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              (common::milog::MiLogStream *const)(v2 + 384),
              (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)(v2 + 224));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 384));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v12 = std::__detail::_Node_iterator<std::pair<std::string const,data::NewActivityScheduleCondType>,false,true>::operator->((const std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityScheduleCondType>,false,true> *const)(v2 + 160));
      if ( *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v12->second);
      }
      second = v12->second;
      v14 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v14 != 0 && (char)((e & 7) + 3) >= v14 )
      {
        LOBYTE(v9) = v14 != 0;
        __asan_report_store4(e, v9);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 256) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 256, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 256),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumStrToVal",
      408);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 256),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 256));
    result = 0xFFFFFFFFLL;
  }
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF802C) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF803C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = -168430091;
  }
  return result;
};

// Line 431: range 000000000EE96CB9-000000000EE96CCF
const char *__cdecl data::getDescription(data::NewActivityScheduleCondType e)
{
  __int64 v1; // rsi

  return data::enumValToStr(e, v1);
};

// Line 436: range 000000000EE96CD0-000000000EE96E85
bool __cdecl data::isValidNewActivityScheduleCondType(uint32_t n)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  const std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >> *v5; // rcx
  const std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >> *v6; // rcx
  bool result; // al
  char v8[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 5 e:437 64 8 9 <unknown> 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityScheduleCondType;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, v1);
  *(_DWORD *)(v2 + 48) = n;
  v5 = data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string>>::end(v5);
  v6 = data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string>>::find(v6, (const std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  result = std::operator!=(
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 442: range 000000000EE96E86-000000000EE96FE7
bool __cdecl data::isValidNewActivityScheduleCondTypeName(const std::string *name)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  const std::unordered_map<std::string,data::NewActivityScheduleCondType> *v5; // rcx
  const std::unordered_map<std::string,data::NewActivityScheduleCondType> *v6; // rcx
  bool result; // al
  char v8[128]; // [rsp+10h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 9 <unknown> 64 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityScheduleCondTypeName;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202116352;
  v5 = data::getNewActivityScheduleCondTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<std::string,data::NewActivityScheduleCondType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityScheduleCondType>::end(v5);
  v6 = data::getNewActivityScheduleCondTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<std::string,data::NewActivityScheduleCondType>::const_iterator *)(v2 + 32) = std::unordered_map<std::string,data::NewActivityScheduleCondType>::find(v6, name);
  result = std::__detail::operator!=<std::pair<std::string const,data::NewActivityScheduleCondType>,true>(
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityScheduleCondType>,true> *)(v2 + 32),
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityScheduleCondType>,true> *)(v2 + 64));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 447: range 000000000EE96FE8-000000000EE97547
const std::unordered_map<std::string,data::NewActivityScheduleCondType> *__cdecl data::getNewActivityScheduleCondTypeNameMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const std::string,data::NewActivityScheduleCondType> *i; // r14
  const std::unordered_map<std::string,data::NewActivityScheduleCondType> *result; // rax
  char v6[432]; // [rsp+10h] [rbp-1B0h] BYREF

  v1 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_3(384LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "8 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 4 9 <unknown> 112 4 9 <unknown> 128 4 9 "
                        "<unknown> 144 4 9 <unknown> 160 160 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityScheduleCondTypeNameMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753551;
  v3[536862722] = -234753535;
  v3[536862723] = -234556924;
  v3[536862724] = -234556924;
  v3[536862730] = -202116109;
  v3[536862731] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityScheduleCondTypeNameMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityScheduleCondTypeNameMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, v0);
    *(_DWORD *)(v1 + 96) = 0;
    std::pair<std::string const,data::NewActivityScheduleCondType>::pair<char const(&)[32],data::NewActivityScheduleCondType,true>(
      (std::pair<const std::string,data::NewActivityScheduleCondType> *const)(v1 + 160),
      (const char (*)[32])"NEW_ACTIVITY_SCHEDULE_COND_NONE",
      (data::NewActivityScheduleCondType *)(v1 + 96));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, "NEW_ACTIVITY_SCHEDULE_COND_NONE");
    *(_DWORD *)(v1 + 112) = 1;
    std::pair<std::string const,data::NewActivityScheduleCondType>::pair<char const(&)[48],data::NewActivityScheduleCondType,true>(
      (std::pair<const std::string,data::NewActivityScheduleCondType> *const)(v1 + 200),
      (const char (*)[48])"NEW_ACTIVITY_SCHEDULE_COND_PLAYER_LEVEL_GREATER",
      (data::NewActivityScheduleCondType *)(v1 + 112));
    if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 128, "NEW_ACTIVITY_SCHEDULE_COND_PLAYER_LEVEL_GREATER");
    *(_DWORD *)(v1 + 128) = 2;
    std::pair<std::string const,data::NewActivityScheduleCondType>::pair<char const(&)[40],data::NewActivityScheduleCondType,true>(
      (std::pair<const std::string,data::NewActivityScheduleCondType> *const)(v1 + 240),
      (const char (*)[40])"NEW_ACTIVITY_SCHEDULE_COND_QUEST_FINISH",
      (data::NewActivityScheduleCondType *)(v1 + 128));
    if ( *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 144, "NEW_ACTIVITY_SCHEDULE_COND_QUEST_FINISH");
    *(_DWORD *)(v1 + 144) = 3;
    std::pair<std::string const,data::NewActivityScheduleCondType>::pair<char const(&)[45],data::NewActivityScheduleCondType,true>(
      (std::pair<const std::string,data::NewActivityScheduleCondType> *const)(v1 + 280),
      (const char (*)[45])"NEW_ACTIVITY_SCHEDULE_COND_OPEN_STATE_OPENED",
      (data::NewActivityScheduleCondType *)(v1 + 144));
    std::allocator<std::pair<std::string const,data::NewActivityScheduleCondType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityScheduleCondType> > *const)(v1 + 80));
    std::unordered_map<std::string,data::NewActivityScheduleCondType>::unordered_map(
      &data::getNewActivityScheduleCondTypeNameMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const std::string,data::NewActivityScheduleCondType> >)__PAIR128__(4LL, v1 + 160),
      0LL,
      (const std::unordered_map<std::string,data::NewActivityScheduleCondType>::hasher *)(v1 + 48),
      (const std::unordered_map<std::string,data::NewActivityScheduleCondType>::key_equal *)(v1 + 64),
      (const std::unordered_map<std::string,data::NewActivityScheduleCondType>::allocator_type *)(v1 + 80));
    __cxa_guard_release(&`guard variable for'data::getNewActivityScheduleCondTypeNameMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityScheduleCondType>::~unordered_map,
      &data::getNewActivityScheduleCondTypeNameMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<std::string const,data::NewActivityScheduleCondType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityScheduleCondType> > *const)(v1 + 80));
    *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const std::string,data::NewActivityScheduleCondType> *)(v1 + 320);
          i != (std::pair<const std::string,data::NewActivityScheduleCondType> *)(v1 + 160);
          std::pair<std::string const,data::NewActivityScheduleCondType>::~pair(i) )
    {
      --i;
    }
  }
  result = &data::getNewActivityScheduleCondTypeNameMap[abi:cxx11](void)::m;
  if ( v6 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 459: range 000000000EE97548-000000000EE97D18
const std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >> *__cdecl data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > *i; // r14
  _DWORD *v5; // rax
  _DWORD *v6; // rax
  _DWORD *v7; // rax
  char v9[912]; // [rsp+10h] [rbp-390h] BYREF

  v1 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_4(864LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "11 32 1 9 <unknown> 48 1 9 <unknown> 64 4 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9 "
                        "<unknown> 128 64 9 <unknown> 224 64 9 <unknown> 320 64 9 <unknown> 416 64 9 <unknown> 512 288 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753535;
  v3[536862722] = -234556924;
  v3[536862723] = -234556924;
  v3[536862726] = -218959118;
  v3[536862729] = -218959118;
  v3[536862732] = -218959118;
  v3[536862735] = -218959118;
  v3[536862745] = -202116109;
  v3[536862746] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 64, v0);
    *(_DWORD *)(v1 + 64) = 0;
    std::pair<std::string,std::string>::pair<char const(&)[1],char const(&)[32],true>(
      (std::pair<std::string,std::string > *const)(v1 + 128),
      (const char (*)[1])byte_1A3FEBE0,
      (const char (*)[32])"NEW_ACTIVITY_SCHEDULE_COND_NONE");
    std::pair<data::NewActivityScheduleCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityScheduleCondType,true>(
      (std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > *const)(v1 + 512),
      (data::NewActivityScheduleCondType *)(v1 + 64),
      (const std::pair<std::string,std::string > *)(v1 + 128));
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v1 + 64);
    *(_DWORD *)(v1 + 80) = 1;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 224),
      (const char (*)[25])byte_1A440CC0,
      (const char (*)[48])"NEW_ACTIVITY_SCHEDULE_COND_PLAYER_LEVEL_GREATER");
    std::pair<data::NewActivityScheduleCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityScheduleCondType,true>(
      (std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > *const)(v1 + 584),
      (data::NewActivityScheduleCondType *)(v1 + 80),
      (const std::pair<std::string,std::string > *)(v1 + 224));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, v1 + 80);
    *(_DWORD *)(v1 + 96) = 2;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 320),
      (const char (*)[13])byte_1A440D00,
      (const char (*)[40])"NEW_ACTIVITY_SCHEDULE_COND_QUEST_FINISH");
    std::pair<data::NewActivityScheduleCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityScheduleCondType,true>(
      (std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > *const)(v1 + 656),
      (data::NewActivityScheduleCondType *)(v1 + 96),
      (const std::pair<std::string,std::string > *)(v1 + 320));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, v1 + 96);
    *(_DWORD *)(v1 + 112) = 3;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 416),
      (const char (*)[16])byte_1A440D40,
      (const char (*)[45])"NEW_ACTIVITY_SCHEDULE_COND_OPEN_STATE_OPENED");
    std::pair<data::NewActivityScheduleCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityScheduleCondType,true>(
      (std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > *const)(v1 + 728),
      (data::NewActivityScheduleCondType *)(v1 + 112),
      (const std::pair<std::string,std::string > *)(v1 + 416));
    std::allocator<std::pair<data::NewActivityScheduleCondType const,std::pair<std::string,std::string>>>::allocator((std::allocator<std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > > *const)(v1 + 48));
    std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string>>::map(
      &data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > >)__PAIR128__(4LL, v1 + 512),
      (const std::less<data::NewActivityScheduleCondType> *)(v1 + 32),
      (const std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string >>::allocator_type *)(v1 + 48));
    __cxa_guard_release(&`guard variable for'data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::map<data::NewActivityScheduleCondType,std::pair<std::string,std::string>>::~map,
      &data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<data::NewActivityScheduleCondType const,std::pair<std::string,std::string>>>::~allocator((std::allocator<std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > > *const)(v1 + 48));
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > *)(v1 + 800);
          i != (std::pair<const data::NewActivityScheduleCondType,std::pair<std::string,std::string > > *)(v1 + 512);
          std::pair<data::NewActivityScheduleCondType const,std::pair<std::string,std::string>>::~pair(i) )
    {
      --i;
    }
    __asan_poison_stack_memory(v1 + 512, 288LL);
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 416));
    v5 = (_DWORD *)(((v1 + 416) >> 3) + 2147450880);
    *v5 = -117901064;
    v5[1] = -117901064;
    *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 320));
    v6 = (_DWORD *)(((v1 + 320) >> 3) + 2147450880);
    *v6 = -117901064;
    v6[1] = -117901064;
    *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 224));
    v7 = (_DWORD *)(((v1 + 224) >> 3) + 2147450880);
    *v7 = -117901064;
    v7[1] = -117901064;
    *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 128));
  }
  if ( v9 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8064) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 108) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8068) = -168430091;
  }
  return &data::getNewActivityScheduleCondTypeEnumMap[abi:cxx11](void)::m;
};

// Line 471: range 000000000EE97D19-000000000EE9808C
const char *__fastcall data::enumValToStr(data::NewActivityCondType e, __int64 a2)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // al
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdi
  int v8; // ecx
  char v9; // al
  const char *result; // rax
  std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > >::pointer v11; // rax
  const std::map<data::NewActivityCondType,std::pair<std::string,std::string >> *map; // [rsp+18h] [rbp-E8h]
  char v13[224]; // [rsp+20h] [rbp-E0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 9 <unknown> 48 4 5 e:470 64 8 8 iter:473 96 8 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumValToStr;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862725] = -202116109;
  *(_DWORD *)(v2 + 48) = e;
  map = data::getNewActivityCondTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, a2);
  *(std::map<data::NewActivityCondType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityCondType,std::pair<std::string,std::string>>::find(map, (const std::map<data::NewActivityCondType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::map<data::NewActivityCondType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityCondType,std::pair<std::string,std::string>>::end(map);
  v5 = std::operator==(
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumValToStr",
      476);
    v6 = "invalid e:";
    v7 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[11])"invalid e:");
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = 4;
    v8 = *(_DWORD *)(v2 + 48);
    v9 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
    if ( v9 != 0 && v9 <= 3 )
    {
      v7 = (common::milog::MiLogStream *)(v2 + 32);
      LOBYTE(v6) = v9 != 0;
      __asan_report_store4(v2 + 32, v6);
    }
    *(_DWORD *)(v2 + 32) = v8;
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 32));
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = "INVALID_NewActivityCondType";
  }
  else
  {
    v11 = std::_Rb_tree_const_iterator<std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > > *const)(v2 + 64));
    result = (const char *)std::string::c_str(&v11->second.second);
  }
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 483: range 000000000EE9808D-000000000EE98645
__int64 __fastcall data::enumNameToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  const char *v6; // rsi
  char *v7; // rsi
  bool v8; // al
  common::milog::MiLogStream *v9; // rax
  std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityCondType>,false,true>::pointer v10; // rax
  data::NewActivityCondType second; // ecx
  char v12; // dl
  const std::unordered_map<std::string,data::NewActivityCondType> *m; // [rsp+18h] [rbp-188h]
  char v15[384]; // [rsp+20h] [rbp-180h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "7 48 1 9 <unknown> 64 8 6 it:492 96 8 9 <unknown> 128 8 5 s:482 160 32 9 <unknown> 224 32 9 <unk"
                        "nown> 288 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumNameToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -202116109;
  *(_QWORD *)(v2 + 128) = s;
  if ( *(_QWORD *)(v2 + 128) )
  {
    m = data::getNewActivityCondTypeNameMap[abi:cxx11]();
    std::allocator<char>::allocator(v2 + 48);
    v6 = *(const char **)(v2 + 128);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      v6,
      (const std::allocator<char> *)(v2 + 48));
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 64, v6);
    *(std::unordered_map<std::string,data::NewActivityCondType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityCondType>::find(
                                                                                                m,
                                                                                                (const std::unordered_map<std::string,data::NewActivityCondType>::key_type *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 96, v2 + 224);
    *(std::unordered_map<std::string,data::NewActivityCondType>::const_iterator *)(v2 + 96) = std::unordered_map<std::string,data::NewActivityCondType>::end(m);
    v7 = (char *)(v2 + 96);
    v8 = std::__detail::operator==<std::pair<std::string const,data::NewActivityCondType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondType>,true> *)(v2 + 64),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondType>,true> *)(v2 + 96));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumNameToVal",
        495);
      v9 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v9, (const char *const *)(v2 + 128));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v10 = std::__detail::_Node_const_iterator<std::pair<std::string const,data::NewActivityCondType>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityCondType>,false,true> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v10->second);
      }
      second = v10->second;
      v12 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v12 != 0 && (char)((e & 7) + 3) >= v12 )
      {
        LOBYTE(v7) = v12 != 0;
        __asan_report_store4(e, v7);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumNameToVal",
      486);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 160),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = 0xFFFFFFFFLL;
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 504: range 000000000EE98646-000000000EE9B434
__int64 __fastcall data::enumStrToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int v5; // eax
  std::pair<const std::string,data::NewActivityCondType> *i; // r14
  const char *v7; // rsi
  char *v8; // rsi
  bool v9; // al
  common::milog::MiLogStream *v10; // rax
  std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityCondType>,false,true>::pointer v11; // rax
  data::NewActivityCondType second; // ecx
  char v13; // dl
  unsigned int v14; // ebx
  char v17[4208]; // [rsp+20h] [rbp-1070h] BYREF

  v2 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_7(4160LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "76 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 4 9 <unknown> 112 4 9 "
                        "<unknown> 128 4 9 <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 4 9 <unkno"
                        "wn> 208 4 9 <unknown> 224 4 9 <unknown> 240 4 9 <unknown> 256 4 9 <unknown> 272 4 9 <unknown> 28"
                        "8 4 9 <unknown> 304 4 9 <unknown> 320 4 9 <unknown> 336 4 9 <unknown> 352 4 9 <unknown> 368 4 9 "
                        "<unknown> 384 4 9 <unknown> 400 4 9 <unknown> 416 4 9 <unknown> 432 4 9 <unknown> 448 4 9 <unkno"
                        "wn> 464 4 9 <unknown> 480 4 9 <unknown> 496 4 9 <unknown> 512 4 9 <unknown> 528 4 9 <unknown> 54"
                        "4 4 9 <unknown> 560 4 9 <unknown> 576 4 9 <unknown> 592 4 9 <unknown> 608 4 9 <unknown> 624 4 9 "
                        "<unknown> 640 4 9 <unknown> 656 4 9 <unknown> 672 4 9 <unknown> 688 4 9 <unknown> 704 4 9 <unkno"
                        "wn> 720 4 9 <unknown> 736 4 9 <unknown> 752 4 9 <unknown> 768 4 9 <unknown> 784 4 9 <unknown> 80"
                        "0 4 9 <unknown> 816 4 9 <unknown> 832 4 9 <unknown> 848 4 9 <unknown> 864 4 9 <unknown> 880 4 9 "
                        "<unknown> 896 4 9 <unknown> 912 4 9 <unknown> 928 4 9 <unknown> 944 4 9 <unknown> 960 4 9 <unkno"
                        "wn> 976 4 9 <unknown> 992 4 9 <unknown> 1008 4 9 <unknown> 1024 4 9 <unknown> 1040 4 9 <unknown>"
                        " 1056 4 9 <unknown> 1072 4 9 <unknown> 1088 4 9 <unknown> 1104 4 9 <unknown> 1120 4 9 <unknown> "
                        "1136 8 6 it:580 1168 8 9 <unknown> 1200 8 5 s:503 1232 32 9 <unknown> 1296 32 9 <unknown> 1360 3"
                        "2 9 <unknown> 1424 2600 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumStrToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234556924;
  v4[536862724] = -234556924;
  v4[536862725] = -234556924;
  v4[536862726] = -234556924;
  v4[536862727] = -234556924;
  v4[536862728] = -234556924;
  v4[536862729] = -234556924;
  v4[536862730] = -234556924;
  v4[536862731] = -234556924;
  v4[536862732] = -234556924;
  v4[536862733] = -234556924;
  v4[536862734] = -234556924;
  v4[536862735] = -234556924;
  v4[536862736] = -234556924;
  v4[536862737] = -234556924;
  v4[536862738] = -234556924;
  v4[536862739] = -234556924;
  v4[536862740] = -234556924;
  v4[536862741] = -234556924;
  v4[536862742] = -234556924;
  v4[536862743] = -234556924;
  v4[536862744] = -234556924;
  v4[536862745] = -234556924;
  v4[536862746] = -234556924;
  v4[536862747] = -234556924;
  v4[536862748] = -234556924;
  v4[536862749] = -234556924;
  v4[536862750] = -234556924;
  v4[536862751] = -234556924;
  v4[536862752] = -234556924;
  v4[536862753] = -234556924;
  v4[536862754] = -234556924;
  v4[536862755] = 61956;
  v4[536862755] = -234881024;
  v4[536862756] = 62194;
  v4[536862756] = -234881024;
  v4[536862757] = 62194;
  v4[536862757] = -234881024;
  v4[536862758] = 62194;
  v4[536862759] = -219021312;
  v4[536862760] = 62194;
  v4[536862761] = -219021312;
  v4[536862762] = 62194;
  v4[536862763] = -219021312;
  v4[536862764] = 62194;
  v4[536862845] = -218103808;
  v4[536862846] = -202116109;
  v4[536862847] = -202116109;
  v4[536862848] = -202116109;
  v4[536862849] = -202116109;
  *(_QWORD *)(v2 + 1200) = s;
  if ( *(_QWORD *)(v2 + 1200) )
  {
    if ( !(_BYTE)`guard variable for'data::enumStrToVal(char const*,data::NewActivityCondType &)::m
      && __cxa_guard_acquire(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityCondType &)::m) )
    {
      if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 96, e);
      *(_DWORD *)(v2 + 96) = 1;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[19],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1424),
        (const char (*)[19])byte_1A441740,
        (data::NewActivityCondType *)(v2 + 96));
      if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 112, byte_1A441740);
      *(_DWORD *)(v2 + 112) = 2;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[19],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1464),
        (const char (*)[19])byte_1A441780,
        (data::NewActivityCondType *)(v2 + 112));
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 128, byte_1A441780);
      *(_DWORD *)(v2 + 128) = 3;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1504),
        (const char (*)[25])byte_1A440CC0,
        (data::NewActivityCondType *)(v2 + 128));
      if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 144, byte_1A440CC0);
      *(_DWORD *)(v2 + 144) = 4;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[13],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1544),
        (const char (*)[13])byte_1A440D00,
        (data::NewActivityCondType *)(v2 + 144));
      if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 160, byte_1A440D00);
      *(_DWORD *)(v2 + 160) = 5;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[13],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1584),
        (const char (*)[13])byte_1A4417C0,
        (data::NewActivityCondType *)(v2 + 160));
      if ( *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 176, byte_1A4417C0);
      *(_DWORD *)(v2 + 176) = 6;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[16],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1624),
        (const char (*)[16])byte_1A441800,
        (data::NewActivityCondType *)(v2 + 176));
      if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 192, byte_1A441800);
      *(_DWORD *)(v2 + 192) = 7;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[16],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1664),
        (const char (*)[16])byte_1A441840,
        (data::NewActivityCondType *)(v2 + 192));
      if ( *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 208, byte_1A441840);
      *(_DWORD *)(v2 + 208) = 8;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[31],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1704),
        (const char (*)[31])byte_1A441880,
        (data::NewActivityCondType *)(v2 + 208));
      if ( *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 224, byte_1A441880);
      *(_DWORD *)(v2 + 224) = 9;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[31],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1744),
        (const char (*)[31])byte_1A4418C0,
        (data::NewActivityCondType *)(v2 + 224));
      if ( *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 240, byte_1A4418C0);
      *(_DWORD *)(v2 + 240) = 10;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1784),
        (const char (*)[25])byte_1A441900,
        (data::NewActivityCondType *)(v2 + 240));
      if ( *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 256, byte_1A441900);
      *(_DWORD *)(v2 + 256) = 11;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[20],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1824),
        (const char (*)[20])byte_1A441940,
        (data::NewActivityCondType *)(v2 + 256));
      if ( *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 272, byte_1A441940);
      *(_DWORD *)(v2 + 272) = 12;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[31],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1864),
        (const char (*)[31])byte_1A441980,
        (data::NewActivityCondType *)(v2 + 272));
      if ( *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 288, byte_1A441980);
      *(_DWORD *)(v2 + 288) = 13;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1904),
        (const char (*)[25])byte_1A4419C0,
        (data::NewActivityCondType *)(v2 + 288));
      if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 304, byte_1A4419C0);
      *(_DWORD *)(v2 + 304) = 14;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[31],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1944),
        (const char (*)[31])byte_1A441A00,
        (data::NewActivityCondType *)(v2 + 304));
      if ( *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 320, byte_1A441A00);
      *(_DWORD *)(v2 + 320) = 15;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[16],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 1984),
        (const char (*)[16])byte_1A441A40,
        (data::NewActivityCondType *)(v2 + 320));
      if ( *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 336, byte_1A441A40);
      *(_DWORD *)(v2 + 336) = 16;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[19],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2024),
        (const char (*)[19])byte_1A441A80,
        (data::NewActivityCondType *)(v2 + 336));
      if ( *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 352, byte_1A441A80);
      *(_DWORD *)(v2 + 352) = 17;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[16],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2064),
        (const char (*)[16])byte_1A441AC0,
        (data::NewActivityCondType *)(v2 + 352));
      if ( *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 368, byte_1A441AC0);
      *(_DWORD *)(v2 + 368) = 18;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[22],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2104),
        (const char (*)[22])byte_1A441B00,
        (data::NewActivityCondType *)(v2 + 368));
      if ( *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 384, byte_1A441B00);
      *(_DWORD *)(v2 + 384) = 19;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2144),
        (const char (*)[25])byte_1A441B40,
        (data::NewActivityCondType *)(v2 + 384));
      if ( *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 400, byte_1A441B40);
      *(_DWORD *)(v2 + 400) = 20;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[19],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2184),
        (const char (*)[19])byte_1A441B80,
        (data::NewActivityCondType *)(v2 + 400));
      if ( *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 416, byte_1A441B80);
      *(_DWORD *)(v2 + 416) = 21;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2224),
        (const char (*)[25])byte_1A441BC0,
        (data::NewActivityCondType *)(v2 + 416));
      if ( *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 432, byte_1A441BC0);
      *(_DWORD *)(v2 + 432) = 22;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[40],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2264),
        (const char (*)[40])byte_1A441C00,
        (data::NewActivityCondType *)(v2 + 432));
      if ( *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 448, byte_1A441C00);
      *(_DWORD *)(v2 + 448) = 23;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[40],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2304),
        (const char (*)[40])byte_1A441C60,
        (data::NewActivityCondType *)(v2 + 448));
      if ( *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 464, byte_1A441C60);
      *(_DWORD *)(v2 + 464) = 24;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[49],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2344),
        (const char (*)[49])byte_1A441CC0,
        (data::NewActivityCondType *)(v2 + 464));
      if ( *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 480, byte_1A441CC0);
      *(_DWORD *)(v2 + 480) = 25;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[46],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2384),
        (const char (*)[46])byte_1A441D20,
        (data::NewActivityCondType *)(v2 + 480));
      if ( *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 496, byte_1A441D20);
      *(_DWORD *)(v2 + 496) = 26;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[22],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2424),
        (const char (*)[22])byte_1A441D80,
        (data::NewActivityCondType *)(v2 + 496));
      if ( *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 512, byte_1A441D80);
      *(_DWORD *)(v2 + 512) = 27;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[35],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2464),
        (const char (*)[35])byte_1A441DC0,
        (data::NewActivityCondType *)(v2 + 512));
      if ( *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 528, byte_1A441DC0);
      *(_DWORD *)(v2 + 528) = 28;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[34],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2504),
        (const char (*)[34])byte_1A441E20,
        (data::NewActivityCondType *)(v2 + 528));
      if ( *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 544, byte_1A441E20);
      *(_DWORD *)(v2 + 544) = 29;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2544),
        (const char (*)[25])byte_1A441E80,
        (data::NewActivityCondType *)(v2 + 544));
      if ( *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 560, byte_1A441E80);
      *(_DWORD *)(v2 + 560) = 30;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2584),
        (const char (*)[25])byte_1A441EC0,
        (data::NewActivityCondType *)(v2 + 560));
      if ( *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 576, byte_1A441EC0);
      *(_DWORD *)(v2 + 576) = 31;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2624),
        (const char (*)[25])byte_1A441F00,
        (data::NewActivityCondType *)(v2 + 576));
      if ( *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 592, byte_1A441F00);
      *(_DWORD *)(v2 + 592) = 32;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2664),
        (const char (*)[25])byte_1A441F40,
        (data::NewActivityCondType *)(v2 + 592));
      if ( *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 608, byte_1A441F40);
      *(_DWORD *)(v2 + 608) = 33;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2704),
        (const char (*)[25])byte_1A441F80,
        (data::NewActivityCondType *)(v2 + 608));
      if ( *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 624, byte_1A441F80);
      *(_DWORD *)(v2 + 624) = 34;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[18],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2744),
        (const char (*)[18])byte_1A441FC0,
        (data::NewActivityCondType *)(v2 + 624));
      if ( *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 640, byte_1A441FC0);
      *(_DWORD *)(v2 + 640) = 35;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[31],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2784),
        (const char (*)[31])byte_1A442000,
        (data::NewActivityCondType *)(v2 + 640));
      if ( *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 656, byte_1A442000);
      *(_DWORD *)(v2 + 656) = 36;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[19],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2824),
        (const char (*)[19])byte_1A442040,
        (data::NewActivityCondType *)(v2 + 656));
      if ( *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 672, byte_1A442040);
      *(_DWORD *)(v2 + 672) = 37;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2864),
        (const char (*)[25])byte_1A442080,
        (data::NewActivityCondType *)(v2 + 672));
      if ( *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 688, byte_1A442080);
      *(_DWORD *)(v2 + 688) = 38;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[46],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2904),
        (const char (*)[46])byte_1A4420C0,
        (data::NewActivityCondType *)(v2 + 688));
      if ( *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 704, byte_1A4420C0);
      *(_DWORD *)(v2 + 704) = 39;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[46],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2944),
        (const char (*)[46])byte_1A442120,
        (data::NewActivityCondType *)(v2 + 704));
      if ( *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 720, byte_1A442120);
      *(_DWORD *)(v2 + 720) = 40;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[43],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 2984),
        (const char (*)[43])byte_1A442180,
        (data::NewActivityCondType *)(v2 + 720));
      if ( *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 736, byte_1A442180);
      *(_DWORD *)(v2 + 736) = 41;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[43],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3024),
        (const char (*)[43])byte_1A4421E0,
        (data::NewActivityCondType *)(v2 + 736));
      if ( *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 752, byte_1A4421E0);
      *(_DWORD *)(v2 + 752) = 42;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[34],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3064),
        (const char (*)[34])byte_1A442240,
        (data::NewActivityCondType *)(v2 + 752));
      if ( *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 768, byte_1A442240);
      *(_DWORD *)(v2 + 768) = 43;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[22],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3104),
        (const char (*)[22])byte_1A4422A0,
        (data::NewActivityCondType *)(v2 + 768));
      if ( *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 784, byte_1A4422A0);
      *(_DWORD *)(v2 + 784) = 44;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[55],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3144),
        (const char (*)[55])byte_1A4422E0,
        (data::NewActivityCondType *)(v2 + 784));
      if ( *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 800, byte_1A4422E0);
      *(_DWORD *)(v2 + 800) = 45;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[22],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3184),
        (const char (*)[22])byte_1A442340,
        (data::NewActivityCondType *)(v2 + 800));
      if ( *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 816, byte_1A442340);
      *(_DWORD *)(v2 + 816) = 46;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[33],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3224),
        (const char (*)[33])byte_1A442380,
        (data::NewActivityCondType *)(v2 + 816));
      if ( *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 832, byte_1A442380);
      *(_DWORD *)(v2 + 832) = 47;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[30],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3264),
        (const char (*)[30])byte_1A4423E0,
        (data::NewActivityCondType *)(v2 + 832));
      if ( *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 848, byte_1A4423E0);
      *(_DWORD *)(v2 + 848) = 48;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[43],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3304),
        (const char (*)[43])byte_1A442420,
        (data::NewActivityCondType *)(v2 + 848));
      if ( *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 864, byte_1A442420);
      *(_DWORD *)(v2 + 864) = 49;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[37],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3344),
        (const char (*)[37])byte_1A442480,
        (data::NewActivityCondType *)(v2 + 864));
      if ( *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 880, byte_1A442480);
      *(_DWORD *)(v2 + 880) = 50;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[35],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3384),
        (const char (*)[35])byte_1A4424E0,
        (data::NewActivityCondType *)(v2 + 880));
      if ( *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 896, byte_1A4424E0);
      *(_DWORD *)(v2 + 896) = 51;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[46],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3424),
        (const char (*)[46])byte_1A442540,
        (data::NewActivityCondType *)(v2 + 896));
      if ( *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 912, byte_1A442540);
      *(_DWORD *)(v2 + 912) = 52;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[43],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3464),
        (const char (*)[43])byte_1A4425A0,
        (data::NewActivityCondType *)(v2 + 912));
      if ( *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 928, byte_1A4425A0);
      *(_DWORD *)(v2 + 928) = 53;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[43],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3504),
        (const char (*)[43])byte_1A442600,
        (data::NewActivityCondType *)(v2 + 928));
      if ( *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 944, byte_1A442600);
      *(_DWORD *)(v2 + 944) = 54;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[25],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3544),
        (const char (*)[25])byte_1A442660,
        (data::NewActivityCondType *)(v2 + 944));
      if ( *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 960, byte_1A442660);
      *(_DWORD *)(v2 + 960) = 55;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[43],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3584),
        (const char (*)[43])byte_1A4426A0,
        (data::NewActivityCondType *)(v2 + 960));
      if ( *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 976, byte_1A4426A0);
      *(_DWORD *)(v2 + 976) = 56;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[37],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3624),
        (const char (*)[37])byte_1A442700,
        (data::NewActivityCondType *)(v2 + 976));
      if ( *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 992, byte_1A442700);
      *(_DWORD *)(v2 + 992) = 57;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[40],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3664),
        (const char (*)[40])byte_1A442760,
        (data::NewActivityCondType *)(v2 + 992));
      if ( *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1008, byte_1A442760);
      *(_DWORD *)(v2 + 1008) = 58;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[37],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3704),
        (const char (*)[37])byte_1A4427C0,
        (data::NewActivityCondType *)(v2 + 1008));
      if ( *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1024, byte_1A4427C0);
      *(_DWORD *)(v2 + 1024) = 59;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[31],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3744),
        (const char (*)[31])byte_1A442820,
        (data::NewActivityCondType *)(v2 + 1024));
      if ( *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1040, byte_1A442820);
      *(_DWORD *)(v2 + 1040) = 60;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[34],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3784),
        (const char (*)[34])byte_1A442860,
        (data::NewActivityCondType *)(v2 + 1040));
      if ( *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1056, byte_1A442860);
      *(_DWORD *)(v2 + 1056) = 61;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[31],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3824),
        (const char (*)[31])byte_1A4428C0,
        (data::NewActivityCondType *)(v2 + 1056));
      if ( *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1072, byte_1A4428C0);
      *(_DWORD *)(v2 + 1072) = 62;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[37],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3864),
        (const char (*)[37])byte_1A442900,
        (data::NewActivityCondType *)(v2 + 1072));
      if ( *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1088, byte_1A442900);
      *(_DWORD *)(v2 + 1088) = 63;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[40],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3904),
        (const char (*)[40])byte_1A442960,
        (data::NewActivityCondType *)(v2 + 1088));
      if ( *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1104, byte_1A442960);
      *(_DWORD *)(v2 + 1104) = 64;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[37],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3944),
        (const char (*)[37])byte_1A4429C0,
        (data::NewActivityCondType *)(v2 + 1104));
      if ( *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1120, byte_1A4429C0);
      *(_DWORD *)(v2 + 1120) = 65;
      std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[52],data::NewActivityCondType,true>(
        (std::pair<const std::string,data::NewActivityCondType> *const)(v2 + 3984),
        (const char (*)[52])byte_1A442A20,
        (data::NewActivityCondType *)(v2 + 1120));
      std::allocator<std::pair<std::string const,data::NewActivityCondType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityCondType> > *const)(v2 + 64));
      std::unordered_map<std::string,data::NewActivityCondType>::unordered_map(
        &data::enumStrToVal(char const*,data::NewActivityCondType &)::m,
        (std::initializer_list<std::pair<const std::string,data::NewActivityCondType> >)__PAIR128__(65LL, v2 + 1424),
        0LL,
        (const std::unordered_map<std::string,data::NewActivityCondType>::hasher *)(v2 + 32),
        (const std::unordered_map<std::string,data::NewActivityCondType>::key_equal *)(v2 + 48),
        (const std::unordered_map<std::string,data::NewActivityCondType>::allocator_type *)(v2 + 64));
      __cxa_guard_release(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityCondType &)::m);
      __cxa_atexit(
        (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityCondType>::~unordered_map,
        &data::enumStrToVal(char const*,data::NewActivityCondType &)::m,
        &_dso_handle);
      std::allocator<std::pair<std::string const,data::NewActivityCondType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityCondType> > *const)(v2 + 64));
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
      for ( i = (std::pair<const std::string,data::NewActivityCondType> *)(v2 + 4024);
            i != (std::pair<const std::string,data::NewActivityCondType> *)(v2 + 1424);
            std::pair<std::string const,data::NewActivityCondType>::~pair(i) )
      {
        --i;
      }
      __asan_poison_stack_memory(v2 + 1424, 2600LL);
      *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    }
    *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 1296) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 80);
    v7 = *(const char **)(v2 + 1200);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 1296),
      v7,
      (const std::allocator<char> *)(v2 + 80));
    if ( *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 1136, v7);
    *(std::unordered_map<std::string,data::NewActivityCondType>::iterator *)(v2 + 1136) = std::unordered_map<std::string,data::NewActivityCondType>::find(
                                                                                            &data::enumStrToVal(char const*,data::NewActivityCondType &)::m,
                                                                                            (const std::unordered_map<std::string,data::NewActivityCondType>::key_type *)(v2 + 1296));
    std::string::~string((void *)(v2 + 1296));
    *(_DWORD *)(((v2 + 1296) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 80);
    *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 1168, v2 + 1296);
    *(std::unordered_map<std::string,data::NewActivityCondType>::iterator *)(v2 + 1168) = std::unordered_map<std::string,data::NewActivityCondType>::end(&data::enumStrToVal(char const*,data::NewActivityCondType &)::m);
    v8 = (char *)(v2 + 1168);
    v9 = std::__detail::operator==<std::pair<std::string const,data::NewActivityCondType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondType>,true> *)(v2 + 1136),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondType>,true> *)(v2 + 1168));
    *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) = -8;
    if ( v9 )
    {
      *(_DWORD *)(((v2 + 1360) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 1360) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 1391) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 1391) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 1360, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 1360),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumStrToVal",
        583);
      v10 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              (common::milog::MiLogStream *const)(v2 + 1360),
              (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v10, (const char *const *)(v2 + 1200));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1360));
      v5 = -1;
    }
    else
    {
      v11 = std::__detail::_Node_iterator<std::pair<std::string const,data::NewActivityCondType>,false,true>::operator->((const std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityCondType>,false,true> *const)(v2 + 1136));
      if ( *(_BYTE *)(((unsigned __int64)&v11->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v11->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v11->second);
      }
      second = v11->second;
      v13 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v13 != 0 && (char)((e & 7) + 3) >= v13 )
      {
        LOBYTE(v8) = v13 != 0;
        __asan_report_store4(e, v8);
      }
      *(_DWORD *)e = second;
      v5 = 0;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 1232) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1263) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 48 + 31) & 7) >= *(_BYTE *)(((v2 + 1263) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1232, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1232),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumStrToVal",
      507);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 1232),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1232));
    v5 = -1;
  }
  v14 = v5;
  if ( v17 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8200) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 520) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_7(v2, 4160LL, v17);
  }
  return v14;
};

// Line 592: range 000000000EE9B435-000000000EE9B44B
const char *__cdecl data::getDescription(data::NewActivityCondType e)
{
  __int64 v1; // rsi

  return data::enumValToStr(e, v1);
};

// Line 597: range 000000000EE9B44C-000000000EE9B601
bool __cdecl data::isValidNewActivityCondType(uint32_t n)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  const std::map<data::NewActivityCondType,std::pair<std::string,std::string >> *v5; // rcx
  const std::map<data::NewActivityCondType,std::pair<std::string,std::string >> *v6; // rcx
  bool result; // al
  char v8[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 5 e:598 64 8 9 <unknown> 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityCondType;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, v1);
  *(_DWORD *)(v2 + 48) = n;
  v5 = data::getNewActivityCondTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::map<data::NewActivityCondType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityCondType,std::pair<std::string,std::string>>::end(v5);
  v6 = data::getNewActivityCondTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::map<data::NewActivityCondType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityCondType,std::pair<std::string,std::string>>::find(v6, (const std::map<data::NewActivityCondType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  result = std::operator!=(
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 603: range 000000000EE9B602-000000000EE9B763
bool __cdecl data::isValidNewActivityCondTypeName(const std::string *name)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  const std::unordered_map<std::string,data::NewActivityCondType> *v5; // rcx
  const std::unordered_map<std::string,data::NewActivityCondType> *v6; // rcx
  bool result; // al
  char v8[128]; // [rsp+10h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 9 <unknown> 64 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityCondTypeName;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202116352;
  v5 = data::getNewActivityCondTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<std::string,data::NewActivityCondType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityCondType>::end(v5);
  v6 = data::getNewActivityCondTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<std::string,data::NewActivityCondType>::const_iterator *)(v2 + 32) = std::unordered_map<std::string,data::NewActivityCondType>::find(
                                                                                              v6,
                                                                                              name);
  result = std::__detail::operator!=<std::pair<std::string const,data::NewActivityCondType>,true>(
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondType>,true> *)(v2 + 32),
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondType>,true> *)(v2 + 64));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 608: range 000000000EE9B764-000000000EE9DB8F
const std::unordered_map<std::string,data::NewActivityCondType> *__cdecl data::getNewActivityCondTypeNameMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const std::string,data::NewActivityCondType> *i; // r14
  char v6[3952]; // [rsp+10h] [rbp-F70h] BYREF

  v1 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_6(3904LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "70 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9 "
                        "<unknown> 128 4 9 <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 4 9 <unkno"
                        "wn> 208 4 9 <unknown> 224 4 9 <unknown> 240 4 9 <unknown> 256 4 9 <unknown> 272 4 9 <unknown> 28"
                        "8 4 9 <unknown> 304 4 9 <unknown> 320 4 9 <unknown> 336 4 9 <unknown> 352 4 9 <unknown> 368 4 9 "
                        "<unknown> 384 4 9 <unknown> 400 4 9 <unknown> 416 4 9 <unknown> 432 4 9 <unknown> 448 4 9 <unkno"
                        "wn> 464 4 9 <unknown> 480 4 9 <unknown> 496 4 9 <unknown> 512 4 9 <unknown> 528 4 9 <unknown> 54"
                        "4 4 9 <unknown> 560 4 9 <unknown> 576 4 9 <unknown> 592 4 9 <unknown> 608 4 9 <unknown> 624 4 9 "
                        "<unknown> 640 4 9 <unknown> 656 4 9 <unknown> 672 4 9 <unknown> 688 4 9 <unknown> 704 4 9 <unkno"
                        "wn> 720 4 9 <unknown> 736 4 9 <unknown> 752 4 9 <unknown> 768 4 9 <unknown> 784 4 9 <unknown> 80"
                        "0 4 9 <unknown> 816 4 9 <unknown> 832 4 9 <unknown> 848 4 9 <unknown> 864 4 9 <unknown> 880 4 9 "
                        "<unknown> 896 4 9 <unknown> 912 4 9 <unknown> 928 4 9 <unknown> 944 4 9 <unknown> 960 4 9 <unkno"
                        "wn> 976 4 9 <unknown> 992 4 9 <unknown> 1008 4 9 <unknown> 1024 4 9 <unknown> 1040 4 9 <unknown>"
                        " 1056 4 9 <unknown> 1072 4 9 <unknown> 1088 4 9 <unknown> 1104 4 9 <unknown> 1120 4 9 <unknown> "
                        "1136 2640 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityCondTypeNameMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753535;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862724] = -234556924;
  v3[536862725] = -234556924;
  v3[536862726] = -234556924;
  v3[536862727] = -234556924;
  v3[536862728] = -234556924;
  v3[536862729] = -234556924;
  v3[536862730] = -234556924;
  v3[536862731] = -234556924;
  v3[536862732] = -234556924;
  v3[536862733] = -234556924;
  v3[536862734] = -234556924;
  v3[536862735] = -234556924;
  v3[536862736] = -234556924;
  v3[536862737] = -234556924;
  v3[536862738] = -234556924;
  v3[536862739] = -234556924;
  v3[536862740] = -234556924;
  v3[536862741] = -234556924;
  v3[536862742] = -234556924;
  v3[536862743] = -234556924;
  v3[536862744] = -234556924;
  v3[536862745] = -234556924;
  v3[536862746] = -234556924;
  v3[536862747] = -234556924;
  v3[536862748] = -234556924;
  v3[536862749] = -234556924;
  v3[536862750] = -234556924;
  v3[536862751] = -234556924;
  v3[536862752] = -234556924;
  v3[536862753] = -234556924;
  v3[536862754] = -234556924;
  v3[536862755] = 61956;
  v3[536862838] = -202116109;
  v3[536862839] = -202116109;
  v3[536862840] = -202116109;
  v3[536862841] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityCondTypeNameMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityCondTypeNameMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[23],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1136),
      (const char (*)[23])"NEW_ACTIVITY_COND_NONE",
      (data::NewActivityCondType *)(v1 + 80));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, "NEW_ACTIVITY_COND_NONE");
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[31],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1176),
      (const char (*)[31])"NEW_ACTIVITY_COND_TIME_GREATER",
      (data::NewActivityCondType *)(v1 + 96));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, "NEW_ACTIVITY_COND_TIME_GREATER");
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[28],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1216),
      (const char (*)[28])"NEW_ACTIVITY_COND_TIME_LESS",
      (data::NewActivityCondType *)(v1 + 112));
    if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 128, "NEW_ACTIVITY_COND_TIME_LESS");
    *(_DWORD *)(v1 + 128) = 3;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[39],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1256),
      (const char (*)[39])"NEW_ACTIVITY_COND_PLAYER_LEVEL_GREATER",
      (data::NewActivityCondType *)(v1 + 128));
    if ( *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 144, "NEW_ACTIVITY_COND_PLAYER_LEVEL_GREATER");
    *(_DWORD *)(v1 + 144) = 4;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[31],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1296),
      (const char (*)[31])"NEW_ACTIVITY_COND_QUEST_FINISH",
      (data::NewActivityCondType *)(v1 + 144));
    if ( *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 160, "NEW_ACTIVITY_COND_QUEST_FINISH");
    *(_DWORD *)(v1 + 160) = 5;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[30],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1336),
      (const char (*)[30])"NEW_ACTIVITY_COND_FINISH_TALK",
      (data::NewActivityCondType *)(v1 + 160));
    if ( *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 176, "NEW_ACTIVITY_COND_FINISH_TALK");
    *(_DWORD *)(v1 + 176) = 6;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[29],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1376),
      (const char (*)[29])"NEW_ACTIVITY_COND_CREATE_NPC",
      (data::NewActivityCondType *)(v1 + 176));
    if ( *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 192, "NEW_ACTIVITY_COND_CREATE_NPC");
    *(_DWORD *)(v1 + 192) = 7;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[34],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1416),
      (const char (*)[34])"NEW_ACTIVITY_COND_NOT_FINISH_TALK",
      (data::NewActivityCondType *)(v1 + 192));
    if ( *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 208, "NEW_ACTIVITY_COND_NOT_FINISH_TALK");
    *(_DWORD *)(v1 + 208) = 8;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[39],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1456),
      (const char (*)[39])"NEW_ACTIVITY_COND_SALESMAN_CAN_DELIVER",
      (data::NewActivityCondType *)(v1 + 208));
    if ( *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 224, "NEW_ACTIVITY_COND_SALESMAN_CAN_DELIVER");
    *(_DWORD *)(v1 + 224) = 9;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[42],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1496),
      (const char (*)[42])"NEW_ACTIVITY_COND_SALESMAN_CAN_GET_REWARD",
      (data::NewActivityCondType *)(v1 + 224));
    if ( *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 240, "NEW_ACTIVITY_COND_SALESMAN_CAN_GET_REWARD");
    *(_DWORD *)(v1 + 240) = 10;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[45],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1536),
      (const char (*)[45])"NEW_ACTIVITY_COND_ASTER_MID_CAMP_REFRESHABLE",
      (data::NewActivityCondType *)(v1 + 240));
    if ( *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 256, "NEW_ACTIVITY_COND_ASTER_MID_CAMP_REFRESHABLE");
    *(_DWORD *)(v1 + 256) = 11;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[33],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1576),
      (const char (*)[33])"NEW_ACTIVITY_COND_FINISH_WATCHER",
      (data::NewActivityCondType *)(v1 + 256));
    if ( *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 272, "NEW_ACTIVITY_COND_FINISH_WATCHER");
    *(_DWORD *)(v1 + 272) = 12;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[35],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1616),
      (const char (*)[35])"NEW_ACTIVITY_COND_DAYS_GREAT_EQUAL",
      (data::NewActivityCondType *)(v1 + 272));
    if ( *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 288, "NEW_ACTIVITY_COND_DAYS_GREAT_EQUAL");
    *(_DWORD *)(v1 + 288) = 13;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[28],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1656),
      (const char (*)[28])"NEW_ACTIVITY_COND_DAYS_LESS",
      (data::NewActivityCondType *)(v1 + 288));
    if ( *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 304, "NEW_ACTIVITY_COND_DAYS_LESS");
    *(_DWORD *)(v1 + 304) = 14;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[43],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1696),
      (const char (*)[43])"NEW_ACTIVITY_COND_PLAYER_LEVEL_GREAT_EQUAL",
      (data::NewActivityCondType *)(v1 + 304));
    if ( *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 320, "NEW_ACTIVITY_COND_PLAYER_LEVEL_GREAT_EQUAL");
    *(_DWORD *)(v1 + 320) = 15;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[42],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1736),
      (const char (*)[42])"NEW_ACTIVITY_COND_SCENE_MP_PLAY_ACTIVATED",
      (data::NewActivityCondType *)(v1 + 320));
    if ( *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 336, "NEW_ACTIVITY_COND_SCENE_MP_PLAY_ACTIVATED");
    *(_DWORD *)(v1 + 336) = 16;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[37],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1776),
      (const char (*)[37])"NEW_ACTIVITY_COND_SEA_LAMP_POPULARIT",
      (data::NewActivityCondType *)(v1 + 336));
    if ( *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 352, "NEW_ACTIVITY_COND_SEA_LAMP_POPULARIT");
    *(_DWORD *)(v1 + 352) = 17;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[33],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1816),
      (const char (*)[33])"NEW_ACTIVITY_COND_SEA_LAMP_PHASE",
      (data::NewActivityCondType *)(v1 + 352));
    if ( *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 368, "NEW_ACTIVITY_COND_SEA_LAMP_PHASE");
    *(_DWORD *)(v1 + 368) = 18;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[34],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1856),
      (const char (*)[34])"NEW_ACTIVITY_COND_MECHANICUS_OPEN",
      (data::NewActivityCondType *)(v1 + 368));
    if ( *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 384, "NEW_ACTIVITY_COND_MECHANICUS_OPEN");
    *(_DWORD *)(v1 + 384) = 19;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[45],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1896),
      (const char (*)[45])"NEW_ACTIVITY_COND_FINISH_REGION_SEARCH_LOGIC",
      (data::NewActivityCondType *)(v1 + 384));
    if ( *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 400, "NEW_ACTIVITY_COND_FINISH_REGION_SEARCH_LOGIC");
    *(_DWORD *)(v1 + 400) = 20;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[39],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1936),
      (const char (*)[39])"NEW_ACTIVITY_COND_FINISH_REGION_SEARCH",
      (data::NewActivityCondType *)(v1 + 400));
    if ( *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 416, "NEW_ACTIVITY_COND_FINISH_REGION_SEARCH");
    *(_DWORD *)(v1 + 416) = 21;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[44],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 1976),
      (const char (*)[44])"NEW_ACTIVITY_COND_FINISH_WATER_SPIRIT_PHASE",
      (data::NewActivityCondType *)(v1 + 416));
    if ( *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 432, "NEW_ACTIVITY_COND_FINISH_WATER_SPIRIT_PHASE");
    *(_DWORD *)(v1 + 432) = 22;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[52],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2016),
      (const char (*)[52])"NEW_ACTIVITY_COND_FINISH_FIND_HILICHURL_LEVEL_EQUAL",
      (data::NewActivityCondType *)(v1 + 432));
    if ( *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 448, "NEW_ACTIVITY_COND_FINISH_FIND_HILICHURL_LEVEL_EQUAL");
    *(_DWORD *)(v1 + 448) = 23;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[51],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2056),
      (const char (*)[51])"NEW_ACTIVITY_COND_FINISH_FIND_HILICHURL_LEVEL_LESS",
      (data::NewActivityCondType *)(v1 + 448));
    if ( *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 464, "NEW_ACTIVITY_COND_FINISH_FIND_HILICHURL_LEVEL_LESS");
    *(_DWORD *)(v1 + 464) = 24;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[65],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2096),
      (const char (*)[65])"NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ONEOFF_DUNGEON_IN_STAGE",
      (data::NewActivityCondType *)(v1 + 464));
    if ( *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 480, "NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ONEOFF_DUNGEON_IN_STAGE");
    *(_DWORD *)(v1 + 480) = 25;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[60],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2136),
      (const char (*)[60])"NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ANY_ONEOFF_DUNGEON",
      (data::NewActivityCondType *)(v1 + 480));
    if ( *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 496, "NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ANY_ONEOFF_DUNGEON");
    *(_DWORD *)(v1 + 496) = 26;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[41],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2176),
      (const char (*)[41])"NEW_ACTIVITY_COND_SEPCIFIED_ACTIVITY_END",
      (data::NewActivityCondType *)(v1 + 496));
    if ( *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 512, "NEW_ACTIVITY_COND_SEPCIFIED_ACTIVITY_END");
    *(_DWORD *)(v1 + 512) = 27;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[51],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2216),
      (const char (*)[51])"NEW_ACTIVITY_COND_UNLOCKED_ALL_LISTED_SCENE_POINTS",
      (data::NewActivityCondType *)(v1 + 512));
    if ( *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 528, "NEW_ACTIVITY_COND_UNLOCKED_ALL_LISTED_SCENE_POINTS");
    *(_DWORD *)(v1 + 528) = 28;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[59],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2256),
      (const char (*)[59])"NEW_ACTIVITY_COND_TREASURE_MAP_BONUS_SPOT_GOT_ANY_FRAGMENT",
      (data::NewActivityCondType *)(v1 + 528));
    if ( *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 544, "NEW_ACTIVITY_COND_TREASURE_MAP_BONUS_SPOT_GOT_ANY_FRAGMENT");
    *(_DWORD *)(v1 + 544) = 29;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[37],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2296),
      (const char (*)[37])"NEW_ACTIVITY_COND_ITEM_COUNT_GREATER",
      (data::NewActivityCondType *)(v1 + 544));
    if ( *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 560, "NEW_ACTIVITY_COND_ITEM_COUNT_GREATER");
    *(_DWORD *)(v1 + 560) = 30;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[43],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2336),
      (const char (*)[43])"NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_GREATER",
      (data::NewActivityCondType *)(v1 + 560));
    if ( *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 576, "NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_GREATER");
    *(_DWORD *)(v1 + 576) = 31;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[40],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2376),
      (const char (*)[40])"NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_LESS",
      (data::NewActivityCondType *)(v1 + 576));
    if ( *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 592, "NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_LESS");
    *(_DWORD *)(v1 + 592) = 32;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[41],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2416),
      (const char (*)[41])"NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_EQUAL",
      (data::NewActivityCondType *)(v1 + 592));
    if ( *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 608, "NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_EQUAL");
    *(_DWORD *)(v1 + 608) = 33;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[38],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2456),
      (const char (*)[38])"NEW_ACTIVITY_COND_FINISH_DIG_ACTIVITY",
      (data::NewActivityCondType *)(v1 + 608));
    if ( *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 624, "NEW_ACTIVITY_COND_FINISH_DIG_ACTIVITY");
    *(_DWORD *)(v1 + 624) = 34;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[40],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2496),
      (const char (*)[40])"NEW_ACTIVITY_COND_GROUP_BUNDLE_FINISHED",
      (data::NewActivityCondType *)(v1 + 624));
    if ( *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 640, "NEW_ACTIVITY_COND_GROUP_BUNDLE_FINISHED");
    *(_DWORD *)(v1 + 640) = 35;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[43],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2536),
      (const char (*)[43])"NEW_ACTIVITY_COND_PLANT_FLOWER_CAN_DELIVER",
      (data::NewActivityCondType *)(v1 + 640));
    if ( *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 656, "NEW_ACTIVITY_COND_PLANT_FLOWER_CAN_DELIVER");
    *(_DWORD *)(v1 + 656) = 36;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[39],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2576),
      (const char (*)[39])"NEW_ACTIVITY_COND_LUNA_RITE_ATMOSPHERE",
      (data::NewActivityCondType *)(v1 + 656));
    if ( *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 672, "NEW_ACTIVITY_COND_LUNA_RITE_ATMOSPHERE");
    *(_DWORD *)(v1 + 672) = 37;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[37],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2616),
      (const char (*)[37])"NEW_ACTIVITY_COND_FINISH_HACHI_STAGE",
      (data::NewActivityCondType *)(v1 + 672));
    if ( *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 688, "NEW_ACTIVITY_COND_FINISH_HACHI_STAGE");
    *(_DWORD *)(v1 + 688) = 38;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[60],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2656),
      (const char (*)[60])"NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ANY_STAGE_ALL_CAMP",
      (data::NewActivityCondType *)(v1 + 688));
    if ( *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 704, "NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ANY_STAGE_ALL_CAMP");
    *(_DWORD *)(v1 + 704) = 39;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[66],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2696),
      (const char (*)[66])"NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_APPOINTED_STAGE_ALL_CAMP",
      (data::NewActivityCondType *)(v1 + 704));
    if ( *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 720, "NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_APPOINTED_STAGE_ALL_CAMP");
    *(_DWORD *)(v1 + 720) = 40;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[51],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2736),
      (const char (*)[51])"NEW_ACTIVITY_COND_HACHI_FINISH_STEALTH_STAGE_EQUAL",
      (data::NewActivityCondType *)(v1 + 720));
    if ( *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 736, "NEW_ACTIVITY_COND_HACHI_FINISH_STEALTH_STAGE_EQUAL");
    *(_DWORD *)(v1 + 736) = 41;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[50],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2776),
      (const char (*)[50])"NEW_ACTIVITY_COND_HACHI_FINISH_BATTLE_STAGE_EQUAL",
      (data::NewActivityCondType *)(v1 + 736));
    if ( *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 752, "NEW_ACTIVITY_COND_HACHI_FINISH_BATTLE_STAGE_EQUAL");
    *(_DWORD *)(v1 + 752) = 42;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[39],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2816),
      (const char (*)[39])"NEW_ACTIVITY_COND_FINISH_SALVAGE_STAGE",
      (data::NewActivityCondType *)(v1 + 752));
    if ( *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 768, "NEW_ACTIVITY_COND_FINISH_SALVAGE_STAGE");
    *(_DWORD *)(v1 + 768) = 43;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[41],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2856),
      (const char (*)[41])"NEW_ACTIVITY_COND_FINISH_BARTENDER_LEVEL",
      (data::NewActivityCondType *)(v1 + 768));
    if ( *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 784, "NEW_ACTIVITY_COND_FINISH_BARTENDER_LEVEL");
    *(_DWORD *)(v1 + 784) = 44;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[42],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2896),
      (const char (*)[42])"NEW_ACTIVITY_COND_FINISH_POTION_ANY_LEVEL",
      (data::NewActivityCondType *)(v1 + 784));
    if ( *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 800, "NEW_ACTIVITY_COND_FINISH_POTION_ANY_LEVEL");
    *(_DWORD *)(v1 + 800) = 45;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[49],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2936),
      (const char (*)[49])"NEW_ACTIVITY_COND_FINISH_CUSTOM_DUNGEON_OFFICIAL",
      (data::NewActivityCondType *)(v1 + 800));
    if ( *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 816, "NEW_ACTIVITY_COND_FINISH_CUSTOM_DUNGEON_OFFICIAL");
    *(_DWORD *)(v1 + 816) = 46;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[48],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 2976),
      (const char (*)[48])"NEW_ACTIVITY_COND_QUEST_FINISH_ALLOW_QUICK_OPEN",
      (data::NewActivityCondType *)(v1 + 816));
    if ( *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 832, "NEW_ACTIVITY_COND_QUEST_FINISH_ALLOW_QUICK_OPEN");
    *(_DWORD *)(v1 + 832) = 47;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[38],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3016),
      (const char (*)[38])"NEW_ACTIVITY_COND_FINISH_PHOTO_POS_ID",
      (data::NewActivityCondType *)(v1 + 832));
    if ( *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 848, "NEW_ACTIVITY_COND_FINISH_PHOTO_POS_ID");
    *(_DWORD *)(v1 + 848) = 48;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[46],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3056),
      (const char (*)[46])"NEW_ACTIVITY_COND_FINISH_MUSIC_GAME_ALL_LEVEL",
      (data::NewActivityCondType *)(v1 + 848));
    if ( *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 864, "NEW_ACTIVITY_COND_FINISH_MUSIC_GAME_ALL_LEVEL");
    *(_DWORD *)(v1 + 864) = 49;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[58],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3096),
      (const char (*)[58])"NEW_ACTIVITY_COND_CURRENT_LUMINANCE_STONE_CHALLENGE_STAGE",
      (data::NewActivityCondType *)(v1 + 864));
    if ( *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 880, "NEW_ACTIVITY_COND_CURRENT_LUMINANCE_STONE_CHALLENGE_STAGE");
    *(_DWORD *)(v1 + 880) = 50;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[67],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3136),
      (const char (*)[67])"NEW_ACTIVITY_COND_LUMINANCE_STONE_CHALLENGE_FINAL_GALLERY_COMPLETE",
      (data::NewActivityCondType *)(v1 + 880));
    if ( *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 896, "NEW_ACTIVITY_COND_LUMINANCE_STONE_CHALLENGE_FINAL_GALLERY_COMPLETE");
    *(_DWORD *)(v1 + 896) = 51;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[45],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3176),
      (const char (*)[45])"NEW_ACTIVITY_COND_OFFERING_LEVEL_GREAT_EQUAL",
      (data::NewActivityCondType *)(v1 + 896));
    if ( *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 912, "NEW_ACTIVITY_COND_OFFERING_LEVEL_GREAT_EQUAL");
    *(_DWORD *)(v1 + 912) = 52;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[62],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3216),
      (const char (*)[62])"NEW_ACTIVITY_COND_LUMINANCE_STONE_CHALLENGE_STAGE_GREAT_EQUAL",
      (data::NewActivityCondType *)(v1 + 912));
    if ( *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 928, "NEW_ACTIVITY_COND_LUMINANCE_STONE_CHALLENGE_STAGE_GREAT_EQUAL");
    *(_DWORD *)(v1 + 928) = 53;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[51],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3256),
      (const char (*)[51])"NEW_ACTIVITY_COND_FINISH_ANY_ARENA_CHALLENGE_LEVEL",
      (data::NewActivityCondType *)(v1 + 928));
    if ( *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 944, "NEW_ACTIVITY_COND_FINISH_ANY_ARENA_CHALLENGE_LEVEL");
    *(_DWORD *)(v1 + 944) = 54;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[41],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3296),
      (const char (*)[41])"NEW_ACTIVITY_COND_GACHA_CAN_CREATE_ROBOT",
      (data::NewActivityCondType *)(v1 + 944));
    if ( *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 960, "NEW_ACTIVITY_COND_GACHA_CAN_CREATE_ROBOT");
    *(_DWORD *)(v1 + 960) = 55;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[60],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3336),
      (const char (*)[60])"NEW_ACTIVITY_COND_FINISH_ANY_INSTABLE_SPRAY_CHALLENGE_STAGE",
      (data::NewActivityCondType *)(v1 + 960));
    if ( *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 976, "NEW_ACTIVITY_COND_FINISH_ANY_INSTABLE_SPRAY_CHALLENGE_STAGE");
    *(_DWORD *)(v1 + 976) = 56;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[48],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3376),
      (const char (*)[48])"NEW_ACTIVITY_COND_TREASURE_SEELIE_FINISH_REGION",
      (data::NewActivityCondType *)(v1 + 976));
    if ( *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 992, "NEW_ACTIVITY_COND_TREASURE_SEELIE_FINISH_REGION");
    *(_DWORD *)(v1 + 992) = 57;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[44],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3416),
      (const char (*)[44])"NEW_ACTIVITY_COND_FINISH_SEEK_PRESENT_STAGE",
      (data::NewActivityCondType *)(v1 + 992));
    if ( *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1008, "NEW_ACTIVITY_COND_FINISH_SEEK_PRESENT_STAGE");
    *(_DWORD *)(v1 + 1008) = 58;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[50],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3456),
      (const char (*)[50])"NEW_ACTIVITY_COND_FINISH_ROCK_BOARD_EXPLORE_STAGE",
      (data::NewActivityCondType *)(v1 + 1008));
    if ( *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1024, "NEW_ACTIVITY_COND_FINISH_ROCK_BOARD_EXPLORE_STAGE");
    *(_DWORD *)(v1 + 1024) = 59;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[38],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3496),
      (const char (*)[38])"NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND",
      (data::NewActivityCondType *)(v1 + 1024));
    if ( *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1040, "NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND");
    *(_DWORD *)(v1 + 1040) = 60;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[40],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3536),
      (const char (*)[40])"NEW_ACTIVITY_COND_VINTAGE_MARKET_COIN_A",
      (data::NewActivityCondType *)(v1 + 1040));
    if ( *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1056, "NEW_ACTIVITY_COND_VINTAGE_MARKET_COIN_A");
    *(_DWORD *)(v1 + 1056) = 61;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[45],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3576),
      (const char (*)[45])"NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND_SETTLE",
      (data::NewActivityCondType *)(v1 + 1056));
    if ( *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1072, "NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND_SETTLE");
    *(_DWORD *)(v1 + 1072) = 62;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[45],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3616),
      (const char (*)[45])"NEW_ACTIVITY_COND_FUNGUS_FIGHTER_FINISH_CAMP",
      (data::NewActivityCondType *)(v1 + 1072));
    if ( *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1088, "NEW_ACTIVITY_COND_FUNGUS_FIGHTER_FINISH_CAMP");
    *(_DWORD *)(v1 + 1088) = 63;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[62],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3656),
      (const char (*)[62])"NEW_ACTIVITY_COND_EFFIGY_CHALLENGE_V2_FINISH_LEVEL_DIFFICULTY",
      (data::NewActivityCondType *)(v1 + 1088));
    if ( *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1104, "NEW_ACTIVITY_COND_EFFIGY_CHALLENGE_V2_FINISH_LEVEL_DIFFICULTY");
    *(_DWORD *)(v1 + 1104) = 64;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[51],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3696),
      (const char (*)[51])"NEW_ACTIVITY_COND_BRICK_BREAKER_STAGE_LEVEL_FINISH",
      (data::NewActivityCondType *)(v1 + 1104));
    if ( *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1120, "NEW_ACTIVITY_COND_BRICK_BREAKER_STAGE_LEVEL_FINISH");
    *(_DWORD *)(v1 + 1120) = 65;
    std::pair<std::string const,data::NewActivityCondType>::pair<char const(&)[42],data::NewActivityCondType,true>(
      (std::pair<const std::string,data::NewActivityCondType> *const)(v1 + 3736),
      (const char (*)[42])"NEW_ACTIVITY_COND_DUEL_HEART_FINISH_LEVEL",
      (data::NewActivityCondType *)(v1 + 1120));
    std::allocator<std::pair<std::string const,data::NewActivityCondType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityCondType> > *const)(v1 + 64));
    std::unordered_map<std::string,data::NewActivityCondType>::unordered_map(
      &data::getNewActivityCondTypeNameMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const std::string,data::NewActivityCondType> >)__PAIR128__(66LL, v1 + 1136),
      0LL,
      (const std::unordered_map<std::string,data::NewActivityCondType>::hasher *)(v1 + 32),
      (const std::unordered_map<std::string,data::NewActivityCondType>::key_equal *)(v1 + 48),
      (const std::unordered_map<std::string,data::NewActivityCondType>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityCondTypeNameMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityCondType>::~unordered_map,
      &data::getNewActivityCondTypeNameMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<std::string const,data::NewActivityCondType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityCondType> > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const std::string,data::NewActivityCondType> *)(v1 + 3776);
          i != (std::pair<const std::string,data::NewActivityCondType> *)(v1 + 1136);
          std::pair<std::string const,data::NewActivityCondType>::~pair(i) )
    {
      --i;
    }
  }
  if ( v6 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF81E0) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 488) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_6(v1, 3904LL, v6);
  }
  return &data::getNewActivityCondTypeNameMap[abi:cxx11](void)::m;
};

// Line 682: range 000000000EE9DB90-000000000EEA2D44
const std::map<data::NewActivityCondType,std::pair<std::string,std::string >> *__cdecl data::getNewActivityCondTypeEnumMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *i; // r14
  _DWORD *v5; // rax
  _DWORD *v6; // rax
  _DWORD *v7; // rax
  _DWORD *v8; // rax
  _DWORD *v9; // rax
  _DWORD *v10; // rax
  _DWORD *v11; // rax
  _DWORD *v12; // rax
  _DWORD *v13; // rax
  _DWORD *v14; // rax
  _DWORD *v15; // rax
  _DWORD *v16; // rax
  _DWORD *v17; // rax
  _DWORD *v18; // rax
  _DWORD *v19; // rax
  _DWORD *v20; // rax
  _DWORD *v21; // rax
  _DWORD *v22; // rax
  _DWORD *v23; // rax
  _DWORD *v24; // rax
  _DWORD *v25; // rax
  _DWORD *v26; // rax
  _DWORD *v27; // rax
  _DWORD *v28; // rax
  _DWORD *v29; // rax
  _DWORD *v30; // rax
  _DWORD *v31; // rax
  _DWORD *v32; // rax
  _DWORD *v33; // rax
  _DWORD *v34; // rax
  _DWORD *v35; // rax
  _DWORD *v36; // rax
  _DWORD *v37; // rax
  _DWORD *v38; // rax
  _DWORD *v39; // rax
  _DWORD *v40; // rax
  _DWORD *v41; // rax
  _DWORD *v42; // rax
  _DWORD *v43; // rax
  _DWORD *v44; // rax
  _DWORD *v45; // rax
  _DWORD *v46; // rax
  _DWORD *v47; // rax
  _DWORD *v48; // rax
  _DWORD *v49; // rax
  _DWORD *v50; // rax
  _DWORD *v51; // rax
  _DWORD *v52; // rax
  _DWORD *v53; // rax
  _DWORD *v54; // rax
  _DWORD *v55; // rax
  _DWORD *v56; // rax
  _DWORD *v57; // rax
  _DWORD *v58; // rax
  _DWORD *v59; // rax
  _DWORD *v60; // rax
  _DWORD *v61; // rax
  _DWORD *v62; // rax
  _DWORD *v63; // rax
  _DWORD *v64; // rax
  _DWORD *v65; // rax
  _DWORD *v66; // rax
  _DWORD *v67; // rax
  _DWORD *v68; // rax
  _DWORD *v69; // rax
  char v71[12528]; // [rsp+10h] [rbp-30F0h] BYREF

  v1 = (unsigned __int64)v71;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_8(12480LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "135 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9 <unknown> 128 4 "
                        "9 <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 4 9 <unknown> 208 4 9 <unk"
                        "nown> 224 4 9 <unknown> 240 4 9 <unknown> 256 4 9 <unknown> 272 4 9 <unknown> 288 4 9 <unknown> "
                        "304 4 9 <unknown> 320 4 9 <unknown> 336 4 9 <unknown> 352 4 9 <unknown> 368 4 9 <unknown> 384 4 "
                        "9 <unknown> 400 4 9 <unknown> 416 4 9 <unknown> 432 4 9 <unknown> 448 4 9 <unknown> 464 4 9 <unk"
                        "nown> 480 4 9 <unknown> 496 4 9 <unknown> 512 4 9 <unknown> 528 4 9 <unknown> 544 4 9 <unknown> "
                        "560 4 9 <unknown> 576 4 9 <unknown> 592 4 9 <unknown> 608 4 9 <unknown> 624 4 9 <unknown> 640 4 "
                        "9 <unknown> 656 4 9 <unknown> 672 4 9 <unknown> 688 4 9 <unknown> 704 4 9 <unknown> 720 4 9 <unk"
                        "nown> 736 4 9 <unknown> 752 4 9 <unknown> 768 4 9 <unknown> 784 4 9 <unknown> 800 4 9 <unknown> "
                        "816 4 9 <unknown> 832 4 9 <unknown> 848 4 9 <unknown> 864 4 9 <unknown> 880 4 9 <unknown> 896 4 "
                        "9 <unknown> 912 4 9 <unknown> 928 4 9 <unknown> 944 4 9 <unknown> 960 4 9 <unknown> 976 4 9 <unk"
                        "nown> 992 4 9 <unknown> 1008 4 9 <unknown> 1024 4 9 <unknown> 1040 4 9 <unknown> 1056 4 9 <unkno"
                        "wn> 1072 4 9 <unknown> 1088 4 9 <unknown> 1104 4 9 <unknown> 1120 4 9 <unknown> 1136 64 9 <unkno"
                        "wn> 1232 64 9 <unknown> 1328 64 9 <unknown> 1424 64 9 <unknown> 1520 64 9 <unknown> 1616 64 9 <u"
                        "nknown> 1712 64 9 <unknown> 1808 64 9 <unknown> 1904 64 9 <unknown> 2000 64 9 <unknown> 2096 64 "
                        "9 <unknown> 2192 64 9 <unknown> 2288 64 9 <unknown> 2384 64 9 <unknown> 2480 64 9 <unknown> 2576"
                        " 64 9 <unknown> 2672 64 9 <unknown> 2768 64 9 <unknown> 2864 64 9 <unknown> 2960 64 9 <unknown> "
                        "3056 64 9 <unknown> 3152 64 9 <unknown> 3248 64 9 <unknown> 3344 64 9 <unknown> 3440 64 9 <unkno"
                        "wn> 3536 64 9 <unknown> 3632 64 9 <unknown> 3728 64 9 <unknown> 3824 64 9 <unknown> 3920 64 9 <u"
                        "nknown> 4016 64 9 <unknown> 4112 64 9 <unknown> 4208 64 9 <unknown> 4304 64 9 <unknown> 4400 64 "
                        "9 <unknown> 4496 64 9 <unknown> 4592 64 9 <unknown> 4688 64 9 <unknown> 4784 64 9 <unknown> 4880"
                        " 64 9 <unknown> 4976 64 9 <unknown> 5072 64 9 <unknown> 5168 64 9 <unknown> 5264 64 9 <unknown> "
                        "5360 64 9 <unknown> 5456 64 9 <unknown> 5552 64 9 <unknown> 5648 64 9 <unknown> 5744 64 9 <unkno"
                        "wn> 5840 64 9 <unknown> 5936 64 9 <unknown> 6032 64 9 <unknown> 6128 64 9 <unknown> 6224 64 9 <u"
                        "nknown> 6320 64 9 <unknown> 6416 64 9 <unknown> 6512 64 9 <unknown> 6608 64 9 <unknown> 6704 64 "
                        "9 <unknown> 6800 64 9 <unknown> 6896 64 9 <unknown> 6992 64 9 <unknown> 7088 64 9 <unknown> 7184"
                        " 64 9 <unknown> 7280 64 9 <unknown> 7376 64 9 <unknown> 7472 4752 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityCondTypeEnumMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753551;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862724] = -234556924;
  v3[536862725] = -234556924;
  v3[536862726] = -234556924;
  v3[536862727] = -234556924;
  v3[536862728] = -234556924;
  v3[536862729] = -234556924;
  v3[536862730] = -234556924;
  v3[536862731] = -234556924;
  v3[536862732] = -234556924;
  v3[536862733] = -234556924;
  v3[536862734] = -234556924;
  v3[536862735] = -234556924;
  v3[536862736] = -234556924;
  v3[536862737] = -234556924;
  v3[536862738] = -234556924;
  v3[536862739] = -234556924;
  v3[536862740] = -234556924;
  v3[536862741] = -234556924;
  v3[536862742] = -234556924;
  v3[536862743] = -234556924;
  v3[536862744] = -234556924;
  v3[536862745] = -234556924;
  v3[536862746] = -234556924;
  v3[536862747] = -234556924;
  v3[536862748] = -234556924;
  v3[536862749] = -234556924;
  v3[536862750] = -234556924;
  v3[536862751] = -234556924;
  v3[536862752] = -234556924;
  v3[536862753] = -234556924;
  v3[536862754] = -234556924;
  v3[536862755] = 61956;
  v3[536862757] = -219021312;
  v3[536862758] = 62194;
  v3[536862760] = -219021312;
  v3[536862761] = 62194;
  v3[536862763] = -219021312;
  v3[536862764] = 62194;
  v3[536862766] = -219021312;
  v3[536862767] = 62194;
  v3[536862769] = -219021312;
  v3[536862770] = 62194;
  v3[536862772] = -219021312;
  v3[536862773] = 62194;
  v3[536862775] = -219021312;
  v3[536862776] = 62194;
  v3[536862778] = -219021312;
  v3[536862779] = 62194;
  v3[536862781] = -219021312;
  v3[536862782] = 62194;
  v3[536862784] = -219021312;
  v3[536862785] = 62194;
  v3[536862787] = -219021312;
  v3[536862788] = 62194;
  v3[536862790] = -219021312;
  v3[536862791] = 62194;
  v3[536862793] = -219021312;
  v3[536862794] = 62194;
  v3[536862796] = -219021312;
  v3[536862797] = 62194;
  v3[536862799] = -219021312;
  v3[536862800] = 62194;
  v3[536862802] = -219021312;
  v3[536862803] = 62194;
  v3[536862805] = -219021312;
  v3[536862806] = 62194;
  v3[536862808] = -219021312;
  v3[536862809] = 62194;
  v3[536862811] = -219021312;
  v3[536862812] = 62194;
  v3[536862814] = -219021312;
  v3[536862815] = 62194;
  v3[536862817] = -219021312;
  v3[536862818] = 62194;
  v3[536862820] = -219021312;
  v3[536862821] = 62194;
  v3[536862823] = -219021312;
  v3[536862824] = 62194;
  v3[536862826] = -219021312;
  v3[536862827] = 62194;
  v3[536862829] = -219021312;
  v3[536862830] = 62194;
  v3[536862832] = -219021312;
  v3[536862833] = 62194;
  v3[536862835] = -219021312;
  v3[536862836] = 62194;
  v3[536862838] = -219021312;
  v3[536862839] = 62194;
  v3[536862841] = -219021312;
  v3[536862842] = 62194;
  v3[536862844] = -219021312;
  v3[536862845] = 62194;
  v3[536862847] = -219021312;
  v3[536862848] = 62194;
  v3[536862850] = -219021312;
  v3[536862851] = 62194;
  v3[536862853] = -219021312;
  v3[536862854] = 62194;
  v3[536862856] = -219021312;
  v3[536862857] = 62194;
  v3[536862859] = -219021312;
  v3[536862860] = 62194;
  v3[536862862] = -219021312;
  v3[536862863] = 62194;
  v3[536862865] = -219021312;
  v3[536862866] = 62194;
  v3[536862868] = -219021312;
  v3[536862869] = 62194;
  v3[536862871] = -219021312;
  v3[536862872] = 62194;
  v3[536862874] = -219021312;
  v3[536862875] = 62194;
  v3[536862877] = -219021312;
  v3[536862878] = 62194;
  v3[536862880] = -219021312;
  v3[536862881] = 62194;
  v3[536862883] = -219021312;
  v3[536862884] = 62194;
  v3[536862886] = -219021312;
  v3[536862887] = 62194;
  v3[536862889] = -219021312;
  v3[536862890] = 62194;
  v3[536862892] = -219021312;
  v3[536862893] = 62194;
  v3[536862895] = -219021312;
  v3[536862896] = 62194;
  v3[536862898] = -219021312;
  v3[536862899] = 62194;
  v3[536862901] = -219021312;
  v3[536862902] = 62194;
  v3[536862904] = -219021312;
  v3[536862905] = 62194;
  v3[536862907] = -219021312;
  v3[536862908] = 62194;
  v3[536862910] = -219021312;
  v3[536862911] = 62194;
  v3[536862913] = -219021312;
  v3[536862914] = 62194;
  v3[536862916] = -219021312;
  v3[536862917] = 62194;
  v3[536862919] = -219021312;
  v3[536862920] = 62194;
  v3[536862922] = -219021312;
  v3[536862923] = 62194;
  v3[536862925] = -219021312;
  v3[536862926] = 62194;
  v3[536862928] = -219021312;
  v3[536862929] = 62194;
  v3[536862931] = -219021312;
  v3[536862932] = 62194;
  v3[536862934] = -219021312;
  v3[536862935] = 62194;
  v3[536862937] = -219021312;
  v3[536862938] = 62194;
  v3[536862940] = -219021312;
  v3[536862941] = 62194;
  v3[536862943] = -219021312;
  v3[536862944] = 62194;
  v3[536862946] = -219021312;
  v3[536862947] = 62194;
  v3[536862949] = -219021312;
  v3[536862950] = 62194;
  v3[536862952] = -219021312;
  v3[536862953] = 62194;
  v3[536863102] = -202116109;
  v3[536863103] = -202116109;
  v3[536863104] = -202116109;
  v3[536863105] = -202116109;
  v3[536863106] = -202116109;
  v3[536863107] = -202116109;
  v3[536863108] = -202116109;
  v3[536863109] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityCondTypeEnumMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityCondTypeEnumMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string,std::string>::pair<char const(&)[1],char const(&)[23],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1136),
      (const char (*)[1])byte_1A3FEBE0,
      (const char (*)[23])"NEW_ACTIVITY_COND_NONE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 7472),
      (data::NewActivityCondType *)(v1 + 80),
      (const std::pair<std::string,std::string > *)(v1 + 1136));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, v1 + 80);
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[31],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1232),
      (const char (*)[19])byte_1A441740,
      (const char (*)[31])"NEW_ACTIVITY_COND_TIME_GREATER");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 7544),
      (data::NewActivityCondType *)(v1 + 96),
      (const std::pair<std::string,std::string > *)(v1 + 1232));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, v1 + 96);
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1328),
      (const char (*)[19])byte_1A441780,
      (const char (*)[28])"NEW_ACTIVITY_COND_TIME_LESS");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 7616),
      (data::NewActivityCondType *)(v1 + 112),
      (const std::pair<std::string,std::string > *)(v1 + 1328));
    if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 128, v1 + 112);
    *(_DWORD *)(v1 + 128) = 3;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1424),
      (const char (*)[25])byte_1A440CC0,
      (const char (*)[39])"NEW_ACTIVITY_COND_PLAYER_LEVEL_GREATER");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 7688),
      (data::NewActivityCondType *)(v1 + 128),
      (const std::pair<std::string,std::string > *)(v1 + 1424));
    if ( *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 144, v1 + 128);
    *(_DWORD *)(v1 + 144) = 4;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[31],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1520),
      (const char (*)[13])byte_1A440D00,
      (const char (*)[31])"NEW_ACTIVITY_COND_QUEST_FINISH");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 7760),
      (data::NewActivityCondType *)(v1 + 144),
      (const std::pair<std::string,std::string > *)(v1 + 1520));
    if ( *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 160, v1 + 144);
    *(_DWORD *)(v1 + 160) = 5;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[30],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1616),
      (const char (*)[13])byte_1A4417C0,
      (const char (*)[30])"NEW_ACTIVITY_COND_FINISH_TALK");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 7832),
      (data::NewActivityCondType *)(v1 + 160),
      (const std::pair<std::string,std::string > *)(v1 + 1616));
    if ( *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 176, v1 + 160);
    *(_DWORD *)(v1 + 176) = 6;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[29],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1712),
      (const char (*)[16])byte_1A441800,
      (const char (*)[29])"NEW_ACTIVITY_COND_CREATE_NPC");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 7904),
      (data::NewActivityCondType *)(v1 + 176),
      (const std::pair<std::string,std::string > *)(v1 + 1712));
    if ( *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 192, v1 + 176);
    *(_DWORD *)(v1 + 192) = 7;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[34],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1808),
      (const char (*)[16])byte_1A441840,
      (const char (*)[34])"NEW_ACTIVITY_COND_NOT_FINISH_TALK");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 7976),
      (data::NewActivityCondType *)(v1 + 192),
      (const std::pair<std::string,std::string > *)(v1 + 1808));
    if ( *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 208, v1 + 192);
    *(_DWORD *)(v1 + 208) = 8;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 1904),
      (const char (*)[31])byte_1A441880,
      (const char (*)[39])"NEW_ACTIVITY_COND_SALESMAN_CAN_DELIVER");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8048),
      (data::NewActivityCondType *)(v1 + 208),
      (const std::pair<std::string,std::string > *)(v1 + 1904));
    if ( *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 224, v1 + 208);
    *(_DWORD *)(v1 + 224) = 9;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2000),
      (const char (*)[31])byte_1A4418C0,
      (const char (*)[42])"NEW_ACTIVITY_COND_SALESMAN_CAN_GET_REWARD");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8120),
      (data::NewActivityCondType *)(v1 + 224),
      (const std::pair<std::string,std::string > *)(v1 + 2000));
    if ( *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 240, v1 + 224);
    *(_DWORD *)(v1 + 240) = 10;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2096),
      (const char (*)[25])byte_1A441900,
      (const char (*)[45])"NEW_ACTIVITY_COND_ASTER_MID_CAMP_REFRESHABLE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 0x2000),
      (data::NewActivityCondType *)(v1 + 240),
      (const std::pair<std::string,std::string > *)(v1 + 2096));
    if ( *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 256, v1 + 240);
    *(_DWORD *)(v1 + 256) = 11;
    std::pair<std::string,std::string>::pair<char const(&)[20],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2192),
      (const char (*)[20])byte_1A441940,
      (const char (*)[33])"NEW_ACTIVITY_COND_FINISH_WATCHER");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8264),
      (data::NewActivityCondType *)(v1 + 256),
      (const std::pair<std::string,std::string > *)(v1 + 2192));
    if ( *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 272, v1 + 256);
    *(_DWORD *)(v1 + 272) = 12;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[35],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2288),
      (const char (*)[31])byte_1A441980,
      (const char (*)[35])"NEW_ACTIVITY_COND_DAYS_GREAT_EQUAL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8336),
      (data::NewActivityCondType *)(v1 + 272),
      (const std::pair<std::string,std::string > *)(v1 + 2288));
    if ( *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 288, v1 + 272);
    *(_DWORD *)(v1 + 288) = 13;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2384),
      (const char (*)[25])byte_1A4419C0,
      (const char (*)[28])"NEW_ACTIVITY_COND_DAYS_LESS");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8408),
      (data::NewActivityCondType *)(v1 + 288),
      (const std::pair<std::string,std::string > *)(v1 + 2384));
    if ( *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 304, v1 + 288);
    *(_DWORD *)(v1 + 304) = 14;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2480),
      (const char (*)[31])byte_1A441A00,
      (const char (*)[43])"NEW_ACTIVITY_COND_PLAYER_LEVEL_GREAT_EQUAL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8480),
      (data::NewActivityCondType *)(v1 + 304),
      (const std::pair<std::string,std::string > *)(v1 + 2480));
    if ( *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 320, v1 + 304);
    *(_DWORD *)(v1 + 320) = 15;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2576),
      (const char (*)[16])byte_1A441A40,
      (const char (*)[42])"NEW_ACTIVITY_COND_SCENE_MP_PLAY_ACTIVATED");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8552),
      (data::NewActivityCondType *)(v1 + 320),
      (const std::pair<std::string,std::string > *)(v1 + 2576));
    if ( *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 336, v1 + 320);
    *(_DWORD *)(v1 + 336) = 16;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2672),
      (const char (*)[19])byte_1A441A80,
      (const char (*)[37])"NEW_ACTIVITY_COND_SEA_LAMP_POPULARIT");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8624),
      (data::NewActivityCondType *)(v1 + 336),
      (const std::pair<std::string,std::string > *)(v1 + 2672));
    if ( *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 352, v1 + 336);
    *(_DWORD *)(v1 + 352) = 17;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2768),
      (const char (*)[16])byte_1A441AC0,
      (const char (*)[33])"NEW_ACTIVITY_COND_SEA_LAMP_PHASE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8696),
      (data::NewActivityCondType *)(v1 + 352),
      (const std::pair<std::string,std::string > *)(v1 + 2768));
    if ( *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 368, v1 + 352);
    *(_DWORD *)(v1 + 368) = 18;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[34],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2864),
      (const char (*)[22])byte_1A441B00,
      (const char (*)[34])"NEW_ACTIVITY_COND_MECHANICUS_OPEN");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8768),
      (data::NewActivityCondType *)(v1 + 368),
      (const std::pair<std::string,std::string > *)(v1 + 2864));
    if ( *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 384, v1 + 368);
    *(_DWORD *)(v1 + 384) = 19;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2960),
      (const char (*)[25])byte_1A441B40,
      (const char (*)[45])"NEW_ACTIVITY_COND_FINISH_REGION_SEARCH_LOGIC");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8840),
      (data::NewActivityCondType *)(v1 + 384),
      (const std::pair<std::string,std::string > *)(v1 + 2960));
    if ( *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 400, v1 + 384);
    *(_DWORD *)(v1 + 400) = 20;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3056),
      (const char (*)[19])byte_1A441B80,
      (const char (*)[39])"NEW_ACTIVITY_COND_FINISH_REGION_SEARCH");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8912),
      (data::NewActivityCondType *)(v1 + 400),
      (const std::pair<std::string,std::string > *)(v1 + 3056));
    if ( *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 416, v1 + 400);
    *(_DWORD *)(v1 + 416) = 21;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3152),
      (const char (*)[25])byte_1A441BC0,
      (const char (*)[44])"NEW_ACTIVITY_COND_FINISH_WATER_SPIRIT_PHASE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 8984),
      (data::NewActivityCondType *)(v1 + 416),
      (const std::pair<std::string,std::string > *)(v1 + 3152));
    if ( *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 432, v1 + 416);
    *(_DWORD *)(v1 + 432) = 22;
    std::pair<std::string,std::string>::pair<char const(&)[40],char const(&)[52],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3248),
      (const char (*)[40])byte_1A441C00,
      (const char (*)[52])"NEW_ACTIVITY_COND_FINISH_FIND_HILICHURL_LEVEL_EQUAL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9056),
      (data::NewActivityCondType *)(v1 + 432),
      (const std::pair<std::string,std::string > *)(v1 + 3248));
    if ( *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 448, v1 + 432);
    *(_DWORD *)(v1 + 448) = 23;
    std::pair<std::string,std::string>::pair<char const(&)[40],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3344),
      (const char (*)[40])byte_1A441C60,
      (const char (*)[51])"NEW_ACTIVITY_COND_FINISH_FIND_HILICHURL_LEVEL_LESS");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9128),
      (data::NewActivityCondType *)(v1 + 448),
      (const std::pair<std::string,std::string > *)(v1 + 3344));
    if ( *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 464, v1 + 448);
    *(_DWORD *)(v1 + 464) = 24;
    std::pair<std::string,std::string>::pair<char const(&)[49],char const(&)[65],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3440),
      (const char (*)[49])byte_1A441CC0,
      (const char (*)[65])"NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ONEOFF_DUNGEON_IN_STAGE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9200),
      (data::NewActivityCondType *)(v1 + 464),
      (const std::pair<std::string,std::string > *)(v1 + 3440));
    if ( *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 480, v1 + 464);
    *(_DWORD *)(v1 + 480) = 25;
    std::pair<std::string,std::string>::pair<char const(&)[46],char const(&)[60],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3536),
      (const char (*)[46])byte_1A441D20,
      (const char (*)[60])"NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ANY_ONEOFF_DUNGEON");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9272),
      (data::NewActivityCondType *)(v1 + 480),
      (const std::pair<std::string,std::string > *)(v1 + 3536));
    if ( *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 496, v1 + 480);
    *(_DWORD *)(v1 + 496) = 26;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3632),
      (const char (*)[22])byte_1A441D80,
      (const char (*)[41])"NEW_ACTIVITY_COND_SEPCIFIED_ACTIVITY_END");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9344),
      (data::NewActivityCondType *)(v1 + 496),
      (const std::pair<std::string,std::string > *)(v1 + 3632));
    if ( *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 512, v1 + 496);
    *(_DWORD *)(v1 + 512) = 27;
    std::pair<std::string,std::string>::pair<char const(&)[35],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3728),
      (const char (*)[35])byte_1A441DC0,
      (const char (*)[51])"NEW_ACTIVITY_COND_UNLOCKED_ALL_LISTED_SCENE_POINTS");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9416),
      (data::NewActivityCondType *)(v1 + 512),
      (const std::pair<std::string,std::string > *)(v1 + 3728));
    if ( *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 528, v1 + 512);
    *(_DWORD *)(v1 + 528) = 28;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[59],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3824),
      (const char (*)[34])byte_1A441E20,
      (const char (*)[59])"NEW_ACTIVITY_COND_TREASURE_MAP_BONUS_SPOT_GOT_ANY_FRAGMENT");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9488),
      (data::NewActivityCondType *)(v1 + 528),
      (const std::pair<std::string,std::string > *)(v1 + 3824));
    if ( *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 544, v1 + 528);
    *(_DWORD *)(v1 + 544) = 29;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3920),
      (const char (*)[25])byte_1A441E80,
      (const char (*)[37])"NEW_ACTIVITY_COND_ITEM_COUNT_GREATER");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9560),
      (data::NewActivityCondType *)(v1 + 544),
      (const std::pair<std::string,std::string > *)(v1 + 3920));
    if ( *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 560, v1 + 544);
    *(_DWORD *)(v1 + 560) = 30;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4016),
      (const char (*)[25])byte_1A441EC0,
      (const char (*)[43])"NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_GREATER");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9632),
      (data::NewActivityCondType *)(v1 + 560),
      (const std::pair<std::string,std::string > *)(v1 + 4016));
    if ( *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 576, v1 + 560);
    *(_DWORD *)(v1 + 576) = 31;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4112),
      (const char (*)[25])byte_1A441F00,
      (const char (*)[40])"NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_LESS");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9704),
      (data::NewActivityCondType *)(v1 + 576),
      (const std::pair<std::string,std::string > *)(v1 + 4112));
    if ( *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 592, v1 + 576);
    *(_DWORD *)(v1 + 592) = 32;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4208),
      (const char (*)[25])byte_1A441F40,
      (const char (*)[41])"NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_EQUAL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9776),
      (data::NewActivityCondType *)(v1 + 592),
      (const std::pair<std::string,std::string > *)(v1 + 4208));
    if ( *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 608, v1 + 592);
    *(_DWORD *)(v1 + 608) = 33;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4304),
      (const char (*)[25])byte_1A441F80,
      (const char (*)[38])"NEW_ACTIVITY_COND_FINISH_DIG_ACTIVITY");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9848),
      (data::NewActivityCondType *)(v1 + 608),
      (const std::pair<std::string,std::string > *)(v1 + 4304));
    if ( *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 624, v1 + 608);
    *(_DWORD *)(v1 + 624) = 34;
    std::pair<std::string,std::string>::pair<char const(&)[18],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4400),
      (const char (*)[18])byte_1A441FC0,
      (const char (*)[40])"NEW_ACTIVITY_COND_GROUP_BUNDLE_FINISHED");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9920),
      (data::NewActivityCondType *)(v1 + 624),
      (const std::pair<std::string,std::string > *)(v1 + 4400));
    if ( *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 640, v1 + 624);
    *(_DWORD *)(v1 + 640) = 35;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4496),
      (const char (*)[31])byte_1A442000,
      (const char (*)[43])"NEW_ACTIVITY_COND_PLANT_FLOWER_CAN_DELIVER");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 9992),
      (data::NewActivityCondType *)(v1 + 640),
      (const std::pair<std::string,std::string > *)(v1 + 4496));
    if ( *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 656, v1 + 640);
    *(_DWORD *)(v1 + 656) = 36;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4592),
      (const char (*)[19])byte_1A442040,
      (const char (*)[39])"NEW_ACTIVITY_COND_LUNA_RITE_ATMOSPHERE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10064),
      (data::NewActivityCondType *)(v1 + 656),
      (const std::pair<std::string,std::string > *)(v1 + 4592));
    if ( *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 672, v1 + 656);
    *(_DWORD *)(v1 + 672) = 37;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4688),
      (const char (*)[25])byte_1A442080,
      (const char (*)[37])"NEW_ACTIVITY_COND_FINISH_HACHI_STAGE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10136),
      (data::NewActivityCondType *)(v1 + 672),
      (const std::pair<std::string,std::string > *)(v1 + 4688));
    if ( *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 688, v1 + 672);
    *(_DWORD *)(v1 + 688) = 38;
    std::pair<std::string,std::string>::pair<char const(&)[46],char const(&)[60],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4784),
      (const char (*)[46])byte_1A4420C0,
      (const char (*)[60])"NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ANY_STAGE_ALL_CAMP");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10208),
      (data::NewActivityCondType *)(v1 + 688),
      (const std::pair<std::string,std::string > *)(v1 + 4784));
    if ( *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 704, v1 + 688);
    *(_DWORD *)(v1 + 704) = 39;
    std::pair<std::string,std::string>::pair<char const(&)[46],char const(&)[66],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4880),
      (const char (*)[46])byte_1A442120,
      (const char (*)[66])"NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_APPOINTED_STAGE_ALL_CAMP");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10280),
      (data::NewActivityCondType *)(v1 + 704),
      (const std::pair<std::string,std::string > *)(v1 + 4880));
    if ( *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 720, v1 + 704);
    *(_DWORD *)(v1 + 720) = 40;
    std::pair<std::string,std::string>::pair<char const(&)[43],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4976),
      (const char (*)[43])byte_1A442180,
      (const char (*)[51])"NEW_ACTIVITY_COND_HACHI_FINISH_STEALTH_STAGE_EQUAL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10352),
      (data::NewActivityCondType *)(v1 + 720),
      (const std::pair<std::string,std::string > *)(v1 + 4976));
    if ( *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 736, v1 + 720);
    *(_DWORD *)(v1 + 736) = 41;
    std::pair<std::string,std::string>::pair<char const(&)[43],char const(&)[50],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5072),
      (const char (*)[43])byte_1A4421E0,
      (const char (*)[50])"NEW_ACTIVITY_COND_HACHI_FINISH_BATTLE_STAGE_EQUAL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10424),
      (data::NewActivityCondType *)(v1 + 736),
      (const std::pair<std::string,std::string > *)(v1 + 5072));
    if ( *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 752, v1 + 736);
    *(_DWORD *)(v1 + 752) = 42;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5168),
      (const char (*)[34])byte_1A442240,
      (const char (*)[39])"NEW_ACTIVITY_COND_FINISH_SALVAGE_STAGE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10496),
      (data::NewActivityCondType *)(v1 + 752),
      (const std::pair<std::string,std::string > *)(v1 + 5168));
    if ( *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 768, v1 + 752);
    *(_DWORD *)(v1 + 768) = 43;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5264),
      (const char (*)[22])byte_1A4422A0,
      (const char (*)[41])"NEW_ACTIVITY_COND_FINISH_BARTENDER_LEVEL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10568),
      (data::NewActivityCondType *)(v1 + 768),
      (const std::pair<std::string,std::string > *)(v1 + 5264));
    if ( *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 784, v1 + 768);
    *(_DWORD *)(v1 + 784) = 44;
    std::pair<std::string,std::string>::pair<char const(&)[55],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5360),
      (const char (*)[55])byte_1A4422E0,
      (const char (*)[42])"NEW_ACTIVITY_COND_FINISH_POTION_ANY_LEVEL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10640),
      (data::NewActivityCondType *)(v1 + 784),
      (const std::pair<std::string,std::string > *)(v1 + 5360));
    if ( *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 800, v1 + 784);
    *(_DWORD *)(v1 + 800) = 45;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[49],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5456),
      (const char (*)[22])byte_1A442340,
      (const char (*)[49])"NEW_ACTIVITY_COND_FINISH_CUSTOM_DUNGEON_OFFICIAL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10712),
      (data::NewActivityCondType *)(v1 + 800),
      (const std::pair<std::string,std::string > *)(v1 + 5456));
    if ( *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 816, v1 + 800);
    *(_DWORD *)(v1 + 816) = 46;
    std::pair<std::string,std::string>::pair<char const(&)[33],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5552),
      (const char (*)[33])byte_1A442380,
      (const char (*)[48])"NEW_ACTIVITY_COND_QUEST_FINISH_ALLOW_QUICK_OPEN");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10784),
      (data::NewActivityCondType *)(v1 + 816),
      (const std::pair<std::string,std::string > *)(v1 + 5552));
    if ( *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 832, v1 + 816);
    *(_DWORD *)(v1 + 832) = 47;
    std::pair<std::string,std::string>::pair<char const(&)[30],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5648),
      (const char (*)[30])byte_1A4423E0,
      (const char (*)[38])"NEW_ACTIVITY_COND_FINISH_PHOTO_POS_ID");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10856),
      (data::NewActivityCondType *)(v1 + 832),
      (const std::pair<std::string,std::string > *)(v1 + 5648));
    if ( *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 848, v1 + 832);
    *(_DWORD *)(v1 + 848) = 48;
    std::pair<std::string,std::string>::pair<char const(&)[43],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5744),
      (const char (*)[43])byte_1A442420,
      (const char (*)[46])"NEW_ACTIVITY_COND_FINISH_MUSIC_GAME_ALL_LEVEL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 10928),
      (data::NewActivityCondType *)(v1 + 848),
      (const std::pair<std::string,std::string > *)(v1 + 5744));
    if ( *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 864, v1 + 848);
    *(_DWORD *)(v1 + 864) = 49;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[58],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5840),
      (const char (*)[37])byte_1A442480,
      (const char (*)[58])"NEW_ACTIVITY_COND_CURRENT_LUMINANCE_STONE_CHALLENGE_STAGE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11000),
      (data::NewActivityCondType *)(v1 + 864),
      (const std::pair<std::string,std::string > *)(v1 + 5840));
    if ( *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 880, v1 + 864);
    *(_DWORD *)(v1 + 880) = 50;
    std::pair<std::string,std::string>::pair<char const(&)[35],char const(&)[67],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5936),
      (const char (*)[35])byte_1A4424E0,
      (const char (*)[67])"NEW_ACTIVITY_COND_LUMINANCE_STONE_CHALLENGE_FINAL_GALLERY_COMPLETE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11072),
      (data::NewActivityCondType *)(v1 + 880),
      (const std::pair<std::string,std::string > *)(v1 + 5936));
    if ( *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 896, v1 + 880);
    *(_DWORD *)(v1 + 896) = 51;
    std::pair<std::string,std::string>::pair<char const(&)[46],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6032),
      (const char (*)[46])byte_1A442540,
      (const char (*)[45])"NEW_ACTIVITY_COND_OFFERING_LEVEL_GREAT_EQUAL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11144),
      (data::NewActivityCondType *)(v1 + 896),
      (const std::pair<std::string,std::string > *)(v1 + 6032));
    if ( *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 912, v1 + 896);
    *(_DWORD *)(v1 + 912) = 52;
    std::pair<std::string,std::string>::pair<char const(&)[43],char const(&)[62],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6128),
      (const char (*)[43])byte_1A4425A0,
      (const char (*)[62])"NEW_ACTIVITY_COND_LUMINANCE_STONE_CHALLENGE_STAGE_GREAT_EQUAL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11216),
      (data::NewActivityCondType *)(v1 + 912),
      (const std::pair<std::string,std::string > *)(v1 + 6128));
    if ( *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 928, v1 + 912);
    *(_DWORD *)(v1 + 928) = 53;
    std::pair<std::string,std::string>::pair<char const(&)[43],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6224),
      (const char (*)[43])byte_1A442600,
      (const char (*)[51])"NEW_ACTIVITY_COND_FINISH_ANY_ARENA_CHALLENGE_LEVEL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11288),
      (data::NewActivityCondType *)(v1 + 928),
      (const std::pair<std::string,std::string > *)(v1 + 6224));
    if ( *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 944, v1 + 928);
    *(_DWORD *)(v1 + 944) = 54;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6320),
      (const char (*)[25])byte_1A442660,
      (const char (*)[41])"NEW_ACTIVITY_COND_GACHA_CAN_CREATE_ROBOT");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11360),
      (data::NewActivityCondType *)(v1 + 944),
      (const std::pair<std::string,std::string > *)(v1 + 6320));
    if ( *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 960, v1 + 944);
    *(_DWORD *)(v1 + 960) = 55;
    std::pair<std::string,std::string>::pair<char const(&)[43],char const(&)[60],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6416),
      (const char (*)[43])byte_1A4426A0,
      (const char (*)[60])"NEW_ACTIVITY_COND_FINISH_ANY_INSTABLE_SPRAY_CHALLENGE_STAGE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11432),
      (data::NewActivityCondType *)(v1 + 960),
      (const std::pair<std::string,std::string > *)(v1 + 6416));
    if ( *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 976, v1 + 960);
    *(_DWORD *)(v1 + 976) = 56;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6512),
      (const char (*)[37])byte_1A442700,
      (const char (*)[48])"NEW_ACTIVITY_COND_TREASURE_SEELIE_FINISH_REGION");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11504),
      (data::NewActivityCondType *)(v1 + 976),
      (const std::pair<std::string,std::string > *)(v1 + 6512));
    if ( *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 992, v1 + 976);
    *(_DWORD *)(v1 + 992) = 57;
    std::pair<std::string,std::string>::pair<char const(&)[40],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6608),
      (const char (*)[40])byte_1A442760,
      (const char (*)[44])"NEW_ACTIVITY_COND_FINISH_SEEK_PRESENT_STAGE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11576),
      (data::NewActivityCondType *)(v1 + 992),
      (const std::pair<std::string,std::string > *)(v1 + 6608));
    if ( *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1008, v1 + 992);
    *(_DWORD *)(v1 + 1008) = 58;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[50],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6704),
      (const char (*)[37])byte_1A4427C0,
      (const char (*)[50])"NEW_ACTIVITY_COND_FINISH_ROCK_BOARD_EXPLORE_STAGE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11648),
      (data::NewActivityCondType *)(v1 + 1008),
      (const std::pair<std::string,std::string > *)(v1 + 6704));
    if ( *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1024, v1 + 1008);
    *(_DWORD *)(v1 + 1024) = 59;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6800),
      (const char (*)[31])byte_1A442820,
      (const char (*)[38])"NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11720),
      (data::NewActivityCondType *)(v1 + 1024),
      (const std::pair<std::string,std::string > *)(v1 + 6800));
    if ( *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1040, v1 + 1024);
    *(_DWORD *)(v1 + 1040) = 60;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6896),
      (const char (*)[34])byte_1A442860,
      (const char (*)[40])"NEW_ACTIVITY_COND_VINTAGE_MARKET_COIN_A");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11792),
      (data::NewActivityCondType *)(v1 + 1040),
      (const std::pair<std::string,std::string > *)(v1 + 6896));
    if ( *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1056, v1 + 1040);
    *(_DWORD *)(v1 + 1056) = 61;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6992),
      (const char (*)[31])byte_1A4428C0,
      (const char (*)[45])"NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND_SETTLE");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11864),
      (data::NewActivityCondType *)(v1 + 1056),
      (const std::pair<std::string,std::string > *)(v1 + 6992));
    if ( *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1072, v1 + 1056);
    *(_DWORD *)(v1 + 1072) = 62;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7088),
      (const char (*)[37])byte_1A442900,
      (const char (*)[45])"NEW_ACTIVITY_COND_FUNGUS_FIGHTER_FINISH_CAMP");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 11936),
      (data::NewActivityCondType *)(v1 + 1072),
      (const std::pair<std::string,std::string > *)(v1 + 7088));
    if ( *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1088, v1 + 1072);
    *(_DWORD *)(v1 + 1088) = 63;
    std::pair<std::string,std::string>::pair<char const(&)[40],char const(&)[62],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7184),
      (const char (*)[40])byte_1A442960,
      (const char (*)[62])"NEW_ACTIVITY_COND_EFFIGY_CHALLENGE_V2_FINISH_LEVEL_DIFFICULTY");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 12008),
      (data::NewActivityCondType *)(v1 + 1088),
      (const std::pair<std::string,std::string > *)(v1 + 7184));
    if ( *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1104, v1 + 1088);
    *(_DWORD *)(v1 + 1104) = 64;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7280),
      (const char (*)[37])byte_1A4429C0,
      (const char (*)[51])"NEW_ACTIVITY_COND_BRICK_BREAKER_STAGE_LEVEL_FINISH");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 12080),
      (data::NewActivityCondType *)(v1 + 1104),
      (const std::pair<std::string,std::string > *)(v1 + 7280));
    if ( *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1120, v1 + 1104);
    *(_DWORD *)(v1 + 1120) = 65;
    std::pair<std::string,std::string>::pair<char const(&)[52],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7376),
      (const char (*)[52])byte_1A442A20,
      (const char (*)[42])"NEW_ACTIVITY_COND_DUEL_HEART_FINISH_LEVEL");
    std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondType,true>(
      (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *const)(v1 + 12152),
      (data::NewActivityCondType *)(v1 + 1120),
      (const std::pair<std::string,std::string > *)(v1 + 7376));
    std::allocator<std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>>::allocator((std::allocator<std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    std::map<data::NewActivityCondType,std::pair<std::string,std::string>>::map(
      &data::getNewActivityCondTypeEnumMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > >)__PAIR128__(66LL, v1 + 7472),
      (const std::less<data::NewActivityCondType> *)(v1 + 48),
      (const std::map<data::NewActivityCondType,std::pair<std::string,std::string >>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityCondTypeEnumMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::map<data::NewActivityCondType,std::pair<std::string,std::string>>::~map,
      &data::getNewActivityCondTypeEnumMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>>::~allocator((std::allocator<std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *)(v1 + 12224);
          i != (std::pair<const data::NewActivityCondType,std::pair<std::string,std::string > > *)(v1 + 7472);
          std::pair<data::NewActivityCondType const,std::pair<std::string,std::string>>::~pair(i) )
    {
      --i;
    }
    __asan_poison_stack_memory(v1 + 7472, 4752LL);
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7376));
    v5 = (_DWORD *)(((v1 + 7376) >> 3) + 2147450880);
    *v5 = -117901064;
    v5[1] = -117901064;
    *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7280));
    v6 = (_DWORD *)(((v1 + 7280) >> 3) + 2147450880);
    *v6 = -117901064;
    v6[1] = -117901064;
    *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7184));
    v7 = (_DWORD *)(((v1 + 7184) >> 3) + 2147450880);
    *v7 = -117901064;
    v7[1] = -117901064;
    *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7088));
    v8 = (_DWORD *)(((v1 + 7088) >> 3) + 2147450880);
    *v8 = -117901064;
    v8[1] = -117901064;
    *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6992));
    v9 = (_DWORD *)(((v1 + 6992) >> 3) + 2147450880);
    *v9 = -117901064;
    v9[1] = -117901064;
    *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6896));
    v10 = (_DWORD *)(((v1 + 6896) >> 3) + 2147450880);
    *v10 = -117901064;
    v10[1] = -117901064;
    *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6800));
    v11 = (_DWORD *)(((v1 + 6800) >> 3) + 2147450880);
    *v11 = -117901064;
    v11[1] = -117901064;
    *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6704));
    v12 = (_DWORD *)(((v1 + 6704) >> 3) + 2147450880);
    *v12 = -117901064;
    v12[1] = -117901064;
    *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6608));
    v13 = (_DWORD *)(((v1 + 6608) >> 3) + 2147450880);
    *v13 = -117901064;
    v13[1] = -117901064;
    *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6512));
    v14 = (_DWORD *)(((v1 + 6512) >> 3) + 2147450880);
    *v14 = -117901064;
    v14[1] = -117901064;
    *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6416));
    v15 = (_DWORD *)(((v1 + 6416) >> 3) + 2147450880);
    *v15 = -117901064;
    v15[1] = -117901064;
    *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6320));
    v16 = (_DWORD *)(((v1 + 6320) >> 3) + 2147450880);
    *v16 = -117901064;
    v16[1] = -117901064;
    *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6224));
    v17 = (_DWORD *)(((v1 + 6224) >> 3) + 2147450880);
    *v17 = -117901064;
    v17[1] = -117901064;
    *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6128));
    v18 = (_DWORD *)(((v1 + 6128) >> 3) + 2147450880);
    *v18 = -117901064;
    v18[1] = -117901064;
    *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6032));
    v19 = (_DWORD *)(((v1 + 6032) >> 3) + 2147450880);
    *v19 = -117901064;
    v19[1] = -117901064;
    *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5936));
    v20 = (_DWORD *)(((v1 + 5936) >> 3) + 2147450880);
    *v20 = -117901064;
    v20[1] = -117901064;
    *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5840));
    v21 = (_DWORD *)(((v1 + 5840) >> 3) + 2147450880);
    *v21 = -117901064;
    v21[1] = -117901064;
    *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5744));
    v22 = (_DWORD *)(((v1 + 5744) >> 3) + 2147450880);
    *v22 = -117901064;
    v22[1] = -117901064;
    *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5648));
    v23 = (_DWORD *)(((v1 + 5648) >> 3) + 2147450880);
    *v23 = -117901064;
    v23[1] = -117901064;
    *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5552));
    v24 = (_DWORD *)(((v1 + 5552) >> 3) + 2147450880);
    *v24 = -117901064;
    v24[1] = -117901064;
    *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5456));
    v25 = (_DWORD *)(((v1 + 5456) >> 3) + 2147450880);
    *v25 = -117901064;
    v25[1] = -117901064;
    *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5360));
    v26 = (_DWORD *)(((v1 + 5360) >> 3) + 2147450880);
    *v26 = -117901064;
    v26[1] = -117901064;
    *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5264));
    v27 = (_DWORD *)(((v1 + 5264) >> 3) + 2147450880);
    *v27 = -117901064;
    v27[1] = -117901064;
    *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5168));
    v28 = (_DWORD *)(((v1 + 5168) >> 3) + 2147450880);
    *v28 = -117901064;
    v28[1] = -117901064;
    *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5072));
    v29 = (_DWORD *)(((v1 + 5072) >> 3) + 2147450880);
    *v29 = -117901064;
    v29[1] = -117901064;
    *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4976));
    v30 = (_DWORD *)(((v1 + 4976) >> 3) + 2147450880);
    *v30 = -117901064;
    v30[1] = -117901064;
    *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4880));
    v31 = (_DWORD *)(((v1 + 4880) >> 3) + 2147450880);
    *v31 = -117901064;
    v31[1] = -117901064;
    *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4784));
    v32 = (_DWORD *)(((v1 + 4784) >> 3) + 2147450880);
    *v32 = -117901064;
    v32[1] = -117901064;
    *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4688));
    v33 = (_DWORD *)(((v1 + 4688) >> 3) + 2147450880);
    *v33 = -117901064;
    v33[1] = -117901064;
    *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4592));
    v34 = (_DWORD *)(((v1 + 4592) >> 3) + 2147450880);
    *v34 = -117901064;
    v34[1] = -117901064;
    *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4496));
    v35 = (_DWORD *)(((v1 + 4496) >> 3) + 2147450880);
    *v35 = -117901064;
    v35[1] = -117901064;
    *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4400));
    v36 = (_DWORD *)(((v1 + 4400) >> 3) + 2147450880);
    *v36 = -117901064;
    v36[1] = -117901064;
    *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4304));
    v37 = (_DWORD *)(((v1 + 4304) >> 3) + 2147450880);
    *v37 = -117901064;
    v37[1] = -117901064;
    *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4208));
    v38 = (_DWORD *)(((v1 + 4208) >> 3) + 2147450880);
    *v38 = -117901064;
    v38[1] = -117901064;
    *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4112));
    v39 = (_DWORD *)(((v1 + 4112) >> 3) + 2147450880);
    *v39 = -117901064;
    v39[1] = -117901064;
    *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4016));
    v40 = (_DWORD *)(((v1 + 4016) >> 3) + 2147450880);
    *v40 = -117901064;
    v40[1] = -117901064;
    *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3920));
    v41 = (_DWORD *)(((v1 + 3920) >> 3) + 2147450880);
    *v41 = -117901064;
    v41[1] = -117901064;
    *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3824));
    v42 = (_DWORD *)(((v1 + 3824) >> 3) + 2147450880);
    *v42 = -117901064;
    v42[1] = -117901064;
    *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3728));
    v43 = (_DWORD *)(((v1 + 3728) >> 3) + 2147450880);
    *v43 = -117901064;
    v43[1] = -117901064;
    *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3632));
    v44 = (_DWORD *)(((v1 + 3632) >> 3) + 2147450880);
    *v44 = -117901064;
    v44[1] = -117901064;
    *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3536));
    v45 = (_DWORD *)(((v1 + 3536) >> 3) + 2147450880);
    *v45 = -117901064;
    v45[1] = -117901064;
    *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3440));
    v46 = (_DWORD *)(((v1 + 3440) >> 3) + 2147450880);
    *v46 = -117901064;
    v46[1] = -117901064;
    *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3344));
    v47 = (_DWORD *)(((v1 + 3344) >> 3) + 2147450880);
    *v47 = -117901064;
    v47[1] = -117901064;
    *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3248));
    v48 = (_DWORD *)(((v1 + 3248) >> 3) + 2147450880);
    *v48 = -117901064;
    v48[1] = -117901064;
    *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3152));
    v49 = (_DWORD *)(((v1 + 3152) >> 3) + 2147450880);
    *v49 = -117901064;
    v49[1] = -117901064;
    *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3056));
    v50 = (_DWORD *)(((v1 + 3056) >> 3) + 2147450880);
    *v50 = -117901064;
    v50[1] = -117901064;
    *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2960));
    v51 = (_DWORD *)(((v1 + 2960) >> 3) + 2147450880);
    *v51 = -117901064;
    v51[1] = -117901064;
    *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2864));
    v52 = (_DWORD *)(((v1 + 2864) >> 3) + 2147450880);
    *v52 = -117901064;
    v52[1] = -117901064;
    *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2768));
    v53 = (_DWORD *)(((v1 + 2768) >> 3) + 2147450880);
    *v53 = -117901064;
    v53[1] = -117901064;
    *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2672));
    v54 = (_DWORD *)(((v1 + 2672) >> 3) + 2147450880);
    *v54 = -117901064;
    v54[1] = -117901064;
    *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2576));
    v55 = (_DWORD *)(((v1 + 2576) >> 3) + 2147450880);
    *v55 = -117901064;
    v55[1] = -117901064;
    *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2480));
    v56 = (_DWORD *)(((v1 + 2480) >> 3) + 2147450880);
    *v56 = -117901064;
    v56[1] = -117901064;
    *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2384));
    v57 = (_DWORD *)(((v1 + 2384) >> 3) + 2147450880);
    *v57 = -117901064;
    v57[1] = -117901064;
    *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2288));
    v58 = (_DWORD *)(((v1 + 2288) >> 3) + 2147450880);
    *v58 = -117901064;
    v58[1] = -117901064;
    *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2192));
    v59 = (_DWORD *)(((v1 + 2192) >> 3) + 2147450880);
    *v59 = -117901064;
    v59[1] = -117901064;
    *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2096));
    v60 = (_DWORD *)(((v1 + 2096) >> 3) + 2147450880);
    *v60 = -117901064;
    v60[1] = -117901064;
    *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2000));
    v61 = (_DWORD *)(((v1 + 2000) >> 3) + 2147450880);
    *v61 = -117901064;
    v61[1] = -117901064;
    *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1904));
    v62 = (_DWORD *)(((v1 + 1904) >> 3) + 2147450880);
    *v62 = -117901064;
    v62[1] = -117901064;
    *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1808));
    v63 = (_DWORD *)(((v1 + 1808) >> 3) + 2147450880);
    *v63 = -117901064;
    v63[1] = -117901064;
    *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1712));
    v64 = (_DWORD *)(((v1 + 1712) >> 3) + 2147450880);
    *v64 = -117901064;
    v64[1] = -117901064;
    *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1616));
    v65 = (_DWORD *)(((v1 + 1616) >> 3) + 2147450880);
    *v65 = -117901064;
    v65[1] = -117901064;
    *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1520));
    v66 = (_DWORD *)(((v1 + 1520) >> 3) + 2147450880);
    *v66 = -117901064;
    v66[1] = -117901064;
    *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1424));
    v67 = (_DWORD *)(((v1 + 1424) >> 3) + 2147450880);
    *v67 = -117901064;
    v67[1] = -117901064;
    *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1328));
    v68 = (_DWORD *)(((v1 + 1328) >> 3) + 2147450880);
    *v68 = -117901064;
    v68[1] = -117901064;
    *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1232));
    v69 = (_DWORD *)(((v1 + 1232) >> 3) + 2147450880);
    *v69 = -117901064;
    v69[1] = -117901064;
    *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 1136));
  }
  if ( v71 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8610) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 1560) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_8(v1, 12480LL, v71);
  }
  return &data::getNewActivityCondTypeEnumMap[abi:cxx11](void)::m;
};

// Line 756: range 000000000EEA2D45-000000000EEA30B8
const char *__fastcall data::enumValToStr(data::NewActivityCondDefaultStateType e, __int64 a2)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // al
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdi
  int v8; // ecx
  char v9; // al
  const char *result; // rax
  std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > >::pointer v11; // rax
  const std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >> *map; // [rsp+18h] [rbp-E8h]
  char v13[224]; // [rsp+20h] [rbp-E0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 9 <unknown> 48 4 5 e:755 64 8 8 iter:758 96 8 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumValToStr;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862725] = -202116109;
  *(_DWORD *)(v2 + 48) = e;
  map = data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, a2);
  *(std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string>>::find(map, (const std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string>>::end(map);
  v5 = std::operator==(
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumValToStr",
      761);
    v6 = "invalid e:";
    v7 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[11])"invalid e:");
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = 4;
    v8 = *(_DWORD *)(v2 + 48);
    v9 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
    if ( v9 != 0 && v9 <= 3 )
    {
      v7 = (common::milog::MiLogStream *)(v2 + 32);
      LOBYTE(v6) = v9 != 0;
      __asan_report_store4(v2 + 32, v6);
    }
    *(_DWORD *)(v2 + 32) = v8;
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 32));
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = "INVALID_NewActivityCondDefaultStateType";
  }
  else
  {
    v11 = std::_Rb_tree_const_iterator<std::pair<data::NewActivityCondDefaultStateType const,std::pair<std::string,std::string>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > > *const)(v2 + 64));
    result = (const char *)std::string::c_str(&v11->second.second);
  }
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 768: range 000000000EEA30B9-000000000EEA3671
__int64 __fastcall data::enumNameToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  const char *v6; // rsi
  char *v7; // rsi
  bool v8; // al
  common::milog::MiLogStream *v9; // rax
  std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityCondDefaultStateType>,false,true>::pointer v10; // rax
  data::NewActivityCondDefaultStateType second; // ecx
  char v12; // dl
  const std::unordered_map<std::string,data::NewActivityCondDefaultStateType> *m; // [rsp+18h] [rbp-188h]
  char v15[384]; // [rsp+20h] [rbp-180h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "7 48 1 9 <unknown> 64 8 6 it:777 96 8 9 <unknown> 128 8 5 s:767 160 32 9 <unknown> 224 32 9 <unk"
                        "nown> 288 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumNameToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -202116109;
  *(_QWORD *)(v2 + 128) = s;
  if ( *(_QWORD *)(v2 + 128) )
  {
    m = data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11]();
    std::allocator<char>::allocator(v2 + 48);
    v6 = *(const char **)(v2 + 128);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      v6,
      (const std::allocator<char> *)(v2 + 48));
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 64, v6);
    *(std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::find(m, (const std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::key_type *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 96, v2 + 224);
    *(std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::const_iterator *)(v2 + 96) = std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::end(m);
    v7 = (char *)(v2 + 96);
    v8 = std::__detail::operator==<std::pair<std::string const,data::NewActivityCondDefaultStateType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondDefaultStateType>,true> *)(v2 + 64),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondDefaultStateType>,true> *)(v2 + 96));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumNameToVal",
        780);
      v9 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v9, (const char *const *)(v2 + 128));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v10 = std::__detail::_Node_const_iterator<std::pair<std::string const,data::NewActivityCondDefaultStateType>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityCondDefaultStateType>,false,true> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v10->second);
      }
      second = v10->second;
      v12 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v12 != 0 && (char)((e & 7) + 3) >= v12 )
      {
        LOBYTE(v7) = v12 != 0;
        __asan_report_store4(e, v7);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumNameToVal",
      771);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 160),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = 0xFFFFFFFFLL;
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 789: range 000000000EEA3672-000000000EEA403B
__int64 __fastcall data::enumStrToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  std::pair<const std::string,data::NewActivityCondDefaultStateType> *i; // r14
  unsigned __int64 v7; // rax
  const char *v8; // rsi
  char *v9; // rsi
  bool v10; // al
  common::milog::MiLogStream *v11; // rax
  std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityCondDefaultStateType>,false,true>::pointer v12; // rax
  data::NewActivityCondDefaultStateType second; // ecx
  char v14; // dl
  char v16[592]; // [rsp+20h] [rbp-250h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(544LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "13 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 4 9 <unknown> 128 4 9"
                        " <unknown> 144 8 6 it:802 176 8 9 <unknown> 208 8 5 s:788 240 32 9 <unknown> 304 32 9 <unknown> "
                        "368 32 9 <unknown> 432 80 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumStrToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234556927;
  v4[536862724] = 61956;
  v4[536862724] = -234881024;
  v4[536862725] = 62194;
  v4[536862725] = -234881024;
  v4[536862726] = 62194;
  v4[536862726] = -234881024;
  v4[536862727] = 62194;
  v4[536862728] = -219021312;
  v4[536862729] = 62194;
  v4[536862730] = -219021312;
  v4[536862731] = 62194;
  v4[536862732] = -219021312;
  v4[536862733] = 62194;
  v4[536862736] = -202116109;
  *(_QWORD *)(v2 + 208) = s;
  if ( *(_QWORD *)(v2 + 208) )
  {
    if ( !(_BYTE)`guard variable for'data::enumStrToVal(char const*,data::NewActivityCondDefaultStateType &)::m
      && __cxa_guard_acquire(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityCondDefaultStateType &)::m) )
    {
      if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 112, e);
      *(_DWORD *)(v2 + 112) = 0;
      std::pair<std::string const,data::NewActivityCondDefaultStateType>::pair<char const(&)[4],data::NewActivityCondDefaultStateType,true>(
        (std::pair<const std::string,data::NewActivityCondDefaultStateType> *const)(v2 + 432),
        (const char (*)[4])off_1A445460,
        (data::NewActivityCondDefaultStateType *)(v2 + 112));
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 128, off_1A445460);
      *(_DWORD *)(v2 + 128) = 1;
      std::pair<std::string const,data::NewActivityCondDefaultStateType>::pair<char const(&)[4],data::NewActivityCondDefaultStateType,true>(
        (std::pair<const std::string,data::NewActivityCondDefaultStateType> *const)(v2 + 472),
        (const char (*)[4])off_1A4454A0,
        (data::NewActivityCondDefaultStateType *)(v2 + 128));
      std::allocator<std::pair<std::string const,data::NewActivityCondDefaultStateType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityCondDefaultStateType> > *const)(v2 + 80));
      std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::unordered_map(
        &data::enumStrToVal(char const*,data::NewActivityCondDefaultStateType &)::m,
        (std::initializer_list<std::pair<const std::string,data::NewActivityCondDefaultStateType> >)__PAIR128__(2LL, v2 + 432),
        0LL,
        (const std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::hasher *)(v2 + 48),
        (const std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::key_equal *)(v2 + 64),
        (const std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::allocator_type *)(v2 + 80));
      __cxa_guard_release(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityCondDefaultStateType &)::m);
      __cxa_atexit(
        (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::~unordered_map,
        &data::enumStrToVal(char const*,data::NewActivityCondDefaultStateType &)::m,
        &_dso_handle);
      std::allocator<std::pair<std::string const,data::NewActivityCondDefaultStateType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityCondDefaultStateType> > *const)(v2 + 80));
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
      for ( i = (std::pair<const std::string,data::NewActivityCondDefaultStateType> *)(v2 + 512);
            i != (std::pair<const std::string,data::NewActivityCondDefaultStateType> *)(v2 + 432);
            std::pair<std::string const,data::NewActivityCondDefaultStateType>::~pair(i) )
      {
        --i;
      }
      v7 = ((v2 + 432) >> 3) + 2147450880;
      *(_DWORD *)v7 = -117901064;
      *(_DWORD *)(v7 + 4) = -117901064;
      *(_WORD *)(v7 + 8) = -1800;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
    }
    *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 304) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    v8 = *(const char **)(v2 + 208);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 304),
      v8,
      (const std::allocator<char> *)(v2 + 96));
    if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 144, v8);
    *(std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::iterator *)(v2 + 144) = std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::find(&data::enumStrToVal(char const*,data::NewActivityCondDefaultStateType &)::m, (const std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::key_type *)(v2 + 304));
    std::string::~string((void *)(v2 + 304));
    *(_DWORD *)(((v2 + 304) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 176, v2 + 304);
    *(std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::iterator *)(v2 + 176) = std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::end(&data::enumStrToVal(char const*,data::NewActivityCondDefaultStateType &)::m);
    v9 = (char *)(v2 + 176);
    v10 = std::__detail::operator==<std::pair<std::string const,data::NewActivityCondDefaultStateType>,true>(
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondDefaultStateType>,true> *)(v2 + 144),
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondDefaultStateType>,true> *)(v2 + 176));
    *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
    if ( v10 )
    {
      *(_DWORD *)(((v2 + 368) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 368) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 399) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 113) & 7) >= *(_BYTE *)(((v2 + 399) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 368, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 368),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumStrToVal",
        805);
      v11 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              (common::milog::MiLogStream *const)(v2 + 368),
              (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)(v2 + 208));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 368));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v12 = std::__detail::_Node_iterator<std::pair<std::string const,data::NewActivityCondDefaultStateType>,false,true>::operator->((const std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityCondDefaultStateType>,false,true> *const)(v2 + 144));
      if ( *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v12->second);
      }
      second = v12->second;
      v14 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v14 != 0 && (char)((e & 7) + 3) >= v14 )
      {
        LOBYTE(v9) = v14 != 0;
        __asan_report_store4(e, v9);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 240) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 271) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 16 + 31) & 7) >= *(_BYTE *)(((v2 + 271) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 240, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 240),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumStrToVal",
      792);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 240),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 240));
    result = 0xFFFFFFFFLL;
  }
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = -168430091;
  }
  return result;
};

// Line 814: range 000000000EEA403C-000000000EEA4052
const char *__cdecl data::getDescription(data::NewActivityCondDefaultStateType e)
{
  __int64 v1; // rsi

  return data::enumValToStr(e, v1);
};

// Line 819: range 000000000EEA4053-000000000EEA4208
bool __cdecl data::isValidNewActivityCondDefaultStateType(uint32_t n)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  const std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >> *v5; // rcx
  const std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >> *v6; // rcx
  bool result; // al
  char v8[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 5 e:820 64 8 9 <unknown> 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityCondDefaultStateType;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, v1);
  *(_DWORD *)(v2 + 48) = n;
  v5 = data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string>>::end(v5);
  v6 = data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string>>::find(v6, (const std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  result = std::operator!=(
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 825: range 000000000EEA4209-000000000EEA436A
bool __cdecl data::isValidNewActivityCondDefaultStateTypeName(const std::string *name)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  const std::unordered_map<std::string,data::NewActivityCondDefaultStateType> *v5; // rcx
  const std::unordered_map<std::string,data::NewActivityCondDefaultStateType> *v6; // rcx
  bool result; // al
  char v8[128]; // [rsp+10h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 9 <unknown> 64 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityCondDefaultStateTypeName;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202116352;
  v5 = data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::end(v5);
  v6 = data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::const_iterator *)(v2 + 32) = std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::find(v6, name);
  result = std::__detail::operator!=<std::pair<std::string const,data::NewActivityCondDefaultStateType>,true>(
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondDefaultStateType>,true> *)(v2 + 32),
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityCondDefaultStateType>,true> *)(v2 + 64));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 830: range 000000000EEA436B-000000000EEA4771
const std::unordered_map<std::string,data::NewActivityCondDefaultStateType> *__cdecl data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const std::string,data::NewActivityCondDefaultStateType> *i; // r14
  const std::unordered_map<std::string,data::NewActivityCondDefaultStateType> *result; // rax
  char v6[272]; // [rsp+10h] [rbp-110h] BYREF

  v1 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_2(224LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "6 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 80 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753535;
  v3[536862722] = -234556927;
  v3[536862723] = 61956;
  v3[536862726] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string const,data::NewActivityCondDefaultStateType>::pair<char const(&)[38],data::NewActivityCondDefaultStateType,true>(
      (std::pair<const std::string,data::NewActivityCondDefaultStateType> *const)(v1 + 112),
      (const char (*)[38])"NEW_ACTIVITY_COND_DEFAULT_STATE_FALSE",
      (data::NewActivityCondDefaultStateType *)(v1 + 80));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, "NEW_ACTIVITY_COND_DEFAULT_STATE_FALSE");
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string const,data::NewActivityCondDefaultStateType>::pair<char const(&)[37],data::NewActivityCondDefaultStateType,true>(
      (std::pair<const std::string,data::NewActivityCondDefaultStateType> *const)(v1 + 152),
      (const char (*)[37])"NEW_ACTIVITY_COND_DEFAULT_STATE_TRUE",
      (data::NewActivityCondDefaultStateType *)(v1 + 96));
    std::allocator<std::pair<std::string const,data::NewActivityCondDefaultStateType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityCondDefaultStateType> > *const)(v1 + 64));
    std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::unordered_map(
      &data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const std::string,data::NewActivityCondDefaultStateType> >)__PAIR128__(
                                                                                                    2LL,
                                                                                                    v1 + 112),
      0LL,
      (const std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::hasher *)(v1 + 32),
      (const std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::key_equal *)(v1 + 48),
      (const std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityCondDefaultStateType>::~unordered_map,
      &data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<std::string const,data::NewActivityCondDefaultStateType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityCondDefaultStateType> > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const std::string,data::NewActivityCondDefaultStateType> *)(v1 + 192);
          i != (std::pair<const std::string,data::NewActivityCondDefaultStateType> *)(v1 + 112);
          std::pair<std::string const,data::NewActivityCondDefaultStateType>::~pair(i) )
    {
      --i;
    }
  }
  result = &data::getNewActivityCondDefaultStateTypeNameMap[abi:cxx11](void)::m;
  if ( v6 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 840: range 000000000EEA4772-000000000EEA4D2F
const std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >> *__cdecl data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > *i; // r14
  unsigned __int64 v5; // rax
  _DWORD *v6; // rax
  const std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >> *result; // rax
  char v8[560]; // [rsp+10h] [rbp-230h] BYREF

  v1 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_3(512LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "7 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 64 9 <unknown> 208 64 "
                        "9 <unknown> 304 144 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753551;
  v3[536862722] = -234556927;
  v3[536862723] = 61956;
  v3[536862725] = -219021312;
  v3[536862726] = 62194;
  v3[536862728] = -219021312;
  v3[536862729] = 62194;
  v3[536862734] = -202116109;
  v3[536862735] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string,std::string>::pair<char const(&)[4],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 112),
      (const char (*)[4])off_1A445460,
      (const char (*)[38])"NEW_ACTIVITY_COND_DEFAULT_STATE_FALSE");
    std::pair<data::NewActivityCondDefaultStateType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondDefaultStateType,true>(
      (std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > *const)(v1 + 304),
      (data::NewActivityCondDefaultStateType *)(v1 + 80),
      (const std::pair<std::string,std::string > *)(v1 + 112));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, v1 + 80);
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string,std::string>::pair<char const(&)[4],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 208),
      (const char (*)[4])off_1A4454A0,
      (const char (*)[37])"NEW_ACTIVITY_COND_DEFAULT_STATE_TRUE");
    std::pair<data::NewActivityCondDefaultStateType const,std::pair<std::string,std::string>>::pair<data::NewActivityCondDefaultStateType,true>(
      (std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > *const)(v1 + 376),
      (data::NewActivityCondDefaultStateType *)(v1 + 96),
      (const std::pair<std::string,std::string > *)(v1 + 208));
    std::allocator<std::pair<data::NewActivityCondDefaultStateType const,std::pair<std::string,std::string>>>::allocator((std::allocator<std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string>>::map(
      &data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > >)__PAIR128__(2LL, v1 + 304),
      (const std::less<data::NewActivityCondDefaultStateType> *)(v1 + 48),
      (const std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string >>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::map<data::NewActivityCondDefaultStateType,std::pair<std::string,std::string>>::~map,
      &data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<data::NewActivityCondDefaultStateType const,std::pair<std::string,std::string>>>::~allocator((std::allocator<std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > *)(v1 + 448);
          i != (std::pair<const data::NewActivityCondDefaultStateType,std::pair<std::string,std::string > > *)(v1 + 304);
          std::pair<data::NewActivityCondDefaultStateType const,std::pair<std::string,std::string>>::~pair(i) )
    {
      --i;
    }
    v5 = ((v1 + 304) >> 3) + 2147450880;
    *(_DWORD *)v5 = -117901064;
    *(_DWORD *)(v5 + 4) = -117901064;
    *(_DWORD *)(v5 + 8) = -117901064;
    *(_DWORD *)(v5 + 12) = -117901064;
    *(_WORD *)(v5 + 16) = -1800;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 208));
    v6 = (_DWORD *)(((v1 + 208) >> 3) + 2147450880);
    *v6 = -117901064;
    v6[1] = -117901064;
    *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 112));
  }
  result = &data::getNewActivityCondDefaultStateTypeEnumMap[abi:cxx11](void)::m;
  if ( v8 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8038) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 850: range 000000000EEA4D30-000000000EEA50A3
const char *__fastcall data::enumValToStr(data::NewActivityActionType e, __int64 a2)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // al
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdi
  int v8; // ecx
  char v9; // al
  const char *result; // rax
  std::_Rb_tree_const_iterator<std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > >::pointer v11; // rax
  const std::map<data::NewActivityActionType,std::pair<std::string,std::string >> *map; // [rsp+18h] [rbp-E8h]
  char v13[224]; // [rsp+20h] [rbp-E0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 9 <unknown> 48 4 5 e:849 64 8 8 iter:852 96 8 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumValToStr;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862725] = -202116109;
  *(_DWORD *)(v2 + 48) = e;
  map = data::getNewActivityActionTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, a2);
  *(std::map<data::NewActivityActionType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityActionType,std::pair<std::string,std::string>>::find(map, (const std::map<data::NewActivityActionType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::map<data::NewActivityActionType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityActionType,std::pair<std::string,std::string>>::end(map);
  v5 = std::operator==(
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumValToStr",
      855);
    v6 = "invalid e:";
    v7 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[11])"invalid e:");
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = 4;
    v8 = *(_DWORD *)(v2 + 48);
    v9 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
    if ( v9 != 0 && v9 <= 3 )
    {
      v7 = (common::milog::MiLogStream *)(v2 + 32);
      LOBYTE(v6) = v9 != 0;
      __asan_report_store4(v2 + 32, v6);
    }
    *(_DWORD *)(v2 + 32) = v8;
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 32));
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = "INVALID_NewActivityActionType";
  }
  else
  {
    v11 = std::_Rb_tree_const_iterator<std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > > *const)(v2 + 64));
    result = (const char *)std::string::c_str(&v11->second.second);
  }
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 862: range 000000000EEA50A4-000000000EEA565C
__int64 __fastcall data::enumNameToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  const char *v6; // rsi
  char *v7; // rsi
  bool v8; // al
  common::milog::MiLogStream *v9; // rax
  std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityActionType>,false,true>::pointer v10; // rax
  data::NewActivityActionType second; // ecx
  char v12; // dl
  const std::unordered_map<std::string,data::NewActivityActionType> *m; // [rsp+18h] [rbp-188h]
  char v15[384]; // [rsp+20h] [rbp-180h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "7 48 1 9 <unknown> 64 8 6 it:871 96 8 9 <unknown> 128 8 5 s:861 160 32 9 <unknown> 224 32 9 <unk"
                        "nown> 288 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumNameToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -202116109;
  *(_QWORD *)(v2 + 128) = s;
  if ( *(_QWORD *)(v2 + 128) )
  {
    m = data::getNewActivityActionTypeNameMap[abi:cxx11]();
    std::allocator<char>::allocator(v2 + 48);
    v6 = *(const char **)(v2 + 128);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      v6,
      (const std::allocator<char> *)(v2 + 48));
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 64, v6);
    *(std::unordered_map<std::string,data::NewActivityActionType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityActionType>::find(
                                                                                                  m,
                                                                                                  (const std::unordered_map<std::string,data::NewActivityActionType>::key_type *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 96, v2 + 224);
    *(std::unordered_map<std::string,data::NewActivityActionType>::const_iterator *)(v2 + 96) = std::unordered_map<std::string,data::NewActivityActionType>::end(m);
    v7 = (char *)(v2 + 96);
    v8 = std::__detail::operator==<std::pair<std::string const,data::NewActivityActionType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityActionType>,true> *)(v2 + 64),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityActionType>,true> *)(v2 + 96));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumNameToVal",
        874);
      v9 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v9, (const char *const *)(v2 + 128));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v10 = std::__detail::_Node_const_iterator<std::pair<std::string const,data::NewActivityActionType>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityActionType>,false,true> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v10->second);
      }
      second = v10->second;
      v12 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v12 != 0 && (char)((e & 7) + 3) >= v12 )
      {
        LOBYTE(v7) = v12 != 0;
        __asan_report_store4(e, v7);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumNameToVal",
      865);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 160),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = 0xFFFFFFFFLL;
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 883: range 000000000EEA565D-000000000EEAC129
__int64 __fastcall data::enumStrToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int v5; // eax
  std::pair<const std::string,data::NewActivityActionType> *i; // r14
  const char *v7; // rsi
  char *v8; // rsi
  bool v9; // al
  common::milog::MiLogStream *v10; // rax
  std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityActionType>,false,true>::pointer v11; // rax
  data::NewActivityActionType second; // ecx
  char v13; // dl
  unsigned int v14; // ebx
  char v17[10224]; // [rsp+20h] [rbp-27F0h] BYREF

  v2 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_8(10176LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "181 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 4 9 <unknown> 128 4 "
                        "9 <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 4 9 <unknown> 208 4 9 <unk"
                        "nown> 224 4 9 <unknown> 240 4 9 <unknown> 256 4 9 <unknown> 272 4 9 <unknown> 288 4 9 <unknown> "
                        "304 4 9 <unknown> 320 4 9 <unknown> 336 4 9 <unknown> 352 4 9 <unknown> 368 4 9 <unknown> 384 4 "
                        "9 <unknown> 400 4 9 <unknown> 416 4 9 <unknown> 432 4 9 <unknown> 448 4 9 <unknown> 464 4 9 <unk"
                        "nown> 480 4 9 <unknown> 496 4 9 <unknown> 512 4 9 <unknown> 528 4 9 <unknown> 544 4 9 <unknown> "
                        "560 4 9 <unknown> 576 4 9 <unknown> 592 4 9 <unknown> 608 4 9 <unknown> 624 4 9 <unknown> 640 4 "
                        "9 <unknown> 656 4 9 <unknown> 672 4 9 <unknown> 688 4 9 <unknown> 704 4 9 <unknown> 720 4 9 <unk"
                        "nown> 736 4 9 <unknown> 752 4 9 <unknown> 768 4 9 <unknown> 784 4 9 <unknown> 800 4 9 <unknown> "
                        "816 4 9 <unknown> 832 4 9 <unknown> 848 4 9 <unknown> 864 4 9 <unknown> 880 4 9 <unknown> 896 4 "
                        "9 <unknown> 912 4 9 <unknown> 928 4 9 <unknown> 944 4 9 <unknown> 960 4 9 <unknown> 976 4 9 <unk"
                        "nown> 992 4 9 <unknown> 1008 4 9 <unknown> 1024 4 9 <unknown> 1040 4 9 <unknown> 1056 4 9 <unkno"
                        "wn> 1072 4 9 <unknown> 1088 4 9 <unknown> 1104 4 9 <unknown> 1120 4 9 <unknown> 1136 4 9 <unknow"
                        "n> 1152 4 9 <unknown> 1168 4 9 <unknown> 1184 4 9 <unknown> 1200 4 9 <unknown> 1216 4 9 <unknown"
                        "> 1232 4 9 <unknown> 1248 4 9 <unknown> 1264 4 9 <unknown> 1280 4 9 <unknown> 1296 4 9 <unknown>"
                        " 1312 4 9 <unknown> 1328 4 9 <unknown> 1344 4 9 <unknown> 1360 4 9 <unknown> 1376 4 9 <unknown> "
                        "1392 4 9 <unknown> 1408 4 9 <unknown> 1424 4 9 <unknown> 1440 4 9 <unknown> 1456 4 9 <unknown> 1"
                        "472 4 9 <unknown> 1488 4 9 <unknown> 1504 4 9 <unknown> 1520 4 9 <unknown> 1536 4 9 <unknown> 15"
                        "52 4 9 <unknown> 1568 4 9 <unknown> 1584 4 9 <unknown> 1600 4 9 <unknown> 1616 4 9 <unknown> 163"
                        "2 4 9 <unknown> 1648 4 9 <unknown> 1664 4 9 <unknown> 1680 4 9 <unknown> 1696 4 9 <unknown> 1712"
                        " 4 9 <unknown> 1728 4 9 <unknown> 1744 4 9 <unknown> 1760 4 9 <unknown> 1776 4 9 <unknown> 1792 "
                        "4 9 <unknown> 1808 4 9 <unknown> 1824 4 9 <unknown> 1840 4 9 <unknown> 1856 4 9 <unknown> 1872 4"
                        " 9 <unknown> 1888 4 9 <unknown> 1904 4 9 <unknown> 1920 4 9 <unknown> 1936 4 9 <unknown> 1952 4 "
                        "9 <unknown> 1968 4 9 <unknown> 1984 4 9 <unknown> 2000 4 9 <unknown> 2016 4 9 <unknown> 2032 4 9"
                        " <unknown> 2048 4 9 <unknown> 2064 4 9 <unknown> 2080 4 9 <unknown> 2096 4 9 <unknown> 2112 4 9 "
                        "<unknown> 2128 4 9 <unknown> 2144 4 9 <unknown> 2160 4 9 <unknown> 2176 4 9 <unknown> 2192 4 9 <"
                        "unknown> 2208 4 9 <unknown> 2224 4 9 <unknown> 2240 4 9 <unknown> 2256 4 9 <unknown> 2272 4 9 <u"
                        "nknown> 2288 4 9 <unknown> 2304 4 9 <unknown> 2320 4 9 <unknown> 2336 4 9 <unknown> 2352 4 9 <un"
                        "known> 2368 4 9 <unknown> 2384 4 9 <unknown> 2400 4 9 <unknown> 2416 4 9 <unknown> 2432 4 9 <unk"
                        "nown> 2448 4 9 <unknown> 2464 4 9 <unknown> 2480 4 9 <unknown> 2496 4 9 <unknown> 2512 4 9 <unkn"
                        "own> 2528 4 9 <unknown> 2544 4 9 <unknown> 2560 4 9 <unknown> 2576 4 9 <unknown> 2592 4 9 <unkno"
                        "wn> 2608 4 9 <unknown> 2624 4 9 <unknown> 2640 4 9 <unknown> 2656 4 9 <unknown> 2672 4 9 <unknow"
                        "n> 2688 4 9 <unknown> 2704 4 9 <unknown> 2720 4 9 <unknown> 2736 4 9 <unknown> 2752 4 9 <unknown"
                        "> 2768 4 9 <unknown> 2784 4 9 <unknown> 2800 4 9 <unknown> 2816 4 9 <unknown> 2832 8 7 it:1064 2"
                        "864 8 9 <unknown> 2896 8 5 s:882 2928 32 9 <unknown> 2992 32 9 <unknown> 3056 32 9 <unknown> 312"
                        "0 6800 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumStrToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234556927;
  v4[536862724] = -234556924;
  v4[536862725] = -234556924;
  v4[536862726] = -234556924;
  v4[536862727] = -234556924;
  v4[536862728] = -234556924;
  v4[536862729] = -234556924;
  v4[536862730] = -234556924;
  v4[536862731] = -234556924;
  v4[536862732] = -234556924;
  v4[536862733] = -234556924;
  v4[536862734] = -234556924;
  v4[536862735] = -234556924;
  v4[536862736] = -234556924;
  v4[536862737] = -234556924;
  v4[536862738] = -234556924;
  v4[536862739] = -234556924;
  v4[536862740] = -234556924;
  v4[536862741] = -234556924;
  v4[536862742] = -234556924;
  v4[536862743] = -234556924;
  v4[536862744] = -234556924;
  v4[536862745] = -234556924;
  v4[536862746] = -234556924;
  v4[536862747] = -234556924;
  v4[536862748] = -234556924;
  v4[536862749] = -234556924;
  v4[536862750] = -234556924;
  v4[536862751] = -234556924;
  v4[536862752] = -234556924;
  v4[536862753] = -234556924;
  v4[536862754] = -234556924;
  v4[536862755] = -234556924;
  v4[536862756] = -234556924;
  v4[536862757] = -234556924;
  v4[536862758] = -234556924;
  v4[536862759] = -234556924;
  v4[536862760] = -234556924;
  v4[536862761] = -234556924;
  v4[536862762] = -234556924;
  v4[536862763] = -234556924;
  v4[536862764] = -234556924;
  v4[536862765] = -234556924;
  v4[536862766] = -234556924;
  v4[536862767] = -234556924;
  v4[536862768] = -234556924;
  v4[536862769] = -234556924;
  v4[536862770] = -234556924;
  v4[536862771] = -234556924;
  v4[536862772] = -234556924;
  v4[536862773] = -234556924;
  v4[536862774] = -234556924;
  v4[536862775] = -234556924;
  v4[536862776] = -234556924;
  v4[536862777] = -234556924;
  v4[536862778] = -234556924;
  v4[536862779] = -234556924;
  v4[536862780] = -234556924;
  v4[536862781] = -234556924;
  v4[536862782] = -234556924;
  v4[536862783] = -234556924;
  v4[536862784] = -234556924;
  v4[536862785] = -234556924;
  v4[536862786] = -234556924;
  v4[536862787] = -234556924;
  v4[536862788] = -234556924;
  v4[536862789] = -234556924;
  v4[536862790] = -234556924;
  v4[536862791] = -234556924;
  v4[536862792] = -234556924;
  v4[536862793] = -234556924;
  v4[536862794] = -234556924;
  v4[536862795] = -234556924;
  v4[536862796] = -234556924;
  v4[536862797] = -234556924;
  v4[536862798] = -234556924;
  v4[536862799] = -234556924;
  v4[536862800] = -234556924;
  v4[536862801] = -234556924;
  v4[536862802] = -234556924;
  v4[536862803] = -234556924;
  v4[536862804] = -234556924;
  v4[536862805] = -234556924;
  v4[536862806] = -234556924;
  v4[536862807] = -234556924;
  v4[536862808] = 61956;
  v4[536862808] = -234881024;
  v4[536862809] = 62194;
  v4[536862809] = -234881024;
  v4[536862810] = 62194;
  v4[536862810] = -234881024;
  v4[536862811] = 62194;
  v4[536862812] = -219021312;
  v4[536862813] = 62194;
  v4[536862814] = -219021312;
  v4[536862815] = 62194;
  v4[536862816] = -219021312;
  v4[536862817] = 62194;
  v4[536863030] = -202116109;
  v4[536863031] = -202116109;
  v4[536863032] = -202116109;
  v4[536863033] = -202116109;
  v4[536863034] = -202116109;
  v4[536863035] = -202116109;
  v4[536863036] = -202116109;
  v4[536863037] = -202116109;
  *(_QWORD *)(v2 + 2896) = s;
  if ( *(_QWORD *)(v2 + 2896) )
  {
    if ( !(_BYTE)`guard variable for'data::enumStrToVal(char const*,data::NewActivityActionType &)::m
      && __cxa_guard_acquire(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityActionType &)::m) )
    {
      if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 112, e);
      *(_DWORD *)(v2 + 112) = 1;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[16],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3120),
        (const char (*)[16])byte_1A446540,
        (data::NewActivityActionType *)(v2 + 112));
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 128, byte_1A446540);
      *(_DWORD *)(v2 + 128) = 2;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[16],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3160),
        (const char (*)[16])byte_1A446580,
        (data::NewActivityActionType *)(v2 + 128));
      if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 144, byte_1A446580);
      *(_DWORD *)(v2 + 144) = 3;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[13],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3200),
        (const char (*)[13])byte_1A4465C0,
        (data::NewActivityActionType *)(v2 + 144));
      if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 160, byte_1A4465C0);
      *(_DWORD *)(v2 + 160) = 4;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[13],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3240),
        (const char (*)[13])byte_1A446600,
        (data::NewActivityActionType *)(v2 + 160));
      if ( *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 176, byte_1A446600);
      *(_DWORD *)(v2 + 176) = 5;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[12],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3280),
        (const char (*)[12])byte_1A446640,
        (data::NewActivityActionType *)(v2 + 176));
      if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 192, byte_1A446640);
      *(_DWORD *)(v2 + 192) = 6;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[12],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3320),
        (const char (*)[12])byte_1A446680,
        (data::NewActivityActionType *)(v2 + 192));
      if ( *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 208, byte_1A446680);
      *(_DWORD *)(v2 + 208) = 7;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3360),
        (const char (*)[19])byte_1A4466C0,
        (data::NewActivityActionType *)(v2 + 208));
      if ( *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 224, byte_1A4466C0);
      *(_DWORD *)(v2 + 224) = 8;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3400),
        (const char (*)[19])byte_1A446700,
        (data::NewActivityActionType *)(v2 + 224));
      if ( *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 240, byte_1A446700);
      *(_DWORD *)(v2 + 240) = 9;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3440),
        (const char (*)[19])byte_1A446740,
        (data::NewActivityActionType *)(v2 + 240));
      if ( *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 256, byte_1A446740);
      *(_DWORD *)(v2 + 256) = 10;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[13],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3480),
        (const char (*)[13])byte_1A446780,
        (data::NewActivityActionType *)(v2 + 256));
      if ( *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 272, byte_1A446780);
      *(_DWORD *)(v2 + 272) = 11;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[13],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3520),
        (const char (*)[13])byte_1A4467C0,
        (data::NewActivityActionType *)(v2 + 272));
      if ( *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 288, byte_1A4467C0);
      *(_DWORD *)(v2 + 288) = 12;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[13],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3560),
        (const char (*)[13])byte_1A446800,
        (data::NewActivityActionType *)(v2 + 288));
      if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 304, byte_1A446800);
      *(_DWORD *)(v2 + 304) = 13;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3600),
        (const char (*)[19])byte_1A446840,
        (data::NewActivityActionType *)(v2 + 304));
      if ( *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 320, byte_1A446840);
      *(_DWORD *)(v2 + 320) = 14;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3640),
        (const char (*)[25])byte_1A446880,
        (data::NewActivityActionType *)(v2 + 320));
      if ( *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 336, byte_1A446880);
      *(_DWORD *)(v2 + 336) = 15;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3680),
        (const char (*)[19])byte_1A4468C0,
        (data::NewActivityActionType *)(v2 + 336));
      if ( *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 352, byte_1A4468C0);
      *(_DWORD *)(v2 + 352) = 16;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3720),
        (const char (*)[25])byte_1A446900,
        (data::NewActivityActionType *)(v2 + 352));
      if ( *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 368, byte_1A446900);
      *(_DWORD *)(v2 + 368) = 17;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[18],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3760),
        (const char (*)[18])byte_1A446940,
        (data::NewActivityActionType *)(v2 + 368));
      if ( *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 384, byte_1A446940);
      *(_DWORD *)(v2 + 384) = 18;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[18],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3800),
        (const char (*)[18])byte_1A446980,
        (data::NewActivityActionType *)(v2 + 384));
      if ( *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 400, byte_1A446980);
      *(_DWORD *)(v2 + 400) = 19;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3840),
        (const char (*)[19])byte_1A4469C0,
        (data::NewActivityActionType *)(v2 + 400));
      if ( *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 416, byte_1A4469C0);
      *(_DWORD *)(v2 + 416) = 20;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3880),
        (const char (*)[19])byte_1A446A00,
        (data::NewActivityActionType *)(v2 + 416));
      if ( *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 432, byte_1A446A00);
      *(_DWORD *)(v2 + 432) = 21;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3920),
        (const char (*)[22])byte_1A446A40,
        (data::NewActivityActionType *)(v2 + 432));
      if ( *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 448, byte_1A446A40);
      *(_DWORD *)(v2 + 448) = 22;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 3960),
        (const char (*)[22])byte_1A446A80,
        (data::NewActivityActionType *)(v2 + 448));
      if ( *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 464, byte_1A446A80);
      *(_DWORD *)(v2 + 464) = 25;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4000),
        (const char (*)[28])byte_1A446AC0,
        (data::NewActivityActionType *)(v2 + 464));
      if ( *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 480, byte_1A446AC0);
      *(_DWORD *)(v2 + 480) = 26;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4040),
        (const char (*)[28])byte_1A446B00,
        (data::NewActivityActionType *)(v2 + 480));
      if ( *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 496, byte_1A446B00);
      *(_DWORD *)(v2 + 496) = 27;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[17],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4080),
        (const char (*)[17])byte_1A446B40,
        (data::NewActivityActionType *)(v2 + 496));
      if ( *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 512, byte_1A446B40);
      *(_DWORD *)(v2 + 512) = 28;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4120),
        (const char (*)[22])byte_1A446B80,
        (data::NewActivityActionType *)(v2 + 512));
      if ( *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 528, byte_1A446B80);
      *(_DWORD *)(v2 + 528) = 29;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4160),
        (const char (*)[22])byte_1A446BC0,
        (data::NewActivityActionType *)(v2 + 528));
      if ( *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 544, byte_1A446BC0);
      *(_DWORD *)(v2 + 544) = 30;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[30],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4200),
        (const char (*)[30])byte_1A446C00,
        (data::NewActivityActionType *)(v2 + 544));
      if ( *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 560, byte_1A446C00);
      *(_DWORD *)(v2 + 560) = 31;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4240),
        (const char (*)[31])byte_1A446C40,
        (data::NewActivityActionType *)(v2 + 560));
      if ( *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 576, byte_1A446C40);
      *(_DWORD *)(v2 + 576) = 32;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[24],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4280),
        (const char (*)[24])byte_1A446C80,
        (data::NewActivityActionType *)(v2 + 576));
      if ( *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 592, byte_1A446C80);
      *(_DWORD *)(v2 + 592) = 33;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4320),
        (const char (*)[28])byte_1A446CC0,
        (data::NewActivityActionType *)(v2 + 592));
      if ( *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 608, byte_1A446CC0);
      *(_DWORD *)(v2 + 608) = 34;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4360),
        (const char (*)[28])byte_1A446D00,
        (data::NewActivityActionType *)(v2 + 608));
      if ( *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 624, byte_1A446D00);
      *(_DWORD *)(v2 + 624) = 35;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4400),
        (const char (*)[19])byte_1A446D40,
        (data::NewActivityActionType *)(v2 + 624));
      if ( *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 640, byte_1A446D40);
      *(_DWORD *)(v2 + 640) = 36;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4440),
        (const char (*)[19])byte_1A446D80,
        (data::NewActivityActionType *)(v2 + 640));
      if ( *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 656, byte_1A446D80);
      *(_DWORD *)(v2 + 656) = 37;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4480),
        (const char (*)[22])byte_1A446DC0,
        (data::NewActivityActionType *)(v2 + 656));
      if ( *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 672, byte_1A446DC0);
      *(_DWORD *)(v2 + 672) = 38;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4520),
        (const char (*)[19])byte_1A446E00,
        (data::NewActivityActionType *)(v2 + 672));
      if ( *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 688, byte_1A446E00);
      *(_DWORD *)(v2 + 688) = 39;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[19],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4560),
        (const char (*)[19])byte_1A446E40,
        (data::NewActivityActionType *)(v2 + 688));
      if ( *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 704, byte_1A446E40);
      *(_DWORD *)(v2 + 704) = 40;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4600),
        (const char (*)[25])byte_1A446E80,
        (data::NewActivityActionType *)(v2 + 704));
      if ( *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 720, byte_1A446E80);
      *(_DWORD *)(v2 + 720) = 41;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4640),
        (const char (*)[25])byte_1A446EC0,
        (data::NewActivityActionType *)(v2 + 720));
      if ( *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 736, byte_1A446EC0);
      *(_DWORD *)(v2 + 736) = 42;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4680),
        (const char (*)[25])byte_1A446F00,
        (data::NewActivityActionType *)(v2 + 736));
      if ( *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 752, byte_1A446F00);
      *(_DWORD *)(v2 + 752) = 43;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4720),
        (const char (*)[40])byte_1A446F40,
        (data::NewActivityActionType *)(v2 + 752));
      if ( *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 768, byte_1A446F40);
      *(_DWORD *)(v2 + 768) = 44;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[24],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4760),
        (const char (*)[24])byte_1A446FA0,
        (data::NewActivityActionType *)(v2 + 768));
      if ( *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 784, byte_1A446FA0);
      *(_DWORD *)(v2 + 784) = 45;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[24],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4800),
        (const char (*)[24])byte_1A446FE0,
        (data::NewActivityActionType *)(v2 + 784));
      if ( *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 800, byte_1A446FE0);
      *(_DWORD *)(v2 + 800) = 46;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4840),
        (const char (*)[25])byte_1A447020,
        (data::NewActivityActionType *)(v2 + 800));
      if ( *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 816, byte_1A447020);
      *(_DWORD *)(v2 + 816) = 47;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[13],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4880),
        (const char (*)[13])byte_1A447060,
        (data::NewActivityActionType *)(v2 + 816));
      if ( *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 832, byte_1A447060);
      *(_DWORD *)(v2 + 832) = 48;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4920),
        (const char (*)[37])byte_1A4470A0,
        (data::NewActivityActionType *)(v2 + 832));
      if ( *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 848, byte_1A4470A0);
      *(_DWORD *)(v2 + 848) = 49;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 4960),
        (const char (*)[37])byte_1A447100,
        (data::NewActivityActionType *)(v2 + 848));
      if ( *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 864, byte_1A447100);
      *(_DWORD *)(v2 + 864) = 50;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5000),
        (const char (*)[31])byte_1A447160,
        (data::NewActivityActionType *)(v2 + 864));
      if ( *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 880, byte_1A447160);
      *(_DWORD *)(v2 + 880) = 51;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5040),
        (const char (*)[22])byte_1A4471A0,
        (data::NewActivityActionType *)(v2 + 880));
      if ( *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 896, byte_1A4471A0);
      *(_DWORD *)(v2 + 896) = 52;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5080),
        (const char (*)[22])byte_1A4471E0,
        (data::NewActivityActionType *)(v2 + 896));
      if ( *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 912, byte_1A4471E0);
      *(_DWORD *)(v2 + 912) = 53;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5120),
        (const char (*)[22])byte_1A447220,
        (data::NewActivityActionType *)(v2 + 912));
      if ( *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 928, byte_1A447220);
      *(_DWORD *)(v2 + 928) = 54;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5160),
        (const char (*)[28])byte_1A447260,
        (data::NewActivityActionType *)(v2 + 928));
      if ( *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 944, byte_1A447260);
      *(_DWORD *)(v2 + 944) = 55;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5200),
        (const char (*)[31])byte_1A4472A0,
        (data::NewActivityActionType *)(v2 + 944));
      if ( *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 960, byte_1A4472A0);
      *(_DWORD *)(v2 + 960) = 56;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5240),
        (const char (*)[37])byte_1A4472E0,
        (data::NewActivityActionType *)(v2 + 960));
      if ( *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 976, byte_1A4472E0);
      *(_DWORD *)(v2 + 976) = 57;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[15],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5280),
        (const char (*)[15])byte_1A447340,
        (data::NewActivityActionType *)(v2 + 976));
      if ( *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 992, byte_1A447340);
      *(_DWORD *)(v2 + 992) = 58;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[15],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5320),
        (const char (*)[15])byte_1A447380,
        (data::NewActivityActionType *)(v2 + 992));
      if ( *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1008, byte_1A447380);
      *(_DWORD *)(v2 + 1008) = 59;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[29],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5360),
        (const char (*)[29])byte_1A4473C0,
        (data::NewActivityActionType *)(v2 + 1008));
      if ( *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1024, byte_1A4473C0);
      *(_DWORD *)(v2 + 1024) = 60;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[17],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5400),
        (const char (*)[17])byte_1A447400,
        (data::NewActivityActionType *)(v2 + 1024));
      if ( *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1040, byte_1A447400);
      *(_DWORD *)(v2 + 1040) = 61;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[23],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5440),
        (const char (*)[23])byte_1A447440,
        (data::NewActivityActionType *)(v2 + 1040));
      if ( *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1056, byte_1A447440);
      *(_DWORD *)(v2 + 1056) = 62;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5480),
        (const char (*)[31])byte_1A447480,
        (data::NewActivityActionType *)(v2 + 1056));
      if ( *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1072, byte_1A447480);
      *(_DWORD *)(v2 + 1072) = 63;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5520),
        (const char (*)[31])byte_1A4474C0,
        (data::NewActivityActionType *)(v2 + 1072));
      if ( *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1088, byte_1A4474C0);
      *(_DWORD *)(v2 + 1088) = 64;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5560),
        (const char (*)[22])byte_1A447500,
        (data::NewActivityActionType *)(v2 + 1088));
      if ( *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1104, byte_1A447500);
      *(_DWORD *)(v2 + 1104) = 65;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5600),
        (const char (*)[22])byte_1A447540,
        (data::NewActivityActionType *)(v2 + 1104));
      if ( *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1120, byte_1A447540);
      *(_DWORD *)(v2 + 1120) = 66;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5640),
        (const char (*)[25])byte_1A447580,
        (data::NewActivityActionType *)(v2 + 1120));
      if ( *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1136, byte_1A447580);
      *(_DWORD *)(v2 + 1136) = 67;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5680),
        (const char (*)[25])byte_1A4475C0,
        (data::NewActivityActionType *)(v2 + 1136));
      if ( *(_BYTE *)(((v2 + 1152) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1152) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1152, byte_1A4475C0);
      *(_DWORD *)(v2 + 1152) = 68;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[18],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5720),
        (const char (*)[18])byte_1A447600,
        (data::NewActivityActionType *)(v2 + 1152));
      if ( *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1168, byte_1A447600);
      *(_DWORD *)(v2 + 1168) = 69;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5760),
        (const char (*)[25])byte_1A447640,
        (data::NewActivityActionType *)(v2 + 1168));
      if ( *(_BYTE *)(((v2 + 1184) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1184) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1184, byte_1A447640);
      *(_DWORD *)(v2 + 1184) = 70;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5800),
        (const char (*)[31])byte_1A447680,
        (data::NewActivityActionType *)(v2 + 1184));
      if ( *(_BYTE *)(((v2 + 1200) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1200) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1200, byte_1A447680);
      *(_DWORD *)(v2 + 1200) = 71;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5840),
        (const char (*)[22])byte_1A4476C0,
        (data::NewActivityActionType *)(v2 + 1200));
      if ( *(_BYTE *)(((v2 + 1216) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1216) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1216, byte_1A4476C0);
      *(_DWORD *)(v2 + 1216) = 72;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5880),
        (const char (*)[22])byte_1A447700,
        (data::NewActivityActionType *)(v2 + 1216));
      if ( *(_BYTE *)(((v2 + 1232) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1232) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1232, byte_1A447700);
      *(_DWORD *)(v2 + 1232) = 73;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[21],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5920),
        (const char (*)[21])byte_1A447740,
        (data::NewActivityActionType *)(v2 + 1232));
      if ( *(_BYTE *)(((v2 + 1248) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1248) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1248, byte_1A447740);
      *(_DWORD *)(v2 + 1248) = 74;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 5960),
        (const char (*)[31])byte_1A447780,
        (data::NewActivityActionType *)(v2 + 1248));
      if ( *(_BYTE *)(((v2 + 1264) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1264) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1264, byte_1A447780);
      *(_DWORD *)(v2 + 1264) = 75;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6000),
        (const char (*)[25])byte_1A4477C0,
        (data::NewActivityActionType *)(v2 + 1264));
      if ( *(_BYTE *)(((v2 + 1280) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1280) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1280, byte_1A4477C0);
      *(_DWORD *)(v2 + 1280) = 76;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6040),
        (const char (*)[25])byte_1A447800,
        (data::NewActivityActionType *)(v2 + 1280));
      if ( *(_BYTE *)(((v2 + 1296) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1296) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1296, byte_1A447800);
      *(_DWORD *)(v2 + 1296) = 77;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6080),
        (const char (*)[31])byte_1A447840,
        (data::NewActivityActionType *)(v2 + 1296));
      if ( *(_BYTE *)(((v2 + 1312) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1312) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1312, byte_1A447840);
      *(_DWORD *)(v2 + 1312) = 78;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6120),
        (const char (*)[31])byte_1A447880,
        (data::NewActivityActionType *)(v2 + 1312));
      if ( *(_BYTE *)(((v2 + 1328) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1328) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1328, byte_1A447880);
      *(_DWORD *)(v2 + 1328) = 79;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6160),
        (const char (*)[31])byte_1A4478C0,
        (data::NewActivityActionType *)(v2 + 1328));
      if ( *(_BYTE *)(((v2 + 1344) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1344) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1344, byte_1A4478C0);
      *(_DWORD *)(v2 + 1344) = 80;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6200),
        (const char (*)[25])byte_1A447900,
        (data::NewActivityActionType *)(v2 + 1344));
      if ( *(_BYTE *)(((v2 + 1360) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1360) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1360, byte_1A447900);
      *(_DWORD *)(v2 + 1360) = 81;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6240),
        (const char (*)[31])byte_1A447940,
        (data::NewActivityActionType *)(v2 + 1360));
      if ( *(_BYTE *)(((v2 + 1376) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1376) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1376, byte_1A447940);
      *(_DWORD *)(v2 + 1376) = 82;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6280),
        (const char (*)[31])byte_1A447980,
        (data::NewActivityActionType *)(v2 + 1376));
      if ( *(_BYTE *)(((v2 + 1392) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1392) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1392, byte_1A447980);
      *(_DWORD *)(v2 + 1392) = 83;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6320),
        (const char (*)[31])byte_1A4479C0,
        (data::NewActivityActionType *)(v2 + 1392));
      if ( *(_BYTE *)(((v2 + 1408) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1408) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1408, byte_1A4479C0);
      *(_DWORD *)(v2 + 1408) = 84;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6360),
        (const char (*)[25])byte_1A447A00,
        (data::NewActivityActionType *)(v2 + 1408));
      if ( *(_BYTE *)(((v2 + 1424) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1424) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1424, byte_1A447A00);
      *(_DWORD *)(v2 + 1424) = 85;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[24],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6400),
        (const char (*)[24])byte_1A447A40,
        (data::NewActivityActionType *)(v2 + 1424));
      if ( *(_BYTE *)(((v2 + 1440) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1440) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1440, byte_1A447A40);
      *(_DWORD *)(v2 + 1440) = 86;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[27],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6440),
        (const char (*)[27])byte_1A447A80,
        (data::NewActivityActionType *)(v2 + 1440));
      if ( *(_BYTE *)(((v2 + 1456) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1456) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1456, byte_1A447A80);
      *(_DWORD *)(v2 + 1456) = 87;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[24],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6480),
        (const char (*)[24])byte_1A447AC0,
        (data::NewActivityActionType *)(v2 + 1456));
      if ( *(_BYTE *)(((v2 + 1472) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1472) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1472, byte_1A447AC0);
      *(_DWORD *)(v2 + 1472) = 88;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6520),
        (const char (*)[34])byte_1A447B00,
        (data::NewActivityActionType *)(v2 + 1472));
      if ( *(_BYTE *)(((v2 + 1488) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1488) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1488, byte_1A447B00);
      *(_DWORD *)(v2 + 1488) = 89;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6560),
        (const char (*)[34])byte_1A447B60,
        (data::NewActivityActionType *)(v2 + 1488));
      if ( *(_BYTE *)(((v2 + 1504) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1504) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1504, byte_1A447B60);
      *(_DWORD *)(v2 + 1504) = 90;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6600),
        (const char (*)[34])byte_1A447BC0,
        (data::NewActivityActionType *)(v2 + 1504));
      if ( *(_BYTE *)(((v2 + 1520) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1520) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1520, byte_1A447BC0);
      *(_DWORD *)(v2 + 1520) = 91;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6640),
        (const char (*)[34])byte_1A447C20,
        (data::NewActivityActionType *)(v2 + 1520));
      if ( *(_BYTE *)(((v2 + 1536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1536) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1536, byte_1A447C20);
      *(_DWORD *)(v2 + 1536) = 92;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[35],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6680),
        (const char (*)[35])byte_1A447C80,
        (data::NewActivityActionType *)(v2 + 1536));
      if ( *(_BYTE *)(((v2 + 1552) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1552) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1552, byte_1A447C80);
      *(_DWORD *)(v2 + 1552) = 93;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6720),
        (const char (*)[22])byte_1A447CE0,
        (data::NewActivityActionType *)(v2 + 1552));
      if ( *(_BYTE *)(((v2 + 1568) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1568) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1568, byte_1A447CE0);
      *(_DWORD *)(v2 + 1568) = 94;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6760),
        (const char (*)[22])byte_1A447D20,
        (data::NewActivityActionType *)(v2 + 1568));
      if ( *(_BYTE *)(((v2 + 1584) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1584) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1584, byte_1A447D20);
      *(_DWORD *)(v2 + 1584) = 95;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6800),
        (const char (*)[34])byte_1A447D60,
        (data::NewActivityActionType *)(v2 + 1584));
      if ( *(_BYTE *)(((v2 + 1600) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1600) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1600, byte_1A447D60);
      *(_DWORD *)(v2 + 1600) = 96;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6840),
        (const char (*)[31])byte_1A447DC0,
        (data::NewActivityActionType *)(v2 + 1600));
      if ( *(_BYTE *)(((v2 + 1616) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1616) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1616, byte_1A447DC0);
      *(_DWORD *)(v2 + 1616) = 97;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6880),
        (const char (*)[34])byte_1A447E00,
        (data::NewActivityActionType *)(v2 + 1616));
      if ( *(_BYTE *)(((v2 + 1632) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1632) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1632, byte_1A447E00);
      *(_DWORD *)(v2 + 1632) = 98;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6920),
        (const char (*)[28])byte_1A447E60,
        (data::NewActivityActionType *)(v2 + 1632));
      if ( *(_BYTE *)(((v2 + 1648) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1648) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1648, byte_1A447E60);
      *(_DWORD *)(v2 + 1648) = 99;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 6960),
        (const char (*)[22])byte_1A447EA0,
        (data::NewActivityActionType *)(v2 + 1648));
      if ( *(_BYTE *)(((v2 + 1664) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1664) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1664, byte_1A447EA0);
      *(_DWORD *)(v2 + 1664) = 100;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7000),
        (const char (*)[28])byte_1A447EE0,
        (data::NewActivityActionType *)(v2 + 1664));
      if ( *(_BYTE *)(((v2 + 1680) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1680) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1680, byte_1A447EE0);
      *(_DWORD *)(v2 + 1680) = 101;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7040),
        (const char (*)[28])byte_1A447F20,
        (data::NewActivityActionType *)(v2 + 1680));
      if ( *(_BYTE *)(((v2 + 1696) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1696) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1696, byte_1A447F20);
      *(_DWORD *)(v2 + 1696) = 102;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7080),
        (const char (*)[28])byte_1A447F60,
        (data::NewActivityActionType *)(v2 + 1696));
      if ( *(_BYTE *)(((v2 + 1712) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1712) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1712, byte_1A447F60);
      *(_DWORD *)(v2 + 1712) = 103;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[16],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7120),
        (const char (*)[16])byte_1A447FA0,
        (data::NewActivityActionType *)(v2 + 1712));
      if ( *(_BYTE *)(((v2 + 1728) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1728) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1728, byte_1A447FA0);
      *(_DWORD *)(v2 + 1728) = 104;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[16],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7160),
        (const char (*)[16])byte_1A447FE0,
        (data::NewActivityActionType *)(v2 + 1728));
      if ( *(_BYTE *)(((v2 + 1744) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1744) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1744, byte_1A447FE0);
      *(_DWORD *)(v2 + 1744) = 105;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7200),
        (const char (*)[28])byte_1A448020,
        (data::NewActivityActionType *)(v2 + 1744));
      if ( *(_BYTE *)(((v2 + 1760) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1760) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1760, byte_1A448020);
      *(_DWORD *)(v2 + 1760) = 106;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7240),
        (const char (*)[22])byte_1A448060,
        (data::NewActivityActionType *)(v2 + 1760));
      if ( *(_BYTE *)(((v2 + 1776) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1776) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1776, byte_1A448060);
      *(_DWORD *)(v2 + 1776) = 107;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7280),
        (const char (*)[31])byte_1A4480A0,
        (data::NewActivityActionType *)(v2 + 1776));
      if ( *(_BYTE *)(((v2 + 1792) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1792) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1792, byte_1A4480A0);
      *(_DWORD *)(v2 + 1792) = 108;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7320),
        (const char (*)[34])byte_1A4480E0,
        (data::NewActivityActionType *)(v2 + 1792));
      if ( *(_BYTE *)(((v2 + 1808) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1808) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1808, byte_1A4480E0);
      *(_DWORD *)(v2 + 1808) = 109;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[36],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7360),
        (const char (*)[36])byte_1A448140,
        (data::NewActivityActionType *)(v2 + 1808));
      if ( *(_BYTE *)(((v2 + 1824) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1824) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1824, byte_1A448140);
      *(_DWORD *)(v2 + 1824) = 110;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7400),
        (const char (*)[31])byte_1A4481A0,
        (data::NewActivityActionType *)(v2 + 1824));
      if ( *(_BYTE *)(((v2 + 1840) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1840) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1840, byte_1A4481A0);
      *(_DWORD *)(v2 + 1840) = 111;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7440),
        (const char (*)[34])byte_1A4481E0,
        (data::NewActivityActionType *)(v2 + 1840));
      if ( *(_BYTE *)(((v2 + 1856) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1856) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1856, byte_1A4481E0);
      *(_DWORD *)(v2 + 1856) = 112;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7480),
        (const char (*)[34])byte_1A448240,
        (data::NewActivityActionType *)(v2 + 1856));
      if ( *(_BYTE *)(((v2 + 1872) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1872) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1872, byte_1A448240);
      *(_DWORD *)(v2 + 1872) = 113;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7520),
        (const char (*)[34])byte_1A4482A0,
        (data::NewActivityActionType *)(v2 + 1872));
      if ( *(_BYTE *)(((v2 + 1888) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1888) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1888, byte_1A4482A0);
      *(_DWORD *)(v2 + 1888) = 114;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7560),
        (const char (*)[34])byte_1A448300,
        (data::NewActivityActionType *)(v2 + 1888));
      if ( *(_BYTE *)(((v2 + 1904) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1904) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1904, byte_1A448300);
      *(_DWORD *)(v2 + 1904) = 115;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[13],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7600),
        (const char (*)[13])byte_1A448360,
        (data::NewActivityActionType *)(v2 + 1904));
      if ( *(_BYTE *)(((v2 + 1920) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1920) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1920, byte_1A448360);
      *(_DWORD *)(v2 + 1920) = 116;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[13],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7640),
        (const char (*)[13])byte_1A4483A0,
        (data::NewActivityActionType *)(v2 + 1920));
      if ( *(_BYTE *)(((v2 + 1936) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1936) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1936, byte_1A4483A0);
      *(_DWORD *)(v2 + 1936) = 117;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[22],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7680),
        (const char (*)[22])byte_1A4483E0,
        (data::NewActivityActionType *)(v2 + 1936));
      if ( *(_BYTE *)(((v2 + 1952) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1952) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1952, byte_1A4483E0);
      *(_DWORD *)(v2 + 1952) = 118;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7720),
        (const char (*)[28])byte_1A448420,
        (data::NewActivityActionType *)(v2 + 1952));
      if ( *(_BYTE *)(((v2 + 1968) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1968) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1968, byte_1A448420);
      *(_DWORD *)(v2 + 1968) = 119;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7760),
        (const char (*)[28])byte_1A448460,
        (data::NewActivityActionType *)(v2 + 1968));
      if ( *(_BYTE *)(((v2 + 1984) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1984) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 1984, byte_1A448460);
      *(_DWORD *)(v2 + 1984) = 120;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7800),
        (const char (*)[25])byte_1A4484A0,
        (data::NewActivityActionType *)(v2 + 1984));
      if ( *(_BYTE *)(((v2 + 2000) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2000) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2000, byte_1A4484A0);
      *(_DWORD *)(v2 + 2000) = 121;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7840),
        (const char (*)[28])byte_1A4484E0,
        (data::NewActivityActionType *)(v2 + 2000));
      if ( *(_BYTE *)(((v2 + 2016) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2016) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2016, byte_1A4484E0);
      *(_DWORD *)(v2 + 2016) = 122;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7880),
        (const char (*)[28])byte_1A448520,
        (data::NewActivityActionType *)(v2 + 2016));
      if ( *(_BYTE *)(((v2 + 2032) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2032) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2032, byte_1A448520);
      *(_DWORD *)(v2 + 2032) = 123;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[36],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7920),
        (const char (*)[36])byte_1A448560,
        (data::NewActivityActionType *)(v2 + 2032));
      if ( *(_BYTE *)(((v2 + 2048) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2048) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2048, byte_1A448560);
      *(_DWORD *)(v2 + 2048) = 124;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 7960),
        (const char (*)[37])byte_1A4485C0,
        (data::NewActivityActionType *)(v2 + 2048));
      if ( *(_BYTE *)(((v2 + 2064) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2064) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2064, byte_1A4485C0);
      *(_DWORD *)(v2 + 2064) = 125;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[43],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8000),
        (const char (*)[43])byte_1A448620,
        (data::NewActivityActionType *)(v2 + 2064));
      if ( *(_BYTE *)(((v2 + 2080) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2080) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2080, byte_1A448620);
      *(_DWORD *)(v2 + 2080) = 126;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8040),
        (const char (*)[34])byte_1A448680,
        (data::NewActivityActionType *)(v2 + 2080));
      if ( *(_BYTE *)(((v2 + 2096) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2096) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2096, byte_1A448680);
      *(_DWORD *)(v2 + 2096) = 127;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8080),
        (const char (*)[34])byte_1A4486E0,
        (data::NewActivityActionType *)(v2 + 2096));
      if ( *(_BYTE *)(((v2 + 2112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2112) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2112, byte_1A4486E0);
      *(_DWORD *)(v2 + 2112) = 128;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8120),
        (const char (*)[39])byte_1A448740,
        (data::NewActivityActionType *)(v2 + 2112));
      if ( *(_BYTE *)(((v2 + 2128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2128) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2128, byte_1A448740);
      *(_DWORD *)(v2 + 2128) = 129;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8160),
        (const char (*)[39])byte_1A4487A0,
        (data::NewActivityActionType *)(v2 + 2128));
      if ( *(_BYTE *)(((v2 + 2144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2144) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2144, byte_1A4487A0);
      *(_DWORD *)(v2 + 2144) = 130;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8200),
        (const char (*)[31])byte_1A448800,
        (data::NewActivityActionType *)(v2 + 2144));
      if ( *(_BYTE *)(((v2 + 2160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2160) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2160, byte_1A448800);
      *(_DWORD *)(v2 + 2160) = 131;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8240),
        (const char (*)[31])byte_1A448840,
        (data::NewActivityActionType *)(v2 + 2160));
      if ( *(_BYTE *)(((v2 + 2176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2176) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2176, byte_1A448840);
      *(_DWORD *)(v2 + 2176) = 132;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8280),
        (const char (*)[31])byte_1A448880,
        (data::NewActivityActionType *)(v2 + 2176));
      if ( *(_BYTE *)(((v2 + 2192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2192) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2192, byte_1A448880);
      *(_DWORD *)(v2 + 2192) = 133;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8320),
        (const char (*)[31])byte_1A4488C0,
        (data::NewActivityActionType *)(v2 + 2192));
      if ( *(_BYTE *)(((v2 + 2208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2208) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2208, byte_1A4488C0);
      *(_DWORD *)(v2 + 2208) = 134;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8360),
        (const char (*)[28])byte_1A448900,
        (data::NewActivityActionType *)(v2 + 2208));
      if ( *(_BYTE *)(((v2 + 2224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2224) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2224, byte_1A448900);
      *(_DWORD *)(v2 + 2224) = 135;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8400),
        (const char (*)[31])byte_1A448940,
        (data::NewActivityActionType *)(v2 + 2224));
      if ( *(_BYTE *)(((v2 + 2240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2240) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2240, byte_1A448940);
      *(_DWORD *)(v2 + 2240) = 136;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8440),
        (const char (*)[25])byte_1A448980,
        (data::NewActivityActionType *)(v2 + 2240));
      if ( *(_BYTE *)(((v2 + 2256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2256) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2256, byte_1A448980);
      *(_DWORD *)(v2 + 2256) = 137;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8480),
        (const char (*)[31])byte_1A4489C0,
        (data::NewActivityActionType *)(v2 + 2256));
      if ( *(_BYTE *)(((v2 + 2272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2272) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2272, byte_1A4489C0);
      *(_DWORD *)(v2 + 2272) = 138;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8520),
        (const char (*)[31])byte_1A448A00,
        (data::NewActivityActionType *)(v2 + 2272));
      if ( *(_BYTE *)(((v2 + 2288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2288) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2288, byte_1A448A00);
      *(_DWORD *)(v2 + 2288) = 139;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8560),
        (const char (*)[31])byte_1A448A40,
        (data::NewActivityActionType *)(v2 + 2288));
      if ( *(_BYTE *)(((v2 + 2304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2304) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2304, byte_1A448A40);
      *(_DWORD *)(v2 + 2304) = 140;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8600),
        (const char (*)[31])byte_1A448A80,
        (data::NewActivityActionType *)(v2 + 2304));
      if ( *(_BYTE *)(((v2 + 2320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2320) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2320, byte_1A448A80);
      *(_DWORD *)(v2 + 2320) = 141;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8640),
        (const char (*)[31])byte_1A448AC0,
        (data::NewActivityActionType *)(v2 + 2320));
      if ( *(_BYTE *)(((v2 + 2336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2336) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2336, byte_1A448AC0);
      *(_DWORD *)(v2 + 2336) = 142;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8680),
        (const char (*)[31])byte_1A448B00,
        (data::NewActivityActionType *)(v2 + 2336));
      if ( *(_BYTE *)(((v2 + 2352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2352) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2352, byte_1A448B00);
      *(_DWORD *)(v2 + 2352) = 143;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8720),
        (const char (*)[37])byte_1A448B40,
        (data::NewActivityActionType *)(v2 + 2352));
      if ( *(_BYTE *)(((v2 + 2368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2368) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2368, byte_1A448B40);
      *(_DWORD *)(v2 + 2368) = 144;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8760),
        (const char (*)[28])byte_1A448BA0,
        (data::NewActivityActionType *)(v2 + 2368));
      if ( *(_BYTE *)(((v2 + 2384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2384) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2384, byte_1A448BA0);
      *(_DWORD *)(v2 + 2384) = 145;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8800),
        (const char (*)[31])byte_1A448BE0,
        (data::NewActivityActionType *)(v2 + 2384));
      if ( *(_BYTE *)(((v2 + 2400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2400) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2400, byte_1A448BE0);
      *(_DWORD *)(v2 + 2400) = 146;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8840),
        (const char (*)[25])byte_1A448C20,
        (data::NewActivityActionType *)(v2 + 2400));
      if ( *(_BYTE *)(((v2 + 2416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2416) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2416, byte_1A448C20);
      *(_DWORD *)(v2 + 2416) = 147;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8880),
        (const char (*)[31])byte_1A448C60,
        (data::NewActivityActionType *)(v2 + 2416));
      if ( *(_BYTE *)(((v2 + 2432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2432) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2432, byte_1A448C60);
      *(_DWORD *)(v2 + 2432) = 148;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8920),
        (const char (*)[31])byte_1A448CA0,
        (data::NewActivityActionType *)(v2 + 2432));
      if ( *(_BYTE *)(((v2 + 2448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2448) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2448, byte_1A448CA0);
      *(_DWORD *)(v2 + 2448) = 149;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 8960),
        (const char (*)[31])byte_1A448CE0,
        (data::NewActivityActionType *)(v2 + 2448));
      if ( *(_BYTE *)(((v2 + 2464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2464) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2464, byte_1A448CE0);
      *(_DWORD *)(v2 + 2464) = 150;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9000),
        (const char (*)[31])byte_1A448D20,
        (data::NewActivityActionType *)(v2 + 2464));
      if ( *(_BYTE *)(((v2 + 2480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2480) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2480, byte_1A448D20);
      *(_DWORD *)(v2 + 2480) = 151;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9040),
        (const char (*)[37])byte_1A448D60,
        (data::NewActivityActionType *)(v2 + 2480));
      if ( *(_BYTE *)(((v2 + 2496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2496) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2496, byte_1A448D60);
      *(_DWORD *)(v2 + 2496) = 152;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9080),
        (const char (*)[37])byte_1A448DC0,
        (data::NewActivityActionType *)(v2 + 2496));
      if ( *(_BYTE *)(((v2 + 2512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2512) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2512, byte_1A448DC0);
      *(_DWORD *)(v2 + 2512) = 153;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9120),
        (const char (*)[37])byte_1A448E20,
        (data::NewActivityActionType *)(v2 + 2512));
      if ( *(_BYTE *)(((v2 + 2528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2528) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2528, byte_1A448E20);
      *(_DWORD *)(v2 + 2528) = 154;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[33],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9160),
        (const char (*)[33])byte_1A448E80,
        (data::NewActivityActionType *)(v2 + 2528));
      if ( *(_BYTE *)(((v2 + 2544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2544) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2544, byte_1A448E80);
      *(_DWORD *)(v2 + 2544) = 155;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9200),
        (const char (*)[37])byte_1A448EE0,
        (data::NewActivityActionType *)(v2 + 2544));
      if ( *(_BYTE *)(((v2 + 2560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2560) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2560, byte_1A448EE0);
      *(_DWORD *)(v2 + 2560) = 156;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9240),
        (const char (*)[37])byte_1A448F40,
        (data::NewActivityActionType *)(v2 + 2560));
      if ( *(_BYTE *)(((v2 + 2576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2576) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2576, byte_1A448F40);
      *(_DWORD *)(v2 + 2576) = 157;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9280),
        (const char (*)[37])byte_1A448FA0,
        (data::NewActivityActionType *)(v2 + 2576));
      if ( *(_BYTE *)(((v2 + 2592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2592) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2592, byte_1A448FA0);
      *(_DWORD *)(v2 + 2592) = 158;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9320),
        (const char (*)[31])byte_1A449000,
        (data::NewActivityActionType *)(v2 + 2592));
      if ( *(_BYTE *)(((v2 + 2608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2608) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2608, byte_1A449000);
      *(_DWORD *)(v2 + 2608) = 159;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9360),
        (const char (*)[37])byte_1A449040,
        (data::NewActivityActionType *)(v2 + 2608));
      if ( *(_BYTE *)(((v2 + 2624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2624) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2624, byte_1A449040);
      *(_DWORD *)(v2 + 2624) = 160;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9400),
        (const char (*)[31])byte_1A4490A0,
        (data::NewActivityActionType *)(v2 + 2624));
      if ( *(_BYTE *)(((v2 + 2640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2640) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2640, byte_1A4490A0);
      *(_DWORD *)(v2 + 2640) = 161;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9440),
        (const char (*)[34])byte_1A4490E0,
        (data::NewActivityActionType *)(v2 + 2640));
      if ( *(_BYTE *)(((v2 + 2656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2656) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2656, byte_1A4490E0);
      *(_DWORD *)(v2 + 2656) = 162;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9480),
        (const char (*)[25])byte_1A449140,
        (data::NewActivityActionType *)(v2 + 2656));
      if ( *(_BYTE *)(((v2 + 2672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2672) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2672, byte_1A449140);
      *(_DWORD *)(v2 + 2672) = 163;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9520),
        (const char (*)[34])byte_1A449180,
        (data::NewActivityActionType *)(v2 + 2672));
      if ( *(_BYTE *)(((v2 + 2688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2688) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2688, byte_1A449180);
      *(_DWORD *)(v2 + 2688) = 164;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9560),
        (const char (*)[31])byte_1A4491E0,
        (data::NewActivityActionType *)(v2 + 2688));
      if ( *(_BYTE *)(((v2 + 2704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2704) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2704, byte_1A4491E0);
      *(_DWORD *)(v2 + 2704) = 165;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9600),
        (const char (*)[46])byte_1A449220,
        (data::NewActivityActionType *)(v2 + 2704));
      if ( *(_BYTE *)(((v2 + 2720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2720) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2720, byte_1A449220);
      *(_DWORD *)(v2 + 2720) = 166;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[43],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9640),
        (const char (*)[43])byte_1A449280,
        (data::NewActivityActionType *)(v2 + 2720));
      if ( *(_BYTE *)(((v2 + 2736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2736) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2736, byte_1A449280);
      *(_DWORD *)(v2 + 2736) = 167;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[21],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9680),
        (const char (*)[21])byte_1A4492E0,
        (data::NewActivityActionType *)(v2 + 2736));
      if ( *(_BYTE *)(((v2 + 2752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2752) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2752, byte_1A4492E0);
      *(_DWORD *)(v2 + 2752) = 168;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9720),
        (const char (*)[31])byte_1A449320,
        (data::NewActivityActionType *)(v2 + 2752));
      if ( *(_BYTE *)(((v2 + 2768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2768) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2768, byte_1A449320);
      *(_DWORD *)(v2 + 2768) = 169;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9760),
        (const char (*)[31])byte_1A449360,
        (data::NewActivityActionType *)(v2 + 2768));
      if ( *(_BYTE *)(((v2 + 2784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2784) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2784, byte_1A449360);
      *(_DWORD *)(v2 + 2784) = 170;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[28],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9800),
        (const char (*)[28])byte_1A4493A0,
        (data::NewActivityActionType *)(v2 + 2784));
      if ( *(_BYTE *)(((v2 + 2800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2800) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2800, byte_1A4493A0);
      *(_DWORD *)(v2 + 2800) = 171;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9840),
        (const char (*)[31])byte_1A4493E0,
        (data::NewActivityActionType *)(v2 + 2800));
      if ( *(_BYTE *)(((v2 + 2816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 2816) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 2816, byte_1A4493E0);
      *(_DWORD *)(v2 + 2816) = 172;
      std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
        (std::pair<const std::string,data::NewActivityActionType> *const)(v2 + 9880),
        (const char (*)[34])byte_1A449420,
        (data::NewActivityActionType *)(v2 + 2816));
      std::allocator<std::pair<std::string const,data::NewActivityActionType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityActionType> > *const)(v2 + 80));
      std::unordered_map<std::string,data::NewActivityActionType>::unordered_map(
        &data::enumStrToVal(char const*,data::NewActivityActionType &)::m,
        (std::initializer_list<std::pair<const std::string,data::NewActivityActionType> >)__PAIR128__(170LL, v2 + 3120),
        0LL,
        (const std::unordered_map<std::string,data::NewActivityActionType>::hasher *)(v2 + 48),
        (const std::unordered_map<std::string,data::NewActivityActionType>::key_equal *)(v2 + 64),
        (const std::unordered_map<std::string,data::NewActivityActionType>::allocator_type *)(v2 + 80));
      __cxa_guard_release(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityActionType &)::m);
      __cxa_atexit(
        (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityActionType>::~unordered_map,
        &data::enumStrToVal(char const*,data::NewActivityActionType &)::m,
        &_dso_handle);
      std::allocator<std::pair<std::string const,data::NewActivityActionType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityActionType> > *const)(v2 + 80));
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
      for ( i = (std::pair<const std::string,data::NewActivityActionType> *)(v2 + 9920);
            i != (std::pair<const std::string,data::NewActivityActionType> *)(v2 + 3120);
            std::pair<std::string const,data::NewActivityActionType>::~pair(i) )
      {
        --i;
      }
      __asan_poison_stack_memory(v2 + 3120, 6800LL);
      *(_BYTE *)(((v2 + 2816) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2800) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2784) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2768) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2752) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2736) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2720) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2704) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2688) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2672) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2656) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2640) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2624) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2608) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2592) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2576) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2560) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2544) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2528) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2512) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2496) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2480) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2464) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2448) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2432) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2416) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2400) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2384) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2368) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2352) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2336) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2320) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2304) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2288) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2272) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2256) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2240) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2224) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2208) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2192) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2176) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2160) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2144) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2112) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2096) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2080) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2064) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2048) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2032) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2016) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 2000) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1984) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1968) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1952) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1936) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1920) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1904) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1888) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1872) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1856) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1840) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1824) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1808) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1792) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1776) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1760) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1744) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1728) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1712) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1696) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1680) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1664) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1648) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1632) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1616) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1600) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1584) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1568) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1552) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1536) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1520) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1504) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1488) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1472) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1456) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1440) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1424) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1408) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1392) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1376) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1360) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1344) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1328) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1312) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1296) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1280) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1264) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1248) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1232) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1216) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1200) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1184) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1152) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
    }
    *(_BYTE *)(((v2 + 2832) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 2992) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    v7 = *(const char **)(v2 + 2896);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 2992),
      v7,
      (const std::allocator<char> *)(v2 + 96));
    if ( *(_BYTE *)(((v2 + 2832) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 2832, v7);
    *(std::unordered_map<std::string,data::NewActivityActionType>::iterator *)(v2 + 2832) = std::unordered_map<std::string,data::NewActivityActionType>::find(
                                                                                              &data::enumStrToVal(char const*,data::NewActivityActionType &)::m,
                                                                                              (const std::unordered_map<std::string,data::NewActivityActionType>::key_type *)(v2 + 2992));
    std::string::~string((void *)(v2 + 2992));
    *(_DWORD *)(((v2 + 2992) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 2864) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 2864) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 2864, v2 + 2992);
    *(std::unordered_map<std::string,data::NewActivityActionType>::iterator *)(v2 + 2864) = std::unordered_map<std::string,data::NewActivityActionType>::end(&data::enumStrToVal(char const*,data::NewActivityActionType &)::m);
    v8 = (char *)(v2 + 2864);
    v9 = std::__detail::operator==<std::pair<std::string const,data::NewActivityActionType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityActionType>,true> *)(v2 + 2832),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityActionType>,true> *)(v2 + 2864));
    *(_BYTE *)(((v2 + 2864) >> 3) + 0x7FFF8000) = -8;
    if ( v9 )
    {
      *(_DWORD *)(((v2 + 3056) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 3056) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 3087) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 64 + 79) & 7) >= *(_BYTE *)(((v2 + 3087) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 3056, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 3056),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumStrToVal",
        1067);
      v10 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              (common::milog::MiLogStream *const)(v2 + 3056),
              (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v10, (const char *const *)(v2 + 2896));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3056));
      v5 = -1;
    }
    else
    {
      v11 = std::__detail::_Node_iterator<std::pair<std::string const,data::NewActivityActionType>,false,true>::operator->((const std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityActionType>,false,true> *const)(v2 + 2832));
      if ( *(_BYTE *)(((unsigned __int64)&v11->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v11->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v11->second);
      }
      second = v11->second;
      v13 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v13 != 0 && (char)((e & 7) + 3) >= v13 )
      {
        LOBYTE(v8) = v13 != 0;
        __asan_report_store4(e, v8);
      }
      *(_DWORD *)e = second;
      v5 = 0;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 2928) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2959) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 113) & 7) >= *(_BYTE *)(((v2 + 2959) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2928, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2928),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumStrToVal",
      886);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 2928),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2928));
    v5 = -1;
  }
  v14 = v5;
  if ( v17 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF84F0) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 1272) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_8(v2, 10176LL, v17);
  }
  return v14;
};

// Line 1076: range 000000000EEAC12A-000000000EEAC140
const char *__cdecl data::getDescription(data::NewActivityActionType e)
{
  __int64 v1; // rsi

  return data::enumValToStr(e, v1);
};

// Line 1081: range 000000000EEAC141-000000000EEAC2F6
bool __cdecl data::isValidNewActivityActionType(uint32_t n)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  const std::map<data::NewActivityActionType,std::pair<std::string,std::string >> *v5; // rcx
  const std::map<data::NewActivityActionType,std::pair<std::string,std::string >> *v6; // rcx
  bool result; // al
  char v8[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 6 e:1082 64 8 9 <unknown> 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityActionType;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, v1);
  *(_DWORD *)(v2 + 48) = n;
  v5 = data::getNewActivityActionTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::map<data::NewActivityActionType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityActionType,std::pair<std::string,std::string>>::end(v5);
  v6 = data::getNewActivityActionTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::map<data::NewActivityActionType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityActionType,std::pair<std::string,std::string>>::find(v6, (const std::map<data::NewActivityActionType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  result = std::operator!=(
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1087: range 000000000EEAC2F7-000000000EEAC458
bool __cdecl data::isValidNewActivityActionTypeName(const std::string *name)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  const std::unordered_map<std::string,data::NewActivityActionType> *v5; // rcx
  const std::unordered_map<std::string,data::NewActivityActionType> *v6; // rcx
  bool result; // al
  char v8[128]; // [rsp+10h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 9 <unknown> 64 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityActionTypeName;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202116352;
  v5 = data::getNewActivityActionTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<std::string,data::NewActivityActionType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityActionType>::end(v5);
  v6 = data::getNewActivityActionTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<std::string,data::NewActivityActionType>::const_iterator *)(v2 + 32) = std::unordered_map<std::string,data::NewActivityActionType>::find(
                                                                                                v6,
                                                                                                name);
  result = std::__detail::operator!=<std::pair<std::string const,data::NewActivityActionType>,true>(
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityActionType>,true> *)(v2 + 32),
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityActionType>,true> *)(v2 + 64));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1092: range 000000000EEAC459-000000000EEB1D3A
const std::unordered_map<std::string,data::NewActivityActionType> *__cdecl data::getNewActivityActionTypeNameMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const std::string,data::NewActivityActionType> *i; // r14
  char v6[9968]; // [rsp+10h] [rbp-26F0h] BYREF

  v1 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_8(9920LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "175 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9"
                        " <unknown> 128 4 9 <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 4 9 <unkn"
                        "own> 208 4 9 <unknown> 224 4 9 <unknown> 240 4 9 <unknown> 256 4 9 <unknown> 272 4 9 <unknown> 2"
                        "88 4 9 <unknown> 304 4 9 <unknown> 320 4 9 <unknown> 336 4 9 <unknown> 352 4 9 <unknown> 368 4 9"
                        " <unknown> 384 4 9 <unknown> 400 4 9 <unknown> 416 4 9 <unknown> 432 4 9 <unknown> 448 4 9 <unkn"
                        "own> 464 4 9 <unknown> 480 4 9 <unknown> 496 4 9 <unknown> 512 4 9 <unknown> 528 4 9 <unknown> 5"
                        "44 4 9 <unknown> 560 4 9 <unknown> 576 4 9 <unknown> 592 4 9 <unknown> 608 4 9 <unknown> 624 4 9"
                        " <unknown> 640 4 9 <unknown> 656 4 9 <unknown> 672 4 9 <unknown> 688 4 9 <unknown> 704 4 9 <unkn"
                        "own> 720 4 9 <unknown> 736 4 9 <unknown> 752 4 9 <unknown> 768 4 9 <unknown> 784 4 9 <unknown> 8"
                        "00 4 9 <unknown> 816 4 9 <unknown> 832 4 9 <unknown> 848 4 9 <unknown> 864 4 9 <unknown> 880 4 9"
                        " <unknown> 896 4 9 <unknown> 912 4 9 <unknown> 928 4 9 <unknown> 944 4 9 <unknown> 960 4 9 <unkn"
                        "own> 976 4 9 <unknown> 992 4 9 <unknown> 1008 4 9 <unknown> 1024 4 9 <unknown> 1040 4 9 <unknown"
                        "> 1056 4 9 <unknown> 1072 4 9 <unknown> 1088 4 9 <unknown> 1104 4 9 <unknown> 1120 4 9 <unknown>"
                        " 1136 4 9 <unknown> 1152 4 9 <unknown> 1168 4 9 <unknown> 1184 4 9 <unknown> 1200 4 9 <unknown> "
                        "1216 4 9 <unknown> 1232 4 9 <unknown> 1248 4 9 <unknown> 1264 4 9 <unknown> 1280 4 9 <unknown> 1"
                        "296 4 9 <unknown> 1312 4 9 <unknown> 1328 4 9 <unknown> 1344 4 9 <unknown> 1360 4 9 <unknown> 13"
                        "76 4 9 <unknown> 1392 4 9 <unknown> 1408 4 9 <unknown> 1424 4 9 <unknown> 1440 4 9 <unknown> 145"
                        "6 4 9 <unknown> 1472 4 9 <unknown> 1488 4 9 <unknown> 1504 4 9 <unknown> 1520 4 9 <unknown> 1536"
                        " 4 9 <unknown> 1552 4 9 <unknown> 1568 4 9 <unknown> 1584 4 9 <unknown> 1600 4 9 <unknown> 1616 "
                        "4 9 <unknown> 1632 4 9 <unknown> 1648 4 9 <unknown> 1664 4 9 <unknown> 1680 4 9 <unknown> 1696 4"
                        " 9 <unknown> 1712 4 9 <unknown> 1728 4 9 <unknown> 1744 4 9 <unknown> 1760 4 9 <unknown> 1776 4 "
                        "9 <unknown> 1792 4 9 <unknown> 1808 4 9 <unknown> 1824 4 9 <unknown> 1840 4 9 <unknown> 1856 4 9"
                        " <unknown> 1872 4 9 <unknown> 1888 4 9 <unknown> 1904 4 9 <unknown> 1920 4 9 <unknown> 1936 4 9 "
                        "<unknown> 1952 4 9 <unknown> 1968 4 9 <unknown> 1984 4 9 <unknown> 2000 4 9 <unknown> 2016 4 9 <"
                        "unknown> 2032 4 9 <unknown> 2048 4 9 <unknown> 2064 4 9 <unknown> 2080 4 9 <unknown> 2096 4 9 <u"
                        "nknown> 2112 4 9 <unknown> 2128 4 9 <unknown> 2144 4 9 <unknown> 2160 4 9 <unknown> 2176 4 9 <un"
                        "known> 2192 4 9 <unknown> 2208 4 9 <unknown> 2224 4 9 <unknown> 2240 4 9 <unknown> 2256 4 9 <unk"
                        "nown> 2272 4 9 <unknown> 2288 4 9 <unknown> 2304 4 9 <unknown> 2320 4 9 <unknown> 2336 4 9 <unkn"
                        "own> 2352 4 9 <unknown> 2368 4 9 <unknown> 2384 4 9 <unknown> 2400 4 9 <unknown> 2416 4 9 <unkno"
                        "wn> 2432 4 9 <unknown> 2448 4 9 <unknown> 2464 4 9 <unknown> 2480 4 9 <unknown> 2496 4 9 <unknow"
                        "n> 2512 4 9 <unknown> 2528 4 9 <unknown> 2544 4 9 <unknown> 2560 4 9 <unknown> 2576 4 9 <unknown"
                        "> 2592 4 9 <unknown> 2608 4 9 <unknown> 2624 4 9 <unknown> 2640 4 9 <unknown> 2656 4 9 <unknown>"
                        " 2672 4 9 <unknown> 2688 4 9 <unknown> 2704 4 9 <unknown> 2720 4 9 <unknown> 2736 4 9 <unknown> "
                        "2752 4 9 <unknown> 2768 4 9 <unknown> 2784 4 9 <unknown> 2800 4 9 <unknown> 2816 6840 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityActionTypeNameMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753535;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862724] = -234556924;
  v3[536862725] = -234556924;
  v3[536862726] = -234556924;
  v3[536862727] = -234556924;
  v3[536862728] = -234556924;
  v3[536862729] = -234556924;
  v3[536862730] = -234556924;
  v3[536862731] = -234556924;
  v3[536862732] = -234556924;
  v3[536862733] = -234556924;
  v3[536862734] = -234556924;
  v3[536862735] = -234556924;
  v3[536862736] = -234556924;
  v3[536862737] = -234556924;
  v3[536862738] = -234556924;
  v3[536862739] = -234556924;
  v3[536862740] = -234556924;
  v3[536862741] = -234556924;
  v3[536862742] = -234556924;
  v3[536862743] = -234556924;
  v3[536862744] = -234556924;
  v3[536862745] = -234556924;
  v3[536862746] = -234556924;
  v3[536862747] = -234556924;
  v3[536862748] = -234556924;
  v3[536862749] = -234556924;
  v3[536862750] = -234556924;
  v3[536862751] = -234556924;
  v3[536862752] = -234556924;
  v3[536862753] = -234556924;
  v3[536862754] = -234556924;
  v3[536862755] = -234556924;
  v3[536862756] = -234556924;
  v3[536862757] = -234556924;
  v3[536862758] = -234556924;
  v3[536862759] = -234556924;
  v3[536862760] = -234556924;
  v3[536862761] = -234556924;
  v3[536862762] = -234556924;
  v3[536862763] = -234556924;
  v3[536862764] = -234556924;
  v3[536862765] = -234556924;
  v3[536862766] = -234556924;
  v3[536862767] = -234556924;
  v3[536862768] = -234556924;
  v3[536862769] = -234556924;
  v3[536862770] = -234556924;
  v3[536862771] = -234556924;
  v3[536862772] = -234556924;
  v3[536862773] = -234556924;
  v3[536862774] = -234556924;
  v3[536862775] = -234556924;
  v3[536862776] = -234556924;
  v3[536862777] = -234556924;
  v3[536862778] = -234556924;
  v3[536862779] = -234556924;
  v3[536862780] = -234556924;
  v3[536862781] = -234556924;
  v3[536862782] = -234556924;
  v3[536862783] = -234556924;
  v3[536862784] = -234556924;
  v3[536862785] = -234556924;
  v3[536862786] = -234556924;
  v3[536862787] = -234556924;
  v3[536862788] = -234556924;
  v3[536862789] = -234556924;
  v3[536862790] = -234556924;
  v3[536862791] = -234556924;
  v3[536862792] = -234556924;
  v3[536862793] = -234556924;
  v3[536862794] = -234556924;
  v3[536862795] = -234556924;
  v3[536862796] = -234556924;
  v3[536862797] = -234556924;
  v3[536862798] = -234556924;
  v3[536862799] = -234556924;
  v3[536862800] = -234556924;
  v3[536862801] = -234556924;
  v3[536862802] = -234556924;
  v3[536862803] = -234556924;
  v3[536862804] = -234556924;
  v3[536862805] = -234556924;
  v3[536862806] = -234556924;
  v3[536862807] = -234556924;
  v3[536863021] = -218103808;
  v3[536863022] = -202116109;
  v3[536863023] = -202116109;
  v3[536863024] = -202116109;
  v3[536863025] = -202116109;
  v3[536863026] = -202116109;
  v3[536863027] = -202116109;
  v3[536863028] = -202116109;
  v3[536863029] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityActionTypeNameMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityActionTypeNameMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[25],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 2816),
      (const char (*)[25])"NEW_ACTIVITY_ACTION_NONE",
      (data::NewActivityActionType *)(v1 + 80));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, "NEW_ACTIVITY_ACTION_NONE");
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[33],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 2856),
      (const char (*)[33])"NEW_ACTIVITY_ACTION_UNLOCK_POINT",
      (data::NewActivityActionType *)(v1 + 96));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, "NEW_ACTIVITY_ACTION_UNLOCK_POINT");
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[31],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 2896),
      (const char (*)[31])"NEW_ACTIVITY_ACTION_LOCK_POINT",
      (data::NewActivityActionType *)(v1 + 112));
    if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 128, "NEW_ACTIVITY_ACTION_LOCK_POINT");
    *(_DWORD *)(v1 + 128) = 3;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[33],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 2936),
      (const char (*)[33])"NEW_ACTIVITY_ACTION_ACCEPT_QUEST",
      (data::NewActivityActionType *)(v1 + 128));
    if ( *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 144, "NEW_ACTIVITY_ACTION_ACCEPT_QUEST");
    *(_DWORD *)(v1 + 144) = 4;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[33],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 2976),
      (const char (*)[33])"NEW_ACTIVITY_ACTION_CANCEL_QUEST",
      (data::NewActivityActionType *)(v1 + 144));
    if ( *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 160, "NEW_ACTIVITY_ACTION_CANCEL_QUEST");
    *(_DWORD *)(v1 + 160) = 5;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[33],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3016),
      (const char (*)[33])"NEW_ACTIVITY_ACTION_FORBID_GROUP",
      (data::NewActivityActionType *)(v1 + 160));
    if ( *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 176, "NEW_ACTIVITY_ACTION_FORBID_GROUP");
    *(_DWORD *)(v1 + 176) = 6;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[33],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3056),
      (const char (*)[33])"NEW_ACTIVITY_ACTION_ACTIVE_GROUP",
      (data::NewActivityActionType *)(v1 + 176));
    if ( *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 192, "NEW_ACTIVITY_ACTION_ACTIVE_GROUP");
    *(_DWORD *)(v1 + 192) = 7;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[33],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3096),
      (const char (*)[33])"NEW_ACTIVITY_ACTION_OPEN_MP_PLAY",
      (data::NewActivityActionType *)(v1 + 192));
    if ( *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 208, "NEW_ACTIVITY_ACTION_OPEN_MP_PLAY");
    *(_DWORD *)(v1 + 208) = 8;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3136),
      (const char (*)[34])"NEW_ACTIVITY_ACTION_CLOSE_MP_PLAY",
      (data::NewActivityActionType *)(v1 + 208));
    if ( *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 224, "NEW_ACTIVITY_ACTION_CLOSE_MP_PLAY");
    *(_DWORD *)(v1 + 224) = 9;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3176),
      (const char (*)[37])"NEW_ACTIVITY_ACTION_OPEN_ASTER_PHASE",
      (data::NewActivityActionType *)(v1 + 224));
    if ( *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 240, "NEW_ACTIVITY_ACTION_OPEN_ASTER_PHASE");
    *(_DWORD *)(v1 + 240) = 10;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[43],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3216),
      (const char (*)[43])"NEW_ACTIVITY_ACTION_ACTIVATE_SCENE_MP_PLAY",
      (data::NewActivityActionType *)(v1 + 240));
    if ( *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 256, "NEW_ACTIVITY_ACTION_ACTIVATE_SCENE_MP_PLAY");
    *(_DWORD *)(v1 + 256) = 11;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3256),
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_SCENE_MP_PLAY",
      (data::NewActivityActionType *)(v1 + 256));
    if ( *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 272, "NEW_ACTIVITY_ACTION_OPEN_SCENE_MP_PLAY");
    *(_DWORD *)(v1 + 272) = 12;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3296),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_SCENE_MP_PLAY",
      (data::NewActivityActionType *)(v1 + 272));
    if ( *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 288, "NEW_ACTIVITY_ACTION_CLOSE_SCENE_MP_PLAY");
    *(_DWORD *)(v1 + 288) = 13;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[38],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3336),
      (const char (*)[38])"NEW_ACTIVITY_ACTION_CLOSE_ASTER_PHASE",
      (data::NewActivityActionType *)(v1 + 288));
    if ( *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 304, "NEW_ACTIVITY_ACTION_CLOSE_ASTER_PHASE");
    *(_DWORD *)(v1 + 304) = 14;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3376),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_ASTER_CONTENT",
      (data::NewActivityActionType *)(v1 + 304));
    if ( *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 320, "NEW_ACTIVITY_ACTION_CLOSE_ASTER_CONTENT");
    *(_DWORD *)(v1 + 320) = 15;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3416),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_DRAGON_SPINE_PHASE",
      (data::NewActivityActionType *)(v1 + 320));
    if ( *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 336, "NEW_ACTIVITY_ACTION_OPEN_DRAGON_SPINE_PHASE");
    *(_DWORD *)(v1 + 336) = 16;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[47],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3456),
      (const char (*)[47])"NEW_ACTIVITY_ACTION_CLOSE_DRAGON_SPINE_CONTENT",
      (data::NewActivityActionType *)(v1 + 336));
    if ( *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 352, "NEW_ACTIVITY_ACTION_CLOSE_DRAGON_SPINE_CONTENT");
    *(_DWORD *)(v1 + 352) = 17;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3496),
      (const char (*)[39])"NEW_ACTIVITY_ACTION_LOAD_DYNAMIC_GROUP",
      (data::NewActivityActionType *)(v1 + 352));
    if ( *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 368, "NEW_ACTIVITY_ACTION_LOAD_DYNAMIC_GROUP");
    *(_DWORD *)(v1 + 368) = 18;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[41],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3536),
      (const char (*)[41])"NEW_ACTIVITY_ACTION_UNLOAD_DYNAMIC_GROUP",
      (data::NewActivityActionType *)(v1 + 368));
    if ( *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 384, "NEW_ACTIVITY_ACTION_UNLOAD_DYNAMIC_GROUP");
    *(_DWORD *)(v1 + 384) = 19;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3576),
      (const char (*)[34])"NEW_ACTIVITY_ACTION_ACTIVATE_SALE",
      (data::NewActivityActionType *)(v1 + 384));
    if ( *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 400, "NEW_ACTIVITY_ACTION_ACTIVATE_SALE");
    *(_DWORD *)(v1 + 400) = 20;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[36],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3616),
      (const char (*)[36])"NEW_ACTIVITY_ACTION_DEACTIVATE_SALE",
      (data::NewActivityActionType *)(v1 + 400));
    if ( *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 416, "NEW_ACTIVITY_ACTION_DEACTIVATE_SALE");
    *(_DWORD *)(v1 + 416) = 21;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3656),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_SEA_LAMP_OPEN_PHASE",
      (data::NewActivityActionType *)(v1 + 416));
    if ( *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 432, "NEW_ACTIVITY_ACTION_SEA_LAMP_OPEN_PHASE");
    *(_DWORD *)(v1 + 432) = 22;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[35],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3696),
      (const char (*)[35])"NEW_ACTIVITY_ACTION_SEA_LAMP_CLOSE",
      (data::NewActivityActionType *)(v1 + 432));
    if ( *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 448, "NEW_ACTIVITY_ACTION_SEA_LAMP_CLOSE");
    *(_DWORD *)(v1 + 448) = 25;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[38],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3736),
      (const char (*)[38])"NEW_ACTIVITY_ACTION_ACTIVATE_BLESSING",
      (data::NewActivityActionType *)(v1 + 448));
    if ( *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 464, "NEW_ACTIVITY_ACTION_ACTIVATE_BLESSING");
    *(_DWORD *)(v1 + 464) = 26;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[43],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3776),
      (const char (*)[43])"NEW_ACTIVITY_ACTION_CLOSE_BLESSING_CONTENT",
      (data::NewActivityActionType *)(v1 + 464));
    if ( *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 480, "NEW_ACTIVITY_ACTION_CLOSE_BLESSING_CONTENT");
    *(_DWORD *)(v1 + 480) = 27;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3816),
      (const char (*)[40])"NEW_ACTIVIYT_ACTION_REFRESH_GROUP_SUITE",
      (data::NewActivityActionType *)(v1 + 480));
    if ( *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 496, "NEW_ACTIVIYT_ACTION_REFRESH_GROUP_SUITE");
    *(_DWORD *)(v1 + 496) = 28;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[36],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3856),
      (const char (*)[36])"NEW_ACTIVITY_ACTION_OPEN_MECHANICUS",
      (data::NewActivityActionType *)(v1 + 496));
    if ( *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 512, "NEW_ACTIVITY_ACTION_OPEN_MECHANICUS");
    *(_DWORD *)(v1 + 512) = 29;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3896),
      (const char (*)[37])"NEW_ACTIVITY_ACTION_CLOSE_MECHANICUS",
      (data::NewActivityActionType *)(v1 + 512));
    if ( *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 528, "NEW_ACTIVITY_ACTION_CLOSE_MECHANICUS");
    *(_DWORD *)(v1 + 528) = 30;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3936),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_OPEN_MECHANICUS_SEQUENCE",
      (data::NewActivityActionType *)(v1 + 528));
    if ( *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 544, "NEW_ACTIVITY_ACTION_OPEN_MECHANICUS_SEQUENCE");
    *(_DWORD *)(v1 + 544) = 31;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 3976),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_CLOSE_EXPEDITION_CONTENT",
      (data::NewActivityActionType *)(v1 + 544));
    if ( *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 560, "NEW_ACTIVITY_ACTION_CLOSE_EXPEDITION_CONTENT");
    *(_DWORD *)(v1 + 560) = 32;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4016),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_FLEUR_FAIR_OPEN_MINIGAME",
      (data::NewActivityActionType *)(v1 + 560));
    if ( *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 576, "NEW_ACTIVITY_ACTION_FLEUR_FAIR_OPEN_MINIGAME");
    *(_DWORD *)(v1 + 576) = 33;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4056),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_CLOSE_FLEUR_FAIR_CONTENT",
      (data::NewActivityActionType *)(v1 + 576));
    if ( *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 592, "NEW_ACTIVITY_ACTION_CLOSE_FLEUR_FAIR_CONTENT");
    *(_DWORD *)(v1 + 592) = 34;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[52],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4096),
      (const char (*)[52])"NEW_ACTIVITY_ACTION_FLEUR_FAIR_OPEN_DUNGEON_SECTION",
      (data::NewActivityActionType *)(v1 + 592));
    if ( *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 608, "NEW_ACTIVITY_ACTION_FLEUR_FAIR_OPEN_DUNGEON_SECTION");
    *(_DWORD *)(v1 + 608) = 35;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4136),
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_REGION_SEARCH",
      (data::NewActivityActionType *)(v1 + 608));
    if ( *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 624, "NEW_ACTIVITY_ACTION_OPEN_REGION_SEARCH");
    *(_DWORD *)(v1 + 624) = 36;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4176),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_REGION_SEARCH",
      (data::NewActivityActionType *)(v1 + 624));
    if ( *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 640, "NEW_ACTIVITY_ACTION_CLOSE_REGION_SEARCH");
    *(_DWORD *)(v1 + 640) = 37;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4216),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_UNLOCK_FLEUR_FAIR_DUNGEON",
      (data::NewActivityActionType *)(v1 + 640));
    if ( *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 656, "NEW_ACTIVITY_ACTION_UNLOCK_FLEUR_FAIR_DUNGEON");
    *(_DWORD *)(v1 + 656) = 38;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[38],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4256),
      (const char (*)[38])"NEW_ACTIVITY_ACTION_OPEN_WEATHER_AREA",
      (data::NewActivityActionType *)(v1 + 656));
    if ( *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 672, "NEW_ACTIVITY_ACTION_OPEN_WEATHER_AREA");
    *(_DWORD *)(v1 + 672) = 39;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4296),
      (const char (*)[39])"NEW_ACTIVITY_ACTION_CLOSE_WEATHER_AREA",
      (data::NewActivityActionType *)(v1 + 672));
    if ( *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 688, "NEW_ACTIVITY_ACTION_CLOSE_WEATHER_AREA");
    *(_DWORD *)(v1 + 688) = 40;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[36],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4336),
      (const char (*)[36])"NEW_ACTIVITY_ACTION_SET_SCORE_LIMIT",
      (data::NewActivityActionType *)(v1 + 688));
    if ( *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 704, "NEW_ACTIVITY_ACTION_SET_SCORE_LIMIT");
    *(_DWORD *)(v1 + 704) = 41;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[47],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4376),
      (const char (*)[47])"NEW_ACTIVITY_ACTION_OPEN_CHANNELLER_SLAB_STAGE",
      (data::NewActivityActionType *)(v1 + 704));
    if ( *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 720, "NEW_ACTIVITY_ACTION_OPEN_CHANNELLER_SLAB_STAGE");
    *(_DWORD *)(v1 + 720) = 42;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[48],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4416),
      (const char (*)[48])"NEW_ACTIVITY_ACTION_CLOSE_CHANNELLER_SLAB_STAGE",
      (data::NewActivityActionType *)(v1 + 720));
    if ( *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 736, "NEW_ACTIVITY_ACTION_CLOSE_CHANNELLER_SLAB_STAGE");
    *(_DWORD *)(v1 + 736) = 43;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[47],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4456),
      (const char (*)[47])"NEW_ACTIVITY_ACTION_CLOSE_FIND_HILICHURL_STAGE",
      (data::NewActivityActionType *)(v1 + 736));
    if ( *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 752, "NEW_ACTIVITY_ACTION_CLOSE_FIND_HILICHURL_STAGE");
    *(_DWORD *)(v1 + 752) = 44;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[53],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4496),
      (const char (*)[53])"NEW_ACTIVITY_ACTION_REGISTER_GAME_TIME_DYNAMIC_GROUP",
      (data::NewActivityActionType *)(v1 + 752));
    if ( *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 768, "NEW_ACTIVITY_ACTION_REGISTER_GAME_TIME_DYNAMIC_GROUP");
    *(_DWORD *)(v1 + 768) = 45;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[55],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4536),
      (const char (*)[55])"NEW_ACTIVITY_ACTION_UNREGISTER_GAME_TIME_DYNAMIC_GROUP",
      (data::NewActivityActionType *)(v1 + 768));
    if ( *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 784, "NEW_ACTIVITY_ACTION_UNREGISTER_GAME_TIME_DYNAMIC_GROUP");
    *(_DWORD *)(v1 + 784) = 46;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[54],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4576),
      (const char (*)[54])"NEW_ACTIVITY_ACTION_OPEN_MIST_TRIAL_DUNGEON_CHALLENGE",
      (data::NewActivityActionType *)(v1 + 784));
    if ( *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 800, "NEW_ACTIVITY_ACTION_OPEN_MIST_TRIAL_DUNGEON_CHALLENGE");
    *(_DWORD *)(v1 + 800) = 47;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[30],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4616),
      (const char (*)[30])"NEW_ACTIVITY_ACTION_SEND_MAIL",
      (data::NewActivityActionType *)(v1 + 800));
    if ( *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 816, "NEW_ACTIVITY_ACTION_SEND_MAIL");
    *(_DWORD *)(v1 + 816) = 48;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[60],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4656),
      (const char (*)[60])"NEW_ACTIVITY_ACTION_OPEN_CHANNELLER_SLAB_LOOP_DUNGEON_STAGE",
      (data::NewActivityActionType *)(v1 + 816));
    if ( *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 832, "NEW_ACTIVITY_ACTION_OPEN_CHANNELLER_SLAB_LOOP_DUNGEON_STAGE");
    *(_DWORD *)(v1 + 832) = 49;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[61],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4696),
      (const char (*)[61])"NEW_ACTIVITY_ACTION_CLOSE_CHANNELLER_SLAB_LOOP_DUNGEON_STAGE",
      (data::NewActivityActionType *)(v1 + 832));
    if ( *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 848, "NEW_ACTIVITY_ACTION_CLOSE_CHANNELLER_SLAB_LOOP_DUNGEON_STAGE");
    *(_DWORD *)(v1 + 848) = 50;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[54],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4736),
      (const char (*)[54])"NEW_ACTIVITY_ACTION_OPEN_CHANNELLER_SLAB_LOOP_DUNGEON",
      (data::NewActivityActionType *)(v1 + 848));
    if ( *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 864, "NEW_ACTIVITY_ACTION_OPEN_CHANNELLER_SLAB_LOOP_DUNGEON");
    *(_DWORD *)(v1 + 864) = 51;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4776),
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_HIDE_AND_SEEK",
      (data::NewActivityActionType *)(v1 + 864));
    if ( *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 880, "NEW_ACTIVITY_ACTION_OPEN_HIDE_AND_SEEK");
    *(_DWORD *)(v1 + 880) = 52;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4816),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_HIDE_AND_SEEK",
      (data::NewActivityActionType *)(v1 + 880));
    if ( *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 896, "NEW_ACTIVITY_ACTION_CLOSE_HIDE_AND_SEEK");
    *(_DWORD *)(v1 + 896) = 53;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[43],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4856),
      (const char (*)[43])"NEW_ACTIVITY_ACTION_OPEN_SUMMER_TIME_STAGE",
      (data::NewActivityActionType *)(v1 + 896));
    if ( *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 912, "NEW_ACTIVITY_ACTION_OPEN_SUMMER_TIME_STAGE");
    *(_DWORD *)(v1 + 912) = 54;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4896),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_CLOSE_SUMMER_TIME_CONTENT",
      (data::NewActivityActionType *)(v1 + 912));
    if ( *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 928, "NEW_ACTIVITY_ACTION_CLOSE_SUMMER_TIME_CONTENT");
    *(_DWORD *)(v1 + 928) = 55;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[48],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4936),
      (const char (*)[48])"NEW_ACTIVITY_ACTION_OPEN_BOUNCE_CONJURING_STAGE",
      (data::NewActivityActionType *)(v1 + 928));
    if ( *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 944, "NEW_ACTIVITY_ACTION_OPEN_BOUNCE_CONJURING_STAGE");
    *(_DWORD *)(v1 + 944) = 56;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[51],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 4976),
      (const char (*)[51])"NEW_ACTIVITY_ACTION_CLOSE_BOUNCE_CONJURING_CONTENT",
      (data::NewActivityActionType *)(v1 + 944));
    if ( *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 960, "NEW_ACTIVITY_ACTION_CLOSE_BOUNCE_CONJURING_CONTENT");
    *(_DWORD *)(v1 + 960) = 57;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5016),
      (const char (*)[34])"NEW_ACTIVITY_ACTION_ADD_SCENE_TAG",
      (data::NewActivityActionType *)(v1 + 960));
    if ( *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 976, "NEW_ACTIVITY_ACTION_ADD_SCENE_TAG");
    *(_DWORD *)(v1 + 976) = 58;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[34],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5056),
      (const char (*)[34])"NEW_ACTIVITY_ACTION_DEL_SCENE_TAG",
      (data::NewActivityActionType *)(v1 + 976));
    if ( *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 992, "NEW_ACTIVITY_ACTION_DEL_SCENE_TAG");
    *(_DWORD *)(v1 + 992) = 59;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[49],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5096),
      (const char (*)[49])"NEW_ACTIVITY_ACTION_MODIFY_ACTIVITY_COND_DEFAULT",
      (data::NewActivityActionType *)(v1 + 992));
    if ( *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1008, "NEW_ACTIVITY_ACTION_MODIFY_ACTIVITY_COND_DEFAULT");
    *(_DWORD *)(v1 + 1008) = 60;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5136),
      (const char (*)[37])"NEW_ACTIVITY_ACTION_HIDE_SCENE_POINT",
      (data::NewActivityActionType *)(v1 + 1008));
    if ( *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1024, "NEW_ACTIVITY_ACTION_HIDE_SCENE_POINT");
    *(_DWORD *)(v1 + 1024) = 61;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5176),
      (const char (*)[37])"NEW_ACTIVITY_ACTION_SHOW_SCENE_POINT",
      (data::NewActivityActionType *)(v1 + 1024));
    if ( *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1040, "NEW_ACTIVITY_ACTION_SHOW_SCENE_POINT");
    *(_DWORD *)(v1 + 1040) = 62;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[42],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5216),
      (const char (*)[42])"NEW_ACTIVITY_ACTION_OPEN_BLITZ_RUSH_STAGE",
      (data::NewActivityActionType *)(v1 + 1040));
    if ( *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1056, "NEW_ACTIVITY_ACTION_OPEN_BLITZ_RUSH_STAGE");
    *(_DWORD *)(v1 + 1056) = 63;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5256),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_CLOSE_BLITZ_RUSH_CONTENT",
      (data::NewActivityActionType *)(v1 + 1056));
    if ( *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1072, "NEW_ACTIVITY_ACTION_CLOSE_BLITZ_RUSH_CONTENT");
    *(_DWORD *)(v1 + 1072) = 64;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5296),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_LOCK_PLAYER_WORLD_SCENE",
      (data::NewActivityActionType *)(v1 + 1072));
    if ( *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1088, "NEW_ACTIVITY_ACTION_LOCK_PLAYER_WORLD_SCENE");
    *(_DWORD *)(v1 + 1088) = 65;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5336),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_UNLOCK_PLAYER_WORLD_SCENE",
      (data::NewActivityActionType *)(v1 + 1088));
    if ( *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1104, "NEW_ACTIVITY_ACTION_UNLOCK_PLAYER_WORLD_SCENE");
    *(_DWORD *)(v1 + 1104) = 66;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[35],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5376),
      (const char (*)[35])"NEW_ACTIVITY_ACTION_CLOSE_SEA_MIST",
      (data::NewActivityActionType *)(v1 + 1104));
    if ( *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1120, "NEW_ACTIVITY_ACTION_CLOSE_SEA_MIST");
    *(_DWORD *)(v1 + 1120) = 67;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[36],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5416),
      (const char (*)[36])"NEW_ACTIVITY_ACTION_OPEN_SUMO_STAGE",
      (data::NewActivityActionType *)(v1 + 1120));
    if ( *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1136, "NEW_ACTIVITY_ACTION_OPEN_SUMO_STAGE");
    *(_DWORD *)(v1 + 1136) = 68;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[42],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5456),
      (const char (*)[42])"NEW_ACTIVITY_ACTION_REGISTER_GROUP_BUNDLE",
      (data::NewActivityActionType *)(v1 + 1136));
    if ( *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1152, "NEW_ACTIVITY_ACTION_REGISTER_GROUP_BUNDLE");
    *(_DWORD *)(v1 + 1152) = 69;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5496),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_UNLOCK_SUMO_DUNGEON",
      (data::NewActivityActionType *)(v1 + 1152));
    if ( *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1168, "NEW_ACTIVITY_ACTION_UNLOCK_SUMO_DUNGEON");
    *(_DWORD *)(v1 + 1168) = 70;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5536),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_CHESS_CONTENT",
      (data::NewActivityActionType *)(v1 + 1168));
    if ( *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1184, "NEW_ACTIVITY_ACTION_CLOSE_CHESS_CONTENT");
    *(_DWORD *)(v1 + 1184) = 71;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[55],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5576),
      (const char (*)[55])"NEW_ACTIVITY_ACTION_DISABLE_TRANSFER_POINT_INTERACTION",
      (data::NewActivityActionType *)(v1 + 1184));
    if ( *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1200, "NEW_ACTIVITY_ACTION_DISABLE_TRANSFER_POINT_INTERACTION");
    *(_DWORD *)(v1 + 1200) = 72;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[54],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5616),
      (const char (*)[54])"NEW_ACTIVITY_ACTION_ENABLE_TRANSFER_POINT_INTERACTION",
      (data::NewActivityActionType *)(v1 + 1200));
    if ( *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1216, "NEW_ACTIVITY_ACTION_ENABLE_TRANSFER_POINT_INTERACTION");
    *(_DWORD *)(v1 + 1216) = 73;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5656),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_UNREGISTER_GROUP_BUNDLE",
      (data::NewActivityActionType *)(v1 + 1216));
    if ( *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1232, "NEW_ACTIVITY_ACTION_UNREGISTER_GROUP_BUNDLE");
    *(_DWORD *)(v1 + 1232) = 74;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5696),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_BLITZ_RUSH_DUNGEON",
      (data::NewActivityActionType *)(v1 + 1232));
    if ( *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1248, "NEW_ACTIVITY_ACTION_OPEN_BLITZ_RUSH_DUNGEON");
    *(_DWORD *)(v1 + 1248) = 75;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5736),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_DIG_ACITVITY_STAGE",
      (data::NewActivityActionType *)(v1 + 1248));
    if ( *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1264, "NEW_ACTIVITY_ACTION_OPEN_DIG_ACITVITY_STAGE");
    *(_DWORD *)(v1 + 1264) = 76;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[56],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5776),
      (const char (*)[56])"NEW_ACTIVITY_ACTION_UNLOCK_MUSIC_BY_MUSIC_GAME_ACTIVITY",
      (data::NewActivityActionType *)(v1 + 1264));
    if ( *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1280, "NEW_ACTIVITY_ACTION_UNLOCK_MUSIC_BY_MUSIC_GAME_ACTIVITY");
    *(_DWORD *)(v1 + 1280) = 77;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[47],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5816),
      (const char (*)[47])"NEW_ACTIVITY_ACTION_CLOSE_PLANT_FLOWER_CONTENT",
      (data::NewActivityActionType *)(v1 + 1280));
    if ( *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1296, "NEW_ACTIVITY_ACTION_CLOSE_PLANT_FLOWER_CONTENT");
    *(_DWORD *)(v1 + 1296) = 78;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[49],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5856),
      (const char (*)[49])"NEW_ACTIVITY_ACTION_OPEN_ROGUELIKE_DUNGEON_STAGE",
      (data::NewActivityActionType *)(v1 + 1296));
    if ( *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1312, "NEW_ACTIVITY_ACTION_OPEN_ROGUELIKE_DUNGEON_STAGE");
    *(_DWORD *)(v1 + 1312) = 79;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[52],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5896),
      (const char (*)[52])"NEW_ACTIVITY_ACTION_CLOSE_ROGUELIKE_DUNGEON_CONTENT",
      (data::NewActivityActionType *)(v1 + 1312));
    if ( *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1328, "NEW_ACTIVITY_ACTION_CLOSE_ROGUELIKE_DUNGEON_CONTENT");
    *(_DWORD *)(v1 + 1328) = 80;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5936),
      (const char (*)[37])"NEW_ACTIVITY_ACTION_OPEN_HACHI_STAGE",
      (data::NewActivityActionType *)(v1 + 1328));
    if ( *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1344, "NEW_ACTIVITY_ACTION_OPEN_HACHI_STAGE");
    *(_DWORD *)(v1 + 1344) = 81;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 5976),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_OPEN_WINTER_CAMP_EXPLORE",
      (data::NewActivityActionType *)(v1 + 1344));
    if ( *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1360, "NEW_ACTIVITY_ACTION_OPEN_WINTER_CAMP_EXPLORE");
    *(_DWORD *)(v1 + 1360) = 82;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6016),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_WINTER_CAMP_BATTLE",
      (data::NewActivityActionType *)(v1 + 1360));
    if ( *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1376, "NEW_ACTIVITY_ACTION_OPEN_WINTER_CAMP_BATTLE");
    *(_DWORD *)(v1 + 1376) = 83;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[42],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6056),
      (const char (*)[42])"NEW_ACTIVITY_ACTION_OPEN_WINTER_CAMP_RACE",
      (data::NewActivityActionType *)(v1 + 1376));
    if ( *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1392, "NEW_ACTIVITY_ACTION_OPEN_WINTER_CAMP_RACE");
    *(_DWORD *)(v1 + 1392) = 84;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6096),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_CLOSE_WINTER_CAMP_CONTENT",
      (data::NewActivityActionType *)(v1 + 1392));
    if ( *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1408, "NEW_ACTIVITY_ACTION_CLOSE_WINTER_CAMP_CONTENT");
    *(_DWORD *)(v1 + 1408) = 85;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[47],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6136),
      (const char (*)[47])"NEW_ACTIVITY_ACTION_DELAY_UNLOAD_DYNAMIC_GROUP",
      (data::NewActivityActionType *)(v1 + 1408));
    if ( *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1424, "NEW_ACTIVITY_ACTION_DELAY_UNLOAD_DYNAMIC_GROUP");
    *(_DWORD *)(v1 + 1424) = 86;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[48],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6176),
      (const char (*)[48])"NEW_ACTIVITY_ACTION_UNREGISTER_ALL_GROUP_BUNDLE",
      (data::NewActivityActionType *)(v1 + 1424));
    if ( *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1440, "NEW_ACTIVITY_ACTION_UNREGISTER_ALL_GROUP_BUNDLE");
    *(_DWORD *)(v1 + 1440) = 87;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6216),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_UNLOAD_GROUP_BUNDLE",
      (data::NewActivityActionType *)(v1 + 1440));
    if ( *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1456, "NEW_ACTIVITY_ACTION_UNLOAD_GROUP_BUNDLE");
    *(_DWORD *)(v1 + 1456) = 88;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[38],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6256),
      (const char (*)[38])"NEW_ACTIVITY_ACTION_OPEN_POTION_STAGE",
      (data::NewActivityActionType *)(v1 + 1456));
    if ( *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1472, "NEW_ACTIVITY_ACTION_OPEN_POTION_STAGE");
    *(_DWORD *)(v1 + 1472) = 89;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[48],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6296),
      (const char (*)[48])"NEW_ACTIVITY_ACTION_LANV2_OPEN_PROJECTION_STAGE",
      (data::NewActivityActionType *)(v1 + 1472));
    if ( *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1488, "NEW_ACTIVITY_ACTION_LANV2_OPEN_PROJECTION_STAGE");
    *(_DWORD *)(v1 + 1488) = 90;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[51],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6336),
      (const char (*)[51])"NEW_ACTIVITY_ACTION_LANV2_CLOSE_PROJECTION_CONTENT",
      (data::NewActivityActionType *)(v1 + 1488));
    if ( *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1504, "NEW_ACTIVITY_ACTION_LANV2_CLOSE_PROJECTION_CONTENT");
    *(_DWORD *)(v1 + 1504) = 91;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6376),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_LANV2_OPEN_SALVAGE_STAGE",
      (data::NewActivityActionType *)(v1 + 1504));
    if ( *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1520, "NEW_ACTIVITY_ACTION_LANV2_OPEN_SALVAGE_STAGE");
    *(_DWORD *)(v1 + 1520) = 92;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6416),
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_MINI_ELDRITCH",
      (data::NewActivityActionType *)(v1 + 1520));
    if ( *(_BYTE *)(((v1 + 1536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1536) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1536, "NEW_ACTIVITY_ACTION_OPEN_MINI_ELDRITCH");
    *(_DWORD *)(v1 + 1536) = 93;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6456),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_UNLOCK_HIDE_AND_SEEK_MAP",
      (data::NewActivityActionType *)(v1 + 1536));
    if ( *(_BYTE *)(((v1 + 1552) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1552) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1552, "NEW_ACTIVITY_ACTION_UNLOCK_HIDE_AND_SEEK_MAP");
    *(_DWORD *)(v1 + 1552) = 94;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[43],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6496),
      (const char (*)[43])"NEW_ACTIVITY_ACTION_ACTIVITY_BANNER_NOTIFY",
      (data::NewActivityActionType *)(v1 + 1552));
    if ( *(_BYTE *)(((v1 + 1568) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1568) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1568, "NEW_ACTIVITY_ACTION_ACTIVITY_BANNER_NOTIFY");
    *(_DWORD *)(v1 + 1568) = 95;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[47],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6536),
      (const char (*)[47])"NEW_ACTIVITY_ACTION_LANV2_OPEN_FIREWORKS_STAGE",
      (data::NewActivityActionType *)(v1 + 1568));
    if ( *(_BYTE *)(((v1 + 1584) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1584) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1584, "NEW_ACTIVITY_ACTION_LANV2_OPEN_FIREWORKS_STAGE");
    *(_DWORD *)(v1 + 1584) = 96;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[47],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6576),
      (const char (*)[47])"NEW_ACTIVITY_ACTION_CLOSE_LANTERN_RITE_CONTENT",
      (data::NewActivityActionType *)(v1 + 1584));
    if ( *(_BYTE *)(((v1 + 1600) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1600) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1600, "NEW_ACTIVITY_ACTION_CLOSE_LANTERN_RITE_CONTENT");
    *(_DWORD *)(v1 + 1600) = 97;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6616),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_TANUKI_TRAVEL",
      (data::NewActivityActionType *)(v1 + 1600));
    if ( *(_BYTE *)(((v1 + 1616) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1616) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1616, "NEW_ACTIVITY_ACTION_CLOSE_TANUKI_TRAVEL");
    *(_DWORD *)(v1 + 1616) = 98;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6656),
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_MICHIAE_STAGE",
      (data::NewActivityActionType *)(v1 + 1616));
    if ( *(_BYTE *)(((v1 + 1632) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1632) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1632, "NEW_ACTIVITY_ACTION_OPEN_MICHIAE_STAGE");
    *(_DWORD *)(v1 + 1632) = 99;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6696),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_MATERIAL",
      (data::NewActivityActionType *)(v1 + 1632));
    if ( *(_BYTE *)(((v1 + 1648) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1648) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1648, "NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_MATERIAL");
    *(_DWORD *)(v1 + 1648) = 100;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[50],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6736),
      (const char (*)[50])"NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_STORY_MODULE",
      (data::NewActivityActionType *)(v1 + 1648));
    if ( *(_BYTE *)(((v1 + 1664) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1664) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1664, "NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_STORY_MODULE");
    *(_DWORD *)(v1 + 1664) = 101;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[43],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6776),
      (const char (*)[43])"NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_LEVEL",
      (data::NewActivityActionType *)(v1 + 1664));
    if ( *(_BYTE *)(((v1 + 1680) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1680) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1680, "NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_LEVEL");
    *(_DWORD *)(v1 + 1680) = 102;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[52],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6816),
      (const char (*)[52])"NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_DEVELOP_MODULE",
      (data::NewActivityActionType *)(v1 + 1680));
    if ( *(_BYTE *)(((v1 + 1696) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1696) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1696, "NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_DEVELOP_MODULE");
    *(_DWORD *)(v1 + 1696) = 103;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6856),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_OPEN_CUSTOM_DUNGEON",
      (data::NewActivityActionType *)(v1 + 1696));
    if ( *(_BYTE *)(((v1 + 1712) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1712) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1712, "NEW_ACTIVITY_ACTION_OPEN_CUSTOM_DUNGEON");
    *(_DWORD *)(v1 + 1712) = 104;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[41],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6896),
      (const char (*)[41])"NEW_ACTIVITY_ACTION_CLOSE_CUSTOM_DUNGEON",
      (data::NewActivityActionType *)(v1 + 1712));
    if ( *(_BYTE *)(((v1 + 1728) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1728) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1728, "NEW_ACTIVITY_ACTION_CLOSE_CUSTOM_DUNGEON");
    *(_DWORD *)(v1 + 1728) = 105;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[29],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6936),
      (const char (*)[29])"NEW_ACTIVITY_ACTION_OPEN_UGC",
      (data::NewActivityActionType *)(v1 + 1728));
    if ( *(_BYTE *)(((v1 + 1744) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1744) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1744, "NEW_ACTIVITY_ACTION_OPEN_UGC");
    *(_DWORD *)(v1 + 1744) = 106;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[51],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 6976),
      (const char (*)[51])"NEW_ACTIVITY_ACTION_UNLOCK_OFFICIAL_CUSTOM_DUNGEON",
      (data::NewActivityActionType *)(v1 + 1744));
    if ( *(_BYTE *)(((v1 + 1760) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1760) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1760, "NEW_ACTIVITY_ACTION_UNLOCK_OFFICIAL_CUSTOM_DUNGEON");
    *(_DWORD *)(v1 + 1760) = 107;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7016),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_CRYSTAL_LINK_LEVEL",
      (data::NewActivityActionType *)(v1 + 1760));
    if ( *(_BYTE *)(((v1 + 1776) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1776) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1776, "NEW_ACTIVITY_ACTION_OPEN_CRYSTAL_LINK_LEVEL");
    *(_DWORD *)(v1 + 1776) = 108;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7056),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_PHOTO_CONTENT",
      (data::NewActivityActionType *)(v1 + 1776));
    if ( *(_BYTE *)(((v1 + 1792) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1792) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1792, "NEW_ACTIVITY_ACTION_CLOSE_PHOTO_CONTENT");
    *(_DWORD *)(v1 + 1792) = 109;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[38],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7096),
      (const char (*)[38])"NEW_ACTIVITY_ACTION_OPEN_PHOTO_POS_ID",
      (data::NewActivityActionType *)(v1 + 1792));
    if ( *(_BYTE *)(((v1 + 1808) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1808) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1808, "NEW_ACTIVITY_ACTION_OPEN_PHOTO_POS_ID");
    *(_DWORD *)(v1 + 1808) = 110;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7136),
      (const char (*)[37])"NEW_ACTIVITY_ACTION_OPEN_SPICE_STAGE",
      (data::NewActivityActionType *)(v1 + 1808));
    if ( *(_BYTE *)(((v1 + 1824) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1824) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1824, "NEW_ACTIVITY_ACTION_OPEN_SPICE_STAGE");
    *(_DWORD *)(v1 + 1824) = 111;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7176),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_IRODORI_POETRY_STAGE",
      (data::NewActivityActionType *)(v1 + 1824));
    if ( *(_BYTE *)(((v1 + 1840) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1840) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1840, "NEW_ACTIVITY_ACTION_OPEN_IRODORI_POETRY_STAGE");
    *(_DWORD *)(v1 + 1840) = 112;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7216),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_OPEN_IRODORI_CHESS_STAGE",
      (data::NewActivityActionType *)(v1 + 1840));
    if ( *(_BYTE *)(((v1 + 1856) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1856) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1856, "NEW_ACTIVITY_ACTION_OPEN_IRODORI_CHESS_STAGE");
    *(_DWORD *)(v1 + 1856) = 113;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7256),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_IRODORI_MASTER_STAGE",
      (data::NewActivityActionType *)(v1 + 1856));
    if ( *(_BYTE *)(((v1 + 1872) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1872) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1872, "NEW_ACTIVITY_ACTION_OPEN_IRODORI_MASTER_STAGE");
    *(_DWORD *)(v1 + 1872) = 114;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7296),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_IRODORI_FLOWER_STAGE",
      (data::NewActivityActionType *)(v1 + 1872));
    if ( *(_BYTE *)(((v1 + 1888) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1888) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1888, "NEW_ACTIVITY_ACTION_OPEN_IRODORI_FLOWER_STAGE");
    *(_DWORD *)(v1 + 1888) = 115;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7336),
      (const char (*)[39])"NEW_ACTIVITY_ACTION_ACTIVE_ITEM_GIVING",
      (data::NewActivityActionType *)(v1 + 1888));
    if ( *(_BYTE *)(((v1 + 1904) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1904) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1904, "NEW_ACTIVITY_ACTION_ACTIVE_ITEM_GIVING");
    *(_DWORD *)(v1 + 1904) = 116;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[41],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7376),
      (const char (*)[41])"NEW_ACTIVITY_ACTION_DEACTIVE_ITEM_GIVING",
      (data::NewActivityActionType *)(v1 + 1904));
    if ( *(_BYTE *)(((v1 + 1920) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1920) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1920, "NEW_ACTIVITY_ACTION_DEACTIVE_ITEM_GIVING");
    *(_DWORD *)(v1 + 1920) = 117;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7416),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_CLOSE_BARTENDER_CONTENT",
      (data::NewActivityActionType *)(v1 + 1920));
    if ( *(_BYTE *)(((v1 + 1936) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1936) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1936, "NEW_ACTIVITY_ACTION_CLOSE_BARTENDER_CONTENT");
    *(_DWORD *)(v1 + 1936) = 118;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[40],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7456),
      (const char (*)[40])"NEW_ACTIVITY_ACTION_OPEN_MUSIC_GAME_UGC",
      (data::NewActivityActionType *)(v1 + 1936));
    if ( *(_BYTE *)(((v1 + 1952) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1952) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1952, "NEW_ACTIVITY_ACTION_OPEN_MUSIC_GAME_UGC");
    *(_DWORD *)(v1 + 1952) = 119;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[41],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7496),
      (const char (*)[41])"NEW_ACTIVITY_ACTION_CLOSE_MUSIC_GAME_UGC",
      (data::NewActivityActionType *)(v1 + 1952));
    if ( *(_BYTE *)(((v1 + 1968) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1968) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1968, "NEW_ACTIVITY_ACTION_CLOSE_MUSIC_GAME_UGC");
    *(_DWORD *)(v1 + 1968) = 120;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7536),
      (const char (*)[37])"NEW_ACTIVITY_ACTION_OPEN_GACHA_STAGE",
      (data::NewActivityActionType *)(v1 + 1968));
    if ( *(_BYTE *)(((v1 + 1984) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1984) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1984, "NEW_ACTIVITY_ACTION_OPEN_GACHA_STAGE");
    *(_DWORD *)(v1 + 1984) = 121;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[43],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7576),
      (const char (*)[43])"NEW_ACTIVITY_ACTION_OPEN_ROGUE_DIARY_STAGE",
      (data::NewActivityActionType *)(v1 + 1984));
    if ( *(_BYTE *)(((v1 + 2000) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2000) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2000, "NEW_ACTIVITY_ACTION_OPEN_ROGUE_DIARY_STAGE");
    *(_DWORD *)(v1 + 2000) = 122;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7616),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_CLOSE_ROGUE_DIARY_CONTENT",
      (data::NewActivityActionType *)(v1 + 2000));
    if ( *(_BYTE *)(((v1 + 2016) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2016) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2016, "NEW_ACTIVITY_ACTION_CLOSE_ROGUE_DIARY_CONTENT");
    *(_DWORD *)(v1 + 2016) = 123;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[39],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7656),
      (const char (*)[39])"NEW_ACTIVITY_ACTION_CLOSE_PHOTO_POS_ID",
      (data::NewActivityActionType *)(v1 + 2016));
    if ( *(_BYTE *)(((v1 + 2032) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2032) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2032, "NEW_ACTIVITY_ACTION_CLOSE_PHOTO_POS_ID");
    *(_DWORD *)(v1 + 2032) = 124;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[49],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7696),
      (const char (*)[49])"NEW_ACTIVITY_ACTION_OPEN_SUMMER_V2_DUNGEON_STAGE",
      (data::NewActivityActionType *)(v1 + 2032));
    if ( *(_BYTE *)(((v1 + 2048) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2048) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2048, "NEW_ACTIVITY_ACTION_OPEN_SUMMER_V2_DUNGEON_STAGE");
    *(_DWORD *)(v1 + 2048) = 125;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7736),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_SUMMER_V2_BOAT_STAGE",
      (data::NewActivityActionType *)(v1 + 2048));
    if ( *(_BYTE *)(((v1 + 2064) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2064) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2064, "NEW_ACTIVITY_ACTION_OPEN_SUMMER_V2_BOAT_STAGE");
    *(_DWORD *)(v1 + 2064) = 126;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7776),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_ISLAND_PARTY_STAGE",
      (data::NewActivityActionType *)(v1 + 2064));
    if ( *(_BYTE *)(((v1 + 2080) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2080) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2080, "NEW_ACTIVITY_ACTION_OPEN_ISLAND_PARTY_STAGE");
    *(_DWORD *)(v1 + 2080) = 127;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[36],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7816),
      (const char (*)[36])"NEW_ACTIVITY_ACTION_OPEN_GEAR_STAGE",
      (data::NewActivityActionType *)(v1 + 2080));
    if ( *(_BYTE *)(((v1 + 2096) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2096) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2096, "NEW_ACTIVITY_ACTION_OPEN_GEAR_STAGE");
    *(_DWORD *)(v1 + 2096) = 128;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[60],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7856),
      (const char (*)[60])"NEW_ACTIVITY_ACTION_LOAD_SPECIFY_BUSINESSINFO_DYNAMIC_GROUP",
      (data::NewActivityActionType *)(v1 + 2096));
    if ( *(_BYTE *)(((v1 + 2112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2112, "NEW_ACTIVITY_ACTION_LOAD_SPECIFY_BUSINESSINFO_DYNAMIC_GROUP");
    *(_DWORD *)(v1 + 2112) = 129;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[62],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7896),
      (const char (*)[62])"NEW_ACTIVITY_ACTION_UNLOAD_SPECIFY_BUSINESSINFO_DYNAMIC_GROUP",
      (data::NewActivityActionType *)(v1 + 2112));
    if ( *(_BYTE *)(((v1 + 2128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2128, "NEW_ACTIVITY_ACTION_UNLOAD_SPECIFY_BUSINESSINFO_DYNAMIC_GROUP");
    *(_DWORD *)(v1 + 2128) = 130;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7936),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_INSTABLE_SPRAY_STAGE",
      (data::NewActivityActionType *)(v1 + 2128));
    if ( *(_BYTE *)(((v1 + 2144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2144, "NEW_ACTIVITY_ACTION_OPEN_INSTABLE_SPRAY_STAGE");
    *(_DWORD *)(v1 + 2144) = 131;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[53],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 7976),
      (const char (*)[53])"NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_CAMP_STAGE",
      (data::NewActivityActionType *)(v1 + 2144));
    if ( *(_BYTE *)(((v1 + 2160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2160, "NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_CAMP_STAGE");
    *(_DWORD *)(v1 + 2160) = 132;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[54],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8016),
      (const char (*)[54])"NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_PHOTO_STAGE",
      (data::NewActivityActionType *)(v1 + 2160));
    if ( *(_BYTE *)(((v1 + 2176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2176, "NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_PHOTO_STAGE");
    *(_DWORD *)(v1 + 2176) = 133;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[53],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8056),
      (const char (*)[53])"NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_RACE_LEVEL",
      (data::NewActivityActionType *)(v1 + 2176));
    if ( *(_BYTE *)(((v1 + 2192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2192) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2192, "NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_RACE_LEVEL");
    *(_DWORD *)(v1 + 2192) = 134;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8096),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_MUQADAS_POTION_LEVEL",
      (data::NewActivityActionType *)(v1 + 2192));
    if ( *(_BYTE *)(((v1 + 2208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2208) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2208, "NEW_ACTIVITY_ACTION_OPEN_MUQADAS_POTION_LEVEL");
    *(_DWORD *)(v1 + 2208) = 135;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[54],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8136),
      (const char (*)[54])"NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_CARVE_STAGE",
      (data::NewActivityActionType *)(v1 + 2208));
    if ( *(_BYTE *)(((v1 + 2224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2224) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2224, "NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_CARVE_STAGE");
    *(_DWORD *)(v1 + 2224) = 136;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[48],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8176),
      (const char (*)[48])"NEW_ACTIVITY_ACTION_OPEN_TREASURE_SEELIE_REGION",
      (data::NewActivityActionType *)(v1 + 2224));
    if ( *(_BYTE *)(((v1 + 2240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2240) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2240, "NEW_ACTIVITY_ACTION_OPEN_TREASURE_SEELIE_REGION");
    *(_DWORD *)(v1 + 2240) = 137;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[51],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8216),
      (const char (*)[51])"NEW_ACTIVITY_ACTION_CLOSE_GRAVEN_INNOCENCE_CONTENT",
      (data::NewActivityActionType *)(v1 + 2240));
    if ( *(_BYTE *)(((v1 + 2256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2256) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2256, "NEW_ACTIVITY_ACTION_CLOSE_GRAVEN_INNOCENCE_CONTENT");
    *(_DWORD *)(v1 + 2256) = 138;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[42],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8256),
      (const char (*)[42])"NEW_ACTIVITY_ACTION_OPEN_WIND_FIELD_STAGE",
      (data::NewActivityActionType *)(v1 + 2256));
    if ( *(_BYTE *)(((v1 + 2272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2272) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2272, "NEW_ACTIVITY_ACTION_OPEN_WIND_FIELD_STAGE");
    *(_DWORD *)(v1 + 2272) = 139;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[50],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8296),
      (const char (*)[50])"NEW_ACTIVITY_ACTION_OPEN_ROCK_BOARD_EXPLORE_STAGE",
      (data::NewActivityActionType *)(v1 + 2272));
    if ( *(_BYTE *)(((v1 + 2288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2288) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2288, "NEW_ACTIVITY_ACTION_OPEN_ROCK_BOARD_EXPLORE_STAGE");
    *(_DWORD *)(v1 + 2288) = 140;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[47],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8336),
      (const char (*)[47])"NEW_ACTIVITY_ACTION_OPEN_VINTAGE_HUNTING_STAGE",
      (data::NewActivityActionType *)(v1 + 2288));
    if ( *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2304, "NEW_ACTIVITY_ACTION_OPEN_VINTAGE_HUNTING_STAGE");
    *(_DWORD *)(v1 + 2304) = 141;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[47],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8376),
      (const char (*)[47])"NEW_ACTIVITY_ACTION_OPEN_VINTAGE_PRESENT_STAGE",
      (data::NewActivityActionType *)(v1 + 2304));
    if ( *(_BYTE *)(((v1 + 2320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2320) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2320, "NEW_ACTIVITY_ACTION_OPEN_VINTAGE_PRESENT_STAGE");
    *(_DWORD *)(v1 + 2320) = 142;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8416),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_VINTAGE_CAMP_STAGE",
      (data::NewActivityActionType *)(v1 + 2320));
    if ( *(_BYTE *)(((v1 + 2336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2336) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2336, "NEW_ACTIVITY_ACTION_OPEN_VINTAGE_CAMP_STAGE");
    *(_DWORD *)(v1 + 2336) = 143;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8456),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_VINTAGE_OPEN_BOOTH",
      (data::NewActivityActionType *)(v1 + 2336));
    if ( *(_BYTE *)(((v1 + 2352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2352) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2352, "NEW_ACTIVITY_ACTION_OPEN_VINTAGE_OPEN_BOOTH");
    *(_DWORD *)(v1 + 2352) = 144;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[42],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8496),
      (const char (*)[42])"NEW_ACTIVITY_ACTION_CLOSE_VINTAGE_CONTENT",
      (data::NewActivityActionType *)(v1 + 2352));
    if ( *(_BYTE *)(((v1 + 2368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2368) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2368, "NEW_ACTIVITY_ACTION_CLOSE_VINTAGE_CONTENT");
    *(_DWORD *)(v1 + 2368) = 145;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[48],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8536),
      (const char (*)[48])"NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_CONTENT",
      (data::NewActivityActionType *)(v1 + 2368));
    if ( *(_BYTE *)(((v1 + 2384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2384) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2384, "NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_CONTENT");
    *(_DWORD *)(v1 + 2384) = 146;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8576),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_SHOP",
      (data::NewActivityActionType *)(v1 + 2384));
    if ( *(_BYTE *)(((v1 + 2400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2400) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2400, "NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_SHOP");
    *(_DWORD *)(v1 + 2400) = 147;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[49],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8616),
      (const char (*)[49])"NEW_ACTIVITY_ACTION_VINTAGE_CLOSE_MARKET_CONTENT",
      (data::NewActivityActionType *)(v1 + 2400));
    if ( *(_BYTE *)(((v1 + 2416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2416) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2416, "NEW_ACTIVITY_ACTION_VINTAGE_CLOSE_MARKET_CONTENT");
    *(_DWORD *)(v1 + 2416) = 148;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[53],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8656),
      (const char (*)[53])"NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_SHOP_CONTENT",
      (data::NewActivityActionType *)(v1 + 2416));
    if ( *(_BYTE *)(((v1 + 2432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2432) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2432, "NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_SHOP_CONTENT");
    *(_DWORD *)(v1 + 2432) = 149;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[58],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8696),
      (const char (*)[58])"NEW_ACTIVITY_ACTION_VINTAGE_INTERRUPT_MARKET_SHOP_CONTENT",
      (data::NewActivityActionType *)(v1 + 2432));
    if ( *(_BYTE *)(((v1 + 2448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2448) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2448, "NEW_ACTIVITY_ACTION_VINTAGE_INTERRUPT_MARKET_SHOP_CONTENT");
    *(_DWORD *)(v1 + 2448) = 150;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[55],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8736),
      (const char (*)[55])"NEW_ACTIVITY_ACTION_VINTAGE_FINISH_MARKET_SHOP_CONTENT",
      (data::NewActivityActionType *)(v1 + 2448));
    if ( *(_BYTE *)(((v1 + 2464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2464) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2464, "NEW_ACTIVITY_ACTION_VINTAGE_FINISH_MARKET_SHOP_CONTENT");
    *(_DWORD *)(v1 + 2464) = 151;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[50],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8776),
      (const char (*)[50])"NEW_ACTIVITY_ACTION_VINTAGE_FINISH_MARKET_CONTENT",
      (data::NewActivityActionType *)(v1 + 2464));
    if ( *(_BYTE *)(((v1 + 2480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2480) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2480, "NEW_ACTIVITY_ACTION_VINTAGE_FINISH_MARKET_CONTENT");
    *(_DWORD *)(v1 + 2480) = 152;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[56],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8816),
      (const char (*)[56])"NEW_ACTIVITY_ACTION_VINTAGE_SHOP_UNLOCK_STRATEGY_MODULE",
      (data::NewActivityActionType *)(v1 + 2480));
    if ( *(_BYTE *)(((v1 + 2496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2496) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2496, "NEW_ACTIVITY_ACTION_VINTAGE_SHOP_UNLOCK_STRATEGY_MODULE");
    *(_DWORD *)(v1 + 2496) = 153;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[52],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8856),
      (const char (*)[52])"NEW_ACTIVITY_ACTION_VINTAGE_SHOP_UNLOCK_HELP_MODULE",
      (data::NewActivityActionType *)(v1 + 2496));
    if ( *(_BYTE *)(((v1 + 2512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2512) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2512, "NEW_ACTIVITY_ACTION_VINTAGE_SHOP_UNLOCK_HELP_MODULE");
    *(_DWORD *)(v1 + 2512) = 154;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[49],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8896),
      (const char (*)[49])"NEW_ACTIVITY_ACTION_VINTAGE_SHOP_REFRESH_HELP_CD",
      (data::NewActivityActionType *)(v1 + 2512));
    if ( *(_BYTE *)(((v1 + 2528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2528) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2528, "NEW_ACTIVITY_ACTION_VINTAGE_SHOP_REFRESH_HELP_CD");
    *(_DWORD *)(v1 + 2528) = 155;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[52],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8936),
      (const char (*)[52])"NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_CAMP",
      (data::NewActivityActionType *)(v1 + 2528));
    if ( *(_BYTE *)(((v1 + 2544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2544) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2544, "NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_CAMP");
    *(_DWORD *)(v1 + 2544) = 156;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[57],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 8976),
      (const char (*)[57])"NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_CALTIVATE",
      (data::NewActivityActionType *)(v1 + 2544));
    if ( *(_BYTE *)(((v1 + 2560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2560) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2560, "NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_CALTIVATE");
    *(_DWORD *)(v1 + 2560) = 157;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[56],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9016),
      (const char (*)[56])"NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_TRAINING",
      (data::NewActivityActionType *)(v1 + 2560));
    if ( *(_BYTE *)(((v1 + 2576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2576) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2576, "NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_TRAINING");
    *(_DWORD *)(v1 + 2576) = 158;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[49],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9056),
      (const char (*)[49])"NEW_ACTIVITY_ACTION_CLOSE_FUNGUS_FIGHTER_CONTENT",
      (data::NewActivityActionType *)(v1 + 2576));
    if ( *(_BYTE *)(((v1 + 2592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2592) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2592, "NEW_ACTIVITY_ACTION_CLOSE_FUNGUS_FIGHTER_CONTENT");
    *(_DWORD *)(v1 + 2592) = 159;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[52],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9096),
      (const char (*)[52])"NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_PLOT",
      (data::NewActivityActionType *)(v1 + 2592));
    if ( *(_BYTE *)(((v1 + 2608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2608) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2608, "NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_PLOT");
    *(_DWORD *)(v1 + 2608) = 160;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[46],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9136),
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_CHAR_AMUSEMENT_STAGE",
      (data::NewActivityActionType *)(v1 + 2608));
    if ( *(_BYTE *)(((v1 + 2624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2624) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2624, "NEW_ACTIVITY_ACTION_OPEN_CHAR_AMUSEMENT_STAGE");
    *(_DWORD *)(v1 + 2624) = 161;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[51],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9176),
      (const char (*)[51])"NEW_ACTIVITY_ACTION_OPEN_EFFIGY_CHALLENGE_V2_STAGE",
      (data::NewActivityActionType *)(v1 + 2624));
    if ( *(_BYTE *)(((v1 + 2640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2640) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2640, "NEW_ACTIVITY_ACTION_OPEN_EFFIGY_CHALLENGE_V2_STAGE");
    *(_DWORD *)(v1 + 2640) = 162;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[41],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9216),
      (const char (*)[41])"NEW_ACTIVITY_ACTION_COMMON_CLOSE_CONTENT",
      (data::NewActivityActionType *)(v1 + 2640));
    if ( *(_BYTE *)(((v1 + 2656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2656) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2656, "NEW_ACTIVITY_ACTION_COMMON_CLOSE_CONTENT");
    *(_DWORD *)(v1 + 2656) = 163;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[44],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9256),
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_COIN_COLLECT_LEVEL",
      (data::NewActivityActionType *)(v1 + 2656));
    if ( *(_BYTE *)(((v1 + 2672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2672) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2672, "NEW_ACTIVITY_ACTION_OPEN_COIN_COLLECT_LEVEL");
    *(_DWORD *)(v1 + 2672) = 164;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[37],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9296),
      (const char (*)[37])"NEW_ACTIVITY_ACTION_BRICK_OPEN_STAGE",
      (data::NewActivityActionType *)(v1 + 2672));
    if ( *(_BYTE *)(((v1 + 2688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2688) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2688, "NEW_ACTIVITY_ACTION_BRICK_OPEN_STAGE");
    *(_DWORD *)(v1 + 2688) = 165;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[43],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9336),
      (const char (*)[43])"NEW_ACTIVITY_ACTION_BRICK_OPEN_STAGE_WORLD",
      (data::NewActivityActionType *)(v1 + 2688));
    if ( *(_BYTE *)(((v1 + 2704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2704) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2704, "NEW_ACTIVITY_ACTION_BRICK_OPEN_STAGE_WORLD");
    *(_DWORD *)(v1 + 2704) = 166;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[45],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9376),
      (const char (*)[45])"NEW_ACTIVITY_ACTION_BRICK_OPEN_STAGE_DUNGEON",
      (data::NewActivityActionType *)(v1 + 2704));
    if ( *(_BYTE *)(((v1 + 2720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2720) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2720, "NEW_ACTIVITY_ACTION_BRICK_OPEN_STAGE_DUNGEON");
    *(_DWORD *)(v1 + 2720) = 167;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[42],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9416),
      (const char (*)[42])"NEW_ACTIVITY_ACTION_OPERATE_SCENE_TAG_VEC",
      (data::NewActivityActionType *)(v1 + 2720));
    if ( *(_BYTE *)(((v1 + 2736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2736) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2736, "NEW_ACTIVITY_ACTION_OPERATE_SCENE_TAG_VEC");
    *(_DWORD *)(v1 + 2736) = 168;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[42],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9456),
      (const char (*)[42])"NEW_ACTIVITY_ACTION_DUEL_HEART_OPEN_LEVEL",
      (data::NewActivityActionType *)(v1 + 2736));
    if ( *(_BYTE *)(((v1 + 2752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2752) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2752, "NEW_ACTIVITY_ACTION_DUEL_HEART_OPEN_LEVEL");
    *(_DWORD *)(v1 + 2752) = 169;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[42],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9496),
      (const char (*)[42])"NEW_ACTIVITY_ACTION_TEAM_CHAIN_OPEN_STAGE",
      (data::NewActivityActionType *)(v1 + 2752));
    if ( *(_BYTE *)(((v1 + 2768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2768) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2768, "NEW_ACTIVITY_ACTION_TEAM_CHAIN_OPEN_STAGE");
    *(_DWORD *)(v1 + 2768) = 170;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[54],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9536),
      (const char (*)[54])"NEW_ACTIVITY_ACTION_ELECTROHERCULES_BATTLE_OPEN_LEVEL",
      (data::NewActivityActionType *)(v1 + 2768));
    if ( *(_BYTE *)(((v1 + 2784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2784) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2784, "NEW_ACTIVITY_ACTION_ELECTROHERCULES_BATTLE_OPEN_LEVEL");
    *(_DWORD *)(v1 + 2784) = 171;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[48],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9576),
      (const char (*)[48])"NEW_ACTIVITY_ACTION_OPEN_SEA_LAMP_V3_RACE_LEVEL",
      (data::NewActivityActionType *)(v1 + 2784));
    if ( *(_BYTE *)(((v1 + 2800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2800) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2800, "NEW_ACTIVITY_ACTION_OPEN_SEA_LAMP_V3_RACE_LEVEL");
    *(_DWORD *)(v1 + 2800) = 172;
    std::pair<std::string const,data::NewActivityActionType>::pair<char const(&)[50],data::NewActivityActionType,true>(
      (std::pair<const std::string,data::NewActivityActionType> *const)(v1 + 9616),
      (const char (*)[50])"NEW_ACTIVITY_ACTION_OPEN_SEA_LAMP_V3_SHADOW_STAGE",
      (data::NewActivityActionType *)(v1 + 2800));
    std::allocator<std::pair<std::string const,data::NewActivityActionType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityActionType> > *const)(v1 + 64));
    std::unordered_map<std::string,data::NewActivityActionType>::unordered_map(
      &data::getNewActivityActionTypeNameMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const std::string,data::NewActivityActionType> >)__PAIR128__(171LL, v1 + 2816),
      0LL,
      (const std::unordered_map<std::string,data::NewActivityActionType>::hasher *)(v1 + 32),
      (const std::unordered_map<std::string,data::NewActivityActionType>::key_equal *)(v1 + 48),
      (const std::unordered_map<std::string,data::NewActivityActionType>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityActionTypeNameMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityActionType>::~unordered_map,
      &data::getNewActivityActionTypeNameMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<std::string const,data::NewActivityActionType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityActionType> > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const std::string,data::NewActivityActionType> *)(v1 + 9656);
          i != (std::pair<const std::string,data::NewActivityActionType> *)(v1 + 2816);
          std::pair<std::string const,data::NewActivityActionType>::~pair(i) )
    {
      --i;
    }
  }
  if ( v6 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF84D0) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 1240) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_8(v1, 9920LL, v6);
  }
  return &data::getNewActivityActionTypeNameMap[abi:cxx11](void)::m;
};

// Line 1271: range 000000000EEB1D3B-000000000EEBE40A
const std::map<data::NewActivityActionType,std::pair<std::string,std::string >> *__cdecl data::getNewActivityActionTypeEnumMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *i; // r14
  _DWORD *v5; // rax
  _DWORD *v6; // rax
  _DWORD *v7; // rax
  _DWORD *v8; // rax
  _DWORD *v9; // rax
  _DWORD *v10; // rax
  _DWORD *v11; // rax
  _DWORD *v12; // rax
  _DWORD *v13; // rax
  _DWORD *v14; // rax
  _DWORD *v15; // rax
  _DWORD *v16; // rax
  _DWORD *v17; // rax
  _DWORD *v18; // rax
  _DWORD *v19; // rax
  _DWORD *v20; // rax
  _DWORD *v21; // rax
  _DWORD *v22; // rax
  _DWORD *v23; // rax
  _DWORD *v24; // rax
  _DWORD *v25; // rax
  _DWORD *v26; // rax
  _DWORD *v27; // rax
  _DWORD *v28; // rax
  _DWORD *v29; // rax
  _DWORD *v30; // rax
  _DWORD *v31; // rax
  _DWORD *v32; // rax
  _DWORD *v33; // rax
  _DWORD *v34; // rax
  _DWORD *v35; // rax
  _DWORD *v36; // rax
  _DWORD *v37; // rax
  _DWORD *v38; // rax
  _DWORD *v39; // rax
  _DWORD *v40; // rax
  _DWORD *v41; // rax
  _DWORD *v42; // rax
  _DWORD *v43; // rax
  _DWORD *v44; // rax
  _DWORD *v45; // rax
  _DWORD *v46; // rax
  _DWORD *v47; // rax
  _DWORD *v48; // rax
  _DWORD *v49; // rax
  _DWORD *v50; // rax
  _DWORD *v51; // rax
  _DWORD *v52; // rax
  _DWORD *v53; // rax
  _DWORD *v54; // rax
  _DWORD *v55; // rax
  _DWORD *v56; // rax
  _DWORD *v57; // rax
  _DWORD *v58; // rax
  _DWORD *v59; // rax
  _DWORD *v60; // rax
  _DWORD *v61; // rax
  _DWORD *v62; // rax
  _DWORD *v63; // rax
  _DWORD *v64; // rax
  _DWORD *v65; // rax
  _DWORD *v66; // rax
  _DWORD *v67; // rax
  _DWORD *v68; // rax
  _DWORD *v69; // rax
  _DWORD *v70; // rax
  _DWORD *v71; // rax
  _DWORD *v72; // rax
  _DWORD *v73; // rax
  _DWORD *v74; // rax
  _DWORD *v75; // rax
  _DWORD *v76; // rax
  _DWORD *v77; // rax
  _DWORD *v78; // rax
  _DWORD *v79; // rax
  _DWORD *v80; // rax
  _DWORD *v81; // rax
  _DWORD *v82; // rax
  _DWORD *v83; // rax
  _DWORD *v84; // rax
  _DWORD *v85; // rax
  _DWORD *v86; // rax
  _DWORD *v87; // rax
  _DWORD *v88; // rax
  _DWORD *v89; // rax
  _DWORD *v90; // rax
  _DWORD *v91; // rax
  _DWORD *v92; // rax
  _DWORD *v93; // rax
  _DWORD *v94; // rax
  _DWORD *v95; // rax
  _DWORD *v96; // rax
  _DWORD *v97; // rax
  _DWORD *v98; // rax
  _DWORD *v99; // rax
  _DWORD *v100; // rax
  _DWORD *v101; // rax
  _DWORD *v102; // rax
  _DWORD *v103; // rax
  _DWORD *v104; // rax
  _DWORD *v105; // rax
  _DWORD *v106; // rax
  _DWORD *v107; // rax
  _DWORD *v108; // rax
  _DWORD *v109; // rax
  _DWORD *v110; // rax
  _DWORD *v111; // rax
  _DWORD *v112; // rax
  _DWORD *v113; // rax
  _DWORD *v114; // rax
  _DWORD *v115; // rax
  _DWORD *v116; // rax
  _DWORD *v117; // rax
  _DWORD *v118; // rax
  _DWORD *v119; // rax
  _DWORD *v120; // rax
  _DWORD *v121; // rax
  _DWORD *v122; // rax
  _DWORD *v123; // rax
  _DWORD *v124; // rax
  _DWORD *v125; // rax
  _DWORD *v126; // rax
  _DWORD *v127; // rax
  _DWORD *v128; // rax
  _DWORD *v129; // rax
  _DWORD *v130; // rax
  _DWORD *v131; // rax
  _DWORD *v132; // rax
  _DWORD *v133; // rax
  _DWORD *v134; // rax
  _DWORD *v135; // rax
  _DWORD *v136; // rax
  _DWORD *v137; // rax
  _DWORD *v138; // rax
  _DWORD *v139; // rax
  _DWORD *v140; // rax
  _DWORD *v141; // rax
  _DWORD *v142; // rax
  _DWORD *v143; // rax
  _DWORD *v144; // rax
  _DWORD *v145; // rax
  _DWORD *v146; // rax
  _DWORD *v147; // rax
  _DWORD *v148; // rax
  _DWORD *v149; // rax
  _DWORD *v150; // rax
  _DWORD *v151; // rax
  _DWORD *v152; // rax
  _DWORD *v153; // rax
  _DWORD *v154; // rax
  _DWORD *v155; // rax
  _DWORD *v156; // rax
  _DWORD *v157; // rax
  _DWORD *v158; // rax
  _DWORD *v159; // rax
  _DWORD *v160; // rax
  _DWORD *v161; // rax
  _DWORD *v162; // rax
  _DWORD *v163; // rax
  _DWORD *v164; // rax
  _DWORD *v165; // rax
  _DWORD *v166; // rax
  _DWORD *v167; // rax
  _DWORD *v168; // rax
  _DWORD *v169; // rax
  _DWORD *v170; // rax
  _DWORD *v171; // rax
  _DWORD *v172; // rax
  _DWORD *v173; // rax
  _DWORD *v174; // rax
  char v176[31856]; // [rsp+10h] [rbp-7C70h] BYREF

  v1 = (unsigned __int64)v176;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_9(31808LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = a3454819Unknown;
  *(_QWORD *)(v1 + 16) = data::getNewActivityActionTypeEnumMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753551;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862724] = -234556924;
  v3[536862725] = -234556924;
  v3[536862726] = -234556924;
  v3[536862727] = -234556924;
  v3[536862728] = -234556924;
  v3[536862729] = -234556924;
  v3[536862730] = -234556924;
  v3[536862731] = -234556924;
  v3[536862732] = -234556924;
  v3[536862733] = -234556924;
  v3[536862734] = -234556924;
  v3[536862735] = -234556924;
  v3[536862736] = -234556924;
  v3[536862737] = -234556924;
  v3[536862738] = -234556924;
  v3[536862739] = -234556924;
  v3[536862740] = -234556924;
  v3[536862741] = -234556924;
  v3[536862742] = -234556924;
  v3[536862743] = -234556924;
  v3[536862744] = -234556924;
  v3[536862745] = -234556924;
  v3[536862746] = -234556924;
  v3[536862747] = -234556924;
  v3[536862748] = -234556924;
  v3[536862749] = -234556924;
  v3[536862750] = -234556924;
  v3[536862751] = -234556924;
  v3[536862752] = -234556924;
  v3[536862753] = -234556924;
  v3[536862754] = -234556924;
  v3[536862755] = -234556924;
  v3[536862756] = -234556924;
  v3[536862757] = -234556924;
  v3[536862758] = -234556924;
  v3[536862759] = -234556924;
  v3[536862760] = -234556924;
  v3[536862761] = -234556924;
  v3[536862762] = -234556924;
  v3[536862763] = -234556924;
  v3[536862764] = -234556924;
  v3[536862765] = -234556924;
  v3[536862766] = -234556924;
  v3[536862767] = -234556924;
  v3[536862768] = -234556924;
  v3[536862769] = -234556924;
  v3[536862770] = -234556924;
  v3[536862771] = -234556924;
  v3[536862772] = -234556924;
  v3[536862773] = -234556924;
  v3[536862774] = -234556924;
  v3[536862775] = -234556924;
  v3[536862776] = -234556924;
  v3[536862777] = -234556924;
  v3[536862778] = -234556924;
  v3[536862779] = -234556924;
  v3[536862780] = -234556924;
  v3[536862781] = -234556924;
  v3[536862782] = -234556924;
  v3[536862783] = -234556924;
  v3[536862784] = -234556924;
  v3[536862785] = -234556924;
  v3[536862786] = -234556924;
  v3[536862787] = -234556924;
  v3[536862788] = -234556924;
  v3[536862789] = -234556924;
  v3[536862790] = -234556924;
  v3[536862791] = -234556924;
  v3[536862792] = -234556924;
  v3[536862793] = -234556924;
  v3[536862794] = -234556924;
  v3[536862795] = -234556924;
  v3[536862796] = -234556924;
  v3[536862797] = -234556924;
  v3[536862798] = -234556924;
  v3[536862799] = -234556924;
  v3[536862800] = -234556924;
  v3[536862801] = -234556924;
  v3[536862802] = -234556924;
  v3[536862803] = -234556924;
  v3[536862804] = -234556924;
  v3[536862805] = -234556924;
  v3[536862806] = -234556924;
  v3[536862807] = -234556924;
  v3[536862810] = -218959118;
  v3[536862813] = -218959118;
  v3[536862816] = -218959118;
  v3[536862819] = -218959118;
  v3[536862822] = -218959118;
  v3[536862825] = -218959118;
  v3[536862828] = -218959118;
  v3[536862831] = -218959118;
  v3[536862834] = -218959118;
  v3[536862837] = -218959118;
  v3[536862840] = -218959118;
  v3[536862843] = -218959118;
  v3[536862846] = -218959118;
  v3[536862849] = -218959118;
  v3[536862852] = -218959118;
  v3[536862855] = -218959118;
  v3[536862858] = -218959118;
  v3[536862861] = -218959118;
  v3[536862864] = -218959118;
  v3[536862867] = -218959118;
  v3[536862870] = -218959118;
  v3[536862873] = -218959118;
  v3[536862876] = -218959118;
  v3[536862879] = -218959118;
  v3[536862882] = -218959118;
  v3[536862885] = -218959118;
  v3[536862888] = -218959118;
  v3[536862891] = -218959118;
  v3[536862894] = -218959118;
  v3[536862897] = -218959118;
  v3[536862900] = -218959118;
  v3[536862903] = -218959118;
  v3[536862906] = -218959118;
  v3[536862909] = -218959118;
  v3[536862912] = -218959118;
  v3[536862915] = -218959118;
  v3[536862918] = -218959118;
  v3[536862921] = -218959118;
  v3[536862924] = -218959118;
  v3[536862927] = -218959118;
  v3[536862930] = -218959118;
  v3[536862933] = -218959118;
  v3[536862936] = -218959118;
  v3[536862939] = -218959118;
  v3[536862942] = -218959118;
  v3[536862945] = -218959118;
  v3[536862948] = -218959118;
  v3[536862951] = -218959118;
  v3[536862954] = -218959118;
  v3[536862957] = -218959118;
  v3[536862960] = -218959118;
  v3[536862963] = -218959118;
  v3[536862966] = -218959118;
  v3[536862969] = -218959118;
  v3[536862972] = -218959118;
  v3[536862975] = -218959118;
  v3[536862978] = -218959118;
  v3[536862981] = -218959118;
  v3[536862984] = -218959118;
  v3[536862987] = -218959118;
  v3[536862990] = -218959118;
  v3[536862993] = -218959118;
  v3[536862996] = -218959118;
  v3[536862999] = -218959118;
  v3[536863002] = -218959118;
  v3[536863005] = -218959118;
  v3[536863008] = -218959118;
  v3[536863011] = -218959118;
  v3[536863014] = -218959118;
  v3[536863017] = -218959118;
  v3[536863020] = -218959118;
  v3[536863023] = -218959118;
  v3[536863026] = -218959118;
  v3[536863029] = -218959118;
  v3[536863032] = -218959118;
  v3[536863035] = -218959118;
  v3[536863038] = -218959118;
  v3[536863041] = -218959118;
  v3[536863044] = -218959118;
  v3[536863047] = -218959118;
  v3[536863050] = -218959118;
  v3[536863053] = -218959118;
  v3[536863056] = -218959118;
  v3[536863059] = -218959118;
  v3[536863062] = -218959118;
  v3[536863065] = -218959118;
  v3[536863068] = -218959118;
  v3[536863071] = -218959118;
  v3[536863074] = -218959118;
  v3[536863077] = -218959118;
  v3[536863080] = -218959118;
  v3[536863083] = -218959118;
  v3[536863086] = -218959118;
  v3[536863089] = -218959118;
  v3[536863092] = -218959118;
  v3[536863095] = -218959118;
  v3[536863098] = -218959118;
  v3[536863101] = -218959118;
  v3[536863104] = -218959118;
  v3[536863107] = -218959118;
  v3[536863110] = -218959118;
  v3[536863113] = -218959118;
  v3[536863116] = -218959118;
  v3[536863119] = -218959118;
  v3[536863122] = -218959118;
  v3[536863125] = -218959118;
  v3[536863128] = -218959118;
  v3[536863131] = -218959118;
  v3[536863134] = -218959118;
  v3[536863137] = -218959118;
  v3[536863140] = -218959118;
  v3[536863143] = -218959118;
  v3[536863146] = -218959118;
  v3[536863149] = -218959118;
  v3[536863152] = -218959118;
  v3[536863155] = -218959118;
  v3[536863158] = -218959118;
  v3[536863161] = -218959118;
  v3[536863164] = -218959118;
  v3[536863167] = -218959118;
  v3[536863170] = -218959118;
  v3[536863173] = -218959118;
  v3[536863176] = -218959118;
  v3[536863179] = -218959118;
  v3[536863182] = -218959118;
  v3[536863185] = -218959118;
  v3[536863188] = -218959118;
  v3[536863191] = -218959118;
  v3[536863194] = -218959118;
  v3[536863197] = -218959118;
  v3[536863200] = -218959118;
  v3[536863203] = -218959118;
  v3[536863206] = -218959118;
  v3[536863209] = -218959118;
  v3[536863212] = -218959118;
  v3[536863215] = -218959118;
  v3[536863218] = -218959118;
  v3[536863221] = -218959118;
  v3[536863224] = -218959118;
  v3[536863227] = -218959118;
  v3[536863230] = -218959118;
  v3[536863233] = -218959118;
  v3[536863236] = -218959118;
  v3[536863239] = -218959118;
  v3[536863242] = -218959118;
  v3[536863245] = -218959118;
  v3[536863248] = -218959118;
  v3[536863251] = -218959118;
  v3[536863254] = -218959118;
  v3[536863257] = -218959118;
  v3[536863260] = -218959118;
  v3[536863263] = -218959118;
  v3[536863266] = -218959118;
  v3[536863269] = -218959118;
  v3[536863272] = -218959118;
  v3[536863275] = -218959118;
  v3[536863278] = -218959118;
  v3[536863281] = -218959118;
  v3[536863284] = -218959118;
  v3[536863287] = -218959118;
  v3[536863290] = -218959118;
  v3[536863293] = -218959118;
  v3[536863296] = -218959118;
  v3[536863299] = -218959118;
  v3[536863302] = -218959118;
  v3[536863305] = -218959118;
  v3[536863308] = -218959118;
  v3[536863311] = -218959118;
  v3[536863314] = -218959118;
  v3[536863317] = -218959118;
  v3[536863320] = -218959118;
  v3[536863705] = -218103808;
  v3[536863706] = -202116109;
  v3[536863707] = -202116109;
  v3[536863708] = -202116109;
  v3[536863709] = -202116109;
  v3[536863710] = -202116109;
  v3[536863711] = -202116109;
  v3[536863712] = -202116109;
  v3[536863713] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityActionTypeEnumMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityActionTypeEnumMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string,std::string>::pair<char const(&)[1],char const(&)[25],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2816),
      (const char (*)[1])byte_1A3FEBE0,
      (const char (*)[25])"NEW_ACTIVITY_ACTION_NONE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19232),
      (data::NewActivityActionType *)(v1 + 80),
      (const std::pair<std::string,std::string > *)(v1 + 2816));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, v1 + 80);
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 2912),
      (const char (*)[16])byte_1A446540,
      (const char (*)[33])"NEW_ACTIVITY_ACTION_UNLOCK_POINT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19304),
      (data::NewActivityActionType *)(v1 + 96),
      (const std::pair<std::string,std::string > *)(v1 + 2912));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, v1 + 96);
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[31],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3008),
      (const char (*)[16])byte_1A446580,
      (const char (*)[31])"NEW_ACTIVITY_ACTION_LOCK_POINT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19376),
      (data::NewActivityActionType *)(v1 + 112),
      (const std::pair<std::string,std::string > *)(v1 + 3008));
    if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 128, v1 + 112);
    *(_DWORD *)(v1 + 128) = 3;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3104),
      (const char (*)[13])byte_1A4465C0,
      (const char (*)[33])"NEW_ACTIVITY_ACTION_ACCEPT_QUEST");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19448),
      (data::NewActivityActionType *)(v1 + 128),
      (const std::pair<std::string,std::string > *)(v1 + 3104));
    if ( *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 144, v1 + 128);
    *(_DWORD *)(v1 + 144) = 4;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3200),
      (const char (*)[13])byte_1A446600,
      (const char (*)[33])"NEW_ACTIVITY_ACTION_CANCEL_QUEST");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19520),
      (data::NewActivityActionType *)(v1 + 144),
      (const std::pair<std::string,std::string > *)(v1 + 3200));
    if ( *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 160, v1 + 144);
    *(_DWORD *)(v1 + 160) = 5;
    std::pair<std::string,std::string>::pair<char const(&)[12],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3296),
      (const char (*)[12])byte_1A446640,
      (const char (*)[33])"NEW_ACTIVITY_ACTION_FORBID_GROUP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19592),
      (data::NewActivityActionType *)(v1 + 160),
      (const std::pair<std::string,std::string > *)(v1 + 3296));
    if ( *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 176, v1 + 160);
    *(_DWORD *)(v1 + 176) = 6;
    std::pair<std::string,std::string>::pair<char const(&)[12],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3392),
      (const char (*)[12])byte_1A446680,
      (const char (*)[33])"NEW_ACTIVITY_ACTION_ACTIVE_GROUP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19664),
      (data::NewActivityActionType *)(v1 + 176),
      (const std::pair<std::string,std::string > *)(v1 + 3392));
    if ( *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 192, v1 + 176);
    *(_DWORD *)(v1 + 192) = 7;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[33],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3488),
      (const char (*)[19])byte_1A4466C0,
      (const char (*)[33])"NEW_ACTIVITY_ACTION_OPEN_MP_PLAY");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19736),
      (data::NewActivityActionType *)(v1 + 192),
      (const std::pair<std::string,std::string > *)(v1 + 3488));
    if ( *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 208, v1 + 192);
    *(_DWORD *)(v1 + 208) = 8;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[34],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3584),
      (const char (*)[19])byte_1A446700,
      (const char (*)[34])"NEW_ACTIVITY_ACTION_CLOSE_MP_PLAY");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19808),
      (data::NewActivityActionType *)(v1 + 208),
      (const std::pair<std::string,std::string > *)(v1 + 3584));
    if ( *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 224, v1 + 208);
    *(_DWORD *)(v1 + 224) = 9;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3680),
      (const char (*)[19])byte_1A446740,
      (const char (*)[37])"NEW_ACTIVITY_ACTION_OPEN_ASTER_PHASE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19880),
      (data::NewActivityActionType *)(v1 + 224),
      (const std::pair<std::string,std::string > *)(v1 + 3680));
    if ( *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 240, v1 + 224);
    *(_DWORD *)(v1 + 240) = 10;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3776),
      (const char (*)[13])byte_1A446780,
      (const char (*)[43])"NEW_ACTIVITY_ACTION_ACTIVATE_SCENE_MP_PLAY");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 19952),
      (data::NewActivityActionType *)(v1 + 240),
      (const std::pair<std::string,std::string > *)(v1 + 3776));
    if ( *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 256, v1 + 240);
    *(_DWORD *)(v1 + 256) = 11;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3872),
      (const char (*)[13])byte_1A4467C0,
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_SCENE_MP_PLAY");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20024),
      (data::NewActivityActionType *)(v1 + 256),
      (const std::pair<std::string,std::string > *)(v1 + 3872));
    if ( *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 272, v1 + 256);
    *(_DWORD *)(v1 + 272) = 12;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 3968),
      (const char (*)[13])byte_1A446800,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_SCENE_MP_PLAY");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20096),
      (data::NewActivityActionType *)(v1 + 272),
      (const std::pair<std::string,std::string > *)(v1 + 3968));
    if ( *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 288, v1 + 272);
    *(_DWORD *)(v1 + 288) = 13;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4064),
      (const char (*)[19])byte_1A446840,
      (const char (*)[38])"NEW_ACTIVITY_ACTION_CLOSE_ASTER_PHASE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20168),
      (data::NewActivityActionType *)(v1 + 288),
      (const std::pair<std::string,std::string > *)(v1 + 4064));
    if ( *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 304, v1 + 288);
    *(_DWORD *)(v1 + 304) = 14;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4160),
      (const char (*)[25])byte_1A446880,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_ASTER_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20240),
      (data::NewActivityActionType *)(v1 + 304),
      (const std::pair<std::string,std::string > *)(v1 + 4160));
    if ( *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 320, v1 + 304);
    *(_DWORD *)(v1 + 320) = 15;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4256),
      (const char (*)[19])byte_1A4468C0,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_DRAGON_SPINE_PHASE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20312),
      (data::NewActivityActionType *)(v1 + 320),
      (const std::pair<std::string,std::string > *)(v1 + 4256));
    if ( *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 336, v1 + 320);
    *(_DWORD *)(v1 + 336) = 16;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[47],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4352),
      (const char (*)[25])byte_1A446900,
      (const char (*)[47])"NEW_ACTIVITY_ACTION_CLOSE_DRAGON_SPINE_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20384),
      (data::NewActivityActionType *)(v1 + 336),
      (const std::pair<std::string,std::string > *)(v1 + 4352));
    if ( *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 352, v1 + 336);
    *(_DWORD *)(v1 + 352) = 17;
    std::pair<std::string,std::string>::pair<char const(&)[18],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4448),
      (const char (*)[18])byte_1A446940,
      (const char (*)[39])"NEW_ACTIVITY_ACTION_LOAD_DYNAMIC_GROUP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20456),
      (data::NewActivityActionType *)(v1 + 352),
      (const std::pair<std::string,std::string > *)(v1 + 4448));
    if ( *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 368, v1 + 352);
    *(_DWORD *)(v1 + 368) = 18;
    std::pair<std::string,std::string>::pair<char const(&)[18],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4544),
      (const char (*)[18])byte_1A446980,
      (const char (*)[41])"NEW_ACTIVITY_ACTION_UNLOAD_DYNAMIC_GROUP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20528),
      (data::NewActivityActionType *)(v1 + 368),
      (const std::pair<std::string,std::string > *)(v1 + 4544));
    if ( *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 384, v1 + 368);
    *(_DWORD *)(v1 + 384) = 19;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[34],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4640),
      (const char (*)[19])byte_1A4469C0,
      (const char (*)[34])"NEW_ACTIVITY_ACTION_ACTIVATE_SALE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20600),
      (data::NewActivityActionType *)(v1 + 384),
      (const std::pair<std::string,std::string > *)(v1 + 4640));
    if ( *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 400, v1 + 384);
    *(_DWORD *)(v1 + 400) = 20;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[36],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4736),
      (const char (*)[19])byte_1A446A00,
      (const char (*)[36])"NEW_ACTIVITY_ACTION_DEACTIVATE_SALE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20672),
      (data::NewActivityActionType *)(v1 + 400),
      (const std::pair<std::string,std::string > *)(v1 + 4736));
    if ( *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 416, v1 + 400);
    *(_DWORD *)(v1 + 416) = 21;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4832),
      (const char (*)[22])byte_1A446A40,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_SEA_LAMP_OPEN_PHASE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20744),
      (data::NewActivityActionType *)(v1 + 416),
      (const std::pair<std::string,std::string > *)(v1 + 4832));
    if ( *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 432, v1 + 416);
    *(_DWORD *)(v1 + 432) = 22;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[35],true>(
      (std::pair<std::string,std::string > *const)(v1 + 4928),
      (const char (*)[22])byte_1A446A80,
      (const char (*)[35])"NEW_ACTIVITY_ACTION_SEA_LAMP_CLOSE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20816),
      (data::NewActivityActionType *)(v1 + 432),
      (const std::pair<std::string,std::string > *)(v1 + 4928));
    if ( *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 448, v1 + 432);
    *(_DWORD *)(v1 + 448) = 25;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5024),
      (const char (*)[28])byte_1A446AC0,
      (const char (*)[38])"NEW_ACTIVITY_ACTION_ACTIVATE_BLESSING");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20888),
      (data::NewActivityActionType *)(v1 + 448),
      (const std::pair<std::string,std::string > *)(v1 + 5024));
    if ( *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 464, v1 + 448);
    *(_DWORD *)(v1 + 464) = 26;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5120),
      (const char (*)[28])byte_1A446B00,
      (const char (*)[43])"NEW_ACTIVITY_ACTION_CLOSE_BLESSING_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 20960),
      (data::NewActivityActionType *)(v1 + 464),
      (const std::pair<std::string,std::string > *)(v1 + 5120));
    if ( *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 480, v1 + 464);
    *(_DWORD *)(v1 + 480) = 27;
    std::pair<std::string,std::string>::pair<char const(&)[17],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5216),
      (const char (*)[17])byte_1A446B40,
      (const char (*)[40])"NEW_ACTIVIYT_ACTION_REFRESH_GROUP_SUITE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21032),
      (data::NewActivityActionType *)(v1 + 480),
      (const std::pair<std::string,std::string > *)(v1 + 5216));
    if ( *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 496, v1 + 480);
    *(_DWORD *)(v1 + 496) = 28;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[36],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5312),
      (const char (*)[22])byte_1A446B80,
      (const char (*)[36])"NEW_ACTIVITY_ACTION_OPEN_MECHANICUS");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21104),
      (data::NewActivityActionType *)(v1 + 496),
      (const std::pair<std::string,std::string > *)(v1 + 5312));
    if ( *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 512, v1 + 496);
    *(_DWORD *)(v1 + 512) = 29;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5408),
      (const char (*)[22])byte_1A446BC0,
      (const char (*)[37])"NEW_ACTIVITY_ACTION_CLOSE_MECHANICUS");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21176),
      (data::NewActivityActionType *)(v1 + 512),
      (const std::pair<std::string,std::string > *)(v1 + 5408));
    if ( *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 528, v1 + 512);
    *(_DWORD *)(v1 + 528) = 30;
    std::pair<std::string,std::string>::pair<char const(&)[30],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5504),
      (const char (*)[30])byte_1A446C00,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_OPEN_MECHANICUS_SEQUENCE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21248),
      (data::NewActivityActionType *)(v1 + 528),
      (const std::pair<std::string,std::string > *)(v1 + 5504));
    if ( *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 544, v1 + 528);
    *(_DWORD *)(v1 + 544) = 31;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5600),
      (const char (*)[31])byte_1A446C40,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_CLOSE_EXPEDITION_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21320),
      (data::NewActivityActionType *)(v1 + 544),
      (const std::pair<std::string,std::string > *)(v1 + 5600));
    if ( *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 560, v1 + 544);
    *(_DWORD *)(v1 + 560) = 32;
    std::pair<std::string,std::string>::pair<char const(&)[24],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5696),
      (const char (*)[24])byte_1A446C80,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_FLEUR_FAIR_OPEN_MINIGAME");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21392),
      (data::NewActivityActionType *)(v1 + 560),
      (const std::pair<std::string,std::string > *)(v1 + 5696));
    if ( *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 576, v1 + 560);
    *(_DWORD *)(v1 + 576) = 33;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5792),
      (const char (*)[28])byte_1A446CC0,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_CLOSE_FLEUR_FAIR_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21464),
      (data::NewActivityActionType *)(v1 + 576),
      (const std::pair<std::string,std::string > *)(v1 + 5792));
    if ( *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 592, v1 + 576);
    *(_DWORD *)(v1 + 592) = 34;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[52],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5888),
      (const char (*)[28])byte_1A446D00,
      (const char (*)[52])"NEW_ACTIVITY_ACTION_FLEUR_FAIR_OPEN_DUNGEON_SECTION");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21536),
      (data::NewActivityActionType *)(v1 + 592),
      (const std::pair<std::string,std::string > *)(v1 + 5888));
    if ( *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 608, v1 + 592);
    *(_DWORD *)(v1 + 608) = 35;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 5984),
      (const char (*)[19])byte_1A446D40,
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_REGION_SEARCH");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21608),
      (data::NewActivityActionType *)(v1 + 608),
      (const std::pair<std::string,std::string > *)(v1 + 5984));
    if ( *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 624, v1 + 608);
    *(_DWORD *)(v1 + 624) = 36;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6080),
      (const char (*)[19])byte_1A446D80,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_REGION_SEARCH");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21680),
      (data::NewActivityActionType *)(v1 + 624),
      (const std::pair<std::string,std::string > *)(v1 + 6080));
    if ( *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 640, v1 + 624);
    *(_DWORD *)(v1 + 640) = 37;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6176),
      (const char (*)[22])byte_1A446DC0,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_UNLOCK_FLEUR_FAIR_DUNGEON");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21752),
      (data::NewActivityActionType *)(v1 + 640),
      (const std::pair<std::string,std::string > *)(v1 + 6176));
    if ( *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 656, v1 + 640);
    *(_DWORD *)(v1 + 656) = 38;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6272),
      (const char (*)[19])byte_1A446E00,
      (const char (*)[38])"NEW_ACTIVITY_ACTION_OPEN_WEATHER_AREA");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21824),
      (data::NewActivityActionType *)(v1 + 656),
      (const std::pair<std::string,std::string > *)(v1 + 6272));
    if ( *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 672, v1 + 656);
    *(_DWORD *)(v1 + 672) = 39;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6368),
      (const char (*)[19])byte_1A446E40,
      (const char (*)[39])"NEW_ACTIVITY_ACTION_CLOSE_WEATHER_AREA");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21896),
      (data::NewActivityActionType *)(v1 + 672),
      (const std::pair<std::string,std::string > *)(v1 + 6368));
    if ( *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 688, v1 + 672);
    *(_DWORD *)(v1 + 688) = 40;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[36],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6464),
      (const char (*)[25])byte_1A446E80,
      (const char (*)[36])"NEW_ACTIVITY_ACTION_SET_SCORE_LIMIT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 21968),
      (data::NewActivityActionType *)(v1 + 688),
      (const std::pair<std::string,std::string > *)(v1 + 6464));
    if ( *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 704, v1 + 688);
    *(_DWORD *)(v1 + 704) = 41;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[47],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6560),
      (const char (*)[25])byte_1A446EC0,
      (const char (*)[47])"NEW_ACTIVITY_ACTION_OPEN_CHANNELLER_SLAB_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22040),
      (data::NewActivityActionType *)(v1 + 704),
      (const std::pair<std::string,std::string > *)(v1 + 6560));
    if ( *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 720, v1 + 704);
    *(_DWORD *)(v1 + 720) = 42;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6656),
      (const char (*)[25])byte_1A446F00,
      (const char (*)[48])"NEW_ACTIVITY_ACTION_CLOSE_CHANNELLER_SLAB_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22112),
      (data::NewActivityActionType *)(v1 + 720),
      (const std::pair<std::string,std::string > *)(v1 + 6656));
    if ( *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 736, v1 + 720);
    *(_DWORD *)(v1 + 736) = 43;
    std::pair<std::string,std::string>::pair<char const(&)[40],char const(&)[47],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6752),
      (const char (*)[40])byte_1A446F40,
      (const char (*)[47])"NEW_ACTIVITY_ACTION_CLOSE_FIND_HILICHURL_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22184),
      (data::NewActivityActionType *)(v1 + 736),
      (const std::pair<std::string,std::string > *)(v1 + 6752));
    if ( *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 752, v1 + 736);
    *(_DWORD *)(v1 + 752) = 44;
    std::pair<std::string,std::string>::pair<char const(&)[24],char const(&)[53],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6848),
      (const char (*)[24])byte_1A446FA0,
      (const char (*)[53])"NEW_ACTIVITY_ACTION_REGISTER_GAME_TIME_DYNAMIC_GROUP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22256),
      (data::NewActivityActionType *)(v1 + 752),
      (const std::pair<std::string,std::string > *)(v1 + 6848));
    if ( *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 768, v1 + 752);
    *(_DWORD *)(v1 + 768) = 45;
    std::pair<std::string,std::string>::pair<char const(&)[24],char const(&)[55],true>(
      (std::pair<std::string,std::string > *const)(v1 + 6944),
      (const char (*)[24])byte_1A446FE0,
      (const char (*)[55])"NEW_ACTIVITY_ACTION_UNREGISTER_GAME_TIME_DYNAMIC_GROUP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22328),
      (data::NewActivityActionType *)(v1 + 768),
      (const std::pair<std::string,std::string > *)(v1 + 6944));
    if ( *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 784, v1 + 768);
    *(_DWORD *)(v1 + 784) = 46;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[54],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7040),
      (const char (*)[25])byte_1A447020,
      (const char (*)[54])"NEW_ACTIVITY_ACTION_OPEN_MIST_TRIAL_DUNGEON_CHALLENGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22400),
      (data::NewActivityActionType *)(v1 + 784),
      (const std::pair<std::string,std::string > *)(v1 + 7040));
    if ( *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 800, v1 + 784);
    *(_DWORD *)(v1 + 800) = 47;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[30],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7136),
      (const char (*)[13])byte_1A447060,
      (const char (*)[30])"NEW_ACTIVITY_ACTION_SEND_MAIL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22472),
      (data::NewActivityActionType *)(v1 + 800),
      (const std::pair<std::string,std::string > *)(v1 + 7136));
    if ( *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 816, v1 + 800);
    *(_DWORD *)(v1 + 816) = 48;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[60],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7232),
      (const char (*)[37])byte_1A4470A0,
      (const char (*)[60])"NEW_ACTIVITY_ACTION_OPEN_CHANNELLER_SLAB_LOOP_DUNGEON_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22544),
      (data::NewActivityActionType *)(v1 + 816),
      (const std::pair<std::string,std::string > *)(v1 + 7232));
    if ( *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 832, v1 + 816);
    *(_DWORD *)(v1 + 832) = 49;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[61],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7328),
      (const char (*)[37])byte_1A447100,
      (const char (*)[61])"NEW_ACTIVITY_ACTION_CLOSE_CHANNELLER_SLAB_LOOP_DUNGEON_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22616),
      (data::NewActivityActionType *)(v1 + 832),
      (const std::pair<std::string,std::string > *)(v1 + 7328));
    if ( *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 848, v1 + 832);
    *(_DWORD *)(v1 + 848) = 50;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[54],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7424),
      (const char (*)[31])byte_1A447160,
      (const char (*)[54])"NEW_ACTIVITY_ACTION_OPEN_CHANNELLER_SLAB_LOOP_DUNGEON");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22688),
      (data::NewActivityActionType *)(v1 + 848),
      (const std::pair<std::string,std::string > *)(v1 + 7424));
    if ( *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 864, v1 + 848);
    *(_DWORD *)(v1 + 864) = 51;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7520),
      (const char (*)[22])byte_1A4471A0,
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_HIDE_AND_SEEK");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22760),
      (data::NewActivityActionType *)(v1 + 864),
      (const std::pair<std::string,std::string > *)(v1 + 7520));
    if ( *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 880, v1 + 864);
    *(_DWORD *)(v1 + 880) = 52;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7616),
      (const char (*)[22])byte_1A4471E0,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_HIDE_AND_SEEK");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22832),
      (data::NewActivityActionType *)(v1 + 880),
      (const std::pair<std::string,std::string > *)(v1 + 7616));
    if ( *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 896, v1 + 880);
    *(_DWORD *)(v1 + 896) = 53;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7712),
      (const char (*)[22])byte_1A447220,
      (const char (*)[43])"NEW_ACTIVITY_ACTION_OPEN_SUMMER_TIME_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22904),
      (data::NewActivityActionType *)(v1 + 896),
      (const std::pair<std::string,std::string > *)(v1 + 7712));
    if ( *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 912, v1 + 896);
    *(_DWORD *)(v1 + 912) = 54;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7808),
      (const char (*)[28])byte_1A447260,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_CLOSE_SUMMER_TIME_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 22976),
      (data::NewActivityActionType *)(v1 + 912),
      (const std::pair<std::string,std::string > *)(v1 + 7808));
    if ( *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 928, v1 + 912);
    *(_DWORD *)(v1 + 928) = 55;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 7904),
      (const char (*)[31])byte_1A4472A0,
      (const char (*)[48])"NEW_ACTIVITY_ACTION_OPEN_BOUNCE_CONJURING_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23048),
      (data::NewActivityActionType *)(v1 + 928),
      (const std::pair<std::string,std::string > *)(v1 + 7904));
    if ( *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 944, v1 + 928);
    *(_DWORD *)(v1 + 944) = 56;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8000),
      (const char (*)[37])byte_1A4472E0,
      (const char (*)[51])"NEW_ACTIVITY_ACTION_CLOSE_BOUNCE_CONJURING_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23120),
      (data::NewActivityActionType *)(v1 + 944),
      (const std::pair<std::string,std::string > *)(v1 + 8000));
    if ( *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 960, v1 + 944);
    *(_DWORD *)(v1 + 960) = 57;
    std::pair<std::string,std::string>::pair<char const(&)[15],char const(&)[34],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8096),
      (const char (*)[15])byte_1A447340,
      (const char (*)[34])"NEW_ACTIVITY_ACTION_ADD_SCENE_TAG");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23192),
      (data::NewActivityActionType *)(v1 + 960),
      (const std::pair<std::string,std::string > *)(v1 + 8096));
    if ( *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 976, v1 + 960);
    *(_DWORD *)(v1 + 976) = 58;
    std::pair<std::string,std::string>::pair<char const(&)[15],char const(&)[34],true>(
      (std::pair<std::string,std::string > *const)(v1 + 0x2000),
      (const char (*)[15])byte_1A447380,
      (const char (*)[34])"NEW_ACTIVITY_ACTION_DEL_SCENE_TAG");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23264),
      (data::NewActivityActionType *)(v1 + 976),
      (const std::pair<std::string,std::string > *)(v1 + 0x2000));
    if ( *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 992, v1 + 976);
    *(_DWORD *)(v1 + 992) = 59;
    std::pair<std::string,std::string>::pair<char const(&)[29],char const(&)[49],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8288),
      (const char (*)[29])byte_1A4473C0,
      (const char (*)[49])"NEW_ACTIVITY_ACTION_MODIFY_ACTIVITY_COND_DEFAULT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23336),
      (data::NewActivityActionType *)(v1 + 992),
      (const std::pair<std::string,std::string > *)(v1 + 8288));
    if ( *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1008, v1 + 992);
    *(_DWORD *)(v1 + 1008) = 60;
    std::pair<std::string,std::string>::pair<char const(&)[17],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8384),
      (const char (*)[17])byte_1A447400,
      (const char (*)[37])"NEW_ACTIVITY_ACTION_HIDE_SCENE_POINT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23408),
      (data::NewActivityActionType *)(v1 + 1008),
      (const std::pair<std::string,std::string > *)(v1 + 8384));
    if ( *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1024, v1 + 1008);
    *(_DWORD *)(v1 + 1024) = 61;
    std::pair<std::string,std::string>::pair<char const(&)[23],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8480),
      (const char (*)[23])byte_1A447440,
      (const char (*)[37])"NEW_ACTIVITY_ACTION_SHOW_SCENE_POINT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23480),
      (data::NewActivityActionType *)(v1 + 1024),
      (const std::pair<std::string,std::string > *)(v1 + 8480));
    if ( *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1040, v1 + 1024);
    *(_DWORD *)(v1 + 1040) = 62;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8576),
      (const char (*)[31])byte_1A447480,
      (const char (*)[42])"NEW_ACTIVITY_ACTION_OPEN_BLITZ_RUSH_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23552),
      (data::NewActivityActionType *)(v1 + 1040),
      (const std::pair<std::string,std::string > *)(v1 + 8576));
    if ( *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1056, v1 + 1040);
    *(_DWORD *)(v1 + 1056) = 63;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8672),
      (const char (*)[31])byte_1A4474C0,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_CLOSE_BLITZ_RUSH_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23624),
      (data::NewActivityActionType *)(v1 + 1056),
      (const std::pair<std::string,std::string > *)(v1 + 8672));
    if ( *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1072, v1 + 1056);
    *(_DWORD *)(v1 + 1072) = 64;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8768),
      (const char (*)[22])byte_1A447500,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_LOCK_PLAYER_WORLD_SCENE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23696),
      (data::NewActivityActionType *)(v1 + 1072),
      (const std::pair<std::string,std::string > *)(v1 + 8768));
    if ( *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1088, v1 + 1072);
    *(_DWORD *)(v1 + 1088) = 65;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8864),
      (const char (*)[22])byte_1A447540,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_UNLOCK_PLAYER_WORLD_SCENE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23768),
      (data::NewActivityActionType *)(v1 + 1088),
      (const std::pair<std::string,std::string > *)(v1 + 8864));
    if ( *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1104, v1 + 1088);
    *(_DWORD *)(v1 + 1104) = 66;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[35],true>(
      (std::pair<std::string,std::string > *const)(v1 + 8960),
      (const char (*)[25])byte_1A447580,
      (const char (*)[35])"NEW_ACTIVITY_ACTION_CLOSE_SEA_MIST");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23840),
      (data::NewActivityActionType *)(v1 + 1104),
      (const std::pair<std::string,std::string > *)(v1 + 8960));
    if ( *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1120, v1 + 1104);
    *(_DWORD *)(v1 + 1120) = 67;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[36],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9056),
      (const char (*)[25])byte_1A4475C0,
      (const char (*)[36])"NEW_ACTIVITY_ACTION_OPEN_SUMO_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23912),
      (data::NewActivityActionType *)(v1 + 1120),
      (const std::pair<std::string,std::string > *)(v1 + 9056));
    if ( *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1136, v1 + 1120);
    *(_DWORD *)(v1 + 1136) = 68;
    std::pair<std::string,std::string>::pair<char const(&)[18],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9152),
      (const char (*)[18])byte_1A447600,
      (const char (*)[42])"NEW_ACTIVITY_ACTION_REGISTER_GROUP_BUNDLE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 23984),
      (data::NewActivityActionType *)(v1 + 1136),
      (const std::pair<std::string,std::string > *)(v1 + 9152));
    if ( *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1152, v1 + 1136);
    *(_DWORD *)(v1 + 1152) = 69;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9248),
      (const char (*)[25])byte_1A447640,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_UNLOCK_SUMO_DUNGEON");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24056),
      (data::NewActivityActionType *)(v1 + 1152),
      (const std::pair<std::string,std::string > *)(v1 + 9248));
    if ( *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1168, v1 + 1152);
    *(_DWORD *)(v1 + 1168) = 70;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9344),
      (const char (*)[31])byte_1A447680,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_CHESS_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24128),
      (data::NewActivityActionType *)(v1 + 1168),
      (const std::pair<std::string,std::string > *)(v1 + 9344));
    if ( *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1184, v1 + 1168);
    *(_DWORD *)(v1 + 1184) = 71;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[55],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9440),
      (const char (*)[22])byte_1A4476C0,
      (const char (*)[55])"NEW_ACTIVITY_ACTION_DISABLE_TRANSFER_POINT_INTERACTION");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24200),
      (data::NewActivityActionType *)(v1 + 1184),
      (const std::pair<std::string,std::string > *)(v1 + 9440));
    if ( *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1200, v1 + 1184);
    *(_DWORD *)(v1 + 1200) = 72;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[54],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9536),
      (const char (*)[22])byte_1A447700,
      (const char (*)[54])"NEW_ACTIVITY_ACTION_ENABLE_TRANSFER_POINT_INTERACTION");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24272),
      (data::NewActivityActionType *)(v1 + 1200),
      (const std::pair<std::string,std::string > *)(v1 + 9536));
    if ( *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1216, v1 + 1200);
    *(_DWORD *)(v1 + 1216) = 73;
    std::pair<std::string,std::string>::pair<char const(&)[21],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9632),
      (const char (*)[21])byte_1A447740,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_UNREGISTER_GROUP_BUNDLE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24344),
      (data::NewActivityActionType *)(v1 + 1216),
      (const std::pair<std::string,std::string > *)(v1 + 9632));
    if ( *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1232, v1 + 1216);
    *(_DWORD *)(v1 + 1232) = 74;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9728),
      (const char (*)[31])byte_1A447780,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_BLITZ_RUSH_DUNGEON");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24416),
      (data::NewActivityActionType *)(v1 + 1232),
      (const std::pair<std::string,std::string > *)(v1 + 9728));
    if ( *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1248, v1 + 1232);
    *(_DWORD *)(v1 + 1248) = 75;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9824),
      (const char (*)[25])byte_1A4477C0,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_DIG_ACITVITY_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24488),
      (data::NewActivityActionType *)(v1 + 1248),
      (const std::pair<std::string,std::string > *)(v1 + 9824));
    if ( *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1264, v1 + 1248);
    *(_DWORD *)(v1 + 1264) = 76;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[56],true>(
      (std::pair<std::string,std::string > *const)(v1 + 9920),
      (const char (*)[25])byte_1A447800,
      (const char (*)[56])"NEW_ACTIVITY_ACTION_UNLOCK_MUSIC_BY_MUSIC_GAME_ACTIVITY");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24560),
      (data::NewActivityActionType *)(v1 + 1264),
      (const std::pair<std::string,std::string > *)(v1 + 9920));
    if ( *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1280, v1 + 1264);
    *(_DWORD *)(v1 + 1280) = 77;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[47],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10016),
      (const char (*)[31])byte_1A447840,
      (const char (*)[47])"NEW_ACTIVITY_ACTION_CLOSE_PLANT_FLOWER_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24632),
      (data::NewActivityActionType *)(v1 + 1280),
      (const std::pair<std::string,std::string > *)(v1 + 10016));
    if ( *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1296, v1 + 1280);
    *(_DWORD *)(v1 + 1296) = 78;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[49],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10112),
      (const char (*)[31])byte_1A447880,
      (const char (*)[49])"NEW_ACTIVITY_ACTION_OPEN_ROGUELIKE_DUNGEON_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24704),
      (data::NewActivityActionType *)(v1 + 1296),
      (const std::pair<std::string,std::string > *)(v1 + 10112));
    if ( *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1312, v1 + 1296);
    *(_DWORD *)(v1 + 1312) = 79;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[52],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10208),
      (const char (*)[31])byte_1A4478C0,
      (const char (*)[52])"NEW_ACTIVITY_ACTION_CLOSE_ROGUELIKE_DUNGEON_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24776),
      (data::NewActivityActionType *)(v1 + 1312),
      (const std::pair<std::string,std::string > *)(v1 + 10208));
    if ( *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1328, v1 + 1312);
    *(_DWORD *)(v1 + 1328) = 80;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10304),
      (const char (*)[25])byte_1A447900,
      (const char (*)[37])"NEW_ACTIVITY_ACTION_OPEN_HACHI_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24848),
      (data::NewActivityActionType *)(v1 + 1328),
      (const std::pair<std::string,std::string > *)(v1 + 10304));
    if ( *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1344, v1 + 1328);
    *(_DWORD *)(v1 + 1344) = 81;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10400),
      (const char (*)[31])byte_1A447940,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_OPEN_WINTER_CAMP_EXPLORE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24920),
      (data::NewActivityActionType *)(v1 + 1344),
      (const std::pair<std::string,std::string > *)(v1 + 10400));
    if ( *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1360, v1 + 1344);
    *(_DWORD *)(v1 + 1360) = 82;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10496),
      (const char (*)[31])byte_1A447980,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_WINTER_CAMP_BATTLE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 24992),
      (data::NewActivityActionType *)(v1 + 1360),
      (const std::pair<std::string,std::string > *)(v1 + 10496));
    if ( *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1376, v1 + 1360);
    *(_DWORD *)(v1 + 1376) = 83;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10592),
      (const char (*)[31])byte_1A4479C0,
      (const char (*)[42])"NEW_ACTIVITY_ACTION_OPEN_WINTER_CAMP_RACE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25064),
      (data::NewActivityActionType *)(v1 + 1376),
      (const std::pair<std::string,std::string > *)(v1 + 10592));
    if ( *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1392, v1 + 1376);
    *(_DWORD *)(v1 + 1392) = 84;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10688),
      (const char (*)[25])byte_1A447A00,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_CLOSE_WINTER_CAMP_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25136),
      (data::NewActivityActionType *)(v1 + 1392),
      (const std::pair<std::string,std::string > *)(v1 + 10688));
    if ( *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1408, v1 + 1392);
    *(_DWORD *)(v1 + 1408) = 85;
    std::pair<std::string,std::string>::pair<char const(&)[24],char const(&)[47],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10784),
      (const char (*)[24])byte_1A447A40,
      (const char (*)[47])"NEW_ACTIVITY_ACTION_DELAY_UNLOAD_DYNAMIC_GROUP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25208),
      (data::NewActivityActionType *)(v1 + 1408),
      (const std::pair<std::string,std::string > *)(v1 + 10784));
    if ( *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1424, v1 + 1408);
    *(_DWORD *)(v1 + 1424) = 86;
    std::pair<std::string,std::string>::pair<char const(&)[27],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10880),
      (const char (*)[27])byte_1A447A80,
      (const char (*)[48])"NEW_ACTIVITY_ACTION_UNREGISTER_ALL_GROUP_BUNDLE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25280),
      (data::NewActivityActionType *)(v1 + 1424),
      (const std::pair<std::string,std::string > *)(v1 + 10880));
    if ( *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1440, v1 + 1424);
    *(_DWORD *)(v1 + 1440) = 87;
    std::pair<std::string,std::string>::pair<char const(&)[24],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 10976),
      (const char (*)[24])byte_1A447AC0,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_UNLOAD_GROUP_BUNDLE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25352),
      (data::NewActivityActionType *)(v1 + 1440),
      (const std::pair<std::string,std::string > *)(v1 + 10976));
    if ( *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1456, v1 + 1440);
    *(_DWORD *)(v1 + 1456) = 88;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11072),
      (const char (*)[34])byte_1A447B00,
      (const char (*)[38])"NEW_ACTIVITY_ACTION_OPEN_POTION_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25424),
      (data::NewActivityActionType *)(v1 + 1456),
      (const std::pair<std::string,std::string > *)(v1 + 11072));
    if ( *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1472, v1 + 1456);
    *(_DWORD *)(v1 + 1472) = 89;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11168),
      (const char (*)[34])byte_1A447B60,
      (const char (*)[48])"NEW_ACTIVITY_ACTION_LANV2_OPEN_PROJECTION_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25496),
      (data::NewActivityActionType *)(v1 + 1472),
      (const std::pair<std::string,std::string > *)(v1 + 11168));
    if ( *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1488, v1 + 1472);
    *(_DWORD *)(v1 + 1488) = 90;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11264),
      (const char (*)[34])byte_1A447BC0,
      (const char (*)[51])"NEW_ACTIVITY_ACTION_LANV2_CLOSE_PROJECTION_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25568),
      (data::NewActivityActionType *)(v1 + 1488),
      (const std::pair<std::string,std::string > *)(v1 + 11264));
    if ( *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1504, v1 + 1488);
    *(_DWORD *)(v1 + 1504) = 91;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11360),
      (const char (*)[34])byte_1A447C20,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_LANV2_OPEN_SALVAGE_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25640),
      (data::NewActivityActionType *)(v1 + 1504),
      (const std::pair<std::string,std::string > *)(v1 + 11360));
    if ( *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1520, v1 + 1504);
    *(_DWORD *)(v1 + 1520) = 92;
    std::pair<std::string,std::string>::pair<char const(&)[35],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11456),
      (const char (*)[35])byte_1A447C80,
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_MINI_ELDRITCH");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25712),
      (data::NewActivityActionType *)(v1 + 1520),
      (const std::pair<std::string,std::string > *)(v1 + 11456));
    if ( *(_BYTE *)(((v1 + 1536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1536) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1536, v1 + 1520);
    *(_DWORD *)(v1 + 1536) = 93;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11552),
      (const char (*)[22])byte_1A447CE0,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_UNLOCK_HIDE_AND_SEEK_MAP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25784),
      (data::NewActivityActionType *)(v1 + 1536),
      (const std::pair<std::string,std::string > *)(v1 + 11552));
    if ( *(_BYTE *)(((v1 + 1552) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1552) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1552, v1 + 1536);
    *(_DWORD *)(v1 + 1552) = 94;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11648),
      (const char (*)[22])byte_1A447D20,
      (const char (*)[43])"NEW_ACTIVITY_ACTION_ACTIVITY_BANNER_NOTIFY");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25856),
      (data::NewActivityActionType *)(v1 + 1552),
      (const std::pair<std::string,std::string > *)(v1 + 11648));
    if ( *(_BYTE *)(((v1 + 1568) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1568) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1568, v1 + 1552);
    *(_DWORD *)(v1 + 1568) = 95;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[47],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11744),
      (const char (*)[34])byte_1A447D60,
      (const char (*)[47])"NEW_ACTIVITY_ACTION_LANV2_OPEN_FIREWORKS_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 25928),
      (data::NewActivityActionType *)(v1 + 1568),
      (const std::pair<std::string,std::string > *)(v1 + 11744));
    if ( *(_BYTE *)(((v1 + 1584) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1584) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1584, v1 + 1568);
    *(_DWORD *)(v1 + 1584) = 96;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[47],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11840),
      (const char (*)[31])byte_1A447DC0,
      (const char (*)[47])"NEW_ACTIVITY_ACTION_CLOSE_LANTERN_RITE_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26000),
      (data::NewActivityActionType *)(v1 + 1584),
      (const std::pair<std::string,std::string > *)(v1 + 11840));
    if ( *(_BYTE *)(((v1 + 1600) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1600) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1600, v1 + 1584);
    *(_DWORD *)(v1 + 1600) = 97;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 11936),
      (const char (*)[34])byte_1A447E00,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_TANUKI_TRAVEL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26072),
      (data::NewActivityActionType *)(v1 + 1600),
      (const std::pair<std::string,std::string > *)(v1 + 11936));
    if ( *(_BYTE *)(((v1 + 1616) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1616) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1616, v1 + 1600);
    *(_DWORD *)(v1 + 1616) = 98;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12032),
      (const char (*)[28])byte_1A447E60,
      (const char (*)[39])"NEW_ACTIVITY_ACTION_OPEN_MICHIAE_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26144),
      (data::NewActivityActionType *)(v1 + 1616),
      (const std::pair<std::string,std::string > *)(v1 + 12032));
    if ( *(_BYTE *)(((v1 + 1632) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1632) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1632, v1 + 1616);
    *(_DWORD *)(v1 + 1632) = 99;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12128),
      (const char (*)[22])byte_1A447EA0,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_MATERIAL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26216),
      (data::NewActivityActionType *)(v1 + 1632),
      (const std::pair<std::string,std::string > *)(v1 + 12128));
    if ( *(_BYTE *)(((v1 + 1648) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1648) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1648, v1 + 1632);
    *(_DWORD *)(v1 + 1648) = 100;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[50],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12224),
      (const char (*)[28])byte_1A447EE0,
      (const char (*)[50])"NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_STORY_MODULE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26288),
      (data::NewActivityActionType *)(v1 + 1648),
      (const std::pair<std::string,std::string > *)(v1 + 12224));
    if ( *(_BYTE *)(((v1 + 1664) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1664) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1664, v1 + 1648);
    *(_DWORD *)(v1 + 1664) = 101;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12320),
      (const char (*)[28])byte_1A447F20,
      (const char (*)[43])"NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_LEVEL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26360),
      (data::NewActivityActionType *)(v1 + 1664),
      (const std::pair<std::string,std::string > *)(v1 + 12320));
    if ( *(_BYTE *)(((v1 + 1680) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1680) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1680, v1 + 1664);
    *(_DWORD *)(v1 + 1680) = 102;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[52],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12416),
      (const char (*)[28])byte_1A447F60,
      (const char (*)[52])"NEW_ACTIVITY_ACTION_UNLOCK_BARTENDER_DEVELOP_MODULE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26432),
      (data::NewActivityActionType *)(v1 + 1680),
      (const std::pair<std::string,std::string > *)(v1 + 12416));
    if ( *(_BYTE *)(((v1 + 1696) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1696) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1696, v1 + 1680);
    *(_DWORD *)(v1 + 1696) = 103;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12512),
      (const char (*)[16])byte_1A447FA0,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_OPEN_CUSTOM_DUNGEON");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26504),
      (data::NewActivityActionType *)(v1 + 1696),
      (const std::pair<std::string,std::string > *)(v1 + 12512));
    if ( *(_BYTE *)(((v1 + 1712) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1712) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1712, v1 + 1696);
    *(_DWORD *)(v1 + 1712) = 104;
    std::pair<std::string,std::string>::pair<char const(&)[16],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12608),
      (const char (*)[16])byte_1A447FE0,
      (const char (*)[41])"NEW_ACTIVITY_ACTION_CLOSE_CUSTOM_DUNGEON");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26576),
      (data::NewActivityActionType *)(v1 + 1712),
      (const std::pair<std::string,std::string > *)(v1 + 12608));
    if ( *(_BYTE *)(((v1 + 1728) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1728) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1728, v1 + 1712);
    *(_DWORD *)(v1 + 1728) = 105;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[29],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12704),
      (const char (*)[28])byte_1A448020,
      (const char (*)[29])"NEW_ACTIVITY_ACTION_OPEN_UGC");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26648),
      (data::NewActivityActionType *)(v1 + 1728),
      (const std::pair<std::string,std::string > *)(v1 + 12704));
    if ( *(_BYTE *)(((v1 + 1744) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1744) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1744, v1 + 1728);
    *(_DWORD *)(v1 + 1744) = 106;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12800),
      (const char (*)[22])byte_1A448060,
      (const char (*)[51])"NEW_ACTIVITY_ACTION_UNLOCK_OFFICIAL_CUSTOM_DUNGEON");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26720),
      (data::NewActivityActionType *)(v1 + 1744),
      (const std::pair<std::string,std::string > *)(v1 + 12800));
    if ( *(_BYTE *)(((v1 + 1760) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1760) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1760, v1 + 1744);
    *(_DWORD *)(v1 + 1760) = 107;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12896),
      (const char (*)[31])byte_1A4480A0,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_CRYSTAL_LINK_LEVEL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26792),
      (data::NewActivityActionType *)(v1 + 1760),
      (const std::pair<std::string,std::string > *)(v1 + 12896));
    if ( *(_BYTE *)(((v1 + 1776) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1776) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1776, v1 + 1760);
    *(_DWORD *)(v1 + 1776) = 108;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 12992),
      (const char (*)[34])byte_1A4480E0,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_CLOSE_PHOTO_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26864),
      (data::NewActivityActionType *)(v1 + 1776),
      (const std::pair<std::string,std::string > *)(v1 + 12992));
    if ( *(_BYTE *)(((v1 + 1792) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1792) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1792, v1 + 1776);
    *(_DWORD *)(v1 + 1792) = 109;
    std::pair<std::string,std::string>::pair<char const(&)[36],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13088),
      (const char (*)[36])byte_1A448140,
      (const char (*)[38])"NEW_ACTIVITY_ACTION_OPEN_PHOTO_POS_ID");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 26936),
      (data::NewActivityActionType *)(v1 + 1792),
      (const std::pair<std::string,std::string > *)(v1 + 13088));
    if ( *(_BYTE *)(((v1 + 1808) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1808) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1808, v1 + 1792);
    *(_DWORD *)(v1 + 1808) = 110;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13184),
      (const char (*)[31])byte_1A4481A0,
      (const char (*)[37])"NEW_ACTIVITY_ACTION_OPEN_SPICE_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27008),
      (data::NewActivityActionType *)(v1 + 1808),
      (const std::pair<std::string,std::string > *)(v1 + 13184));
    if ( *(_BYTE *)(((v1 + 1824) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1824) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1824, v1 + 1808);
    *(_DWORD *)(v1 + 1824) = 111;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13280),
      (const char (*)[34])byte_1A4481E0,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_IRODORI_POETRY_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27080),
      (data::NewActivityActionType *)(v1 + 1824),
      (const std::pair<std::string,std::string > *)(v1 + 13280));
    if ( *(_BYTE *)(((v1 + 1840) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1840) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1840, v1 + 1824);
    *(_DWORD *)(v1 + 1840) = 112;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13376),
      (const char (*)[34])byte_1A448240,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_OPEN_IRODORI_CHESS_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27152),
      (data::NewActivityActionType *)(v1 + 1840),
      (const std::pair<std::string,std::string > *)(v1 + 13376));
    if ( *(_BYTE *)(((v1 + 1856) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1856) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1856, v1 + 1840);
    *(_DWORD *)(v1 + 1856) = 113;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13472),
      (const char (*)[34])byte_1A4482A0,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_IRODORI_MASTER_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27224),
      (data::NewActivityActionType *)(v1 + 1856),
      (const std::pair<std::string,std::string > *)(v1 + 13472));
    if ( *(_BYTE *)(((v1 + 1872) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1872) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1872, v1 + 1856);
    *(_DWORD *)(v1 + 1872) = 114;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13568),
      (const char (*)[34])byte_1A448300,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_IRODORI_FLOWER_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27296),
      (data::NewActivityActionType *)(v1 + 1872),
      (const std::pair<std::string,std::string > *)(v1 + 13568));
    if ( *(_BYTE *)(((v1 + 1888) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1888) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1888, v1 + 1872);
    *(_DWORD *)(v1 + 1888) = 115;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13664),
      (const char (*)[13])byte_1A448360,
      (const char (*)[39])"NEW_ACTIVITY_ACTION_ACTIVE_ITEM_GIVING");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27368),
      (data::NewActivityActionType *)(v1 + 1888),
      (const std::pair<std::string,std::string > *)(v1 + 13664));
    if ( *(_BYTE *)(((v1 + 1904) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1904) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1904, v1 + 1888);
    *(_DWORD *)(v1 + 1904) = 116;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13760),
      (const char (*)[13])byte_1A4483A0,
      (const char (*)[41])"NEW_ACTIVITY_ACTION_DEACTIVE_ITEM_GIVING");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27440),
      (data::NewActivityActionType *)(v1 + 1904),
      (const std::pair<std::string,std::string > *)(v1 + 13760));
    if ( *(_BYTE *)(((v1 + 1920) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1920) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1920, v1 + 1904);
    *(_DWORD *)(v1 + 1920) = 117;
    std::pair<std::string,std::string>::pair<char const(&)[22],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13856),
      (const char (*)[22])byte_1A4483E0,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_CLOSE_BARTENDER_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27512),
      (data::NewActivityActionType *)(v1 + 1920),
      (const std::pair<std::string,std::string > *)(v1 + 13856));
    if ( *(_BYTE *)(((v1 + 1936) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1936) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1936, v1 + 1920);
    *(_DWORD *)(v1 + 1936) = 118;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[40],true>(
      (std::pair<std::string,std::string > *const)(v1 + 13952),
      (const char (*)[28])byte_1A448420,
      (const char (*)[40])"NEW_ACTIVITY_ACTION_OPEN_MUSIC_GAME_UGC");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27584),
      (data::NewActivityActionType *)(v1 + 1936),
      (const std::pair<std::string,std::string > *)(v1 + 13952));
    if ( *(_BYTE *)(((v1 + 1952) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1952) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1952, v1 + 1936);
    *(_DWORD *)(v1 + 1952) = 119;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14048),
      (const char (*)[28])byte_1A448460,
      (const char (*)[41])"NEW_ACTIVITY_ACTION_CLOSE_MUSIC_GAME_UGC");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27656),
      (data::NewActivityActionType *)(v1 + 1952),
      (const std::pair<std::string,std::string > *)(v1 + 14048));
    if ( *(_BYTE *)(((v1 + 1968) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1968) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1968, v1 + 1952);
    *(_DWORD *)(v1 + 1968) = 120;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14144),
      (const char (*)[25])byte_1A4484A0,
      (const char (*)[37])"NEW_ACTIVITY_ACTION_OPEN_GACHA_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27728),
      (data::NewActivityActionType *)(v1 + 1968),
      (const std::pair<std::string,std::string > *)(v1 + 14144));
    if ( *(_BYTE *)(((v1 + 1984) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 1984) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 1984, v1 + 1968);
    *(_DWORD *)(v1 + 1984) = 121;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14240),
      (const char (*)[28])byte_1A4484E0,
      (const char (*)[43])"NEW_ACTIVITY_ACTION_OPEN_ROGUE_DIARY_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27800),
      (data::NewActivityActionType *)(v1 + 1984),
      (const std::pair<std::string,std::string > *)(v1 + 14240));
    if ( *(_BYTE *)(((v1 + 2000) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2000) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2000, v1 + 1984);
    *(_DWORD *)(v1 + 2000) = 122;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14336),
      (const char (*)[28])byte_1A448520,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_CLOSE_ROGUE_DIARY_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27872),
      (data::NewActivityActionType *)(v1 + 2000),
      (const std::pair<std::string,std::string > *)(v1 + 14336));
    if ( *(_BYTE *)(((v1 + 2016) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2016) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2016, v1 + 2000);
    *(_DWORD *)(v1 + 2016) = 123;
    std::pair<std::string,std::string>::pair<char const(&)[36],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14432),
      (const char (*)[36])byte_1A448560,
      (const char (*)[39])"NEW_ACTIVITY_ACTION_CLOSE_PHOTO_POS_ID");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 27944),
      (data::NewActivityActionType *)(v1 + 2016),
      (const std::pair<std::string,std::string > *)(v1 + 14432));
    if ( *(_BYTE *)(((v1 + 2032) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2032) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2032, v1 + 2016);
    *(_DWORD *)(v1 + 2032) = 124;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[49],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14528),
      (const char (*)[37])byte_1A4485C0,
      (const char (*)[49])"NEW_ACTIVITY_ACTION_OPEN_SUMMER_V2_DUNGEON_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28016),
      (data::NewActivityActionType *)(v1 + 2032),
      (const std::pair<std::string,std::string > *)(v1 + 14528));
    if ( *(_BYTE *)(((v1 + 2048) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2048) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2048, v1 + 2032);
    *(_DWORD *)(v1 + 2048) = 125;
    std::pair<std::string,std::string>::pair<char const(&)[43],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14624),
      (const char (*)[43])byte_1A448620,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_SUMMER_V2_BOAT_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28088),
      (data::NewActivityActionType *)(v1 + 2048),
      (const std::pair<std::string,std::string > *)(v1 + 14624));
    if ( *(_BYTE *)(((v1 + 2064) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2064) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2064, v1 + 2048);
    *(_DWORD *)(v1 + 2064) = 126;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14720),
      (const char (*)[34])byte_1A448680,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_ISLAND_PARTY_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28160),
      (data::NewActivityActionType *)(v1 + 2064),
      (const std::pair<std::string,std::string > *)(v1 + 14720));
    if ( *(_BYTE *)(((v1 + 2080) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2080) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2080, v1 + 2064);
    *(_DWORD *)(v1 + 2080) = 127;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[36],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14816),
      (const char (*)[34])byte_1A4486E0,
      (const char (*)[36])"NEW_ACTIVITY_ACTION_OPEN_GEAR_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28232),
      (data::NewActivityActionType *)(v1 + 2080),
      (const std::pair<std::string,std::string > *)(v1 + 14816));
    if ( *(_BYTE *)(((v1 + 2096) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2096) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2096, v1 + 2080);
    *(_DWORD *)(v1 + 2096) = 128;
    std::pair<std::string,std::string>::pair<char const(&)[39],char const(&)[60],true>(
      (std::pair<std::string,std::string > *const)(v1 + 14912),
      (const char (*)[39])byte_1A448740,
      (const char (*)[60])"NEW_ACTIVITY_ACTION_LOAD_SPECIFY_BUSINESSINFO_DYNAMIC_GROUP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28304),
      (data::NewActivityActionType *)(v1 + 2096),
      (const std::pair<std::string,std::string > *)(v1 + 14912));
    if ( *(_BYTE *)(((v1 + 2112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2112, v1 + 2096);
    *(_DWORD *)(v1 + 2112) = 129;
    std::pair<std::string,std::string>::pair<char const(&)[39],char const(&)[62],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15008),
      (const char (*)[39])byte_1A4487A0,
      (const char (*)[62])"NEW_ACTIVITY_ACTION_UNLOAD_SPECIFY_BUSINESSINFO_DYNAMIC_GROUP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28376),
      (data::NewActivityActionType *)(v1 + 2112),
      (const std::pair<std::string,std::string > *)(v1 + 15008));
    if ( *(_BYTE *)(((v1 + 2128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2128, v1 + 2112);
    *(_DWORD *)(v1 + 2128) = 130;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15104),
      (const char (*)[31])byte_1A448800,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_INSTABLE_SPRAY_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28448),
      (data::NewActivityActionType *)(v1 + 2128),
      (const std::pair<std::string,std::string > *)(v1 + 15104));
    if ( *(_BYTE *)(((v1 + 2144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2144, v1 + 2128);
    *(_DWORD *)(v1 + 2144) = 131;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[53],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15200),
      (const char (*)[31])byte_1A448840,
      (const char (*)[53])"NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_CAMP_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28520),
      (data::NewActivityActionType *)(v1 + 2144),
      (const std::pair<std::string,std::string > *)(v1 + 15200));
    if ( *(_BYTE *)(((v1 + 2160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2160, v1 + 2144);
    *(_DWORD *)(v1 + 2160) = 132;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[54],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15296),
      (const char (*)[31])byte_1A448880,
      (const char (*)[54])"NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_PHOTO_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28592),
      (data::NewActivityActionType *)(v1 + 2160),
      (const std::pair<std::string,std::string > *)(v1 + 15296));
    if ( *(_BYTE *)(((v1 + 2176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2176, v1 + 2160);
    *(_DWORD *)(v1 + 2176) = 133;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[53],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15392),
      (const char (*)[31])byte_1A4488C0,
      (const char (*)[53])"NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_RACE_LEVEL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28664),
      (data::NewActivityActionType *)(v1 + 2176),
      (const std::pair<std::string,std::string > *)(v1 + 15392));
    if ( *(_BYTE *)(((v1 + 2192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2192) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2192, v1 + 2176);
    *(_DWORD *)(v1 + 2192) = 134;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15488),
      (const char (*)[28])byte_1A448900,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_MUQADAS_POTION_LEVEL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28736),
      (data::NewActivityActionType *)(v1 + 2192),
      (const std::pair<std::string,std::string > *)(v1 + 15488));
    if ( *(_BYTE *)(((v1 + 2208) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2208) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2208, v1 + 2192);
    *(_DWORD *)(v1 + 2208) = 135;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[54],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15584),
      (const char (*)[31])byte_1A448940,
      (const char (*)[54])"NEW_ACTIVITY_ACTION_OPEN_GRAVEN_INNOCENCE_CARVE_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28808),
      (data::NewActivityActionType *)(v1 + 2208),
      (const std::pair<std::string,std::string > *)(v1 + 15584));
    if ( *(_BYTE *)(((v1 + 2224) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2224) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2224, v1 + 2208);
    *(_DWORD *)(v1 + 2224) = 136;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15680),
      (const char (*)[25])byte_1A448980,
      (const char (*)[48])"NEW_ACTIVITY_ACTION_OPEN_TREASURE_SEELIE_REGION");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28880),
      (data::NewActivityActionType *)(v1 + 2224),
      (const std::pair<std::string,std::string > *)(v1 + 15680));
    if ( *(_BYTE *)(((v1 + 2240) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2240) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2240, v1 + 2224);
    *(_DWORD *)(v1 + 2240) = 137;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15776),
      (const char (*)[31])byte_1A4489C0,
      (const char (*)[51])"NEW_ACTIVITY_ACTION_CLOSE_GRAVEN_INNOCENCE_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 28952),
      (data::NewActivityActionType *)(v1 + 2240),
      (const std::pair<std::string,std::string > *)(v1 + 15776));
    if ( *(_BYTE *)(((v1 + 2256) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2256) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2256, v1 + 2240);
    *(_DWORD *)(v1 + 2256) = 138;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15872),
      (const char (*)[31])byte_1A448A00,
      (const char (*)[42])"NEW_ACTIVITY_ACTION_OPEN_WIND_FIELD_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29024),
      (data::NewActivityActionType *)(v1 + 2256),
      (const std::pair<std::string,std::string > *)(v1 + 15872));
    if ( *(_BYTE *)(((v1 + 2272) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2272) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2272, v1 + 2256);
    *(_DWORD *)(v1 + 2272) = 139;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[50],true>(
      (std::pair<std::string,std::string > *const)(v1 + 15968),
      (const char (*)[31])byte_1A448A40,
      (const char (*)[50])"NEW_ACTIVITY_ACTION_OPEN_ROCK_BOARD_EXPLORE_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29096),
      (data::NewActivityActionType *)(v1 + 2272),
      (const std::pair<std::string,std::string > *)(v1 + 15968));
    if ( *(_BYTE *)(((v1 + 2288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2288) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2288, v1 + 2272);
    *(_DWORD *)(v1 + 2288) = 140;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[47],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16064),
      (const char (*)[31])byte_1A448A80,
      (const char (*)[47])"NEW_ACTIVITY_ACTION_OPEN_VINTAGE_HUNTING_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29168),
      (data::NewActivityActionType *)(v1 + 2288),
      (const std::pair<std::string,std::string > *)(v1 + 16064));
    if ( *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2304, v1 + 2288);
    *(_DWORD *)(v1 + 2304) = 141;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[47],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16160),
      (const char (*)[31])byte_1A448AC0,
      (const char (*)[47])"NEW_ACTIVITY_ACTION_OPEN_VINTAGE_PRESENT_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29240),
      (data::NewActivityActionType *)(v1 + 2304),
      (const std::pair<std::string,std::string > *)(v1 + 16160));
    if ( *(_BYTE *)(((v1 + 2320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2320) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2320, v1 + 2304);
    *(_DWORD *)(v1 + 2320) = 142;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16256),
      (const char (*)[31])byte_1A448B00,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_VINTAGE_CAMP_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29312),
      (data::NewActivityActionType *)(v1 + 2320),
      (const std::pair<std::string,std::string > *)(v1 + 16256));
    if ( *(_BYTE *)(((v1 + 2336) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2336) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2336, v1 + 2320);
    *(_DWORD *)(v1 + 2336) = 143;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16352),
      (const char (*)[37])byte_1A448B40,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_VINTAGE_OPEN_BOOTH");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29384),
      (data::NewActivityActionType *)(v1 + 2336),
      (const std::pair<std::string,std::string > *)(v1 + 16352));
    if ( *(_BYTE *)(((v1 + 2352) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2352) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2352, v1 + 2336);
    *(_DWORD *)(v1 + 2352) = 144;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16448),
      (const char (*)[28])byte_1A448BA0,
      (const char (*)[42])"NEW_ACTIVITY_ACTION_CLOSE_VINTAGE_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29456),
      (data::NewActivityActionType *)(v1 + 2352),
      (const std::pair<std::string,std::string > *)(v1 + 16448));
    if ( *(_BYTE *)(((v1 + 2368) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2368) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2368, v1 + 2352);
    *(_DWORD *)(v1 + 2368) = 145;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16544),
      (const char (*)[31])byte_1A448BE0,
      (const char (*)[48])"NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29528),
      (data::NewActivityActionType *)(v1 + 2368),
      (const std::pair<std::string,std::string > *)(v1 + 16544));
    if ( *(_BYTE *)(((v1 + 2384) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2384) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2384, v1 + 2368);
    *(_DWORD *)(v1 + 2384) = 146;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16640),
      (const char (*)[25])byte_1A448C20,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_SHOP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29600),
      (data::NewActivityActionType *)(v1 + 2384),
      (const std::pair<std::string,std::string > *)(v1 + 16640));
    if ( *(_BYTE *)(((v1 + 2400) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2400) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2400, v1 + 2384);
    *(_DWORD *)(v1 + 2400) = 147;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[49],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16736),
      (const char (*)[31])byte_1A448C60,
      (const char (*)[49])"NEW_ACTIVITY_ACTION_VINTAGE_CLOSE_MARKET_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29672),
      (data::NewActivityActionType *)(v1 + 2400),
      (const std::pair<std::string,std::string > *)(v1 + 16736));
    if ( *(_BYTE *)(((v1 + 2416) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2416) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2416, v1 + 2400);
    *(_DWORD *)(v1 + 2416) = 148;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[53],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16832),
      (const char (*)[31])byte_1A448CA0,
      (const char (*)[53])"NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_SHOP_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29744),
      (data::NewActivityActionType *)(v1 + 2416),
      (const std::pair<std::string,std::string > *)(v1 + 16832));
    if ( *(_BYTE *)(((v1 + 2432) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2432) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2432, v1 + 2416);
    *(_DWORD *)(v1 + 2432) = 149;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[58],true>(
      (std::pair<std::string,std::string > *const)(v1 + 16928),
      (const char (*)[31])byte_1A448CE0,
      (const char (*)[58])"NEW_ACTIVITY_ACTION_VINTAGE_INTERRUPT_MARKET_SHOP_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29816),
      (data::NewActivityActionType *)(v1 + 2432),
      (const std::pair<std::string,std::string > *)(v1 + 16928));
    if ( *(_BYTE *)(((v1 + 2448) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2448) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2448, v1 + 2432);
    *(_DWORD *)(v1 + 2448) = 150;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[55],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17024),
      (const char (*)[31])byte_1A448D20,
      (const char (*)[55])"NEW_ACTIVITY_ACTION_VINTAGE_FINISH_MARKET_SHOP_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29888),
      (data::NewActivityActionType *)(v1 + 2448),
      (const std::pair<std::string,std::string > *)(v1 + 17024));
    if ( *(_BYTE *)(((v1 + 2464) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2464) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2464, v1 + 2448);
    *(_DWORD *)(v1 + 2464) = 151;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[50],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17120),
      (const char (*)[37])byte_1A448D60,
      (const char (*)[50])"NEW_ACTIVITY_ACTION_VINTAGE_FINISH_MARKET_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 29960),
      (data::NewActivityActionType *)(v1 + 2464),
      (const std::pair<std::string,std::string > *)(v1 + 17120));
    if ( *(_BYTE *)(((v1 + 2480) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2480) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2480, v1 + 2464);
    *(_DWORD *)(v1 + 2480) = 152;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[56],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17216),
      (const char (*)[37])byte_1A448DC0,
      (const char (*)[56])"NEW_ACTIVITY_ACTION_VINTAGE_SHOP_UNLOCK_STRATEGY_MODULE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30032),
      (data::NewActivityActionType *)(v1 + 2480),
      (const std::pair<std::string,std::string > *)(v1 + 17216));
    if ( *(_BYTE *)(((v1 + 2496) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2496) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2496, v1 + 2480);
    *(_DWORD *)(v1 + 2496) = 153;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[52],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17312),
      (const char (*)[37])byte_1A448E20,
      (const char (*)[52])"NEW_ACTIVITY_ACTION_VINTAGE_SHOP_UNLOCK_HELP_MODULE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30104),
      (data::NewActivityActionType *)(v1 + 2496),
      (const std::pair<std::string,std::string > *)(v1 + 17312));
    if ( *(_BYTE *)(((v1 + 2512) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2512) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2512, v1 + 2496);
    *(_DWORD *)(v1 + 2512) = 154;
    std::pair<std::string,std::string>::pair<char const(&)[33],char const(&)[49],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17408),
      (const char (*)[33])byte_1A448E80,
      (const char (*)[49])"NEW_ACTIVITY_ACTION_VINTAGE_SHOP_REFRESH_HELP_CD");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30176),
      (data::NewActivityActionType *)(v1 + 2512),
      (const std::pair<std::string,std::string > *)(v1 + 17408));
    if ( *(_BYTE *)(((v1 + 2528) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2528) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2528, v1 + 2512);
    *(_DWORD *)(v1 + 2528) = 155;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[52],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17504),
      (const char (*)[37])byte_1A448EE0,
      (const char (*)[52])"NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_CAMP");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30248),
      (data::NewActivityActionType *)(v1 + 2528),
      (const std::pair<std::string,std::string > *)(v1 + 17504));
    if ( *(_BYTE *)(((v1 + 2544) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2544) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2544, v1 + 2528);
    *(_DWORD *)(v1 + 2544) = 156;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[57],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17600),
      (const char (*)[37])byte_1A448F40,
      (const char (*)[57])"NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_CALTIVATE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30320),
      (data::NewActivityActionType *)(v1 + 2544),
      (const std::pair<std::string,std::string > *)(v1 + 17600));
    if ( *(_BYTE *)(((v1 + 2560) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2560) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2560, v1 + 2544);
    *(_DWORD *)(v1 + 2560) = 157;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[56],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17696),
      (const char (*)[37])byte_1A448FA0,
      (const char (*)[56])"NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_TRAINING");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30392),
      (data::NewActivityActionType *)(v1 + 2560),
      (const std::pair<std::string,std::string > *)(v1 + 17696));
    if ( *(_BYTE *)(((v1 + 2576) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2576) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2576, v1 + 2560);
    *(_DWORD *)(v1 + 2576) = 158;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[49],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17792),
      (const char (*)[31])byte_1A449000,
      (const char (*)[49])"NEW_ACTIVITY_ACTION_CLOSE_FUNGUS_FIGHTER_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30464),
      (data::NewActivityActionType *)(v1 + 2576),
      (const std::pair<std::string,std::string > *)(v1 + 17792));
    if ( *(_BYTE *)(((v1 + 2592) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2592) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2592, v1 + 2576);
    *(_DWORD *)(v1 + 2592) = 159;
    std::pair<std::string,std::string>::pair<char const(&)[37],char const(&)[52],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17888),
      (const char (*)[37])byte_1A449040,
      (const char (*)[52])"NEW_ACTIVITY_ACTION_OPEN_FUNGUS_FIGHTER_FUNGUS_PLOT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30536),
      (data::NewActivityActionType *)(v1 + 2592),
      (const std::pair<std::string,std::string > *)(v1 + 17888));
    if ( *(_BYTE *)(((v1 + 2608) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2608) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2608, v1 + 2592);
    *(_DWORD *)(v1 + 2608) = 160;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[46],true>(
      (std::pair<std::string,std::string > *const)(v1 + 17984),
      (const char (*)[31])byte_1A4490A0,
      (const char (*)[46])"NEW_ACTIVITY_ACTION_OPEN_CHAR_AMUSEMENT_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30608),
      (data::NewActivityActionType *)(v1 + 2608),
      (const std::pair<std::string,std::string > *)(v1 + 17984));
    if ( *(_BYTE *)(((v1 + 2624) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2624) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2624, v1 + 2608);
    *(_DWORD *)(v1 + 2624) = 161;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[51],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18080),
      (const char (*)[34])byte_1A4490E0,
      (const char (*)[51])"NEW_ACTIVITY_ACTION_OPEN_EFFIGY_CHALLENGE_V2_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30680),
      (data::NewActivityActionType *)(v1 + 2624),
      (const std::pair<std::string,std::string > *)(v1 + 18080));
    if ( *(_BYTE *)(((v1 + 2640) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2640) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2640, v1 + 2624);
    *(_DWORD *)(v1 + 2640) = 162;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[41],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18176),
      (const char (*)[25])byte_1A449140,
      (const char (*)[41])"NEW_ACTIVITY_ACTION_COMMON_CLOSE_CONTENT");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30752),
      (data::NewActivityActionType *)(v1 + 2640),
      (const std::pair<std::string,std::string > *)(v1 + 18176));
    if ( *(_BYTE *)(((v1 + 2656) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2656) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2656, v1 + 2640);
    *(_DWORD *)(v1 + 2656) = 163;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[44],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18272),
      (const char (*)[34])byte_1A449180,
      (const char (*)[44])"NEW_ACTIVITY_ACTION_OPEN_COIN_COLLECT_LEVEL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30824),
      (data::NewActivityActionType *)(v1 + 2656),
      (const std::pair<std::string,std::string > *)(v1 + 18272));
    if ( *(_BYTE *)(((v1 + 2672) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2672) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2672, v1 + 2656);
    *(_DWORD *)(v1 + 2672) = 164;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[37],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18368),
      (const char (*)[31])byte_1A4491E0,
      (const char (*)[37])"NEW_ACTIVITY_ACTION_BRICK_OPEN_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30896),
      (data::NewActivityActionType *)(v1 + 2672),
      (const std::pair<std::string,std::string > *)(v1 + 18368));
    if ( *(_BYTE *)(((v1 + 2688) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2688) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2688, v1 + 2672);
    *(_DWORD *)(v1 + 2688) = 165;
    std::pair<std::string,std::string>::pair<char const(&)[46],char const(&)[43],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18464),
      (const char (*)[46])byte_1A449220,
      (const char (*)[43])"NEW_ACTIVITY_ACTION_BRICK_OPEN_STAGE_WORLD");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 30968),
      (data::NewActivityActionType *)(v1 + 2688),
      (const std::pair<std::string,std::string > *)(v1 + 18464));
    if ( *(_BYTE *)(((v1 + 2704) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2704) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2704, v1 + 2688);
    *(_DWORD *)(v1 + 2704) = 166;
    std::pair<std::string,std::string>::pair<char const(&)[43],char const(&)[45],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18560),
      (const char (*)[43])byte_1A449280,
      (const char (*)[45])"NEW_ACTIVITY_ACTION_BRICK_OPEN_STAGE_DUNGEON");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 31040),
      (data::NewActivityActionType *)(v1 + 2704),
      (const std::pair<std::string,std::string > *)(v1 + 18560));
    if ( *(_BYTE *)(((v1 + 2720) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2720) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2720, v1 + 2704);
    *(_DWORD *)(v1 + 2720) = 167;
    std::pair<std::string,std::string>::pair<char const(&)[21],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18656),
      (const char (*)[21])byte_1A4492E0,
      (const char (*)[42])"NEW_ACTIVITY_ACTION_OPERATE_SCENE_TAG_VEC");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 31112),
      (data::NewActivityActionType *)(v1 + 2720),
      (const std::pair<std::string,std::string > *)(v1 + 18656));
    if ( *(_BYTE *)(((v1 + 2736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2736) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2736, v1 + 2720);
    *(_DWORD *)(v1 + 2736) = 168;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18752),
      (const char (*)[31])byte_1A449320,
      (const char (*)[42])"NEW_ACTIVITY_ACTION_DUEL_HEART_OPEN_LEVEL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 31184),
      (data::NewActivityActionType *)(v1 + 2736),
      (const std::pair<std::string,std::string > *)(v1 + 18752));
    if ( *(_BYTE *)(((v1 + 2752) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2752) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2752, v1 + 2736);
    *(_DWORD *)(v1 + 2752) = 169;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[42],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18848),
      (const char (*)[31])byte_1A449360,
      (const char (*)[42])"NEW_ACTIVITY_ACTION_TEAM_CHAIN_OPEN_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 31256),
      (data::NewActivityActionType *)(v1 + 2752),
      (const std::pair<std::string,std::string > *)(v1 + 18848));
    if ( *(_BYTE *)(((v1 + 2768) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2768) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2768, v1 + 2752);
    *(_DWORD *)(v1 + 2768) = 170;
    std::pair<std::string,std::string>::pair<char const(&)[28],char const(&)[54],true>(
      (std::pair<std::string,std::string > *const)(v1 + 18944),
      (const char (*)[28])byte_1A4493A0,
      (const char (*)[54])"NEW_ACTIVITY_ACTION_ELECTROHERCULES_BATTLE_OPEN_LEVEL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 31328),
      (data::NewActivityActionType *)(v1 + 2768),
      (const std::pair<std::string,std::string > *)(v1 + 18944));
    if ( *(_BYTE *)(((v1 + 2784) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2784) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2784, v1 + 2768);
    *(_DWORD *)(v1 + 2784) = 171;
    std::pair<std::string,std::string>::pair<char const(&)[31],char const(&)[48],true>(
      (std::pair<std::string,std::string > *const)(v1 + 19040),
      (const char (*)[31])byte_1A4493E0,
      (const char (*)[48])"NEW_ACTIVITY_ACTION_OPEN_SEA_LAMP_V3_RACE_LEVEL");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 31400),
      (data::NewActivityActionType *)(v1 + 2784),
      (const std::pair<std::string,std::string > *)(v1 + 19040));
    if ( *(_BYTE *)(((v1 + 2800) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 2800) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 2800, v1 + 2784);
    *(_DWORD *)(v1 + 2800) = 172;
    std::pair<std::string,std::string>::pair<char const(&)[34],char const(&)[50],true>(
      (std::pair<std::string,std::string > *const)(v1 + 19136),
      (const char (*)[34])byte_1A449420,
      (const char (*)[50])"NEW_ACTIVITY_ACTION_OPEN_SEA_LAMP_V3_SHADOW_STAGE");
    std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::pair<data::NewActivityActionType,true>(
      (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *const)(v1 + 31472),
      (data::NewActivityActionType *)(v1 + 2800),
      (const std::pair<std::string,std::string > *)(v1 + 19136));
    std::allocator<std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>>::allocator((std::allocator<std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    std::map<data::NewActivityActionType,std::pair<std::string,std::string>>::map(
      &data::getNewActivityActionTypeEnumMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > >)__PAIR128__(171LL, v1 + 19232),
      (const std::less<data::NewActivityActionType> *)(v1 + 48),
      (const std::map<data::NewActivityActionType,std::pair<std::string,std::string >>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityActionTypeEnumMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::map<data::NewActivityActionType,std::pair<std::string,std::string>>::~map,
      &data::getNewActivityActionTypeEnumMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>>::~allocator((std::allocator<std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *)(v1 + 31544);
          i != (std::pair<const data::NewActivityActionType,std::pair<std::string,std::string > > *)(v1 + 19232);
          std::pair<data::NewActivityActionType const,std::pair<std::string,std::string>>::~pair(i) )
    {
      --i;
    }
    __asan_poison_stack_memory(v1 + 19232, 12312LL);
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 19136));
    v5 = (_DWORD *)(((v1 + 19136) >> 3) + 2147450880);
    *v5 = -117901064;
    v5[1] = -117901064;
    *(_BYTE *)(((v1 + 2800) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 19040));
    v6 = (_DWORD *)(((v1 + 19040) >> 3) + 2147450880);
    *v6 = -117901064;
    v6[1] = -117901064;
    *(_BYTE *)(((v1 + 2784) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18944));
    v7 = (_DWORD *)(((v1 + 18944) >> 3) + 2147450880);
    *v7 = -117901064;
    v7[1] = -117901064;
    *(_BYTE *)(((v1 + 2768) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18848));
    v8 = (_DWORD *)(((v1 + 18848) >> 3) + 2147450880);
    *v8 = -117901064;
    v8[1] = -117901064;
    *(_BYTE *)(((v1 + 2752) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18752));
    v9 = (_DWORD *)(((v1 + 18752) >> 3) + 2147450880);
    *v9 = -117901064;
    v9[1] = -117901064;
    *(_BYTE *)(((v1 + 2736) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18656));
    v10 = (_DWORD *)(((v1 + 18656) >> 3) + 2147450880);
    *v10 = -117901064;
    v10[1] = -117901064;
    *(_BYTE *)(((v1 + 2720) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18560));
    v11 = (_DWORD *)(((v1 + 18560) >> 3) + 2147450880);
    *v11 = -117901064;
    v11[1] = -117901064;
    *(_BYTE *)(((v1 + 2704) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18464));
    v12 = (_DWORD *)(((v1 + 18464) >> 3) + 2147450880);
    *v12 = -117901064;
    v12[1] = -117901064;
    *(_BYTE *)(((v1 + 2688) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18368));
    v13 = (_DWORD *)(((v1 + 18368) >> 3) + 2147450880);
    *v13 = -117901064;
    v13[1] = -117901064;
    *(_BYTE *)(((v1 + 2672) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18272));
    v14 = (_DWORD *)(((v1 + 18272) >> 3) + 2147450880);
    *v14 = -117901064;
    v14[1] = -117901064;
    *(_BYTE *)(((v1 + 2656) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18176));
    v15 = (_DWORD *)(((v1 + 18176) >> 3) + 2147450880);
    *v15 = -117901064;
    v15[1] = -117901064;
    *(_BYTE *)(((v1 + 2640) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 18080));
    v16 = (_DWORD *)(((v1 + 18080) >> 3) + 2147450880);
    *v16 = -117901064;
    v16[1] = -117901064;
    *(_BYTE *)(((v1 + 2624) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17984));
    v17 = (_DWORD *)(((v1 + 17984) >> 3) + 2147450880);
    *v17 = -117901064;
    v17[1] = -117901064;
    *(_BYTE *)(((v1 + 2608) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17888));
    v18 = (_DWORD *)(((v1 + 17888) >> 3) + 2147450880);
    *v18 = -117901064;
    v18[1] = -117901064;
    *(_BYTE *)(((v1 + 2592) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17792));
    v19 = (_DWORD *)(((v1 + 17792) >> 3) + 2147450880);
    *v19 = -117901064;
    v19[1] = -117901064;
    *(_BYTE *)(((v1 + 2576) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17696));
    v20 = (_DWORD *)(((v1 + 17696) >> 3) + 2147450880);
    *v20 = -117901064;
    v20[1] = -117901064;
    *(_BYTE *)(((v1 + 2560) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17600));
    v21 = (_DWORD *)(((v1 + 17600) >> 3) + 2147450880);
    *v21 = -117901064;
    v21[1] = -117901064;
    *(_BYTE *)(((v1 + 2544) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17504));
    v22 = (_DWORD *)(((v1 + 17504) >> 3) + 2147450880);
    *v22 = -117901064;
    v22[1] = -117901064;
    *(_BYTE *)(((v1 + 2528) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17408));
    v23 = (_DWORD *)(((v1 + 17408) >> 3) + 2147450880);
    *v23 = -117901064;
    v23[1] = -117901064;
    *(_BYTE *)(((v1 + 2512) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17312));
    v24 = (_DWORD *)(((v1 + 17312) >> 3) + 2147450880);
    *v24 = -117901064;
    v24[1] = -117901064;
    *(_BYTE *)(((v1 + 2496) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17216));
    v25 = (_DWORD *)(((v1 + 17216) >> 3) + 2147450880);
    *v25 = -117901064;
    v25[1] = -117901064;
    *(_BYTE *)(((v1 + 2480) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17120));
    v26 = (_DWORD *)(((v1 + 17120) >> 3) + 2147450880);
    *v26 = -117901064;
    v26[1] = -117901064;
    *(_BYTE *)(((v1 + 2464) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 17024));
    v27 = (_DWORD *)(((v1 + 17024) >> 3) + 2147450880);
    *v27 = -117901064;
    v27[1] = -117901064;
    *(_BYTE *)(((v1 + 2448) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16928));
    v28 = (_DWORD *)(((v1 + 16928) >> 3) + 2147450880);
    *v28 = -117901064;
    v28[1] = -117901064;
    *(_BYTE *)(((v1 + 2432) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16832));
    v29 = (_DWORD *)(((v1 + 16832) >> 3) + 2147450880);
    *v29 = -117901064;
    v29[1] = -117901064;
    *(_BYTE *)(((v1 + 2416) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16736));
    v30 = (_DWORD *)(((v1 + 16736) >> 3) + 2147450880);
    *v30 = -117901064;
    v30[1] = -117901064;
    *(_BYTE *)(((v1 + 2400) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16640));
    v31 = (_DWORD *)(((v1 + 16640) >> 3) + 2147450880);
    *v31 = -117901064;
    v31[1] = -117901064;
    *(_BYTE *)(((v1 + 2384) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16544));
    v32 = (_DWORD *)(((v1 + 16544) >> 3) + 2147450880);
    *v32 = -117901064;
    v32[1] = -117901064;
    *(_BYTE *)(((v1 + 2368) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16448));
    v33 = (_DWORD *)(((v1 + 16448) >> 3) + 2147450880);
    *v33 = -117901064;
    v33[1] = -117901064;
    *(_BYTE *)(((v1 + 2352) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16352));
    v34 = (_DWORD *)(((v1 + 16352) >> 3) + 2147450880);
    *v34 = -117901064;
    v34[1] = -117901064;
    *(_BYTE *)(((v1 + 2336) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16256));
    v35 = (_DWORD *)(((v1 + 16256) >> 3) + 2147450880);
    *v35 = -117901064;
    v35[1] = -117901064;
    *(_BYTE *)(((v1 + 2320) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16160));
    v36 = (_DWORD *)(((v1 + 16160) >> 3) + 2147450880);
    *v36 = -117901064;
    v36[1] = -117901064;
    *(_BYTE *)(((v1 + 2304) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 16064));
    v37 = (_DWORD *)(((v1 + 16064) >> 3) + 2147450880);
    *v37 = -117901064;
    v37[1] = -117901064;
    *(_BYTE *)(((v1 + 2288) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15968));
    v38 = (_DWORD *)(((v1 + 15968) >> 3) + 2147450880);
    *v38 = -117901064;
    v38[1] = -117901064;
    *(_BYTE *)(((v1 + 2272) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15872));
    v39 = (_DWORD *)(((v1 + 15872) >> 3) + 2147450880);
    *v39 = -117901064;
    v39[1] = -117901064;
    *(_BYTE *)(((v1 + 2256) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15776));
    v40 = (_DWORD *)(((v1 + 15776) >> 3) + 2147450880);
    *v40 = -117901064;
    v40[1] = -117901064;
    *(_BYTE *)(((v1 + 2240) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15680));
    v41 = (_DWORD *)(((v1 + 15680) >> 3) + 2147450880);
    *v41 = -117901064;
    v41[1] = -117901064;
    *(_BYTE *)(((v1 + 2224) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15584));
    v42 = (_DWORD *)(((v1 + 15584) >> 3) + 2147450880);
    *v42 = -117901064;
    v42[1] = -117901064;
    *(_BYTE *)(((v1 + 2208) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15488));
    v43 = (_DWORD *)(((v1 + 15488) >> 3) + 2147450880);
    *v43 = -117901064;
    v43[1] = -117901064;
    *(_BYTE *)(((v1 + 2192) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15392));
    v44 = (_DWORD *)(((v1 + 15392) >> 3) + 2147450880);
    *v44 = -117901064;
    v44[1] = -117901064;
    *(_BYTE *)(((v1 + 2176) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15296));
    v45 = (_DWORD *)(((v1 + 15296) >> 3) + 2147450880);
    *v45 = -117901064;
    v45[1] = -117901064;
    *(_BYTE *)(((v1 + 2160) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15200));
    v46 = (_DWORD *)(((v1 + 15200) >> 3) + 2147450880);
    *v46 = -117901064;
    v46[1] = -117901064;
    *(_BYTE *)(((v1 + 2144) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15104));
    v47 = (_DWORD *)(((v1 + 15104) >> 3) + 2147450880);
    *v47 = -117901064;
    v47[1] = -117901064;
    *(_BYTE *)(((v1 + 2128) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 15008));
    v48 = (_DWORD *)(((v1 + 15008) >> 3) + 2147450880);
    *v48 = -117901064;
    v48[1] = -117901064;
    *(_BYTE *)(((v1 + 2112) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14912));
    v49 = (_DWORD *)(((v1 + 14912) >> 3) + 2147450880);
    *v49 = -117901064;
    v49[1] = -117901064;
    *(_BYTE *)(((v1 + 2096) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14816));
    v50 = (_DWORD *)(((v1 + 14816) >> 3) + 2147450880);
    *v50 = -117901064;
    v50[1] = -117901064;
    *(_BYTE *)(((v1 + 2080) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14720));
    v51 = (_DWORD *)(((v1 + 14720) >> 3) + 2147450880);
    *v51 = -117901064;
    v51[1] = -117901064;
    *(_BYTE *)(((v1 + 2064) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14624));
    v52 = (_DWORD *)(((v1 + 14624) >> 3) + 2147450880);
    *v52 = -117901064;
    v52[1] = -117901064;
    *(_BYTE *)(((v1 + 2048) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14528));
    v53 = (_DWORD *)(((v1 + 14528) >> 3) + 2147450880);
    *v53 = -117901064;
    v53[1] = -117901064;
    *(_BYTE *)(((v1 + 2032) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14432));
    v54 = (_DWORD *)(((v1 + 14432) >> 3) + 2147450880);
    *v54 = -117901064;
    v54[1] = -117901064;
    *(_BYTE *)(((v1 + 2016) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14336));
    v55 = (_DWORD *)(((v1 + 14336) >> 3) + 2147450880);
    *v55 = -117901064;
    v55[1] = -117901064;
    *(_BYTE *)(((v1 + 2000) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14240));
    v56 = (_DWORD *)(((v1 + 14240) >> 3) + 2147450880);
    *v56 = -117901064;
    v56[1] = -117901064;
    *(_BYTE *)(((v1 + 1984) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14144));
    v57 = (_DWORD *)(((v1 + 14144) >> 3) + 2147450880);
    *v57 = -117901064;
    v57[1] = -117901064;
    *(_BYTE *)(((v1 + 1968) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 14048));
    v58 = (_DWORD *)(((v1 + 14048) >> 3) + 2147450880);
    *v58 = -117901064;
    v58[1] = -117901064;
    *(_BYTE *)(((v1 + 1952) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13952));
    v59 = (_DWORD *)(((v1 + 13952) >> 3) + 2147450880);
    *v59 = -117901064;
    v59[1] = -117901064;
    *(_BYTE *)(((v1 + 1936) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13856));
    v60 = (_DWORD *)(((v1 + 13856) >> 3) + 2147450880);
    *v60 = -117901064;
    v60[1] = -117901064;
    *(_BYTE *)(((v1 + 1920) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13760));
    v61 = (_DWORD *)(((v1 + 13760) >> 3) + 2147450880);
    *v61 = -117901064;
    v61[1] = -117901064;
    *(_BYTE *)(((v1 + 1904) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13664));
    v62 = (_DWORD *)(((v1 + 13664) >> 3) + 2147450880);
    *v62 = -117901064;
    v62[1] = -117901064;
    *(_BYTE *)(((v1 + 1888) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13568));
    v63 = (_DWORD *)(((v1 + 13568) >> 3) + 2147450880);
    *v63 = -117901064;
    v63[1] = -117901064;
    *(_BYTE *)(((v1 + 1872) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13472));
    v64 = (_DWORD *)(((v1 + 13472) >> 3) + 2147450880);
    *v64 = -117901064;
    v64[1] = -117901064;
    *(_BYTE *)(((v1 + 1856) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13376));
    v65 = (_DWORD *)(((v1 + 13376) >> 3) + 2147450880);
    *v65 = -117901064;
    v65[1] = -117901064;
    *(_BYTE *)(((v1 + 1840) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13280));
    v66 = (_DWORD *)(((v1 + 13280) >> 3) + 2147450880);
    *v66 = -117901064;
    v66[1] = -117901064;
    *(_BYTE *)(((v1 + 1824) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13184));
    v67 = (_DWORD *)(((v1 + 13184) >> 3) + 2147450880);
    *v67 = -117901064;
    v67[1] = -117901064;
    *(_BYTE *)(((v1 + 1808) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 13088));
    v68 = (_DWORD *)(((v1 + 13088) >> 3) + 2147450880);
    *v68 = -117901064;
    v68[1] = -117901064;
    *(_BYTE *)(((v1 + 1792) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12992));
    v69 = (_DWORD *)(((v1 + 12992) >> 3) + 2147450880);
    *v69 = -117901064;
    v69[1] = -117901064;
    *(_BYTE *)(((v1 + 1776) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12896));
    v70 = (_DWORD *)(((v1 + 12896) >> 3) + 2147450880);
    *v70 = -117901064;
    v70[1] = -117901064;
    *(_BYTE *)(((v1 + 1760) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12800));
    v71 = (_DWORD *)(((v1 + 12800) >> 3) + 2147450880);
    *v71 = -117901064;
    v71[1] = -117901064;
    *(_BYTE *)(((v1 + 1744) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12704));
    v72 = (_DWORD *)(((v1 + 12704) >> 3) + 2147450880);
    *v72 = -117901064;
    v72[1] = -117901064;
    *(_BYTE *)(((v1 + 1728) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12608));
    v73 = (_DWORD *)(((v1 + 12608) >> 3) + 2147450880);
    *v73 = -117901064;
    v73[1] = -117901064;
    *(_BYTE *)(((v1 + 1712) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12512));
    v74 = (_DWORD *)(((v1 + 12512) >> 3) + 2147450880);
    *v74 = -117901064;
    v74[1] = -117901064;
    *(_BYTE *)(((v1 + 1696) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12416));
    v75 = (_DWORD *)(((v1 + 12416) >> 3) + 2147450880);
    *v75 = -117901064;
    v75[1] = -117901064;
    *(_BYTE *)(((v1 + 1680) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12320));
    v76 = (_DWORD *)(((v1 + 12320) >> 3) + 2147450880);
    *v76 = -117901064;
    v76[1] = -117901064;
    *(_BYTE *)(((v1 + 1664) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12224));
    v77 = (_DWORD *)(((v1 + 12224) >> 3) + 2147450880);
    *v77 = -117901064;
    v77[1] = -117901064;
    *(_BYTE *)(((v1 + 1648) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12128));
    v78 = (_DWORD *)(((v1 + 12128) >> 3) + 2147450880);
    *v78 = -117901064;
    v78[1] = -117901064;
    *(_BYTE *)(((v1 + 1632) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 12032));
    v79 = (_DWORD *)(((v1 + 12032) >> 3) + 2147450880);
    *v79 = -117901064;
    v79[1] = -117901064;
    *(_BYTE *)(((v1 + 1616) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11936));
    v80 = (_DWORD *)(((v1 + 11936) >> 3) + 2147450880);
    *v80 = -117901064;
    v80[1] = -117901064;
    *(_BYTE *)(((v1 + 1600) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11840));
    v81 = (_DWORD *)(((v1 + 11840) >> 3) + 2147450880);
    *v81 = -117901064;
    v81[1] = -117901064;
    *(_BYTE *)(((v1 + 1584) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11744));
    v82 = (_DWORD *)(((v1 + 11744) >> 3) + 2147450880);
    *v82 = -117901064;
    v82[1] = -117901064;
    *(_BYTE *)(((v1 + 1568) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11648));
    v83 = (_DWORD *)(((v1 + 11648) >> 3) + 2147450880);
    *v83 = -117901064;
    v83[1] = -117901064;
    *(_BYTE *)(((v1 + 1552) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11552));
    v84 = (_DWORD *)(((v1 + 11552) >> 3) + 2147450880);
    *v84 = -117901064;
    v84[1] = -117901064;
    *(_BYTE *)(((v1 + 1536) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11456));
    v85 = (_DWORD *)(((v1 + 11456) >> 3) + 2147450880);
    *v85 = -117901064;
    v85[1] = -117901064;
    *(_BYTE *)(((v1 + 1520) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11360));
    v86 = (_DWORD *)(((v1 + 11360) >> 3) + 2147450880);
    *v86 = -117901064;
    v86[1] = -117901064;
    *(_BYTE *)(((v1 + 1504) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11264));
    v87 = (_DWORD *)(((v1 + 11264) >> 3) + 2147450880);
    *v87 = -117901064;
    v87[1] = -117901064;
    *(_BYTE *)(((v1 + 1488) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11168));
    v88 = (_DWORD *)(((v1 + 11168) >> 3) + 2147450880);
    *v88 = -117901064;
    v88[1] = -117901064;
    *(_BYTE *)(((v1 + 1472) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 11072));
    v89 = (_DWORD *)(((v1 + 11072) >> 3) + 2147450880);
    *v89 = -117901064;
    v89[1] = -117901064;
    *(_BYTE *)(((v1 + 1456) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10976));
    v90 = (_DWORD *)(((v1 + 10976) >> 3) + 2147450880);
    *v90 = -117901064;
    v90[1] = -117901064;
    *(_BYTE *)(((v1 + 1440) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10880));
    v91 = (_DWORD *)(((v1 + 10880) >> 3) + 2147450880);
    *v91 = -117901064;
    v91[1] = -117901064;
    *(_BYTE *)(((v1 + 1424) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10784));
    v92 = (_DWORD *)(((v1 + 10784) >> 3) + 2147450880);
    *v92 = -117901064;
    v92[1] = -117901064;
    *(_BYTE *)(((v1 + 1408) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10688));
    v93 = (_DWORD *)(((v1 + 10688) >> 3) + 2147450880);
    *v93 = -117901064;
    v93[1] = -117901064;
    *(_BYTE *)(((v1 + 1392) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10592));
    v94 = (_DWORD *)(((v1 + 10592) >> 3) + 2147450880);
    *v94 = -117901064;
    v94[1] = -117901064;
    *(_BYTE *)(((v1 + 1376) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10496));
    v95 = (_DWORD *)(((v1 + 10496) >> 3) + 2147450880);
    *v95 = -117901064;
    v95[1] = -117901064;
    *(_BYTE *)(((v1 + 1360) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10400));
    v96 = (_DWORD *)(((v1 + 10400) >> 3) + 2147450880);
    *v96 = -117901064;
    v96[1] = -117901064;
    *(_BYTE *)(((v1 + 1344) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10304));
    v97 = (_DWORD *)(((v1 + 10304) >> 3) + 2147450880);
    *v97 = -117901064;
    v97[1] = -117901064;
    *(_BYTE *)(((v1 + 1328) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10208));
    v98 = (_DWORD *)(((v1 + 10208) >> 3) + 2147450880);
    *v98 = -117901064;
    v98[1] = -117901064;
    *(_BYTE *)(((v1 + 1312) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10112));
    v99 = (_DWORD *)(((v1 + 10112) >> 3) + 2147450880);
    *v99 = -117901064;
    v99[1] = -117901064;
    *(_BYTE *)(((v1 + 1296) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 10016));
    v100 = (_DWORD *)(((v1 + 10016) >> 3) + 2147450880);
    *v100 = -117901064;
    v100[1] = -117901064;
    *(_BYTE *)(((v1 + 1280) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9920));
    v101 = (_DWORD *)(((v1 + 9920) >> 3) + 2147450880);
    *v101 = -117901064;
    v101[1] = -117901064;
    *(_BYTE *)(((v1 + 1264) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9824));
    v102 = (_DWORD *)(((v1 + 9824) >> 3) + 2147450880);
    *v102 = -117901064;
    v102[1] = -117901064;
    *(_BYTE *)(((v1 + 1248) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9728));
    v103 = (_DWORD *)(((v1 + 9728) >> 3) + 2147450880);
    *v103 = -117901064;
    v103[1] = -117901064;
    *(_BYTE *)(((v1 + 1232) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9632));
    v104 = (_DWORD *)(((v1 + 9632) >> 3) + 2147450880);
    *v104 = -117901064;
    v104[1] = -117901064;
    *(_BYTE *)(((v1 + 1216) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9536));
    v105 = (_DWORD *)(((v1 + 9536) >> 3) + 2147450880);
    *v105 = -117901064;
    v105[1] = -117901064;
    *(_BYTE *)(((v1 + 1200) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9440));
    v106 = (_DWORD *)(((v1 + 9440) >> 3) + 2147450880);
    *v106 = -117901064;
    v106[1] = -117901064;
    *(_BYTE *)(((v1 + 1184) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9344));
    v107 = (_DWORD *)(((v1 + 9344) >> 3) + 2147450880);
    *v107 = -117901064;
    v107[1] = -117901064;
    *(_BYTE *)(((v1 + 1168) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9248));
    v108 = (_DWORD *)(((v1 + 9248) >> 3) + 2147450880);
    *v108 = -117901064;
    v108[1] = -117901064;
    *(_BYTE *)(((v1 + 1152) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9152));
    v109 = (_DWORD *)(((v1 + 9152) >> 3) + 2147450880);
    *v109 = -117901064;
    v109[1] = -117901064;
    *(_BYTE *)(((v1 + 1136) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 9056));
    v110 = (_DWORD *)(((v1 + 9056) >> 3) + 2147450880);
    *v110 = -117901064;
    v110[1] = -117901064;
    *(_BYTE *)(((v1 + 1120) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8960));
    v111 = (_DWORD *)(((v1 + 8960) >> 3) + 2147450880);
    *v111 = -117901064;
    v111[1] = -117901064;
    *(_BYTE *)(((v1 + 1104) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8864));
    v112 = (_DWORD *)(((v1 + 8864) >> 3) + 2147450880);
    *v112 = -117901064;
    v112[1] = -117901064;
    *(_BYTE *)(((v1 + 1088) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8768));
    v113 = (_DWORD *)(((v1 + 8768) >> 3) + 2147450880);
    *v113 = -117901064;
    v113[1] = -117901064;
    *(_BYTE *)(((v1 + 1072) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8672));
    v114 = (_DWORD *)(((v1 + 8672) >> 3) + 2147450880);
    *v114 = -117901064;
    v114[1] = -117901064;
    *(_BYTE *)(((v1 + 1056) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8576));
    v115 = (_DWORD *)(((v1 + 8576) >> 3) + 2147450880);
    *v115 = -117901064;
    v115[1] = -117901064;
    *(_BYTE *)(((v1 + 1040) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8480));
    v116 = (_DWORD *)(((v1 + 8480) >> 3) + 2147450880);
    *v116 = -117901064;
    v116[1] = -117901064;
    *(_BYTE *)(((v1 + 1024) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8384));
    v117 = (_DWORD *)(((v1 + 8384) >> 3) + 2147450880);
    *v117 = -117901064;
    v117[1] = -117901064;
    *(_BYTE *)(((v1 + 1008) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8288));
    v118 = (_DWORD *)(((v1 + 8288) >> 3) + 2147450880);
    *v118 = -117901064;
    v118[1] = -117901064;
    *(_BYTE *)(((v1 + 992) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 0x2000));
    v119 = (_DWORD *)(((v1 + 0x2000) >> 3) + 2147450880);
    *v119 = -117901064;
    v119[1] = -117901064;
    *(_BYTE *)(((v1 + 976) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8096));
    v120 = (_DWORD *)(((v1 + 8096) >> 3) + 2147450880);
    *v120 = -117901064;
    v120[1] = -117901064;
    *(_BYTE *)(((v1 + 960) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 8000));
    v121 = (_DWORD *)(((v1 + 8000) >> 3) + 2147450880);
    *v121 = -117901064;
    v121[1] = -117901064;
    *(_BYTE *)(((v1 + 944) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7904));
    v122 = (_DWORD *)(((v1 + 7904) >> 3) + 2147450880);
    *v122 = -117901064;
    v122[1] = -117901064;
    *(_BYTE *)(((v1 + 928) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7808));
    v123 = (_DWORD *)(((v1 + 7808) >> 3) + 2147450880);
    *v123 = -117901064;
    v123[1] = -117901064;
    *(_BYTE *)(((v1 + 912) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7712));
    v124 = (_DWORD *)(((v1 + 7712) >> 3) + 2147450880);
    *v124 = -117901064;
    v124[1] = -117901064;
    *(_BYTE *)(((v1 + 896) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7616));
    v125 = (_DWORD *)(((v1 + 7616) >> 3) + 2147450880);
    *v125 = -117901064;
    v125[1] = -117901064;
    *(_BYTE *)(((v1 + 880) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7520));
    v126 = (_DWORD *)(((v1 + 7520) >> 3) + 2147450880);
    *v126 = -117901064;
    v126[1] = -117901064;
    *(_BYTE *)(((v1 + 864) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7424));
    v127 = (_DWORD *)(((v1 + 7424) >> 3) + 2147450880);
    *v127 = -117901064;
    v127[1] = -117901064;
    *(_BYTE *)(((v1 + 848) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7328));
    v128 = (_DWORD *)(((v1 + 7328) >> 3) + 2147450880);
    *v128 = -117901064;
    v128[1] = -117901064;
    *(_BYTE *)(((v1 + 832) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7232));
    v129 = (_DWORD *)(((v1 + 7232) >> 3) + 2147450880);
    *v129 = -117901064;
    v129[1] = -117901064;
    *(_BYTE *)(((v1 + 816) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7136));
    v130 = (_DWORD *)(((v1 + 7136) >> 3) + 2147450880);
    *v130 = -117901064;
    v130[1] = -117901064;
    *(_BYTE *)(((v1 + 800) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 7040));
    v131 = (_DWORD *)(((v1 + 7040) >> 3) + 2147450880);
    *v131 = -117901064;
    v131[1] = -117901064;
    *(_BYTE *)(((v1 + 784) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6944));
    v132 = (_DWORD *)(((v1 + 6944) >> 3) + 2147450880);
    *v132 = -117901064;
    v132[1] = -117901064;
    *(_BYTE *)(((v1 + 768) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6848));
    v133 = (_DWORD *)(((v1 + 6848) >> 3) + 2147450880);
    *v133 = -117901064;
    v133[1] = -117901064;
    *(_BYTE *)(((v1 + 752) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6752));
    v134 = (_DWORD *)(((v1 + 6752) >> 3) + 2147450880);
    *v134 = -117901064;
    v134[1] = -117901064;
    *(_BYTE *)(((v1 + 736) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6656));
    v135 = (_DWORD *)(((v1 + 6656) >> 3) + 2147450880);
    *v135 = -117901064;
    v135[1] = -117901064;
    *(_BYTE *)(((v1 + 720) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6560));
    v136 = (_DWORD *)(((v1 + 6560) >> 3) + 2147450880);
    *v136 = -117901064;
    v136[1] = -117901064;
    *(_BYTE *)(((v1 + 704) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6464));
    v137 = (_DWORD *)(((v1 + 6464) >> 3) + 2147450880);
    *v137 = -117901064;
    v137[1] = -117901064;
    *(_BYTE *)(((v1 + 688) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6368));
    v138 = (_DWORD *)(((v1 + 6368) >> 3) + 2147450880);
    *v138 = -117901064;
    v138[1] = -117901064;
    *(_BYTE *)(((v1 + 672) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6272));
    v139 = (_DWORD *)(((v1 + 6272) >> 3) + 2147450880);
    *v139 = -117901064;
    v139[1] = -117901064;
    *(_BYTE *)(((v1 + 656) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6176));
    v140 = (_DWORD *)(((v1 + 6176) >> 3) + 2147450880);
    *v140 = -117901064;
    v140[1] = -117901064;
    *(_BYTE *)(((v1 + 640) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 6080));
    v141 = (_DWORD *)(((v1 + 6080) >> 3) + 2147450880);
    *v141 = -117901064;
    v141[1] = -117901064;
    *(_BYTE *)(((v1 + 624) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5984));
    v142 = (_DWORD *)(((v1 + 5984) >> 3) + 2147450880);
    *v142 = -117901064;
    v142[1] = -117901064;
    *(_BYTE *)(((v1 + 608) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5888));
    v143 = (_DWORD *)(((v1 + 5888) >> 3) + 2147450880);
    *v143 = -117901064;
    v143[1] = -117901064;
    *(_BYTE *)(((v1 + 592) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5792));
    v144 = (_DWORD *)(((v1 + 5792) >> 3) + 2147450880);
    *v144 = -117901064;
    v144[1] = -117901064;
    *(_BYTE *)(((v1 + 576) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5696));
    v145 = (_DWORD *)(((v1 + 5696) >> 3) + 2147450880);
    *v145 = -117901064;
    v145[1] = -117901064;
    *(_BYTE *)(((v1 + 560) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5600));
    v146 = (_DWORD *)(((v1 + 5600) >> 3) + 2147450880);
    *v146 = -117901064;
    v146[1] = -117901064;
    *(_BYTE *)(((v1 + 544) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5504));
    v147 = (_DWORD *)(((v1 + 5504) >> 3) + 2147450880);
    *v147 = -117901064;
    v147[1] = -117901064;
    *(_BYTE *)(((v1 + 528) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5408));
    v148 = (_DWORD *)(((v1 + 5408) >> 3) + 2147450880);
    *v148 = -117901064;
    v148[1] = -117901064;
    *(_BYTE *)(((v1 + 512) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5312));
    v149 = (_DWORD *)(((v1 + 5312) >> 3) + 2147450880);
    *v149 = -117901064;
    v149[1] = -117901064;
    *(_BYTE *)(((v1 + 496) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5216));
    v150 = (_DWORD *)(((v1 + 5216) >> 3) + 2147450880);
    *v150 = -117901064;
    v150[1] = -117901064;
    *(_BYTE *)(((v1 + 480) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5120));
    v151 = (_DWORD *)(((v1 + 5120) >> 3) + 2147450880);
    *v151 = -117901064;
    v151[1] = -117901064;
    *(_BYTE *)(((v1 + 464) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 5024));
    v152 = (_DWORD *)(((v1 + 5024) >> 3) + 2147450880);
    *v152 = -117901064;
    v152[1] = -117901064;
    *(_BYTE *)(((v1 + 448) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4928));
    v153 = (_DWORD *)(((v1 + 4928) >> 3) + 2147450880);
    *v153 = -117901064;
    v153[1] = -117901064;
    *(_BYTE *)(((v1 + 432) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4832));
    v154 = (_DWORD *)(((v1 + 4832) >> 3) + 2147450880);
    *v154 = -117901064;
    v154[1] = -117901064;
    *(_BYTE *)(((v1 + 416) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4736));
    v155 = (_DWORD *)(((v1 + 4736) >> 3) + 2147450880);
    *v155 = -117901064;
    v155[1] = -117901064;
    *(_BYTE *)(((v1 + 400) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4640));
    v156 = (_DWORD *)(((v1 + 4640) >> 3) + 2147450880);
    *v156 = -117901064;
    v156[1] = -117901064;
    *(_BYTE *)(((v1 + 384) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4544));
    v157 = (_DWORD *)(((v1 + 4544) >> 3) + 2147450880);
    *v157 = -117901064;
    v157[1] = -117901064;
    *(_BYTE *)(((v1 + 368) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4448));
    v158 = (_DWORD *)(((v1 + 4448) >> 3) + 2147450880);
    *v158 = -117901064;
    v158[1] = -117901064;
    *(_BYTE *)(((v1 + 352) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4352));
    v159 = (_DWORD *)(((v1 + 4352) >> 3) + 2147450880);
    *v159 = -117901064;
    v159[1] = -117901064;
    *(_BYTE *)(((v1 + 336) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4256));
    v160 = (_DWORD *)(((v1 + 4256) >> 3) + 2147450880);
    *v160 = -117901064;
    v160[1] = -117901064;
    *(_BYTE *)(((v1 + 320) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4160));
    v161 = (_DWORD *)(((v1 + 4160) >> 3) + 2147450880);
    *v161 = -117901064;
    v161[1] = -117901064;
    *(_BYTE *)(((v1 + 304) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 4064));
    v162 = (_DWORD *)(((v1 + 4064) >> 3) + 2147450880);
    *v162 = -117901064;
    v162[1] = -117901064;
    *(_BYTE *)(((v1 + 288) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3968));
    v163 = (_DWORD *)(((v1 + 3968) >> 3) + 2147450880);
    *v163 = -117901064;
    v163[1] = -117901064;
    *(_BYTE *)(((v1 + 272) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3872));
    v164 = (_DWORD *)(((v1 + 3872) >> 3) + 2147450880);
    *v164 = -117901064;
    v164[1] = -117901064;
    *(_BYTE *)(((v1 + 256) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3776));
    v165 = (_DWORD *)(((v1 + 3776) >> 3) + 2147450880);
    *v165 = -117901064;
    v165[1] = -117901064;
    *(_BYTE *)(((v1 + 240) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3680));
    v166 = (_DWORD *)(((v1 + 3680) >> 3) + 2147450880);
    *v166 = -117901064;
    v166[1] = -117901064;
    *(_BYTE *)(((v1 + 224) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3584));
    v167 = (_DWORD *)(((v1 + 3584) >> 3) + 2147450880);
    *v167 = -117901064;
    v167[1] = -117901064;
    *(_BYTE *)(((v1 + 208) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3488));
    v168 = (_DWORD *)(((v1 + 3488) >> 3) + 2147450880);
    *v168 = -117901064;
    v168[1] = -117901064;
    *(_BYTE *)(((v1 + 192) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3392));
    v169 = (_DWORD *)(((v1 + 3392) >> 3) + 2147450880);
    *v169 = -117901064;
    v169[1] = -117901064;
    *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3296));
    v170 = (_DWORD *)(((v1 + 3296) >> 3) + 2147450880);
    *v170 = -117901064;
    v170[1] = -117901064;
    *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3200));
    v171 = (_DWORD *)(((v1 + 3200) >> 3) + 2147450880);
    *v171 = -117901064;
    v171[1] = -117901064;
    *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3104));
    v172 = (_DWORD *)(((v1 + 3104) >> 3) + 2147450880);
    *v172 = -117901064;
    v172[1] = -117901064;
    *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 3008));
    v173 = (_DWORD *)(((v1 + 3008) >> 3) + 2147450880);
    *v173 = -117901064;
    v173[1] = -117901064;
    *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2912));
    v174 = (_DWORD *)(((v1 + 2912) >> 3) + 2147450880);
    *v174 = -117901064;
    v174[1] = -117901064;
    *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 2816));
  }
  if ( v176 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8F80) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 3976) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_9(v1, 31808LL, v176);
  }
  return &data::getNewActivityActionTypeEnumMap[abi:cxx11](void)::m;
};

// Line 1450: range 000000000EEBE40B-000000000EEBE77E
const char *__fastcall data::enumValToStr(data::NewActivityDropType e, __int64 a2)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // al
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdi
  int v8; // ecx
  char v9; // al
  const char *result; // rax
  std::_Rb_tree_const_iterator<std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > >::pointer v11; // rax
  const std::map<data::NewActivityDropType,std::pair<std::string,std::string >> *map; // [rsp+18h] [rbp-E8h]
  char v13[224]; // [rsp+20h] [rbp-E0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 9 <unknown> 48 4 6 e:1449 64 8 9 iter:1452 96 8 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumValToStr;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862725] = -202116109;
  *(_DWORD *)(v2 + 48) = e;
  map = data::getNewActivityDropTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, a2);
  *(std::map<data::NewActivityDropType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityDropType,std::pair<std::string,std::string>>::find(map, (const std::map<data::NewActivityDropType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::map<data::NewActivityDropType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityDropType,std::pair<std::string,std::string>>::end(map);
  v5 = std::operator==(
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumValToStr",
      1455);
    v6 = "invalid e:";
    v7 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[11])"invalid e:");
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = 4;
    v8 = *(_DWORD *)(v2 + 48);
    v9 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
    if ( v9 != 0 && v9 <= 3 )
    {
      v7 = (common::milog::MiLogStream *)(v2 + 32);
      LOBYTE(v6) = v9 != 0;
      __asan_report_store4(v2 + 32, v6);
    }
    *(_DWORD *)(v2 + 32) = v8;
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 32));
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = "INVALID_NewActivityDropType";
  }
  else
  {
    v11 = std::_Rb_tree_const_iterator<std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > > *const)(v2 + 64));
    result = (const char *)std::string::c_str(&v11->second.second);
  }
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1462: range 000000000EEBE77F-000000000EEBED37
__int64 __fastcall data::enumNameToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  const char *v6; // rsi
  char *v7; // rsi
  bool v8; // al
  common::milog::MiLogStream *v9; // rax
  std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityDropType>,false,true>::pointer v10; // rax
  data::NewActivityDropType second; // ecx
  char v12; // dl
  const std::unordered_map<std::string,data::NewActivityDropType> *m; // [rsp+18h] [rbp-188h]
  char v15[384]; // [rsp+20h] [rbp-180h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "7 48 1 9 <unknown> 64 8 7 it:1471 96 8 9 <unknown> 128 8 6 s:1461 160 32 9 <unknown> 224 32 9 <u"
                        "nknown> 288 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumNameToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -202116109;
  *(_QWORD *)(v2 + 128) = s;
  if ( *(_QWORD *)(v2 + 128) )
  {
    m = data::getNewActivityDropTypeNameMap[abi:cxx11]();
    std::allocator<char>::allocator(v2 + 48);
    v6 = *(const char **)(v2 + 128);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      v6,
      (const std::allocator<char> *)(v2 + 48));
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 64, v6);
    *(std::unordered_map<std::string,data::NewActivityDropType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityDropType>::find(
                                                                                                m,
                                                                                                (const std::unordered_map<std::string,data::NewActivityDropType>::key_type *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 96, v2 + 224);
    *(std::unordered_map<std::string,data::NewActivityDropType>::const_iterator *)(v2 + 96) = std::unordered_map<std::string,data::NewActivityDropType>::end(m);
    v7 = (char *)(v2 + 96);
    v8 = std::__detail::operator==<std::pair<std::string const,data::NewActivityDropType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityDropType>,true> *)(v2 + 64),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityDropType>,true> *)(v2 + 96));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumNameToVal",
        1474);
      v9 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v9, (const char *const *)(v2 + 128));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v10 = std::__detail::_Node_const_iterator<std::pair<std::string const,data::NewActivityDropType>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivityDropType>,false,true> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v10->second);
      }
      second = v10->second;
      v12 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v12 != 0 && (char)((e & 7) + 3) >= v12 )
      {
        LOBYTE(v7) = v12 != 0;
        __asan_report_store4(e, v7);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumNameToVal",
      1465);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 160),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = 0xFFFFFFFFLL;
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 1483: range 000000000EEBED38-000000000EEBF9BA
__int64 __fastcall data::enumStrToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  std::pair<const std::string,data::NewActivityDropType> *i; // r14
  unsigned __int64 v7; // rax
  const char *v8; // rsi
  char *v9; // rsi
  bool v10; // al
  common::milog::MiLogStream *v11; // rax
  std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityDropType>,false,true>::pointer v12; // rax
  data::NewActivityDropType second; // ecx
  char v14; // dl
  char v16[848]; // [rsp+20h] [rbp-350h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(800LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "17 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 4 9 <unknown> 128 4 9"
                        " <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 4 9 <unknown> 208 8 7 it:15"
                        "00 240 8 9 <unknown> 272 8 6 s:1482 304 32 9 <unknown> 368 32 9 <unknown> 432 32 9 <unknown> 496"
                        " 240 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumStrToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234556927;
  v4[536862724] = -234556924;
  v4[536862725] = -234556924;
  v4[536862726] = 61956;
  v4[536862726] = -234881024;
  v4[536862727] = 62194;
  v4[536862727] = -234881024;
  v4[536862728] = 62194;
  v4[536862728] = -234881024;
  v4[536862729] = 62194;
  v4[536862730] = -219021312;
  v4[536862731] = 62194;
  v4[536862732] = -219021312;
  v4[536862733] = 62194;
  v4[536862734] = -219021312;
  v4[536862735] = 62194;
  v4[536862743] = -202116109;
  v4[536862744] = -202116109;
  *(_QWORD *)(v2 + 272) = s;
  if ( *(_QWORD *)(v2 + 272) )
  {
    if ( !(_BYTE)`guard variable for'data::enumStrToVal(char const*,data::NewActivityDropType &)::m
      && __cxa_guard_acquire(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityDropType &)::m) )
    {
      if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 112, e);
      *(_DWORD *)(v2 + 112) = 1;
      std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[10],data::NewActivityDropType,true>(
        (std::pair<const std::string,data::NewActivityDropType> *const)(v2 + 496),
        (const char (*)[10])"MonsterID",
        (data::NewActivityDropType *)(v2 + 112));
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 128, "MonsterID");
      *(_DWORD *)(v2 + 128) = 2;
      std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[8],data::NewActivityDropType,true>(
        (std::pair<const std::string,data::NewActivityDropType> *const)(v2 + 536),
        (const char (*)[8])"DropTag",
        (data::NewActivityDropType *)(v2 + 128));
      if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 144, "DropTag");
      *(_DWORD *)(v2 + 144) = 3;
      std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[11],data::NewActivityDropType,true>(
        (std::pair<const std::string,data::NewActivityDropType> *const)(v2 + 576),
        (const char (*)[11])"MonsterTag",
        (data::NewActivityDropType *)(v2 + 144));
      if ( *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 160, "MonsterTag");
      *(_DWORD *)(v2 + 160) = 4;
      std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[7],data::NewActivityDropType,true>(
        (std::pair<const std::string,data::NewActivityDropType> *const)(v2 + 616),
        (const char (*)[7])"Gather",
        (data::NewActivityDropType *)(v2 + 160));
      if ( *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 176, "Gather");
      *(_DWORD *)(v2 + 176) = 5;
      std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[13],data::NewActivityDropType,true>(
        (std::pair<const std::string,data::NewActivityDropType> *const)(v2 + 656),
        (const char (*)[13])"SubFieldDrop",
        (data::NewActivityDropType *)(v2 + 176));
      if ( *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 192, "SubFieldDrop");
      *(_DWORD *)(v2 + 192) = 6;
      std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[14],data::NewActivityDropType,true>(
        (std::pair<const std::string,data::NewActivityDropType> *const)(v2 + 696),
        (const char (*)[14])"ClimateAreaID",
        (data::NewActivityDropType *)(v2 + 192));
      std::allocator<std::pair<std::string const,data::NewActivityDropType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityDropType> > *const)(v2 + 80));
      std::unordered_map<std::string,data::NewActivityDropType>::unordered_map(
        &data::enumStrToVal(char const*,data::NewActivityDropType &)::m,
        (std::initializer_list<std::pair<const std::string,data::NewActivityDropType> >)__PAIR128__(6LL, v2 + 496),
        0LL,
        (const std::unordered_map<std::string,data::NewActivityDropType>::hasher *)(v2 + 48),
        (const std::unordered_map<std::string,data::NewActivityDropType>::key_equal *)(v2 + 64),
        (const std::unordered_map<std::string,data::NewActivityDropType>::allocator_type *)(v2 + 80));
      __cxa_guard_release(&`guard variable for'data::enumStrToVal(char const*,data::NewActivityDropType &)::m);
      __cxa_atexit(
        (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityDropType>::~unordered_map,
        &data::enumStrToVal(char const*,data::NewActivityDropType &)::m,
        &_dso_handle);
      std::allocator<std::pair<std::string const,data::NewActivityDropType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityDropType> > *const)(v2 + 80));
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
      for ( i = (std::pair<const std::string,data::NewActivityDropType> *)(v2 + 736);
            i != (std::pair<const std::string,data::NewActivityDropType> *)(v2 + 496);
            std::pair<std::string const,data::NewActivityDropType>::~pair(i) )
      {
        --i;
      }
      v7 = ((v2 + 496) >> 3) + 2147450880;
      *(_DWORD *)v7 = -117901064;
      *(_DWORD *)(v7 + 4) = -117901064;
      *(_DWORD *)(v7 + 8) = -117901064;
      *(_DWORD *)(v7 + 12) = -117901064;
      *(_DWORD *)(v7 + 16) = -117901064;
      *(_DWORD *)(v7 + 20) = -117901064;
      *(_DWORD *)(v7 + 24) = -117901064;
      *(_WORD *)(v7 + 28) = -1800;
      *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
    }
    *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 368) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    v8 = *(const char **)(v2 + 272);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 368),
      v8,
      (const std::allocator<char> *)(v2 + 96));
    if ( *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 208, v8);
    *(std::unordered_map<std::string,data::NewActivityDropType>::iterator *)(v2 + 208) = std::unordered_map<std::string,data::NewActivityDropType>::find(
                                                                                           &data::enumStrToVal(char const*,data::NewActivityDropType &)::m,
                                                                                           (const std::unordered_map<std::string,data::NewActivityDropType>::key_type *)(v2 + 368));
    std::string::~string((void *)(v2 + 368));
    *(_DWORD *)(((v2 + 368) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 240, v2 + 368);
    *(std::unordered_map<std::string,data::NewActivityDropType>::iterator *)(v2 + 240) = std::unordered_map<std::string,data::NewActivityDropType>::end(&data::enumStrToVal(char const*,data::NewActivityDropType &)::m);
    v9 = (char *)(v2 + 240);
    v10 = std::__detail::operator==<std::pair<std::string const,data::NewActivityDropType>,true>(
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityDropType>,true> *)(v2 + 208),
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityDropType>,true> *)(v2 + 240));
    *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
    if ( v10 )
    {
      *(_DWORD *)(((v2 + 432) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 432) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 463) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 80 + 31) & 7) >= *(_BYTE *)(((v2 + 463) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 432, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 432),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumStrToVal",
        1503);
      v11 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              (common::milog::MiLogStream *const)(v2 + 432),
              (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)(v2 + 272));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 432));
      LODWORD(result) = -1;
    }
    else
    {
      v12 = std::__detail::_Node_iterator<std::pair<std::string const,data::NewActivityDropType>,false,true>::operator->((const std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivityDropType>,false,true> *const)(v2 + 208));
      if ( *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v12->second);
      }
      second = v12->second;
      v14 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v14 != 0 && (char)((e & 7) + 3) >= v14 )
      {
        LOBYTE(v9) = v14 != 0;
        __asan_report_store4(e, v9);
      }
      *(_DWORD *)e = second;
      LODWORD(result) = 0;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 304) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 335) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 79) & 7) >= *(_BYTE *)(((v2 + 335) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 304, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 304),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumStrToVal",
      1486);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 304),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 304));
    LODWORD(result) = -1;
  }
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF805C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 100) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8060) = -168430091;
  }
  return (unsigned int)result;
};

// Line 1512: range 000000000EEBF9BB-000000000EEBF9D1
const char *__cdecl data::getDescription(data::NewActivityDropType e)
{
  __int64 v1; // rsi

  return data::enumValToStr(e, v1);
};

// Line 1517: range 000000000EEBF9D2-000000000EEBFB87
bool __cdecl data::isValidNewActivityDropType(uint32_t n)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  const std::map<data::NewActivityDropType,std::pair<std::string,std::string >> *v5; // rcx
  const std::map<data::NewActivityDropType,std::pair<std::string,std::string >> *v6; // rcx
  bool result; // al
  char v8[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 6 e:1518 64 8 9 <unknown> 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityDropType;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, v1);
  *(_DWORD *)(v2 + 48) = n;
  v5 = data::getNewActivityDropTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::map<data::NewActivityDropType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivityDropType,std::pair<std::string,std::string>>::end(v5);
  v6 = data::getNewActivityDropTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::map<data::NewActivityDropType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivityDropType,std::pair<std::string,std::string>>::find(v6, (const std::map<data::NewActivityDropType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  result = std::operator!=(
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1523: range 000000000EEBFB88-000000000EEBFCE9
bool __cdecl data::isValidNewActivityDropTypeName(const std::string *name)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  const std::unordered_map<std::string,data::NewActivityDropType> *v5; // rcx
  const std::unordered_map<std::string,data::NewActivityDropType> *v6; // rcx
  bool result; // al
  char v8[128]; // [rsp+10h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 9 <unknown> 64 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivityDropTypeName;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202116352;
  v5 = data::getNewActivityDropTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<std::string,data::NewActivityDropType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivityDropType>::end(v5);
  v6 = data::getNewActivityDropTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<std::string,data::NewActivityDropType>::const_iterator *)(v2 + 32) = std::unordered_map<std::string,data::NewActivityDropType>::find(
                                                                                              v6,
                                                                                              name);
  result = std::__detail::operator!=<std::pair<std::string const,data::NewActivityDropType>,true>(
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityDropType>,true> *)(v2 + 32),
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivityDropType>,true> *)(v2 + 64));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1528: range 000000000EEBFCEA-000000000EEC03F3
const std::unordered_map<std::string,data::NewActivityDropType> *__cdecl data::getNewActivityDropTypeNameMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const std::string,data::NewActivityDropType> *i; // r14
  const std::unordered_map<std::string,data::NewActivityDropType> *result; // rax
  char v6[592]; // [rsp+10h] [rbp-250h] BYREF

  v1 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_4(544LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "11 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9 "
                        "<unknown> 128 4 9 <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 280 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityDropTypeNameMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753535;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862724] = -234556924;
  v3[536862725] = -234556924;
  v3[536862734] = -218103808;
  v3[536862735] = -202116109;
  v3[536862736] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityDropTypeNameMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityDropTypeNameMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[28],data::NewActivityDropType,true>(
      (std::pair<const std::string,data::NewActivityDropType> *const)(v1 + 192),
      (const char (*)[28])"NEW_ACTIVITY_DROP_TYPE_NONE",
      (data::NewActivityDropType *)(v1 + 80));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, "NEW_ACTIVITY_DROP_TYPE_NONE");
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[34],data::NewActivityDropType,true>(
      (std::pair<const std::string,data::NewActivityDropType> *const)(v1 + 232),
      (const char (*)[34])"NEW_ACTIVITY_DROP_TYPE_MONSTER_ID",
      (data::NewActivityDropType *)(v1 + 96));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, "NEW_ACTIVITY_DROP_TYPE_MONSTER_ID");
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[32],data::NewActivityDropType,true>(
      (std::pair<const std::string,data::NewActivityDropType> *const)(v1 + 272),
      (const char (*)[32])"NEW_ACTIVITY_DROP_TYPE_DROP_TAG",
      (data::NewActivityDropType *)(v1 + 112));
    if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 128, "NEW_ACTIVITY_DROP_TYPE_DROP_TAG");
    *(_DWORD *)(v1 + 128) = 3;
    std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[35],data::NewActivityDropType,true>(
      (std::pair<const std::string,data::NewActivityDropType> *const)(v1 + 312),
      (const char (*)[35])"NEW_ACTIVITY_DROP_TYPE_MONSTER_TAG",
      (data::NewActivityDropType *)(v1 + 128));
    if ( *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 144, "NEW_ACTIVITY_DROP_TYPE_MONSTER_TAG");
    *(_DWORD *)(v1 + 144) = 4;
    std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[30],data::NewActivityDropType,true>(
      (std::pair<const std::string,data::NewActivityDropType> *const)(v1 + 352),
      (const char (*)[30])"NEW_ACTIVITY_DROP_TYPE_GATHER",
      (data::NewActivityDropType *)(v1 + 144));
    if ( *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 160, "NEW_ACTIVITY_DROP_TYPE_GATHER");
    *(_DWORD *)(v1 + 160) = 5;
    std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[38],data::NewActivityDropType,true>(
      (std::pair<const std::string,data::NewActivityDropType> *const)(v1 + 392),
      (const char (*)[38])"NEW_ACTIVITY_DROP_TYPE_SUB_FIELD_DROP",
      (data::NewActivityDropType *)(v1 + 160));
    if ( *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 176, "NEW_ACTIVITY_DROP_TYPE_SUB_FIELD_DROP");
    *(_DWORD *)(v1 + 176) = 6;
    std::pair<std::string const,data::NewActivityDropType>::pair<char const(&)[39],data::NewActivityDropType,true>(
      (std::pair<const std::string,data::NewActivityDropType> *const)(v1 + 432),
      (const char (*)[39])"NEW_ACTIVITY_DROP_TYPE_CLIMATE_AREA_ID",
      (data::NewActivityDropType *)(v1 + 176));
    std::allocator<std::pair<std::string const,data::NewActivityDropType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivityDropType> > *const)(v1 + 64));
    std::unordered_map<std::string,data::NewActivityDropType>::unordered_map(
      &data::getNewActivityDropTypeNameMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const std::string,data::NewActivityDropType> >)__PAIR128__(7LL, v1 + 192),
      0LL,
      (const std::unordered_map<std::string,data::NewActivityDropType>::hasher *)(v1 + 32),
      (const std::unordered_map<std::string,data::NewActivityDropType>::key_equal *)(v1 + 48),
      (const std::unordered_map<std::string,data::NewActivityDropType>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityDropTypeNameMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivityDropType>::~unordered_map,
      &data::getNewActivityDropTypeNameMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<std::string const,data::NewActivityDropType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivityDropType> > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const std::string,data::NewActivityDropType> *)(v1 + 472);
          i != (std::pair<const std::string,data::NewActivityDropType> *)(v1 + 192);
          std::pair<std::string const,data::NewActivityDropType>::~pair(i) )
    {
      --i;
    }
  }
  result = &data::getNewActivityDropTypeNameMap[abi:cxx11](void)::m;
  if ( v6 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8040) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8040) = -168430091;
  }
  return result;
};

// Line 1543: range 000000000EEC03F4-000000000EEC0EC7
const std::map<data::NewActivityDropType,std::pair<std::string,std::string >> *__cdecl data::getNewActivityDropTypeEnumMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *i; // r14
  _DWORD *v5; // rax
  _DWORD *v6; // rax
  _DWORD *v7; // rax
  _DWORD *v8; // rax
  _DWORD *v9; // rax
  _DWORD *v10; // rax
  char v12[1488]; // [rsp+10h] [rbp-5D0h] BYREF

  v1 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_5(1440LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "17 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9 <unknown> 128 4 9"
                        " <unknown> 144 4 9 <unknown> 160 4 9 <unknown> 176 4 9 <unknown> 192 64 9 <unknown> 288 64 9 <un"
                        "known> 384 64 9 <unknown> 480 64 9 <unknown> 576 64 9 <unknown> 672 64 9 <unknown> 768 64 9 <unk"
                        "nown> 864 504 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivityDropTypeEnumMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753551;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862724] = -234556924;
  v3[536862725] = -234556924;
  v3[536862728] = -218959118;
  v3[536862731] = -218959118;
  v3[536862734] = -218959118;
  v3[536862737] = -218959118;
  v3[536862740] = -218959118;
  v3[536862743] = -218959118;
  v3[536862746] = -218959118;
  v3[536862762] = -218103808;
  v3[536862763] = -202116109;
  v3[536862764] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivityDropTypeEnumMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivityDropTypeEnumMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string,std::string>::pair<char const(&)[1],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 192),
      (const char (*)[1])byte_1A3FEBE0,
      (const char (*)[28])"NEW_ACTIVITY_DROP_TYPE_NONE");
    std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>::pair<data::NewActivityDropType,true>(
      (std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *const)(v1 + 864),
      (data::NewActivityDropType *)(v1 + 80),
      (const std::pair<std::string,std::string > *)(v1 + 192));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, v1 + 80);
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string,std::string>::pair<char const(&)[10],char const(&)[34],true>(
      (std::pair<std::string,std::string > *const)(v1 + 288),
      (const char (*)[10])"MonsterID",
      (const char (*)[34])"NEW_ACTIVITY_DROP_TYPE_MONSTER_ID");
    std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>::pair<data::NewActivityDropType,true>(
      (std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *const)(v1 + 936),
      (data::NewActivityDropType *)(v1 + 96),
      (const std::pair<std::string,std::string > *)(v1 + 288));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, v1 + 96);
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string,std::string>::pair<char const(&)[8],char const(&)[32],true>(
      (std::pair<std::string,std::string > *const)(v1 + 384),
      (const char (*)[8])"DropTag",
      (const char (*)[32])"NEW_ACTIVITY_DROP_TYPE_DROP_TAG");
    std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>::pair<data::NewActivityDropType,true>(
      (std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *const)(v1 + 1008),
      (data::NewActivityDropType *)(v1 + 112),
      (const std::pair<std::string,std::string > *)(v1 + 384));
    if ( *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 128, v1 + 112);
    *(_DWORD *)(v1 + 128) = 3;
    std::pair<std::string,std::string>::pair<char const(&)[11],char const(&)[35],true>(
      (std::pair<std::string,std::string > *const)(v1 + 480),
      (const char (*)[11])"MonsterTag",
      (const char (*)[35])"NEW_ACTIVITY_DROP_TYPE_MONSTER_TAG");
    std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>::pair<data::NewActivityDropType,true>(
      (std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *const)(v1 + 1080),
      (data::NewActivityDropType *)(v1 + 128),
      (const std::pair<std::string,std::string > *)(v1 + 480));
    if ( *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 144, v1 + 128);
    *(_DWORD *)(v1 + 144) = 4;
    std::pair<std::string,std::string>::pair<char const(&)[7],char const(&)[30],true>(
      (std::pair<std::string,std::string > *const)(v1 + 576),
      (const char (*)[7])"Gather",
      (const char (*)[30])"NEW_ACTIVITY_DROP_TYPE_GATHER");
    std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>::pair<data::NewActivityDropType,true>(
      (std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *const)(v1 + 1152),
      (data::NewActivityDropType *)(v1 + 144),
      (const std::pair<std::string,std::string > *)(v1 + 576));
    if ( *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 160, v1 + 144);
    *(_DWORD *)(v1 + 160) = 5;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 672),
      (const char (*)[13])"SubFieldDrop",
      (const char (*)[38])"NEW_ACTIVITY_DROP_TYPE_SUB_FIELD_DROP");
    std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>::pair<data::NewActivityDropType,true>(
      (std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *const)(v1 + 1224),
      (data::NewActivityDropType *)(v1 + 160),
      (const std::pair<std::string,std::string > *)(v1 + 672));
    if ( *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 176, v1 + 160);
    *(_DWORD *)(v1 + 176) = 6;
    std::pair<std::string,std::string>::pair<char const(&)[14],char const(&)[39],true>(
      (std::pair<std::string,std::string > *const)(v1 + 768),
      (const char (*)[14])"ClimateAreaID",
      (const char (*)[39])"NEW_ACTIVITY_DROP_TYPE_CLIMATE_AREA_ID");
    std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>::pair<data::NewActivityDropType,true>(
      (std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *const)(v1 + 1296),
      (data::NewActivityDropType *)(v1 + 176),
      (const std::pair<std::string,std::string > *)(v1 + 768));
    std::allocator<std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>>::allocator((std::allocator<std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    std::map<data::NewActivityDropType,std::pair<std::string,std::string>>::map(
      &data::getNewActivityDropTypeEnumMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > >)__PAIR128__(7LL, v1 + 864),
      (const std::less<data::NewActivityDropType> *)(v1 + 48),
      (const std::map<data::NewActivityDropType,std::pair<std::string,std::string >>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivityDropTypeEnumMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::map<data::NewActivityDropType,std::pair<std::string,std::string>>::~map,
      &data::getNewActivityDropTypeEnumMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>>::~allocator((std::allocator<std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *)(v1 + 1368);
          i != (std::pair<const data::NewActivityDropType,std::pair<std::string,std::string > > *)(v1 + 864);
          std::pair<data::NewActivityDropType const,std::pair<std::string,std::string>>::~pair(i) )
    {
      --i;
    }
    __asan_poison_stack_memory(v1 + 864, 504LL);
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 768));
    v5 = (_DWORD *)(((v1 + 768) >> 3) + 2147450880);
    *v5 = -117901064;
    v5[1] = -117901064;
    *(_BYTE *)(((v1 + 176) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 672));
    v6 = (_DWORD *)(((v1 + 672) >> 3) + 2147450880);
    *v6 = -117901064;
    v6[1] = -117901064;
    *(_BYTE *)(((v1 + 160) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 576));
    v7 = (_DWORD *)(((v1 + 576) >> 3) + 2147450880);
    *v7 = -117901064;
    v7[1] = -117901064;
    *(_BYTE *)(((v1 + 144) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 480));
    v8 = (_DWORD *)(((v1 + 480) >> 3) + 2147450880);
    *v8 = -117901064;
    v8[1] = -117901064;
    *(_BYTE *)(((v1 + 128) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 384));
    v9 = (_DWORD *)(((v1 + 384) >> 3) + 2147450880);
    *v9 = -117901064;
    v9[1] = -117901064;
    *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 288));
    v10 = (_DWORD *)(((v1 + 288) >> 3) + 2147450880);
    *v10 = -117901064;
    v10[1] = -117901064;
    *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 192));
  }
  if ( v12 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF80AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 180) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_5(v1, 1440LL, v12);
  }
  return &data::getNewActivityDropTypeEnumMap[abi:cxx11](void)::m;
};

// Line 1558: range 000000000EEC0EC8-000000000EEC123B
const char *__fastcall data::enumValToStr(data::NewActivitySaleType e, __int64 a2)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // al
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdi
  int v8; // ecx
  char v9; // al
  const char *result; // rax
  std::_Rb_tree_const_iterator<std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > >::pointer v11; // rax
  const std::map<data::NewActivitySaleType,std::pair<std::string,std::string >> *map; // [rsp+18h] [rbp-E8h]
  char v13[224]; // [rsp+20h] [rbp-E0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 9 <unknown> 48 4 6 e:1557 64 8 9 iter:1560 96 8 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumValToStr;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862725] = -202116109;
  *(_DWORD *)(v2 + 48) = e;
  map = data::getNewActivitySaleTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, a2);
  *(std::map<data::NewActivitySaleType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivitySaleType,std::pair<std::string,std::string>>::find(map, (const std::map<data::NewActivitySaleType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::map<data::NewActivitySaleType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivitySaleType,std::pair<std::string,std::string>>::end(map);
  v5 = std::operator==(
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
         (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumValToStr",
      1563);
    v6 = "invalid e:";
    v7 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[11])"invalid e:");
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = 4;
    v8 = *(_DWORD *)(v2 + 48);
    v9 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
    if ( v9 != 0 && v9 <= 3 )
    {
      v7 = (common::milog::MiLogStream *)(v2 + 32);
      LOBYTE(v6) = v9 != 0;
      __asan_report_store4(v2 + 32, v6);
    }
    *(_DWORD *)(v2 + 32) = v8;
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 32));
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = "INVALID_NewActivitySaleType";
  }
  else
  {
    v11 = std::_Rb_tree_const_iterator<std::pair<data::NewActivitySaleType const,std::pair<std::string,std::string>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > > *const)(v2 + 64));
    result = (const char *)std::string::c_str(&v11->second.second);
  }
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1570: range 000000000EEC123C-000000000EEC17F4
__int64 __fastcall data::enumNameToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  const char *v6; // rsi
  char *v7; // rsi
  bool v8; // al
  common::milog::MiLogStream *v9; // rax
  std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivitySaleType>,false,true>::pointer v10; // rax
  data::NewActivitySaleType second; // ecx
  char v12; // dl
  const std::unordered_map<std::string,data::NewActivitySaleType> *m; // [rsp+18h] [rbp-188h]
  char v15[384]; // [rsp+20h] [rbp-180h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "7 48 1 9 <unknown> 64 8 7 it:1579 96 8 9 <unknown> 128 8 6 s:1569 160 32 9 <unknown> 224 32 9 <u"
                        "nknown> 288 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumNameToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -202116109;
  *(_QWORD *)(v2 + 128) = s;
  if ( *(_QWORD *)(v2 + 128) )
  {
    m = data::getNewActivitySaleTypeNameMap[abi:cxx11]();
    std::allocator<char>::allocator(v2 + 48);
    v6 = *(const char **)(v2 + 128);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      v6,
      (const std::allocator<char> *)(v2 + 48));
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 64, v6);
    *(std::unordered_map<std::string,data::NewActivitySaleType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivitySaleType>::find(
                                                                                                m,
                                                                                                (const std::unordered_map<std::string,data::NewActivitySaleType>::key_type *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 96, v2 + 224);
    *(std::unordered_map<std::string,data::NewActivitySaleType>::const_iterator *)(v2 + 96) = std::unordered_map<std::string,data::NewActivitySaleType>::end(m);
    v7 = (char *)(v2 + 96);
    v8 = std::__detail::operator==<std::pair<std::string const,data::NewActivitySaleType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivitySaleType>,true> *)(v2 + 64),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivitySaleType>,true> *)(v2 + 96));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumNameToVal",
        1582);
      v9 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v9, (const char *const *)(v2 + 128));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v10 = std::__detail::_Node_const_iterator<std::pair<std::string const,data::NewActivitySaleType>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,data::NewActivitySaleType>,false,true> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v10->second);
      }
      second = v10->second;
      v12 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v12 != 0 && (char)((e & 7) + 3) >= v12 )
      {
        LOBYTE(v7) = v12 != 0;
        __asan_report_store4(e, v7);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumNameToVal",
      1573);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 160),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = 0xFFFFFFFFLL;
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 1591: range 000000000EEC17F5-000000000EEC211A
__int64 __fastcall data::enumStrToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  std::pair<const std::string,data::NewActivitySaleType> *i; // r14
  unsigned __int64 v7; // rax
  const char *v8; // rsi
  char *v9; // rsi
  bool v10; // al
  common::milog::MiLogStream *v11; // rax
  std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivitySaleType>,false,true>::pointer v12; // rax
  data::NewActivitySaleType second; // ecx
  char v14; // dl
  char v16[528]; // [rsp+20h] [rbp-210h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(480LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "12 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 4 9 <unknown> 112 8 7 "
                        "it:1603 144 8 9 <unknown> 176 8 6 s:1590 208 32 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown"
                        "> 400 40 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumStrToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = 61956;
  v4[536862723] = -234881024;
  v4[536862724] = 62194;
  v4[536862724] = -234881024;
  v4[536862725] = 62194;
  v4[536862725] = -234881024;
  v4[536862726] = 62194;
  v4[536862727] = -219021312;
  v4[536862728] = 62194;
  v4[536862729] = -219021312;
  v4[536862730] = 62194;
  v4[536862731] = -219021312;
  v4[536862732] = 62194;
  v4[536862733] = -218103808;
  v4[536862734] = -202116109;
  *(_QWORD *)(v2 + 176) = s;
  if ( *(_QWORD *)(v2 + 176) )
  {
    if ( !(_BYTE)`guard variable for'data::enumStrToVal(char const*,data::NewActivitySaleType &)::m
      && __cxa_guard_acquire(&`guard variable for'data::enumStrToVal(char const*,data::NewActivitySaleType &)::m) )
    {
      if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 96, e);
      *(_DWORD *)(v2 + 96) = 1;
      std::pair<std::string const,data::NewActivitySaleType>::pair<char const(&)[19],data::NewActivitySaleType,true>(
        (std::pair<const std::string,data::NewActivitySaleType> *const)(v2 + 400),
        (const char (*)[19])byte_1A450600,
        (data::NewActivitySaleType *)(v2 + 96));
      std::allocator<std::pair<std::string const,data::NewActivitySaleType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivitySaleType> > *const)(v2 + 64));
      std::unordered_map<std::string,data::NewActivitySaleType>::unordered_map(
        &data::enumStrToVal(char const*,data::NewActivitySaleType &)::m,
        (std::initializer_list<std::pair<const std::string,data::NewActivitySaleType> >)__PAIR128__(1LL, v2 + 400),
        0LL,
        (const std::unordered_map<std::string,data::NewActivitySaleType>::hasher *)(v2 + 32),
        (const std::unordered_map<std::string,data::NewActivitySaleType>::key_equal *)(v2 + 48),
        (const std::unordered_map<std::string,data::NewActivitySaleType>::allocator_type *)(v2 + 64));
      __cxa_guard_release(&`guard variable for'data::enumStrToVal(char const*,data::NewActivitySaleType &)::m);
      __cxa_atexit(
        (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivitySaleType>::~unordered_map,
        &data::enumStrToVal(char const*,data::NewActivitySaleType &)::m,
        &_dso_handle);
      std::allocator<std::pair<std::string const,data::NewActivitySaleType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivitySaleType> > *const)(v2 + 64));
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
      for ( i = (std::pair<const std::string,data::NewActivitySaleType> *)(v2 + 440);
            i != (std::pair<const std::string,data::NewActivitySaleType> *)(v2 + 400);
            std::pair<std::string const,data::NewActivitySaleType>::~pair(i) )
      {
        --i;
      }
      v7 = ((v2 + 400) >> 3) + 2147450880;
      *(_DWORD *)v7 = -117901064;
      *(_BYTE *)(v7 + 4) = -8;
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    }
    *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 272) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 80);
    v8 = *(const char **)(v2 + 176);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 272),
      v8,
      (const std::allocator<char> *)(v2 + 80));
    if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 112, v8);
    *(std::unordered_map<std::string,data::NewActivitySaleType>::iterator *)(v2 + 112) = std::unordered_map<std::string,data::NewActivitySaleType>::find(
                                                                                           &data::enumStrToVal(char const*,data::NewActivitySaleType &)::m,
                                                                                           (const std::unordered_map<std::string,data::NewActivitySaleType>::key_type *)(v2 + 272));
    std::string::~string((void *)(v2 + 272));
    *(_DWORD *)(((v2 + 272) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 80);
    *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 144, v2 + 272);
    *(std::unordered_map<std::string,data::NewActivitySaleType>::iterator *)(v2 + 144) = std::unordered_map<std::string,data::NewActivitySaleType>::end(&data::enumStrToVal(char const*,data::NewActivitySaleType &)::m);
    v9 = (char *)(v2 + 144);
    v10 = std::__detail::operator==<std::pair<std::string const,data::NewActivitySaleType>,true>(
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivitySaleType>,true> *)(v2 + 112),
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivitySaleType>,true> *)(v2 + 144));
    *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
    if ( v10 )
    {
      *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 336) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 336, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 336),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "enumStrToVal",
        1606);
      v11 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              (common::milog::MiLogStream *const)(v2 + 336),
              (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)(v2 + 176));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 336));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v12 = std::__detail::_Node_iterator<std::pair<std::string const,data::NewActivitySaleType>,false,true>::operator->((const std::__detail::_Node_iterator<std::pair<const std::string,data::NewActivitySaleType>,false,true> *const)(v2 + 112));
      if ( *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v12->second);
      }
      second = v12->second;
      v14 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v14 != 0 && (char)((e & 7) + 3) >= v14 )
      {
        LOBYTE(v9) = v14 != 0;
        __asan_report_store4(e, v9);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 208) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 239) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 48 + 31) & 7) >= *(_BYTE *)(((v2 + 239) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 208, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 208),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "enumStrToVal",
      1594);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 208),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 208));
    result = 0xFFFFFFFFLL;
  }
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = -168430091;
  }
  return result;
};

// Line 1615: range 000000000EEC211B-000000000EEC2131
const char *__cdecl data::getDescription(data::NewActivitySaleType e)
{
  __int64 v1; // rsi

  return data::enumValToStr(e, v1);
};

// Line 1620: range 000000000EEC2132-000000000EEC22E7
bool __cdecl data::isValidNewActivitySaleType(uint32_t n)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  const std::map<data::NewActivitySaleType,std::pair<std::string,std::string >> *v5; // rcx
  const std::map<data::NewActivitySaleType,std::pair<std::string,std::string >> *v6; // rcx
  bool result; // al
  char v8[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 6 e:1621 64 8 9 <unknown> 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivitySaleType;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, v1);
  *(_DWORD *)(v2 + 48) = n;
  v5 = data::getNewActivitySaleTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::map<data::NewActivitySaleType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::NewActivitySaleType,std::pair<std::string,std::string>>::end(v5);
  v6 = data::getNewActivitySaleTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::map<data::NewActivitySaleType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::NewActivitySaleType,std::pair<std::string,std::string>>::find(v6, (const std::map<data::NewActivitySaleType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  result = std::operator!=(
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
             (const std::_Rb_tree_const_iterator<std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1626: range 000000000EEC22E8-000000000EEC2449
bool __cdecl data::isValidNewActivitySaleTypeName(const std::string *name)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  const std::unordered_map<std::string,data::NewActivitySaleType> *v5; // rcx
  const std::unordered_map<std::string,data::NewActivitySaleType> *v6; // rcx
  bool result; // al
  char v8[128]; // [rsp+10h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 9 <unknown> 64 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidNewActivitySaleTypeName;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202116352;
  v5 = data::getNewActivitySaleTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<std::string,data::NewActivitySaleType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::NewActivitySaleType>::end(v5);
  v6 = data::getNewActivitySaleTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<std::string,data::NewActivitySaleType>::const_iterator *)(v2 + 32) = std::unordered_map<std::string,data::NewActivitySaleType>::find(
                                                                                              v6,
                                                                                              name);
  result = std::__detail::operator!=<std::pair<std::string const,data::NewActivitySaleType>,true>(
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivitySaleType>,true> *)(v2 + 32),
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::NewActivitySaleType>,true> *)(v2 + 64));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1631: range 000000000EEC244A-000000000EEC2850
const std::unordered_map<std::string,data::NewActivitySaleType> *__cdecl data::getNewActivitySaleTypeNameMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const std::string,data::NewActivitySaleType> *i; // r14
  const std::unordered_map<std::string,data::NewActivitySaleType> *result; // rax
  char v6[272]; // [rsp+10h] [rbp-110h] BYREF

  v1 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_2(224LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "6 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 80 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivitySaleTypeNameMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753535;
  v3[536862722] = -234556927;
  v3[536862723] = 61956;
  v3[536862726] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivitySaleTypeNameMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivitySaleTypeNameMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string const,data::NewActivitySaleType>::pair<char const(&)[28],data::NewActivitySaleType,true>(
      (std::pair<const std::string,data::NewActivitySaleType> *const)(v1 + 112),
      (const char (*)[28])"NEW_ACTIVITY_SALE_TYPE_NONE",
      (data::NewActivitySaleType *)(v1 + 80));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, "NEW_ACTIVITY_SALE_TYPE_NONE");
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string const,data::NewActivitySaleType>::pair<char const(&)[38],data::NewActivitySaleType,true>(
      (std::pair<const std::string,data::NewActivitySaleType> *const)(v1 + 152),
      (const char (*)[38])"NEW_ACTIVITY_SALE_TYPE_WEAPON_UPGRADE",
      (data::NewActivitySaleType *)(v1 + 96));
    std::allocator<std::pair<std::string const,data::NewActivitySaleType>>::allocator((std::allocator<std::pair<const std::string,data::NewActivitySaleType> > *const)(v1 + 64));
    std::unordered_map<std::string,data::NewActivitySaleType>::unordered_map(
      &data::getNewActivitySaleTypeNameMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const std::string,data::NewActivitySaleType> >)__PAIR128__(2LL, v1 + 112),
      0LL,
      (const std::unordered_map<std::string,data::NewActivitySaleType>::hasher *)(v1 + 32),
      (const std::unordered_map<std::string,data::NewActivitySaleType>::key_equal *)(v1 + 48),
      (const std::unordered_map<std::string,data::NewActivitySaleType>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivitySaleTypeNameMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_map<std::string,data::NewActivitySaleType>::~unordered_map,
      &data::getNewActivitySaleTypeNameMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<std::string const,data::NewActivitySaleType>>::~allocator((std::allocator<std::pair<const std::string,data::NewActivitySaleType> > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const std::string,data::NewActivitySaleType> *)(v1 + 192);
          i != (std::pair<const std::string,data::NewActivitySaleType> *)(v1 + 112);
          std::pair<std::string const,data::NewActivitySaleType>::~pair(i) )
    {
      --i;
    }
  }
  result = &data::getNewActivitySaleTypeNameMap[abi:cxx11](void)::m;
  if ( v6 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 1641: range 000000000EEC2851-000000000EEC2E0E
const std::map<data::NewActivitySaleType,std::pair<std::string,std::string >> *__cdecl data::getNewActivitySaleTypeEnumMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > *i; // r14
  unsigned __int64 v5; // rax
  _DWORD *v6; // rax
  const std::map<data::NewActivitySaleType,std::pair<std::string,std::string >> *result; // rax
  char v8[560]; // [rsp+10h] [rbp-230h] BYREF

  v1 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_3(512LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "7 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 64 9 <unknown> 208 64 "
                        "9 <unknown> 304 144 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getNewActivitySaleTypeEnumMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753551;
  v3[536862722] = -234556927;
  v3[536862723] = 61956;
  v3[536862725] = -219021312;
  v3[536862726] = 62194;
  v3[536862728] = -219021312;
  v3[536862729] = 62194;
  v3[536862734] = -202116109;
  v3[536862735] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getNewActivitySaleTypeEnumMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getNewActivitySaleTypeEnumMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string,std::string>::pair<char const(&)[1],char const(&)[28],true>(
      (std::pair<std::string,std::string > *const)(v1 + 112),
      (const char (*)[1])byte_1A3FEBE0,
      (const char (*)[28])"NEW_ACTIVITY_SALE_TYPE_NONE");
    std::pair<data::NewActivitySaleType const,std::pair<std::string,std::string>>::pair<data::NewActivitySaleType,true>(
      (std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > *const)(v1 + 304),
      (data::NewActivitySaleType *)(v1 + 80),
      (const std::pair<std::string,std::string > *)(v1 + 112));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, v1 + 80);
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string,std::string>::pair<char const(&)[19],char const(&)[38],true>(
      (std::pair<std::string,std::string > *const)(v1 + 208),
      (const char (*)[19])byte_1A450600,
      (const char (*)[38])"NEW_ACTIVITY_SALE_TYPE_WEAPON_UPGRADE");
    std::pair<data::NewActivitySaleType const,std::pair<std::string,std::string>>::pair<data::NewActivitySaleType,true>(
      (std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > *const)(v1 + 376),
      (data::NewActivitySaleType *)(v1 + 96),
      (const std::pair<std::string,std::string > *)(v1 + 208));
    std::allocator<std::pair<data::NewActivitySaleType const,std::pair<std::string,std::string>>>::allocator((std::allocator<std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    std::map<data::NewActivitySaleType,std::pair<std::string,std::string>>::map(
      &data::getNewActivitySaleTypeEnumMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > >)__PAIR128__(2LL, v1 + 304),
      (const std::less<data::NewActivitySaleType> *)(v1 + 48),
      (const std::map<data::NewActivitySaleType,std::pair<std::string,std::string >>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getNewActivitySaleTypeEnumMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::map<data::NewActivitySaleType,std::pair<std::string,std::string>>::~map,
      &data::getNewActivitySaleTypeEnumMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<data::NewActivitySaleType const,std::pair<std::string,std::string>>>::~allocator((std::allocator<std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > *)(v1 + 448);
          i != (std::pair<const data::NewActivitySaleType,std::pair<std::string,std::string > > *)(v1 + 304);
          std::pair<data::NewActivitySaleType const,std::pair<std::string,std::string>>::~pair(i) )
    {
      --i;
    }
    v5 = ((v1 + 304) >> 3) + 2147450880;
    *(_DWORD *)v5 = -117901064;
    *(_DWORD *)(v5 + 4) = -117901064;
    *(_DWORD *)(v5 + 8) = -117901064;
    *(_DWORD *)(v5 + 12) = -117901064;
    *(_WORD *)(v5 + 16) = -1800;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 208));
    v6 = (_DWORD *)(((v1 + 208) >> 3) + 2147450880);
    *v6 = -117901064;
    v6[1] = -117901064;
    *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 112));
  }
  result = &data::getNewActivitySaleTypeEnumMap[abi:cxx11](void)::m;
  if ( v8 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8038) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1652: range 000000000EEC2E10-000000000EEC38A8
int32_t __cdecl data::NewActivityItemLimitExcelConfig::init(
        data::NewActivityItemLimitExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  bool v10; // r14
  common::milog::MiLogStream *v11; // rax
  bool v12; // r14
  common::milog::MiLogStream *v13; // rax
  char v14[656]; // [rsp+10h] [rbp-290h] BYREF

  v2 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(608LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "12 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 "
                        "9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9"
                        " <unknown> 544 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityItemLimitExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    &byte_1A450800,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::NewActivityType>(
         row,
         (const std::string *)(v2 + 96),
         &this->activity_type) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      1655);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v6, (const char (*)[33])byte_1A4508C0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      &byte_1A450920,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToEnum<data::ItemLimitType>(
           row,
           (const std::string *)(v2 + 224),
           &this->reward_item_limit_type) != 0;
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        1660);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(v9, (const char (*)[45])byte_1A450960);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 352),
        &byte_1A4509C0,
        (const std::allocator<char> *)(v2 + 64));
      v10 = common::tools::TxtFile::Row::assignToEnum<data::ItemLimitType>(
              row,
              (const std::string *)(v2 + 352),
              &this->drop_item_limit_type) != 0;
      std::string::~string((void *)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 416, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 416),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          1665);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 416),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(v11, (const char (*)[45])byte_1A450A00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
        result = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 480),
          &byte_1A450A60,
          (const std::allocator<char> *)(v2 + 80));
        v12 = common::tools::TxtFile::Row::assignToEnum<data::ItemLimitType>(
                row,
                (const std::string *)(v2 + 480),
                &this->avatar_limit_type) != 0;
        std::string::~string((void *)(v2 + 480));
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v12 )
        {
          *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 544, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 544),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            1670);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 544),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [57],(char *[57])0>(v13, (const char (*)[57])byte_1A450AC0);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
          result = -1;
        }
        else
        {
          result = 0;
        }
      }
    }
  }
  if ( v14 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = -168430091;
  }
  return result;
};

// Line 1678: range 000000000EEC38AA-000000000EEC63D4
int32_t __cdecl data::NewActivityExcelConfig::init(
        data::NewActivityExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r15
  __int64 v3; // rax
  _DWORD *v4; // r14
  bool v5; // r12
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // r12d
  bool v8; // r12
  common::milog::MiLogStream *v9; // rax
  bool v10; // r12
  common::milog::MiLogStream *v11; // rax
  bool v12; // r12
  common::milog::MiLogStream *v13; // rax
  unsigned __int64 v14; // rax
  _DWORD *v15; // rax
  bool v16; // r13
  unsigned __int64 v17; // rax
  char *i; // r12
  _DWORD *v19; // rax
  common::milog::MiLogStream *v20; // rax
  bool v21; // r12
  common::milog::MiLogStream *v22; // rax
  unsigned __int64 v23; // rax
  _DWORD *v24; // rax
  bool v25; // r13
  unsigned __int64 v26; // rax
  char *j; // r12
  _DWORD *v28; // rax
  common::milog::MiLogStream *v29; // rax
  bool v30; // r12
  common::milog::MiLogStream *v31; // rax
  bool v32; // r12
  common::milog::MiLogStream *v33; // rax
  bool v34; // r12
  common::milog::MiLogStream *v35; // rax
  unsigned __int64 v36; // rax
  _DWORD *v37; // rax
  bool v38; // r13
  unsigned __int64 v39; // rax
  char *k; // r12
  _DWORD *v41; // rax
  common::milog::MiLogStream *v42; // rax
  bool v43; // r12
  common::milog::MiLogStream *v44; // rax
  unsigned __int64 v45; // rax
  _DWORD *v46; // rax
  bool v47; // r13
  unsigned __int64 v48; // rax
  char *m; // r12
  _DWORD *v50; // rax
  common::milog::MiLogStream *v51; // rax
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-A40h]
  std::initializer_list<std::string > v54; // [rsp+20h] [rbp-A30h]
  std::initializer_list<std::string > v55; // [rsp+30h] [rbp-A20h]
  std::initializer_list<std::string > v56; // [rsp+40h] [rbp-A10h]
  char v57[2544]; // [rsp+60h] [rbp-9F0h] BYREF

  v2 = (unsigned __int64)v57;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_6(2496LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "52 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 9"
                        " <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unknown> 208 1 9 <unkn"
                        "own> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 288 1 9 <unknown> 3"
                        "04 1 9 <unknown> 320 1 9 <unknown> 336 1 9 <unknown> 352 1 9 <unknown> 368 1 9 <unknown> 384 24 "
                        "9 <unknown> 448 24 9 <unknown> 512 24 9 <unknown> 576 24 9 <unknown> 640 32 12 val_str:1679 704 "
                        "32 9 <unknown> 768 32 9 <unknown> 832 32 9 <unknown> 896 32 9 <unknown> 960 32 9 <unknown> 1024 "
                        "32 9 <unknown> 1088 32 9 <unknown> 1152 32 9 <unknown> 1216 32 9 <unknown> 1280 32 9 <unknown> 1"
                        "344 32 9 <unknown> 1408 32 9 <unknown> 1472 32 9 <unknown> 1536 32 9 <unknown> 1600 32 9 <unknow"
                        "n> 1664 32 9 <unknown> 1728 32 9 <unknown> 1792 32 9 <unknown> 1856 32 9 <unknown> 1920 32 9 <un"
                        "known> 1984 32 9 <unknown> 2048 32 9 <unknown> 2112 64 9 <unknown> 2208 64 9 <unknown> 2304 64 9"
                        " <unknown> 2400 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234753535;
  v4[536862730] = -234753535;
  v4[536862731] = -234753535;
  v4[536862732] = -234881024;
  v4[536862733] = -218959118;
  v4[536862734] = -234881024;
  v4[536862735] = -218959118;
  v4[536862736] = -234881024;
  v4[536862737] = -218959118;
  v4[536862738] = -234881024;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862743] = -218959118;
  v4[536862745] = -218959118;
  v4[536862747] = -218959118;
  v4[536862749] = -218959118;
  v4[536862751] = -218959118;
  v4[536862753] = -218959118;
  v4[536862755] = -218959118;
  v4[536862757] = -218959118;
  v4[536862759] = -218959118;
  v4[536862761] = -218959118;
  v4[536862763] = -218959118;
  v4[536862765] = -218959118;
  v4[536862767] = -218959118;
  v4[536862769] = -218959118;
  v4[536862771] = -218959118;
  v4[536862773] = -218959118;
  v4[536862775] = -218959118;
  v4[536862777] = -218959118;
  v4[536862779] = -218959118;
  v4[536862781] = -218959118;
  v4[536862783] = -218959118;
  v4[536862785] = -218959118;
  v4[536862788] = -218959118;
  v4[536862791] = -218959118;
  v4[536862794] = -218959118;
  v4[536862797] = -202116109;
  std::string::basic_string(v2 + 640);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 704),
    &byte_1A450F00,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 704), &this->activity_id) != 0;
  std::string::~string((void *)(v2 + 704));
  *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 768) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 799) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 64 + 95) & 7) >= *(_BYTE *)(((v2 + 799) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 768, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 768),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      1682);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 768),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v6, (const char (*)[29])byte_1A450F40);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 768));
    *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 832),
      &byte_1A450800,
      (const std::allocator<char> *)(v2 + 64));
    v8 = common::tools::TxtFile::Row::assignToEnum<data::NewActivityType>(
           row,
           (const std::string *)(v2 + 832),
           &this->activity_type) != 0;
    std::string::~string((void *)(v2 + 832));
    *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 896) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 927) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 927) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 896, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 896),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        1687);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 896),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v9, (const char (*)[33])byte_1A4508C0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 896));
      *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = -117901064;
      v7 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 960),
        &byte_1A450F80,
        (const std::allocator<char> *)(v2 + 80));
      v10 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 960), &this->is_load_terrain) != 0;
      std::string::~string((void *)(v2 + 960));
      *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 1024) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1055) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 64 + 95) & 7) >= *(_BYTE *)(((v2 + 1055) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1024, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 1024),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          1692);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 1024),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v11, (const char (*)[39])byte_1A450FC0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1024));
        *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 96);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1088),
          &byte_1A451020,
          (const std::allocator<char> *)(v2 + 96));
        v12 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 1088), (std::string *)(v2 + 640)) != 0;
        std::string::~string((void *)(v2 + 1088));
        *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 96);
        *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
        if ( v12 )
        {
          *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 1152) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1183) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 1183) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 1152, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 1152),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            1697);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 1152),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v13, (const char (*)[36])byte_1A451060);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1152));
          *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = -117901064;
          v7 = -1;
        }
        else
        {
          v14 = ((v2 + 384) >> 3) + 2147450880;
          *(_WORD *)v14 = 0;
          *(_BYTE *)(v14 + 2) = 0;
          v15 = (_DWORD *)(((v2 + 2112) >> 3) + 2147450880);
          *v15 = 0;
          v15[1] = 0;
          *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 112);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 2112),
            ";",
            (const std::allocator<char> *)(v2 + 112));
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 128);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 2144),
            ",",
            (const std::allocator<char> *)(v2 + 128));
          __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2112);
          __l._M_len = 2LL;
          *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
          std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 144));
          std::vector<std::string>::vector(
            (std::vector<std::string> *const)(v2 + 384),
            __l,
            (const std::vector<std::string>::allocator_type *)(v2 + 144));
          v16 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                  (const std::string *)(v2 + 640),
                  (const std::vector<std::string> *)(v2 + 384),
                  &this->cond_group_id,
                  1) != 0;
          std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 384));
          v17 = ((v2 + 384) >> 3) + 2147450880;
          *(_WORD *)v17 = -1800;
          *(_BYTE *)(v17 + 2) = -8;
          std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 144));
          *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
          for ( i = (char *)(v2 + 2176); i != (char *)(v2 + 2112); std::string::~string(i) )
            i -= 32;
          v19 = (_DWORD *)(((v2 + 2112) >> 3) + 2147450880);
          *v19 = -117901064;
          v19[1] = -117901064;
          std::allocator<char>::~allocator(v2 + 128);
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
          std::allocator<char>::~allocator(v2 + 112);
          *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
          if ( v16 )
          {
            *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1216) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1247) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 1247) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1216, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1216),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "init",
              1702);
            v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1216),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v20, (const char (*)[36])byte_1A451060);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1216));
            *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = -117901064;
            v7 = -1;
          }
          else
          {
            *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 160);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 1280),
              aWatcher_3,
              (const std::allocator<char> *)(v2 + 160));
            v21 = common::tools::TxtFile::Row::assignToStr(
                    row,
                    (const std::string *)(v2 + 1280),
                    (std::string *)(v2 + 640)) != 0;
            std::string::~string((void *)(v2 + 1280));
            *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 160);
            *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
            if ( v21 )
            {
              *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 1344) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 1375) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 1375) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 1344, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 1344),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "init",
                1707);
              v22 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 1344),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(v22, (const char (*)[34])byte_1A451140);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1344));
              *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = -117901064;
              v7 = -1;
            }
            else
            {
              v23 = ((v2 + 448) >> 3) + 2147450880;
              *(_WORD *)v23 = 0;
              *(_BYTE *)(v23 + 2) = 0;
              v24 = (_DWORD *)(((v2 + 2208) >> 3) + 2147450880);
              *v24 = 0;
              v24[1] = 0;
              *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 176);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 2208),
                ";",
                (const std::allocator<char> *)(v2 + 176));
              *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 192);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 2240),
                ",",
                (const std::allocator<char> *)(v2 + 192));
              v54._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2208);
              v54._M_len = 2LL;
              *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
              std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 208));
              std::vector<std::string>::vector(
                (std::vector<std::string> *const)(v2 + 448),
                v54,
                (const std::vector<std::string>::allocator_type *)(v2 + 208));
              v25 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                      (const std::string *)(v2 + 640),
                      (const std::vector<std::string> *)(v2 + 448),
                      &this->watcher_id,
                      1) != 0;
              std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 448));
              v26 = ((v2 + 448) >> 3) + 2147450880;
              *(_WORD *)v26 = -1800;
              *(_BYTE *)(v26 + 2) = -8;
              std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 208));
              *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
              for ( j = (char *)(v2 + 2272); j != (char *)(v2 + 2208); std::string::~string(j) )
                j -= 32;
              v28 = (_DWORD *)(((v2 + 2208) >> 3) + 2147450880);
              *v28 = -117901064;
              v28[1] = -117901064;
              std::allocator<char>::~allocator(v2 + 192);
              *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
              std::allocator<char>::~allocator(v2 + 176);
              *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
              if ( v25 )
              {
                *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 1408) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1439) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 1439) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1408, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 1408),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                  "init",
                  1712);
                v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 1408),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(v29, (const char (*)[34])byte_1A451140);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1408));
                *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = -117901064;
                v7 = -1;
              }
              else
              {
                *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 224);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 1472),
                  &byte_1A4511A0,
                  (const std::allocator<char> *)(v2 + 224));
                v30 = common::tools::TxtFile::Row::assignToNum<bool>(
                        row,
                        (const std::string *)(v2 + 1472),
                        &this->is_ban_client_ui) != 0;
                std::string::~string((void *)(v2 + 1472));
                *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 224);
                *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
                if ( v30 )
                {
                  *(_DWORD *)(((v2 + 1536) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1536) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1567) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 64 + 95) & 7) >= *(_BYTE *)(((v2 + 1567) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1536, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1536),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                    "init",
                    1717);
                  v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1536),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                    v31,
                    (const char (*)[39])byte_1A4511E0);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1536));
                  *(_DWORD *)(((v2 + 1536) >> 3) + 0x7FFF8000) = -117901064;
                  v7 = -1;
                }
                else
                {
                  *(_DWORD *)(((v2 + 1600) >> 3) + 0x7FFF8000) = 0;
                  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<char>::allocator(v2 + 240);
                  std::string::basic_string<std::allocator<char>>(
                    (std::string *const)(v2 + 1600),
                    &byte_1A451240,
                    (const std::allocator<char> *)(v2 + 240));
                  v32 = common::tools::TxtFile::Row::assignToNum<bool>(
                          row,
                          (const std::string *)(v2 + 1600),
                          &this->is_clear_activity_bin) != 0;
                  std::string::~string((void *)(v2 + 1600));
                  *(_DWORD *)(((v2 + 1600) >> 3) + 0x7FFF8000) = -117901064;
                  std::allocator<char>::~allocator(v2 + 240);
                  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
                  if ( v32 )
                  {
                    *(_DWORD *)(((v2 + 1664) >> 3) + 0x7FFF8000) = 0;
                    if ( *(char *)(((v2 + 1664) >> 3) + 0x7FFF8000) < 0
                      || *(_BYTE *)(((v2 + 1695) >> 3) + 0x7FFF8000) != 0
                      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 1695) >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_store_n(v2 + 1664, 32LL);
                    }
                    common::milog::MiLogStream::create(
                      (common::milog::MiLogStream *)(v2 + 1664),
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                      "init",
                      1722);
                    v33 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                            (common::milog::MiLogStream *const)(v2 + 1664),
                            (const char (*)[16])"[CONFIG_ERROR] ");
                    common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                      v33,
                      (const char (*)[42])byte_1A451280);
                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1664));
                    *(_DWORD *)(((v2 + 1664) >> 3) + 0x7FFF8000) = -117901064;
                    v7 = -1;
                  }
                  else
                  {
                    *(_DWORD *)(((v2 + 1728) >> 3) + 0x7FFF8000) = 0;
                    *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v2 + 256);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v2 + 1728),
                      &byte_1A4512E0,
                      (const std::allocator<char> *)(v2 + 256));
                    v34 = common::tools::TxtFile::Row::assignToStr(
                            row,
                            (const std::string *)(v2 + 1728),
                            (std::string *)(v2 + 640)) != 0;
                    std::string::~string((void *)(v2 + 1728));
                    *(_DWORD *)(((v2 + 1728) >> 3) + 0x7FFF8000) = -117901064;
                    std::allocator<char>::~allocator(v2 + 256);
                    *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
                    if ( v34 )
                    {
                      *(_DWORD *)(((v2 + 1792) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v2 + 1792) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v2 + 1823) >> 3) + 0x7FFF8000) != 0
                        && (char)((v2 - 64 + 95) & 7) >= *(_BYTE *)(((v2 + 1823) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v2 + 1792, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v2 + 1792),
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                        "init",
                        1727);
                      v35 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                              (common::milog::MiLogStream *const)(v2 + 1792),
                              (const char (*)[16])"[CONFIG_ERROR] ");
                      common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                        v35,
                        (const char (*)[39])byte_1A451320);
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1792));
                      *(_DWORD *)(((v2 + 1792) >> 3) + 0x7FFF8000) = -117901064;
                      v7 = -1;
                    }
                    else
                    {
                      v36 = ((v2 + 512) >> 3) + 2147450880;
                      *(_WORD *)v36 = 0;
                      *(_BYTE *)(v36 + 2) = 0;
                      v37 = (_DWORD *)(((v2 + 2304) >> 3) + 2147450880);
                      *v37 = 0;
                      v37[1] = 0;
                      *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v2 + 272);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v2 + 2304),
                        ";",
                        (const std::allocator<char> *)(v2 + 272));
                      *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v2 + 288);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v2 + 2336),
                        ",",
                        (const std::allocator<char> *)(v2 + 288));
                      v55._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2304);
                      v55._M_len = 2LL;
                      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 304));
                      std::vector<std::string>::vector(
                        (std::vector<std::string> *const)(v2 + 512),
                        v55,
                        (const std::vector<std::string>::allocator_type *)(v2 + 304));
                      v38 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                              (const std::string *)(v2 + 640),
                              (const std::vector<std::string> *)(v2 + 512),
                              &this->activity_coin_id_list,
                              1) != 0;
                      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 512));
                      v39 = ((v2 + 512) >> 3) + 2147450880;
                      *(_WORD *)v39 = -1800;
                      *(_BYTE *)(v39 + 2) = -8;
                      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 304));
                      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
                      for ( k = (char *)(v2 + 2368); k != (char *)(v2 + 2304); std::string::~string(k) )
                        k -= 32;
                      v41 = (_DWORD *)(((v2 + 2304) >> 3) + 2147450880);
                      *v41 = -117901064;
                      v41[1] = -117901064;
                      std::allocator<char>::~allocator(v2 + 288);
                      *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
                      std::allocator<char>::~allocator(v2 + 272);
                      *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
                      if ( v38 )
                      {
                        *(_DWORD *)(((v2 + 1856) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v2 + 1856) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v2 + 1887) >> 3) + 0x7FFF8000) != 0
                          && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 1887) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v2 + 1856, 32LL);
                        }
                        common::milog::MiLogStream::create(
                          (common::milog::MiLogStream *)(v2 + 1856),
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                          "init",
                          1732);
                        v42 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                (common::milog::MiLogStream *const)(v2 + 1856),
                                (const char (*)[16])"[CONFIG_ERROR] ");
                        common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                          v42,
                          (const char (*)[39])byte_1A451320);
                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1856));
                        *(_DWORD *)(((v2 + 1856) >> 3) + 0x7FFF8000) = -117901064;
                        v7 = -1;
                      }
                      else
                      {
                        *(_DWORD *)(((v2 + 1920) >> 3) + 0x7FFF8000) = 0;
                        *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v2 + 320);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v2 + 1920),
                          &byte_1A451380,
                          (const std::allocator<char> *)(v2 + 320));
                        v43 = common::tools::TxtFile::Row::assignToStr(
                                row,
                                (const std::string *)(v2 + 1920),
                                (std::string *)(v2 + 640)) != 0;
                        std::string::~string((void *)(v2 + 1920));
                        *(_DWORD *)(((v2 + 1920) >> 3) + 0x7FFF8000) = -117901064;
                        std::allocator<char>::~allocator(v2 + 320);
                        *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
                        if ( v43 )
                        {
                          *(_DWORD *)(((v2 + 1984) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v2 + 1984) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 2015) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 2015) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 1984, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v2 + 1984),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                            "init",
                            1737);
                          v44 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                  (common::milog::MiLogStream *const)(v2 + 1984),
                                  (const char (*)[16])"[CONFIG_ERROR] ");
                          common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                            v44,
                            (const char (*)[39])byte_1A4513C0);
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1984));
                          *(_DWORD *)(((v2 + 1984) >> 3) + 0x7FFF8000) = -117901064;
                          v7 = -1;
                        }
                        else
                        {
                          v45 = ((v2 + 576) >> 3) + 2147450880;
                          *(_WORD *)v45 = 0;
                          *(_BYTE *)(v45 + 2) = 0;
                          v46 = (_DWORD *)(((v2 + 2400) >> 3) + 2147450880);
                          *v46 = 0;
                          v46[1] = 0;
                          *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = 1;
                          std::allocator<char>::allocator(v2 + 336);
                          std::string::basic_string<std::allocator<char>>(
                            (std::string *const)(v2 + 2400),
                            ";",
                            (const std::allocator<char> *)(v2 + 336));
                          *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = 1;
                          std::allocator<char>::allocator(v2 + 352);
                          std::string::basic_string<std::allocator<char>>(
                            (std::string *const)(v2 + 2432),
                            ",",
                            (const std::allocator<char> *)(v2 + 352));
                          v56._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2400);
                          v56._M_len = 2LL;
                          *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = 1;
                          std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 368));
                          std::vector<std::string>::vector(
                            (std::vector<std::string> *const)(v2 + 576),
                            v56,
                            (const std::vector<std::string>::allocator_type *)(v2 + 368));
                          v47 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                                  (const std::string *)(v2 + 640),
                                  (const std::vector<std::string> *)(v2 + 576),
                                  &this->dungeon_id_list,
                                  1) != 0;
                          std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 576));
                          v48 = ((v2 + 576) >> 3) + 2147450880;
                          *(_WORD *)v48 = -1800;
                          *(_BYTE *)(v48 + 2) = -8;
                          std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 368));
                          *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = -8;
                          for ( m = (char *)(v2 + 2464); m != (char *)(v2 + 2400); std::string::~string(m) )
                            m -= 32;
                          v50 = (_DWORD *)(((v2 + 2400) >> 3) + 2147450880);
                          *v50 = -117901064;
                          v50[1] = -117901064;
                          std::allocator<char>::~allocator(v2 + 352);
                          *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
                          std::allocator<char>::~allocator(v2 + 336);
                          *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
                          if ( v47 )
                          {
                            *(_DWORD *)(((v2 + 2048) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v2 + 2048) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v2 + 2079) >> 3) + 0x7FFF8000) != 0
                              && (char)((v2 - 64 + 95) & 7) >= *(_BYTE *)(((v2 + 2079) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v2 + 2048, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v2 + 2048),
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                              "init",
                              1742);
                            v51 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                    (common::milog::MiLogStream *const)(v2 + 2048),
                                    (const char (*)[16])"[CONFIG_ERROR] ");
                            common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                              v51,
                              (const char (*)[39])byte_1A4513C0);
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2048));
                            *(_DWORD *)(((v2 + 2048) >> 3) + 0x7FFF8000) = -117901064;
                            v7 = -1;
                          }
                          else
                          {
                            v7 = 0;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  std::string::~string((void *)(v2 + 640));
  if ( v57 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8054) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8130) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862743) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450964 - (((_DWORD)v4 + 2147450972) & 0xFFFFFFF8) + 228) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_6(v2, 2496LL, v57);
  }
  return v7;
};

// Line 1750: range 000000000EEC63D6-000000000EEC6F61
int32_t __cdecl data::NewActivityScheduleCond::init(
        data::NewActivityScheduleCond *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  unsigned __int64 v8; // rax
  _DWORD *v9; // rax
  bool v10; // r15
  unsigned __int64 v11; // rax
  char *i; // r14
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  int32_t result; // eax
  bool t; // [rsp+8h] [rbp-2E8h]
  bool ta; // [rsp+8h] [rbp-2E8h]
  char v18[720]; // [rsp+20h] [rbp-2D0h] BYREF

  v2 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(672LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "13 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 24 "
                        "9 <unknown> 192 32 12 val_str:1751 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 "
                        "32 9 <unknown> 512 32 9 <unknown> 576 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityScheduleCond::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234881024;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862740] = -202116109;
  std::string::basic_string(v2 + 192);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 256),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  t = common::tools::TxtFile::Row::assignToEnum<data::NewActivityScheduleCondType>(
        row,
        (const std::string *)(v2 + 256),
        &this->type) != 0;
  std::string::~string((void *)(v2 + 256));
  *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 320, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 320),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      1754);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 320),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v5, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 320));
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 384),
      &byte_1A4515A0,
      (const std::allocator<char> *)(v2 + 64));
    ta = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 384), (std::string *)(v2 + 192)) != 0;
    std::string::~string((void *)(v2 + 384));
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 63) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 448, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 448),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        1759);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 448),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v7, (const char (*)[27])byte_1A4515E0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      v8 = ((v2 + 128) >> 3) + 2147450880;
      *(_WORD *)v8 = 0;
      *(_BYTE *)(v8 + 2) = 0;
      v9 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
      *v9 = 0;
      v9[1] = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 576),
        ";",
        (const std::allocator<char> *)(v2 + 80));
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 96);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 608),
        ",",
        (const std::allocator<char> *)(v2 + 96));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 112));
      std::vector<std::string>::vector(
        (std::vector<std::string> *const)(v2 + 128),
        (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 576),
        (const std::vector<std::string>::allocator_type *)(v2 + 112));
      v10 = common::tools::StringUtils::splitToListBySeps<int>(
              (const std::string *)(v2 + 192),
              (const std::vector<std::string> *)(v2 + 128),
              &this->param,
              1) != 0;
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 128));
      v11 = ((v2 + 128) >> 3) + 2147450880;
      *(_WORD *)v11 = -1800;
      *(_BYTE *)(v11 + 2) = -8;
      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 112));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      for ( i = (char *)(v2 + 640); i != (char *)(v2 + 576); std::string::~string(i) )
        i -= 32;
      v13 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
      *v13 = -117901064;
      v13[1] = -117901064;
      std::allocator<char>::~allocator(v2 + 96);
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 127) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 512, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 512),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          1764);
        v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 512),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v14, (const char (*)[27])byte_1A4515E0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        v6 = 0;
      }
    }
  }
  std::string::~string((void *)(v2 + 192));
  result = v6;
  if ( v18 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF803C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF804C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8050) = -168430091;
  }
  return result;
};

// Line 1772: range 000000000EEC6F62-000000000EEC982F
int32_t __cdecl data::NewActivityScheduleExcelConfig::init(
        data::NewActivityScheduleExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  unsigned __int64 v12; // rax
  _DWORD *v13; // rax
  bool v14; // r15
  unsigned __int64 v15; // rax
  char *j; // r14
  _DWORD *v17; // rax
  common::milog::MiLogStream *v18; // rax
  bool v19; // r14
  common::milog::MiLogStream *v20; // rax
  bool v21; // r14
  data::NewActivityScheduleCondType *p_type; // r14
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  bool v26; // r14
  bool v27; // r14
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  common::milog::MiLogStream *v30; // rax
  std::vector<int> *p_param; // r14
  unsigned __int64 v32; // rax
  _DWORD *v33; // rax
  bool v34; // r15
  unsigned __int64 v35; // rax
  char *k; // r14
  _DWORD *v37; // rax
  common::milog::MiLogStream *v38; // rax
  bool v39; // r14
  common::milog::MiLogStream *v40; // rax
  bool t; // [rsp+0h] [rbp-A70h]
  bool ta; // [rsp+0h] [rbp-A70h]
  bool tb; // [rsp+0h] [rbp-A70h]
  bool tc; // [rsp+0h] [rbp-A70h]
  bool td; // [rsp+0h] [rbp-A70h]
  bool te; // [rsp+0h] [rbp-A70h]
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-A60h]
  uint32_t array_count; // [rsp+38h] [rbp-A38h]
  uint32_t i; // [rsp+3Ch] [rbp-A34h]
  char v51[2608]; // [rsp+40h] [rbp-A30h] BYREF

  v2 = (unsigned __int64)v51;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_6(2560LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "48 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unkno"
                        "wn> 208 1 9 <unknown> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 28"
                        "8 1 9 <unknown> 304 1 9 <unknown> 320 24 9 <unknown> 384 24 9 <unknown> 448 32 12 val_str:1775 5"
                        "12 32 9 <unknown> 576 32 9 <unknown> 640 32 9 <unknown> 704 32 9 <unknown> 768 32 9 <unknown> 83"
                        "2 32 9 <unknown> 896 32 9 <unknown> 960 32 9 <unknown> 1024 32 9 <unknown> 1088 32 9 <unknown> 1"
                        "152 32 9 <unknown> 1216 32 9 <unknown> 1280 32 9 <unknown> 1344 32 9 <unknown> 1408 32 9 <unknow"
                        "n> 1472 32 9 <unknown> 1536 32 9 <unknown> 1600 32 9 <unknown> 1664 32 9 <unknown> 1728 32 9 <un"
                        "known> 1792 32 9 <unknown> 1856 32 9 <unknown> 1920 32 9 <unknown> 1984 32 9 <unknown> 2048 64 9"
                        " <unknown> 2144 64 9 <unknown> 2240 256 13 col_name:1773";
  *(_QWORD *)(v2 + 16) = data::NewActivityScheduleExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234753535;
  v4[536862730] = -234881024;
  v4[536862731] = -218959118;
  v4[536862732] = -234881024;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862743] = -218959118;
  v4[536862745] = -218959118;
  v4[536862747] = -218959118;
  v4[536862749] = -218959118;
  v4[536862751] = -218959118;
  v4[536862753] = -218959118;
  v4[536862755] = -218959118;
  v4[536862757] = -218959118;
  v4[536862759] = -218959118;
  v4[536862761] = -218959118;
  v4[536862763] = -218959118;
  v4[536862765] = -218959118;
  v4[536862767] = -218959118;
  v4[536862769] = -218959118;
  v4[536862771] = -218959118;
  v4[536862773] = -218959118;
  v4[536862775] = -218959118;
  v4[536862777] = -218959118;
  v4[536862779] = -218959118;
  v4[536862781] = -218959118;
  v4[536862783] = -218959118;
  v4[536862786] = -218959118;
  v4[536862789] = -218959118;
  v4[536862798] = -202116109;
  v4[536862799] = -202116109;
  std::string::basic_string(v2 + 448);
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 512),
    &byte_1A4519C0,
    (const std::allocator<char> *)(v2 + 32));
  t = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 512), &this->schedule_id) != 0;
  std::string::~string((void *)(v2 + 512));
  *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 576) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 576, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 576),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      1778);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 576),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v5, (const char (*)[29])byte_1A451A00);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 576));
    *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 640),
      &byte_1A451A40,
      (const std::allocator<char> *)(v2 + 48));
    ta = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 640), &this->begin_time_str) != 0;
    std::string::~string((void *)(v2 + 640));
    *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 704) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 735) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 735) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 704, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 704),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        1783);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 704),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v7, (const char (*)[33])byte_1A451A80);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 704));
      *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 768),
        &byte_1A451AE0,
        (const std::allocator<char> *)(v2 + 64));
      tb = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 768), &this->end_time_str) != 0;
      std::string::~string((void *)(v2 + 768));
      *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( tb )
      {
        *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 832) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 863) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 863) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 832, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 832),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          1788);
        v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
               (common::milog::MiLogStream *const)(v2 + 832),
               (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v8, (const char (*)[33])byte_1A451B20);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 832));
        *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 896),
          &byte_1A450F00,
          (const std::allocator<char> *)(v2 + 80));
        tc = common::tools::TxtFile::Row::assignToNum<unsigned int>(
               row,
               (const std::string *)(v2 + 896),
               &this->activity_id) != 0;
        std::string::~string((void *)(v2 + 896));
        *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( tc )
        {
          *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 960) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 991) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 991) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 960, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 960),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            1793);
          v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 960),
                 (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v9, (const char (*)[29])byte_1A450F40);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 960));
          *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = -117901064;
          v6 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 96);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 1024),
            &byte_1A451B80,
            (const std::allocator<char> *)(v2 + 96));
          td = common::tools::TxtFile::Row::assignToNum<bool>(
                 row,
                 (const std::string *)(v2 + 1024),
                 &this->allow_quick_open) != 0;
          std::string::~string((void *)(v2 + 1024));
          *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 96);
          *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
          if ( td )
          {
            *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1088) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1119) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 1119) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1088, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1088),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "init",
              1798);
            v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1088),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v10, (const char (*)[39])byte_1A451BC0);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1088));
            *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = -117901064;
            v6 = -1;
          }
          else
          {
            *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 112);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 1152),
              &byte_1A451C20,
              (const std::allocator<char> *)(v2 + 112));
            te = common::tools::TxtFile::Row::assignToStr(
                   row,
                   (const std::string *)(v2 + 1152),
                   (std::string *)(v2 + 448)) != 0;
            std::string::~string((void *)(v2 + 1152));
            *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 112);
            *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
            if ( te )
            {
              *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 1216) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 1247) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 1247) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 1216, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 1216),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "init",
                1803);
              v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 1216),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(v11, (const char (*)[53])byte_1A451C80);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1216));
              *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = -117901064;
              v6 = -1;
            }
            else
            {
              v12 = ((v2 + 320) >> 3) + 2147450880;
              *(_WORD *)v12 = 0;
              *(_BYTE *)(v12 + 2) = 0;
              v13 = (_DWORD *)(((v2 + 2048) >> 3) + 2147450880);
              *v13 = 0;
              v13[1] = 0;
              *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 128);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 2048),
                ";",
                (const std::allocator<char> *)(v2 + 128));
              *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 144);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 2080),
                ",",
                (const std::allocator<char> *)(v2 + 144));
              *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
              std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 160));
              std::vector<std::string>::vector(
                (std::vector<std::string> *const)(v2 + 320),
                (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 2048),
                (const std::vector<std::string>::allocator_type *)(v2 + 160));
              v14 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                      (const std::string *)(v2 + 448),
                      (const std::vector<std::string> *)(v2 + 320),
                      &this->quick_open_pre_quest_list,
                      1) != 0;
              std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 320));
              v15 = ((v2 + 320) >> 3) + 2147450880;
              *(_WORD *)v15 = -1800;
              *(_BYTE *)(v15 + 2) = -8;
              std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 160));
              *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
              for ( j = (char *)(v2 + 2112); j != (char *)(v2 + 2048); std::string::~string(j) )
                j -= 32;
              v17 = (_DWORD *)(((v2 + 2048) >> 3) + 2147450880);
              *v17 = -117901064;
              v17[1] = -117901064;
              std::allocator<char>::~allocator(v2 + 144);
              *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
              std::allocator<char>::~allocator(v2 + 128);
              *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
              if ( v14 )
              {
                *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 1280) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1311) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 1311) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1280, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 1280),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                  "init",
                  1808);
                v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 1280),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(v18, (const char (*)[53])byte_1A451C80);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1280));
                *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = -117901064;
                v6 = -1;
              }
              else
              {
                *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 176);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 1344),
                  asc_1A451CE0,
                  (const std::allocator<char> *)(v2 + 176));
                v19 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
                        row,
                        (const std::string *)(v2 + 1344),
                        &this->cond_comb) != 0;
                std::string::~string((void *)(v2 + 1344));
                *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 176);
                *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
                if ( v19 )
                {
                  *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1408) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1439) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 1439) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1408, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1408),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                    "init",
                    1813);
                  v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1408),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                    v20,
                    (const char (*)[35])byte_1A451D20);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1408));
                  *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = -117901064;
                  v6 = -1;
                }
                else
                {
                  std::vector<data::NewActivityScheduleCond>::resize(&this->cond, 4uLL);
                  array_count = 0;
                  for ( i = 0; i <= 3; ++i )
                  {
                    snprintf((char *)(v2 + 2240), 0x100uLL, asc_1A451D80, i + 1);
                    *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = 0;
                    *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v2 + 192);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v2 + 1472),
                      (const char *)(v2 + 2240),
                      (const std::allocator<char> *)(v2 + 192));
                    v21 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1472));
                    std::string::~string((void *)(v2 + 1472));
                    *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = -117901064;
                    std::allocator<char>::~allocator(v2 + 192);
                    *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
                    if ( !v21 )
                    {
                      p_type = &std::vector<data::NewActivityScheduleCond>::operator[](&this->cond, i)->type;
                      *(_DWORD *)(((v2 + 1536) >> 3) + 0x7FFF8000) = 0;
                      *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v2 + 208);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v2 + 1536),
                        (const char *)(v2 + 2240),
                        (const std::allocator<char> *)(v2 + 208));
                      LOBYTE(p_type) = common::tools::TxtFile::Row::assignToEnum<data::NewActivityScheduleCondType>(
                                         row,
                                         (const std::string *)(v2 + 1536),
                                         p_type) != 0;
                      std::string::~string((void *)(v2 + 1536));
                      *(_DWORD *)(((v2 + 1536) >> 3) + 0x7FFF8000) = -117901064;
                      std::allocator<char>::~allocator(v2 + 208);
                      *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
                      if ( (_BYTE)p_type )
                      {
                        *(_DWORD *)(((v2 + 1600) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v2 + 1600) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v2 + 1631) >> 3) + 0x7FFF8000) != 0
                          && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 1631) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v2 + 1600, 32LL);
                        }
                        common::milog::MiLogStream::create(
                          (common::milog::MiLogStream *)(v2 + 1600),
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                          "init",
                          1825);
                        v23 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                (common::milog::MiLogStream *const)(v2 + 1600),
                                (const char (*)[16])"[CONFIG_ERROR] ");
                        v24 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                                v23,
                                (const char (*)[14])byte_1A451DC0);
                        v25 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                                v24,
                                (const char (*)[256])(v2 + 2240));
                        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(
                          v25,
                          (const char (*)[7])byte_1A451E00);
                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1600));
                        *(_DWORD *)(((v2 + 1600) >> 3) + 0x7FFF8000) = -117901064;
                        v6 = -1;
                        goto LABEL_65;
                      }
                      snprintf((char *)(v2 + 2240), 0x100uLL, asc_1A451E40, i + 1);
                      *(_DWORD *)(((v2 + 1664) >> 3) + 0x7FFF8000) = 0;
                      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v2 + 224);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v2 + 1664),
                        (const char *)(v2 + 2240),
                        (const std::allocator<char> *)(v2 + 224));
                      v26 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1664));
                      std::string::~string((void *)(v2 + 1664));
                      *(_DWORD *)(((v2 + 1664) >> 3) + 0x7FFF8000) = -117901064;
                      std::allocator<char>::~allocator(v2 + 224);
                      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
                      if ( !v26 )
                      {
                        *(_DWORD *)(((v2 + 1728) >> 3) + 0x7FFF8000) = 0;
                        *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v2 + 240);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v2 + 1728),
                          (const char *)(v2 + 2240),
                          (const std::allocator<char> *)(v2 + 240));
                        v27 = common::tools::TxtFile::Row::assignToStr(
                                row,
                                (const std::string *)(v2 + 1728),
                                (std::string *)(v2 + 448)) != 0;
                        std::string::~string((void *)(v2 + 1728));
                        *(_DWORD *)(((v2 + 1728) >> 3) + 0x7FFF8000) = -117901064;
                        std::allocator<char>::~allocator(v2 + 240);
                        *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
                        if ( v27 )
                        {
                          *(_DWORD *)(((v2 + 1792) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v2 + 1792) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 1823) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 1823) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 1792, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v2 + 1792),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                            "init",
                            1833);
                          v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                  (common::milog::MiLogStream *const)(v2 + 1792),
                                  (const char (*)[16])"[CONFIG_ERROR] ");
                          v29 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                                  v28,
                                  (const char (*)[14])byte_1A451DC0);
                          v30 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                                  v29,
                                  (const char (*)[256])(v2 + 2240));
                          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(
                            v30,
                            (const char (*)[7])byte_1A451E00);
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1792));
                          *(_DWORD *)(((v2 + 1792) >> 3) + 0x7FFF8000) = -117901064;
                          v6 = -1;
                          goto LABEL_65;
                        }
                        p_param = &std::vector<data::NewActivityScheduleCond>::operator[](&this->cond, i)->param;
                        v32 = ((v2 + 384) >> 3) + 2147450880;
                        *(_WORD *)v32 = 0;
                        *(_BYTE *)(v32 + 2) = 0;
                        v33 = (_DWORD *)(((v2 + 2144) >> 3) + 2147450880);
                        *v33 = 0;
                        v33[1] = 0;
                        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v2 + 256);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v2 + 2144),
                          ";",
                          (const std::allocator<char> *)(v2 + 256));
                        *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v2 + 272);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v2 + 2176),
                          ",",
                          (const std::allocator<char> *)(v2 + 272));
                        __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2144);
                        __l._M_len = 2LL;
                        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 288));
                        std::vector<std::string>::vector(
                          (std::vector<std::string> *const)(v2 + 384),
                          __l,
                          (const std::vector<std::string>::allocator_type *)(v2 + 288));
                        v34 = common::tools::StringUtils::splitToListBySeps<int>(
                                (const std::string *)(v2 + 448),
                                (const std::vector<std::string> *)(v2 + 384),
                                p_param,
                                1) != 0;
                        std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 384));
                        v35 = ((v2 + 384) >> 3) + 2147450880;
                        *(_WORD *)v35 = -1800;
                        *(_BYTE *)(v35 + 2) = -8;
                        std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 288));
                        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
                        for ( k = (char *)(v2 + 2208); k != (char *)(v2 + 2144); std::string::~string(k) )
                          k -= 32;
                        v37 = (_DWORD *)(((v2 + 2144) >> 3) + 2147450880);
                        *v37 = -117901064;
                        v37[1] = -117901064;
                        std::allocator<char>::~allocator(v2 + 272);
                        *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
                        std::allocator<char>::~allocator(v2 + 256);
                        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
                        if ( v34 )
                        {
                          *(_DWORD *)(((v2 + 1856) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v2 + 1856) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 1887) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 1887) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 1856, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v2 + 1856),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                            "init",
                            1838);
                          v38 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                  (common::milog::MiLogStream *const)(v2 + 1856),
                                  (const char (*)[16])"[CONFIG_ERROR] ");
                          common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                            v38,
                            (const char (*)[37])byte_1A451E80);
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1856));
                          *(_DWORD *)(((v2 + 1856) >> 3) + 0x7FFF8000) = -117901064;
                          v6 = -1;
                          goto LABEL_65;
                        }
                        array_count = i + 1;
                      }
                    }
                  }
                  std::vector<data::NewActivityScheduleCond>::resize(&this->cond, array_count);
                  *(_DWORD *)(((v2 + 1920) >> 3) + 0x7FFF8000) = 0;
                  *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<char>::allocator(v2 + 304);
                  std::string::basic_string<std::allocator<char>>(
                    (std::string *const)(v2 + 1920),
                    &byte_1A451EE0,
                    (const std::allocator<char> *)(v2 + 304));
                  v39 = common::tools::TxtFile::Row::assignToStr(
                          row,
                          (const std::string *)(v2 + 1920),
                          &this->schedule_version) != 0;
                  std::string::~string((void *)(v2 + 1920));
                  *(_DWORD *)(((v2 + 1920) >> 3) + 0x7FFF8000) = -117901064;
                  std::allocator<char>::~allocator(v2 + 304);
                  *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
                  if ( v39 )
                  {
                    *(_DWORD *)(((v2 + 1984) >> 3) + 0x7FFF8000) = 0;
                    if ( *(char *)(((v2 + 1984) >> 3) + 0x7FFF8000) < 0
                      || *(_BYTE *)(((v2 + 2015) >> 3) + 0x7FFF8000) != 0
                      && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 2015) >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_store_n(v2 + 1984, 32LL);
                    }
                    common::milog::MiLogStream::create(
                      (common::milog::MiLogStream *)(v2 + 1984),
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                      "init",
                      1847);
                    v40 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                            (common::milog::MiLogStream *const)(v2 + 1984),
                            (const char (*)[16])"[CONFIG_ERROR] ");
                    common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                      v40,
                      (const char (*)[39])byte_1A451F20);
                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1984));
                    *(_DWORD *)(((v2 + 1984) >> 3) + 0x7FFF8000) = -117901064;
                    v6 = -1;
                  }
                  else
                  {
                    v6 = 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_65:
  std::string::~string((void *)(v2 + 448));
  if ( v51 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF803C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8110) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862737) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450940 - (((_DWORD)v4 + 2147450948) & 0xFFFFFFF8) + 220) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8138) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_6(v2, 2560LL, v51);
  }
  return v6;
};

// Line 1855: range 000000000EEC9830-000000000EECA3BB
int32_t __cdecl data::NewActivityCondGroupExcelConfig::init(
        data::NewActivityCondGroupExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  unsigned __int64 v8; // rax
  _DWORD *v9; // rax
  bool v10; // r15
  unsigned __int64 v11; // rax
  char *i; // r14
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  int32_t result; // eax
  bool t; // [rsp+8h] [rbp-2E8h]
  bool ta; // [rsp+8h] [rbp-2E8h]
  char v18[720]; // [rsp+20h] [rbp-2D0h] BYREF

  v2 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(672LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "13 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 24 "
                        "9 <unknown> 192 32 12 val_str:1856 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 "
                        "32 9 <unknown> 512 32 9 <unknown> 576 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityCondGroupExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234881024;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862740] = -202116109;
  std::string::basic_string(v2 + 192);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 256),
    &byte_1A452080,
    (const std::allocator<char> *)(v2 + 48));
  t = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 256), &this->group_id) != 0;
  std::string::~string((void *)(v2 + 256));
  *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 320, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 320),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      1859);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 320),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v5, (const char (*)[32])byte_1A4520C0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 320));
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 384),
      &byte_1A452100,
      (const std::allocator<char> *)(v2 + 64));
    ta = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 384), (std::string *)(v2 + 192)) != 0;
    std::string::~string((void *)(v2 + 384));
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 63) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 448, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 448),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        1864);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 448),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v7, (const char (*)[33])byte_1A452140);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      v8 = ((v2 + 128) >> 3) + 2147450880;
      *(_WORD *)v8 = 0;
      *(_BYTE *)(v8 + 2) = 0;
      v9 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
      *v9 = 0;
      v9[1] = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 576),
        ";",
        (const std::allocator<char> *)(v2 + 80));
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 96);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 608),
        ",",
        (const std::allocator<char> *)(v2 + 96));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 112));
      std::vector<std::string>::vector(
        (std::vector<std::string> *const)(v2 + 128),
        (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 576),
        (const std::vector<std::string>::allocator_type *)(v2 + 112));
      v10 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
              (const std::string *)(v2 + 192),
              (const std::vector<std::string> *)(v2 + 128),
              &this->cond_id,
              1) != 0;
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 128));
      v11 = ((v2 + 128) >> 3) + 2147450880;
      *(_WORD *)v11 = -1800;
      *(_BYTE *)(v11 + 2) = -8;
      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 112));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      for ( i = (char *)(v2 + 640); i != (char *)(v2 + 576); std::string::~string(i) )
        i -= 32;
      v13 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
      *v13 = -117901064;
      v13[1] = -117901064;
      std::allocator<char>::~allocator(v2 + 96);
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 127) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 512, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 512),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          1869);
        v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 512),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v14, (const char (*)[33])byte_1A452140);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        v6 = 0;
      }
    }
  }
  std::string::~string((void *)(v2 + 192));
  result = v6;
  if ( v18 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF803C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF804C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8050) = -168430091;
  }
  return result;
};

// Line 1877: range 000000000EECA3BC-000000000EECAF47
int32_t __cdecl data::NewActivityCond::init(data::NewActivityCond *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  unsigned __int64 v8; // rax
  _DWORD *v9; // rax
  bool v10; // r15
  unsigned __int64 v11; // rax
  char *i; // r14
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  int32_t result; // eax
  bool t; // [rsp+8h] [rbp-2E8h]
  bool ta; // [rsp+8h] [rbp-2E8h]
  char v18[720]; // [rsp+20h] [rbp-2D0h] BYREF

  v2 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(672LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "13 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 24 "
                        "9 <unknown> 192 32 12 val_str:1878 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 "
                        "32 9 <unknown> 512 32 9 <unknown> 576 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityCond::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234881024;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862740] = -202116109;
  std::string::basic_string(v2 + 192);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 256),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  t = common::tools::TxtFile::Row::assignToEnum<data::NewActivityCondType>(
        row,
        (const std::string *)(v2 + 256),
        &this->type) != 0;
  std::string::~string((void *)(v2 + 256));
  *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 320, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 320),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      1881);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 320),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v5, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 320));
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 384),
      &byte_1A4515A0,
      (const std::allocator<char> *)(v2 + 64));
    ta = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 384), (std::string *)(v2 + 192)) != 0;
    std::string::~string((void *)(v2 + 384));
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 63) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 448, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 448),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        1886);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 448),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v7, (const char (*)[27])byte_1A4515E0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      v8 = ((v2 + 128) >> 3) + 2147450880;
      *(_WORD *)v8 = 0;
      *(_BYTE *)(v8 + 2) = 0;
      v9 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
      *v9 = 0;
      v9[1] = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 576),
        ";",
        (const std::allocator<char> *)(v2 + 80));
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 96);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 608),
        ",",
        (const std::allocator<char> *)(v2 + 96));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 112));
      std::vector<std::string>::vector(
        (std::vector<std::string> *const)(v2 + 128),
        (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 576),
        (const std::vector<std::string>::allocator_type *)(v2 + 112));
      v10 = common::tools::StringUtils::splitToListBySeps<int>(
              (const std::string *)(v2 + 192),
              (const std::vector<std::string> *)(v2 + 128),
              &this->param,
              1) != 0;
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 128));
      v11 = ((v2 + 128) >> 3) + 2147450880;
      *(_WORD *)v11 = -1800;
      *(_BYTE *)(v11 + 2) = -8;
      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 112));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      for ( i = (char *)(v2 + 640); i != (char *)(v2 + 576); std::string::~string(i) )
        i -= 32;
      v13 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
      *v13 = -117901064;
      v13[1] = -117901064;
      std::allocator<char>::~allocator(v2 + 96);
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 127) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 512, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 512),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          1891);
        v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 512),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v14, (const char (*)[27])byte_1A4515E0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        v6 = 0;
      }
    }
  }
  std::string::~string((void *)(v2 + 192));
  result = v6;
  if ( v18 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF803C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF804C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8050) = -168430091;
  }
  return result;
};

// Line 1899: range 000000000EECAF48-000000000EECBAD3
int32_t __cdecl data::NewActivityExec::init(data::NewActivityExec *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  unsigned __int64 v8; // rax
  _DWORD *v9; // rax
  bool v10; // r15
  unsigned __int64 v11; // rax
  char *i; // r14
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  int32_t result; // eax
  bool t; // [rsp+8h] [rbp-2E8h]
  bool ta; // [rsp+8h] [rbp-2E8h]
  char v18[720]; // [rsp+20h] [rbp-2D0h] BYREF

  v2 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(672LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "13 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 24 "
                        "9 <unknown> 192 32 12 val_str:1900 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 "
                        "32 9 <unknown> 512 32 9 <unknown> 576 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExec::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234881024;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862740] = -202116109;
  std::string::basic_string(v2 + 192);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 256),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  t = common::tools::TxtFile::Row::assignToEnum<data::NewActivityActionType>(
        row,
        (const std::string *)(v2 + 256),
        &this->type) != 0;
  std::string::~string((void *)(v2 + 256));
  *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 320, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 320),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      1903);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 320),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v5, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 320));
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 384),
      &byte_1A4515A0,
      (const std::allocator<char> *)(v2 + 64));
    ta = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 384), (std::string *)(v2 + 192)) != 0;
    std::string::~string((void *)(v2 + 384));
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 63) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 448, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 448),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        1908);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 448),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v7, (const char (*)[27])byte_1A4515E0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      v8 = ((v2 + 128) >> 3) + 2147450880;
      *(_WORD *)v8 = 0;
      *(_BYTE *)(v8 + 2) = 0;
      v9 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
      *v9 = 0;
      v9[1] = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 576),
        ";",
        (const std::allocator<char> *)(v2 + 80));
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 96);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 608),
        ",",
        (const std::allocator<char> *)(v2 + 96));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 112));
      std::vector<std::string>::vector(
        (std::vector<std::string> *const)(v2 + 128),
        (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 576),
        (const std::vector<std::string>::allocator_type *)(v2 + 112));
      v10 = common::tools::StringUtils::splitToListBySeps(
              (const std::string *)(v2 + 192),
              (const std::vector<std::string> *)(v2 + 128),
              &this->param,
              1) != 0;
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 128));
      v11 = ((v2 + 128) >> 3) + 2147450880;
      *(_WORD *)v11 = -1800;
      *(_BYTE *)(v11 + 2) = -8;
      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 112));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      for ( i = (char *)(v2 + 640); i != (char *)(v2 + 576); std::string::~string(i) )
        i -= 32;
      v13 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
      *v13 = -117901064;
      v13[1] = -117901064;
      std::allocator<char>::~allocator(v2 + 96);
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 127) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 512, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 512),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          1913);
        v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 512),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v14, (const char (*)[27])byte_1A4515E0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        v6 = 0;
      }
    }
  }
  std::string::~string((void *)(v2 + 192));
  result = v6;
  if ( v18 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF803C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF804C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8050) = -168430091;
  }
  return result;
};

// Line 1921: range 000000000EECBAD4-000000000EECF21B
int32_t __cdecl data::NewActivityCondExcelConfig::init(
        data::NewActivityCondExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r15
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r13
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // r13d
  bool v8; // r13
  common::milog::MiLogStream *v9; // rax
  bool v10; // r13
  common::milog::MiLogStream *v11; // rax
  bool v12; // r13
  common::milog::MiLogStream *v13; // rax
  bool v14; // r13
  data::NewActivityCondType *p_type; // r13
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  bool v19; // r13
  bool v20; // r13
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  std::vector<int> *p_param; // r13
  unsigned __int64 v25; // rax
  _DWORD *v26; // rax
  bool v27; // r14
  unsigned __int64 v28; // rax
  char *j; // r13
  _DWORD *v30; // rax
  common::milog::MiLogStream *v31; // rax
  bool v32; // r13
  data::NewActivityActionType *v33; // r13
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rax
  bool v37; // r13
  bool v38; // r13
  common::milog::MiLogStream *v39; // rax
  common::milog::MiLogStream *v40; // rax
  common::milog::MiLogStream *v41; // rax
  std::vector<std::string> *v42; // r13
  unsigned __int64 v43; // rax
  _DWORD *v44; // rax
  bool v45; // r14
  unsigned __int64 v46; // rax
  char *k; // r13
  _DWORD *v48; // rax
  common::milog::MiLogStream *v49; // rax
  bool v50; // r13
  data::NewActivityActionType *v51; // r13
  common::milog::MiLogStream *v52; // rax
  common::milog::MiLogStream *v53; // rax
  common::milog::MiLogStream *v54; // rax
  bool v55; // r13
  bool v56; // r13
  common::milog::MiLogStream *v57; // rax
  common::milog::MiLogStream *v58; // rax
  common::milog::MiLogStream *v59; // rax
  std::vector<std::string> *v60; // r13
  unsigned __int64 v61; // rax
  _DWORD *v62; // rax
  bool v63; // r14
  unsigned __int64 v64; // rax
  char *m; // r13
  _DWORD *v66; // rax
  common::milog::MiLogStream *v67; // rax
  bool v68; // r13
  common::milog::MiLogStream *v69; // rax
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-D60h]
  std::initializer_list<std::string > v72; // [rsp+20h] [rbp-D50h]
  std::initializer_list<std::string > v73; // [rsp+30h] [rbp-D40h]
  uint32_t array_count; // [rsp+50h] [rbp-D20h]
  uint32_t array_counta; // [rsp+50h] [rbp-D20h]
  uint32_t array_countb; // [rsp+50h] [rbp-D20h]
  uint32_t i; // [rsp+54h] [rbp-D1Ch]
  uint32_t i_0; // [rsp+58h] [rbp-D18h]
  uint32_t i_1; // [rsp+5Ch] [rbp-D14h]
  char v80[3344]; // [rsp+60h] [rbp-D10h] BYREF

  v2 = (unsigned __int64)v80;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_6(3296LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "65 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unkno"
                        "wn> 208 1 9 <unknown> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 28"
                        "8 1 9 <unknown> 304 1 9 <unknown> 320 1 9 <unknown> 336 1 9 <unknown> 352 1 9 <unknown> 368 1 9 "
                        "<unknown> 384 1 9 <unknown> 400 1 9 <unknown> 416 1 9 <unknown> 432 1 9 <unknown> 448 24 9 <unkn"
                        "own> 512 24 9 <unknown> 576 24 9 <unknown> 640 32 12 val_str:1924 704 32 9 <unknown> 768 32 9 <u"
                        "nknown> 832 32 9 <unknown> 896 32 9 <unknown> 960 32 9 <unknown> 1024 32 9 <unknown> 1088 32 9 <"
                        "unknown> 1152 32 9 <unknown> 1216 32 9 <unknown> 1280 32 9 <unknown> 1344 32 9 <unknown> 1408 32"
                        " 9 <unknown> 1472 32 9 <unknown> 1536 32 9 <unknown> 1600 32 9 <unknown> 1664 32 9 <unknown> 172"
                        "8 32 9 <unknown> 1792 32 9 <unknown> 1856 32 9 <unknown> 1920 32 9 <unknown> 1984 32 9 <unknown>"
                        " 2048 32 9 <unknown> 2112 32 9 <unknown> 2176 32 9 <unknown> 2240 32 9 <unknown> 2304 32 9 <unkn"
                        "own> 2368 32 9 <unknown> 2432 32 9 <unknown> 2496 32 9 <unknown> 2560 32 9 <unknown> 2624 32 9 <"
                        "unknown> 2688 64 9 <unknown> 2784 64 9 <unknown> 2880 64 9 <unknown> 2976 256 13 col_name:1922";
  *(_QWORD *)(v2 + 16) = data::NewActivityCondExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234753535;
  v4[536862730] = -234753535;
  v4[536862731] = -234753535;
  v4[536862732] = -234753535;
  v4[536862733] = -234753535;
  v4[536862734] = -234881024;
  v4[536862735] = -218959118;
  v4[536862736] = -234881024;
  v4[536862737] = -218959118;
  v4[536862738] = -234881024;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862743] = -218959118;
  v4[536862745] = -218959118;
  v4[536862747] = -218959118;
  v4[536862749] = -218959118;
  v4[536862751] = -218959118;
  v4[536862753] = -218959118;
  v4[536862755] = -218959118;
  v4[536862757] = -218959118;
  v4[536862759] = -218959118;
  v4[536862761] = -218959118;
  v4[536862763] = -218959118;
  v4[536862765] = -218959118;
  v4[536862767] = -218959118;
  v4[536862769] = -218959118;
  v4[536862771] = -218959118;
  v4[536862773] = -218959118;
  v4[536862775] = -218959118;
  v4[536862777] = -218959118;
  v4[536862779] = -218959118;
  v4[536862781] = -218959118;
  v4[536862783] = -218959118;
  v4[536862785] = -218959118;
  v4[536862787] = -218959118;
  v4[536862789] = -218959118;
  v4[536862791] = -218959118;
  v4[536862793] = -218959118;
  v4[536862795] = -218959118;
  v4[536862797] = -218959118;
  v4[536862799] = -218959118;
  v4[536862801] = -218959118;
  v4[536862803] = -218959118;
  v4[536862806] = -218959118;
  v4[536862809] = -218959118;
  v4[536862812] = -218959118;
  v4[536862821] = -202116109;
  v4[536862822] = -202116109;
  std::string::basic_string(v2 + 640);
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 704),
    "CondId",
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 704), &this->cond_id) != 0;
  std::string::~string((void *)(v2 + 704));
  *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 768) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 799) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 63) & 7) >= *(_BYTE *)(((v2 + 799) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 768, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 768),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      1927);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 768),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A4528C0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 768));
    *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 832),
      &byte_1A452900,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToEnum<data::NewActivityCondDefaultStateType>(
           row,
           (const std::string *)(v2 + 832),
           &this->default_state) != 0;
    std::string::~string((void *)(v2 + 832));
    *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 896) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 927) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 927) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 896, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 896),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        1932);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 896),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v9, (const char (*)[33])byte_1A452940);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 896));
      *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = -117901064;
      v7 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 960),
        &byte_1A4529A0,
        (const std::allocator<char> *)(v2 + 64));
      v10 = common::tools::TxtFile::Row::assignToNum<bool>(
              row,
              (const std::string *)(v2 + 960),
              &this->is_notify_client) != 0;
      std::string::~string((void *)(v2 + 960));
      *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 1024) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1055) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 63) & 7) >= *(_BYTE *)(((v2 + 1055) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1024, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 1024),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          1937);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 1024),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v11, (const char (*)[36])byte_1A4529E0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1024));
        *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1088),
          asc_1A451CE0,
          (const std::allocator<char> *)(v2 + 80));
        v12 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
                row,
                (const std::string *)(v2 + 1088),
                &this->cond_comb) != 0;
        std::string::~string((void *)(v2 + 1088));
        *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v12 )
        {
          *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 1152) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1183) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 1183) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 1152, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 1152),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            1942);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 1152),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v13, (const char (*)[35])byte_1A451D20);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1152));
          *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = -117901064;
          v7 = -1;
        }
        else
        {
          std::vector<data::NewActivityCond>::resize(&this->cond, 5uLL);
          array_count = 0;
          for ( i = 0; i <= 4; ++i )
          {
            snprintf((char *)(v2 + 2976), 0x100uLL, asc_1A451D80, i + 1);
            *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 96);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 1216),
              (const char *)(v2 + 2976),
              (const std::allocator<char> *)(v2 + 96));
            v14 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1216));
            std::string::~string((void *)(v2 + 1216));
            *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 96);
            *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
            if ( !v14 )
            {
              p_type = &std::vector<data::NewActivityCond>::operator[](&this->cond, i)->type;
              *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 112);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 1280),
                (const char *)(v2 + 2976),
                (const std::allocator<char> *)(v2 + 112));
              LOBYTE(p_type) = common::tools::TxtFile::Row::assignToEnum<data::NewActivityCondType>(
                                 row,
                                 (const std::string *)(v2 + 1280),
                                 p_type) != 0;
              std::string::~string((void *)(v2 + 1280));
              *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 112);
              *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
              if ( (_BYTE)p_type )
              {
                *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 1344) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1375) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 32 + 127) & 7) >= *(_BYTE *)(((v2 + 1375) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1344, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 1344),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                  "init",
                  1954);
                v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 1344),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v17 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                        v16,
                        (const char (*)[14])byte_1A451DC0);
                v18 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                        v17,
                        (const char (*)[256])(v2 + 2976));
                common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v18, (const char (*)[7])byte_1A451E00);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1344));
                *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = -117901064;
                v7 = -1;
                goto LABEL_88;
              }
              snprintf((char *)(v2 + 2976), 0x100uLL, asc_1A451E40, i + 1);
              *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 128);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 1408),
                (const char *)(v2 + 2976),
                (const std::allocator<char> *)(v2 + 128));
              v19 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1408));
              std::string::~string((void *)(v2 + 1408));
              *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 128);
              *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
              if ( !v19 )
              {
                *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 144);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 1472),
                  (const char *)(v2 + 2976),
                  (const std::allocator<char> *)(v2 + 144));
                v20 = common::tools::TxtFile::Row::assignToStr(
                        row,
                        (const std::string *)(v2 + 1472),
                        (std::string *)(v2 + 640)) != 0;
                std::string::~string((void *)(v2 + 1472));
                *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 144);
                *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
                if ( v20 )
                {
                  *(_DWORD *)(((v2 + 1536) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1536) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1567) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 32 + 63) & 7) >= *(_BYTE *)(((v2 + 1567) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1536, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1536),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                    "init",
                    1962);
                  v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1536),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  v22 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                          v21,
                          (const char (*)[14])byte_1A451DC0);
                  v23 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                          v22,
                          (const char (*)[256])(v2 + 2976));
                  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v23, (const char (*)[7])byte_1A451E00);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1536));
                  *(_DWORD *)(((v2 + 1536) >> 3) + 0x7FFF8000) = -117901064;
                  v7 = -1;
                  goto LABEL_88;
                }
                p_param = &std::vector<data::NewActivityCond>::operator[](&this->cond, i)->param;
                v25 = ((v2 + 448) >> 3) + 2147450880;
                *(_WORD *)v25 = 0;
                *(_BYTE *)(v25 + 2) = 0;
                v26 = (_DWORD *)(((v2 + 2688) >> 3) + 2147450880);
                *v26 = 0;
                v26[1] = 0;
                *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 160);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 2688),
                  ";",
                  (const std::allocator<char> *)(v2 + 160));
                *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 176);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 2720),
                  ",",
                  (const std::allocator<char> *)(v2 + 176));
                __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2688);
                __l._M_len = 2LL;
                *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
                std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 192));
                std::vector<std::string>::vector(
                  (std::vector<std::string> *const)(v2 + 448),
                  __l,
                  (const std::vector<std::string>::allocator_type *)(v2 + 192));
                v27 = common::tools::StringUtils::splitToListBySeps<int>(
                        (const std::string *)(v2 + 640),
                        (const std::vector<std::string> *)(v2 + 448),
                        p_param,
                        1) != 0;
                std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 448));
                v28 = ((v2 + 448) >> 3) + 2147450880;
                *(_WORD *)v28 = -1800;
                *(_BYTE *)(v28 + 2) = -8;
                std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 192));
                *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
                for ( j = (char *)(v2 + 2752); j != (char *)(v2 + 2688); std::string::~string(j) )
                  j -= 32;
                v30 = (_DWORD *)(((v2 + 2688) >> 3) + 2147450880);
                *v30 = -117901064;
                v30[1] = -117901064;
                std::allocator<char>::~allocator(v2 + 176);
                *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
                std::allocator<char>::~allocator(v2 + 160);
                *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
                if ( v27 )
                {
                  *(_DWORD *)(((v2 + 1600) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1600) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1631) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 32 + 127) & 7) >= *(_BYTE *)(((v2 + 1631) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1600, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1600),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                    "init",
                    1967);
                  v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1600),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                    v31,
                    (const char (*)[37])byte_1A451E80);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1600));
                  *(_DWORD *)(((v2 + 1600) >> 3) + 0x7FFF8000) = -117901064;
                  v7 = -1;
                  goto LABEL_88;
                }
                array_count = i + 1;
              }
            }
          }
          std::vector<data::NewActivityCond>::resize(&this->cond, array_count);
          std::vector<data::NewActivityExec>::resize(&this->meet_exec, 5uLL);
          array_counta = 0;
          for ( i_0 = 0; i_0 <= 4; ++i_0 )
          {
            snprintf((char *)(v2 + 2976), 0x100uLL, asc_1A452A40, i_0 + 1);
            *(_DWORD *)(((v2 + 1664) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 208);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 1664),
              (const char *)(v2 + 2976),
              (const std::allocator<char> *)(v2 + 208));
            v32 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1664));
            std::string::~string((void *)(v2 + 1664));
            *(_DWORD *)(((v2 + 1664) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 208);
            *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
            if ( !v32 )
            {
              v33 = &std::vector<data::NewActivityExec>::operator[](&this->meet_exec, i_0)->type;
              *(_DWORD *)(((v2 + 1728) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 224);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 1728),
                (const char *)(v2 + 2976),
                (const std::allocator<char> *)(v2 + 224));
              LOBYTE(v33) = common::tools::TxtFile::Row::assignToEnum<data::NewActivityActionType>(
                              row,
                              (const std::string *)(v2 + 1728),
                              v33) != 0;
              std::string::~string((void *)(v2 + 1728));
              *(_DWORD *)(((v2 + 1728) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 224);
              *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
              if ( (_BYTE)v33 )
              {
                *(_DWORD *)(((v2 + 1792) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 1792) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1823) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 32 + 63) & 7) >= *(_BYTE *)(((v2 + 1823) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1792, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 1792),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                  "init",
                  1983);
                v34 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 1792),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v35 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                        v34,
                        (const char (*)[14])byte_1A451DC0);
                v36 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                        v35,
                        (const char (*)[256])(v2 + 2976));
                common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v36, (const char (*)[7])byte_1A451E00);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1792));
                *(_DWORD *)(((v2 + 1792) >> 3) + 0x7FFF8000) = -117901064;
                v7 = -1;
                goto LABEL_88;
              }
              snprintf((char *)(v2 + 2976), 0x100uLL, asc_1A452A80, i_0 + 1);
              *(_DWORD *)(((v2 + 1856) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 240);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 1856),
                (const char *)(v2 + 2976),
                (const std::allocator<char> *)(v2 + 240));
              v37 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1856));
              std::string::~string((void *)(v2 + 1856));
              *(_DWORD *)(((v2 + 1856) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 240);
              *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
              if ( !v37 )
              {
                *(_DWORD *)(((v2 + 1920) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 256);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 1920),
                  (const char *)(v2 + 2976),
                  (const std::allocator<char> *)(v2 + 256));
                v38 = common::tools::TxtFile::Row::assignToStr(
                        row,
                        (const std::string *)(v2 + 1920),
                        (std::string *)(v2 + 640)) != 0;
                std::string::~string((void *)(v2 + 1920));
                *(_DWORD *)(((v2 + 1920) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 256);
                *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
                if ( v38 )
                {
                  *(_DWORD *)(((v2 + 1984) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1984) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 2015) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 2015) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1984, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1984),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                    "init",
                    1991);
                  v39 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1984),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  v40 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                          v39,
                          (const char (*)[14])byte_1A451DC0);
                  v41 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                          v40,
                          (const char (*)[256])(v2 + 2976));
                  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v41, (const char (*)[7])byte_1A451E00);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1984));
                  *(_DWORD *)(((v2 + 1984) >> 3) + 0x7FFF8000) = -117901064;
                  v7 = -1;
                  goto LABEL_88;
                }
                v42 = &std::vector<data::NewActivityExec>::operator[](&this->meet_exec, i_0)->param;
                v43 = ((v2 + 512) >> 3) + 2147450880;
                *(_WORD *)v43 = 0;
                *(_BYTE *)(v43 + 2) = 0;
                v44 = (_DWORD *)(((v2 + 2784) >> 3) + 2147450880);
                *v44 = 0;
                v44[1] = 0;
                *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 272);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 2784),
                  ";",
                  (const std::allocator<char> *)(v2 + 272));
                *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 288);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 2816),
                  ",",
                  (const std::allocator<char> *)(v2 + 288));
                v72._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2784);
                v72._M_len = 2LL;
                *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 1;
                std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 304));
                std::vector<std::string>::vector(
                  (std::vector<std::string> *const)(v2 + 512),
                  v72,
                  (const std::vector<std::string>::allocator_type *)(v2 + 304));
                v45 = common::tools::StringUtils::splitToListBySeps(
                        (const std::string *)(v2 + 640),
                        (const std::vector<std::string> *)(v2 + 512),
                        v42,
                        1) != 0;
                std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 512));
                v46 = ((v2 + 512) >> 3) + 2147450880;
                *(_WORD *)v46 = -1800;
                *(_BYTE *)(v46 + 2) = -8;
                std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 304));
                *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
                for ( k = (char *)(v2 + 2848); k != (char *)(v2 + 2784); std::string::~string(k) )
                  k -= 32;
                v48 = (_DWORD *)(((v2 + 2784) >> 3) + 2147450880);
                *v48 = -117901064;
                v48[1] = -117901064;
                std::allocator<char>::~allocator(v2 + 288);
                *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
                std::allocator<char>::~allocator(v2 + 272);
                *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
                if ( v45 )
                {
                  *(_DWORD *)(((v2 + 2048) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 2048) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 2079) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 32 + 63) & 7) >= *(_BYTE *)(((v2 + 2079) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 2048, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 2048),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                    "init",
                    1996);
                  v49 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 2048),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    v49,
                    (const char (*)[43])byte_1A452AC0);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2048));
                  *(_DWORD *)(((v2 + 2048) >> 3) + 0x7FFF8000) = -117901064;
                  v7 = -1;
                  goto LABEL_88;
                }
                array_counta = i_0 + 1;
              }
            }
          }
          std::vector<data::NewActivityExec>::resize(&this->meet_exec, array_counta);
          std::vector<data::NewActivityExec>::resize(&this->expire_exec, 5uLL);
          array_countb = 0;
          for ( i_1 = 0; i_1 <= 4; ++i_1 )
          {
            snprintf((char *)(v2 + 2976), 0x100uLL, asc_1A452B20, i_1 + 1);
            *(_DWORD *)(((v2 + 2112) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 320);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 2112),
              (const char *)(v2 + 2976),
              (const std::allocator<char> *)(v2 + 320));
            v50 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 2112));
            std::string::~string((void *)(v2 + 2112));
            *(_DWORD *)(((v2 + 2112) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 320);
            *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
            if ( !v50 )
            {
              v51 = &std::vector<data::NewActivityExec>::operator[](&this->expire_exec, i_1)->type;
              *(_DWORD *)(((v2 + 2176) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 336);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 2176),
                (const char *)(v2 + 2976),
                (const std::allocator<char> *)(v2 + 336));
              LOBYTE(v51) = common::tools::TxtFile::Row::assignToEnum<data::NewActivityActionType>(
                              row,
                              (const std::string *)(v2 + 2176),
                              v51) != 0;
              std::string::~string((void *)(v2 + 2176));
              *(_DWORD *)(((v2 + 2176) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 336);
              *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
              if ( (_BYTE)v51 )
              {
                *(_DWORD *)(((v2 + 2240) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 2240) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 2271) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 2271) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 2240, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 2240),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                  "init",
                  2012);
                v52 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 2240),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v53 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                        v52,
                        (const char (*)[14])byte_1A451DC0);
                v54 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                        v53,
                        (const char (*)[256])(v2 + 2976));
                common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v54, (const char (*)[7])byte_1A451E00);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2240));
                *(_DWORD *)(((v2 + 2240) >> 3) + 0x7FFF8000) = -117901064;
                v7 = -1;
                goto LABEL_88;
              }
              snprintf((char *)(v2 + 2976), 0x100uLL, asc_1A452B60, i_1 + 1);
              *(_DWORD *)(((v2 + 2304) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 352);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 2304),
                (const char *)(v2 + 2976),
                (const std::allocator<char> *)(v2 + 352));
              v55 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 2304));
              std::string::~string((void *)(v2 + 2304));
              *(_DWORD *)(((v2 + 2304) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 352);
              *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
              if ( !v55 )
              {
                *(_DWORD *)(((v2 + 2368) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 368);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 2368),
                  (const char *)(v2 + 2976),
                  (const std::allocator<char> *)(v2 + 368));
                v56 = common::tools::TxtFile::Row::assignToStr(
                        row,
                        (const std::string *)(v2 + 2368),
                        (std::string *)(v2 + 640)) != 0;
                std::string::~string((void *)(v2 + 2368));
                *(_DWORD *)(((v2 + 2368) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 368);
                *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = -8;
                if ( v56 )
                {
                  *(_DWORD *)(((v2 + 2432) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 2432) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 2463) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 2463) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 2432, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 2432),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                    "init",
                    2020);
                  v57 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 2432),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  v58 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                          v57,
                          (const char (*)[14])byte_1A451DC0);
                  v59 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                          v58,
                          (const char (*)[256])(v2 + 2976));
                  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v59, (const char (*)[7])byte_1A451E00);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2432));
                  *(_DWORD *)(((v2 + 2432) >> 3) + 0x7FFF8000) = -117901064;
                  v7 = -1;
                  goto LABEL_88;
                }
                v60 = &std::vector<data::NewActivityExec>::operator[](&this->expire_exec, i_1)->param;
                v61 = ((v2 + 576) >> 3) + 2147450880;
                *(_WORD *)v61 = 0;
                *(_BYTE *)(v61 + 2) = 0;
                v62 = (_DWORD *)(((v2 + 2880) >> 3) + 2147450880);
                *v62 = 0;
                v62[1] = 0;
                *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 384);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 2880),
                  ";",
                  (const std::allocator<char> *)(v2 + 384));
                *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 400);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 2912),
                  ",",
                  (const std::allocator<char> *)(v2 + 400));
                v73._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2880);
                v73._M_len = 2LL;
                *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = 1;
                std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 416));
                std::vector<std::string>::vector(
                  (std::vector<std::string> *const)(v2 + 576),
                  v73,
                  (const std::vector<std::string>::allocator_type *)(v2 + 416));
                v63 = common::tools::StringUtils::splitToListBySeps(
                        (const std::string *)(v2 + 640),
                        (const std::vector<std::string> *)(v2 + 576),
                        v60,
                        1) != 0;
                std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 576));
                v64 = ((v2 + 576) >> 3) + 2147450880;
                *(_WORD *)v64 = -1800;
                *(_BYTE *)(v64 + 2) = -8;
                std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 416));
                *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = -8;
                for ( m = (char *)(v2 + 2944); m != (char *)(v2 + 2880); std::string::~string(m) )
                  m -= 32;
                v66 = (_DWORD *)(((v2 + 2880) >> 3) + 2147450880);
                *v66 = -117901064;
                v66[1] = -117901064;
                std::allocator<char>::~allocator(v2 + 400);
                *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = -8;
                std::allocator<char>::~allocator(v2 + 384);
                *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = -8;
                if ( v63 )
                {
                  *(_DWORD *)(((v2 + 2496) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 2496) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 2527) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 2527) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 2496, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 2496),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                    "init",
                    2025);
                  v67 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 2496),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    v67,
                    (const char (*)[43])byte_1A452BA0);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2496));
                  *(_DWORD *)(((v2 + 2496) >> 3) + 0x7FFF8000) = -117901064;
                  v7 = -1;
                  goto LABEL_88;
                }
                array_countb = i_1 + 1;
              }
            }
          }
          std::vector<data::NewActivityExec>::resize(&this->expire_exec, array_countb);
          *(_DWORD *)(((v2 + 2560) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 432);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 2560),
            &byte_1A452C00,
            (const std::allocator<char> *)(v2 + 432));
          v68 = common::tools::TxtFile::Row::assignToNum<bool>(
                  row,
                  (const std::string *)(v2 + 2560),
                  &this->is_only_meet_once) != 0;
          std::string::~string((void *)(v2 + 2560));
          *(_DWORD *)(((v2 + 2560) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 432);
          *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = -8;
          if ( v68 )
          {
            *(_DWORD *)(((v2 + 2624) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 2624) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 2655) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 32 + 127) & 7) >= *(_BYTE *)(((v2 + 2655) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 2624, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 2624),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "init",
              2034);
            v69 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 2624),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v69, (const char (*)[33])byte_1A452C40);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2624));
            *(_DWORD *)(((v2 + 2624) >> 3) + 0x7FFF8000) = -117901064;
            v7 = -1;
          }
          else
          {
            v7 = 0;
          }
        }
      }
    }
  }
LABEL_88:
  std::string::~string((void *)(v2 + 640));
  if ( v80 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8054) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF816C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862743) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450964 - (((_DWORD)v4 + 2147450972) & 0xFFFFFFF8) + 288) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8194) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_6(v2, 3296LL, v80);
  }
  return v7;
};

// Line 2042: range 000000000EECF21C-000000000EECF7A4
int32_t __cdecl data::NewActivityDropSubjectConfig::init(
        data::NewActivityDropSubjectConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  char v10[368]; // [rsp+10h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 1 9 <unknown> 48 1 9 <unknown> 64 32 9 <unknown> 128 32 9 <unknown> 192 32 9 <unknown> 256 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityDropSubjectConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862723] = -218959118;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 64),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::NewActivityDropType>(
         row,
         (const std::string *)(v2 + 64),
         &this->subject_type) != 0;
  std::string::~string((void *)(v2 + 64));
  *(_DWORD *)(((v2 + 64) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2045);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 192),
      &byte_1A4515A0,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 192), &this->drop_param) != 0;
    std::string::~string((void *)(v2 + 192));
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 256) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 256, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 256),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2050);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 256),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v9, (const char (*)[27])byte_1A4515E0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 256));
      result = -1;
    }
    else
    {
      result = 0;
    }
  }
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8014) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2058: range 000000000EECF7A6-000000000EED1122
int32_t __cdecl data::NewActivityDropExcelConfig::init(
        data::NewActivityDropExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  unsigned __int64 v8; // rax
  _DWORD *v9; // rax
  bool v10; // r15
  unsigned __int64 v11; // rax
  char *j; // r14
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  bool v15; // r14
  data::NewActivityDropType *p_subject_type; // r14
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  bool v20; // r14
  std::string *p_drop_param; // r14
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  bool v25; // r14
  common::milog::MiLogStream *v26; // rax
  bool v27; // r14
  common::milog::MiLogStream *v28; // rax
  bool t; // [rsp+0h] [rbp-720h]
  bool ta; // [rsp+0h] [rbp-720h]
  uint32_t array_count; // [rsp+28h] [rbp-6F8h]
  uint32_t i; // [rsp+2Ch] [rbp-6F4h]
  char v34[1776]; // [rsp+30h] [rbp-6F0h] BYREF

  v2 = (unsigned __int64)v34;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1728LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "30 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 9"
                        " <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unknown> 208 1 9 <unkn"
                        "own> 224 24 9 <unknown> 288 32 12 val_str:2061 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <u"
                        "nknown> 544 32 9 <unknown> 608 32 9 <unknown> 672 32 9 <unknown> 736 32 9 <unknown> 800 32 9 <un"
                        "known> 864 32 9 <unknown> 928 32 9 <unknown> 992 32 9 <unknown> 1056 32 9 <unknown> 1120 32 9 <u"
                        "nknown> 1184 32 9 <unknown> 1248 32 9 <unknown> 1312 64 9 <unknown> 1408 256 13 col_name:2059";
  *(_QWORD *)(v2 + 16) = data::NewActivityDropExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234881024;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -218959118;
  v4[536862754] = -218959118;
  v4[536862756] = -218959118;
  v4[536862758] = -218959118;
  v4[536862760] = -218959118;
  v4[536862763] = -218959118;
  v4[536862772] = -202116109;
  v4[536862773] = -202116109;
  std::string::basic_string(v2 + 288);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 352),
    "NewActivityId",
    (const std::allocator<char> *)(v2 + 48));
  t = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 352), &this->activity_id) != 0;
  std::string::~string((void *)(v2 + 352));
  *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 416, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 416),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2064);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 416),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(v5, (const char (*)[34])byte_1A452FA0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
    *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 480),
      "CondID",
      (const std::allocator<char> *)(v2 + 64));
    ta = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 480), (std::string *)(v2 + 288)) != 0;
    std::string::~string((void *)(v2 + 480));
    *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 64 + 127) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 544, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 544),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2069);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 544),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v7, (const char (*)[27])byte_1A453040);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
      *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      v8 = ((v2 + 224) >> 3) + 2147450880;
      *(_WORD *)v8 = 0;
      *(_BYTE *)(v8 + 2) = 0;
      v9 = (_DWORD *)(((v2 + 1312) >> 3) + 2147450880);
      *v9 = 0;
      v9[1] = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 1312),
        ";",
        (const std::allocator<char> *)(v2 + 80));
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 96);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 1344),
        ",",
        (const std::allocator<char> *)(v2 + 96));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 112));
      std::vector<std::string>::vector(
        (std::vector<std::string> *const)(v2 + 224),
        (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 1312),
        (const std::vector<std::string>::allocator_type *)(v2 + 112));
      v10 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
              (const std::string *)(v2 + 288),
              (const std::vector<std::string> *)(v2 + 224),
              &this->cond_id,
              1) != 0;
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 224));
      v11 = ((v2 + 224) >> 3) + 2147450880;
      *(_WORD *)v11 = -1800;
      *(_BYTE *)(v11 + 2) = -8;
      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 112));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      for ( j = (char *)(v2 + 1376); j != (char *)(v2 + 1312); std::string::~string(j) )
        j -= 32;
      v13 = (_DWORD *)(((v2 + 1312) >> 3) + 2147450880);
      *v13 = -117901064;
      v13[1] = -117901064;
      std::allocator<char>::~allocator(v2 + 96);
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 608) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 608, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 608),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          2074);
        v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 608),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v14, (const char (*)[27])byte_1A453040);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 608));
        *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        std::vector<data::NewActivityDropSubjectConfig>::resize(&this->activity_drop_subject, 3uLL);
        array_count = 0;
        for ( i = 0; i <= 2; ++i )
        {
          snprintf((char *)(v2 + 1408), 0x100uLL, &byte_1A453080, i + 1);
          *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 128);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 672),
            (const char *)(v2 + 1408),
            (const std::allocator<char> *)(v2 + 128));
          v15 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 672));
          std::string::~string((void *)(v2 + 672));
          *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 128);
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
          if ( !v15 )
          {
            p_subject_type = &std::vector<data::NewActivityDropSubjectConfig>::operator[](
                                &this->activity_drop_subject,
                                i)->subject_type;
            *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 144);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 736),
              (const char *)(v2 + 1408),
              (const std::allocator<char> *)(v2 + 144));
            LOBYTE(p_subject_type) = common::tools::TxtFile::Row::assignToEnum<data::NewActivityDropType>(
                                       row,
                                       (const std::string *)(v2 + 736),
                                       p_subject_type) != 0;
            std::string::~string((void *)(v2 + 736));
            *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 144);
            *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
            if ( (_BYTE)p_subject_type )
            {
              *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 800) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 64 + 127) & 7) >= *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 800, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 800),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "init",
                2086);
              v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 800),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v18 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                      v17,
                      (const char (*)[14])byte_1A451DC0);
              v19 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                      v18,
                      (const char (*)[256])(v2 + 1408));
              common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v19, (const char (*)[7])byte_1A451E00);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 800));
              *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
              v6 = -1;
              goto LABEL_42;
            }
            snprintf((char *)(v2 + 1408), 0x100uLL, &byte_1A4530C0, i + 1);
            *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 160);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 864),
              (const char *)(v2 + 1408),
              (const std::allocator<char> *)(v2 + 160));
            v20 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 864));
            std::string::~string((void *)(v2 + 864));
            *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 160);
            *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
            if ( !v20 )
            {
              p_drop_param = &std::vector<data::NewActivityDropSubjectConfig>::operator[](
                                &this->activity_drop_subject,
                                i)->drop_param;
              *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 176);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 928),
                (const char *)(v2 + 1408),
                (const std::allocator<char> *)(v2 + 176));
              LOBYTE(p_drop_param) = common::tools::TxtFile::Row::assignToStr(
                                       row,
                                       (const std::string *)(v2 + 928),
                                       p_drop_param) != 0;
              std::string::~string((void *)(v2 + 928));
              *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 176);
              *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
              if ( (_BYTE)p_drop_param )
              {
                *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 992) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 64 + 63) & 7) >= *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 992, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 992),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                  "init",
                  2094);
                v22 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 992),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                v23 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                        v22,
                        (const char (*)[14])byte_1A451DC0);
                v24 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                        v23,
                        (const char (*)[256])(v2 + 1408));
                common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v24, (const char (*)[7])byte_1A451E00);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 992));
                *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = -117901064;
                v6 = -1;
                goto LABEL_42;
              }
              array_count = i + 1;
            }
          }
        }
        std::vector<data::NewActivityDropSubjectConfig>::resize(&this->activity_drop_subject, array_count);
        *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 192);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1056),
          &byte_1A453100,
          (const std::allocator<char> *)(v2 + 192));
        v25 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                row,
                (const std::string *)(v2 + 1056),
                &this->min_level) != 0;
        std::string::~string((void *)(v2 + 1056));
        *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 192);
        *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
        if ( v25 )
        {
          *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 1120) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1151) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1151) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 1120, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 1120),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            2103);
          v26 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 1120),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v26, (const char (*)[33])byte_1A453140);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1120));
          *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -117901064;
          v6 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 208);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 1184),
            &byte_1A4531A0,
            (const std::allocator<char> *)(v2 + 208));
          v27 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                  row,
                  (const std::string *)(v2 + 1184),
                  &this->drop_id) != 0;
          std::string::~string((void *)(v2 + 1184));
          *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 208);
          *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
          if ( v27 )
          {
            *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1248) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1279) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 64 + 63) & 7) >= *(_BYTE *)(((v2 + 1279) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1248, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1248),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "init",
              2108);
            v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1248),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v28, (const char (*)[29])byte_1A4531E0);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1248));
            *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = -117901064;
            v6 = -1;
          }
          else
          {
            v6 = 0;
          }
        }
      }
    }
  }
LABEL_42:
  std::string::~string((void *)(v2 + 288));
  if ( v34 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80A8) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862732) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450920 - (((_DWORD)v4 + 2147450928) & 0xFFFFFFF8) + 136) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF80D0) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1728LL, v34);
  }
  return v6;
};

// Line 2116: range 000000000EED1124-000000000EED251B
int32_t __cdecl data::NewActivityWatcherConfig::init(
        data::NewActivityWatcherConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r15
  common::milog::MiLogStream *v6; // rax
  int v7; // eax
  bool v8; // r15
  common::milog::MiLogStream *v9; // rax
  bool v10; // r15
  std::string *v11; // r15
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  bool v15; // r15
  common::milog::MiLogStream *v16; // rax
  bool v17; // r15
  common::milog::MiLogStream *v18; // rax
  bool v19; // r15
  common::milog::MiLogStream *v20; // rax
  bool v21; // r15
  common::milog::MiLogStream *v22; // rax
  int32_t v23; // ebx
  uint32_t array_count; // [rsp+18h] [rbp-5D8h]
  uint32_t i; // [rsp+1Ch] [rbp-5D4h]
  char v27[1488]; // [rsp+20h] [rbp-5D0h] BYREF

  v2 = (unsigned __int64)v27;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1440LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "24 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 32 9 <unknown> 224 32 9 <unknown> 288 32 9 <un"
                        "known> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 <unk"
                        "nown> 672 32 9 <unknown> 736 32 9 <unknown> 800 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <unkn"
                        "own> 992 32 9 <unknown> 1056 32 9 <unknown> 1120 256 13 col_name:2117";
  *(_QWORD *)(v2 + 16) = data::NewActivityWatcherConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -218959118;
  v4[536862754] = -218959118;
  v4[536862763] = -202116109;
  v4[536862764] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 160),
    "ID",
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 160), &this->id) != 0;
  std::string::~string((void *)(v2 + 160));
  *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 224, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 224),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2121);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 224),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v6, (const char (*)[23])byte_1A453440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
    v7 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 288),
      asc_1A453480,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToEnum<data::WatcherTriggerType>(
           row,
           (const std::string *)(v2 + 288),
           &this->trigger_config.trigger_type) != 0;
    std::string::~string((void *)(v2 + 288));
    *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 352, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 352),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2126);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 352),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v9, (const char (*)[41])byte_1A4534C0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
      v7 = -1;
    }
    else
    {
      std::vector<std::string>::resize(&this->trigger_config.param_list, 5uLL);
      array_count = 0;
      for ( i = 0; i <= 4; ++i )
      {
        snprintf((char *)(v2 + 1120), 0x100uLL, asc_1A453520, i + 1);
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 64);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 416),
          (const char *)(v2 + 1120),
          (const std::allocator<char> *)(v2 + 64));
        v10 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 416));
        std::string::~string((void *)(v2 + 416));
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 64);
        *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
        if ( !v10 )
        {
          v11 = std::vector<std::string>::operator[](&this->trigger_config.param_list, i);
          *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 80);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 480),
            (const char *)(v2 + 1120),
            (const std::allocator<char> *)(v2 + 80));
          LOBYTE(v11) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 480), v11) != 0;
          std::string::~string((void *)(v2 + 480));
          *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 80);
          *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v11 )
          {
            *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 544, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 544),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "init",
              2138);
            v12 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 544),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v13 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                    v12,
                    (const char (*)[14])byte_1A451DC0);
            v14 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                    v13,
                    (const char (*)[256])(v2 + 1120));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v14, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
            v7 = -1;
            goto LABEL_38;
          }
          array_count = i + 1;
        }
      }
      std::vector<std::string>::resize(&this->trigger_config.param_list, array_count);
      *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 96);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 608),
        &byte_1A453560,
        (const std::allocator<char> *)(v2 + 96));
      v15 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
              row,
              (const std::string *)(v2 + 608),
              &this->progress) != 0;
      std::string::~string((void *)(v2 + 608));
      *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 96);
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      if ( v15 )
      {
        *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 672) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 672, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 672),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          2147);
        v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 672),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v16, (const char (*)[27])byte_1A4535A0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 672));
        v7 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 112);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 736),
          &byte_1A4535E0,
          (const std::allocator<char> *)(v2 + 112));
        v17 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 736), &this->is_disuse) != 0;
        std::string::~string((void *)(v2 + 736));
        *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 112);
        *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
        if ( v17 )
        {
          *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 800) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 800, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 800),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            2152);
          v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 800),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v18, (const char (*)[30])byte_1A453620);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 800));
          v7 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 128);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 864),
            "RewardID",
            (const std::allocator<char> *)(v2 + 128));
          v19 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                  row,
                  (const std::string *)(v2 + 864),
                  &this->reward_id) != 0;
          std::string::~string((void *)(v2 + 864));
          *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 128);
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
          if ( v19 )
          {
            *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 928) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 928, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 928),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "init",
              2157);
            v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 928),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v20, (const char (*)[29])byte_1A4536A0);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 928));
            v7 = -1;
          }
          else
          {
            *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 144);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 992),
              &byte_1A4536E0,
              (const std::allocator<char> *)(v2 + 144));
            v21 = common::tools::TxtFile::Row::assignToNum<bool>(
                    row,
                    (const std::string *)(v2 + 992),
                    &this->is_auto_grant) != 0;
            std::string::~string((void *)(v2 + 992));
            *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 144);
            *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
            if ( v21 )
            {
              *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 1056) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 1056, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 1056),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "init",
                2162);
              v22 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 1056),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v22, (const char (*)[39])byte_1A453720);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1056));
              v7 = -1;
            }
            else
            {
              v7 = 0;
            }
          }
        }
      }
    }
  }
LABEL_38:
  v23 = v7;
  if ( v27 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8050) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8060) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8068) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8070) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8078) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8080) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8088) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80AC) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1440LL, v27);
  }
  return v23;
};

// Line 2170: range 000000000EED251C-000000000EED2D3E
int32_t __cdecl data::NewActivityEntryConfig::init(
        data::NewActivityEntryConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  bool v10; // r14
  common::milog::MiLogStream *v11; // rax
  char v12[528]; // [rsp+10h] [rbp-210h] BYREF

  v2 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(480LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "9 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityEntryConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    "ID",
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 96), &this->id) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2173);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v6, (const char (*)[23])byte_1A453440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      &byte_1A450800,
      (const std::allocator<char> *)(v2 + 64));
    v8 = common::tools::TxtFile::Row::assignToEnum<data::NewActivityType>(
           row,
           (const std::string *)(v2 + 224),
           &this->activity_type) != 0;
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2178);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v9, (const char (*)[33])byte_1A4508C0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 352),
        &byte_1A453840,
        (const std::allocator<char> *)(v2 + 80));
      v10 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
              row,
              (const std::string *)(v2 + 352),
              &this->duration) != 0;
      std::string::~string((void *)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 416, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 416),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          2183);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 416),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v11, (const char (*)[39])byte_1A453880);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
        result = -1;
      }
      else
      {
        result = 0;
      }
    }
  }
  if ( v12 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = -168430091;
  }
  return result;
};

// Line 2191: range 000000000EED2D40-000000000EED37F6
int32_t __cdecl data::NewActivitySaleExcelConfig::init(
        data::NewActivitySaleExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  bool v10; // r14
  std::string *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  uint32_t array_count; // [rsp+18h] [rbp-398h]
  uint32_t i; // [rsp+1Ch] [rbp-394h]
  char v17[912]; // [rsp+20h] [rbp-390h] BYREF

  v2 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(864LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "12 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 "
                        "9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9"
                        " <unknown> 544 256 13 col_name:2192";
  *(_QWORD *)(v2 + 16) = data::NewActivitySaleExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862745] = -202116109;
  v4[536862746] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    "ID",
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 96), &this->id) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2196);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v6, (const char (*)[23])byte_1A453440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
    goto LABEL_22;
  }
  *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 224),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  v8 = common::tools::TxtFile::Row::assignToEnum<data::NewActivitySaleType>(
         row,
         (const std::string *)(v2 + 224),
         &this->sale_type) != 0;
  std::string::~string((void *)(v2 + 224));
  *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v8 )
  {
    *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 288, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 288),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2201);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 288),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v9, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
    result = -1;
    goto LABEL_22;
  }
  std::vector<std::string>::resize(&this->sale_param, 2uLL);
  array_count = 0;
  for ( i = 0; ; ++i )
  {
    if ( i > 1 )
    {
      std::vector<std::string>::resize(&this->sale_param, array_count);
      result = 0;
      goto LABEL_22;
    }
    snprintf((char *)(v2 + 544), 0x100uLL, &byte_1A4539E0, i + 1);
    *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 352),
      (const char *)(v2 + 544),
      (const std::allocator<char> *)(v2 + 64));
    v10 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 352));
    std::string::~string((void *)(v2 + 352));
    *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( !v10 )
      break;
LABEL_20:
    ;
  }
  v11 = std::vector<std::string>::operator[](&this->sale_param, i);
  *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 416),
    (const char *)(v2 + 544),
    (const std::allocator<char> *)(v2 + 80));
  LOBYTE(v11) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 416), v11) != 0;
  std::string::~string((void *)(v2 + 416));
  *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( !(_BYTE)v11 )
  {
    array_count = i + 1;
    goto LABEL_20;
  }
  *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 480) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 - 1) & 7) >= *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 480, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 480),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
    "init",
    2213);
  v12 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 480),
          (const char (*)[16])"[CONFIG_ERROR] ");
  v13 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v12, (const char (*)[14])byte_1A451DC0);
  v14 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v13, (const char (*)[256])(v2 + 544));
  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v14, (const char (*)[7])byte_1A451E00);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 480));
  result = -1;
LABEL_22:
  if ( v17 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8064) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8068) = -168430091;
  }
  return result;
};

// Line 2225: range 000000000EED37F8-000000000EED6062
int32_t __cdecl data::NewActivityAvatarSelectionExcelConfig::init(
        data::NewActivityAvatarSelectionExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r15
  __int64 v3; // rax
  _DWORD *v4; // r13
  bool v5; // r12
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // r12d
  bool v8; // r12
  common::milog::MiLogStream *v9; // rax
  bool v10; // r12
  common::milog::MiLogStream *v11; // rax
  unsigned __int64 v12; // rax
  _DWORD *v13; // rax
  bool v14; // r14
  unsigned __int64 v15; // rax
  char *i; // r12
  _DWORD *v17; // rax
  common::milog::MiLogStream *v18; // rax
  bool v19; // r12
  common::milog::MiLogStream *v20; // rax
  unsigned __int64 v21; // rax
  _DWORD *v22; // rax
  bool v23; // r14
  unsigned __int64 v24; // rax
  char *j; // r12
  _DWORD *v26; // rax
  common::milog::MiLogStream *v27; // rax
  bool v28; // r12
  common::milog::MiLogStream *v29; // rax
  bool v30; // r12
  common::milog::MiLogStream *v31; // rax
  unsigned __int64 v32; // rax
  _DWORD *v33; // rax
  bool v34; // r14
  unsigned __int64 v35; // rax
  char *k; // r12
  _DWORD *v37; // rax
  common::milog::MiLogStream *v38; // rax
  bool v39; // r12
  common::milog::MiLogStream *v40; // rax
  unsigned __int64 v41; // rax
  _DWORD *v42; // rax
  bool v43; // r14
  unsigned __int64 v44; // rax
  char *m; // r12
  _DWORD *v46; // rax
  common::milog::MiLogStream *v47; // rax
  bool v48; // r12
  common::milog::MiLogStream *v49; // rax
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-9A0h]
  std::initializer_list<std::string > v52; // [rsp+20h] [rbp-990h]
  std::initializer_list<std::string > v53; // [rsp+30h] [rbp-980h]
  std::initializer_list<std::string > v54; // [rsp+40h] [rbp-970h]
  char v55[2384]; // [rsp+60h] [rbp-950h] BYREF

  v2 = (unsigned __int64)v55;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_6(2336LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "49 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unkno"
                        "wn> 208 1 9 <unknown> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 28"
                        "8 1 9 <unknown> 304 1 9 <unknown> 320 1 9 <unknown> 336 1 9 <unknown> 352 24 9 <unknown> 416 24 "
                        "9 <unknown> 480 24 9 <unknown> 544 24 9 <unknown> 608 32 12 val_str:2226 672 32 9 <unknown> 736 "
                        "32 9 <unknown> 800 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <unknown> 992 32 9 <unknown> 1056 "
                        "32 9 <unknown> 1120 32 9 <unknown> 1184 32 9 <unknown> 1248 32 9 <unknown> 1312 32 9 <unknown> 1"
                        "376 32 9 <unknown> 1440 32 9 <unknown> 1504 32 9 <unknown> 1568 32 9 <unknown> 1632 32 9 <unknow"
                        "n> 1696 32 9 <unknown> 1760 32 9 <unknown> 1824 32 9 <unknown> 1888 32 9 <unknown> 1952 64 9 <un"
                        "known> 2048 64 9 <unknown> 2144 64 9 <unknown> 2240 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityAvatarSelectionExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234753535;
  v4[536862730] = -234753535;
  v4[536862731] = -234881024;
  v4[536862732] = -218959118;
  v4[536862733] = -234881024;
  v4[536862734] = -218959118;
  v4[536862735] = -234881024;
  v4[536862736] = -218959118;
  v4[536862737] = -234881024;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -218959118;
  v4[536862754] = -218959118;
  v4[536862756] = -218959118;
  v4[536862758] = -218959118;
  v4[536862760] = -218959118;
  v4[536862762] = -218959118;
  v4[536862764] = -218959118;
  v4[536862766] = -218959118;
  v4[536862768] = -218959118;
  v4[536862770] = -218959118;
  v4[536862772] = -218959118;
  v4[536862774] = -218959118;
  v4[536862776] = -218959118;
  v4[536862778] = -218959118;
  v4[536862780] = -218959118;
  v4[536862783] = -218959118;
  v4[536862786] = -218959118;
  v4[536862789] = -218959118;
  v4[536862792] = -202116109;
  std::string::basic_string(v2 + 608);
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 672),
    "Scheduleid",
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 672), &this->schedule_id) != 0;
  std::string::~string((void *)(v2 + 672));
  *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 736) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 736, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 736),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2229);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 736),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(v6, (const char (*)[31])byte_1A453E20);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 736));
    *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 800),
      "condid",
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 800), &this->cond_id) != 0;
    std::string::~string((void *)(v2 + 800));
    *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 864) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 864, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 864),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2234);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 864),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v9, (const char (*)[27])byte_1A453EA0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 864));
      *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = -117901064;
      v7 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 928),
        aWatcherid_7,
        (const std::allocator<char> *)(v2 + 64));
      v10 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 928), (std::string *)(v2 + 608)) != 0;
      std::string::~string((void *)(v2 + 928));
      *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 992) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 992, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 992),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          2239);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 992),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v11, (const char (*)[36])byte_1A453F20);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 992));
        *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
      }
      else
      {
        v12 = ((v2 + 352) >> 3) + 2147450880;
        *(_WORD *)v12 = 0;
        *(_BYTE *)(v12 + 2) = 0;
        v13 = (_DWORD *)(((v2 + 1952) >> 3) + 2147450880);
        *v13 = 0;
        v13[1] = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1952),
          ";",
          (const std::allocator<char> *)(v2 + 80));
        *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 96);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1984),
          ",",
          (const std::allocator<char> *)(v2 + 96));
        __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 1952);
        __l._M_len = 2LL;
        *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
        std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 112));
        std::vector<std::string>::vector(
          (std::vector<std::string> *const)(v2 + 352),
          __l,
          (const std::vector<std::string>::allocator_type *)(v2 + 112));
        v14 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                (const std::string *)(v2 + 608),
                (const std::vector<std::string> *)(v2 + 352),
                &this->watcher_id_list,
                1) != 0;
        std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 352));
        v15 = ((v2 + 352) >> 3) + 2147450880;
        *(_WORD *)v15 = -1800;
        *(_BYTE *)(v15 + 2) = -8;
        std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 112));
        *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
        for ( i = (char *)(v2 + 2016); i != (char *)(v2 + 1952); std::string::~string(i) )
          i -= 32;
        v17 = (_DWORD *)(((v2 + 1952) >> 3) + 2147450880);
        *v17 = -117901064;
        v17[1] = -117901064;
        std::allocator<char>::~allocator(v2 + 96);
        *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v14 )
        {
          *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 1056) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 1056, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 1056),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            2244);
          v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 1056),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v18, (const char (*)[36])byte_1A453F20);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1056));
          *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -117901064;
          v7 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 128);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 1120),
            aRewardid_6,
            (const std::allocator<char> *)(v2 + 128));
          v19 = common::tools::TxtFile::Row::assignToStr(
                  row,
                  (const std::string *)(v2 + 1120),
                  (std::string *)(v2 + 608)) != 0;
          std::string::~string((void *)(v2 + 1120));
          *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 128);
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
          if ( v19 )
          {
            *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1184) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1215) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 1215) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1184, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1184),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "init",
              2249);
            v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1184),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v20, (const char (*)[35])byte_1A453FC0);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1184));
            *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = -117901064;
            v7 = -1;
          }
          else
          {
            v21 = ((v2 + 416) >> 3) + 2147450880;
            *(_WORD *)v21 = 0;
            *(_BYTE *)(v21 + 2) = 0;
            v22 = (_DWORD *)(((v2 + 2048) >> 3) + 2147450880);
            *v22 = 0;
            v22[1] = 0;
            *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 144);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 2048),
              ";",
              (const std::allocator<char> *)(v2 + 144));
            *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 160);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 2080),
              ",",
              (const std::allocator<char> *)(v2 + 160));
            v52._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2048);
            v52._M_len = 2LL;
            *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
            std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 176));
            std::vector<std::string>::vector(
              (std::vector<std::string> *const)(v2 + 416),
              v52,
              (const std::vector<std::string>::allocator_type *)(v2 + 176));
            v23 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                    (const std::string *)(v2 + 608),
                    (const std::vector<std::string> *)(v2 + 416),
                    &this->avatar_reward_list,
                    1) != 0;
            std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 416));
            v24 = ((v2 + 416) >> 3) + 2147450880;
            *(_WORD *)v24 = -1800;
            *(_BYTE *)(v24 + 2) = -8;
            std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 176));
            *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
            for ( j = (char *)(v2 + 2112); j != (char *)(v2 + 2048); std::string::~string(j) )
              j -= 32;
            v26 = (_DWORD *)(((v2 + 2048) >> 3) + 2147450880);
            *v26 = -117901064;
            v26[1] = -117901064;
            std::allocator<char>::~allocator(v2 + 160);
            *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
            std::allocator<char>::~allocator(v2 + 144);
            *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
            if ( v23 )
            {
              *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 1248) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 1279) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1279) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 1248, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 1248),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "init",
                2254);
              v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 1248),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v27, (const char (*)[35])byte_1A453FC0);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1248));
              *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = -117901064;
              v7 = -1;
            }
            else
            {
              *(_DWORD *)(((v2 + 1312) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 192);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 1312),
                &byte_1A454020,
                (const std::allocator<char> *)(v2 + 192));
              v28 = common::tools::TxtFile::Row::assignToNum<bool>(
                      row,
                      (const std::string *)(v2 + 1312),
                      &this->is_not_consume_item) != 0;
              std::string::~string((void *)(v2 + 1312));
              *(_DWORD *)(((v2 + 1312) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 192);
              *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
              if ( v28 )
              {
                *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 1376) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1407) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1407) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1376, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 1376),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                  "init",
                  2259);
                v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 1376),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(v29, (const char (*)[48])byte_1A454060);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1376));
                *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = -117901064;
                v7 = -1;
              }
              else
              {
                *(_DWORD *)(((v2 + 1440) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 208);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 1440),
                  &byte_1A4540C0,
                  (const std::allocator<char> *)(v2 + 208));
                v30 = common::tools::TxtFile::Row::assignToStr(
                        row,
                        (const std::string *)(v2 + 1440),
                        (std::string *)(v2 + 608)) != 0;
                std::string::~string((void *)(v2 + 1440));
                *(_DWORD *)(((v2 + 1440) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 208);
                *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
                if ( v30 )
                {
                  *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1504) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1535) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1535) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1504, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1504),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                    "init",
                    2264);
                  v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1504),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                    v31,
                    (const char (*)[47])byte_1A454100);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1504));
                  *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = -117901064;
                  v7 = -1;
                }
                else
                {
                  v32 = ((v2 + 480) >> 3) + 2147450880;
                  *(_WORD *)v32 = 0;
                  *(_BYTE *)(v32 + 2) = 0;
                  v33 = (_DWORD *)(((v2 + 2144) >> 3) + 2147450880);
                  *v33 = 0;
                  v33[1] = 0;
                  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<char>::allocator(v2 + 224);
                  std::string::basic_string<std::allocator<char>>(
                    (std::string *const)(v2 + 2144),
                    ";",
                    (const std::allocator<char> *)(v2 + 224));
                  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<char>::allocator(v2 + 240);
                  std::string::basic_string<std::allocator<char>>(
                    (std::string *const)(v2 + 2176),
                    ",",
                    (const std::allocator<char> *)(v2 + 240));
                  v53._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2144);
                  v53._M_len = 2LL;
                  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 256));
                  std::vector<std::string>::vector(
                    (std::vector<std::string> *const)(v2 + 480),
                    v53,
                    (const std::vector<std::string>::allocator_type *)(v2 + 256));
                  v34 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                          (const std::string *)(v2 + 608),
                          (const std::vector<std::string> *)(v2 + 480),
                          &this->cost_item_id_list,
                          1) != 0;
                  std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 480));
                  v35 = ((v2 + 480) >> 3) + 2147450880;
                  *(_WORD *)v35 = -1800;
                  *(_BYTE *)(v35 + 2) = -8;
                  std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 256));
                  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
                  for ( k = (char *)(v2 + 2208); k != (char *)(v2 + 2144); std::string::~string(k) )
                    k -= 32;
                  v37 = (_DWORD *)(((v2 + 2144) >> 3) + 2147450880);
                  *v37 = -117901064;
                  v37[1] = -117901064;
                  std::allocator<char>::~allocator(v2 + 240);
                  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
                  std::allocator<char>::~allocator(v2 + 224);
                  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
                  if ( v34 )
                  {
                    *(_DWORD *)(((v2 + 1568) >> 3) + 0x7FFF8000) = 0;
                    if ( *(char *)(((v2 + 1568) >> 3) + 0x7FFF8000) < 0
                      || *(_BYTE *)(((v2 + 1599) >> 3) + 0x7FFF8000) != 0
                      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1599) >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_store_n(v2 + 1568, 32LL);
                    }
                    common::milog::MiLogStream::create(
                      (common::milog::MiLogStream *)(v2 + 1568),
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                      "init",
                      2269);
                    v38 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                            (common::milog::MiLogStream *const)(v2 + 1568),
                            (const char (*)[16])"[CONFIG_ERROR] ");
                    common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                      v38,
                      (const char (*)[47])byte_1A454100);
                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1568));
                    *(_DWORD *)(((v2 + 1568) >> 3) + 0x7FFF8000) = -117901064;
                    v7 = -1;
                  }
                  else
                  {
                    *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = 0;
                    *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v2 + 272);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v2 + 1632),
                      &byte_1A454160,
                      (const std::allocator<char> *)(v2 + 272));
                    v39 = common::tools::TxtFile::Row::assignToStr(
                            row,
                            (const std::string *)(v2 + 1632),
                            (std::string *)(v2 + 608)) != 0;
                    std::string::~string((void *)(v2 + 1632));
                    *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = -117901064;
                    std::allocator<char>::~allocator(v2 + 272);
                    *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
                    if ( v39 )
                    {
                      *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v2 + 1696) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v2 + 1727) >> 3) + 0x7FFF8000) != 0
                        && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 1727) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v2 + 1696, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v2 + 1696),
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                        "init",
                        2274);
                      v40 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                              (common::milog::MiLogStream *const)(v2 + 1696),
                              (const char (*)[16])"[CONFIG_ERROR] ");
                      common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
                        v40,
                        (const char (*)[51])byte_1A4541A0);
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1696));
                      *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = -117901064;
                      v7 = -1;
                    }
                    else
                    {
                      v41 = ((v2 + 544) >> 3) + 2147450880;
                      *(_WORD *)v41 = 0;
                      *(_BYTE *)(v41 + 2) = 0;
                      v42 = (_DWORD *)(((v2 + 2240) >> 3) + 2147450880);
                      *v42 = 0;
                      v42[1] = 0;
                      *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v2 + 288);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v2 + 2240),
                        ";",
                        (const std::allocator<char> *)(v2 + 288));
                      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v2 + 304);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v2 + 2272),
                        ",",
                        (const std::allocator<char> *)(v2 + 304));
                      v54._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2240);
                      v54._M_len = 2LL;
                      *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 320));
                      std::vector<std::string>::vector(
                        (std::vector<std::string> *const)(v2 + 544),
                        v54,
                        (const std::vector<std::string>::allocator_type *)(v2 + 320));
                      v43 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                              (const std::string *)(v2 + 608),
                              (const std::vector<std::string> *)(v2 + 544),
                              &this->cost_item_num_list,
                              1) != 0;
                      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 544));
                      v44 = ((v2 + 544) >> 3) + 2147450880;
                      *(_WORD *)v44 = -1800;
                      *(_BYTE *)(v44 + 2) = -8;
                      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 320));
                      *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
                      for ( m = (char *)(v2 + 2304); m != (char *)(v2 + 2240); std::string::~string(m) )
                        m -= 32;
                      v46 = (_DWORD *)(((v2 + 2240) >> 3) + 2147450880);
                      *v46 = -117901064;
                      v46[1] = -117901064;
                      std::allocator<char>::~allocator(v2 + 304);
                      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
                      std::allocator<char>::~allocator(v2 + 288);
                      *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
                      if ( v43 )
                      {
                        *(_DWORD *)(((v2 + 1760) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v2 + 1760) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v2 + 1791) >> 3) + 0x7FFF8000) != 0
                          && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1791) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v2 + 1760, 32LL);
                        }
                        common::milog::MiLogStream::create(
                          (common::milog::MiLogStream *)(v2 + 1760),
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                          "init",
                          2279);
                        v47 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                (common::milog::MiLogStream *const)(v2 + 1760),
                                (const char (*)[16])"[CONFIG_ERROR] ");
                        common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
                          v47,
                          (const char (*)[51])byte_1A4541A0);
                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1760));
                        *(_DWORD *)(((v2 + 1760) >> 3) + 0x7FFF8000) = -117901064;
                        v7 = -1;
                      }
                      else
                      {
                        *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = 0;
                        *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v2 + 336);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v2 + 1824),
                          &byte_1A454200,
                          (const std::allocator<char> *)(v2 + 336));
                        v48 = common::tools::TxtFile::Row::assignToNum<bool>(
                                row,
                                (const std::string *)(v2 + 1824),
                                &this->is_blocked) != 0;
                        std::string::~string((void *)(v2 + 1824));
                        *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = -117901064;
                        std::allocator<char>::~allocator(v2 + 336);
                        *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
                        if ( v48 )
                        {
                          *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v2 + 1888) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 1919) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1919) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 1888, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v2 + 1888),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                            "init",
                            2284);
                          v49 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                  (common::milog::MiLogStream *const)(v2 + 1888),
                                  (const char (*)[16])"[CONFIG_ERROR] ");
                          common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                            v49,
                            (const char (*)[33])byte_1A454240);
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1888));
                          *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = -117901064;
                          v7 = -1;
                        }
                        else
                        {
                          v7 = 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  std::string::~string((void *)(v2 + 608));
  if ( v55 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 76) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF811C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862742) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450960 - (((_DWORD)v4 + 2147450968) & 0xFFFFFFF8) + 212) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_6(v2, 2336LL, v55);
  }
  return v7;
};

// Line 2292: range 000000000EED6064-000000000EED6886
int32_t __cdecl data::NewActivityScoreLimitExcelConfig::init(
        data::NewActivityScoreLimitExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  bool v10; // r14
  common::milog::MiLogStream *v11; // rax
  char v12[528]; // [rsp+10h] [rbp-210h] BYREF

  v2 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(480LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "9 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityScoreLimitExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    &byte_1A4542A0,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 96), &this->id) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2295);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v6, (const char (*)[35])byte_1A4542E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      &byte_1A454340,
      (const std::allocator<char> *)(v2 + 64));
    v8 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
           row,
           (const std::string *)(v2 + 224),
           &this->activity_id) != 0;
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2300);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v9, (const char (*)[29])byte_1A454380);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 352),
        &byte_1A4543C0,
        (const std::allocator<char> *)(v2 + 80));
      v10 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
              row,
              (const std::string *)(v2 + 352),
              &this->limit_value) != 0;
      std::string::~string((void *)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 416, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 416),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          2305);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 416),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v11, (const char (*)[33])byte_1A454400);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
        result = -1;
      }
      else
      {
        result = 0;
      }
    }
  }
  if ( v12 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = -168430091;
  }
  return result;
};

// Line 2313: range 000000000EED6888-000000000EED7320
int32_t __cdecl data::NewActivityScoreRewardExcelConfig::init(
        data::NewActivityScoreRewardExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  bool v10; // r14
  common::milog::MiLogStream *v11; // rax
  bool v12; // r14
  common::milog::MiLogStream *v13; // rax
  char v14[656]; // [rsp+10h] [rbp-290h] BYREF

  v2 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(608LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "12 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 "
                        "9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9"
                        " <unknown> 544 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityScoreRewardExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    &byte_1A454460,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 96), &this->id) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2316);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v6, (const char (*)[35])byte_1A4544A0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      &byte_1A454340,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
           row,
           (const std::string *)(v2 + 224),
           &this->activity_id) != 0;
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2321);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v9, (const char (*)[29])byte_1A454380);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 352),
        &byte_1A454500,
        (const std::allocator<char> *)(v2 + 64));
      v10 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
              row,
              (const std::string *)(v2 + 352),
              &this->reward_id) != 0;
      std::string::~string((void *)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 416, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 416),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          2326);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 416),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v11, (const char (*)[41])byte_1A454540);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
        result = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 480),
          &byte_1A4545A0,
          (const std::allocator<char> *)(v2 + 80));
        v12 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 480), &this->score) != 0;
        std::string::~string((void *)(v2 + 480));
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v12 )
        {
          *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 544, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 544),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            2331);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 544),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v13, (const char (*)[27])byte_1A4545E0);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
          result = -1;
        }
        else
        {
          result = 0;
        }
      }
    }
  }
  if ( v14 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = -168430091;
  }
  return result;
};

// Line 2339: range 000000000EED7322-000000000EED859D
int32_t __cdecl data::NewActivityTimeGroupExcelConfig::init(
        data::NewActivityTimeGroupExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  unsigned __int64 v8; // rax
  _DWORD *v9; // rax
  bool v10; // r15
  unsigned __int64 v11; // rax
  char *i; // r14
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  bool v15; // r14
  common::milog::MiLogStream *v16; // rax
  unsigned __int64 v17; // rax
  _DWORD *v18; // rax
  bool v19; // r15
  unsigned __int64 v20; // rax
  char *j; // r14
  _DWORD *v22; // rax
  common::milog::MiLogStream *v23; // rax
  bool t; // [rsp+0h] [rbp-4A0h]
  bool ta; // [rsp+0h] [rbp-4A0h]
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-490h]
  char v28[1136]; // [rsp+30h] [rbp-470h] BYREF

  v2 = (unsigned __int64)v28;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1088LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "22 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 9"
                        " <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 24 9 <unknown> 256 24 9 <un"
                        "known> 320 32 12 val_str:2340 384 32 9 <unknown> 448 32 9 <unknown> 512 32 9 <unknown> 576 32 9 "
                        "<unknown> 640 32 9 <unknown> 704 32 9 <unknown> 768 32 9 <unknown> 832 32 9 <unknown> 896 64 9 <"
                        "unknown> 992 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityTimeGroupExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234881024;
  v4[536862727] = -218959118;
  v4[536862728] = -234881024;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862743] = -218959118;
  v4[536862745] = -218959118;
  v4[536862747] = -218959118;
  v4[536862750] = -218959118;
  v4[536862753] = -202116109;
  std::string::basic_string(v2 + 320);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 384),
    "ID",
    (const std::allocator<char> *)(v2 + 48));
  t = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 384), &this->id) != 0;
  std::string::~string((void *)(v2 + 384));
  *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 33) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 448, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 448),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2343);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 448),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v5, (const char (*)[23])byte_1A453440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
    *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 512),
      aGroupid_13,
      (const std::allocator<char> *)(v2 + 64));
    ta = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 512), (std::string *)(v2 + 320)) != 0;
    std::string::~string((void *)(v2 + 512));
    *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 576) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 576, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 576),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2348);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 576),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(v7, (const char (*)[34])byte_1A454800);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 576));
      *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      v8 = ((v2 + 192) >> 3) + 2147450880;
      *(_WORD *)v8 = 0;
      *(_BYTE *)(v8 + 2) = 0;
      v9 = (_DWORD *)(((v2 + 896) >> 3) + 2147450880);
      *v9 = 0;
      v9[1] = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 896),
        ";",
        (const std::allocator<char> *)(v2 + 80));
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 96);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 928),
        ",",
        (const std::allocator<char> *)(v2 + 96));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 112));
      std::vector<std::string>::vector(
        (std::vector<std::string> *const)(v2 + 192),
        (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 896),
        (const std::vector<std::string>::allocator_type *)(v2 + 112));
      v10 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
              (const std::string *)(v2 + 320),
              (const std::vector<std::string> *)(v2 + 192),
              &this->group_id_list,
              1) != 0;
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 192));
      v11 = ((v2 + 192) >> 3) + 2147450880;
      *(_WORD *)v11 = -1800;
      *(_BYTE *)(v11 + 2) = -8;
      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 112));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      for ( i = (char *)(v2 + 960); i != (char *)(v2 + 896); std::string::~string(i) )
        i -= 32;
      v13 = (_DWORD *)(((v2 + 896) >> 3) + 2147450880);
      *v13 = -117901064;
      v13[1] = -117901064;
      std::allocator<char>::~allocator(v2 + 96);
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 640) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 640, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 640),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          2353);
        v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 640),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(v14, (const char (*)[34])byte_1A454800);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 640));
        *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 128);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 704),
          &byte_1A454860,
          (const std::allocator<char> *)(v2 + 128));
        v15 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 704), (std::string *)(v2 + 320)) != 0;
        std::string::~string((void *)(v2 + 704));
        *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 128);
        *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
        if ( v15 )
        {
          *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 768) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 799) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 799) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 768, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 768),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            2358);
          v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 768),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(v16, (const char (*)[34])byte_1A4548A0);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 768));
          *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = -117901064;
          v6 = -1;
        }
        else
        {
          v17 = ((v2 + 256) >> 3) + 2147450880;
          *(_WORD *)v17 = 0;
          *(_BYTE *)(v17 + 2) = 0;
          v18 = (_DWORD *)(((v2 + 992) >> 3) + 2147450880);
          *v18 = 0;
          v18[1] = 0;
          *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 144);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 992),
            ";",
            (const std::allocator<char> *)(v2 + 144));
          *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 160);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 1024),
            ",",
            (const std::allocator<char> *)(v2 + 160));
          __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 992);
          __l._M_len = 2LL;
          *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
          std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 176));
          std::vector<std::string>::vector(
            (std::vector<std::string> *const)(v2 + 256),
            __l,
            (const std::vector<std::string>::allocator_type *)(v2 + 176));
          v19 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                  (const std::string *)(v2 + 320),
                  (const std::vector<std::string> *)(v2 + 256),
                  &this->duration,
                  1) != 0;
          std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 256));
          v20 = ((v2 + 256) >> 3) + 2147450880;
          *(_WORD *)v20 = -1800;
          *(_BYTE *)(v20 + 2) = -8;
          std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 176));
          *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
          for ( j = (char *)(v2 + 1056); j != (char *)(v2 + 992); std::string::~string(j) )
            j -= 32;
          v22 = (_DWORD *)(((v2 + 992) >> 3) + 2147450880);
          *v22 = -117901064;
          v22[1] = -117901064;
          std::allocator<char>::~allocator(v2 + 160);
          *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
          std::allocator<char>::~allocator(v2 + 144);
          *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
          if ( v19 )
          {
            *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 832) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 863) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 863) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 832, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 832),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "init",
              2363);
            v23 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 832),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(v23, (const char (*)[34])byte_1A4548A0);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 832));
            *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = -117901064;
            v6 = -1;
          }
          else
          {
            v6 = 0;
          }
        }
      }
    }
  }
  std::string::~string((void *)(v2 + 320));
  if ( v28 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8080) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862733) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450924 - (((_DWORD)v4 + 2147450932) & 0xFFFFFFF8) + 92) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1088LL, v28);
  }
  return v6;
};

// Line 2371: range 000000000EED859E-000000000EED88A9
int32_t __cdecl data::NewActivityOverlapExcelConfig::init(
        data::NewActivityOverlapExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  char v8[240]; // [rsp+10h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 1 9 <unknown> 64 32 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityOverlapExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862723] = -218959118;
  v4[536862725] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 64),
    &byte_1A454940,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::NewActivityType>(
         row,
         (const std::string *)(v2 + 64),
         &this->activity_type) != 0;
  std::string::~string((void *)(v2 + 64));
  *(_DWORD *)(((v2 + 64) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2374);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(v6, (const char (*)[48])byte_1A454980);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = -1;
  }
  else
  {
    result = 0;
  }
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2382: range 000000000EED88AA-000000000EED8E32
int32_t __cdecl data::PreviewActivityCond::init(
        data::PreviewActivityCond *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  char v10[368]; // [rsp+10h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 1 9 <unknown> 48 1 9 <unknown> 64 32 9 <unknown> 128 32 9 <unknown> 192 32 9 <unknown> 256 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::PreviewActivityCond::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862723] = -218959118;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 64),
    "CondID",
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
         row,
         (const std::string *)(v2 + 64),
         (unsigned int *)this + 2) != 0;
  std::string::~string((void *)(v2 + 64));
  *(_DWORD *)(((v2 + 64) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2385);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A453040);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 192),
      &byte_1A4549E0,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToStr(
           row,
           (const std::string *)(v2 + 192),
           (std::string *)((char *)this + 16)) != 0;
    std::string::~string((void *)(v2 + 192));
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 256) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 256, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 256),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2390);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 256),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v9, (const char (*)[33])byte_1A454A20);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 256));
      result = -1;
    }
    else
    {
      result = 0;
    }
  }
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8014) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2398: range 000000000EED8E34-000000000EED98CC
int32_t __cdecl data::NewActivityPushTipsConfig::init(
        data::NewActivityPushTipsConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  bool v10; // r14
  common::milog::MiLogStream *v11; // rax
  bool v12; // r14
  common::milog::MiLogStream *v13; // rax
  char v14[656]; // [rsp+10h] [rbp-290h] BYREF

  v2 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(608LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "12 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 "
                        "9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9"
                        " <unknown> 544 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityPushTipsConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    "ID",
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 96), &this->push_tips_id) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "init",
      2401);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v6, (const char (*)[23])byte_1A453440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      &byte_1A454A80,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 224), &this->watcher_id) != 0;
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "init",
        2406);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v9, (const char (*)[39])byte_1A454AC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 352),
        &byte_1A454B20,
        (const std::allocator<char> *)(v2 + 64));
      v10 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
              row,
              (const std::string *)(v2 + 352),
              &this->tutorial_id) != 0;
      std::string::~string((void *)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 416, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 416),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
          "init",
          2411);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 416),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v11, (const char (*)[29])byte_1A454B60);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
        result = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 480),
          &byte_1A454340,
          (const std::allocator<char> *)(v2 + 80));
        v12 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                row,
                (const std::string *)(v2 + 480),
                &this->activity_id) != 0;
        std::string::~string((void *)(v2 + 480));
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v12 )
        {
          *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 544, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 544),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "init",
            2416);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 544),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v13, (const char (*)[29])byte_1A454380);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
          result = -1;
        }
        else
        {
          result = 0;
        }
      }
    }
  }
  if ( v14 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = -168430091;
  }
  return result;
};

// Line 2425: range 000000000EED98CE-000000000EEDAAD9
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityItemLimitExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  __int64 v13; // rsi
  unsigned __int64 v14; // rax
  __int64 *v15; // rdx
  __int64 v16; // rsi
  common::milog::MiLogStream *v17; // rax
  int v18; // r14d
  __int64 v19; // r14
  const char *v20; // rax
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rdx
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rcx
  __int64 v25; // rsi
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // r14
  data::NewActivityItemLimitExcelConfig *v28; // rax
  data::NewActivityType *v29; // rcx
  data::NewActivityItemLimitExcelConfig *v30; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<const data::NewActivityType,data::NewActivityItemLimitExcelConfig>,false,false>,bool> v31; // rax
  common::milog::MiLogStream *v32; // rax
  common::milog::MiLogStream *v33; // r14
  __int64 v34; // rax
  unsigned __int64 v35; // rax
  int v36; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85F8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85D8h]
  char v42[34256]; // [rsp+50h] [rbp-85D0h] BYREF

  v3 = (unsigned __int64)v42;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34208LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "14 32 1 9 <unknown> 48 4 6 r:2440 64 4 9 <unknown> 80 8 9 <unknown> 112 24 9 data:2443 176 32 10"
                        " paths:2426 240 32 9 <unknown> 304 32 9 <unknown> 368 32 9 <unknown> 432 32 9 <unknown> 496 32 9"
                        " <unknown> 560 32 9 <unknown> 624 376 25 debug_message_stream:2451 1072 32880 13 txt_file:2434";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityItemLimitExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862722] = -234881024;
  v5[536862723] = 62194;
  v5[536862724] = -218959360;
  v5[536862725] = 62194;
  v5[536862726] = -219021312;
  v5[536862727] = 62194;
  v5[536862728] = -219021312;
  v5[536862729] = 62194;
  v5[536862730] = -219021312;
  v5[536862731] = 62194;
  v5[536862732] = -219021312;
  v5[536862733] = 62194;
  v5[536862734] = -219021312;
  v5[536862735] = 62194;
  v5[536862736] = -219021312;
  v5[536862737] = 62194;
  v5[536862738] = -219021312;
  v5[536862739] = 62194;
  v5[536862751] = -218959360;
  v5[536862752] = -218959118;
  v5[536862753] = 62194;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 176),
    "/txt/NewActivityItemLimitData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 176); __for_begin != (std::string *)(v3 + 208); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 240) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 240) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 271) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 96 + 111) & 7) >= *(_BYTE *)(((v3 + 271) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 240, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 240), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 240);
    std::string::~string((void *)(v3 + 240));
    *(_DWORD *)(((v3 + 240) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1072, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1072), v7) )
    {
      *(_DWORD *)(((v3 + 304) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 304) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 335) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 79) & 7) >= *(_BYTE *)(((v3 + 335) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 304, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 304),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityItemLimitExcelConfig",
        2437);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 304),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 304));
      *(_DWORD *)(((v3 + 304) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1072));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        v13 = *(unsigned int *)(v3 + 48);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1072), v13);
        v14 = ((v3 + 112) >> 3) + 2147450880;
        *(_WORD *)v14 = 0;
        *(_BYTE *)(v14 + 2) = 0;
        v15 = &`vtable for'data::NewActivityItemLimitExcelConfig + 2;
        if ( *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 112, v13);
        *(_QWORD *)(v3 + 112) = v15;
        if ( *(_BYTE *)(((v3 + 120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 120) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 120, v13);
        *(_DWORD *)(v3 + 120) = 0;
        v16 = (((_BYTE)v3 + 124) & 7u) + 3;
        if ( *(_BYTE *)(((v3 + 124) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 + 124) & 7) + 3) >= *(_BYTE *)(((v3 + 124) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 124, v16);
        }
        *(_DWORD *)(v3 + 124) = 0;
        if ( *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 128, v16);
        *(_DWORD *)(v3 + 128) = 0;
        if ( *(_BYTE *)(((v3 + 132) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 - 124) & 7) + 3) >= *(_BYTE *)(((v3 + 132) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 132, (((_BYTE)v3 - 124) & 7u) + 3);
        }
        *(_DWORD *)(v3 + 132) = 0;
        if ( row_ptr )
        {
          if ( data::NewActivityItemLimitExcelConfig::init(
                 (data::NewActivityItemLimitExcelConfig *const)(v3 + 112),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 624, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 624);
            v19 = std::operator<<<std::char_traits<char>>(v3 + 624, &unk_1A454E40);
            if ( *(_BYTE *)(((v3 + 120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 120) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 120);
            v20 = data::enumValToStr((data::NewActivityType)*(_DWORD *)(v3 + 120), (__int64)&unk_1A454E40);
            std::operator<<<std::char_traits<char>>(v19, v20);
            *(_DWORD *)(((v3 + 432) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 432) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 463) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 96 + 47) & 7) >= *(_BYTE *)(((v3 + 463) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 432, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 432),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityItemLimitExcelConfig",
              2453);
            v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 432),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v22 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v21, (const char (*)[2])"<");
            v23 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, __for_begin);
            v24 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v23,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v25 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v25);
            *(_DWORD *)(v3 + 64) = v25;
            v26 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v24,
                    (const unsigned int *)(v3 + 64));
            v27 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v26,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 496) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 527) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 96 + 111) & 7) >= *(_BYTE *)(((v3 + 527) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 496, 32LL);
            }
            std::ostringstream::str(v3 + 496, v3 + 624);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v27, (const std::string *)(v3 + 496));
            std::string::~string((void *)(v3 + 496));
            *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 432));
            *(_DWORD *)(((v3 + 432) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 624);
            __asan_poison_stack_memory(v3 + 624, 376LL);
            v18 = 0;
          }
          else
          {
            v28 = std::move<data::NewActivityItemLimitExcelConfig &>((data::NewActivityItemLimitExcelConfig *)(v3 + 112));
            v31 = std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::emplace<data::NewActivityType&,data::NewActivityItemLimitExcelConfig>(
                    &this->new_activity_item_limit_excel_config_map,
                    (data::NewActivityType *)(v3 + 120),
                    v28,
                    v29,
                    v30);
            if ( !v31.second )
            {
              *(_DWORD *)(((v3 + 560) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 560) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 591) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 + 79) & 7) >= *(_BYTE *)(((v3 + 591) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 560, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 560),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityItemLimitExcelConfig",
                2458);
              v32 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 560),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v33 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(
                      v32,
                      (const char (*)[19])byte_1A454F40);
              *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 120) >> 3) + 0x7FFF8000) <= 3 )
                __asan_report_load4(v3 + 120);
              v34 = (__int64)data::enumValToStr((data::NewActivityType)*(_DWORD *)(v3 + 120), (__int64)byte_1A454F40);
              if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
                v34 = __asan_report_store8(v3 + 80, byte_1A454F40);
              *(_QWORD *)(v3 + 80) = v34;
              common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v33, (const char *const *)(v3 + 80));
              *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 560));
              *(_DWORD *)(((v3 + 560) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v18 = 0;
            }
            else
            {
              v18 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 368) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 368) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 399) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 113) & 7) >= *(_BYTE *)(((v3 + 399) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 368, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 368),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityItemLimitExcelConfig",
            2446);
          v17 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 368),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 368));
          *(_DWORD *)(((v3 + 368) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v18 = 0;
        }
        data::NewActivityItemLimitExcelConfig::~NewActivityItemLimitExcelConfig((data::NewActivityItemLimitExcelConfig *const)(v3 + 112));
        v35 = ((v3 + 112) >> 3) + 2147450880;
        *(_WORD *)v35 = -1800;
        *(_BYTE *)(v35 + 2) = -8;
        if ( v18 != 1 )
        {
          v36 = 0;
          goto LABEL_59;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v36 = 1;
LABEL_59:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v36 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    __asan_poison_stack_memory(v3 + 1072, 32880LL);
    if ( !v10 )
      goto LABEL_63;
  }
  v2 = 0;
LABEL_63:
  for ( i = (char *)(v3 + 208); i != (char *)(v3 + 176); std::string::~string(i) )
    i -= 32;
  if ( v42 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4276) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34208LL, v42);
  }
  return v2;
};

// Line 2467: range 000000000EEDAADA-000000000EEDBB1E
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::NewActivityExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::NewActivityExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  _DWORD *v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-8638h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8618h]
  char v37[34320]; // [rsp+50h] [rbp-8610h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34272LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2482 64 4 9 <unknown> 80 32 10 paths:2468 144 32 9 <unknown> 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 128"
                        " 9 data:2485 688 376 25 debug_message_stream:2493 1136 32880 13 txt_file:2476";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862740] = -219021312;
  v5[536862741] = 62194;
  v5[536862753] = -218959360;
  v5[536862754] = -218959118;
  v5[536862755] = 62194;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 80),
    "/txt/NewActivityData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 80); __for_begin != (std::string *)(v3 + 112); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 144);
    std::string::~string((void *)(v3 + 144));
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1136, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1136), v7) )
    {
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityExcelConfig",
        2479);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 208),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 208));
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1136));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1136), *(_DWORD *)(v3 + 48));
        v13 = (_DWORD *)(((v3 + 528) >> 3) + 2147450880);
        *v13 = 0;
        v13[1] = 0;
        v13[2] = 0;
        v13[3] = 0;
        data::NewActivityExcelConfig::NewActivityExcelConfig((data::NewActivityExcelConfig *const)(v3 + 528));
        if ( row_ptr )
        {
          if ( data::NewActivityExcelConfig::init((data::NewActivityExcelConfig *const)(v3 + 528), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 688, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 688);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 688, &unk_1A455120);
            if ( *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 536);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 536));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityExcelConfig",
              2495);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v21);
            *(_DWORD *)(v3 + 64) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 64));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            std::ostringstream::str(v3 + 400, v3 + 688);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 400));
            std::string::~string((void *)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 688);
            __asan_poison_stack_memory(v3 + 688, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::NewActivityExcelConfig &>((data::NewActivityExcelConfig *)(v3 + 528));
            v27 = std::unordered_map<unsigned int,data::NewActivityExcelConfig>::emplace<unsigned int &,data::NewActivityExcelConfig>(
                    &this->new_activity_excel_config_map,
                    (unsigned int *)(v3 + 536),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityExcelConfig",
                2500);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                      v28,
                      (const char (*)[17])byte_1A455160);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 536));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 32 + 79) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityExcelConfig",
            2488);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::NewActivityExcelConfig::~NewActivityExcelConfig((data::NewActivityExcelConfig *const)(v3 + 528));
        v30 = (_DWORD *)(((v3 + 528) >> 3) + 2147450880);
        *v30 = -117901064;
        v30[1] = -117901064;
        v30[2] = -117901064;
        v30[3] = -117901064;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    __asan_poison_stack_memory(v3 + 1136, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 112); i != (char *)(v3 + 80); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90B4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4284) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34272LL, v37);
  }
  return v2;
};

// Line 2509: range 000000000EEDBB20-000000000EEDCBA3
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityScheduleExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::NewActivityScheduleExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::NewActivityScheduleExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  unsigned __int64 v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-8698h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8678h]
  char v37[34416]; // [rsp+50h] [rbp-8670h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34368LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2524 64 4 9 <unknown> 80 32 10 paths:2510 144 32 9 <unknown> 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 184"
                        " 9 data:2527 784 376 25 debug_message_stream:2535 1232 32880 13 txt_file:2518";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityScheduleExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862742] = -218959360;
  v5[536862743] = -218959118;
  v5[536862744] = 62194;
  v5[536862756] = -218959360;
  v5[536862757] = -218959118;
  v5[536862758] = 62194;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  v5[536863791] = -202116109;
  v5[536863792] = -202116109;
  v5[536863793] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 80),
    "/txt/NewActivityScheduleData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 80); __for_begin != (std::string *)(v3 + 112); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 144);
    std::string::~string((void *)(v3 + 144));
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1232, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1232));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1232), v7) )
    {
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityScheduleExcelConfig",
        2521);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 208),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 208));
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1232));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1232), *(_DWORD *)(v3 + 48));
        v13 = ((v3 + 528) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_DWORD *)(v13 + 4) = 0;
        *(_DWORD *)(v13 + 8) = 0;
        *(_DWORD *)(v13 + 12) = 0;
        *(_DWORD *)(v13 + 16) = 0;
        *(_WORD *)(v13 + 20) = 0;
        *(_BYTE *)(v13 + 22) = 0;
        data::NewActivityScheduleExcelConfig::NewActivityScheduleExcelConfig((data::NewActivityScheduleExcelConfig *const)(v3 + 528));
        if ( row_ptr )
        {
          if ( data::NewActivityScheduleExcelConfig::init(
                 (data::NewActivityScheduleExcelConfig *const)(v3 + 528),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 784, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 784);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 784, &unk_1A455380);
            if ( *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 536);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 536));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityScheduleExcelConfig",
              2537);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v21);
            *(_DWORD *)(v3 + 64) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 64));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            std::ostringstream::str(v3 + 400, v3 + 784);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 400));
            std::string::~string((void *)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 784);
            __asan_poison_stack_memory(v3 + 784, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::NewActivityScheduleExcelConfig &>((data::NewActivityScheduleExcelConfig *)(v3 + 528));
            v27 = std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::emplace<unsigned int &,data::NewActivityScheduleExcelConfig>(
                    &this->new_activity_schedule_excel_config_map,
                    (unsigned int *)(v3 + 536),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityScheduleExcelConfig",
                2542);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                      v28,
                      (const char (*)[17])byte_1A4553C0);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 536));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityScheduleExcelConfig",
            2530);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::NewActivityScheduleExcelConfig::~NewActivityScheduleExcelConfig((data::NewActivityScheduleExcelConfig *const)(v3 + 528));
        v30 = ((v3 + 528) >> 3) + 2147450880;
        *(_DWORD *)v30 = -117901064;
        *(_DWORD *)(v30 + 4) = -117901064;
        *(_DWORD *)(v30 + 8) = -117901064;
        *(_DWORD *)(v30 + 12) = -117901064;
        *(_DWORD *)(v30 + 16) = -117901064;
        *(_WORD *)(v30 + 20) = -1800;
        *(_BYTE *)(v30 + 22) = -8;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1232));
    __asan_poison_stack_memory(v3 + 1232, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 112); i != (char *)(v3 + 80); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90C0) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4296) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34368LL, v37);
  }
  return v2;
};

// Line 2551: range 000000000EEDCBA4-000000000EEDDB77
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityCondGroupExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::NewActivityCondGroupExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::NewActivityCondGroupExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  unsigned __int64 v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85F8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85D8h]
  char v37[34256]; // [rsp+50h] [rbp-85D0h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34208LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 48 1 9 <unknown> 64 4 6 r:2566 80 4 9 <unknown> 96 32 10 paths:2552 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 40 "
                        "9 data:2569 624 376 25 debug_message_stream:2577 1072 32880 13 txt_file:2560";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityCondGroupExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234556924;
  v5[536862724] = -218959118;
  v5[536862726] = -218959118;
  v5[536862728] = -218959118;
  v5[536862730] = -218959118;
  v5[536862732] = -218959118;
  v5[536862734] = -218959118;
  v5[536862736] = -218959118;
  v5[536862738] = -218959360;
  v5[536862739] = 62194;
  v5[536862751] = -218959360;
  v5[536862752] = -218959118;
  v5[536862753] = 62194;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  std::allocator<char>::allocator(v3 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 96),
    "/txt/NewActivityCondGroupData.txt",
    (const std::allocator<char> *)(v3 + 48));
  std::allocator<char>::~allocator(v3 + 48);
  *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 96); __for_begin != (std::string *)(v3 + 128); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 160, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 160), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 160);
    std::string::~string((void *)(v3 + 160));
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1072, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1072), v7) )
    {
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 224) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 96 + 95) & 7) >= *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 224, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 224),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityCondGroupExcelConfig",
        2563);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 224),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 224));
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 64) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 64, v7);
      for ( *(_DWORD *)(v3 + 64) = 0; ; ++*(_DWORD *)(v3 + 64) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1072));
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
        if ( v12 <= *(_DWORD *)(v3 + 64) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1072), *(_DWORD *)(v3 + 64));
        v13 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_BYTE *)(v13 + 4) = 0;
        data::NewActivityCondGroupExcelConfig::NewActivityCondGroupExcelConfig((data::NewActivityCondGroupExcelConfig *const)(v3 + 544));
        if ( row_ptr )
        {
          if ( data::NewActivityCondGroupExcelConfig::init(
                 (data::NewActivityCondGroupExcelConfig *const)(v3 + 544),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 624, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 624);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 624, &unk_1A4555E0);
            if ( *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 552);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 552));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 352) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 127) & 7) >= *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 352, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 352),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityCondGroupExcelConfig",
              2579);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 352),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 64);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 64) + 1);
            if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 80, v21);
            *(_DWORD *)(v3 + 80) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 80));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 416) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 416, 32LL);
            }
            std::ostringstream::str(v3 + 416, v3 + 624);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 416));
            std::string::~string((void *)(v3 + 416));
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 352));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 624);
            __asan_poison_stack_memory(v3 + 624, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::NewActivityCondGroupExcelConfig &>((data::NewActivityCondGroupExcelConfig *)(v3 + 544));
            v27 = std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::emplace<unsigned int &,data::NewActivityCondGroupExcelConfig>(
                    &this->new_activity_cond_group_excel_config_map,
                    (unsigned int *)(v3 + 552),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 480) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 96 + 95) & 7) >= *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 480, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 480),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityCondGroupExcelConfig",
                2584);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 480),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                      v28,
                      (const char (*)[14])byte_1A455620);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 552));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 480));
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 288) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 63) & 7) >= *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 288, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 288),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityCondGroupExcelConfig",
            2572);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 288),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 64));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 288));
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::NewActivityCondGroupExcelConfig::~NewActivityCondGroupExcelConfig((data::NewActivityCondGroupExcelConfig *const)(v3 + 544));
        v30 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v30 = -117901064;
        *(_BYTE *)(v30 + 4) = -8;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    __asan_poison_stack_memory(v3 + 1072, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 128); i != (char *)(v3 + 96); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862726) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450896 - (((_DWORD)v5 + 2147450904) & 0xFFFFFFF8) + 4260) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34208LL, v37);
  }
  return v2;
};

// Line 2593: range 000000000EEDDB78-000000000EEDEB7A
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityCondExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::NewActivityCondExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::NewActivityCondExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  unsigned __int64 v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-8638h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8618h]
  char v37[34320]; // [rsp+50h] [rbp-8610h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34272LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 48 1 9 <unknown> 64 4 6 r:2608 80 4 9 <unknown> 96 32 10 paths:2594 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 104"
                        " 9 data:2611 688 376 25 debug_message_stream:2619 1136 32880 13 txt_file:2602";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityCondExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234556924;
  v5[536862724] = -218959118;
  v5[536862726] = -218959118;
  v5[536862728] = -218959118;
  v5[536862730] = -218959118;
  v5[536862732] = -218959118;
  v5[536862734] = -218959118;
  v5[536862736] = -218959118;
  v5[536862740] = -218959360;
  v5[536862741] = 62194;
  v5[536862753] = -218959360;
  v5[536862754] = -218959118;
  v5[536862755] = 62194;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  std::allocator<char>::allocator(v3 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 96),
    "/txt/NewActivityCondData.txt",
    (const std::allocator<char> *)(v3 + 48));
  std::allocator<char>::~allocator(v3 + 48);
  *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 96); __for_begin != (std::string *)(v3 + 128); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 160, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 160), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 160);
    std::string::~string((void *)(v3 + 160));
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1136, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1136), v7) )
    {
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 224) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 32 + 31) & 7) >= *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 224, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 224),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityCondExcelConfig",
        2605);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 224),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 224));
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 64) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 64, v7);
      for ( *(_DWORD *)(v3 + 64) = 0; ; ++*(_DWORD *)(v3 + 64) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1136));
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
        if ( v12 <= *(_DWORD *)(v3 + 64) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1136), *(_DWORD *)(v3 + 64));
        v13 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_DWORD *)(v13 + 4) = 0;
        *(_DWORD *)(v13 + 8) = 0;
        *(_BYTE *)(v13 + 12) = 0;
        data::NewActivityCondExcelConfig::NewActivityCondExcelConfig((data::NewActivityCondExcelConfig *const)(v3 + 544));
        if ( row_ptr )
        {
          if ( data::NewActivityCondExcelConfig::init((data::NewActivityCondExcelConfig *const)(v3 + 544), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 688, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 688);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 688, &unk_1A455800);
            if ( *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 552);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 552));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 352) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 127) & 7) >= *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 352, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 352),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityCondExcelConfig",
              2621);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 352),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 64);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 64) + 1);
            if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 80, v21);
            *(_DWORD *)(v3 + 80) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 80));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 416) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 416, 32LL);
            }
            std::ostringstream::str(v3 + 416, v3 + 688);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 416));
            std::string::~string((void *)(v3 + 416));
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 352));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 688);
            __asan_poison_stack_memory(v3 + 688, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::NewActivityCondExcelConfig &>((data::NewActivityCondExcelConfig *)(v3 + 544));
            v27 = std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::emplace<unsigned int &,data::NewActivityCondExcelConfig>(
                    &this->new_activity_cond_excel_config_map,
                    (unsigned int *)(v3 + 552),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 480) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 32 + 31) & 7) >= *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 480, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 480),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityCondExcelConfig",
                2626);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 480),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                      v28,
                      (const char (*)[13])byte_1A455840);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 552));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 480));
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 288) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 32 + 95) & 7) >= *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 288, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 288),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityCondExcelConfig",
            2614);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 288),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 64));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 288));
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::NewActivityCondExcelConfig::~NewActivityCondExcelConfig((data::NewActivityCondExcelConfig *const)(v3 + 544));
        v30 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v30 = -117901064;
        *(_DWORD *)(v30 + 4) = -117901064;
        *(_DWORD *)(v30 + 8) = -117901064;
        *(_BYTE *)(v30 + 12) = -8;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    __asan_poison_stack_memory(v3 + 1136, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 128); i != (char *)(v3 + 96); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90B4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862726) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450896 - (((_DWORD)v5 + 2147450904) & 0xFFFFFFF8) + 4268) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34272LL, v37);
  }
  return v2;
};

// Line 2635: range 000000000EEDEB7C-000000000EEDFFA3
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityDropExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  unsigned __int64 v16; // rax
  std::tuple_element<1,const std::pair<const std::string,short unsigned int> >::type *v17; // rax
  __int64 v18; // rsi
  __int64 v19; // rdx
  std::map<long unsigned int,std::string>::mapped_type *v20; // rdx
  std::vector<std::string>::size_type v21; // rdx
  const char *v22; // rax
  __int64 v23; // r14
  std::map<long unsigned int,std::string>::mapped_type *v24; // rax
  __int64 v25; // rax
  __int64 v26; // r14
  const std::vector<std::string> *p_data_vec; // rax
  std::vector<std::string>::const_reference v28; // rax
  unsigned __int64 v29; // rax
  const char *v30; // rax
  __int64 v31; // r14
  std::vector<std::string>::const_reference v32; // rax
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rdx
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rcx
  __int64 v37; // rsi
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // r14
  data::NewActivityDropExcelConfig *v40; // rax
  data::NewActivityDropExcelConfig *v41; // rdx
  unsigned __int64 v42; // rax
  int v43; // edx
  char *j; // r14
  std::string *__for_begin; // [rsp+20h] [rbp-86C0h]
  size_t i; // [rsp+28h] [rbp-86B8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8698h]
  std::map<std::string,short unsigned int> *__for_range_0; // [rsp+50h] [rbp-8690h]
  std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> >::reference v51; // [rsp+58h] [rbp-8688h]
  std::tuple_element<0,std::pair<const std::string,short unsigned int> >::type *col_name; // [rsp+60h] [rbp-8680h]
  std::tuple_element<1,const std::pair<const std::string,short unsigned int> >::type *col_id; // [rsp+68h] [rbp-8678h]
  char v54[34416]; // [rsp+70h] [rbp-8670h] BYREF

  v3 = (unsigned __int64)v54;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34368LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "17 32 1 9 <unknown> 48 4 6 r:2650 64 4 9 <unknown> 80 8 16 __for_begin:2665 112 8 14 __for_end:2"
                        "665 144 8 9 <unknown> 176 8 6 i:2669 208 32 10 paths:2636 272 32 9 <unknown> 336 32 9 <unknown> "
                        "400 32 9 <unknown> 464 32 9 <unknown> 528 32 9 <unknown> 592 48 20 col_id_name_map:2664 672 72 9"
                        " data:2653 784 376 25 debug_message_stream:2661 1232 32880 13 txt_file:2644";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityDropExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862722] = -234881024;
  v5[536862723] = 62194;
  v5[536862723] = -234881024;
  v5[536862724] = 62194;
  v5[536862724] = -234881024;
  v5[536862725] = 62194;
  v5[536862725] = -234881024;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862737] = -219021312;
  v5[536862738] = 62194;
  v5[536862740] = -218959118;
  v5[536862743] = -218959360;
  v5[536862744] = 62194;
  v5[536862756] = -218959360;
  v5[536862757] = -218959118;
  v5[536862758] = 62194;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  v5[536863791] = -202116109;
  v5[536863792] = -202116109;
  v5[536863793] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 208),
    "/txt/NewActivityDropData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 208); __for_begin != (std::string *)(v3 + 240); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 272, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 272), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 272);
    std::string::~string((void *)(v3 + 272));
    *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1232, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1232));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1232), v7) )
    {
      *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 336, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 336),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityDropExcelConfig",
        2647);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 336),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
      *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1232));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1232), *(_DWORD *)(v3 + 48));
        v13 = ((v3 + 672) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_DWORD *)(v13 + 4) = 0;
        *(_BYTE *)(v13 + 8) = 0;
        data::NewActivityDropExcelConfig::NewActivityDropExcelConfig((data::NewActivityDropExcelConfig *const)(v3 + 672));
        if ( row_ptr )
        {
          if ( data::NewActivityDropExcelConfig::init((data::NewActivityDropExcelConfig *const)(v3 + 672), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 784, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 784);
            if ( *(_BYTE *)(((unsigned __int64)&row_ptr->col_name_map_ptr >> 3) + 0x7FFF8000) )
              __asan_report_load8(&row_ptr->col_name_map_ptr);
            if ( row_ptr->col_name_map_ptr )
            {
              v16 = ((v3 + 592) >> 3) + 2147450880;
              *(_DWORD *)v16 = 0;
              *(_WORD *)(v16 + 4) = 0;
              std::map<unsigned long,std::string>::map((std::map<long unsigned int,std::string> *const)(v3 + 592));
              if ( *(_BYTE *)(((unsigned __int64)&row_ptr->col_name_map_ptr >> 3) + 0x7FFF8000) )
                __asan_report_load8(&row_ptr->col_name_map_ptr);
              __for_range_0 = row_ptr->col_name_map_ptr;
              *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 80, 376LL);
              *(std::map<std::string,short unsigned int>::iterator *)(v3 + 80) = std::map<std::string,unsigned short>::begin(__for_range_0);
              *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 112, 376LL);
              *(std::map<std::string,short unsigned int>::iterator *)(v3 + 112) = std::map<std::string,unsigned short>::end(__for_range_0);
              while ( std::operator!=(
                        (const std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> >::_Self *)(v3 + 80),
                        (const std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> >::_Self *)(v3 + 112)) )
              {
                v51 = std::_Rb_tree_iterator<std::pair<std::string const,unsigned short>>::operator*((const std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> > *const)(v3 + 80));
                col_name = std::get<0ul,std::string const,unsigned short>(v51);
                v17 = (std::tuple_element<1,const std::pair<const std::string,short unsigned int> >::type *)std::get<1ul,std::string const,unsigned short>(v51);
                col_id = v17;
                *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
                v18 = ((unsigned __int8)v17 & 7u) + 1;
                if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v17 & 7) + 1) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load2(v17);
                }
                v19 = *col_id;
                if ( *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) )
                  __asan_report_store8(v3 + 144, v18);
                *(_QWORD *)(v3 + 144) = v19;
                v20 = std::map<unsigned long,std::string>::operator[](
                        (std::map<long unsigned int,std::string> *const)(v3 + 592),
                        (std::map<long unsigned int,std::string>::key_type *)(v3 + 144));
                std::string::operator=(v20, col_name);
                *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = -8;
                std::_Rb_tree_iterator<std::pair<std::string const,unsigned short>>::operator++((std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> > *const)(v3 + 80));
              }
              *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 176, v3 + 112);
              for ( *(_QWORD *)(v3 + 176) = 0LL; ; ++*(_QWORD *)(v3 + 176) )
              {
                v21 = std::vector<std::string>::size(&row_ptr->data_vec);
                if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
                  __asan_report_load8(v3 + 176);
                if ( v21 <= *(_QWORD *)(v3 + 176) )
                  break;
                if ( *(_QWORD *)(v3 + 176) )
                  v22 = " ";
                else
                  v22 = byte_1A3FEBE0;
                v23 = std::operator<<<std::char_traits<char>>(v3 + 784, v22);
                v24 = std::map<unsigned long,std::string>::operator[](
                        (std::map<long unsigned int,std::string> *const)(v3 + 592),
                        (const std::map<long unsigned int,std::string>::key_type *)(v3 + 176));
                v25 = std::operator<<<char>(v23, v24);
                v26 = std::operator<<<std::char_traits<char>>(v25, &off_1A455AC0);
                p_data_vec = &row_ptr->data_vec;
                if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
                  __asan_report_load8(v3 + 176);
                v28 = std::vector<std::string>::operator[](p_data_vec, *(_QWORD *)(v3 + 176));
                std::operator<<<char>(v26, v28);
                if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
                  __asan_report_load8(v3 + 176);
              }
              *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = -8;
              std::map<unsigned long,std::string>::~map((std::map<long unsigned int,std::string> *const)(v3 + 592));
              v29 = ((v3 + 592) >> 3) + 2147450880;
              *(_DWORD *)v29 = -117901064;
              *(_WORD *)(v29 + 4) = -1800;
            }
            else
            {
              for ( i = 0LL; i < std::vector<std::string>::size(&row_ptr->data_vec); ++i )
              {
                if ( i )
                  v30 = (const char *)&unk_1A455B00;
                else
                  v30 = byte_1A3FEBE0;
                v31 = std::operator<<<std::char_traits<char>>(v3 + 784, v30);
                v32 = std::vector<std::string>::operator[](&row_ptr->data_vec, i);
                std::operator<<<char>(v31, v32);
              }
            }
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 464, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 464),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityDropExcelConfig",
              2681);
            v33 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 464),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v34 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v33, (const char (*)[2])"<");
            v35 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v34, __for_begin);
            v36 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v35,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v37 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v37);
            *(_DWORD *)(v3 + 64) = v37;
            v38 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v36,
                    (const unsigned int *)(v3 + 64));
            v39 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v38,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 528) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 528, 32LL);
            }
            std::ostringstream::str(v3 + 528, v3 + 784);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v39, (const std::string *)(v3 + 528));
            std::string::~string((void *)(v3 + 528));
            *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 784);
            __asan_poison_stack_memory(v3 + 784, 376LL);
            v15 = 0;
          }
          else
          {
            v40 = std::move<data::NewActivityDropExcelConfig &>((data::NewActivityDropExcelConfig *)(v3 + 672));
            std::vector<data::NewActivityDropExcelConfig>::emplace_back<data::NewActivityDropExcelConfig>(
              &this->new_activity_drop_excel_config_vec,
              v40,
              v41);
            v15 = 1;
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 400, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 400),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityDropExcelConfig",
            2656);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 400),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 400));
          *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::NewActivityDropExcelConfig::~NewActivityDropExcelConfig((data::NewActivityDropExcelConfig *const)(v3 + 672));
        v42 = ((v3 + 672) >> 3) + 2147450880;
        *(_DWORD *)v42 = -117901064;
        *(_DWORD *)(v42 + 4) = -117901064;
        *(_BYTE *)(v42 + 8) = -8;
        if ( v15 != 1 )
        {
          v43 = 0;
          goto LABEL_76;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v43 = 1;
LABEL_76:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v43 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1232));
    __asan_poison_stack_memory(v3 + 1232, 32880LL);
    if ( !v10 )
      goto LABEL_80;
  }
  v2 = 0;
LABEL_80:
  for ( j = (char *)(v3 + 240); j != (char *)(v3 + 208); std::string::~string(j) )
    j -= 32;
  if ( v54 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90C0) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4296) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34368LL, v54);
  }
  return v2;
};

// Line 2691: range 000000000EEDFFA4-000000000EEE0FF4
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityWatcherConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::NewActivityWatcherConfig *v24; // rax
  unsigned int *v25; // rcx
  data::NewActivityWatcherConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  unsigned __int64 v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-8638h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8618h]
  char v37[34320]; // [rsp+50h] [rbp-8610h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34272LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2706 64 4 9 <unknown> 80 32 10 paths:2692 144 32 9 <unknown> 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 120"
                        " 9 data:2709 688 376 25 debug_message_stream:2717 1136 32880 13 txt_file:2700";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityWatcherConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862740] = -218959360;
  v5[536862741] = 62194;
  v5[536862753] = -218959360;
  v5[536862754] = -218959118;
  v5[536862755] = 62194;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 80),
    "/txt/NewActivityWatcherData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 80); __for_begin != (std::string *)(v3 + 112); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 144);
    std::string::~string((void *)(v3 + 144));
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1136, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1136), v7) )
    {
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityWatcherConfig",
        2703);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 208),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 208));
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1136));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1136), *(_DWORD *)(v3 + 48));
        v13 = ((v3 + 528) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_DWORD *)(v13 + 4) = 0;
        *(_DWORD *)(v13 + 8) = 0;
        *(_WORD *)(v13 + 12) = 0;
        *(_BYTE *)(v13 + 14) = 0;
        data::NewActivityWatcherConfig::NewActivityWatcherConfig((data::NewActivityWatcherConfig *const)(v3 + 528));
        if ( row_ptr )
        {
          if ( data::NewActivityWatcherConfig::init((data::NewActivityWatcherConfig *const)(v3 + 528), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 688, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 688);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 688, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 536);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 536));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityWatcherConfig",
              2719);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v21);
            *(_DWORD *)(v3 + 64) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 64));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            std::ostringstream::str(v3 + 400, v3 + 688);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 400));
            std::string::~string((void *)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 688);
            __asan_poison_stack_memory(v3 + 688, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::NewActivityWatcherConfig &>((data::NewActivityWatcherConfig *)(v3 + 528));
            v27 = std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::emplace<unsigned int &,data::NewActivityWatcherConfig>(
                    &this->new_activity_watcher_config_map,
                    (unsigned int *)(v3 + 536),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityWatcherConfig",
                2724);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v28, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 536));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 32 + 79) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityWatcherConfig",
            2712);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::NewActivityWatcherConfig::~NewActivityWatcherConfig((data::NewActivityWatcherConfig *const)(v3 + 528));
        v30 = ((v3 + 528) >> 3) + 2147450880;
        *(_DWORD *)v30 = -117901064;
        *(_DWORD *)(v30 + 4) = -117901064;
        *(_DWORD *)(v30 + 8) = -117901064;
        *(_WORD *)(v30 + 12) = -1800;
        *(_BYTE *)(v30 + 14) = -8;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    __asan_poison_stack_memory(v3 + 1136, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 112); i != (char *)(v3 + 80); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90B4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4284) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34272LL, v37);
  }
  return v2;
};

// Line 2733: range 000000000EEE0FF6-000000000EEE20F1
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityEntryConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  __int64 v13; // rsi
  unsigned __int64 v14; // rax
  __int64 *v15; // rdx
  __int64 v16; // rsi
  common::milog::MiLogStream *v17; // rax
  int v18; // r14d
  __int64 v19; // rcx
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rdx
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rcx
  __int64 v24; // rsi
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // r14
  data::NewActivityEntryConfig *v27; // rax
  unsigned int *v28; // rcx
  data::NewActivityEntryConfig *v29; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityEntryConfig>,false,false>,bool> v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  unsigned __int64 v33; // rax
  int v34; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85D8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85B8h]
  char v40[34224]; // [rsp+50h] [rbp-85B0h] BYREF

  v3 = (unsigned __int64)v40;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34176LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2748 64 4 9 <unknown> 80 24 9 data:2751 144 32 10 paths:2734 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 32 "
                        "9 <unknown> 592 376 25 debug_message_stream:2759 1040 32880 13 txt_file:2742";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityEntryConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -218959360;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862737] = -219021312;
  v5[536862738] = 62194;
  v5[536862750] = -218959360;
  v5[536862751] = -218959118;
  v5[536862752] = 62194;
  v5[536863780] = -202116109;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 144),
    "/txt/NewActivitySortData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 144); __for_begin != (std::string *)(v3 + 176); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 208, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 208), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 208);
    std::string::~string((void *)(v3 + 208));
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1040, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1040), v7) )
    {
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 272, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 272),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityEntryConfig",
        2745);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 272),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1040));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        v13 = *(unsigned int *)(v3 + 48);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1040), v13);
        v14 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v14 = 0;
        *(_BYTE *)(v14 + 2) = 0;
        v15 = &`vtable for'data::NewActivityEntryConfig + 2;
        if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 80, v13);
        *(_QWORD *)(v3 + 80) = v15;
        if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 88, v13);
        *(_DWORD *)(v3 + 88) = 0;
        v16 = (((_BYTE)v3 + 92) & 7u) + 3;
        if ( *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 + 92) & 7) + 3) >= *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 92, v16);
        }
        *(_DWORD *)(v3 + 92) = 0;
        if ( *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 96, v16);
        *(_DWORD *)(v3 + 96) = 0;
        if ( row_ptr )
        {
          if ( data::NewActivityEntryConfig::init((data::NewActivityEntryConfig *const)(v3 + 80), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 592, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 592);
            v19 = std::operator<<<std::char_traits<char>>(v3 + 592, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 88);
            std::ostream::operator<<(v19, *(unsigned int *)(v3 + 88));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 400),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityEntryConfig",
              2761);
            v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 400),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v21 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v20, (const char (*)[2])"<");
            v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, __for_begin);
            v23 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v22,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v24 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v24);
            *(_DWORD *)(v3 + 64) = v24;
            v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v23,
                    (const unsigned int *)(v3 + 64));
            v26 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v25,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 464, 32LL);
            }
            std::ostringstream::str(v3 + 464, v3 + 592);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v26, (const std::string *)(v3 + 464));
            std::string::~string((void *)(v3 + 464));
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 592);
            __asan_poison_stack_memory(v3 + 592, 376LL);
            v18 = 0;
          }
          else
          {
            v27 = std::move<data::NewActivityEntryConfig &>((data::NewActivityEntryConfig *)(v3 + 80));
            v30 = std::unordered_map<unsigned int,data::NewActivityEntryConfig>::emplace<unsigned int &,data::NewActivityEntryConfig>(
                    &this->new_activity_entry_config_map,
                    (unsigned int *)(v3 + 88),
                    v27,
                    v28,
                    v29);
            if ( !v30.second )
            {
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 528) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 528, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 528),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityEntryConfig",
                2766);
              v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 528),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v32 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v31, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v32,
                (const unsigned int *)(v3 + 88));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 528));
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v18 = 0;
            }
            else
            {
              v18 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 336, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 336),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityEntryConfig",
            2754);
          v17 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 336),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v18 = 0;
        }
        data::NewActivityEntryConfig::~NewActivityEntryConfig((data::NewActivityEntryConfig *const)(v3 + 80));
        v33 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v33 = -1800;
        *(_BYTE *)(v33 + 2) = -8;
        if ( v18 != 1 )
        {
          v34 = 0;
          goto LABEL_53;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v34 = 1;
LABEL_53:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v34 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    __asan_poison_stack_memory(v3 + 1040, 32880LL);
    if ( !v10 )
      goto LABEL_57;
  }
  v2 = 0;
LABEL_57:
  for ( i = (char *)(v3 + 176); i != (char *)(v3 + 144); std::string::~string(i) )
    i -= 32;
  if ( v40 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90A8) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4272) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34176LL, v40);
  }
  return v2;
};

// Line 2775: range 000000000EEE20F2-000000000EEE30C5
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivitySaleExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::NewActivitySaleExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::NewActivitySaleExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  unsigned __int64 v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85F8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85D8h]
  char v37[34256]; // [rsp+50h] [rbp-85D0h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34208LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 48 1 9 <unknown> 64 4 6 r:2790 80 4 9 <unknown> 96 32 10 paths:2776 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 40 "
                        "9 data:2793 624 376 25 debug_message_stream:2801 1072 32880 13 txt_file:2784";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivitySaleExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234556924;
  v5[536862724] = -218959118;
  v5[536862726] = -218959118;
  v5[536862728] = -218959118;
  v5[536862730] = -218959118;
  v5[536862732] = -218959118;
  v5[536862734] = -218959118;
  v5[536862736] = -218959118;
  v5[536862738] = -218959360;
  v5[536862739] = 62194;
  v5[536862751] = -218959360;
  v5[536862752] = -218959118;
  v5[536862753] = 62194;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  std::allocator<char>::allocator(v3 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 96),
    "/txt/NewActivitySaleData.txt",
    (const std::allocator<char> *)(v3 + 48));
  std::allocator<char>::~allocator(v3 + 48);
  *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 96); __for_begin != (std::string *)(v3 + 128); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 160, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 160), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 160);
    std::string::~string((void *)(v3 + 160));
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1072, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1072), v7) )
    {
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 224) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 96 + 95) & 7) >= *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 224, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 224),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivitySaleExcelConfig",
        2787);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 224),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 224));
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 64) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 64, v7);
      for ( *(_DWORD *)(v3 + 64) = 0; ; ++*(_DWORD *)(v3 + 64) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1072));
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
        if ( v12 <= *(_DWORD *)(v3 + 64) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1072), *(_DWORD *)(v3 + 64));
        v13 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_BYTE *)(v13 + 4) = 0;
        data::NewActivitySaleExcelConfig::NewActivitySaleExcelConfig((data::NewActivitySaleExcelConfig *const)(v3 + 544));
        if ( row_ptr )
        {
          if ( data::NewActivitySaleExcelConfig::init((data::NewActivitySaleExcelConfig *const)(v3 + 544), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 624, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 624);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 624, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 552);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 552));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 352) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 127) & 7) >= *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 352, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 352),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivitySaleExcelConfig",
              2803);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 352),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 64);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 64) + 1);
            if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 80, v21);
            *(_DWORD *)(v3 + 80) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 80));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 416) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 416, 32LL);
            }
            std::ostringstream::str(v3 + 416, v3 + 624);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 416));
            std::string::~string((void *)(v3 + 416));
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 352));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 624);
            __asan_poison_stack_memory(v3 + 624, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::NewActivitySaleExcelConfig &>((data::NewActivitySaleExcelConfig *)(v3 + 544));
            v27 = std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::emplace<unsigned int &,data::NewActivitySaleExcelConfig>(
                    &this->new_activity_sale_excel_config_map,
                    (unsigned int *)(v3 + 552),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 480) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 96 + 95) & 7) >= *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 480, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 480),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivitySaleExcelConfig",
                2808);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 480),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v28, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 552));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 480));
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 288) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 63) & 7) >= *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 288, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 288),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivitySaleExcelConfig",
            2796);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 288),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 64));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 288));
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::NewActivitySaleExcelConfig::~NewActivitySaleExcelConfig((data::NewActivitySaleExcelConfig *const)(v3 + 544));
        v30 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v30 = -117901064;
        *(_BYTE *)(v30 + 4) = -8;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    __asan_poison_stack_memory(v3 + 1072, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 128); i != (char *)(v3 + 96); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862726) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450896 - (((_DWORD)v5 + 2147450904) & 0xFFFFFFF8) + 4260) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34208LL, v37);
  }
  return v2;
};

// Line 2817: range 000000000EEE30C6-000000000EEE410D
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityAvatarSelectionExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::NewActivityAvatarSelectionExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::NewActivityAvatarSelectionExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  _DWORD *v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-8638h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8618h]
  char v37[34320]; // [rsp+50h] [rbp-8610h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34272LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2832 64 4 9 <unknown> 80 32 10 paths:2818 144 32 9 <unknown> 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 128"
                        " 9 data:2835 688 376 25 debug_message_stream:2843 1136 32880 13 txt_file:2826";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityAvatarSelectionExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862740] = -219021312;
  v5[536862741] = 62194;
  v5[536862753] = -218959360;
  v5[536862754] = -218959118;
  v5[536862755] = 62194;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 80),
    "/txt/NewActivityAvatarSelection.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 80); __for_begin != (std::string *)(v3 + 112); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 144);
    std::string::~string((void *)(v3 + 144));
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1136, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1136), v7) )
    {
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityAvatarSelectionExcelConfig",
        2829);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 208),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 208));
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1136));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1136), *(_DWORD *)(v3 + 48));
        v13 = (_DWORD *)(((v3 + 528) >> 3) + 2147450880);
        *v13 = 0;
        v13[1] = 0;
        v13[2] = 0;
        v13[3] = 0;
        data::NewActivityAvatarSelectionExcelConfig::NewActivityAvatarSelectionExcelConfig((data::NewActivityAvatarSelectionExcelConfig *const)(v3 + 528));
        if ( row_ptr )
        {
          if ( data::NewActivityAvatarSelectionExcelConfig::init(
                 (data::NewActivityAvatarSelectionExcelConfig *const)(v3 + 528),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 688, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 688);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 688, &unk_1A455380);
            if ( *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 536);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 536));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityAvatarSelectionExcelConfig",
              2845);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v21);
            *(_DWORD *)(v3 + 64) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 64));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            std::ostringstream::str(v3 + 400, v3 + 688);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 400));
            std::string::~string((void *)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 688);
            __asan_poison_stack_memory(v3 + 688, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::NewActivityAvatarSelectionExcelConfig &>((data::NewActivityAvatarSelectionExcelConfig *)(v3 + 528));
            v27 = std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::emplace<unsigned int &,data::NewActivityAvatarSelectionExcelConfig>(
                    &this->new_activity_avatar_selection_excel_config_map,
                    (unsigned int *)(v3 + 536),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityAvatarSelectionExcelConfig",
                2850);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                      v28,
                      (const char (*)[17])byte_1A4553C0);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 536));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 32 + 79) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityAvatarSelectionExcelConfig",
            2838);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::NewActivityAvatarSelectionExcelConfig::~NewActivityAvatarSelectionExcelConfig((data::NewActivityAvatarSelectionExcelConfig *const)(v3 + 528));
        v30 = (_DWORD *)(((v3 + 528) >> 3) + 2147450880);
        *v30 = -117901064;
        v30[1] = -117901064;
        v30[2] = -117901064;
        v30[3] = -117901064;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    __asan_poison_stack_memory(v3 + 1136, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 112); i != (char *)(v3 + 80); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90B4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4284) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34272LL, v37);
  }
  return v2;
};

// Line 2859: range 000000000EEE410E-000000000EEE5209
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityScoreLimitExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  __int64 v13; // rsi
  unsigned __int64 v14; // rax
  __int64 *v15; // rdx
  __int64 v16; // rsi
  common::milog::MiLogStream *v17; // rax
  int v18; // r14d
  __int64 v19; // rcx
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rdx
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rcx
  __int64 v24; // rsi
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // r14
  data::NewActivityScoreLimitExcelConfig *v27; // rax
  unsigned int *v28; // rcx
  data::NewActivityScoreLimitExcelConfig *v29; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false,false>,bool> v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  unsigned __int64 v33; // rax
  int v34; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85D8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85B8h]
  char v40[34224]; // [rsp+50h] [rbp-85B0h] BYREF

  v3 = (unsigned __int64)v40;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34176LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2874 64 4 9 <unknown> 80 24 9 data:2877 144 32 10 paths:2860 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 32 "
                        "9 <unknown> 592 376 25 debug_message_stream:2885 1040 32880 13 txt_file:2868";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityScoreLimitExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -218959360;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862737] = -219021312;
  v5[536862738] = 62194;
  v5[536862750] = -218959360;
  v5[536862751] = -218959118;
  v5[536862752] = 62194;
  v5[536863780] = -202116109;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 144),
    "/txt/NewActivityScoreLimitData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 144); __for_begin != (std::string *)(v3 + 176); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 208, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 208), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 208);
    std::string::~string((void *)(v3 + 208));
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1040, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1040), v7) )
    {
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 272, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 272),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityScoreLimitExcelConfig",
        2871);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 272),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1040));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        v13 = *(unsigned int *)(v3 + 48);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1040), v13);
        v14 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v14 = 0;
        *(_BYTE *)(v14 + 2) = 0;
        v15 = &`vtable for'data::NewActivityScoreLimitExcelConfig + 2;
        if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 80, v13);
        *(_QWORD *)(v3 + 80) = v15;
        if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 88, v13);
        *(_DWORD *)(v3 + 88) = 0;
        v16 = (((_BYTE)v3 + 92) & 7u) + 3;
        if ( *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 + 92) & 7) + 3) >= *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 92, v16);
        }
        *(_DWORD *)(v3 + 92) = 0;
        if ( *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 96, v16);
        *(_DWORD *)(v3 + 96) = 0;
        if ( row_ptr )
        {
          if ( data::NewActivityScoreLimitExcelConfig::init(
                 (data::NewActivityScoreLimitExcelConfig *const)(v3 + 80),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 592, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 592);
            v19 = std::operator<<<std::char_traits<char>>(v3 + 592, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 88);
            std::ostream::operator<<(v19, *(unsigned int *)(v3 + 88));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 400),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityScoreLimitExcelConfig",
              2887);
            v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 400),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v21 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v20, (const char (*)[2])"<");
            v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, __for_begin);
            v23 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v22,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v24 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v24);
            *(_DWORD *)(v3 + 64) = v24;
            v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v23,
                    (const unsigned int *)(v3 + 64));
            v26 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v25,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 464, 32LL);
            }
            std::ostringstream::str(v3 + 464, v3 + 592);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v26, (const std::string *)(v3 + 464));
            std::string::~string((void *)(v3 + 464));
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 592);
            __asan_poison_stack_memory(v3 + 592, 376LL);
            v18 = 0;
          }
          else
          {
            v27 = std::move<data::NewActivityScoreLimitExcelConfig &>((data::NewActivityScoreLimitExcelConfig *)(v3 + 80));
            v30 = std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::emplace<unsigned int &,data::NewActivityScoreLimitExcelConfig>(
                    &this->new_activity_score_limit_excel_config_map,
                    (unsigned int *)(v3 + 88),
                    v27,
                    v28,
                    v29);
            if ( !v30.second )
            {
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 528) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 528, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 528),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityScoreLimitExcelConfig",
                2892);
              v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 528),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v32 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v31, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v32,
                (const unsigned int *)(v3 + 88));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 528));
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v18 = 0;
            }
            else
            {
              v18 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 336, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 336),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityScoreLimitExcelConfig",
            2880);
          v17 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 336),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v18 = 0;
        }
        data::NewActivityScoreLimitExcelConfig::~NewActivityScoreLimitExcelConfig((data::NewActivityScoreLimitExcelConfig *const)(v3 + 80));
        v33 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v33 = -1800;
        *(_BYTE *)(v33 + 2) = -8;
        if ( v18 != 1 )
        {
          v34 = 0;
          goto LABEL_53;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v34 = 1;
LABEL_53:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v34 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    __asan_poison_stack_memory(v3 + 1040, 32880LL);
    if ( !v10 )
      goto LABEL_57;
  }
  v2 = 0;
LABEL_57:
  for ( i = (char *)(v3 + 176); i != (char *)(v3 + 144); std::string::~string(i) )
    i -= 32;
  if ( v40 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90A8) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4272) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34176LL, v40);
  }
  return v2;
};

// Line 2901: range 000000000EEE520A-000000000EEE634D
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityScoreRewardExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  __int64 v13; // rsi
  unsigned __int64 v14; // rax
  __int64 *v15; // rdx
  __int64 v16; // rsi
  common::milog::MiLogStream *v17; // rax
  int v18; // r14d
  __int64 v19; // rcx
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rdx
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rcx
  __int64 v24; // rsi
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // r14
  data::NewActivityScoreRewardExcelConfig *v27; // rax
  unsigned int *v28; // rcx
  data::NewActivityScoreRewardExcelConfig *v29; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false,false>,bool> v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  unsigned __int64 v33; // rax
  int v34; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85D8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85B8h]
  char v40[34224]; // [rsp+50h] [rbp-85B0h] BYREF

  v3 = (unsigned __int64)v40;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34176LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2916 64 4 9 <unknown> 80 24 9 data:2919 144 32 10 paths:2902 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 32 "
                        "9 <unknown> 592 376 25 debug_message_stream:2927 1040 32880 13 txt_file:2910";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityScoreRewardExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -218959360;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862737] = -219021312;
  v5[536862738] = 62194;
  v5[536862750] = -218959360;
  v5[536862751] = -218959118;
  v5[536862752] = 62194;
  v5[536863780] = -202116109;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 144),
    "/txt/NewActivityScoreRewardData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 144); __for_begin != (std::string *)(v3 + 176); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 208, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 208), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 208);
    std::string::~string((void *)(v3 + 208));
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1040, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1040), v7) )
    {
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 272, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 272),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityScoreRewardExcelConfig",
        2913);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 272),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1040));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        v13 = *(unsigned int *)(v3 + 48);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1040), v13);
        v14 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v14 = 0;
        *(_BYTE *)(v14 + 2) = 0;
        v15 = &`vtable for'data::NewActivityScoreRewardExcelConfig + 2;
        if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 80, v13);
        *(_QWORD *)(v3 + 80) = v15;
        if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 88, v13);
        *(_DWORD *)(v3 + 88) = 0;
        v16 = (((_BYTE)v3 + 92) & 7u) + 3;
        if ( *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 + 92) & 7) + 3) >= *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 92, v16);
        }
        *(_DWORD *)(v3 + 92) = 0;
        if ( *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 96, v16);
        *(_DWORD *)(v3 + 96) = 0;
        if ( *(_BYTE *)(((v3 + 100) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 + 100) & 7) + 3) >= *(_BYTE *)(((v3 + 100) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 100, (((_BYTE)v3 + 100) & 7u) + 3);
        }
        *(_DWORD *)(v3 + 100) = 0;
        if ( row_ptr )
        {
          if ( data::NewActivityScoreRewardExcelConfig::init(
                 (data::NewActivityScoreRewardExcelConfig *const)(v3 + 80),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 592, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 592);
            v19 = std::operator<<<std::char_traits<char>>(v3 + 592, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 88);
            std::ostream::operator<<(v19, *(unsigned int *)(v3 + 88));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 400),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityScoreRewardExcelConfig",
              2929);
            v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 400),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v21 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v20, (const char (*)[2])"<");
            v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, __for_begin);
            v23 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v22,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v24 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v24);
            *(_DWORD *)(v3 + 64) = v24;
            v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v23,
                    (const unsigned int *)(v3 + 64));
            v26 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v25,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 464, 32LL);
            }
            std::ostringstream::str(v3 + 464, v3 + 592);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v26, (const std::string *)(v3 + 464));
            std::string::~string((void *)(v3 + 464));
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 592);
            __asan_poison_stack_memory(v3 + 592, 376LL);
            v18 = 0;
          }
          else
          {
            v27 = std::move<data::NewActivityScoreRewardExcelConfig &>((data::NewActivityScoreRewardExcelConfig *)(v3 + 80));
            v30 = std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::emplace<unsigned int &,data::NewActivityScoreRewardExcelConfig>(
                    &this->new_activity_score_reward_excel_config_map,
                    (unsigned int *)(v3 + 88),
                    v27,
                    v28,
                    v29);
            if ( !v30.second )
            {
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 528) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 528, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 528),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityScoreRewardExcelConfig",
                2934);
              v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 528),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v32 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v31, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v32,
                (const unsigned int *)(v3 + 88));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 528));
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v18 = 0;
            }
            else
            {
              v18 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 336, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 336),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityScoreRewardExcelConfig",
            2922);
          v17 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 336),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v18 = 0;
        }
        data::NewActivityScoreRewardExcelConfig::~NewActivityScoreRewardExcelConfig((data::NewActivityScoreRewardExcelConfig *const)(v3 + 80));
        v33 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v33 = -1800;
        *(_BYTE *)(v33 + 2) = -8;
        if ( v18 != 1 )
        {
          v34 = 0;
          goto LABEL_55;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v34 = 1;
LABEL_55:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v34 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    __asan_poison_stack_memory(v3 + 1040, 32880LL);
    if ( !v10 )
      goto LABEL_59;
  }
  v2 = 0;
LABEL_59:
  for ( i = (char *)(v3 + 176); i != (char *)(v3 + 144); std::string::~string(i) )
    i -= 32;
  if ( v40 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90A8) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4272) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34176LL, v40);
  }
  return v2;
};

// Line 2943: range 000000000EEE634E-000000000EEE7366
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityTimeGroupExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::NewActivityTimeGroupExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::NewActivityTimeGroupExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  _DWORD *v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85F8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85D8h]
  char v37[34256]; // [rsp+50h] [rbp-85D0h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34208LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2958 64 4 9 <unknown> 80 32 10 paths:2944 144 32 9 <unknown> 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 64 "
                        "9 data:2961 624 376 25 debug_message_stream:2969 1072 32880 13 txt_file:2952";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityTimeGroupExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862738] = -219021312;
  v5[536862739] = 62194;
  v5[536862751] = -218959360;
  v5[536862752] = -218959118;
  v5[536862753] = 62194;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 80),
    "/txt/NewActivityTimeGroupData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 80); __for_begin != (std::string *)(v3 + 112); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 144);
    std::string::~string((void *)(v3 + 144));
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1072, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1072), v7) )
    {
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 96 + 79) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityTimeGroupExcelConfig",
        2955);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 208),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 208));
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1072));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1072), *(_DWORD *)(v3 + 48));
        v13 = (_DWORD *)(((v3 + 528) >> 3) + 2147450880);
        *v13 = 0;
        v13[1] = 0;
        data::NewActivityTimeGroupExcelConfig::NewActivityTimeGroupExcelConfig((data::NewActivityTimeGroupExcelConfig *const)(v3 + 528));
        if ( row_ptr )
        {
          if ( data::NewActivityTimeGroupExcelConfig::init(
                 (data::NewActivityTimeGroupExcelConfig *const)(v3 + 528),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 624, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 624);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 624, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 536);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 536));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityTimeGroupExcelConfig",
              2971);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v21);
            *(_DWORD *)(v3 + 64) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 64));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            std::ostringstream::str(v3 + 400, v3 + 624);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 400));
            std::string::~string((void *)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 624);
            __asan_poison_stack_memory(v3 + 624, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::NewActivityTimeGroupExcelConfig &>((data::NewActivityTimeGroupExcelConfig *)(v3 + 528));
            v27 = std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::emplace<unsigned int &,data::NewActivityTimeGroupExcelConfig>(
                    &this->new_activity_time_group_excel_config_map,
                    (unsigned int *)(v3 + 536),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 96 + 79) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityTimeGroupExcelConfig",
                2976);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v28, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 536));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityTimeGroupExcelConfig",
            2964);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::NewActivityTimeGroupExcelConfig::~NewActivityTimeGroupExcelConfig((data::NewActivityTimeGroupExcelConfig *const)(v3 + 528));
        v30 = (_DWORD *)(((v3 + 528) >> 3) + 2147450880);
        *v30 = -117901064;
        v30[1] = -117901064;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    __asan_poison_stack_memory(v3 + 1072, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 112); i != (char *)(v3 + 80); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4276) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34208LL, v37);
  }
  return v2;
};

// Line 2985: range 000000000EEE7368-000000000EEE8785
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityOverlapExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  __int64 v13; // rsi
  __int64 *v14; // rdx
  common::milog::MiLogStream *v15; // rax
  int v16; // r14d
  unsigned __int64 v17; // rax
  std::tuple_element<1,const std::pair<const std::string,short unsigned int> >::type *v18; // rax
  __int64 v19; // rsi
  __int64 v20; // rdx
  std::map<long unsigned int,std::string>::mapped_type *v21; // rdx
  std::vector<std::string>::size_type v22; // rdx
  const char *v23; // rax
  __int64 v24; // r14
  std::map<long unsigned int,std::string>::mapped_type *v25; // rax
  __int64 v26; // rax
  __int64 v27; // r14
  const std::vector<std::string> *p_data_vec; // rax
  std::vector<std::string>::const_reference v29; // rax
  unsigned __int64 v30; // rax
  const char *v31; // rax
  __int64 v32; // r14
  std::vector<std::string>::const_reference v33; // rax
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rdx
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rcx
  __int64 v38; // rsi
  common::milog::MiLogStream *v39; // rax
  common::milog::MiLogStream *v40; // r14
  data::NewActivityOverlapExcelConfig *v41; // rax
  data::NewActivityOverlapExcelConfig *v42; // rdx
  int v43; // edx
  char *j; // r14
  std::string *__for_begin; // [rsp+20h] [rbp-8680h]
  size_t i; // [rsp+28h] [rbp-8678h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8658h]
  std::map<std::string,short unsigned int> *__for_range_0; // [rsp+50h] [rbp-8650h]
  std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> >::reference v51; // [rsp+58h] [rbp-8648h]
  std::tuple_element<0,std::pair<const std::string,short unsigned int> >::type *col_name; // [rsp+60h] [rbp-8640h]
  std::tuple_element<1,const std::pair<const std::string,short unsigned int> >::type *col_id; // [rsp+68h] [rbp-8638h]
  char v54[34352]; // [rsp+70h] [rbp-8630h] BYREF

  v3 = (unsigned __int64)v54;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34304LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "17 48 1 9 <unknown> 64 4 6 r:3000 80 4 9 <unknown> 96 8 16 __for_begin:3015 128 8 14 __for_end:3"
                        "015 160 8 9 <unknown> 192 8 6 i:3019 224 16 9 data:3003 256 32 10 paths:2986 320 32 9 <unknown> "
                        "384 32 9 <unknown> 448 32 9 <unknown> 512 32 9 <unknown> 576 32 9 <unknown> 640 48 20 col_id_nam"
                        "e_map:3014 720 376 25 debug_message_stream:3011 1168 32880 13 txt_file:2994";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityOverlapExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234556924;
  v5[536862723] = -218959360;
  v5[536862724] = -218959360;
  v5[536862725] = -218959360;
  v5[536862726] = -218959360;
  v5[536862727] = -219021312;
  v5[536862729] = -218959118;
  v5[536862731] = -218959118;
  v5[536862733] = -218959118;
  v5[536862735] = -218959118;
  v5[536862737] = -218959118;
  v5[536862739] = -218959118;
  v5[536862741] = -219021312;
  v5[536862742] = 62194;
  v5[536862754] = -218959360;
  v5[536862755] = -218959118;
  v5[536862756] = 62194;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  v5[536863791] = -202116109;
  std::allocator<char>::allocator(v3 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 256),
    "/txt/NewActivityOverlapData.txt",
    (const std::allocator<char> *)(v3 + 48));
  std::allocator<char>::~allocator(v3 + 48);
  *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 256); __for_begin != (std::string *)(v3 + 288); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 320) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 320) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 351) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 351) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 320, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 320), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 320);
    std::string::~string((void *)(v3 + 320));
    *(_DWORD *)(((v3 + 320) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1168, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1168));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1168), v7) )
    {
      *(_DWORD *)(((v3 + 384) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 384) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 415) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 97) & 7) >= *(_BYTE *)(((v3 + 415) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 384, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 384),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityOverlapExcelConfig",
        2997);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 384),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 384));
      *(_DWORD *)(((v3 + 384) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 64) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 64, v7);
      for ( *(_DWORD *)(v3 + 64) = 0; ; ++*(_DWORD *)(v3 + 64) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1168));
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
        if ( v12 <= *(_DWORD *)(v3 + 64) )
          break;
        v13 = *(unsigned int *)(v3 + 64);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1168), v13);
        *(_WORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = 0;
        v14 = &`vtable for'data::NewActivityOverlapExcelConfig + 2;
        if ( *(_BYTE *)(((v3 + 224) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 224, v13);
        *(_QWORD *)(v3 + 224) = v14;
        if ( *(_BYTE *)(((v3 + 232) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 232) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 232, v13);
        *(_DWORD *)(v3 + 232) = 0;
        if ( row_ptr )
        {
          if ( data::NewActivityOverlapExcelConfig::init(
                 (data::NewActivityOverlapExcelConfig *const)(v3 + 224),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 720, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 720);
            if ( *(_BYTE *)(((unsigned __int64)&row_ptr->col_name_map_ptr >> 3) + 0x7FFF8000) )
              __asan_report_load8(&row_ptr->col_name_map_ptr);
            if ( row_ptr->col_name_map_ptr )
            {
              v17 = ((v3 + 640) >> 3) + 2147450880;
              *(_DWORD *)v17 = 0;
              *(_WORD *)(v17 + 4) = 0;
              std::map<unsigned long,std::string>::map((std::map<long unsigned int,std::string> *const)(v3 + 640));
              if ( *(_BYTE *)(((unsigned __int64)&row_ptr->col_name_map_ptr >> 3) + 0x7FFF8000) )
                __asan_report_load8(&row_ptr->col_name_map_ptr);
              __for_range_0 = row_ptr->col_name_map_ptr;
              *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 96, 376LL);
              *(std::map<std::string,short unsigned int>::iterator *)(v3 + 96) = std::map<std::string,unsigned short>::begin(__for_range_0);
              *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 128, 376LL);
              *(std::map<std::string,short unsigned int>::iterator *)(v3 + 128) = std::map<std::string,unsigned short>::end(__for_range_0);
              while ( std::operator!=(
                        (const std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> >::_Self *)(v3 + 96),
                        (const std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> >::_Self *)(v3 + 128)) )
              {
                v51 = std::_Rb_tree_iterator<std::pair<std::string const,unsigned short>>::operator*((const std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> > *const)(v3 + 96));
                col_name = std::get<0ul,std::string const,unsigned short>(v51);
                v18 = (std::tuple_element<1,const std::pair<const std::string,short unsigned int> >::type *)std::get<1ul,std::string const,unsigned short>(v51);
                col_id = v18;
                *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = 0;
                v19 = ((unsigned __int8)v18 & 7u) + 1;
                if ( *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v18 & 7) + 1) >= *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load2(v18);
                }
                v20 = *col_id;
                if ( *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) )
                  __asan_report_store8(v3 + 160, v19);
                *(_QWORD *)(v3 + 160) = v20;
                v21 = std::map<unsigned long,std::string>::operator[](
                        (std::map<long unsigned int,std::string> *const)(v3 + 640),
                        (std::map<long unsigned int,std::string>::key_type *)(v3 + 160));
                std::string::operator=(v21, col_name);
                *(_BYTE *)(((v3 + 160) >> 3) + 0x7FFF8000) = -8;
                std::_Rb_tree_iterator<std::pair<std::string const,unsigned short>>::operator++((std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> > *const)(v3 + 96));
              }
              *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v3 + 128) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 192, v3 + 128);
              for ( *(_QWORD *)(v3 + 192) = 0LL; ; ++*(_QWORD *)(v3 + 192) )
              {
                v22 = std::vector<std::string>::size(&row_ptr->data_vec);
                if ( *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) )
                  __asan_report_load8(v3 + 192);
                if ( v22 <= *(_QWORD *)(v3 + 192) )
                  break;
                if ( *(_QWORD *)(v3 + 192) )
                  v23 = " ";
                else
                  v23 = byte_1A3FEBE0;
                v24 = std::operator<<<std::char_traits<char>>(v3 + 720, v23);
                v25 = std::map<unsigned long,std::string>::operator[](
                        (std::map<long unsigned int,std::string> *const)(v3 + 640),
                        (const std::map<long unsigned int,std::string>::key_type *)(v3 + 192));
                v26 = std::operator<<<char>(v24, v25);
                v27 = std::operator<<<std::char_traits<char>>(v26, &off_1A455AC0);
                p_data_vec = &row_ptr->data_vec;
                if ( *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) )
                  __asan_report_load8(v3 + 192);
                v29 = std::vector<std::string>::operator[](p_data_vec, *(_QWORD *)(v3 + 192));
                std::operator<<<char>(v27, v29);
                if ( *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) )
                  __asan_report_load8(v3 + 192);
              }
              *(_BYTE *)(((v3 + 192) >> 3) + 0x7FFF8000) = -8;
              std::map<unsigned long,std::string>::~map((std::map<long unsigned int,std::string> *const)(v3 + 640));
              v30 = ((v3 + 640) >> 3) + 2147450880;
              *(_DWORD *)v30 = -117901064;
              *(_WORD *)(v30 + 4) = -1800;
            }
            else
            {
              for ( i = 0LL; i < std::vector<std::string>::size(&row_ptr->data_vec); ++i )
              {
                if ( i )
                  v31 = (const char *)&unk_1A455B00;
                else
                  v31 = byte_1A3FEBE0;
                v32 = std::operator<<<std::char_traits<char>>(v3 + 720, v31);
                v33 = std::vector<std::string>::operator[](&row_ptr->data_vec, i);
                std::operator<<<char>(v32, v33);
              }
            }
            *(_DWORD *)(((v3 + 512) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 512) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 543) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 31) & 7) >= *(_BYTE *)(((v3 + 543) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 512, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 512),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityOverlapExcelConfig",
              3031);
            v34 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 512),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v35 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v34, (const char (*)[2])"<");
            v36 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v35, __for_begin);
            v37 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v36,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 64);
            v38 = (unsigned int)(*(_DWORD *)(v3 + 64) + 1);
            if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 80, v38);
            *(_DWORD *)(v3 + 80) = v38;
            v39 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v37,
                    (const unsigned int *)(v3 + 80));
            v40 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v39,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 576) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 576) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 607) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 95) & 7) >= *(_BYTE *)(((v3 + 607) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 576, 32LL);
            }
            std::ostringstream::str(v3 + 576, v3 + 720);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v40, (const std::string *)(v3 + 576));
            std::string::~string((void *)(v3 + 576));
            *(_DWORD *)(((v3 + 576) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 512));
            *(_DWORD *)(((v3 + 512) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 720);
            __asan_poison_stack_memory(v3 + 720, 376LL);
            v16 = 0;
          }
          else
          {
            v41 = std::move<data::NewActivityOverlapExcelConfig &>((data::NewActivityOverlapExcelConfig *)(v3 + 224));
            std::vector<data::NewActivityOverlapExcelConfig>::emplace_back<data::NewActivityOverlapExcelConfig>(
              &this->new_activity_overlap_excel_config_vec,
              v41,
              v42);
            v16 = 1;
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 448) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 448) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 479) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 64 + 31) & 7) >= *(_BYTE *)(((v3 + 479) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 448, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 448),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityOverlapExcelConfig",
            3006);
          v15 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 448),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, (const unsigned int *)(v3 + 64));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 448));
          *(_DWORD *)(((v3 + 448) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v16 = 0;
        }
        data::NewActivityOverlapExcelConfig::~NewActivityOverlapExcelConfig((data::NewActivityOverlapExcelConfig *const)(v3 + 224));
        *(_WORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = -1800;
        if ( v16 != 1 )
        {
          v43 = 0;
          goto LABEL_80;
        }
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
      }
      v43 = 1;
LABEL_80:
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
      v10 = v43 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1168));
    __asan_poison_stack_memory(v3 + 1168, 32880LL);
    if ( !v10 )
      goto LABEL_84;
  }
  v2 = 0;
LABEL_84:
  for ( j = (char *)(v3 + 288); j != (char *)(v3 + 256); std::string::~string(j) )
    j -= 32;
  if ( v54 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8024) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90B8) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862731) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450916 - (((_DWORD)v5 + 2147450924) & 0xFFFFFFF8) + 4252) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34304LL, v54);
  }
  return v2;
};

// Line 3041: range 000000000EEE8786-000000000EEE98C9
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadNewActivityPushTipsConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  __int64 v13; // rsi
  unsigned __int64 v14; // rax
  __int64 *v15; // rdx
  __int64 v16; // rsi
  common::milog::MiLogStream *v17; // rax
  int v18; // r14d
  __int64 v19; // rcx
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rdx
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rcx
  __int64 v24; // rsi
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // r14
  data::NewActivityPushTipsConfig *v27; // rax
  unsigned int *v28; // rcx
  data::NewActivityPushTipsConfig *v29; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false,false>,bool> v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  unsigned __int64 v33; // rax
  int v34; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85D8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85B8h]
  char v40[34224]; // [rsp+50h] [rbp-85B0h] BYREF

  v3 = (unsigned __int64)v40;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34176LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:3056 64 4 9 <unknown> 80 24 9 data:3059 144 32 10 paths:3042 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 32 "
                        "9 <unknown> 592 376 25 debug_message_stream:3067 1040 32880 13 txt_file:3050";
  *(_QWORD *)(v3 + 16) = data::NewActivityExcelConfigMgrBase::loadNewActivityPushTipsConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -218959360;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862737] = -219021312;
  v5[536862738] = 62194;
  v5[536862750] = -218959360;
  v5[536862751] = -218959118;
  v5[536862752] = 62194;
  v5[536863780] = -202116109;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 144),
    "/txt/NewActivityPushTipsData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 144); __for_begin != (std::string *)(v3 + 176); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 208, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 208), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 208);
    std::string::~string((void *)(v3 + 208));
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1040, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1040), v7) )
    {
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 272, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 272),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
        "loadNewActivityPushTipsConfig",
        3053);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 272),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1040));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        v13 = *(unsigned int *)(v3 + 48);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1040), v13);
        v14 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v14 = 0;
        *(_BYTE *)(v14 + 2) = 0;
        v15 = &`vtable for'data::NewActivityPushTipsConfig + 2;
        if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 80, v13);
        *(_QWORD *)(v3 + 80) = v15;
        if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 88, v13);
        *(_DWORD *)(v3 + 88) = 0;
        v16 = (((_BYTE)v3 + 92) & 7u) + 3;
        if ( *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 + 92) & 7) + 3) >= *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 92, v16);
        }
        *(_DWORD *)(v3 + 92) = 0;
        if ( *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 96, v16);
        *(_DWORD *)(v3 + 96) = 0;
        if ( *(_BYTE *)(((v3 + 100) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 + 100) & 7) + 3) >= *(_BYTE *)(((v3 + 100) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 100, (((_BYTE)v3 + 100) & 7u) + 3);
        }
        *(_DWORD *)(v3 + 100) = 0;
        if ( row_ptr )
        {
          if ( data::NewActivityPushTipsConfig::init((data::NewActivityPushTipsConfig *const)(v3 + 80), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 592, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 592);
            v19 = std::operator<<<std::char_traits<char>>(v3 + 592, &unk_1A456C20);
            if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 88);
            std::ostream::operator<<(v19, *(unsigned int *)(v3 + 88));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 400),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
              "loadNewActivityPushTipsConfig",
              3069);
            v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 400),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v21 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v20, (const char (*)[2])"<");
            v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, __for_begin);
            v23 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v22,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v24 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v24);
            *(_DWORD *)(v3 + 64) = v24;
            v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v23,
                    (const unsigned int *)(v3 + 64));
            v26 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v25,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 464, 32LL);
            }
            std::ostringstream::str(v3 + 464, v3 + 592);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v26, (const std::string *)(v3 + 464));
            std::string::~string((void *)(v3 + 464));
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 592);
            __asan_poison_stack_memory(v3 + 592, 376LL);
            v18 = 0;
          }
          else
          {
            v27 = std::move<data::NewActivityPushTipsConfig &>((data::NewActivityPushTipsConfig *)(v3 + 80));
            v30 = std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::emplace<unsigned int &,data::NewActivityPushTipsConfig>(
                    &this->new_activity_push_tips_config_map,
                    (unsigned int *)(v3 + 88),
                    v27,
                    v28,
                    v29);
            if ( !v30.second )
            {
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 528) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 528, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 528),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
                "loadNewActivityPushTipsConfig",
                3074);
              v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 528),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v32 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                      v31,
                      (const char (*)[17])byte_1A456C60);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v32,
                (const unsigned int *)(v3 + 88));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 528));
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v18 = 0;
            }
            else
            {
              v18 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 336, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 336),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
            "loadNewActivityPushTipsConfig",
            3062);
          v17 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 336),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v18 = 0;
        }
        data::NewActivityPushTipsConfig::~NewActivityPushTipsConfig((data::NewActivityPushTipsConfig *const)(v3 + 80));
        v33 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v33 = -1800;
        *(_BYTE *)(v33 + 2) = -8;
        if ( v18 != 1 )
        {
          v34 = 0;
          goto LABEL_55;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v34 = 1;
LABEL_55:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v34 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    __asan_poison_stack_memory(v3 + 1040, 32880LL);
    if ( !v10 )
      goto LABEL_59;
  }
  v2 = 0;
LABEL_59:
  for ( i = (char *)(v3 + 176); i != (char *)(v3 + 144); std::string::~string(i) )
    i -= 32;
  if ( v40 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90A8) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4272) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34176LL, v40);
  }
  return v2;
};

// Line 3083: range 000000000EEE98CA-000000000EEEAC15
int32_t __cdecl data::NewActivityExcelConfigMgrBase::loadConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  common::milog::MiLogStream *v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t result; // eax
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  char v21[1024]; // [rsp+10h] [rbp-400h] BYREF

  v2 = (common::milog::MiLogStream *)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(992LL);
    if ( v3 )
      v2 = (common::milog::MiLogStream *)v3;
  }
  v2->log_ = (common::milog::MiLog *)1102416563;
  v2->ostr_ptr_._M_ptr = (std::__shared_ptr<common::tools::StringStream<common::tools::FixedBuffer<16384> >,(__gnu_cxx::_Lock_policy)2>::element_type *)"15 32 32 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 <unknown> 672 32 9 <unknown> 736 32 9 <unknown> 800 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <unknown>";
  v2->ostr_ptr_._M_refcount._M_pi = (std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2> *)data::NewActivityExcelConfigMgrBase::loadConfig;
  v4 = (_DWORD *)((unsigned __int64)v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862722] = -218959118;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -202116109;
  if ( data::NewActivityExcelConfigMgrBase::loadNewActivityItemLimitExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[1] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[1].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[1].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[1], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 1,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3086);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 1, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
      v5,
      (const char (*)[43])"loadNewActivityItemLimitExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 1);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[3] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[3].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[3].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[3], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 3,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3091);
    v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 3, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      v7,
      (const char (*)[34])"loadNewActivityExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 3);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityScheduleExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[5] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[5].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[5].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[5], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 5,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3096);
    v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 5, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
      v8,
      (const char (*)[42])"loadNewActivityScheduleExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 5);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityCondGroupExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[7] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[7].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[7].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[7], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 7,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3101);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 7, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
      v9,
      (const char (*)[43])"loadNewActivityCondGroupExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 7);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityCondExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[9] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[9].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[9].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[9], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 9,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3106);
    v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 9, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      v10,
      (const char (*)[38])"loadNewActivityCondExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 9);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityDropExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[11] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[11].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[11].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[11], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 11,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3111);
    v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 11,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      v11,
      (const char (*)[38])"loadNewActivityDropExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 11);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityWatcherConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[13] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[13].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[13].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[13], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 13,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3116);
    v12 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 13,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
      v12,
      (const char (*)[36])"loadNewActivityWatcherConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 13);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityEntryConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[15] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[15].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[15].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[15], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 15,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3121);
    v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 15,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      v13,
      (const char (*)[34])"loadNewActivityEntryConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 15);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivitySaleExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[17] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[17].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[17].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[17], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 17,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3126);
    v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 17,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      v14,
      (const char (*)[38])"loadNewActivitySaleExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 17);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityAvatarSelectionExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[19] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[19].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[19].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[19], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 19,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3131);
    v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 19,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
      v15,
      (const char (*)[49])"loadNewActivityAvatarSelectionExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 19);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityScoreLimitExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[21] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[21].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[21].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[21], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 21,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3136);
    v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 21,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
      v16,
      (const char (*)[44])"loadNewActivityScoreLimitExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 21);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityScoreRewardExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[23] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[23].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[23].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[23], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 23,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3141);
    v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 23,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
      v17,
      (const char (*)[45])"loadNewActivityScoreRewardExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 23);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityTimeGroupExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[25] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[25].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[25].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[25], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 25,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3146);
    v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 25,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
      v18,
      (const char (*)[43])"loadNewActivityTimeGroupExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 25);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityOverlapExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[27] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[27].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[27].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[27], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 27,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3151);
    v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 27,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
      v19,
      (const char (*)[41])"loadNewActivityOverlapExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 27);
    result = -1;
  }
  else if ( data::NewActivityExcelConfigMgrBase::loadNewActivityPushTipsConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[29] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[29].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[29].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[29], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 29,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/NewActivityExcelConfig.gen.cpp",
      "loadConfig",
      3156);
    v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 29,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
      v20,
      (const char (*)[37])"loadNewActivityPushTipsConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 29);
    result = -1;
  }
  else
  {
    result = 0;
  }
  if ( v21 == (char *)v2 )
  {
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8010) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8018) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8028) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8030) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8038) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8040) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8048) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8050) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8058) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8060) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8068) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8070) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8078) = 0;
  }
  else
  {
    v2->log_ = (common::milog::MiLog *)1172321806;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8068) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8070) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8078) = -168430091;
  }
  return result;
};

// Line 3163: range 000000000EEEAC16-000000000EEEAC28
int32_t __cdecl data::NewActivityExcelConfigMgrBase::rewriteConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        TxtConfigMgr *txt_config_mgr)
{
  return 0;
};

// Line 3168: range 000000000EEEAC2A-000000000EEEAC3C
int32_t __cdecl data::NewActivityExcelConfigMgrBase::finalConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        TxtConfigMgr *txt_config_mgr)
{
  return 0;
};

// Line 3173: range 000000000EEEAC3E-000000000EEEADF9
data::NewActivityItemLimitExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityItemLimitExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 activity_type)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityItemLimitExcelConfigMap *p_new_activity_item_limit_excel_config_map; // rdx
  data::NewActivityItemLimitExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityItemLimitExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 18 activity_type:3172 64 8 9 iter:3174 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityItemLimitExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = activity_type;
  p_new_activity_item_limit_excel_config_map = &this->new_activity_item_limit_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, activity_type);
  *(std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::find(p_new_activity_item_limit_excel_config_map, (const std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_item_limit_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<data::NewActivityType const,data::NewActivityItemLimitExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<const data::NewActivityType,data::NewActivityItemLimitExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<const data::NewActivityType,data::NewActivityItemLimitExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<data::NewActivityType const,data::NewActivityItemLimitExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<const data::NewActivityType,data::NewActivityItemLimitExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3186: range 000000000EEEADFA-000000000EEEAFB5
const data::NewActivityItemLimitExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityItemLimitExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 activity_type)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityItemLimitExcelConfigMap *p_new_activity_item_limit_excel_config_map; // rdx
  data::NewActivityItemLimitExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityItemLimitExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 18 activity_type:3185 64 8 9 iter:3187 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityItemLimitExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = activity_type;
  p_new_activity_item_limit_excel_config_map = &this->new_activity_item_limit_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, activity_type);
  *(std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::find(p_new_activity_item_limit_excel_config_map, (const std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_item_limit_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<data::NewActivityType,data::NewActivityItemLimitExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<data::NewActivityType const,data::NewActivityItemLimitExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<const data::NewActivityType,data::NewActivityItemLimitExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<const data::NewActivityType,data::NewActivityItemLimitExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<data::NewActivityType const,data::NewActivityItemLimitExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<const data::NewActivityType,data::NewActivityItemLimitExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3199: range 000000000EEEAFB6-000000000EEEB171
data::NewActivityExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 activity_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityExcelConfigMap *p_new_activity_excel_config_map; // rdx
  data::NewActivityExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 16 activity_id:3198 64 8 9 iter:3200 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = activity_id;
  p_new_activity_excel_config_map = &this->new_activity_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, activity_id);
  *(std::unordered_map<unsigned int,data::NewActivityExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityExcelConfig>::find(
                                                                                            p_new_activity_excel_config_map,
                                                                                            (const std::unordered_map<unsigned int,data::NewActivityExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3212: range 000000000EEEB172-000000000EEEB32D
const data::NewActivityExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 activity_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityExcelConfigMap *p_new_activity_excel_config_map; // rdx
  data::NewActivityExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 16 activity_id:3211 64 8 9 iter:3213 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = activity_id;
  p_new_activity_excel_config_map = &this->new_activity_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, activity_id);
  *(std::unordered_map<unsigned int,data::NewActivityExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityExcelConfig>::find(
                                                                                                  p_new_activity_excel_config_map,
                                                                                                  (const std::unordered_map<unsigned int,data::NewActivityExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3225: range 000000000EEEB32E-000000000EEEB4E9
data::NewActivityScheduleExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityScheduleExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 schedule_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityScheduleExcelConfigMap *p_new_activity_schedule_excel_config_map; // rdx
  data::NewActivityScheduleExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityScheduleExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 16 schedule_id:3224 64 8 9 iter:3226 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityScheduleExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = schedule_id;
  p_new_activity_schedule_excel_config_map = &this->new_activity_schedule_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, schedule_id);
  *(std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::find(
                                                                                                    p_new_activity_schedule_excel_config_map,
                                                                                                    (const std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_schedule_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3238: range 000000000EEEB4EA-000000000EEEB6A5
const data::NewActivityScheduleExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityScheduleExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 schedule_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityScheduleExcelConfigMap *p_new_activity_schedule_excel_config_map; // rdx
  data::NewActivityScheduleExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityScheduleExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 16 schedule_id:3237 64 8 9 iter:3239 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityScheduleExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = schedule_id;
  p_new_activity_schedule_excel_config_map = &this->new_activity_schedule_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, schedule_id);
  *(std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::find(p_new_activity_schedule_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_schedule_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityScheduleExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityScheduleExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3251: range 000000000EEEB6A6-000000000EEEB867
data::NewActivityCondGroupExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityCondGroupExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 group_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityCondGroupExcelConfigMap *p_new_activity_cond_group_excel_config_map; // rdx
  data::NewActivityCondGroupExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityCondGroupExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 group_id:3250 64 8 9 iter:3252 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityCondGroupExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = group_id;
  p_new_activity_cond_group_excel_config_map = &this->new_activity_cond_group_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, group_id);
  *(std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::find(
                                                                                                     p_new_activity_cond_group_excel_config_map,
                                                                                                     (const std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_cond_group_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3264: range 000000000EEEB868-000000000EEEBA29
const data::NewActivityCondGroupExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityCondGroupExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 group_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityCondGroupExcelConfigMap *p_new_activity_cond_group_excel_config_map; // rdx
  data::NewActivityCondGroupExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityCondGroupExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 group_id:3263 64 8 9 iter:3265 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityCondGroupExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = group_id;
  p_new_activity_cond_group_excel_config_map = &this->new_activity_cond_group_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, group_id);
  *(std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::find(p_new_activity_cond_group_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_cond_group_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityCondGroupExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityCondGroupExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3277: range 000000000EEEBA2A-000000000EEEBBEB
data::NewActivityCondExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityCondExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 cond_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityCondExcelConfigMap *p_new_activity_cond_excel_config_map; // rdx
  data::NewActivityCondExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityCondExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 12 cond_id:3276 64 8 9 iter:3278 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityCondExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = cond_id;
  p_new_activity_cond_excel_config_map = &this->new_activity_cond_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, cond_id);
  *(std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::find(
                                                                                                p_new_activity_cond_excel_config_map,
                                                                                                (const std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_cond_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3290: range 000000000EEEBBEC-000000000EEEBDAD
const data::NewActivityCondExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityCondExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 cond_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityCondExcelConfigMap *p_new_activity_cond_excel_config_map; // rdx
  data::NewActivityCondExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityCondExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 12 cond_id:3289 64 8 9 iter:3291 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityCondExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = cond_id;
  p_new_activity_cond_excel_config_map = &this->new_activity_cond_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, cond_id);
  *(std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::find(p_new_activity_cond_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_cond_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityCondExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityCondExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3303: range 000000000EEEBDAE-000000000EEEBF6F
data::NewActivityWatcherConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityWatcherConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityWatcherConfigMap *p_new_activity_watcher_config_map; // rdx
  data::NewActivityWatcherConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityWatcherConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3302 64 8 9 iter:3304 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityWatcherConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_watcher_config_map = &this->new_activity_watcher_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::find(
                                                                                              p_new_activity_watcher_config_map,
                                                                                              (const std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_watcher_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3316: range 000000000EEEBF70-000000000EEEC131
const data::NewActivityWatcherConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityWatcherConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityWatcherConfigMap *p_new_activity_watcher_config_map; // rdx
  data::NewActivityWatcherConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityWatcherConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3315 64 8 9 iter:3317 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityWatcherConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_watcher_config_map = &this->new_activity_watcher_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::find(
                                                                                                    p_new_activity_watcher_config_map,
                                                                                                    (const std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_watcher_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityWatcherConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityWatcherConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3329: range 000000000EEEC132-000000000EEEC2F3
data::NewActivityEntryConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityEntryConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityEntryConfigMap *p_new_activity_entry_config_map; // rdx
  data::NewActivityEntryConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityEntryConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3328 64 8 9 iter:3330 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityEntryConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_entry_config_map = &this->new_activity_entry_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityEntryConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityEntryConfig>::find(
                                                                                            p_new_activity_entry_config_map,
                                                                                            (const std::unordered_map<unsigned int,data::NewActivityEntryConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_entry_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityEntryConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityEntryConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityEntryConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityEntryConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityEntryConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityEntryConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityEntryConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3342: range 000000000EEEC2F4-000000000EEEC4B5
const data::NewActivityEntryConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityEntryConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityEntryConfigMap *p_new_activity_entry_config_map; // rdx
  data::NewActivityEntryConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityEntryConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3341 64 8 9 iter:3343 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityEntryConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_entry_config_map = &this->new_activity_entry_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityEntryConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityEntryConfig>::find(
                                                                                                  p_new_activity_entry_config_map,
                                                                                                  (const std::unordered_map<unsigned int,data::NewActivityEntryConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_entry_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityEntryConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityEntryConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityEntryConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityEntryConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityEntryConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityEntryConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityEntryConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3355: range 000000000EEEC4B6-000000000EEEC677
data::NewActivitySaleExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivitySaleExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivitySaleExcelConfigMap *p_new_activity_sale_excel_config_map; // rdx
  data::NewActivitySaleExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivitySaleExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3354 64 8 9 iter:3356 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivitySaleExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_sale_excel_config_map = &this->new_activity_sale_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::find(
                                                                                                p_new_activity_sale_excel_config_map,
                                                                                                (const std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_sale_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3368: range 000000000EEEC678-000000000EEEC839
const data::NewActivitySaleExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivitySaleExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivitySaleExcelConfigMap *p_new_activity_sale_excel_config_map; // rdx
  data::NewActivitySaleExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivitySaleExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3367 64 8 9 iter:3369 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivitySaleExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_sale_excel_config_map = &this->new_activity_sale_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::find(p_new_activity_sale_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_sale_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivitySaleExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivitySaleExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3381: range 000000000EEEC83A-000000000EEEC9FB
data::NewActivityAvatarSelectionExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityAvatarSelectionExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 schedule_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityAvatarSelectionExcelConfigMap *p_new_activity_avatar_selection_excel_config_map; // rdx
  data::NewActivityAvatarSelectionExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityAvatarSelectionExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 16 schedule_id:3380 64 8 9 iter:3382 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityAvatarSelectionExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = schedule_id;
  p_new_activity_avatar_selection_excel_config_map = &this->new_activity_avatar_selection_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, schedule_id);
  *(std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::find(p_new_activity_avatar_selection_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_avatar_selection_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3394: range 000000000EEEC9FC-000000000EEECBBD
const data::NewActivityAvatarSelectionExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityAvatarSelectionExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 schedule_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityAvatarSelectionExcelConfigMap *p_new_activity_avatar_selection_excel_config_map; // rdx
  data::NewActivityAvatarSelectionExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityAvatarSelectionExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 16 schedule_id:3393 64 8 9 iter:3395 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityAvatarSelectionExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = schedule_id;
  p_new_activity_avatar_selection_excel_config_map = &this->new_activity_avatar_selection_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, schedule_id);
  *(std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::find(p_new_activity_avatar_selection_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_avatar_selection_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityAvatarSelectionExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityAvatarSelectionExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3407: range 000000000EEECBBE-000000000EEECD7F
data::NewActivityScoreLimitExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityScoreLimitExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityScoreLimitExcelConfigMap *p_new_activity_score_limit_excel_config_map; // rdx
  data::NewActivityScoreLimitExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityScoreLimitExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3406 64 8 9 iter:3408 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityScoreLimitExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_score_limit_excel_config_map = &this->new_activity_score_limit_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::find(p_new_activity_score_limit_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_score_limit_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3420: range 000000000EEECD80-000000000EEECF41
const data::NewActivityScoreLimitExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityScoreLimitExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityScoreLimitExcelConfigMap *p_new_activity_score_limit_excel_config_map; // rdx
  data::NewActivityScoreLimitExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityScoreLimitExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3419 64 8 9 iter:3421 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityScoreLimitExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_score_limit_excel_config_map = &this->new_activity_score_limit_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::find(p_new_activity_score_limit_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_score_limit_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityScoreLimitExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityScoreLimitExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3433: range 000000000EEECF42-000000000EEED103
data::NewActivityScoreRewardExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityScoreRewardExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityScoreRewardExcelConfigMap *p_new_activity_score_reward_excel_config_map; // rdx
  data::NewActivityScoreRewardExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityScoreRewardExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3432 64 8 9 iter:3434 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityScoreRewardExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_score_reward_excel_config_map = &this->new_activity_score_reward_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::find(p_new_activity_score_reward_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_score_reward_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3446: range 000000000EEED104-000000000EEED2C5
const data::NewActivityScoreRewardExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityScoreRewardExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityScoreRewardExcelConfigMap *p_new_activity_score_reward_excel_config_map; // rdx
  data::NewActivityScoreRewardExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityScoreRewardExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3445 64 8 9 iter:3447 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityScoreRewardExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_score_reward_excel_config_map = &this->new_activity_score_reward_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::find(p_new_activity_score_reward_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_score_reward_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityScoreRewardExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityScoreRewardExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3459: range 000000000EEED2C6-000000000EEED487
data::NewActivityTimeGroupExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityTimeGroupExcelConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityTimeGroupExcelConfigMap *p_new_activity_time_group_excel_config_map; // rdx
  data::NewActivityTimeGroupExcelConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityTimeGroupExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3458 64 8 9 iter:3460 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityTimeGroupExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_time_group_excel_config_map = &this->new_activity_time_group_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::find(
                                                                                                     p_new_activity_time_group_excel_config_map,
                                                                                                     (const std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_time_group_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3472: range 000000000EEED488-000000000EEED649
const data::NewActivityTimeGroupExcelConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityTimeGroupExcelConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityTimeGroupExcelConfigMap *p_new_activity_time_group_excel_config_map; // rdx
  data::NewActivityTimeGroupExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityTimeGroupExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3471 64 8 9 iter:3473 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityTimeGroupExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_new_activity_time_group_excel_config_map = &this->new_activity_time_group_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::find(p_new_activity_time_group_excel_config_map, (const std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_time_group_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityTimeGroupExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityTimeGroupExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3485: range 000000000EEED64A-000000000EEED80B
data::NewActivityPushTipsConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityPushTipsConfig(
        data::NewActivityExcelConfigMgrBase *const this,
        __int64 push_tips_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityPushTipsConfigMap *p_new_activity_push_tips_config_map; // rdx
  data::NewActivityPushTipsConfigMap *v6; // rdx
  bool v7; // al
  data::NewActivityPushTipsConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 17 push_tips_id:3484 64 8 9 iter:3486 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityPushTipsConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = push_tips_id;
  p_new_activity_push_tips_config_map = &this->new_activity_push_tips_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, push_tips_id);
  *(std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::find(
                                                                                               p_new_activity_push_tips_config_map,
                                                                                               (const std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_push_tips_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3498: range 000000000EEED80C-000000000EEED9CD
const data::NewActivityPushTipsConfig *__fastcall data::NewActivityExcelConfigMgrBase::findNewActivityPushTipsConfig(
        const data::NewActivityExcelConfigMgrBase *const this,
        __int64 push_tips_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::NewActivityPushTipsConfigMap *p_new_activity_push_tips_config_map; // rdx
  data::NewActivityPushTipsConfigMap *v6; // rdx
  bool v7; // al
  const data::NewActivityPushTipsConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 17 push_tips_id:3497 64 8 9 iter:3499 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::NewActivityExcelConfigMgrBase::findNewActivityPushTipsConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = push_tips_id;
  p_new_activity_push_tips_config_map = &this->new_activity_push_tips_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, push_tips_id);
  *(std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::find(
                                                                                                     p_new_activity_push_tips_config_map,
                                                                                                     (const std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::key_type *)(v2 + 48));
  v6 = &this->new_activity_push_tips_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::NewActivityPushTipsConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::NewActivityPushTipsConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};
