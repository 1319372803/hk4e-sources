// File: /data/jenkins/jenkins_hk4e/workspace/hk4e_3.4_dev/hk4e_data/src/txt_data_auto/QuestExcelConfig.gen.cpp

// Line 12: range 000000000EF421DA-000000000EF4254D
const char *__fastcall data::enumValToStr(data::QuestSpecialShowType e, __int64 a2)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // al
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdi
  int v8; // ecx
  char v9; // al
  const char *result; // rax
  std::_Rb_tree_const_iterator<std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > >::pointer v11; // rax
  const std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >> *map; // [rsp+18h] [rbp-E8h]
  char v13[224]; // [rsp+20h] [rbp-E0h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 9 <unknown> 48 4 4 e:11 64 8 7 iter:14 96 8 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumValToStr;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862725] = -202116109;
  *(_DWORD *)(v2 + 48) = e;
  map = data::getQuestSpecialShowTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, a2);
  *(std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::QuestSpecialShowType,std::pair<std::string,std::string>>::find(map, (const std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::QuestSpecialShowType,std::pair<std::string,std::string>>::end(map);
  v5 = std::operator==(
         (const std::_Rb_tree_const_iterator<std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
         (const std::_Rb_tree_const_iterator<std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "enumValToStr",
      17);
    v6 = "invalid e:";
    v7 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[11])"invalid e:");
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = 4;
    v8 = *(_DWORD *)(v2 + 48);
    v9 = *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000);
    if ( v9 != 0 && v9 <= 3 )
    {
      v7 = (common::milog::MiLogStream *)(v2 + 32);
      LOBYTE(v6) = v9 != 0;
      __asan_report_store4(v2 + 32, v6);
    }
    *(_DWORD *)(v2 + 32) = v8;
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 32));
    *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = "INVALID_QuestSpecialShowType";
  }
  else
  {
    v11 = std::_Rb_tree_const_iterator<std::pair<data::QuestSpecialShowType const,std::pair<std::string,std::string>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > > *const)(v2 + 64));
    result = (const char *)std::string::c_str(&v11->second.second);
  }
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 24: range 000000000EF4254E-000000000EF42B06
__int64 __fastcall data::enumNameToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  const char *v6; // rsi
  char *v7; // rsi
  bool v8; // al
  common::milog::MiLogStream *v9; // rax
  std::__detail::_Node_const_iterator<std::pair<const std::string,data::QuestSpecialShowType>,false,true>::pointer v10; // rax
  data::QuestSpecialShowType second; // ecx
  char v12; // dl
  const std::unordered_map<std::string,data::QuestSpecialShowType> *m; // [rsp+18h] [rbp-188h]
  char v15[384]; // [rsp+20h] [rbp-180h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "7 48 1 9 <unknown> 64 8 5 it:33 96 8 9 <unknown> 128 8 4 s:23 160 32 9 <unknown> 224 32 9 <unkno"
                        "wn> 288 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumNameToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -202116109;
  *(_QWORD *)(v2 + 128) = s;
  if ( *(_QWORD *)(v2 + 128) )
  {
    m = data::getQuestSpecialShowTypeNameMap[abi:cxx11]();
    std::allocator<char>::allocator(v2 + 48);
    v6 = *(const char **)(v2 + 128);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      v6,
      (const std::allocator<char> *)(v2 + 48));
    if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 64, v6);
    *(std::unordered_map<std::string,data::QuestSpecialShowType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::QuestSpecialShowType>::find(
                                                                                                 m,
                                                                                                 (const std::unordered_map<std::string,data::QuestSpecialShowType>::key_type *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 96, v2 + 224);
    *(std::unordered_map<std::string,data::QuestSpecialShowType>::const_iterator *)(v2 + 96) = std::unordered_map<std::string,data::QuestSpecialShowType>::end(m);
    v7 = (char *)(v2 + 96);
    v8 = std::__detail::operator==<std::pair<std::string const,data::QuestSpecialShowType>,true>(
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::QuestSpecialShowType>,true> *)(v2 + 64),
           (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::QuestSpecialShowType>,true> *)(v2 + 96));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "enumNameToVal",
        36);
      v9 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v9, (const char *const *)(v2 + 128));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v10 = std::__detail::_Node_const_iterator<std::pair<std::string const,data::QuestSpecialShowType>,false,true>::operator->((const std::__detail::_Node_const_iterator<std::pair<const std::string,data::QuestSpecialShowType>,false,true> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v10->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v10->second);
      }
      second = v10->second;
      v12 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v12 != 0 && (char)((e & 7) + 3) >= v12 )
      {
        LOBYTE(v7) = v12 != 0;
        __asan_report_store4(e, v7);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "enumNameToVal",
      27);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 160),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = 0xFFFFFFFFLL;
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 45: range 000000000EF42B07-000000000EF434D0
__int64 __fastcall data::enumStrToVal(const char *s, unsigned __int64 e)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  std::pair<const std::string,data::QuestSpecialShowType> *i; // r14
  unsigned __int64 v7; // rax
  const char *v8; // rsi
  char *v9; // rsi
  bool v10; // al
  common::milog::MiLogStream *v11; // rax
  std::__detail::_Node_iterator<std::pair<const std::string,data::QuestSpecialShowType>,false,true>::pointer v12; // rax
  data::QuestSpecialShowType second; // ecx
  char v14; // dl
  char v16[592]; // [rsp+20h] [rbp-250h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(544LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "13 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 4 9 <unknown> 128 4 9"
                        " <unknown> 144 8 5 it:58 176 8 9 <unknown> 208 8 4 s:44 240 32 9 <unknown> 304 32 9 <unknown> 36"
                        "8 32 9 <unknown> 432 80 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::enumStrToVal;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234556927;
  v4[536862724] = 61956;
  v4[536862724] = -234881024;
  v4[536862725] = 62194;
  v4[536862725] = -234881024;
  v4[536862726] = 62194;
  v4[536862726] = -234881024;
  v4[536862727] = 62194;
  v4[536862728] = -219021312;
  v4[536862729] = 62194;
  v4[536862730] = -219021312;
  v4[536862731] = 62194;
  v4[536862732] = -219021312;
  v4[536862733] = 62194;
  v4[536862736] = -202116109;
  *(_QWORD *)(v2 + 208) = s;
  if ( *(_QWORD *)(v2 + 208) )
  {
    if ( !(_BYTE)`guard variable for'data::enumStrToVal(char const*,data::QuestSpecialShowType &)::m
      && __cxa_guard_acquire(&`guard variable for'data::enumStrToVal(char const*,data::QuestSpecialShowType &)::m) )
    {
      if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 112, e);
      *(_DWORD *)(v2 + 112) = 1;
      std::pair<std::string const,data::QuestSpecialShowType>::pair<char const(&)[13],data::QuestSpecialShowType,true>(
        (std::pair<const std::string,data::QuestSpecialShowType> *const)(v2 + 432),
        (const char (*)[13])byte_1A468A00,
        (data::QuestSpecialShowType *)(v2 + 112));
      if ( *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) <= 3 )
        __asan_report_store4(v2 + 128, byte_1A468A00);
      *(_DWORD *)(v2 + 128) = 2;
      std::pair<std::string const,data::QuestSpecialShowType>::pair<char const(&)[25],data::QuestSpecialShowType,true>(
        (std::pair<const std::string,data::QuestSpecialShowType> *const)(v2 + 472),
        (const char (*)[25])byte_1A441F40,
        (data::QuestSpecialShowType *)(v2 + 128));
      std::allocator<std::pair<std::string const,data::QuestSpecialShowType>>::allocator((std::allocator<std::pair<const std::string,data::QuestSpecialShowType> > *const)(v2 + 80));
      std::unordered_map<std::string,data::QuestSpecialShowType>::unordered_map(
        &data::enumStrToVal(char const*,data::QuestSpecialShowType &)::m,
        (std::initializer_list<std::pair<const std::string,data::QuestSpecialShowType> >)__PAIR128__(2LL, v2 + 432),
        0LL,
        (const std::unordered_map<std::string,data::QuestSpecialShowType>::hasher *)(v2 + 48),
        (const std::unordered_map<std::string,data::QuestSpecialShowType>::key_equal *)(v2 + 64),
        (const std::unordered_map<std::string,data::QuestSpecialShowType>::allocator_type *)(v2 + 80));
      __cxa_guard_release(&`guard variable for'data::enumStrToVal(char const*,data::QuestSpecialShowType &)::m);
      __cxa_atexit(
        (void (__fastcall *)(void *))std::unordered_map<std::string,data::QuestSpecialShowType>::~unordered_map,
        &data::enumStrToVal(char const*,data::QuestSpecialShowType &)::m,
        &_dso_handle);
      std::allocator<std::pair<std::string const,data::QuestSpecialShowType>>::~allocator((std::allocator<std::pair<const std::string,data::QuestSpecialShowType> > *const)(v2 + 80));
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
      for ( i = (std::pair<const std::string,data::QuestSpecialShowType> *)(v2 + 512);
            i != (std::pair<const std::string,data::QuestSpecialShowType> *)(v2 + 432);
            std::pair<std::string const,data::QuestSpecialShowType>::~pair(i) )
      {
        --i;
      }
      v7 = ((v2 + 432) >> 3) + 2147450880;
      *(_DWORD *)v7 = -117901064;
      *(_DWORD *)(v7 + 4) = -117901064;
      *(_WORD *)(v7 + 8) = -1800;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
    }
    *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((v2 + 304) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    v8 = *(const char **)(v2 + 208);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 304),
      v8,
      (const std::allocator<char> *)(v2 + 96));
    if ( *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 144, v8);
    *(std::unordered_map<std::string,data::QuestSpecialShowType>::iterator *)(v2 + 144) = std::unordered_map<std::string,data::QuestSpecialShowType>::find(
                                                                                            &data::enumStrToVal(char const*,data::QuestSpecialShowType &)::m,
                                                                                            (const std::unordered_map<std::string,data::QuestSpecialShowType>::key_type *)(v2 + 304));
    std::string::~string((void *)(v2 + 304));
    *(_DWORD *)(((v2 + 304) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 0;
    if ( *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) )
      __asan_report_store8(v2 + 176, v2 + 304);
    *(std::unordered_map<std::string,data::QuestSpecialShowType>::iterator *)(v2 + 176) = std::unordered_map<std::string,data::QuestSpecialShowType>::end(&data::enumStrToVal(char const*,data::QuestSpecialShowType &)::m);
    v9 = (char *)(v2 + 176);
    v10 = std::__detail::operator==<std::pair<std::string const,data::QuestSpecialShowType>,true>(
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::QuestSpecialShowType>,true> *)(v2 + 144),
            (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::QuestSpecialShowType>,true> *)(v2 + 176));
    *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
    if ( v10 )
    {
      *(_DWORD *)(((v2 + 368) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 368) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 399) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 113) & 7) >= *(_BYTE *)(((v2 + 399) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 368, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 368),
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "enumStrToVal",
        61);
      v11 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              (common::milog::MiLogStream *const)(v2 + 368),
              (const char (*)[27])"unrecognized enum string: ");
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)(v2 + 208));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 368));
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v12 = std::__detail::_Node_iterator<std::pair<std::string const,data::QuestSpecialShowType>,false,true>::operator->((const std::__detail::_Node_iterator<std::pair<const std::string,data::QuestSpecialShowType>,false,true> *const)(v2 + 144));
      if ( *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v12->second >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&v12->second);
      }
      second = v12->second;
      v14 = *(_BYTE *)((e >> 3) + 0x7FFF8000);
      if ( v14 != 0 && (char)((e & 7) + 3) >= v14 )
      {
        LOBYTE(v9) = v14 != 0;
        __asan_report_store4(e, v9);
      }
      *(_DWORD *)e = second;
      result = 0LL;
    }
  }
  else
  {
    if ( *(char *)(((v2 + 240) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 271) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 16 + 31) & 7) >= *(_BYTE *)(((v2 + 271) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 240, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 240),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "enumStrToVal",
      48);
    common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
      (common::milog::MiLogStream *const)(v2 + 240),
      (const char (*)[14])"s is nullptr!");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 240));
    result = 0xFFFFFFFFLL;
  }
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = -168430091;
  }
  return result;
};

// Line 70: range 000000000EF434D1-000000000EF434E7
const char *__cdecl data::getDescription(data::QuestSpecialShowType e)
{
  __int64 v1; // rsi

  return data::enumValToStr(e, v1);
};

// Line 75: range 000000000EF434E8-000000000EF4369D
bool __cdecl data::isValidQuestSpecialShowType(uint32_t n)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  const std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >> *v5; // rcx
  const std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >> *v6; // rcx
  bool result; // al
  char v8[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 4 e:76 64 8 9 <unknown> 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidQuestSpecialShowType;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  if ( *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) <= 3 )
    __asan_report_store4(v2 + 48, v1);
  *(_DWORD *)(v2 + 48) = n;
  v5 = data::getQuestSpecialShowTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v1);
  *(std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 96) = std::map<data::QuestSpecialShowType,std::pair<std::string,std::string>>::end(v5);
  v6 = data::getQuestSpecialShowTypeEnumMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >>::const_iterator *)(v2 + 64) = std::map<data::QuestSpecialShowType,std::pair<std::string,std::string>>::find(v6, (const std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >>::key_type *)(v2 + 48));
  result = std::operator!=(
             (const std::_Rb_tree_const_iterator<std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > >::_Self *)(v2 + 64),
             (const std::_Rb_tree_const_iterator<std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > >::_Self *)(v2 + 96));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 81: range 000000000EF4369E-000000000EF437FF
bool __cdecl data::isValidQuestSpecialShowTypeName(const std::string *name)
{
  __int64 v1; // rsi
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  const std::unordered_map<std::string,data::QuestSpecialShowType> *v5; // rcx
  const std::unordered_map<std::string,data::QuestSpecialShowType> *v6; // rcx
  bool result; // al
  char v8[128]; // [rsp+10h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 9 <unknown> 64 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::isValidQuestSpecialShowTypeName;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202116352;
  v5 = data::getQuestSpecialShowTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, v1);
  *(std::unordered_map<std::string,data::QuestSpecialShowType>::const_iterator *)(v2 + 64) = std::unordered_map<std::string,data::QuestSpecialShowType>::end(v5);
  v6 = data::getQuestSpecialShowTypeNameMap[abi:cxx11]();
  if ( *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 32, v1);
  *(std::unordered_map<std::string,data::QuestSpecialShowType>::const_iterator *)(v2 + 32) = std::unordered_map<std::string,data::QuestSpecialShowType>::find(
                                                                                               v6,
                                                                                               name);
  result = std::__detail::operator!=<std::pair<std::string const,data::QuestSpecialShowType>,true>(
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::QuestSpecialShowType>,true> *)(v2 + 32),
             (const std::__detail::_Node_iterator_base<std::pair<const std::string,data::QuestSpecialShowType>,true> *)(v2 + 64));
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 86: range 000000000EF43800-000000000EF43CC2
const std::unordered_map<std::string,data::QuestSpecialShowType> *__cdecl data::getQuestSpecialShowTypeNameMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const std::string,data::QuestSpecialShowType> *i; // r14
  const std::unordered_map<std::string,data::QuestSpecialShowType> *result; // rax
  char v6[336]; // [rsp+10h] [rbp-150h] BYREF

  v1 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_3(288LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "7 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9 <"
                        "unknown> 128 120 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getQuestSpecialShowTypeNameMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753535;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862727] = -218103808;
  v3[536862728] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getQuestSpecialShowTypeNameMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getQuestSpecialShowTypeNameMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string const,data::QuestSpecialShowType>::pair<char const(&)[18],data::QuestSpecialShowType,true>(
      (std::pair<const std::string,data::QuestSpecialShowType> *const)(v1 + 128),
      (const char (*)[18])"SPECIAL_SHOW_NONE",
      (data::QuestSpecialShowType *)(v1 + 80));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, "SPECIAL_SHOW_NONE");
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string const,data::QuestSpecialShowType>::pair<char const(&)[20],data::QuestSpecialShowType,true>(
      (std::pair<const std::string,data::QuestSpecialShowType> *const)(v1 + 168),
      (const char (*)[20])"SPECIAL_SHOW_FINISH",
      (data::QuestSpecialShowType *)(v1 + 96));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, "SPECIAL_SHOW_FINISH");
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string const,data::QuestSpecialShowType>::pair<char const(&)[35],data::QuestSpecialShowType,true>(
      (std::pair<const std::string,data::QuestSpecialShowType> *const)(v1 + 208),
      (const char (*)[35])"SPECIAL_SHOW_GLOBAL_VALUE_EQUAL_TO",
      (data::QuestSpecialShowType *)(v1 + 112));
    std::allocator<std::pair<std::string const,data::QuestSpecialShowType>>::allocator((std::allocator<std::pair<const std::string,data::QuestSpecialShowType> > *const)(v1 + 64));
    std::unordered_map<std::string,data::QuestSpecialShowType>::unordered_map(
      &data::getQuestSpecialShowTypeNameMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const std::string,data::QuestSpecialShowType> >)__PAIR128__(3LL, v1 + 128),
      0LL,
      (const std::unordered_map<std::string,data::QuestSpecialShowType>::hasher *)(v1 + 32),
      (const std::unordered_map<std::string,data::QuestSpecialShowType>::key_equal *)(v1 + 48),
      (const std::unordered_map<std::string,data::QuestSpecialShowType>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getQuestSpecialShowTypeNameMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::unordered_map<std::string,data::QuestSpecialShowType>::~unordered_map,
      &data::getQuestSpecialShowTypeNameMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<std::string const,data::QuestSpecialShowType>>::~allocator((std::allocator<std::pair<const std::string,data::QuestSpecialShowType> > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 32) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const std::string,data::QuestSpecialShowType> *)(v1 + 248);
          i != (std::pair<const std::string,data::QuestSpecialShowType> *)(v1 + 128);
          std::pair<std::string const,data::QuestSpecialShowType>::~pair(i) )
    {
      --i;
    }
  }
  result = &data::getQuestSpecialShowTypeNameMap[abi:cxx11](void)::m;
  if ( v6 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8020) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8020) = -168430091;
  }
  return result;
};

// Line 97: range 000000000EF43CC3-000000000EF443C1
const std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >> *__cdecl data::getQuestSpecialShowTypeEnumMap[abi:cxx11]()
{
  __int64 v0; // rsi
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > *i; // r14
  unsigned __int64 v5; // rax
  _DWORD *v6; // rax
  _DWORD *v7; // rax
  char v9[752]; // [rsp+10h] [rbp-2F0h] BYREF

  v1 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_4(704LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "9 48 1 9 <unknown> 64 1 9 <unknown> 80 4 9 <unknown> 96 4 9 <unknown> 112 4 9 <unknown> 128 64 9"
                        " <unknown> 224 64 9 <unknown> 320 64 9 <unknown> 416 216 9 <unknown>";
  *(_QWORD *)(v1 + 16) = data::getQuestSpecialShowTypeEnumMap[abi:cxx11];
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234753551;
  v3[536862722] = -234556927;
  v3[536862723] = -234556924;
  v3[536862726] = -218959118;
  v3[536862729] = -218959118;
  v3[536862732] = -218959118;
  v3[536862739] = -218103808;
  v3[536862740] = -202116109;
  v3[536862741] = -202116109;
  if ( !(_BYTE)`guard variable for'data::getQuestSpecialShowTypeEnumMap[abi:cxx11](void)::m
    && __cxa_guard_acquire(&`guard variable for'data::getQuestSpecialShowTypeEnumMap[abi:cxx11](void)::m) )
  {
    if ( *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 80) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 80, v0);
    *(_DWORD *)(v1 + 80) = 0;
    std::pair<std::string,std::string>::pair<char const(&)[1],char const(&)[18],true>(
      (std::pair<std::string,std::string > *const)(v1 + 128),
      (const char (*)[1])byte_1A3FEBE0,
      (const char (*)[18])"SPECIAL_SHOW_NONE");
    std::pair<data::QuestSpecialShowType const,std::pair<std::string,std::string>>::pair<data::QuestSpecialShowType,true>(
      (std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > *const)(v1 + 416),
      (data::QuestSpecialShowType *)(v1 + 80),
      (const std::pair<std::string,std::string > *)(v1 + 128));
    if ( *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 96, v1 + 80);
    *(_DWORD *)(v1 + 96) = 1;
    std::pair<std::string,std::string>::pair<char const(&)[13],char const(&)[20],true>(
      (std::pair<std::string,std::string > *const)(v1 + 224),
      (const char (*)[13])byte_1A468A00,
      (const char (*)[20])"SPECIAL_SHOW_FINISH");
    std::pair<data::QuestSpecialShowType const,std::pair<std::string,std::string>>::pair<data::QuestSpecialShowType,true>(
      (std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > *const)(v1 + 488),
      (data::QuestSpecialShowType *)(v1 + 96),
      (const std::pair<std::string,std::string > *)(v1 + 224));
    if ( *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) <= 3 )
      __asan_report_store4(v1 + 112, v1 + 96);
    *(_DWORD *)(v1 + 112) = 2;
    std::pair<std::string,std::string>::pair<char const(&)[25],char const(&)[35],true>(
      (std::pair<std::string,std::string > *const)(v1 + 320),
      (const char (*)[25])byte_1A441F40,
      (const char (*)[35])"SPECIAL_SHOW_GLOBAL_VALUE_EQUAL_TO");
    std::pair<data::QuestSpecialShowType const,std::pair<std::string,std::string>>::pair<data::QuestSpecialShowType,true>(
      (std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > *const)(v1 + 560),
      (data::QuestSpecialShowType *)(v1 + 112),
      (const std::pair<std::string,std::string > *)(v1 + 320));
    std::allocator<std::pair<data::QuestSpecialShowType const,std::pair<std::string,std::string>>>::allocator((std::allocator<std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    std::map<data::QuestSpecialShowType,std::pair<std::string,std::string>>::map(
      &data::getQuestSpecialShowTypeEnumMap[abi:cxx11](void)::m,
      (std::initializer_list<std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > >)__PAIR128__(3LL, v1 + 416),
      (const std::less<data::QuestSpecialShowType> *)(v1 + 48),
      (const std::map<data::QuestSpecialShowType,std::pair<std::string,std::string >>::allocator_type *)(v1 + 64));
    __cxa_guard_release(&`guard variable for'data::getQuestSpecialShowTypeEnumMap[abi:cxx11](void)::m);
    __cxa_atexit(
      (void (__fastcall *)(void *))std::map<data::QuestSpecialShowType,std::pair<std::string,std::string>>::~map,
      &data::getQuestSpecialShowTypeEnumMap[abi:cxx11](void)::m,
      &_dso_handle);
    std::allocator<std::pair<data::QuestSpecialShowType const,std::pair<std::string,std::string>>>::~allocator((std::allocator<std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > > *const)(v1 + 64));
    *(_BYTE *)(((v1 + 64) >> 3) + 0x7FFF8000) = -8;
    *(_BYTE *)(((v1 + 48) >> 3) + 0x7FFF8000) = -8;
    for ( i = (std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > *)(v1 + 632);
          i != (std::pair<const data::QuestSpecialShowType,std::pair<std::string,std::string > > *)(v1 + 416);
          std::pair<data::QuestSpecialShowType const,std::pair<std::string,std::string>>::~pair(i) )
    {
      --i;
    }
    v5 = ((v1 + 416) >> 3) + 2147450880;
    *(_DWORD *)v5 = -117901064;
    *(_DWORD *)(v5 + 4) = -117901064;
    *(_DWORD *)(v5 + 8) = -117901064;
    *(_DWORD *)(v5 + 12) = -117901064;
    *(_DWORD *)(v5 + 16) = -117901064;
    *(_DWORD *)(v5 + 20) = -117901064;
    *(_WORD *)(v5 + 24) = -1800;
    *(_BYTE *)(v5 + 26) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 320));
    v6 = (_DWORD *)(((v1 + 320) >> 3) + 2147450880);
    *v6 = -117901064;
    v6[1] = -117901064;
    *(_BYTE *)(((v1 + 112) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 224));
    v7 = (_DWORD *)(((v1 + 224) >> 3) + 2147450880);
    *v7 = -117901064;
    v7[1] = -117901064;
    *(_BYTE *)(((v1 + 96) >> 3) + 0x7FFF8000) = -8;
    std::pair<std::string,std::string>::~pair((std::pair<std::string,std::string > *const)(v1 + 128));
  }
  if ( v9 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8050) = 0LL;
    memset(
      (void *)((unsigned __int64)(v3 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v3 + 2147450880 - (((_DWORD)v3 + 2147450888) & 0xFFFFFFF8) + 88) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return &data::getQuestSpecialShowTypeEnumMap[abi:cxx11](void)::m;
};

// Line 109: range 000000000EF443C2-000000000EF44C02
int32_t __cdecl data::QuestCond::init(data::QuestCond *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  int *v9; // r14
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  uint32_t array_count; // [rsp+18h] [rbp-318h]
  uint32_t i; // [rsp+1Ch] [rbp-314h]
  char v15[784]; // [rsp+20h] [rbp-310h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(736LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "9 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 256 12 col_name:110";
  *(_QWORD *)(v2 + 16) = data::QuestCond::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862741] = -202116109;
  v4[536862742] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::QuestCondType>(row, (const std::string *)(v2 + 96), &this->type) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      114);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
    goto LABEL_18;
  }
  std::vector<int>::resize(&this->param, 5uLL);
  array_count = 0;
  for ( i = 0; ; ++i )
  {
    if ( i > 4 )
    {
      std::vector<int>::resize(&this->param, array_count);
      result = 0;
      goto LABEL_18;
    }
    snprintf((char *)(v2 + 416), 0x100uLL, &byte_1A4539E0, i + 1);
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      (const char *)(v2 + 416),
      (const std::allocator<char> *)(v2 + 64));
    v8 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( !v8 )
      break;
LABEL_16:
    ;
  }
  v9 = std::vector<int>::operator[](&this->param, i);
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 288),
    (const char *)(v2 + 416),
    (const std::allocator<char> *)(v2 + 80));
  LOBYTE(v9) = common::tools::TxtFile::Row::assignToNum<int>(row, (const std::string *)(v2 + 288), v9) != 0;
  std::string::~string((void *)(v2 + 288));
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( !(_BYTE)v9 )
  {
    array_count = i + 1;
    goto LABEL_16;
  }
  *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 352, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 352),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
    "init",
    126);
  v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 352),
          (const char (*)[16])"[CONFIG_ERROR] ");
  v11 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v10, (const char (*)[14])byte_1A451DC0);
  v12 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v11, (const char (*)[256])(v2 + 416));
  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])byte_1A451E00);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
  result = -1;
LABEL_18:
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8054) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8058) = -168430091;
  }
  return result;
};

// Line 138: range 000000000EF44C04-000000000EF45444
int32_t __cdecl data::RandomQuestCond::init(data::RandomQuestCond *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  std::string *v9; // r14
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  uint32_t array_count; // [rsp+18h] [rbp-318h]
  uint32_t i; // [rsp+1Ch] [rbp-314h]
  char v15[784]; // [rsp+20h] [rbp-310h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(736LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "9 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 256 12 col_name:139";
  *(_QWORD *)(v2 + 16) = data::RandomQuestCond::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862741] = -202116109;
  v4[536862742] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::QuestCondType>(row, (const std::string *)(v2 + 96), &this->type) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      143);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
    goto LABEL_18;
  }
  std::vector<std::string>::resize(&this->param, 5uLL);
  array_count = 0;
  for ( i = 0; ; ++i )
  {
    if ( i > 4 )
    {
      std::vector<std::string>::resize(&this->param, array_count);
      result = 0;
      goto LABEL_18;
    }
    snprintf((char *)(v2 + 416), 0x100uLL, &byte_1A4539E0, i + 1);
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      (const char *)(v2 + 416),
      (const std::allocator<char> *)(v2 + 64));
    v8 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( !v8 )
      break;
LABEL_16:
    ;
  }
  v9 = std::vector<std::string>::operator[](&this->param, i);
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 288),
    (const char *)(v2 + 416),
    (const std::allocator<char> *)(v2 + 80));
  LOBYTE(v9) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 288), v9) != 0;
  std::string::~string((void *)(v2 + 288));
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( !(_BYTE)v9 )
  {
    array_count = i + 1;
    goto LABEL_16;
  }
  *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 352, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 352),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
    "init",
    155);
  v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 352),
          (const char (*)[16])"[CONFIG_ERROR] ");
  v11 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v10, (const char (*)[14])byte_1A451DC0);
  v12 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v11, (const char (*)[256])(v2 + 416));
  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])byte_1A451E00);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
  result = -1;
LABEL_18:
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8054) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8058) = -168430091;
  }
  return result;
};

// Line 167: range 000000000EF45446-000000000EF45C86
int32_t __cdecl data::TalkCond::init(data::TalkCond *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  std::string *v9; // r14
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  uint32_t array_count; // [rsp+18h] [rbp-318h]
  uint32_t i; // [rsp+1Ch] [rbp-314h]
  char v15[784]; // [rsp+20h] [rbp-310h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(736LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "9 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 256 12 col_name:168";
  *(_QWORD *)(v2 + 16) = data::TalkCond::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862741] = -202116109;
  v4[536862742] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::QuestCondType>(row, (const std::string *)(v2 + 96), &this->type) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      172);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
    goto LABEL_18;
  }
  std::vector<std::string>::resize(&this->param, 5uLL);
  array_count = 0;
  for ( i = 0; ; ++i )
  {
    if ( i > 4 )
    {
      std::vector<std::string>::resize(&this->param, array_count);
      result = 0;
      goto LABEL_18;
    }
    snprintf((char *)(v2 + 416), 0x100uLL, &byte_1A4539E0, i + 1);
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      (const char *)(v2 + 416),
      (const std::allocator<char> *)(v2 + 64));
    v8 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( !v8 )
      break;
LABEL_16:
    ;
  }
  v9 = std::vector<std::string>::operator[](&this->param, i);
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 288),
    (const char *)(v2 + 416),
    (const std::allocator<char> *)(v2 + 80));
  LOBYTE(v9) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 288), v9) != 0;
  std::string::~string((void *)(v2 + 288));
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( !(_BYTE)v9 )
  {
    array_count = i + 1;
    goto LABEL_16;
  }
  *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 352, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 352),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
    "init",
    184);
  v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 352),
          (const char (*)[16])"[CONFIG_ERROR] ");
  v11 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v10, (const char (*)[14])byte_1A451DC0);
  v12 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v11, (const char (*)[256])(v2 + 416));
  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])byte_1A451E00);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
  result = -1;
LABEL_18:
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8054) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8058) = -168430091;
  }
  return result;
};

// Line 196: range 000000000EF45C88-000000000EF469B5
int32_t __cdecl data::QuestContent::init(data::QuestContent *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  int *v9; // r14
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  bool v13; // r14
  common::milog::MiLogStream *v14; // rax
  bool v15; // r14
  common::milog::MiLogStream *v16; // rax
  uint32_t array_count; // [rsp+18h] [rbp-438h]
  uint32_t i; // [rsp+1Ch] [rbp-434h]
  char v19[1072]; // [rsp+20h] [rbp-430h] BYREF

  v2 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(1024LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "15 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 32 "
                        "9 <unknown> 192 32 9 <unknown> 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 32 9"
                        " <unknown> 512 32 9 <unknown> 576 32 9 <unknown> 640 32 9 <unknown> 704 256 12 col_name:197";
  *(_QWORD *)(v2 + 16) = data::QuestContent::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862750] = -202116109;
  v4[536862751] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 128),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::QuestContentType>(
         row,
         (const std::string *)(v2 + 128),
         &this->type) != 0;
  std::string::~string((void *)(v2 + 128));
  *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 192) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 223) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 223) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 192, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 192),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      201);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 192),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
    result = -1;
  }
  else
  {
    std::vector<int>::resize(&this->param, 2uLL);
    array_count = 0;
    for ( i = 0; i <= 1; ++i )
    {
      snprintf((char *)(v2 + 704), 0x100uLL, &byte_1A4539E0, i + 1);
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 256),
        (const char *)(v2 + 704),
        (const std::allocator<char> *)(v2 + 64));
      v8 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 256));
      std::string::~string((void *)(v2 + 256));
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( !v8 )
      {
        v9 = std::vector<int>::operator[](&this->param, i);
        *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 320),
          (const char *)(v2 + 704),
          (const std::allocator<char> *)(v2 + 80));
        LOBYTE(v9) = common::tools::TxtFile::Row::assignToNum<int>(row, (const std::string *)(v2 + 320), v9) != 0;
        std::string::~string((void *)(v2 + 320));
        *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( (_BYTE)v9 )
        {
          *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 384) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 384, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 384),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            213);
          v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 384),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v11 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v10, (const char (*)[14])byte_1A451DC0);
          v12 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v11, (const char (*)[256])(v2 + 704));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 384));
          result = -1;
          goto LABEL_26;
        }
        array_count = i + 1;
      }
    }
    std::vector<int>::resize(&this->param, array_count);
    *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 448),
      &byte_1A468FC0,
      (const std::allocator<char> *)(v2 + 96));
    v13 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 448), &this->param_str) != 0;
    std::string::~string((void *)(v2 + 448));
    *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v13 )
    {
      *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 512, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 512),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        222);
      v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v2 + 512),
              (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v14, (const char (*)[33])byte_1A469000);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
      result = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 112);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 576),
        &byte_1A469060,
        (const std::allocator<char> *)(v2 + 112));
      v15 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 576), &this->count) != 0;
      std::string::~string((void *)(v2 + 576));
      *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 112);
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      if ( v15 )
      {
        *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 640) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 640, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 640),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          227);
        v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 640),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v16, (const char (*)[27])byte_1A4690A0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 640));
        result = -1;
      }
      else
      {
        result = 0;
      }
    }
  }
LABEL_26:
  if ( v19 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF802C) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF803C) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF804C) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8054) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8078) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8068) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8070) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8078) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 235: range 000000000EF469B6-000000000EF471F6
int32_t __cdecl data::QuestExec::init(data::QuestExec *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  std::string *v9; // r14
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  uint32_t array_count; // [rsp+18h] [rbp-318h]
  uint32_t i; // [rsp+1Ch] [rbp-314h]
  char v15[784]; // [rsp+20h] [rbp-310h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(736LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "9 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 256 12 col_name:236";
  *(_QWORD *)(v2 + 16) = data::QuestExec::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862741] = -202116109;
  v4[536862742] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::QuestExecType>(row, (const std::string *)(v2 + 96), &this->type) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      240);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
    goto LABEL_18;
  }
  std::vector<std::string>::resize(&this->param, 5uLL);
  array_count = 0;
  for ( i = 0; ; ++i )
  {
    if ( i > 4 )
    {
      std::vector<std::string>::resize(&this->param, array_count);
      result = 0;
      goto LABEL_18;
    }
    snprintf((char *)(v2 + 416), 0x100uLL, &byte_1A4539E0, i + 1);
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      (const char *)(v2 + 416),
      (const std::allocator<char> *)(v2 + 64));
    v8 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( !v8 )
      break;
LABEL_16:
    ;
  }
  v9 = std::vector<std::string>::operator[](&this->param, i);
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 288),
    (const char *)(v2 + 416),
    (const std::allocator<char> *)(v2 + 80));
  LOBYTE(v9) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 288), v9) != 0;
  std::string::~string((void *)(v2 + 288));
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( !(_BYTE)v9 )
  {
    array_count = i + 1;
    goto LABEL_16;
  }
  *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 352, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 352),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
    "init",
    252);
  v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 352),
          (const char (*)[16])"[CONFIG_ERROR] ");
  v11 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v10, (const char (*)[14])byte_1A451DC0);
  v12 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v11, (const char (*)[256])(v2 + 416));
  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])byte_1A451E00);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
  result = -1;
LABEL_18:
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8054) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8058) = -168430091;
  }
  return result;
};

// Line 264: range 000000000EF471F8-000000000EF47A38
int32_t __cdecl data::TalkExec::init(data::TalkExec *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  std::string *v9; // r14
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  uint32_t array_count; // [rsp+18h] [rbp-318h]
  uint32_t i; // [rsp+1Ch] [rbp-314h]
  char v15[784]; // [rsp+20h] [rbp-310h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(736LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "9 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 256 12 col_name:265";
  *(_QWORD *)(v2 + 16) = data::TalkExec::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862741] = -202116109;
  v4[536862742] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::TalkExecType>(row, (const std::string *)(v2 + 96), &this->type) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      269);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
    goto LABEL_18;
  }
  std::vector<std::string>::resize(&this->param, 5uLL);
  array_count = 0;
  for ( i = 0; ; ++i )
  {
    if ( i > 4 )
    {
      std::vector<std::string>::resize(&this->param, array_count);
      result = 0;
      goto LABEL_18;
    }
    snprintf((char *)(v2 + 416), 0x100uLL, &byte_1A4539E0, i + 1);
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      (const char *)(v2 + 416),
      (const std::allocator<char> *)(v2 + 64));
    v8 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 224));
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( !v8 )
      break;
LABEL_16:
    ;
  }
  v9 = std::vector<std::string>::operator[](&this->param, i);
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 288),
    (const char *)(v2 + 416),
    (const std::allocator<char> *)(v2 + 80));
  LOBYTE(v9) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 288), v9) != 0;
  std::string::~string((void *)(v2 + 288));
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( !(_BYTE)v9 )
  {
    array_count = i + 1;
    goto LABEL_16;
  }
  *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 352, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 352),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
    "init",
    281);
  v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 352),
          (const char (*)[16])"[CONFIG_ERROR] ");
  v11 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v10, (const char (*)[14])byte_1A451DC0);
  v12 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v11, (const char (*)[256])(v2 + 416));
  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])byte_1A451E00);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
  result = -1;
LABEL_18:
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8054) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8058) = -168430091;
  }
  return result;
};

// Line 293: range 000000000EF47A3A-000000000EF48E33
int32_t __cdecl data::ChapterExcelConfig::init(
        data::ChapterExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r15
  common::milog::MiLogStream *v6; // rax
  int v7; // eax
  bool v8; // r15
  common::milog::MiLogStream *v9; // rax
  bool v10; // r15
  common::milog::MiLogStream *v11; // rax
  bool v12; // r15
  common::milog::MiLogStream *v13; // rax
  bool v14; // r15
  common::milog::MiLogStream *v15; // rax
  bool v16; // r15
  common::milog::MiLogStream *v17; // rax
  bool v18; // r15
  common::milog::MiLogStream *v19; // rax
  bool v20; // r15
  common::milog::MiLogStream *v21; // rax
  int32_t v22; // ebx
  char v24[1232]; // [rsp+10h] [rbp-4D0h] BYREF

  v2 = (unsigned __int64)v24;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1184LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "24 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 32 9 <unknown> 224 32 9 <unknown> 288 32 9 <un"
                        "known> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 <unk"
                        "nown> 672 32 9 <unknown> 736 32 9 <unknown> 800 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <unkn"
                        "own> 992 32 9 <unknown> 1056 32 9 <unknown> 1120 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::ChapterExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -218959118;
  v4[536862754] = -218959118;
  v4[536862756] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 160),
    &byte_1A469400,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 160), &this->id) != 0;
  std::string::~string((void *)(v2 + 160));
  *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 224, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 224),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      296);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 224),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v6, (const char (*)[29])byte_1A469440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
    v7 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 288),
      &byte_1A469480,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
           row,
           (const std::string *)(v2 + 288),
           &this->begin_quest_id) != 0;
    std::string::~string((void *)(v2 + 288));
    *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 352, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 352),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        301);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 352),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v9, (const char (*)[36])byte_1A4694C0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
      v7 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 416),
        &byte_1A469520,
        (const std::allocator<char> *)(v2 + 64));
      v10 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
              row,
              (const std::string *)(v2 + 416),
              &this->end_quest_id) != 0;
      std::string::~string((void *)(v2 + 416));
      *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 480) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 480, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 480),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          306);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 480),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v11, (const char (*)[36])byte_1A469560);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 480));
        v7 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 544),
          &byte_1A4695C0,
          (const std::allocator<char> *)(v2 + 80));
        v12 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                row,
                (const std::string *)(v2 + 544),
                &this->need_player_level) != 0;
        std::string::~string((void *)(v2 + 544));
        *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v12 )
        {
          *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 608) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 608, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 608),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            311);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 608),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v13, (const char (*)[39])byte_1A469600);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 608));
          v7 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 96);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 672),
            &byte_1A469660,
            (const std::allocator<char> *)(v2 + 96));
          v14 = common::tools::TxtFile::Row::assignToStr(
                  row,
                  (const std::string *)(v2 + 672),
                  &this->need_begin_time_str) != 0;
          std::string::~string((void *)(v2 + 672));
          *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 96);
          *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
          if ( v14 )
          {
            *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 736) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 736, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 736),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              316);
            v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 736),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v15, (const char (*)[39])byte_1A4696A0);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 736));
            v7 = -1;
          }
          else
          {
            *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 112);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 800),
              &byte_1A469700,
              (const std::allocator<char> *)(v2 + 112));
            v16 = common::tools::TxtFile::Row::assignToEnum<data::QuestShowType>(
                    row,
                    (const std::string *)(v2 + 800),
                    &this->chapter_show_type) != 0;
            std::string::~string((void *)(v2 + 800));
            *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 112);
            *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
            if ( v16 )
            {
              *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 864) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 864, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 864),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                321);
              v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 864),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(v17, (const char (*)[43])byte_1A469740);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 864));
              v7 = -1;
            }
            else
            {
              *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 128);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 928),
                &byte_1A4697A0,
                (const std::allocator<char> *)(v2 + 128));
              v18 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                      row,
                      (const std::string *)(v2 + 928),
                      &this->related_activity_id) != 0;
              std::string::~string((void *)(v2 + 928));
              *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 128);
              *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
              if ( v18 )
              {
                *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 992) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 992, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 992),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                  "init",
                  326);
                v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 992),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v19, (const char (*)[35])byte_1A4697E0);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 992));
                v7 = -1;
              }
              else
              {
                *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 144);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 1056),
                  &byte_1A469840,
                  (const std::allocator<char> *)(v2 + 144));
                v20 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                        row,
                        (const std::string *)(v2 + 1056),
                        &this->in_activity_need_player_level) != 0;
                std::string::~string((void *)(v2 + 1056));
                *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 144);
                *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
                if ( v20 )
                {
                  *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1120) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1151) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1151) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1120, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1120),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                    "init",
                    331);
                  v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1120),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                    v21,
                    (const char (*)[48])byte_1A469880);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1120));
                  v7 = -1;
                }
                else
                {
                  v7 = 0;
                }
              }
            }
          }
        }
      }
    }
  }
  v22 = v7;
  if ( v24 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8058) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8068) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8070) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8078) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8080) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8088) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8090) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1184LL, v24);
  }
  return v22;
};

// Line 339: range 000000000EF48E34-000000000EF4B8A3
int32_t __cdecl data::MainQuestExcelConfig::init(
        data::MainQuestExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  unsigned __int64 v15; // rax
  _DWORD *v16; // rax
  bool v17; // r15
  unsigned __int64 v18; // rax
  char *i; // r14
  _DWORD *v20; // rax
  common::milog::MiLogStream *v21; // rax
  bool v22; // r14
  common::milog::MiLogStream *v23; // rax
  bool v24; // r14
  common::milog::MiLogStream *v25; // rax
  bool v26; // r14
  common::milog::MiLogStream *v27; // rax
  bool v28; // r14
  common::milog::MiLogStream *v29; // rax
  bool v30; // r14
  common::milog::MiLogStream *v31; // rax
  bool t; // [rsp+0h] [rbp-9B0h]
  bool ta; // [rsp+0h] [rbp-9B0h]
  bool tb; // [rsp+0h] [rbp-9B0h]
  bool tc; // [rsp+0h] [rbp-9B0h]
  bool td; // [rsp+0h] [rbp-9B0h]
  bool te; // [rsp+0h] [rbp-9B0h]
  bool tf; // [rsp+0h] [rbp-9B0h]
  bool tg; // [rsp+0h] [rbp-9B0h]
  bool th; // [rsp+0h] [rbp-9B0h]
  char v42[2448]; // [rsp+20h] [rbp-990h] BYREF

  v2 = (unsigned __int64)v42;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_6(2400LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "49 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 9"
                        " <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unknown> 208 1 9 <unkn"
                        "own> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 288 1 9 <unknown> 3"
                        "04 1 9 <unknown> 320 24 9 <unknown> 384 32 11 val_str:340 448 32 9 <unknown> 512 32 9 <unknown> "
                        "576 32 9 <unknown> 640 32 9 <unknown> 704 32 9 <unknown> 768 32 9 <unknown> 832 32 9 <unknown> 8"
                        "96 32 9 <unknown> 960 32 9 <unknown> 1024 32 9 <unknown> 1088 32 9 <unknown> 1152 32 9 <unknown>"
                        " 1216 32 9 <unknown> 1280 32 9 <unknown> 1344 32 9 <unknown> 1408 32 9 <unknown> 1472 32 9 <unkn"
                        "own> 1536 32 9 <unknown> 1600 32 9 <unknown> 1664 32 9 <unknown> 1728 32 9 <unknown> 1792 32 9 <"
                        "unknown> 1856 32 9 <unknown> 1920 32 9 <unknown> 1984 32 9 <unknown> 2048 32 9 <unknown> 2112 32"
                        " 9 <unknown> 2176 32 9 <unknown> 2240 32 9 <unknown> 2304 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::MainQuestExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234753535;
  v4[536862730] = -234881024;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862743] = -218959118;
  v4[536862745] = -218959118;
  v4[536862747] = -218959118;
  v4[536862749] = -218959118;
  v4[536862751] = -218959118;
  v4[536862753] = -218959118;
  v4[536862755] = -218959118;
  v4[536862757] = -218959118;
  v4[536862759] = -218959118;
  v4[536862761] = -218959118;
  v4[536862763] = -218959118;
  v4[536862765] = -218959118;
  v4[536862767] = -218959118;
  v4[536862769] = -218959118;
  v4[536862771] = -218959118;
  v4[536862773] = -218959118;
  v4[536862775] = -218959118;
  v4[536862777] = -218959118;
  v4[536862779] = -218959118;
  v4[536862781] = -218959118;
  v4[536862783] = -218959118;
  v4[536862785] = -218959118;
  v4[536862787] = -218959118;
  v4[536862789] = -218959118;
  v4[536862791] = -218959118;
  v4[536862794] = -202116109;
  std::string::basic_string(v2 + 384);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 448),
    &byte_1A469CA0,
    (const std::allocator<char> *)(v2 + 48));
  t = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 448), &this->id) != 0;
  std::string::~string((void *)(v2 + 448));
  *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 512, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 512),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      343);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 512),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v5, (const char (*)[32])byte_1A469CE0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
    *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 576),
      &byte_1A469D20,
      (const std::allocator<char> *)(v2 + 64));
    ta = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 576), &this->res_id) != 0;
    std::string::~string((void *)(v2 + 576));
    *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 640) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 640, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 640),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        348);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 640),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v7, (const char (*)[29])byte_1A469D60);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 640));
      *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 704),
        &byte_1A469DA0,
        (const std::allocator<char> *)(v2 + 80));
      tb = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 704), &this->series) != 0;
      std::string::~string((void *)(v2 + 704));
      *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( tb )
      {
        *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 768) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 799) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 799) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 768, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 768),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          353);
        v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
               (common::milog::MiLogStream *const)(v2 + 768),
               (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v8, (const char (*)[33])byte_1A469DE0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 768));
        *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 96);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 832),
          &byte_1A469E40,
          (const std::allocator<char> *)(v2 + 96));
        tc = common::tools::TxtFile::Row::assignToEnum<data::QuestType>(
               row,
               (const std::string *)(v2 + 832),
               &this->type) != 0;
        std::string::~string((void *)(v2 + 832));
        *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 96);
        *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
        if ( tc )
        {
          *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 896) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 927) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 927) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 896, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 896),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            358);
          v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 896),
                 (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v9, (const char (*)[33])byte_1A469E80);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 896));
          *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = -117901064;
          v6 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 112);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 960),
            &byte_1A469EE0,
            (const std::allocator<char> *)(v2 + 112));
          td = common::tools::TxtFile::Row::assignToEnum<data::PlayMode>(
                 row,
                 (const std::string *)(v2 + 960),
                 &this->active_mode) != 0;
          std::string::~string((void *)(v2 + 960));
          *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 112);
          *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
          if ( td )
          {
            *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1024) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1055) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 1055) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1024, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1024),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              363);
            v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1024),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v10, (const char (*)[33])byte_1A469F20);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1024));
            *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = -117901064;
            v6 = -1;
          }
          else
          {
            *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 128);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 1088),
              aLua_5,
              (const std::allocator<char> *)(v2 + 128));
            te = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 1088), &this->lua_path) != 0;
            std::string::~string((void *)(v2 + 1088));
            *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 128);
            *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
            if ( te )
            {
              *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 1152) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 1183) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 1183) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 1152, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 1152),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                368);
              v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 1152),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v11, (const char (*)[36])byte_1A469FC0);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1152));
              *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = -117901064;
              v6 = -1;
            }
            else
            {
              *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 144);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 1216),
                &byte_1A46A020,
                (const std::allocator<char> *)(v2 + 144));
              tf = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                     row,
                     (const std::string *)(v2 + 1216),
                     &this->recommend_level) != 0;
              std::string::~string((void *)(v2 + 1216));
              *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 144);
              *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
              if ( tf )
              {
                *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 1280) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1311) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 1311) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 1280, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 1280),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                  "init",
                  373);
                v12 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 1280),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v12, (const char (*)[33])byte_1A46A060);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1280));
                *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = -117901064;
                v6 = -1;
              }
              else
              {
                *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 160);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 1344),
                  &byte_1A46A0C0,
                  (const std::allocator<char> *)(v2 + 160));
                tg = common::tools::TxtFile::Row::assignToNum<bool>(
                       row,
                       (const std::string *)(v2 + 1344),
                       &this->repeatable) != 0;
                std::string::~string((void *)(v2 + 1344));
                *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 160);
                *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
                if ( tg )
                {
                  *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1408) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1439) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 1439) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1408, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1408),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                    "init",
                    378);
                  v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1408),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
                    v13,
                    (const char (*)[30])byte_1A46A100);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1408));
                  *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = -117901064;
                  v6 = -1;
                }
                else
                {
                  *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = 0;
                  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<char>::allocator(v2 + 176);
                  std::string::basic_string<std::allocator<char>>(
                    (std::string *const)(v2 + 1472),
                    &byte_1A46A140,
                    (const std::allocator<char> *)(v2 + 176));
                  th = common::tools::TxtFile::Row::assignToStr(
                         row,
                         (const std::string *)(v2 + 1472),
                         (std::string *)(v2 + 384)) != 0;
                  std::string::~string((void *)(v2 + 1472));
                  *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = -117901064;
                  std::allocator<char>::~allocator(v2 + 176);
                  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
                  if ( th )
                  {
                    *(_DWORD *)(((v2 + 1536) >> 3) + 0x7FFF8000) = 0;
                    if ( *(char *)(((v2 + 1536) >> 3) + 0x7FFF8000) < 0
                      || *(_BYTE *)(((v2 + 1567) >> 3) + 0x7FFF8000) != 0
                      && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 1567) >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_store_n(v2 + 1536, 32LL);
                    }
                    common::milog::MiLogStream::create(
                      (common::milog::MiLogStream *)(v2 + 1536),
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                      "init",
                      383);
                    v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                            (common::milog::MiLogStream *const)(v2 + 1536),
                            (const char (*)[16])"[CONFIG_ERROR] ");
                    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                      v14,
                      (const char (*)[41])byte_1A46A180);
                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1536));
                    *(_DWORD *)(((v2 + 1536) >> 3) + 0x7FFF8000) = -117901064;
                    v6 = -1;
                  }
                  else
                  {
                    v15 = ((v2 + 320) >> 3) + 2147450880;
                    *(_WORD *)v15 = 0;
                    *(_BYTE *)(v15 + 2) = 0;
                    v16 = (_DWORD *)(((v2 + 2304) >> 3) + 2147450880);
                    *v16 = 0;
                    v16[1] = 0;
                    *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v2 + 192);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v2 + 2304),
                      ";",
                      (const std::allocator<char> *)(v2 + 192));
                    *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v2 + 208);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v2 + 2336),
                      ",",
                      (const std::allocator<char> *)(v2 + 208));
                    *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 224));
                    std::vector<std::string>::vector(
                      (std::vector<std::string> *const)(v2 + 320),
                      (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 2304),
                      (const std::vector<std::string>::allocator_type *)(v2 + 224));
                    v17 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                            (const std::string *)(v2 + 384),
                            (const std::vector<std::string> *)(v2 + 320),
                            &this->reward_id_list,
                            1) != 0;
                    std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 320));
                    v18 = ((v2 + 320) >> 3) + 2147450880;
                    *(_WORD *)v18 = -1800;
                    *(_BYTE *)(v18 + 2) = -8;
                    std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 224));
                    *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
                    for ( i = (char *)(v2 + 2368); i != (char *)(v2 + 2304); std::string::~string(i) )
                      i -= 32;
                    v20 = (_DWORD *)(((v2 + 2304) >> 3) + 2147450880);
                    *v20 = -117901064;
                    v20[1] = -117901064;
                    std::allocator<char>::~allocator(v2 + 208);
                    *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
                    std::allocator<char>::~allocator(v2 + 192);
                    *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
                    if ( v17 )
                    {
                      *(_DWORD *)(((v2 + 1600) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v2 + 1600) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v2 + 1631) >> 3) + 0x7FFF8000) != 0
                        && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 1631) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v2 + 1600, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v2 + 1600),
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                        "init",
                        388);
                      v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                              (common::milog::MiLogStream *const)(v2 + 1600),
                              (const char (*)[16])"[CONFIG_ERROR] ");
                      common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                        v21,
                        (const char (*)[41])byte_1A46A180);
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1600));
                      *(_DWORD *)(((v2 + 1600) >> 3) + 0x7FFF8000) = -117901064;
                      v6 = -1;
                    }
                    else
                    {
                      *(_DWORD *)(((v2 + 1664) >> 3) + 0x7FFF8000) = 0;
                      *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v2 + 240);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v2 + 1664),
                        &byte_1A469400,
                        (const std::allocator<char> *)(v2 + 240));
                      v22 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                              row,
                              (const std::string *)(v2 + 1664),
                              &this->chapter_id) != 0;
                      std::string::~string((void *)(v2 + 1664));
                      *(_DWORD *)(((v2 + 1664) >> 3) + 0x7FFF8000) = -117901064;
                      std::allocator<char>::~allocator(v2 + 240);
                      *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
                      if ( v22 )
                      {
                        *(_DWORD *)(((v2 + 1728) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v2 + 1728) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v2 + 1759) >> 3) + 0x7FFF8000) != 0
                          && (char)((v2 - 33) & 7) >= *(_BYTE *)(((v2 + 1759) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v2 + 1728, 32LL);
                        }
                        common::milog::MiLogStream::create(
                          (common::milog::MiLogStream *)(v2 + 1728),
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                          "init",
                          393);
                        v23 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                (common::milog::MiLogStream *const)(v2 + 1728),
                                (const char (*)[16])"[CONFIG_ERROR] ");
                        common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                          v23,
                          (const char (*)[29])byte_1A469440);
                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1728));
                        *(_DWORD *)(((v2 + 1728) >> 3) + 0x7FFF8000) = -117901064;
                        v6 = -1;
                      }
                      else
                      {
                        *(_DWORD *)(((v2 + 1792) >> 3) + 0x7FFF8000) = 0;
                        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v2 + 256);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v2 + 1792),
                          &byte_1A46A1E0,
                          (const std::allocator<char> *)(v2 + 256));
                        v24 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                                row,
                                (const std::string *)(v2 + 1792),
                                &this->task_id) != 0;
                        std::string::~string((void *)(v2 + 1792));
                        *(_DWORD *)(((v2 + 1792) >> 3) + 0x7FFF8000) = -117901064;
                        std::allocator<char>::~allocator(v2 + 256);
                        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
                        if ( v24 )
                        {
                          *(_DWORD *)(((v2 + 1856) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v2 + 1856) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 1887) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 1887) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 1856, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v2 + 1856),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                            "init",
                            398);
                          v25 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                  (common::milog::MiLogStream *const)(v2 + 1856),
                                  (const char (*)[16])"[CONFIG_ERROR] ");
                          common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                            v25,
                            (const char (*)[29])byte_1A46A220);
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1856));
                          *(_DWORD *)(((v2 + 1856) >> 3) + 0x7FFF8000) = -117901064;
                          v6 = -1;
                        }
                        else
                        {
                          *(_DWORD *)(((v2 + 1920) >> 3) + 0x7FFF8000) = 0;
                          *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
                          std::allocator<char>::allocator(v2 + 272);
                          std::string::basic_string<std::allocator<char>>(
                            (std::string *const)(v2 + 1920),
                            &byte_1A4697A0,
                            (const std::allocator<char> *)(v2 + 272));
                          v26 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                                  row,
                                  (const std::string *)(v2 + 1920),
                                  &this->activity_id) != 0;
                          std::string::~string((void *)(v2 + 1920));
                          *(_DWORD *)(((v2 + 1920) >> 3) + 0x7FFF8000) = -117901064;
                          std::allocator<char>::~allocator(v2 + 272);
                          *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
                          if ( v26 )
                          {
                            *(_DWORD *)(((v2 + 1984) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v2 + 1984) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v2 + 2015) >> 3) + 0x7FFF8000) != 0
                              && (char)((v2 - 33) & 7) >= *(_BYTE *)(((v2 + 2015) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v2 + 1984, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v2 + 1984),
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                              "init",
                              403);
                            v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                    (common::milog::MiLogStream *const)(v2 + 1984),
                                    (const char (*)[16])"[CONFIG_ERROR] ");
                            common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                              v27,
                              (const char (*)[35])byte_1A4697E0);
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1984));
                            *(_DWORD *)(((v2 + 1984) >> 3) + 0x7FFF8000) = -117901064;
                            v6 = -1;
                          }
                          else
                          {
                            *(_DWORD *)(((v2 + 2048) >> 3) + 0x7FFF8000) = 0;
                            *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
                            std::allocator<char>::allocator(v2 + 288);
                            std::string::basic_string<std::allocator<char>>(
                              (std::string *const)(v2 + 2048),
                              &byte_1A450800,
                              (const std::allocator<char> *)(v2 + 288));
                            v28 = common::tools::TxtFile::Row::assignToEnum<data::NewActivityType>(
                                    row,
                                    (const std::string *)(v2 + 2048),
                                    &this->activity_type) != 0;
                            std::string::~string((void *)(v2 + 2048));
                            *(_DWORD *)(((v2 + 2048) >> 3) + 0x7FFF8000) = -117901064;
                            std::allocator<char>::~allocator(v2 + 288);
                            *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
                            if ( v28 )
                            {
                              *(_DWORD *)(((v2 + 2112) >> 3) + 0x7FFF8000) = 0;
                              if ( *(char *)(((v2 + 2112) >> 3) + 0x7FFF8000) < 0
                                || *(_BYTE *)(((v2 + 2143) >> 3) + 0x7FFF8000) != 0
                                && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 2143) >> 3) + 0x7FFF8000) )
                              {
                                __asan_report_store_n(v2 + 2112, 32LL);
                              }
                              common::milog::MiLogStream::create(
                                (common::milog::MiLogStream *)(v2 + 2112),
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                                "init",
                                408);
                              v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                      (common::milog::MiLogStream *const)(v2 + 2112),
                                      (const char (*)[16])"[CONFIG_ERROR] ");
                              common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                                v29,
                                (const char (*)[33])byte_1A4508C0);
                              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2112));
                              *(_DWORD *)(((v2 + 2112) >> 3) + 0x7FFF8000) = -117901064;
                              v6 = -1;
                            }
                            else
                            {
                              *(_DWORD *)(((v2 + 2176) >> 3) + 0x7FFF8000) = 0;
                              *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 1;
                              std::allocator<char>::allocator(v2 + 304);
                              std::string::basic_string<std::allocator<char>>(
                                (std::string *const)(v2 + 2176),
                                "VideoKey",
                                (const std::allocator<char> *)(v2 + 304));
                              v30 = common::tools::TxtFile::Row::assignToNum<unsigned long>(
                                      row,
                                      (const std::string *)(v2 + 2176),
                                      &this->video_key) != 0;
                              std::string::~string((void *)(v2 + 2176));
                              *(_DWORD *)(((v2 + 2176) >> 3) + 0x7FFF8000) = -117901064;
                              std::allocator<char>::~allocator(v2 + 304);
                              *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
                              if ( v30 )
                              {
                                *(_DWORD *)(((v2 + 2240) >> 3) + 0x7FFF8000) = 0;
                                if ( *(char *)(((v2 + 2240) >> 3) + 0x7FFF8000) < 0
                                  || *(_BYTE *)(((v2 + 2271) >> 3) + 0x7FFF8000) != 0
                                  && (char)((v2 - 33) & 7) >= *(_BYTE *)(((v2 + 2271) >> 3) + 0x7FFF8000) )
                                {
                                  __asan_report_store_n(v2 + 2240, 32LL);
                                }
                                common::milog::MiLogStream::create(
                                  (common::milog::MiLogStream *)(v2 + 2240),
                                  &common::milog::MiLogDefault::default_log_obj_,
                                  4u,
                                  "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                                  "init",
                                  413);
                                v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                        (common::milog::MiLogStream *const)(v2 + 2240),
                                        (const char (*)[16])"[CONFIG_ERROR] ");
                                common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                                  v31,
                                  (const char (*)[29])byte_1A46A2A0);
                                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2240));
                                *(_DWORD *)(((v2 + 2240) >> 3) + 0x7FFF8000) = -117901064;
                                v6 = -1;
                              }
                              else
                              {
                                v6 = 0;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  std::string::~string((void *)(v2 + 384));
  if ( v42 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8124) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862735) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450932 - (((_DWORD)v4 + 2147450940) & 0xFFFFFFF8) + 248) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_6(v2, 2400LL, v42);
  }
  return v6;
};

// Line 421: range 000000000EF4B8A4-000000000EF57A92
int32_t __cdecl data::QuestExcelConfig::init(
        data::QuestExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r15
  __int64 v3; // rax
  _DWORD *v4; // r14
  bool v5; // bl
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // ebx
  bool v8; // bl
  common::milog::MiLogStream *v9; // rax
  bool v10; // bl
  common::milog::MiLogStream *v11; // rax
  bool v12; // bl
  common::milog::MiLogStream *v13; // rax
  bool v14; // bl
  common::milog::MiLogStream *v15; // rax
  bool v16; // bl
  common::milog::MiLogStream *v17; // rax
  bool v18; // bl
  common::milog::MiLogStream *v19; // rax
  bool v20; // bl
  data::QuestCondType *p_type; // rbx
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  std::vector<data::QuestCond>::reference v25; // rax
  bool v26; // bl
  std::vector<data::QuestCond>::reference v27; // rax
  int *v28; // rbx
  common::milog::MiLogStream *v29; // rax
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rax
  std::vector<data::QuestCond>::reference v32; // rax
  bool v33; // bl
  common::milog::MiLogStream *v34; // rax
  bool v35; // bl
  data::QuestContentType *v36; // rbx
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // rax
  std::vector<data::QuestContent>::reference v40; // rax
  bool v41; // bl
  std::vector<data::QuestContent>::reference v42; // rax
  int *v43; // rbx
  common::milog::MiLogStream *v44; // rax
  common::milog::MiLogStream *v45; // rax
  common::milog::MiLogStream *v46; // rax
  std::vector<data::QuestContent>::reference v47; // rax
  bool v48; // bl
  std::string *p_param_str; // rbx
  common::milog::MiLogStream *v50; // rax
  common::milog::MiLogStream *v51; // rax
  common::milog::MiLogStream *v52; // rax
  bool v53; // bl
  unsigned int *p_count; // rbx
  common::milog::MiLogStream *v55; // rax
  common::milog::MiLogStream *v56; // rax
  common::milog::MiLogStream *v57; // rax
  bool v58; // bl
  common::milog::MiLogStream *v59; // rax
  bool v60; // bl
  data::QuestContentType *v61; // rbx
  common::milog::MiLogStream *v62; // rax
  common::milog::MiLogStream *v63; // rax
  common::milog::MiLogStream *v64; // rax
  std::vector<data::QuestContent>::reference v65; // rax
  bool v66; // bl
  std::vector<data::QuestContent>::reference v67; // rax
  int *v68; // rbx
  common::milog::MiLogStream *v69; // rax
  common::milog::MiLogStream *v70; // rax
  common::milog::MiLogStream *v71; // rax
  std::vector<data::QuestContent>::reference v72; // rax
  bool v73; // bl
  std::string *v74; // rbx
  common::milog::MiLogStream *v75; // rax
  common::milog::MiLogStream *v76; // rax
  common::milog::MiLogStream *v77; // rax
  bool v78; // bl
  unsigned int *v79; // rbx
  common::milog::MiLogStream *v80; // rax
  common::milog::MiLogStream *v81; // rax
  common::milog::MiLogStream *v82; // rax
  bool v83; // bl
  common::milog::MiLogStream *v84; // rax
  bool v85; // bl
  common::milog::MiLogStream *v86; // rax
  bool v87; // bl
  std::string *v88; // rbx
  common::milog::MiLogStream *v89; // rax
  common::milog::MiLogStream *v90; // rax
  common::milog::MiLogStream *v91; // rax
  bool v92; // bl
  common::milog::MiLogStream *v93; // rax
  bool v94; // bl
  common::milog::MiLogStream *v95; // rax
  bool v96; // bl
  common::milog::MiLogStream *v97; // rax
  bool v98; // bl
  common::milog::MiLogStream *v99; // rax
  bool v100; // bl
  common::milog::MiLogStream *v101; // rax
  bool v102; // bl
  common::milog::MiLogStream *v103; // rax
  bool v104; // bl
  common::milog::MiLogStream *v105; // rax
  bool v106; // bl
  common::milog::MiLogStream *v107; // rax
  unsigned __int64 v108; // rax
  _DWORD *v109; // rax
  bool v110; // r12
  unsigned __int64 v111; // rax
  char *k; // rbx
  _DWORD *v113; // rax
  common::milog::MiLogStream *v114; // rax
  bool v115; // bl
  common::milog::MiLogStream *v116; // rax
  unsigned __int64 v117; // rax
  _DWORD *v118; // rax
  bool v119; // r12
  unsigned __int64 v120; // rax
  char *m; // rbx
  _DWORD *v122; // rax
  common::milog::MiLogStream *v123; // rax
  bool v124; // bl
  data::QuestExecType *v125; // rbx
  common::milog::MiLogStream *v126; // rax
  common::milog::MiLogStream *v127; // rax
  common::milog::MiLogStream *v128; // rax
  std::vector<data::QuestExec>::reference v129; // rax
  bool v130; // bl
  std::vector<data::QuestExec>::reference v131; // rax
  std::string *v132; // rbx
  common::milog::MiLogStream *v133; // rax
  common::milog::MiLogStream *v134; // rax
  common::milog::MiLogStream *v135; // rax
  std::vector<data::QuestExec>::reference v136; // rax
  bool v137; // bl
  data::QuestExecType *v138; // rbx
  common::milog::MiLogStream *v139; // rax
  common::milog::MiLogStream *v140; // rax
  common::milog::MiLogStream *v141; // rax
  std::vector<data::QuestExec>::reference v142; // rax
  bool v143; // bl
  std::vector<data::QuestExec>::reference v144; // rax
  std::string *v145; // rbx
  common::milog::MiLogStream *v146; // rax
  common::milog::MiLogStream *v147; // rax
  common::milog::MiLogStream *v148; // rax
  std::vector<data::QuestExec>::reference v149; // rax
  bool v150; // bl
  data::QuestExecType *v151; // rbx
  common::milog::MiLogStream *v152; // rax
  common::milog::MiLogStream *v153; // rax
  common::milog::MiLogStream *v154; // rax
  std::vector<data::QuestExec>::reference v155; // rax
  bool v156; // bl
  std::vector<data::QuestExec>::reference v157; // rax
  std::string *v158; // rbx
  common::milog::MiLogStream *v159; // rax
  common::milog::MiLogStream *v160; // rax
  common::milog::MiLogStream *v161; // rax
  std::vector<data::QuestExec>::reference v162; // rax
  bool v163; // bl
  common::milog::MiLogStream *v164; // rax
  unsigned __int64 v165; // rax
  _DWORD *v166; // rax
  bool v167; // r12
  unsigned __int64 v168; // rax
  char *n; // rbx
  _DWORD *v170; // rax
  common::milog::MiLogStream *v171; // rax
  bool v172; // bl
  common::milog::MiLogStream *v173; // rax
  unsigned __int64 v174; // rax
  _DWORD *v175; // rax
  bool v176; // r12
  unsigned __int64 v177; // rax
  char *ii; // rbx
  _DWORD *v179; // rax
  common::milog::MiLogStream *v180; // rax
  bool v181; // bl
  common::milog::MiLogStream *v182; // rax
  bool v183; // bl
  common::milog::MiLogStream *v184; // rax
  unsigned __int64 v185; // rax
  _DWORD *v186; // rax
  bool v187; // r12
  unsigned __int64 v188; // rax
  char *jj; // rbx
  _DWORD *v190; // rax
  common::milog::MiLogStream *v191; // rax
  bool v192; // bl
  common::milog::MiLogStream *v193; // rax
  bool v194; // bl
  common::milog::MiLogStream *v195; // rax
  unsigned __int64 v196; // rax
  _DWORD *v197; // rax
  bool v198; // r12
  unsigned __int64 v199; // rax
  char *kk; // rbx
  _DWORD *v201; // rax
  common::milog::MiLogStream *v202; // rax
  bool v203; // bl
  common::milog::MiLogStream *v204; // rax
  unsigned __int64 v205; // rax
  _DWORD *v206; // rax
  bool v207; // r12
  unsigned __int64 v208; // rax
  char *mm; // rbx
  _DWORD *v210; // rax
  common::milog::MiLogStream *v211; // rax
  bool v212; // bl
  common::milog::MiLogStream *v213; // rax
  unsigned __int64 v214; // rax
  _DWORD *v215; // rax
  bool v216; // r12
  unsigned __int64 v217; // rax
  char *nn; // rbx
  _DWORD *v219; // rax
  common::milog::MiLogStream *v220; // rax
  bool v221; // bl
  common::milog::MiLogStream *v222; // rax
  bool v223; // bl
  common::milog::MiLogStream *v224; // rax
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-2AE0h]
  std::initializer_list<std::string > v227; // [rsp+20h] [rbp-2AD0h]
  std::initializer_list<std::string > v228; // [rsp+30h] [rbp-2AC0h]
  std::initializer_list<std::string > v229; // [rsp+40h] [rbp-2AB0h]
  std::initializer_list<std::string > v230; // [rsp+50h] [rbp-2AA0h]
  std::initializer_list<std::string > v231; // [rsp+60h] [rbp-2A90h]
  std::initializer_list<std::string > v232; // [rsp+70h] [rbp-2A80h]
  std::initializer_list<std::string > v233; // [rsp+80h] [rbp-2A70h]
  uint32_t array_count; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_counta; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_countb; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_countc; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_countd; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_counte; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_countf; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_countg; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_counth; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_counti; // [rsp+A8h] [rbp-2A48h]
  uint32_t array_countj; // [rsp+A8h] [rbp-2A48h]
  uint32_t i; // [rsp+ACh] [rbp-2A44h]
  uint32_t j; // [rsp+B0h] [rbp-2A40h]
  uint32_t i_0; // [rsp+B4h] [rbp-2A3Ch]
  uint32_t j_0; // [rsp+B8h] [rbp-2A38h]
  uint32_t i_1; // [rsp+BCh] [rbp-2A34h]
  uint32_t j_1; // [rsp+C0h] [rbp-2A30h]
  uint32_t i_2; // [rsp+C4h] [rbp-2A2Ch]
  uint32_t i_3; // [rsp+C8h] [rbp-2A28h]
  uint32_t j_2; // [rsp+CCh] [rbp-2A24h]
  uint32_t i_4; // [rsp+D0h] [rbp-2A20h]
  uint32_t j_3; // [rsp+D4h] [rbp-2A1Ch]
  uint32_t i_5; // [rsp+D8h] [rbp-2A18h]
  uint32_t j_4; // [rsp+DCh] [rbp-2A14h]
  char v258[10768]; // [rsp+E0h] [rbp-2A10h] BYREF

  v2 = (unsigned __int64)v258;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_8(10720LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = a2253219Unknown;
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234753535;
  v4[536862730] = -234753535;
  v4[536862731] = -234753535;
  v4[536862732] = -234753535;
  v4[536862733] = -234753535;
  v4[536862734] = -234753535;
  v4[536862735] = -234753535;
  v4[536862736] = -234753535;
  v4[536862737] = -234753535;
  v4[536862738] = -234753535;
  v4[536862739] = -234753535;
  v4[536862740] = -234753535;
  v4[536862741] = -234753535;
  v4[536862742] = -234753535;
  v4[536862743] = -234753535;
  v4[536862744] = -234753535;
  v4[536862745] = -234753535;
  v4[536862746] = -234753535;
  v4[536862747] = -234753535;
  v4[536862748] = -234753535;
  v4[536862749] = -234753535;
  v4[536862750] = -234753535;
  v4[536862751] = -234753535;
  v4[536862752] = -234753535;
  v4[536862753] = -234753535;
  v4[536862754] = -234753535;
  v4[536862755] = -234753535;
  v4[536862756] = -234753535;
  v4[536862757] = -234753535;
  v4[536862758] = -234753535;
  v4[536862759] = -234753535;
  v4[536862760] = -234753535;
  v4[536862761] = -234753535;
  v4[536862762] = -234753535;
  v4[536862763] = -234753535;
  v4[536862764] = -234753535;
  v4[536862765] = -234881024;
  v4[536862766] = -218959118;
  v4[536862767] = -234881024;
  v4[536862768] = -218959118;
  v4[536862769] = -234881024;
  v4[536862770] = -218959118;
  v4[536862771] = -234881024;
  v4[536862772] = -218959118;
  v4[536862773] = -234881024;
  v4[536862774] = -218959118;
  v4[536862775] = -234881024;
  v4[536862776] = -218959118;
  v4[536862777] = -234881024;
  v4[536862778] = -218959118;
  v4[536862779] = -234881024;
  v4[536862780] = -218959118;
  v4[536862782] = -218959118;
  v4[536862784] = -218959118;
  v4[536862786] = -218959118;
  v4[536862788] = -218959118;
  v4[536862790] = -218959118;
  v4[536862792] = -218959118;
  v4[536862794] = -218959118;
  v4[536862796] = -218959118;
  v4[536862798] = -218959118;
  v4[536862800] = -218959118;
  v4[536862802] = -218959118;
  v4[536862804] = -218959118;
  v4[536862806] = -218959118;
  v4[536862808] = -218959118;
  v4[536862810] = -218959118;
  v4[536862812] = -218959118;
  v4[536862814] = -218959118;
  v4[536862816] = -218959118;
  v4[536862818] = -218959118;
  v4[536862820] = -218959118;
  v4[536862822] = -218959118;
  v4[536862824] = -218959118;
  v4[536862826] = -218959118;
  v4[536862828] = -218959118;
  v4[536862830] = -218959118;
  v4[536862832] = -218959118;
  v4[536862834] = -218959118;
  v4[536862836] = -218959118;
  v4[536862838] = -218959118;
  v4[536862840] = -218959118;
  v4[536862842] = -218959118;
  v4[536862844] = -218959118;
  v4[536862846] = -218959118;
  v4[536862848] = -218959118;
  v4[536862850] = -218959118;
  v4[536862852] = -218959118;
  v4[536862854] = -218959118;
  v4[536862856] = -218959118;
  v4[536862858] = -218959118;
  v4[536862860] = -218959118;
  v4[536862862] = -218959118;
  v4[536862864] = -218959118;
  v4[536862866] = -218959118;
  v4[536862868] = -218959118;
  v4[536862870] = -218959118;
  v4[536862872] = -218959118;
  v4[536862874] = -218959118;
  v4[536862876] = -218959118;
  v4[536862878] = -218959118;
  v4[536862880] = -218959118;
  v4[536862882] = -218959118;
  v4[536862884] = -218959118;
  v4[536862886] = -218959118;
  v4[536862888] = -218959118;
  v4[536862890] = -218959118;
  v4[536862892] = -218959118;
  v4[536862894] = -218959118;
  v4[536862896] = -218959118;
  v4[536862898] = -218959118;
  v4[536862900] = -218959118;
  v4[536862902] = -218959118;
  v4[536862904] = -218959118;
  v4[536862906] = -218959118;
  v4[536862908] = -218959118;
  v4[536862910] = -218959118;
  v4[536862912] = -218959118;
  v4[536862914] = -218959118;
  v4[536862916] = -218959118;
  v4[536862918] = -218959118;
  v4[536862920] = -218959118;
  v4[536862922] = -218959118;
  v4[536862924] = -218959118;
  v4[536862926] = -218959118;
  v4[536862928] = -218959118;
  v4[536862930] = -218959118;
  v4[536862932] = -218959118;
  v4[536862934] = -218959118;
  v4[536862936] = -218959118;
  v4[536862938] = -218959118;
  v4[536862940] = -218959118;
  v4[536862942] = -218959118;
  v4[536862944] = -218959118;
  v4[536862946] = -218959118;
  v4[536862948] = -218959118;
  v4[536862950] = -218959118;
  v4[536862952] = -218959118;
  v4[536862954] = -218959118;
  v4[536862956] = -218959118;
  v4[536862958] = -218959118;
  v4[536862960] = -218959118;
  v4[536862962] = -218959118;
  v4[536862964] = -218959118;
  v4[536862966] = -218959118;
  v4[536862968] = -218959118;
  v4[536862970] = -218959118;
  v4[536862972] = -218959118;
  v4[536862974] = -218959118;
  v4[536862976] = -218959118;
  v4[536862978] = -218959118;
  v4[536862980] = -218959118;
  v4[536862982] = -218959118;
  v4[536862984] = -218959118;
  v4[536862986] = -218959118;
  v4[536862988] = -218959118;
  v4[536862990] = -218959118;
  v4[536862992] = -218959118;
  v4[536862994] = -218959118;
  v4[536862996] = -218959118;
  v4[536862998] = -218959118;
  v4[536863000] = -218959118;
  v4[536863002] = -218959118;
  v4[536863004] = -218959118;
  v4[536863006] = -218959118;
  v4[536863008] = -218959118;
  v4[536863010] = -218959118;
  v4[536863012] = -218959118;
  v4[536863014] = -218959118;
  v4[536863016] = -218959118;
  v4[536863018] = -218959118;
  v4[536863020] = -218959118;
  v4[536863023] = -218959118;
  v4[536863026] = -218959118;
  v4[536863029] = -218959118;
  v4[536863032] = -218959118;
  v4[536863035] = -218959118;
  v4[536863038] = -218959118;
  v4[536863041] = -218959118;
  v4[536863044] = -218959118;
  v4[536863053] = -202116109;
  v4[536863054] = -202116109;
  std::string::basic_string(v2 + 1952);
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2016),
    &byte_1A46B400,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 2016), &this->sub_id) != 0;
  std::string::~string((void *)(v2 + 2016));
  *(_DWORD *)(((v2 + 2016) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 2080) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2080) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2111) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 2111) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2080, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2080),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      427);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 2080),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v6, (const char (*)[32])byte_1A46B440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2080));
    *(_DWORD *)(((v2 + 2080) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 2144) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2144),
    &byte_1A469CA0,
    (const std::allocator<char> *)(v2 + 48));
  v8 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 2144), &this->main_id) != 0;
  std::string::~string((void *)(v2 + 2144));
  *(_DWORD *)(((v2 + 2144) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v8 )
  {
    *(_DWORD *)(((v2 + 2208) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2208) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2239) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 2239) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2208, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2208),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      432);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 2208),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v9, (const char (*)[32])byte_1A469CE0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2208));
    *(_DWORD *)(((v2 + 2208) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 2272) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2272),
    &byte_1A46B480,
    (const std::allocator<char> *)(v2 + 64));
  v10 = common::tools::TxtFile::Row::assignToNum<int>(row, (const std::string *)(v2 + 2272), &this->order) != 0;
  std::string::~string((void *)(v2 + 2272));
  *(_DWORD *)(((v2 + 2272) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  if ( v10 )
  {
    *(_DWORD *)(((v2 + 2336) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2336) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2367) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 2367) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2336, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2336),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      437);
    v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2336),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v11, (const char (*)[27])byte_1A46B4C0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2336));
    *(_DWORD *)(((v2 + 2336) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 2400) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2400),
    &byte_1A46B500,
    (const std::allocator<char> *)(v2 + 80));
  v12 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 2400), &this->sub_id_set) != 0;
  std::string::~string((void *)(v2 + 2400));
  *(_DWORD *)(((v2 + 2400) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( v12 )
  {
    *(_DWORD *)(((v2 + 2464) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2464) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2495) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 2495) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2464, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2464),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      442);
    v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2464),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v13, (const char (*)[33])byte_1A46B540);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2464));
    *(_DWORD *)(((v2 + 2464) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 2528) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 96);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2528),
    &byte_1A46B5A0,
    (const std::allocator<char> *)(v2 + 96));
  v14 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 2528), &this->is_mp_block) != 0;
  std::string::~string((void *)(v2 + 2528));
  *(_DWORD *)(((v2 + 2528) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 96);
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v14 )
  {
    *(_DWORD *)(((v2 + 2592) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2592) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2623) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 2623) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2592, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2592),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      447);
    v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2592),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v15, (const char (*)[39])byte_1A46B5E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2592));
    *(_DWORD *)(((v2 + 2592) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 2656) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 112);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2656),
    &byte_1A46B640,
    (const std::allocator<char> *)(v2 + 112));
  v16 = common::tools::TxtFile::Row::assignToEnum<data::QuestShowType>(
          row,
          (const std::string *)(v2 + 2656),
          &this->show_type) != 0;
  std::string::~string((void *)(v2 + 2656));
  *(_DWORD *)(((v2 + 2656) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 112);
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
  if ( v16 )
  {
    *(_DWORD *)(((v2 + 2720) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2720) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2751) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 2751) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2720, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2720),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      452);
    v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2720),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v17, (const char (*)[33])byte_1A46B680);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2720));
    *(_DWORD *)(((v2 + 2720) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 2784) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 128);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2784),
    asc_1A46B6E0,
    (const std::allocator<char> *)(v2 + 128));
  v18 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
          row,
          (const std::string *)(v2 + 2784),
          &this->accept_cond_comb) != 0;
  std::string::~string((void *)(v2 + 2784));
  *(_DWORD *)(((v2 + 2784) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 128);
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
  if ( v18 )
  {
    *(_DWORD *)(((v2 + 2848) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2848) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2879) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 2879) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2848, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2848),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      457);
    v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2848),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v19, (const char (*)[41])byte_1A46B720);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2848));
    *(_DWORD *)(((v2 + 2848) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  std::vector<data::QuestCond>::resize(&this->accept_cond, 0xAuLL);
  array_count = 0;
  for ( i = 0; i <= 9; ++i )
  {
    snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46B780, i + 1);
    *(_DWORD *)(((v2 + 2912) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 144);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 2912),
      (const char *)(v2 + 10400),
      (const std::allocator<char> *)(v2 + 144));
    v20 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 2912));
    std::string::~string((void *)(v2 + 2912));
    *(_DWORD *)(((v2 + 2912) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 144);
    *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
    if ( !v20 )
    {
      p_type = &std::vector<data::QuestCond>::operator[](&this->accept_cond, i)->type;
      *(_DWORD *)(((v2 + 2976) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 160);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 2976),
        (const char *)(v2 + 10400),
        (const std::allocator<char> *)(v2 + 160));
      LOBYTE(p_type) = common::tools::TxtFile::Row::assignToEnum<data::QuestCondType>(
                         row,
                         (const std::string *)(v2 + 2976),
                         p_type) != 0;
      std::string::~string((void *)(v2 + 2976));
      *(_DWORD *)(((v2 + 2976) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 160);
      *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)p_type )
      {
        *(_DWORD *)(((v2 + 3040) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 3040) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 3071) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 3071) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 3040, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 3040),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          469);
        v22 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 3040),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v23 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v22, (const char (*)[14])byte_1A451DC0);
        v24 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v23, (const char (*)[256])(v2 + 10400));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v24, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3040));
        *(_DWORD *)(((v2 + 3040) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
        goto LABEL_318;
      }
      v25 = std::vector<data::QuestCond>::operator[](&this->accept_cond, i);
      std::vector<int>::resize(&v25->param, 5uLL);
      array_counta = 0;
      for ( j = 0; ; ++j )
      {
        if ( j > 4 )
        {
          v32 = std::vector<data::QuestCond>::operator[](&this->accept_cond, i);
          std::vector<int>::resize(&v32->param, array_counta);
          array_count = i + 1;
          break;
        }
        snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46B7C0, i + 1, j + 1);
        *(_DWORD *)(((v2 + 3104) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 176);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 3104),
          (const char *)(v2 + 10400),
          (const std::allocator<char> *)(v2 + 176));
        v26 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3104));
        std::string::~string((void *)(v2 + 3104));
        *(_DWORD *)(((v2 + 3104) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 176);
        *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
        if ( !v26 )
        {
          v27 = std::vector<data::QuestCond>::operator[](&this->accept_cond, i);
          v28 = std::vector<int>::operator[](&v27->param, j);
          *(_DWORD *)(((v2 + 3168) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 192);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 3168),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 192));
          LOBYTE(v28) = common::tools::TxtFile::Row::assignToNum<int>(row, (const std::string *)(v2 + 3168), v28) != 0;
          std::string::~string((void *)(v2 + 3168));
          *(_DWORD *)(((v2 + 3168) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 192);
          *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v28 )
          {
            *(_DWORD *)(((v2 + 3232) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 3232) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 3263) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 3263) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 3232, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 3232),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              481);
            v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 3232),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v30 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                    v29,
                    (const char (*)[14])byte_1A451DC0);
            v31 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                    v30,
                    (const char (*)[256])(v2 + 10400));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v31, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3232));
            *(_DWORD *)(((v2 + 3232) >> 3) + 0x7FFF8000) = -117901064;
            v7 = -1;
            goto LABEL_318;
          }
          array_counta = j + 1;
        }
      }
    }
  }
  std::vector<data::QuestCond>::resize(&this->accept_cond, array_count);
  *(_DWORD *)(((v2 + 3296) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 208);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3296),
    asc_1A46B800,
    (const std::allocator<char> *)(v2 + 208));
  v33 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
          row,
          (const std::string *)(v2 + 3296),
          &this->finish_cond_comb) != 0;
  std::string::~string((void *)(v2 + 3296));
  *(_DWORD *)(((v2 + 3296) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 208);
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
  if ( v33 )
  {
    *(_DWORD *)(((v2 + 3360) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 3360) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 3391) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 3391) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 3360, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 3360),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      494);
    v34 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 3360),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v34, (const char (*)[41])byte_1A46B840);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3360));
    *(_DWORD *)(((v2 + 3360) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  std::vector<data::QuestContent>::resize(&this->finish_cond, 6uLL);
  array_countb = 0;
  for ( i_0 = 0; i_0 <= 5; ++i_0 )
  {
    snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46B8A0, i_0 + 1);
    *(_DWORD *)(((v2 + 3424) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 224);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 3424),
      (const char *)(v2 + 10400),
      (const std::allocator<char> *)(v2 + 224));
    v35 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3424));
    std::string::~string((void *)(v2 + 3424));
    *(_DWORD *)(((v2 + 3424) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 224);
    *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
    if ( !v35 )
    {
      v36 = &std::vector<data::QuestContent>::operator[](&this->finish_cond, i_0)->type;
      *(_DWORD *)(((v2 + 3488) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 240);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 3488),
        (const char *)(v2 + 10400),
        (const std::allocator<char> *)(v2 + 240));
      LOBYTE(v36) = common::tools::TxtFile::Row::assignToEnum<data::QuestContentType>(
                      row,
                      (const std::string *)(v2 + 3488),
                      v36) != 0;
      std::string::~string((void *)(v2 + 3488));
      *(_DWORD *)(((v2 + 3488) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 240);
      *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v36 )
      {
        *(_DWORD *)(((v2 + 3552) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 3552) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 3583) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 3583) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 3552, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 3552),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          506);
        v37 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 3552),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v38 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v37, (const char (*)[14])byte_1A451DC0);
        v39 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v38, (const char (*)[256])(v2 + 10400));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v39, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3552));
        *(_DWORD *)(((v2 + 3552) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
      }
      else
      {
        v40 = std::vector<data::QuestContent>::operator[](&this->finish_cond, i_0);
        std::vector<int>::resize(&v40->param, 2uLL);
        array_countb = 0;
        for ( j_0 = 0; j_0 <= 1; ++j_0 )
        {
          snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46B8E0, i_0 + 1, j_0 + 1);
          *(_DWORD *)(((v2 + 3616) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 256);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 3616),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 256));
          v41 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3616));
          std::string::~string((void *)(v2 + 3616));
          *(_DWORD *)(((v2 + 3616) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 256);
          *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
          if ( !v41 )
          {
            v42 = std::vector<data::QuestContent>::operator[](&this->finish_cond, i_0);
            v43 = std::vector<int>::operator[](&v42->param, j_0);
            *(_DWORD *)(((v2 + 3680) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 272);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 3680),
              (const char *)(v2 + 10400),
              (const std::allocator<char> *)(v2 + 272));
            LOBYTE(v43) = common::tools::TxtFile::Row::assignToNum<int>(row, (const std::string *)(v2 + 3680), v43) != 0;
            std::string::~string((void *)(v2 + 3680));
            *(_DWORD *)(((v2 + 3680) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 272);
            *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
            if ( (_BYTE)v43 )
            {
              *(_DWORD *)(((v2 + 3744) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 3744) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 3775) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 3775) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 3744, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 3744),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                518);
              v44 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 3744),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v45 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                      v44,
                      (const char (*)[14])byte_1A451DC0);
              v46 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                      v45,
                      (const char (*)[256])(v2 + 10400));
              common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v46, (const char (*)[7])byte_1A451E00);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3744));
              *(_DWORD *)(((v2 + 3744) >> 3) + 0x7FFF8000) = -117901064;
              v7 = -1;
              goto LABEL_318;
            }
            array_countb = j_0 + 1;
          }
        }
        v47 = std::vector<data::QuestContent>::operator[](&this->finish_cond, i_0);
        std::vector<int>::resize(&v47->param, array_countb);
        snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46B920, i_0 + 1);
        *(_DWORD *)(((v2 + 3808) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 288);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 3808),
          (const char *)(v2 + 10400),
          (const std::allocator<char> *)(v2 + 288));
        v48 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3808));
        std::string::~string((void *)(v2 + 3808));
        *(_DWORD *)(((v2 + 3808) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 288);
        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
        if ( v48 )
          continue;
        p_param_str = &std::vector<data::QuestContent>::operator[](&this->finish_cond, i_0)->param_str;
        *(_DWORD *)(((v2 + 3872) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 304);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 3872),
          (const char *)(v2 + 10400),
          (const std::allocator<char> *)(v2 + 304));
        LOBYTE(p_param_str) = common::tools::TxtFile::Row::assignToStr(
                                row,
                                (const std::string *)(v2 + 3872),
                                p_param_str) != 0;
        std::string::~string((void *)(v2 + 3872));
        *(_DWORD *)(((v2 + 3872) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 304);
        *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
        if ( (_BYTE)p_param_str )
        {
          *(_DWORD *)(((v2 + 3936) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 3936) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 3967) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 3967) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 3936, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 3936),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            530);
          v50 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 3936),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v51 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v50, (const char (*)[14])byte_1A451DC0);
          v52 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                  v51,
                  (const char (*)[256])(v2 + 10400));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v52, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3936));
          *(_DWORD *)(((v2 + 3936) >> 3) + 0x7FFF8000) = -117901064;
          v7 = -1;
        }
        else
        {
          snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46B960, i_0 + 1);
          *(_DWORD *)(((v2 + 4000) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 320);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 4000),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 320));
          v53 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 4000));
          std::string::~string((void *)(v2 + 4000));
          *(_DWORD *)(((v2 + 4000) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 320);
          *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
          if ( v53 )
            continue;
          p_count = &std::vector<data::QuestContent>::operator[](&this->finish_cond, i_0)->count;
          *(_DWORD *)(((v2 + 4064) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 336);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 4064),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 336));
          LOBYTE(p_count) = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                              row,
                              (const std::string *)(v2 + 4064),
                              p_count) != 0;
          std::string::~string((void *)(v2 + 4064));
          *(_DWORD *)(((v2 + 4064) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 336);
          *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
          if ( !(_BYTE)p_count )
          {
            array_countb = i_0 + 1;
            continue;
          }
          *(_DWORD *)(((v2 + 4128) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 4128) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 4159) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 4159) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 4128, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 4128),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            538);
          v55 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 4128),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v56 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v55, (const char (*)[14])byte_1A451DC0);
          v57 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                  v56,
                  (const char (*)[256])(v2 + 10400));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v57, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4128));
          *(_DWORD *)(((v2 + 4128) >> 3) + 0x7FFF8000) = -117901064;
          v7 = -1;
        }
      }
      goto LABEL_318;
    }
  }
  std::vector<data::QuestContent>::resize(&this->finish_cond, array_countb);
  *(_DWORD *)(((v2 + 4192) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 352);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 4192),
    asc_1A46B9A0,
    (const std::allocator<char> *)(v2 + 352));
  v58 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
          row,
          (const std::string *)(v2 + 4192),
          &this->fail_cond_comb) != 0;
  std::string::~string((void *)(v2 + 4192));
  *(_DWORD *)(((v2 + 4192) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 352);
  *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
  if ( v58 )
  {
    *(_DWORD *)(((v2 + 4256) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 4256) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 4287) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 4287) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 4256, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 4256),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      547);
    v59 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 4256),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v59, (const char (*)[41])byte_1A46B9E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4256));
    *(_DWORD *)(((v2 + 4256) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  std::vector<data::QuestContent>::resize(&this->fail_cond, 6uLL);
  array_countc = 0;
  for ( i_1 = 0; i_1 <= 5; ++i_1 )
  {
    snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46BA40, i_1 + 1);
    *(_DWORD *)(((v2 + 4320) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 368);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 4320),
      (const char *)(v2 + 10400),
      (const std::allocator<char> *)(v2 + 368));
    v60 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 4320));
    std::string::~string((void *)(v2 + 4320));
    *(_DWORD *)(((v2 + 4320) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 368);
    *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = -8;
    if ( !v60 )
    {
      v61 = &std::vector<data::QuestContent>::operator[](&this->fail_cond, i_1)->type;
      *(_DWORD *)(((v2 + 4384) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 384);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 4384),
        (const char *)(v2 + 10400),
        (const std::allocator<char> *)(v2 + 384));
      LOBYTE(v61) = common::tools::TxtFile::Row::assignToEnum<data::QuestContentType>(
                      row,
                      (const std::string *)(v2 + 4384),
                      v61) != 0;
      std::string::~string((void *)(v2 + 4384));
      *(_DWORD *)(((v2 + 4384) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 384);
      *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v61 )
      {
        *(_DWORD *)(((v2 + 4448) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 4448) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 4479) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 4479) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 4448, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 4448),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          559);
        v62 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 4448),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v63 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v62, (const char (*)[14])byte_1A451DC0);
        v64 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v63, (const char (*)[256])(v2 + 10400));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v64, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4448));
        *(_DWORD *)(((v2 + 4448) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
      }
      else
      {
        v65 = std::vector<data::QuestContent>::operator[](&this->fail_cond, i_1);
        std::vector<int>::resize(&v65->param, 2uLL);
        array_countc = 0;
        for ( j_1 = 0; j_1 <= 1; ++j_1 )
        {
          snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46BA80, i_1 + 1, j_1 + 1);
          *(_DWORD *)(((v2 + 4512) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 400);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 4512),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 400));
          v66 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 4512));
          std::string::~string((void *)(v2 + 4512));
          *(_DWORD *)(((v2 + 4512) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 400);
          *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = -8;
          if ( !v66 )
          {
            v67 = std::vector<data::QuestContent>::operator[](&this->fail_cond, i_1);
            v68 = std::vector<int>::operator[](&v67->param, j_1);
            *(_DWORD *)(((v2 + 4576) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 416);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 4576),
              (const char *)(v2 + 10400),
              (const std::allocator<char> *)(v2 + 416));
            LOBYTE(v68) = common::tools::TxtFile::Row::assignToNum<int>(row, (const std::string *)(v2 + 4576), v68) != 0;
            std::string::~string((void *)(v2 + 4576));
            *(_DWORD *)(((v2 + 4576) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 416);
            *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = -8;
            if ( (_BYTE)v68 )
            {
              *(_DWORD *)(((v2 + 4640) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 4640) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 4671) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 4671) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 4640, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 4640),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                571);
              v69 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 4640),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v70 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                      v69,
                      (const char (*)[14])byte_1A451DC0);
              v71 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                      v70,
                      (const char (*)[256])(v2 + 10400));
              common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v71, (const char (*)[7])byte_1A451E00);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4640));
              *(_DWORD *)(((v2 + 4640) >> 3) + 0x7FFF8000) = -117901064;
              v7 = -1;
              goto LABEL_318;
            }
            array_countc = j_1 + 1;
          }
        }
        v72 = std::vector<data::QuestContent>::operator[](&this->fail_cond, i_1);
        std::vector<int>::resize(&v72->param, array_countc);
        snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46BAC0, i_1 + 1);
        *(_DWORD *)(((v2 + 4704) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 432);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 4704),
          (const char *)(v2 + 10400),
          (const std::allocator<char> *)(v2 + 432));
        v73 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 4704));
        std::string::~string((void *)(v2 + 4704));
        *(_DWORD *)(((v2 + 4704) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 432);
        *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = -8;
        if ( v73 )
          continue;
        v74 = &std::vector<data::QuestContent>::operator[](&this->fail_cond, i_1)->param_str;
        *(_DWORD *)(((v2 + 4768) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 448);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 4768),
          (const char *)(v2 + 10400),
          (const std::allocator<char> *)(v2 + 448));
        LOBYTE(v74) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 4768), v74) != 0;
        std::string::~string((void *)(v2 + 4768));
        *(_DWORD *)(((v2 + 4768) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 448);
        *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = -8;
        if ( (_BYTE)v74 )
        {
          *(_DWORD *)(((v2 + 4832) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 4832) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 4863) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 4863) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 4832, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 4832),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            583);
          v75 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 4832),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v76 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v75, (const char (*)[14])byte_1A451DC0);
          v77 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                  v76,
                  (const char (*)[256])(v2 + 10400));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v77, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4832));
          *(_DWORD *)(((v2 + 4832) >> 3) + 0x7FFF8000) = -117901064;
          v7 = -1;
        }
        else
        {
          snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46BB00, i_1 + 1);
          *(_DWORD *)(((v2 + 4896) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 464);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 4896),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 464));
          v78 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 4896));
          std::string::~string((void *)(v2 + 4896));
          *(_DWORD *)(((v2 + 4896) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 464);
          *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) = -8;
          if ( v78 )
            continue;
          v79 = &std::vector<data::QuestContent>::operator[](&this->fail_cond, i_1)->count;
          *(_DWORD *)(((v2 + 4960) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 480);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 4960),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 480));
          LOBYTE(v79) = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                          row,
                          (const std::string *)(v2 + 4960),
                          v79) != 0;
          std::string::~string((void *)(v2 + 4960));
          *(_DWORD *)(((v2 + 4960) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 480);
          *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = -8;
          if ( !(_BYTE)v79 )
          {
            array_countc = i_1 + 1;
            continue;
          }
          *(_DWORD *)(((v2 + 5024) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 5024) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 5055) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 5055) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 5024, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 5024),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            591);
          v80 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 5024),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v81 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v80, (const char (*)[14])byte_1A451DC0);
          v82 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                  v81,
                  (const char (*)[256])(v2 + 10400));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v82, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5024));
          *(_DWORD *)(((v2 + 5024) >> 3) + 0x7FFF8000) = -117901064;
          v7 = -1;
        }
      }
      goto LABEL_318;
    }
  }
  std::vector<data::QuestContent>::resize(&this->fail_cond, array_countc);
  *(_DWORD *)(((v2 + 5088) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 496);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 5088),
    asc_1A46BB40,
    (const std::allocator<char> *)(v2 + 496));
  v83 = common::tools::TxtFile::Row::assignToEnum<data::QuestGuideType>(
          row,
          (const std::string *)(v2 + 5088),
          &this->guide.type) != 0;
  std::string::~string((void *)(v2 + 5088));
  *(_DWORD *)(((v2 + 5088) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 496);
  *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) = -8;
  if ( v83 )
  {
    *(_DWORD *)(((v2 + 5152) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 5152) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 5183) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 5183) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 5152, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 5152),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      600);
    v84 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 5152),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v84, (const char (*)[41])byte_1A46BB80);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5152));
    *(_DWORD *)(((v2 + 5152) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 5216) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 512);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 5216),
    asc_1A46BBE0,
    (const std::allocator<char> *)(v2 + 512));
  v85 = common::tools::TxtFile::Row::assignToEnum<data::QuestGuideAuto>(
          row,
          (const std::string *)(v2 + 5216),
          &this->guide.auto_guide) != 0;
  std::string::~string((void *)(v2 + 5216));
  *(_DWORD *)(((v2 + 5216) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 512);
  *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) = -8;
  if ( v85 )
  {
    *(_DWORD *)(((v2 + 5280) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 5280) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 5311) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 5311) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 5280, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 5280),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      605);
    v86 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 5280),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(v86, (const char (*)[56])byte_1A46BC40);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5280));
    *(_DWORD *)(((v2 + 5280) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  std::vector<std::string>::resize(&this->guide.param, 5uLL);
  array_countd = 0;
  for ( i_2 = 0; i_2 <= 4; ++i_2 )
  {
    snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46BCA0, i_2 + 1);
    *(_DWORD *)(((v2 + 5344) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 528);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 5344),
      (const char *)(v2 + 10400),
      (const std::allocator<char> *)(v2 + 528));
    v87 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 5344));
    std::string::~string((void *)(v2 + 5344));
    *(_DWORD *)(((v2 + 5344) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 528);
    *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) = -8;
    if ( !v87 )
    {
      v88 = std::vector<std::string>::operator[](&this->guide.param, i_2);
      *(_DWORD *)(((v2 + 5408) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 544);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 5408),
        (const char *)(v2 + 10400),
        (const std::allocator<char> *)(v2 + 544));
      LOBYTE(v88) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 5408), v88) != 0;
      std::string::~string((void *)(v2 + 5408));
      *(_DWORD *)(((v2 + 5408) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 544);
      *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v88 )
      {
        *(_DWORD *)(((v2 + 5472) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 5472) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 5503) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 5503) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 5472, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 5472),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          617);
        v89 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 5472),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v90 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v89, (const char (*)[14])byte_1A451DC0);
        v91 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v90, (const char (*)[256])(v2 + 10400));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v91, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5472));
        *(_DWORD *)(((v2 + 5472) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
        goto LABEL_318;
      }
      array_countd = i_2 + 1;
    }
  }
  std::vector<std::string>::resize(&this->guide.param, array_countd);
  *(_DWORD *)(((v2 + 5536) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 560);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 5536),
    asc_1A46BCE0,
    (const std::allocator<char> *)(v2 + 560));
  v92 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
          row,
          (const std::string *)(v2 + 5536),
          &this->guide.guide_scene) != 0;
  std::string::~string((void *)(v2 + 5536));
  *(_DWORD *)(((v2 + 5536) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 560);
  *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) = -8;
  if ( v92 )
  {
    *(_DWORD *)(((v2 + 5600) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 5600) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 5631) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 5631) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 5600, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 5600),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      626);
    v93 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 5600),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(v93, (const char (*)[43])byte_1A46BD20);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5600));
    *(_DWORD *)(((v2 + 5600) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 5664) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 576);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 5664),
    asc_1A46BD80,
    (const std::allocator<char> *)(v2 + 576));
  v94 = common::tools::TxtFile::Row::assignToEnum<data::QuestGuideStyle>(
          row,
          (const std::string *)(v2 + 5664),
          &this->guide.guide_style) != 0;
  std::string::~string((void *)(v2 + 5664));
  *(_DWORD *)(((v2 + 5664) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 576);
  *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) = -8;
  if ( v94 )
  {
    *(_DWORD *)(((v2 + 5728) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 5728) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 5759) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 5759) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 5728, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 5728),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      631);
    v95 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 5728),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v95, (const char (*)[41])byte_1A46BDC0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5728));
    *(_DWORD *)(((v2 + 5728) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 5792) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 592);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 5792),
    asc_1A46BE20,
    (const std::allocator<char> *)(v2 + 592));
  v96 = common::tools::TxtFile::Row::assignToEnum<data::QuestGuideLayer>(
          row,
          (const std::string *)(v2 + 5792),
          &this->guide.guide_layer) != 0;
  std::string::~string((void *)(v2 + 5792));
  *(_DWORD *)(((v2 + 5792) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 592);
  *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) = -8;
  if ( v96 )
  {
    *(_DWORD *)(((v2 + 5856) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 5856) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 5887) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 5887) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 5856, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 5856),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      636);
    v97 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 5856),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(v97, (const char (*)[47])byte_1A46BE60);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5856));
    *(_DWORD *)(((v2 + 5856) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 5920) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 608);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 5920),
    &byte_1A46BEC0,
    (const std::allocator<char> *)(v2 + 608));
  v98 = common::tools::TxtFile::Row::assignToEnum<data::ShowQuestGuideType>(
          row,
          (const std::string *)(v2 + 5920),
          &this->show_guide) != 0;
  std::string::~string((void *)(v2 + 5920));
  *(_DWORD *)(((v2 + 5920) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 608);
  *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) = -8;
  if ( v98 )
  {
    *(_DWORD *)(((v2 + 5984) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 5984) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 6015) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 6015) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 5984, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 5984),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      641);
    v99 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 5984),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v99, (const char (*)[36])byte_1A46BF00);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5984));
    *(_DWORD *)(((v2 + 5984) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 6048) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 624);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 6048),
    &byte_1A46BF60,
    (const std::allocator<char> *)(v2 + 624));
  v100 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 6048), &this->finish_parent) != 0;
  std::string::~string((void *)(v2 + 6048));
  *(_DWORD *)(((v2 + 6048) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 624);
  *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) = -8;
  if ( v100 )
  {
    *(_DWORD *)(((v2 + 6112) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 6112) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 6143) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 6143) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 6112, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 6112),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      646);
    v101 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 6112),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v101, (const char (*)[36])byte_1A46BFA0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6112));
    *(_DWORD *)(((v2 + 6112) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 6176) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 640);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 6176),
    &byte_1A46C000,
    (const std::allocator<char> *)(v2 + 640));
  v102 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 6176), &this->fail_parent) != 0;
  std::string::~string((void *)(v2 + 6176));
  *(_DWORD *)(((v2 + 6176) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 640);
  *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) = -8;
  if ( v102 )
  {
    *(_DWORD *)(((v2 + 6240) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 6240) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 6271) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 6271) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 6240, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 6240),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      651);
    v103 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 6240),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v103, (const char (*)[36])byte_1A46C040);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6240));
    *(_DWORD *)(((v2 + 6240) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 6304) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 656);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 6304),
    &byte_1A46C0A0,
    (const std::allocator<char> *)(v2 + 656));
  v104 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 6304), &this->is_rewind) != 0;
  std::string::~string((void *)(v2 + 6304));
  *(_DWORD *)(((v2 + 6304) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 656);
  *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) = -8;
  if ( v104 )
  {
    *(_DWORD *)(((v2 + 6368) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 6368) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 6399) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 6399) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 6368, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 6368),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      656);
    v105 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 6368),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v105, (const char (*)[33])byte_1A46C0E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6368));
    *(_DWORD *)(((v2 + 6368) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 6432) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 672);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 6432),
    asc_1A46C140,
    (const std::allocator<char> *)(v2 + 672));
  v106 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 6432), (std::string *)(v2 + 1952)) != 0;
  std::string::~string((void *)(v2 + 6432));
  *(_DWORD *)(((v2 + 6432) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 672);
  *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) = -8;
  if ( v106 )
  {
    *(_DWORD *)(((v2 + 6496) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 6496) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 6527) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 6527) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 6496, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 6496),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      661);
    v107 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 6496),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(v107, (const char (*)[37])byte_1A46C180);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6496));
    *(_DWORD *)(((v2 + 6496) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  v108 = ((v2 + 1440) >> 3) + 2147450880;
  *(_WORD *)v108 = 0;
  *(_BYTE *)(v108 + 2) = 0;
  v109 = (_DWORD *)(((v2 + 9632) >> 3) + 2147450880);
  *v109 = 0;
  v109[1] = 0;
  *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 688);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 9632),
    ";",
    (const std::allocator<char> *)(v2 + 688));
  *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 704);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 9664),
    ",",
    (const std::allocator<char> *)(v2 + 704));
  __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 9632);
  __l._M_len = 2LL;
  *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) = 1;
  std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 720));
  std::vector<std::string>::vector(
    (std::vector<std::string> *const)(v2 + 1440),
    __l,
    (const std::vector<std::string>::allocator_type *)(v2 + 720));
  v110 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
           (const std::string *)(v2 + 1952),
           (const std::vector<std::string> *)(v2 + 1440),
           &this->quest_item_id_list,
           1) != 0;
  std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 1440));
  v111 = ((v2 + 1440) >> 3) + 2147450880;
  *(_WORD *)v111 = -1800;
  *(_BYTE *)(v111 + 2) = -8;
  std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 720));
  *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) = -8;
  for ( k = (char *)(v2 + 9696); k != (char *)(v2 + 9632); std::string::~string(k) )
    k -= 32;
  v113 = (_DWORD *)(((v2 + 9632) >> 3) + 2147450880);
  *v113 = -117901064;
  v113[1] = -117901064;
  std::allocator<char>::~allocator(v2 + 704);
  *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) = -8;
  std::allocator<char>::~allocator(v2 + 688);
  *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) = -8;
  if ( v110 )
  {
    *(_DWORD *)(((v2 + 6560) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 6560) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 6591) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 6591) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 6560, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 6560),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      666);
    v114 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 6560),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(v114, (const char (*)[37])byte_1A46C180);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6560));
    *(_DWORD *)(((v2 + 6560) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  *(_DWORD *)(((v2 + 6624) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 736);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 6624),
    asc_1A46C1E0,
    (const std::allocator<char> *)(v2 + 736));
  v115 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 6624), (std::string *)(v2 + 1952)) != 0;
  std::string::~string((void *)(v2 + 6624));
  *(_DWORD *)(((v2 + 6624) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 736);
  *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) = -8;
  if ( v115 )
  {
    *(_DWORD *)(((v2 + 6688) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 6688) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 6719) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 6719) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 6688, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 6688),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      671);
    v116 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 6688),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v116, (const char (*)[41])byte_1A46C220);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6688));
    *(_DWORD *)(((v2 + 6688) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  v117 = ((v2 + 1504) >> 3) + 2147450880;
  *(_WORD *)v117 = 0;
  *(_BYTE *)(v117 + 2) = 0;
  v118 = (_DWORD *)(((v2 + 9728) >> 3) + 2147450880);
  *v118 = 0;
  v118[1] = 0;
  *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 752);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 9728),
    ";",
    (const std::allocator<char> *)(v2 + 752));
  *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 768);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 9760),
    ",",
    (const std::allocator<char> *)(v2 + 768));
  v227._M_array = (std::initializer_list<std::string >::iterator)(v2 + 9728);
  v227._M_len = 2LL;
  *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) = 1;
  std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 784));
  std::vector<std::string>::vector(
    (std::vector<std::string> *const)(v2 + 1504),
    v227,
    (const std::vector<std::string>::allocator_type *)(v2 + 784));
  v119 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
           (const std::string *)(v2 + 1952),
           (const std::vector<std::string> *)(v2 + 1504),
           &this->quest_item_num_list,
           1) != 0;
  std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 1504));
  v120 = ((v2 + 1504) >> 3) + 2147450880;
  *(_WORD *)v120 = -1800;
  *(_BYTE *)(v120 + 2) = -8;
  std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 784));
  *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) = -8;
  for ( m = (char *)(v2 + 9792); m != (char *)(v2 + 9728); std::string::~string(m) )
    m -= 32;
  v122 = (_DWORD *)(((v2 + 9728) >> 3) + 2147450880);
  *v122 = -117901064;
  v122[1] = -117901064;
  std::allocator<char>::~allocator(v2 + 768);
  *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) = -8;
  std::allocator<char>::~allocator(v2 + 752);
  *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) = -8;
  if ( v119 )
  {
    *(_DWORD *)(((v2 + 6752) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 6752) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 6783) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 6783) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 6752, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 6752),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      676);
    v123 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 6752),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v123, (const char (*)[41])byte_1A46C220);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6752));
    *(_DWORD *)(((v2 + 6752) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_318;
  }
  std::vector<data::QuestExec>::resize(&this->finish_exec, 5uLL);
  array_counte = 0;
  for ( i_3 = 0; i_3 <= 4; ++i_3 )
  {
    snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46C280, i_3 + 1);
    *(_DWORD *)(((v2 + 6816) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 800);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 6816),
      (const char *)(v2 + 10400),
      (const std::allocator<char> *)(v2 + 800));
    v124 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 6816));
    std::string::~string((void *)(v2 + 6816));
    *(_DWORD *)(((v2 + 6816) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 800);
    *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) = -8;
    if ( !v124 )
    {
      v125 = &std::vector<data::QuestExec>::operator[](&this->finish_exec, i_3)->type;
      *(_DWORD *)(((v2 + 6880) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 816);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 6880),
        (const char *)(v2 + 10400),
        (const std::allocator<char> *)(v2 + 816));
      LOBYTE(v125) = common::tools::TxtFile::Row::assignToEnum<data::QuestExecType>(
                       row,
                       (const std::string *)(v2 + 6880),
                       v125) != 0;
      std::string::~string((void *)(v2 + 6880));
      *(_DWORD *)(((v2 + 6880) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 816);
      *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v125 )
      {
        *(_DWORD *)(((v2 + 6944) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 6944) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 6975) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 6975) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 6944, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 6944),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          688);
        v126 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 6944),
                 (const char (*)[16])"[CONFIG_ERROR] ");
        v127 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v126, (const char (*)[14])byte_1A451DC0);
        v128 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                 v127,
                 (const char (*)[256])(v2 + 10400));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v128, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6944));
        *(_DWORD *)(((v2 + 6944) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
        goto LABEL_318;
      }
      v129 = std::vector<data::QuestExec>::operator[](&this->finish_exec, i_3);
      std::vector<std::string>::resize(&v129->param, 5uLL);
      array_countf = 0;
      for ( j_2 = 0; ; ++j_2 )
      {
        if ( j_2 > 4 )
        {
          v136 = std::vector<data::QuestExec>::operator[](&this->finish_exec, i_3);
          std::vector<std::string>::resize(&v136->param, array_countf);
          array_counte = i_3 + 1;
          break;
        }
        snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46C2C0, i_3 + 1, j_2 + 1);
        *(_DWORD *)(((v2 + 7008) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 832);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 7008),
          (const char *)(v2 + 10400),
          (const std::allocator<char> *)(v2 + 832));
        v130 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 7008));
        std::string::~string((void *)(v2 + 7008));
        *(_DWORD *)(((v2 + 7008) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 832);
        *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) = -8;
        if ( !v130 )
        {
          v131 = std::vector<data::QuestExec>::operator[](&this->finish_exec, i_3);
          v132 = std::vector<std::string>::operator[](&v131->param, j_2);
          *(_DWORD *)(((v2 + 7072) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 848);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 7072),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 848));
          LOBYTE(v132) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 7072), v132) != 0;
          std::string::~string((void *)(v2 + 7072));
          *(_DWORD *)(((v2 + 7072) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 848);
          *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v132 )
          {
            *(_DWORD *)(((v2 + 7136) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 7136) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 7167) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 7167) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 7136, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 7136),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              700);
            v133 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                     (common::milog::MiLogStream *const)(v2 + 7136),
                     (const char (*)[16])"[CONFIG_ERROR] ");
            v134 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                     v133,
                     (const char (*)[14])byte_1A451DC0);
            v135 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                     v134,
                     (const char (*)[256])(v2 + 10400));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v135, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 7136));
            *(_DWORD *)(((v2 + 7136) >> 3) + 0x7FFF8000) = -117901064;
            v7 = -1;
            goto LABEL_318;
          }
          array_countf = j_2 + 1;
        }
      }
    }
  }
  std::vector<data::QuestExec>::resize(&this->finish_exec, array_counte);
  std::vector<data::QuestExec>::resize(&this->fail_exec, 5uLL);
  array_countg = 0;
  for ( i_4 = 0; i_4 <= 4; ++i_4 )
  {
    snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46C300, i_4 + 1);
    *(_DWORD *)(((v2 + 7200) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 864);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 7200),
      (const char *)(v2 + 10400),
      (const std::allocator<char> *)(v2 + 864));
    v137 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 7200));
    std::string::~string((void *)(v2 + 7200));
    *(_DWORD *)(((v2 + 7200) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 864);
    *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) = -8;
    if ( !v137 )
    {
      v138 = &std::vector<data::QuestExec>::operator[](&this->fail_exec, i_4)->type;
      *(_DWORD *)(((v2 + 7264) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 880);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 7264),
        (const char *)(v2 + 10400),
        (const std::allocator<char> *)(v2 + 880));
      LOBYTE(v138) = common::tools::TxtFile::Row::assignToEnum<data::QuestExecType>(
                       row,
                       (const std::string *)(v2 + 7264),
                       v138) != 0;
      std::string::~string((void *)(v2 + 7264));
      *(_DWORD *)(((v2 + 7264) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 880);
      *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v138 )
      {
        *(_DWORD *)(((v2 + 7328) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 7328) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 7359) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 7359) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 7328, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 7328),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          720);
        v139 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 7328),
                 (const char (*)[16])"[CONFIG_ERROR] ");
        v140 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v139, (const char (*)[14])byte_1A451DC0);
        v141 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                 v140,
                 (const char (*)[256])(v2 + 10400));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v141, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 7328));
        *(_DWORD *)(((v2 + 7328) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
        goto LABEL_318;
      }
      v142 = std::vector<data::QuestExec>::operator[](&this->fail_exec, i_4);
      std::vector<std::string>::resize(&v142->param, 5uLL);
      array_counth = 0;
      for ( j_3 = 0; ; ++j_3 )
      {
        if ( j_3 > 4 )
        {
          v149 = std::vector<data::QuestExec>::operator[](&this->fail_exec, i_4);
          std::vector<std::string>::resize(&v149->param, array_counth);
          array_countg = i_4 + 1;
          break;
        }
        snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46C340, i_4 + 1, j_3 + 1);
        *(_DWORD *)(((v2 + 7392) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 896);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 7392),
          (const char *)(v2 + 10400),
          (const std::allocator<char> *)(v2 + 896));
        v143 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 7392));
        std::string::~string((void *)(v2 + 7392));
        *(_DWORD *)(((v2 + 7392) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 896);
        *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) = -8;
        if ( !v143 )
        {
          v144 = std::vector<data::QuestExec>::operator[](&this->fail_exec, i_4);
          v145 = std::vector<std::string>::operator[](&v144->param, j_3);
          *(_DWORD *)(((v2 + 7456) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 912);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 7456),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 912));
          LOBYTE(v145) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 7456), v145) != 0;
          std::string::~string((void *)(v2 + 7456));
          *(_DWORD *)(((v2 + 7456) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 912);
          *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v145 )
          {
            *(_DWORD *)(((v2 + 7520) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 7520) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 7551) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 7551) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 7520, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 7520),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              732);
            v146 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                     (common::milog::MiLogStream *const)(v2 + 7520),
                     (const char (*)[16])"[CONFIG_ERROR] ");
            v147 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                     v146,
                     (const char (*)[14])byte_1A451DC0);
            v148 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                     v147,
                     (const char (*)[256])(v2 + 10400));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v148, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 7520));
            *(_DWORD *)(((v2 + 7520) >> 3) + 0x7FFF8000) = -117901064;
            v7 = -1;
            goto LABEL_318;
          }
          array_counth = j_3 + 1;
        }
      }
    }
  }
  std::vector<data::QuestExec>::resize(&this->fail_exec, array_countg);
  std::vector<data::QuestExec>::resize(&this->begin_exec, 5uLL);
  array_counti = 0;
  for ( i_5 = 0; i_5 <= 4; ++i_5 )
  {
    snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46C380, i_5 + 1);
    *(_DWORD *)(((v2 + 7584) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 928);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 7584),
      (const char *)(v2 + 10400),
      (const std::allocator<char> *)(v2 + 928));
    v150 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 7584));
    std::string::~string((void *)(v2 + 7584));
    *(_DWORD *)(((v2 + 7584) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 928);
    *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) = -8;
    if ( !v150 )
    {
      v151 = &std::vector<data::QuestExec>::operator[](&this->begin_exec, i_5)->type;
      *(_DWORD *)(((v2 + 7648) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 944);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 7648),
        (const char *)(v2 + 10400),
        (const std::allocator<char> *)(v2 + 944));
      LOBYTE(v151) = common::tools::TxtFile::Row::assignToEnum<data::QuestExecType>(
                       row,
                       (const std::string *)(v2 + 7648),
                       v151) != 0;
      std::string::~string((void *)(v2 + 7648));
      *(_DWORD *)(((v2 + 7648) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 944);
      *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v151 )
      {
        *(_DWORD *)(((v2 + 7712) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 7712) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 7743) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 7743) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 7712, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 7712),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          752);
        v152 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 7712),
                 (const char (*)[16])"[CONFIG_ERROR] ");
        v153 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v152, (const char (*)[14])byte_1A451DC0);
        v154 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                 v153,
                 (const char (*)[256])(v2 + 10400));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v154, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 7712));
        *(_DWORD *)(((v2 + 7712) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
        goto LABEL_318;
      }
      v155 = std::vector<data::QuestExec>::operator[](&this->begin_exec, i_5);
      std::vector<std::string>::resize(&v155->param, 5uLL);
      array_countj = 0;
      for ( j_4 = 0; ; ++j_4 )
      {
        if ( j_4 > 4 )
        {
          v162 = std::vector<data::QuestExec>::operator[](&this->begin_exec, i_5);
          std::vector<std::string>::resize(&v162->param, array_countj);
          array_counti = i_5 + 1;
          break;
        }
        snprintf((char *)(v2 + 10400), 0x100uLL, asc_1A46C3C0, i_5 + 1, j_4 + 1);
        *(_DWORD *)(((v2 + 7776) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 960);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 7776),
          (const char *)(v2 + 10400),
          (const std::allocator<char> *)(v2 + 960));
        v156 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 7776));
        std::string::~string((void *)(v2 + 7776));
        *(_DWORD *)(((v2 + 7776) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 960);
        *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) = -8;
        if ( !v156 )
        {
          v157 = std::vector<data::QuestExec>::operator[](&this->begin_exec, i_5);
          v158 = std::vector<std::string>::operator[](&v157->param, j_4);
          *(_DWORD *)(((v2 + 7840) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 976);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 7840),
            (const char *)(v2 + 10400),
            (const std::allocator<char> *)(v2 + 976));
          LOBYTE(v158) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 7840), v158) != 0;
          std::string::~string((void *)(v2 + 7840));
          *(_DWORD *)(((v2 + 7840) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 976);
          *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v158 )
          {
            *(_DWORD *)(((v2 + 7904) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 7904) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 7935) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 7935) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 7904, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 7904),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              764);
            v159 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                     (common::milog::MiLogStream *const)(v2 + 7904),
                     (const char (*)[16])"[CONFIG_ERROR] ");
            v160 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                     v159,
                     (const char (*)[14])byte_1A451DC0);
            v161 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                     v160,
                     (const char (*)[256])(v2 + 10400));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v161, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 7904));
            *(_DWORD *)(((v2 + 7904) >> 3) + 0x7FFF8000) = -117901064;
            v7 = -1;
            goto LABEL_318;
          }
          array_countj = j_4 + 1;
        }
      }
    }
  }
  std::vector<data::QuestExec>::resize(&this->begin_exec, array_counti);
  *(_DWORD *)(((v2 + 7968) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 992);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 7968),
    &byte_1A46C400,
    (const std::allocator<char> *)(v2 + 992));
  v163 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 7968), (std::string *)(v2 + 1952)) != 0;
  std::string::~string((void *)(v2 + 7968));
  *(_DWORD *)(((v2 + 7968) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 992);
  *(_BYTE *)(((v2 + 992) >> 3) + 0x7FFF8000) = -8;
  if ( v163 )
  {
    *(_DWORD *)(((v2 + 8032) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 8032) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 8063) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 8063) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 8032, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 8032),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      777);
    v164 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 8032),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v164, (const char (*)[30])byte_1A46C440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8032));
    *(_DWORD *)(((v2 + 8032) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
  }
  else
  {
    v165 = ((v2 + 1568) >> 3) + 2147450880;
    *(_WORD *)v165 = 0;
    *(_BYTE *)(v165 + 2) = 0;
    v166 = (_DWORD *)(((v2 + 9824) >> 3) + 2147450880);
    *v166 = 0;
    v166[1] = 0;
    *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 1008);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 9824),
      ";",
      (const std::allocator<char> *)(v2 + 1008));
    *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 1024);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 9856),
      ",",
      (const std::allocator<char> *)(v2 + 1024));
    v228._M_array = (std::initializer_list<std::string >::iterator)(v2 + 9824);
    v228._M_len = 2LL;
    *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) = 1;
    std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 1040));
    std::vector<std::string>::vector(
      (std::vector<std::string> *const)(v2 + 1568),
      v228,
      (const std::vector<std::string>::allocator_type *)(v2 + 1040));
    v167 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
             (const std::string *)(v2 + 1952),
             (const std::vector<std::string> *)(v2 + 1568),
             &this->exclusive_npc_list,
             1) != 0;
    std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 1568));
    v168 = ((v2 + 1568) >> 3) + 2147450880;
    *(_WORD *)v168 = -1800;
    *(_BYTE *)(v168 + 2) = -8;
    std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 1040));
    *(_BYTE *)(((v2 + 1040) >> 3) + 0x7FFF8000) = -8;
    for ( n = (char *)(v2 + 9888); n != (char *)(v2 + 9824); std::string::~string(n) )
      n -= 32;
    v170 = (_DWORD *)(((v2 + 9824) >> 3) + 2147450880);
    *v170 = -117901064;
    v170[1] = -117901064;
    std::allocator<char>::~allocator(v2 + 1024);
    *(_BYTE *)(((v2 + 1024) >> 3) + 0x7FFF8000) = -8;
    std::allocator<char>::~allocator(v2 + 1008);
    *(_BYTE *)(((v2 + 1008) >> 3) + 0x7FFF8000) = -8;
    if ( v167 )
    {
      *(_DWORD *)(((v2 + 8096) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 8096) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 8127) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 8127) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 8096, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 8096),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        782);
      v171 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
               (common::milog::MiLogStream *const)(v2 + 8096),
               (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v171, (const char (*)[30])byte_1A46C440);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8096));
      *(_DWORD *)(((v2 + 8096) >> 3) + 0x7FFF8000) = -117901064;
      v7 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 8160) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 1056);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 8160),
        &byte_1A46C480,
        (const std::allocator<char> *)(v2 + 1056));
      v172 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 8160), (std::string *)(v2 + 1952)) != 0;
      std::string::~string((void *)(v2 + 8160));
      *(_DWORD *)(((v2 + 8160) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 1056);
      *(_BYTE *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -8;
      if ( v172 )
      {
        *(_DWORD *)(((v2 + 8224) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 8224) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 8255) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 8255) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 8224, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 8224),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          787);
        v173 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 8224),
                 (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v173, (const char (*)[30])byte_1A46C4C0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8224));
        *(_DWORD *)(((v2 + 8224) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
      }
      else
      {
        v174 = ((v2 + 1632) >> 3) + 2147450880;
        *(_WORD *)v174 = 0;
        *(_BYTE *)(v174 + 2) = 0;
        v175 = (_DWORD *)(((v2 + 9920) >> 3) + 2147450880);
        *v175 = 0;
        v175[1] = 0;
        *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 1072);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 9920),
          ";",
          (const std::allocator<char> *)(v2 + 1072));
        *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 1088);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 9952),
          ",",
          (const std::allocator<char> *)(v2 + 1088));
        v229._M_array = (std::initializer_list<std::string >::iterator)(v2 + 9920);
        v229._M_len = 2LL;
        *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) = 1;
        std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 1104));
        std::vector<std::string>::vector(
          (std::vector<std::string> *const)(v2 + 1632),
          v229,
          (const std::vector<std::string>::allocator_type *)(v2 + 1104));
        v176 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                 (const std::string *)(v2 + 1952),
                 (const std::vector<std::string> *)(v2 + 1632),
                 &this->shared_npc_list,
                 1) != 0;
        std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 1632));
        v177 = ((v2 + 1632) >> 3) + 2147450880;
        *(_WORD *)v177 = -1800;
        *(_BYTE *)(v177 + 2) = -8;
        std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 1104));
        *(_BYTE *)(((v2 + 1104) >> 3) + 0x7FFF8000) = -8;
        for ( ii = (char *)(v2 + 9984); ii != (char *)(v2 + 9920); std::string::~string(ii) )
          ii -= 32;
        v179 = (_DWORD *)(((v2 + 9920) >> 3) + 2147450880);
        *v179 = -117901064;
        v179[1] = -117901064;
        std::allocator<char>::~allocator(v2 + 1088);
        *(_BYTE *)(((v2 + 1088) >> 3) + 0x7FFF8000) = -8;
        std::allocator<char>::~allocator(v2 + 1072);
        *(_BYTE *)(((v2 + 1072) >> 3) + 0x7FFF8000) = -8;
        if ( v176 )
        {
          *(_DWORD *)(((v2 + 8288) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 8288) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 8319) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 8319) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 8288, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 8288),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            792);
          v180 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                   (common::milog::MiLogStream *const)(v2 + 8288),
                   (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v180, (const char (*)[30])byte_1A46C4C0);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8288));
          *(_DWORD *)(((v2 + 8288) >> 3) + 0x7FFF8000) = -117901064;
          v7 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 8352) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 1120);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 8352),
            &byte_1A46C500,
            (const std::allocator<char> *)(v2 + 1120));
          v181 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                   row,
                   (const std::string *)(v2 + 8352),
                   &this->exclusive_npc_priority) != 0;
          std::string::~string((void *)(v2 + 8352));
          *(_DWORD *)(((v2 + 8352) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 1120);
          *(_BYTE *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -8;
          if ( v181 )
          {
            *(_DWORD *)(((v2 + 8416) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 8416) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 8447) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 8447) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 8416, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 8416),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              797);
            v182 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                     (common::milog::MiLogStream *const)(v2 + 8416),
                     (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v182, (const char (*)[36])byte_1A46C540);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8416));
            *(_DWORD *)(((v2 + 8416) >> 3) + 0x7FFF8000) = -117901064;
            v7 = -1;
          }
          else
          {
            *(_DWORD *)(((v2 + 8480) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 1136);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 8480),
              &byte_1A46C5A0,
              (const std::allocator<char> *)(v2 + 1136));
            v183 = common::tools::TxtFile::Row::assignToStr(
                     row,
                     (const std::string *)(v2 + 8480),
                     (std::string *)(v2 + 1952)) != 0;
            std::string::~string((void *)(v2 + 8480));
            *(_DWORD *)(((v2 + 8480) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 1136);
            *(_BYTE *)(((v2 + 1136) >> 3) + 0x7FFF8000) = -8;
            if ( v183 )
            {
              *(_DWORD *)(((v2 + 8544) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 8544) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 8575) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 8575) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 8544, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 8544),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                802);
              v184 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                       (common::milog::MiLogStream *const)(v2 + 8544),
                       (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v184, (const char (*)[39])byte_1A46C5E0);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8544));
              *(_DWORD *)(((v2 + 8544) >> 3) + 0x7FFF8000) = -117901064;
              v7 = -1;
            }
            else
            {
              v185 = ((v2 + 1696) >> 3) + 2147450880;
              *(_WORD *)v185 = 0;
              *(_BYTE *)(v185 + 2) = 0;
              v186 = (_DWORD *)(((v2 + 10016) >> 3) + 2147450880);
              *v186 = 0;
              v186[1] = 0;
              *(_BYTE *)(((v2 + 1152) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 1152);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 10016),
                ";",
                (const std::allocator<char> *)(v2 + 1152));
              *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 1168);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 10048),
                ",",
                (const std::allocator<char> *)(v2 + 1168));
              v230._M_array = (std::initializer_list<std::string >::iterator)(v2 + 10016);
              v230._M_len = 2LL;
              *(_BYTE *)(((v2 + 1184) >> 3) + 0x7FFF8000) = 1;
              std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 1184));
              std::vector<std::string>::vector(
                (std::vector<std::string> *const)(v2 + 1696),
                v230,
                (const std::vector<std::string>::allocator_type *)(v2 + 1184));
              v187 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                       (const std::string *)(v2 + 1952),
                       (const std::vector<std::string> *)(v2 + 1696),
                       &this->trial_avatar_list,
                       1) != 0;
              std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 1696));
              v188 = ((v2 + 1696) >> 3) + 2147450880;
              *(_WORD *)v188 = -1800;
              *(_BYTE *)(v188 + 2) = -8;
              std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 1184));
              *(_BYTE *)(((v2 + 1184) >> 3) + 0x7FFF8000) = -8;
              for ( jj = (char *)(v2 + 10080); jj != (char *)(v2 + 10016); std::string::~string(jj) )
                jj -= 32;
              v190 = (_DWORD *)(((v2 + 10016) >> 3) + 2147450880);
              *v190 = -117901064;
              v190[1] = -117901064;
              std::allocator<char>::~allocator(v2 + 1168);
              *(_BYTE *)(((v2 + 1168) >> 3) + 0x7FFF8000) = -8;
              std::allocator<char>::~allocator(v2 + 1152);
              *(_BYTE *)(((v2 + 1152) >> 3) + 0x7FFF8000) = -8;
              if ( v187 )
              {
                *(_DWORD *)(((v2 + 8608) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 8608) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 8639) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 8639) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 8608, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 8608),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                  "init",
                  807);
                v191 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                         (common::milog::MiLogStream *const)(v2 + 8608),
                         (const char (*)[16])"[CONFIG_ERROR] ");
                common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v191, (const char (*)[39])byte_1A46C5E0);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8608));
                *(_DWORD *)(((v2 + 8608) >> 3) + 0x7FFF8000) = -117901064;
                v7 = -1;
              }
              else
              {
                *(_DWORD *)(((v2 + 8672) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 1200) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 1200);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 8672),
                  &byte_1A46C640,
                  (const std::allocator<char> *)(v2 + 1200));
                v192 = common::tools::TxtFile::Row::assignToStr(
                         row,
                         (const std::string *)(v2 + 8672),
                         &this->ability_group_name) != 0;
                std::string::~string((void *)(v2 + 8672));
                *(_DWORD *)(((v2 + 8672) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 1200);
                *(_BYTE *)(((v2 + 1200) >> 3) + 0x7FFF8000) = -8;
                if ( v192 )
                {
                  *(_DWORD *)(((v2 + 8736) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 8736) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 8767) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 8767) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 8736, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 8736),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                    "init",
                    812);
                  v193 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                           (common::milog::MiLogStream *const)(v2 + 8736),
                           (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                    v193,
                    (const char (*)[36])byte_1A46C680);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8736));
                  *(_DWORD *)(((v2 + 8736) >> 3) + 0x7FFF8000) = -117901064;
                  v7 = -1;
                }
                else
                {
                  *(_DWORD *)(((v2 + 8800) >> 3) + 0x7FFF8000) = 0;
                  *(_BYTE *)(((v2 + 1216) >> 3) + 0x7FFF8000) = 1;
                  std::allocator<char>::allocator(v2 + 1216);
                  std::string::basic_string<std::allocator<char>>(
                    (std::string *const)(v2 + 8800),
                    &byte_1A46C6E0,
                    (const std::allocator<char> *)(v2 + 1216));
                  v194 = common::tools::TxtFile::Row::assignToStr(
                           row,
                           (const std::string *)(v2 + 8800),
                           (std::string *)(v2 + 1952)) != 0;
                  std::string::~string((void *)(v2 + 8800));
                  *(_DWORD *)(((v2 + 8800) >> 3) + 0x7FFF8000) = -117901064;
                  std::allocator<char>::~allocator(v2 + 1216);
                  *(_BYTE *)(((v2 + 1216) >> 3) + 0x7FFF8000) = -8;
                  if ( v194 )
                  {
                    *(_DWORD *)(((v2 + 8864) >> 3) + 0x7FFF8000) = 0;
                    if ( *(char *)(((v2 + 8864) >> 3) + 0x7FFF8000) < 0
                      || *(_BYTE *)(((v2 + 8895) >> 3) + 0x7FFF8000) != 0
                      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 8895) >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_store_n(v2 + 8864, 32LL);
                    }
                    common::milog::MiLogStream::create(
                      (common::milog::MiLogStream *)(v2 + 8864),
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                      "init",
                      817);
                    v195 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                             (common::milog::MiLogStream *const)(v2 + 8864),
                             (const char (*)[16])"[CONFIG_ERROR] ");
                    common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                      v195,
                      (const char (*)[42])byte_1A46C720);
                    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8864));
                    *(_DWORD *)(((v2 + 8864) >> 3) + 0x7FFF8000) = -117901064;
                    v7 = -1;
                  }
                  else
                  {
                    v196 = ((v2 + 1760) >> 3) + 2147450880;
                    *(_WORD *)v196 = 0;
                    *(_BYTE *)(v196 + 2) = 0;
                    v197 = (_DWORD *)(((v2 + 10112) >> 3) + 2147450880);
                    *v197 = 0;
                    v197[1] = 0;
                    *(_BYTE *)(((v2 + 1232) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v2 + 1232);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v2 + 10112),
                      ";",
                      (const std::allocator<char> *)(v2 + 1232));
                    *(_BYTE *)(((v2 + 1248) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<char>::allocator(v2 + 1248);
                    std::string::basic_string<std::allocator<char>>(
                      (std::string *const)(v2 + 10144),
                      ",",
                      (const std::allocator<char> *)(v2 + 1248));
                    v231._M_array = (std::initializer_list<std::string >::iterator)(v2 + 10112);
                    v231._M_len = 2LL;
                    *(_BYTE *)(((v2 + 1264) >> 3) + 0x7FFF8000) = 1;
                    std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 1264));
                    std::vector<std::string>::vector(
                      (std::vector<std::string> *const)(v2 + 1760),
                      v231,
                      (const std::vector<std::string>::allocator_type *)(v2 + 1264));
                    v198 = common::tools::StringUtils::splitToListBySeps(
                             (const std::string *)(v2 + 1952),
                             (const std::vector<std::string> *)(v2 + 1760),
                             &this->team_ability_group_list,
                             1) != 0;
                    std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 1760));
                    v199 = ((v2 + 1760) >> 3) + 2147450880;
                    *(_WORD *)v199 = -1800;
                    *(_BYTE *)(v199 + 2) = -8;
                    std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 1264));
                    *(_BYTE *)(((v2 + 1264) >> 3) + 0x7FFF8000) = -8;
                    for ( kk = (char *)(v2 + 10176); kk != (char *)(v2 + 10112); std::string::~string(kk) )
                      kk -= 32;
                    v201 = (_DWORD *)(((v2 + 10112) >> 3) + 2147450880);
                    *v201 = -117901064;
                    v201[1] = -117901064;
                    std::allocator<char>::~allocator(v2 + 1248);
                    *(_BYTE *)(((v2 + 1248) >> 3) + 0x7FFF8000) = -8;
                    std::allocator<char>::~allocator(v2 + 1232);
                    *(_BYTE *)(((v2 + 1232) >> 3) + 0x7FFF8000) = -8;
                    if ( v198 )
                    {
                      *(_DWORD *)(((v2 + 8928) >> 3) + 0x7FFF8000) = 0;
                      if ( *(char *)(((v2 + 8928) >> 3) + 0x7FFF8000) < 0
                        || *(_BYTE *)(((v2 + 8959) >> 3) + 0x7FFF8000) != 0
                        && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 8959) >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_store_n(v2 + 8928, 32LL);
                      }
                      common::milog::MiLogStream::create(
                        (common::milog::MiLogStream *)(v2 + 8928),
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                        "init",
                        822);
                      v202 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                               (common::milog::MiLogStream *const)(v2 + 8928),
                               (const char (*)[16])"[CONFIG_ERROR] ");
                      common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                        v202,
                        (const char (*)[42])byte_1A46C720);
                      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 8928));
                      *(_DWORD *)(((v2 + 8928) >> 3) + 0x7FFF8000) = -117901064;
                      v7 = -1;
                    }
                    else
                    {
                      *(_DWORD *)(((v2 + 8992) >> 3) + 0x7FFF8000) = 0;
                      *(_BYTE *)(((v2 + 1280) >> 3) + 0x7FFF8000) = 1;
                      std::allocator<char>::allocator(v2 + 1280);
                      std::string::basic_string<std::allocator<char>>(
                        (std::string *const)(v2 + 8992),
                        &byte_1A46C780,
                        (const std::allocator<char> *)(v2 + 1280));
                      v203 = common::tools::TxtFile::Row::assignToStr(
                               row,
                               (const std::string *)(v2 + 8992),
                               (std::string *)(v2 + 1952)) != 0;
                      std::string::~string((void *)(v2 + 8992));
                      *(_DWORD *)(((v2 + 8992) >> 3) + 0x7FFF8000) = -117901064;
                      std::allocator<char>::~allocator(v2 + 1280);
                      *(_BYTE *)(((v2 + 1280) >> 3) + 0x7FFF8000) = -8;
                      if ( v203 )
                      {
                        *(_DWORD *)(((v2 + 9056) >> 3) + 0x7FFF8000) = 0;
                        if ( *(char *)(((v2 + 9056) >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)(((v2 + 9087) >> 3) + 0x7FFF8000) != 0
                          && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 9087) >> 3) + 0x7FFF8000) )
                        {
                          __asan_report_store_n(v2 + 9056, 32LL);
                        }
                        common::milog::MiLogStream::create(
                          (common::milog::MiLogStream *)(v2 + 9056),
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                          "init",
                          827);
                        v204 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                 (common::milog::MiLogStream *const)(v2 + 9056),
                                 (const char (*)[16])"[CONFIG_ERROR] ");
                        common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                          v204,
                          (const char (*)[35])byte_1A46C7C0);
                        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 9056));
                        *(_DWORD *)(((v2 + 9056) >> 3) + 0x7FFF8000) = -117901064;
                        v7 = -1;
                      }
                      else
                      {
                        v205 = ((v2 + 1824) >> 3) + 2147450880;
                        *(_WORD *)v205 = 0;
                        *(_BYTE *)(v205 + 2) = 0;
                        v206 = (_DWORD *)(((v2 + 10208) >> 3) + 2147450880);
                        *v206 = 0;
                        v206[1] = 0;
                        *(_BYTE *)(((v2 + 1296) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v2 + 1296);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v2 + 10208),
                          ";",
                          (const std::allocator<char> *)(v2 + 1296));
                        *(_BYTE *)(((v2 + 1312) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<char>::allocator(v2 + 1312);
                        std::string::basic_string<std::allocator<char>>(
                          (std::string *const)(v2 + 10240),
                          ",",
                          (const std::allocator<char> *)(v2 + 1312));
                        v232._M_array = (std::initializer_list<std::string >::iterator)(v2 + 10208);
                        v232._M_len = 2LL;
                        *(_BYTE *)(((v2 + 1328) >> 3) + 0x7FFF8000) = 1;
                        std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 1328));
                        std::vector<std::string>::vector(
                          (std::vector<std::string> *const)(v2 + 1824),
                          v232,
                          (const std::vector<std::string>::allocator_type *)(v2 + 1328));
                        v207 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                                 (const std::string *)(v2 + 1952),
                                 (const std::vector<std::string> *)(v2 + 1824),
                                 &this->exclusive_place_list,
                                 1) != 0;
                        std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 1824));
                        v208 = ((v2 + 1824) >> 3) + 2147450880;
                        *(_WORD *)v208 = -1800;
                        *(_BYTE *)(v208 + 2) = -8;
                        std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 1328));
                        *(_BYTE *)(((v2 + 1328) >> 3) + 0x7FFF8000) = -8;
                        for ( mm = (char *)(v2 + 10272); mm != (char *)(v2 + 10208); std::string::~string(mm) )
                          mm -= 32;
                        v210 = (_DWORD *)(((v2 + 10208) >> 3) + 2147450880);
                        *v210 = -117901064;
                        v210[1] = -117901064;
                        std::allocator<char>::~allocator(v2 + 1312);
                        *(_BYTE *)(((v2 + 1312) >> 3) + 0x7FFF8000) = -8;
                        std::allocator<char>::~allocator(v2 + 1296);
                        *(_BYTE *)(((v2 + 1296) >> 3) + 0x7FFF8000) = -8;
                        if ( v207 )
                        {
                          *(_DWORD *)(((v2 + 9120) >> 3) + 0x7FFF8000) = 0;
                          if ( *(char *)(((v2 + 9120) >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)(((v2 + 9151) >> 3) + 0x7FFF8000) != 0
                            && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 9151) >> 3) + 0x7FFF8000) )
                          {
                            __asan_report_store_n(v2 + 9120, 32LL);
                          }
                          common::milog::MiLogStream::create(
                            (common::milog::MiLogStream *)(v2 + 9120),
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                            "init",
                            832);
                          v211 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                   (common::milog::MiLogStream *const)(v2 + 9120),
                                   (const char (*)[16])"[CONFIG_ERROR] ");
                          common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                            v211,
                            (const char (*)[35])byte_1A46C7C0);
                          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 9120));
                          *(_DWORD *)(((v2 + 9120) >> 3) + 0x7FFF8000) = -117901064;
                          v7 = -1;
                        }
                        else
                        {
                          *(_DWORD *)(((v2 + 9184) >> 3) + 0x7FFF8000) = 0;
                          *(_BYTE *)(((v2 + 1344) >> 3) + 0x7FFF8000) = 1;
                          std::allocator<char>::allocator(v2 + 1344);
                          std::string::basic_string<std::allocator<char>>(
                            (std::string *const)(v2 + 9184),
                            "CoopPointID",
                            (const std::allocator<char> *)(v2 + 1344));
                          v212 = common::tools::TxtFile::Row::assignToStr(
                                   row,
                                   (const std::string *)(v2 + 9184),
                                   (std::string *)(v2 + 1952)) != 0;
                          std::string::~string((void *)(v2 + 9184));
                          *(_DWORD *)(((v2 + 9184) >> 3) + 0x7FFF8000) = -117901064;
                          std::allocator<char>::~allocator(v2 + 1344);
                          *(_BYTE *)(((v2 + 1344) >> 3) + 0x7FFF8000) = -8;
                          if ( v212 )
                          {
                            *(_DWORD *)(((v2 + 9248) >> 3) + 0x7FFF8000) = 0;
                            if ( *(char *)(((v2 + 9248) >> 3) + 0x7FFF8000) < 0
                              || *(_BYTE *)(((v2 + 9279) >> 3) + 0x7FFF8000) != 0
                              && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 9279) >> 3) + 0x7FFF8000) )
                            {
                              __asan_report_store_n(v2 + 9248, 32LL);
                            }
                            common::milog::MiLogStream::create(
                              (common::milog::MiLogStream *)(v2 + 9248),
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                              "init",
                              837);
                            v213 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                     (common::milog::MiLogStream *const)(v2 + 9248),
                                     (const char (*)[16])"[CONFIG_ERROR] ");
                            common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
                              v213,
                              (const char (*)[32])byte_1A46C860);
                            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 9248));
                            *(_DWORD *)(((v2 + 9248) >> 3) + 0x7FFF8000) = -117901064;
                            v7 = -1;
                          }
                          else
                          {
                            v214 = ((v2 + 1888) >> 3) + 2147450880;
                            *(_WORD *)v214 = 0;
                            *(_BYTE *)(v214 + 2) = 0;
                            v215 = (_DWORD *)(((v2 + 10304) >> 3) + 2147450880);
                            *v215 = 0;
                            v215[1] = 0;
                            *(_BYTE *)(((v2 + 1360) >> 3) + 0x7FFF8000) = 1;
                            std::allocator<char>::allocator(v2 + 1360);
                            std::string::basic_string<std::allocator<char>>(
                              (std::string *const)(v2 + 10304),
                              ";",
                              (const std::allocator<char> *)(v2 + 1360));
                            *(_BYTE *)(((v2 + 1376) >> 3) + 0x7FFF8000) = 1;
                            std::allocator<char>::allocator(v2 + 1376);
                            std::string::basic_string<std::allocator<char>>(
                              (std::string *const)(v2 + 10336),
                              ",",
                              (const std::allocator<char> *)(v2 + 1376));
                            v233._M_array = (std::initializer_list<std::string >::iterator)(v2 + 10304);
                            v233._M_len = 2LL;
                            *(_BYTE *)(((v2 + 1392) >> 3) + 0x7FFF8000) = 1;
                            std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 1392));
                            std::vector<std::string>::vector(
                              (std::vector<std::string> *const)(v2 + 1888),
                              v233,
                              (const std::vector<std::string>::allocator_type *)(v2 + 1392));
                            v216 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                                     (const std::string *)(v2 + 1952),
                                     (const std::vector<std::string> *)(v2 + 1888),
                                     &this->coop_point_list,
                                     1) != 0;
                            std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 1888));
                            v217 = ((v2 + 1888) >> 3) + 2147450880;
                            *(_WORD *)v217 = -1800;
                            *(_BYTE *)(v217 + 2) = -8;
                            std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 1392));
                            *(_BYTE *)(((v2 + 1392) >> 3) + 0x7FFF8000) = -8;
                            for ( nn = (char *)(v2 + 10368); nn != (char *)(v2 + 10304); std::string::~string(nn) )
                              nn -= 32;
                            v219 = (_DWORD *)(((v2 + 10304) >> 3) + 2147450880);
                            *v219 = -117901064;
                            v219[1] = -117901064;
                            std::allocator<char>::~allocator(v2 + 1376);
                            *(_BYTE *)(((v2 + 1376) >> 3) + 0x7FFF8000) = -8;
                            std::allocator<char>::~allocator(v2 + 1360);
                            *(_BYTE *)(((v2 + 1360) >> 3) + 0x7FFF8000) = -8;
                            if ( v216 )
                            {
                              *(_DWORD *)(((v2 + 9312) >> 3) + 0x7FFF8000) = 0;
                              if ( *(char *)(((v2 + 9312) >> 3) + 0x7FFF8000) < 0
                                || *(_BYTE *)(((v2 + 9343) >> 3) + 0x7FFF8000) != 0
                                && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 9343) >> 3) + 0x7FFF8000) )
                              {
                                __asan_report_store_n(v2 + 9312, 32LL);
                              }
                              common::milog::MiLogStream::create(
                                (common::milog::MiLogStream *)(v2 + 9312),
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                                "init",
                                842);
                              v220 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                       (common::milog::MiLogStream *const)(v2 + 9312),
                                       (const char (*)[16])"[CONFIG_ERROR] ");
                              common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
                                v220,
                                (const char (*)[32])byte_1A46C860);
                              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 9312));
                              *(_DWORD *)(((v2 + 9312) >> 3) + 0x7FFF8000) = -117901064;
                              v7 = -1;
                            }
                            else
                            {
                              *(_DWORD *)(((v2 + 9376) >> 3) + 0x7FFF8000) = 0;
                              *(_BYTE *)(((v2 + 1408) >> 3) + 0x7FFF8000) = 1;
                              std::allocator<char>::allocator(v2 + 1408);
                              std::string::basic_string<std::allocator<char>>(
                                (std::string *const)(v2 + 9376),
                                &byte_1A46C8A0,
                                (const std::allocator<char> *)(v2 + 1408));
                              v221 = common::tools::TxtFile::Row::assignToNum<bool>(
                                       row,
                                       (const std::string *)(v2 + 9376),
                                       &this->is_refresh_single_mode_only) != 0;
                              std::string::~string((void *)(v2 + 9376));
                              *(_DWORD *)(((v2 + 9376) >> 3) + 0x7FFF8000) = -117901064;
                              std::allocator<char>::~allocator(v2 + 1408);
                              *(_BYTE *)(((v2 + 1408) >> 3) + 0x7FFF8000) = -8;
                              if ( v221 )
                              {
                                *(_DWORD *)(((v2 + 9440) >> 3) + 0x7FFF8000) = 0;
                                if ( *(char *)(((v2 + 9440) >> 3) + 0x7FFF8000) < 0
                                  || *(_BYTE *)(((v2 + 9471) >> 3) + 0x7FFF8000) != 0
                                  && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 9471) >> 3) + 0x7FFF8000) )
                                {
                                  __asan_report_store_n(v2 + 9440, 32LL);
                                }
                                common::milog::MiLogStream::create(
                                  (common::milog::MiLogStream *)(v2 + 9440),
                                  &common::milog::MiLogDefault::default_log_obj_,
                                  4u,
                                  "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                                  "init",
                                  847);
                                v222 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                         (common::milog::MiLogStream *const)(v2 + 9440),
                                         (const char (*)[16])"[CONFIG_ERROR] ");
                                common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                                  v222,
                                  (const char (*)[45])byte_1A46C8E0);
                                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 9440));
                                *(_DWORD *)(((v2 + 9440) >> 3) + 0x7FFF8000) = -117901064;
                                v7 = -1;
                              }
                              else
                              {
                                *(_DWORD *)(((v2 + 9504) >> 3) + 0x7FFF8000) = 0;
                                *(_BYTE *)(((v2 + 1424) >> 3) + 0x7FFF8000) = 1;
                                std::allocator<char>::allocator(v2 + 1424);
                                std::string::basic_string<std::allocator<char>>(
                                  (std::string *const)(v2 + 9504),
                                  &byte_1A46C940,
                                  (const std::allocator<char> *)(v2 + 1424));
                                v223 = common::tools::TxtFile::Row::assignToStr(
                                         row,
                                         (const std::string *)(v2 + 9504),
                                         &this->world_quest_flow_group_suite_map_str) != 0;
                                std::string::~string((void *)(v2 + 9504));
                                *(_DWORD *)(((v2 + 9504) >> 3) + 0x7FFF8000) = -117901064;
                                std::allocator<char>::~allocator(v2 + 1424);
                                *(_BYTE *)(((v2 + 1424) >> 3) + 0x7FFF8000) = -8;
                                if ( v223 )
                                {
                                  *(_DWORD *)(((v2 + 9568) >> 3) + 0x7FFF8000) = 0;
                                  if ( *(char *)(((v2 + 9568) >> 3) + 0x7FFF8000) < 0
                                    || *(_BYTE *)(((v2 + 9599) >> 3) + 0x7FFF8000) != 0
                                    && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 9599) >> 3) + 0x7FFF8000) )
                                  {
                                    __asan_report_store_n(v2 + 9568, 32LL);
                                  }
                                  common::milog::MiLogStream::create(
                                    (common::milog::MiLogStream *)(v2 + 9568),
                                    &common::milog::MiLogDefault::default_log_obj_,
                                    4u,
                                    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                                    "init",
                                    852);
                                  v224 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                                           (common::milog::MiLogStream *const)(v2 + 9568),
                                           (const char (*)[16])"[CONFIG_ERROR] ");
                                  common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                                    v224,
                                    (const char (*)[33])byte_1A46C980);
                                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 9568));
                                  *(_DWORD *)(((v2 + 9568) >> 3) + 0x7FFF8000) = -117901064;
                                  v7 = -1;
                                }
                                else
                                {
                                  v7 = 0;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_318:
  std::string::~string((void *)(v2 + 1952));
  if ( v258 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80EC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 244) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF80F8) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF850C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862784) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147451128 - (((_DWORD)v4 + 2147451136) & 0xFFFFFFF8) + 1052) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8534) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_8(v2, 10720LL, v258);
  }
  return v7;
};

// Line 860: range 000000000EF57A94-000000000EF5C2D6
int32_t __cdecl data::TalkExcelConfig::init(data::TalkExcelConfig *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r15
  __int64 v3; // rax
  _DWORD *v4; // r14
  bool v5; // bl
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // ebx
  bool v8; // bl
  common::milog::MiLogStream *v9; // rax
  bool v10; // bl
  common::milog::MiLogStream *v11; // rax
  bool v12; // bl
  common::milog::MiLogStream *v13; // rax
  bool v14; // bl
  data::QuestCondType *p_type; // rbx
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  std::vector<data::TalkCond>::reference v19; // rax
  bool v20; // bl
  std::vector<data::TalkCond>::reference v21; // rax
  std::string *v22; // rbx
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  std::vector<data::TalkCond>::reference v26; // rax
  bool v27; // bl
  common::milog::MiLogStream *v28; // rax
  bool v29; // bl
  common::milog::MiLogStream *v30; // rax
  unsigned __int64 v31; // rax
  _DWORD *v32; // rax
  bool v33; // r13
  unsigned __int64 v34; // rax
  char *k; // rbx
  _DWORD *v36; // rax
  common::milog::MiLogStream *v37; // rax
  bool v38; // bl
  common::milog::MiLogStream *v39; // rax
  bool v40; // bl
  common::milog::MiLogStream *v41; // rax
  bool v42; // bl
  common::milog::MiLogStream *v43; // rax
  unsigned __int64 v44; // rax
  _DWORD *v45; // rax
  bool v46; // r13
  unsigned __int64 v47; // rax
  char *m; // rbx
  _DWORD *v49; // rax
  common::milog::MiLogStream *v50; // rax
  bool v51; // bl
  common::milog::MiLogStream *v52; // rax
  bool v53; // bl
  common::milog::MiLogStream *v54; // rax
  unsigned __int64 v55; // rax
  _DWORD *v56; // rax
  bool v57; // r13
  unsigned __int64 v58; // rax
  char *n; // rbx
  _DWORD *v60; // rax
  common::milog::MiLogStream *v61; // rax
  bool v62; // bl
  common::milog::MiLogStream *v63; // rax
  unsigned __int64 v64; // rax
  _DWORD *v65; // rax
  bool v66; // r13
  unsigned __int64 v67; // rax
  char *ii; // rbx
  _DWORD *v69; // rax
  common::milog::MiLogStream *v70; // rax
  bool v71; // bl
  data::TalkExecType *v72; // rbx
  common::milog::MiLogStream *v73; // rax
  common::milog::MiLogStream *v74; // rax
  common::milog::MiLogStream *v75; // rax
  std::vector<data::TalkExec>::reference v76; // rax
  bool v77; // bl
  std::vector<data::TalkExec>::reference v78; // rax
  std::string *v79; // rbx
  common::milog::MiLogStream *v80; // rax
  common::milog::MiLogStream *v81; // rax
  common::milog::MiLogStream *v82; // rax
  std::vector<data::TalkExec>::reference v83; // rax
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-10C0h]
  std::initializer_list<std::string > v86; // [rsp+20h] [rbp-10B0h]
  std::initializer_list<std::string > v87; // [rsp+30h] [rbp-10A0h]
  std::initializer_list<std::string > v88; // [rsp+40h] [rbp-1090h]
  uint32_t array_count; // [rsp+6Ch] [rbp-1064h]
  uint32_t array_counta; // [rsp+6Ch] [rbp-1064h]
  uint32_t array_countb; // [rsp+6Ch] [rbp-1064h]
  uint32_t array_countc; // [rsp+6Ch] [rbp-1064h]
  uint32_t i; // [rsp+70h] [rbp-1060h]
  uint32_t j; // [rsp+74h] [rbp-105Ch]
  uint32_t i_0; // [rsp+78h] [rbp-1058h]
  uint32_t j_0; // [rsp+7Ch] [rbp-1054h]
  char v97[4176]; // [rsp+80h] [rbp-1050h] BYREF

  v2 = (unsigned __int64)v97;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_7(4128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "82 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unkno"
                        "wn> 208 1 9 <unknown> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 28"
                        "8 1 9 <unknown> 304 1 9 <unknown> 320 1 9 <unknown> 336 1 9 <unknown> 352 1 9 <unknown> 368 1 9 "
                        "<unknown> 384 1 9 <unknown> 400 1 9 <unknown> 416 1 9 <unknown> 432 1 9 <unknown> 448 1 9 <unkno"
                        "wn> 464 1 9 <unknown> 480 1 9 <unknown> 496 1 9 <unknown> 512 1 9 <unknown> 528 1 9 <unknown> 54"
                        "4 24 9 <unknown> 608 24 9 <unknown> 672 24 9 <unknown> 736 24 9 <unknown> 800 32 11 val_str:863 "
                        "864 32 9 <unknown> 928 32 9 <unknown> 992 32 9 <unknown> 1056 32 9 <unknown> 1120 32 9 <unknown>"
                        " 1184 32 9 <unknown> 1248 32 9 <unknown> 1312 32 9 <unknown> 1376 32 9 <unknown> 1440 32 9 <unkn"
                        "own> 1504 32 9 <unknown> 1568 32 9 <unknown> 1632 32 9 <unknown> 1696 32 9 <unknown> 1760 32 9 <"
                        "unknown> 1824 32 9 <unknown> 1888 32 9 <unknown> 1952 32 9 <unknown> 2016 32 9 <unknown> 2080 32"
                        " 9 <unknown> 2144 32 9 <unknown> 2208 32 9 <unknown> 2272 32 9 <unknown> 2336 32 9 <unknown> 240"
                        "0 32 9 <unknown> 2464 32 9 <unknown> 2528 32 9 <unknown> 2592 32 9 <unknown> 2656 32 9 <unknown>"
                        " 2720 32 9 <unknown> 2784 32 9 <unknown> 2848 32 9 <unknown> 2912 32 9 <unknown> 2976 32 9 <unkn"
                        "own> 3040 32 9 <unknown> 3104 32 9 <unknown> 3168 32 9 <unknown> 3232 32 9 <unknown> 3296 32 9 <"
                        "unknown> 3360 32 9 <unknown> 3424 64 9 <unknown> 3520 64 9 <unknown> 3616 64 9 <unknown> 3712 64"
                        " 9 <unknown> 3808 256 12 col_name:861";
  *(_QWORD *)(v2 + 16) = data::TalkExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234753535;
  v4[536862730] = -234753535;
  v4[536862731] = -234753535;
  v4[536862732] = -234753535;
  v4[536862733] = -234753535;
  v4[536862734] = -234753535;
  v4[536862735] = -234753535;
  v4[536862736] = -234753535;
  v4[536862737] = -234881024;
  v4[536862738] = -218959118;
  v4[536862739] = -234881024;
  v4[536862740] = -218959118;
  v4[536862741] = -234881024;
  v4[536862742] = -218959118;
  v4[536862743] = -234881024;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -218959118;
  v4[536862754] = -218959118;
  v4[536862756] = -218959118;
  v4[536862758] = -218959118;
  v4[536862760] = -218959118;
  v4[536862762] = -218959118;
  v4[536862764] = -218959118;
  v4[536862766] = -218959118;
  v4[536862768] = -218959118;
  v4[536862770] = -218959118;
  v4[536862772] = -218959118;
  v4[536862774] = -218959118;
  v4[536862776] = -218959118;
  v4[536862778] = -218959118;
  v4[536862780] = -218959118;
  v4[536862782] = -218959118;
  v4[536862784] = -218959118;
  v4[536862786] = -218959118;
  v4[536862788] = -218959118;
  v4[536862790] = -218959118;
  v4[536862792] = -218959118;
  v4[536862794] = -218959118;
  v4[536862796] = -218959118;
  v4[536862798] = -218959118;
  v4[536862800] = -218959118;
  v4[536862802] = -218959118;
  v4[536862804] = -218959118;
  v4[536862806] = -218959118;
  v4[536862808] = -218959118;
  v4[536862810] = -218959118;
  v4[536862812] = -218959118;
  v4[536862814] = -218959118;
  v4[536862816] = -218959118;
  v4[536862818] = -218959118;
  v4[536862820] = -218959118;
  v4[536862822] = -218959118;
  v4[536862824] = -218959118;
  v4[536862826] = -218959118;
  v4[536862829] = -218959118;
  v4[536862832] = -218959118;
  v4[536862835] = -218959118;
  v4[536862838] = -218959118;
  v4[536862847] = -202116109;
  v4[536862848] = -202116109;
  std::string::basic_string(v2 + 800);
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 864),
    &byte_1A46D020,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 864), &this->id) != 0;
  std::string::~string((void *)(v2 + 864));
  *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 928) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 928, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 928),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      866);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 928),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v6, (const char (*)[29])byte_1A46D060);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 928));
    *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 992),
    &byte_1A46D0A0,
    (const std::allocator<char> *)(v2 + 48));
  v8 = common::tools::TxtFile::Row::assignToEnum<data::TalkBeginWay>(
         row,
         (const std::string *)(v2 + 992),
         &this->begin_way) != 0;
  std::string::~string((void *)(v2 + 992));
  *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v8 )
  {
    *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1056) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1056, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1056),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      871);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 1056),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v9, (const char (*)[33])byte_1A46D0E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1056));
    *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1120),
    &byte_1A469EE0,
    (const std::allocator<char> *)(v2 + 64));
  v10 = common::tools::TxtFile::Row::assignToEnum<data::PlayMode>(
          row,
          (const std::string *)(v2 + 1120),
          &this->active_mode) != 0;
  std::string::~string((void *)(v2 + 1120));
  *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  if ( v10 )
  {
    *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1184) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1215) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 1215) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1184, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1184),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      876);
    v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 1184),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v11, (const char (*)[33])byte_1A469F20);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1184));
    *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1248),
    asc_1A46D140,
    (const std::allocator<char> *)(v2 + 80));
  v12 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
          row,
          (const std::string *)(v2 + 1248),
          &this->begin_cond_comb) != 0;
  std::string::~string((void *)(v2 + 1248));
  *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( v12 )
  {
    *(_DWORD *)(((v2 + 1312) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1312) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1343) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1343) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1312, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1312),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      881);
    v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 1312),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v13, (const char (*)[41])byte_1A46D180);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1312));
    *(_DWORD *)(((v2 + 1312) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  std::vector<data::TalkCond>::resize(&this->begin_cond, 6uLL);
  array_count = 0;
  for ( i = 0; i <= 5; ++i )
  {
    snprintf((char *)(v2 + 3808), 0x100uLL, asc_1A46D1E0, i + 1);
    *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 1376),
      (const char *)(v2 + 3808),
      (const std::allocator<char> *)(v2 + 96));
    v14 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1376));
    std::string::~string((void *)(v2 + 1376));
    *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( !v14 )
    {
      p_type = &std::vector<data::TalkCond>::operator[](&this->begin_cond, i)->type;
      *(_DWORD *)(((v2 + 1440) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 112);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 1440),
        (const char *)(v2 + 3808),
        (const std::allocator<char> *)(v2 + 112));
      LOBYTE(p_type) = common::tools::TxtFile::Row::assignToEnum<data::QuestCondType>(
                         row,
                         (const std::string *)(v2 + 1440),
                         p_type) != 0;
      std::string::~string((void *)(v2 + 1440));
      *(_DWORD *)(((v2 + 1440) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 112);
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)p_type )
      {
        *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 1504) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1535) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1535) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1504, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 1504),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          893);
        v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 1504),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v17 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v16, (const char (*)[14])byte_1A451DC0);
        v18 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v17, (const char (*)[256])(v2 + 3808));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v18, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1504));
        *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
        goto LABEL_117;
      }
      v19 = std::vector<data::TalkCond>::operator[](&this->begin_cond, i);
      std::vector<std::string>::resize(&v19->param, 5uLL);
      array_counta = 0;
      for ( j = 0; ; ++j )
      {
        if ( j > 4 )
        {
          v26 = std::vector<data::TalkCond>::operator[](&this->begin_cond, i);
          std::vector<std::string>::resize(&v26->param, array_counta);
          array_count = i + 1;
          break;
        }
        snprintf((char *)(v2 + 3808), 0x100uLL, asc_1A46D220, i + 1, j + 1);
        *(_DWORD *)(((v2 + 1568) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 128);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1568),
          (const char *)(v2 + 3808),
          (const std::allocator<char> *)(v2 + 128));
        v20 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1568));
        std::string::~string((void *)(v2 + 1568));
        *(_DWORD *)(((v2 + 1568) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 128);
        *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
        if ( !v20 )
        {
          v21 = std::vector<data::TalkCond>::operator[](&this->begin_cond, i);
          v22 = std::vector<std::string>::operator[](&v21->param, j);
          *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 144);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 1632),
            (const char *)(v2 + 3808),
            (const std::allocator<char> *)(v2 + 144));
          LOBYTE(v22) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 1632), v22) != 0;
          std::string::~string((void *)(v2 + 1632));
          *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 144);
          *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v22 )
          {
            *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1696) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1727) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 1727) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1696, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1696),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              905);
            v23 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1696),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v24 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                    v23,
                    (const char (*)[14])byte_1A451DC0);
            v25 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                    v24,
                    (const char (*)[256])(v2 + 3808));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v25, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1696));
            *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = -117901064;
            v7 = -1;
            goto LABEL_117;
          }
          array_counta = j + 1;
        }
      }
    }
  }
  std::vector<data::TalkCond>::resize(&this->begin_cond, array_count);
  *(_DWORD *)(((v2 + 1760) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 160);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1760),
    &byte_1A46D260,
    (const std::allocator<char> *)(v2 + 160));
  v27 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 1760), &this->priority) != 0;
  std::string::~string((void *)(v2 + 1760));
  *(_DWORD *)(((v2 + 1760) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 160);
  *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
  if ( v27 )
  {
    *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1824) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1855) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1855) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1824, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1824),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      918);
    v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 1824),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v28, (const char (*)[30])byte_1A46D2A0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1824));
    *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 176);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1888),
    &byte_1A46D2E0,
    (const std::allocator<char> *)(v2 + 176));
  v29 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 1888), (std::string *)(v2 + 800)) != 0;
  std::string::~string((void *)(v2 + 1888));
  *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 176);
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
  if ( v29 )
  {
    *(_DWORD *)(((v2 + 1952) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1952) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1983) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 1983) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1952, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1952),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      923);
    v30 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 1952),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v30, (const char (*)[35])byte_1A46D320);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1952));
    *(_DWORD *)(((v2 + 1952) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  v31 = ((v2 + 544) >> 3) + 2147450880;
  *(_WORD *)v31 = 0;
  *(_BYTE *)(v31 + 2) = 0;
  v32 = (_DWORD *)(((v2 + 3424) >> 3) + 2147450880);
  *v32 = 0;
  v32[1] = 0;
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 192);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3424),
    ";",
    (const std::allocator<char> *)(v2 + 192));
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 208);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3456),
    ",",
    (const std::allocator<char> *)(v2 + 208));
  __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 3424);
  __l._M_len = 2LL;
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
  std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 224));
  std::vector<std::string>::vector(
    (std::vector<std::string> *const)(v2 + 544),
    __l,
    (const std::vector<std::string>::allocator_type *)(v2 + 224));
  v33 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
          (const std::string *)(v2 + 800),
          (const std::vector<std::string> *)(v2 + 544),
          &this->next_talks,
          1) != 0;
  std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 544));
  v34 = ((v2 + 544) >> 3) + 2147450880;
  *(_WORD *)v34 = -1800;
  *(_BYTE *)(v34 + 2) = -8;
  std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 224));
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
  for ( k = (char *)(v2 + 3488); k != (char *)(v2 + 3424); std::string::~string(k) )
    k -= 32;
  v36 = (_DWORD *)(((v2 + 3424) >> 3) + 2147450880);
  *v36 = -117901064;
  v36[1] = -117901064;
  std::allocator<char>::~allocator(v2 + 208);
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
  std::allocator<char>::~allocator(v2 + 192);
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
  if ( v33 )
  {
    *(_DWORD *)(((v2 + 2016) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2016) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2047) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 2047) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2016, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2016),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      928);
    v37 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2016),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v37, (const char (*)[35])byte_1A46D320);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2016));
    *(_DWORD *)(((v2 + 2016) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 2080) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 240);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2080),
    &byte_1A46D380,
    (const std::allocator<char> *)(v2 + 240));
  v38 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
          row,
          (const std::string *)(v2 + 2080),
          &this->init_dialog) != 0;
  std::string::~string((void *)(v2 + 2080));
  *(_DWORD *)(((v2 + 2080) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 240);
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
  if ( v38 )
  {
    *(_DWORD *)(((v2 + 2144) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2175) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 2175) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2144, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2144),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      933);
    v39 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2144),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v39, (const char (*)[35])byte_1A46D3C0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2144));
    *(_DWORD *)(((v2 + 2144) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 2208) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 256);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2208),
    &byte_1A46D420,
    (const std::allocator<char> *)(v2 + 256));
  v40 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
          row,
          (const std::string *)(v2 + 2208),
          &this->decorator_id) != 0;
  std::string::~string((void *)(v2 + 2208));
  *(_DWORD *)(((v2 + 2208) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 256);
  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
  if ( v40 )
  {
    *(_DWORD *)(((v2 + 2272) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2272) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2303) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 2303) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2272, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2272),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      938);
    v41 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2272),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v41, (const char (*)[35])byte_1A46D460);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2272));
    *(_DWORD *)(((v2 + 2272) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 2336) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 272);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2336),
    &byte_1A46D4C0,
    (const std::allocator<char> *)(v2 + 272));
  v42 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 2336), (std::string *)(v2 + 800)) != 0;
  std::string::~string((void *)(v2 + 2336));
  *(_DWORD *)(((v2 + 2336) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 272);
  *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
  if ( v42 )
  {
    *(_DWORD *)(((v2 + 2400) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2400) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2431) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 2431) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2400, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2400),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      943);
    v43 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2400),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v43, (const char (*)[32])byte_1A46D500);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2400));
    *(_DWORD *)(((v2 + 2400) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  v44 = ((v2 + 608) >> 3) + 2147450880;
  *(_WORD *)v44 = 0;
  *(_BYTE *)(v44 + 2) = 0;
  v45 = (_DWORD *)(((v2 + 3520) >> 3) + 2147450880);
  *v45 = 0;
  v45[1] = 0;
  *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 288);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3520),
    ";",
    (const std::allocator<char> *)(v2 + 288));
  *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 304);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3552),
    ",",
    (const std::allocator<char> *)(v2 + 304));
  v86._M_array = (std::initializer_list<std::string >::iterator)(v2 + 3520);
  v86._M_len = 2LL;
  *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 1;
  std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 320));
  std::vector<std::string>::vector(
    (std::vector<std::string> *const)(v2 + 608),
    v86,
    (const std::vector<std::string>::allocator_type *)(v2 + 320));
  v46 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
          (const std::string *)(v2 + 800),
          (const std::vector<std::string> *)(v2 + 608),
          &this->npc_id,
          1) != 0;
  std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 608));
  v47 = ((v2 + 608) >> 3) + 2147450880;
  *(_WORD *)v47 = -1800;
  *(_BYTE *)(v47 + 2) = -8;
  std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 320));
  *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
  for ( m = (char *)(v2 + 3584); m != (char *)(v2 + 3520); std::string::~string(m) )
    m -= 32;
  v49 = (_DWORD *)(((v2 + 3520) >> 3) + 2147450880);
  *v49 = -117901064;
  v49[1] = -117901064;
  std::allocator<char>::~allocator(v2 + 304);
  *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
  std::allocator<char>::~allocator(v2 + 288);
  *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
  if ( v46 )
  {
    *(_DWORD *)(((v2 + 2464) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2464) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2495) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 2495) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2464, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2464),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      948);
    v50 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2464),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v50, (const char (*)[32])byte_1A46D500);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2464));
    *(_DWORD *)(((v2 + 2464) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 2528) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 336);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2528),
    &byte_1A46D540,
    (const std::allocator<char> *)(v2 + 336));
  v51 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 2528), &this->quest_id) != 0;
  std::string::~string((void *)(v2 + 2528));
  *(_DWORD *)(((v2 + 2528) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 336);
  *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
  if ( v51 )
  {
    *(_DWORD *)(((v2 + 2592) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2592) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2623) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 2623) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2592, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2592),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      953);
    v52 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2592),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(v52, (const char (*)[38])byte_1A46D580);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2592));
    *(_DWORD *)(((v2 + 2592) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 2656) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 352);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2656),
    &byte_1A46D5E0,
    (const std::allocator<char> *)(v2 + 352));
  v53 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 2656), (std::string *)(v2 + 800)) != 0;
  std::string::~string((void *)(v2 + 2656));
  *(_DWORD *)(((v2 + 2656) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 352);
  *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
  if ( v53 )
  {
    *(_DWORD *)(((v2 + 2720) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2720) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2751) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 2751) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2720, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2720),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      958);
    v54 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2720),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v54, (const char (*)[41])byte_1A46D620);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2720));
    *(_DWORD *)(((v2 + 2720) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  v55 = ((v2 + 672) >> 3) + 2147450880;
  *(_WORD *)v55 = 0;
  *(_BYTE *)(v55 + 2) = 0;
  v56 = (_DWORD *)(((v2 + 3616) >> 3) + 2147450880);
  *v56 = 0;
  v56[1] = 0;
  *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 368);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3616),
    ";",
    (const std::allocator<char> *)(v2 + 368));
  *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 384);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3648),
    ",",
    (const std::allocator<char> *)(v2 + 384));
  v87._M_array = (std::initializer_list<std::string >::iterator)(v2 + 3616);
  v87._M_len = 2LL;
  *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = 1;
  std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 400));
  std::vector<std::string>::vector(
    (std::vector<std::string> *const)(v2 + 672),
    v87,
    (const std::vector<std::string>::allocator_type *)(v2 + 400));
  v57 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
          (const std::string *)(v2 + 800),
          (const std::vector<std::string> *)(v2 + 672),
          &this->extra_load_mark_id,
          1) != 0;
  std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 672));
  v58 = ((v2 + 672) >> 3) + 2147450880;
  *(_WORD *)v58 = -1800;
  *(_BYTE *)(v58 + 2) = -8;
  std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 400));
  *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = -8;
  for ( n = (char *)(v2 + 3680); n != (char *)(v2 + 3616); std::string::~string(n) )
    n -= 32;
  v60 = (_DWORD *)(((v2 + 3616) >> 3) + 2147450880);
  *v60 = -117901064;
  v60[1] = -117901064;
  std::allocator<char>::~allocator(v2 + 384);
  *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = -8;
  std::allocator<char>::~allocator(v2 + 368);
  *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = -8;
  if ( v57 )
  {
    *(_DWORD *)(((v2 + 2784) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2784) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2815) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 2815) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2784, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2784),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      963);
    v61 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2784),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v61, (const char (*)[41])byte_1A46D620);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2784));
    *(_DWORD *)(((v2 + 2784) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  *(_DWORD *)(((v2 + 2848) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 416);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2848),
    &byte_1A46D680,
    (const std::allocator<char> *)(v2 + 416));
  v62 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 2848), (std::string *)(v2 + 800)) != 0;
  std::string::~string((void *)(v2 + 2848));
  *(_DWORD *)(((v2 + 2848) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 416);
  *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = -8;
  if ( v62 )
  {
    *(_DWORD *)(((v2 + 2912) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2912) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2943) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 2943) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2912, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2912),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      968);
    v63 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2912),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(v63, (const char (*)[38])byte_1A46D6C0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2912));
    *(_DWORD *)(((v2 + 2912) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  v64 = ((v2 + 736) >> 3) + 2147450880;
  *(_WORD *)v64 = 0;
  *(_BYTE *)(v64 + 2) = 0;
  v65 = (_DWORD *)(((v2 + 3712) >> 3) + 2147450880);
  *v65 = 0;
  v65[1] = 0;
  *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 432);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3712),
    ";",
    (const std::allocator<char> *)(v2 + 432));
  *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 448);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3744),
    ",",
    (const std::allocator<char> *)(v2 + 448));
  v88._M_array = (std::initializer_list<std::string >::iterator)(v2 + 3712);
  v88._M_len = 2LL;
  *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) = 1;
  std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 464));
  std::vector<std::string>::vector(
    (std::vector<std::string> *const)(v2 + 736),
    v88,
    (const std::vector<std::string>::allocator_type *)(v2 + 464));
  v66 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
          (const std::string *)(v2 + 800),
          (const std::vector<std::string> *)(v2 + 736),
          &this->talk_mark_hide_list,
          1) != 0;
  std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 736));
  v67 = ((v2 + 736) >> 3) + 2147450880;
  *(_WORD *)v67 = -1800;
  *(_BYTE *)(v67 + 2) = -8;
  std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 464));
  *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) = -8;
  for ( ii = (char *)(v2 + 3776); ii != (char *)(v2 + 3712); std::string::~string(ii) )
    ii -= 32;
  v69 = (_DWORD *)(((v2 + 3712) >> 3) + 2147450880);
  *v69 = -117901064;
  v69[1] = -117901064;
  std::allocator<char>::~allocator(v2 + 448);
  *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = -8;
  std::allocator<char>::~allocator(v2 + 432);
  *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = -8;
  if ( v66 )
  {
    *(_DWORD *)(((v2 + 2976) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2976) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 3007) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 3007) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2976, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2976),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      973);
    v70 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2976),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(v70, (const char (*)[38])byte_1A46D6C0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2976));
    *(_DWORD *)(((v2 + 2976) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  std::vector<data::TalkExec>::resize(&this->finish_exec, 5uLL);
  array_countb = 0;
  for ( i_0 = 0; ; ++i_0 )
  {
    if ( i_0 > 4 )
    {
      std::vector<data::TalkExec>::resize(&this->finish_exec, array_countb);
      v7 = 0;
      goto LABEL_117;
    }
    snprintf((char *)(v2 + 3808), 0x100uLL, asc_1A46D720, i_0 + 1);
    *(_DWORD *)(((v2 + 3040) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 480);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 3040),
      (const char *)(v2 + 3808),
      (const std::allocator<char> *)(v2 + 480));
    v71 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3040));
    std::string::~string((void *)(v2 + 3040));
    *(_DWORD *)(((v2 + 3040) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 480);
    *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = -8;
    if ( !v71 )
      break;
LABEL_115:
    ;
  }
  v72 = &std::vector<data::TalkExec>::operator[](&this->finish_exec, i_0)->type;
  *(_DWORD *)(((v2 + 3104) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 496);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3104),
    (const char *)(v2 + 3808),
    (const std::allocator<char> *)(v2 + 496));
  LOBYTE(v72) = common::tools::TxtFile::Row::assignToEnum<data::TalkExecType>(
                  row,
                  (const std::string *)(v2 + 3104),
                  v72) != 0;
  std::string::~string((void *)(v2 + 3104));
  *(_DWORD *)(((v2 + 3104) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 496);
  *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) = -8;
  if ( (_BYTE)v72 )
  {
    *(_DWORD *)(((v2 + 3168) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 3168) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 3199) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 3199) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 3168, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 3168),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      985);
    v73 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 3168),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v74 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v73, (const char (*)[14])byte_1A451DC0);
    v75 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v74, (const char (*)[256])(v2 + 3808));
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v75, (const char (*)[7])byte_1A451E00);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3168));
    *(_DWORD *)(((v2 + 3168) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_117;
  }
  v76 = std::vector<data::TalkExec>::operator[](&this->finish_exec, i_0);
  std::vector<std::string>::resize(&v76->param, 5uLL);
  array_countc = 0;
  for ( j_0 = 0; ; ++j_0 )
  {
    if ( j_0 > 4 )
    {
      v83 = std::vector<data::TalkExec>::operator[](&this->finish_exec, i_0);
      std::vector<std::string>::resize(&v83->param, array_countc);
      array_countb = i_0 + 1;
      goto LABEL_115;
    }
    snprintf((char *)(v2 + 3808), 0x100uLL, asc_1A46D760, i_0 + 1, j_0 + 1);
    *(_DWORD *)(((v2 + 3232) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 512);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 3232),
      (const char *)(v2 + 3808),
      (const std::allocator<char> *)(v2 + 512));
    v77 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3232));
    std::string::~string((void *)(v2 + 3232));
    *(_DWORD *)(((v2 + 3232) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 512);
    *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) = -8;
    if ( !v77 )
      break;
LABEL_113:
    ;
  }
  v78 = std::vector<data::TalkExec>::operator[](&this->finish_exec, i_0);
  v79 = std::vector<std::string>::operator[](&v78->param, j_0);
  *(_DWORD *)(((v2 + 3296) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 528);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3296),
    (const char *)(v2 + 3808),
    (const std::allocator<char> *)(v2 + 528));
  LOBYTE(v79) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 3296), v79) != 0;
  std::string::~string((void *)(v2 + 3296));
  *(_DWORD *)(((v2 + 3296) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 528);
  *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) = -8;
  if ( !(_BYTE)v79 )
  {
    array_countc = j_0 + 1;
    goto LABEL_113;
  }
  *(_DWORD *)(((v2 + 3360) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 3360) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 3391) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 3391) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 3360, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 3360),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
    "init",
    997);
  v80 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 3360),
          (const char (*)[16])"[CONFIG_ERROR] ");
  v81 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v80, (const char (*)[14])byte_1A451DC0);
  v82 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v81, (const char (*)[256])(v2 + 3808));
  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v82, (const char (*)[7])byte_1A451E00);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3360));
  *(_DWORD *)(((v2 + 3360) >> 3) + 0x7FFF8000) = -117901064;
  v7 = -1;
LABEL_117:
  std::string::~string((void *)(v2 + 800));
  if ( v97 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF805C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 100) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8068) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF81D4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862748) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450984 - (((_DWORD)v4 + 2147450992) & 0xFFFFFFF8) + 372) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF81FC) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_7(v2, 4128LL, v97);
  }
  return v7;
};

// Line 1013: range 000000000EF5C2D8-000000000EF5EF21
int32_t __cdecl data::RqTalkExcelConfig::init(
        data::RqTalkExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  std::vector<data::TalkCond>::reference v13; // rax
  std::vector<data::TalkCond>::reference v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  std::vector<data::TalkCond>::reference v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  unsigned __int64 v21; // rax
  _DWORD *v22; // rax
  bool v23; // r15
  unsigned __int64 v24; // rax
  char *k; // r14
  _DWORD *v26; // rax
  common::milog::MiLogStream *v27; // rax
  bool v28; // r14
  common::milog::MiLogStream *v29; // rax
  bool v30; // r14
  common::milog::MiLogStream *v31; // rax
  unsigned __int64 v32; // rax
  _DWORD *v33; // rax
  bool v34; // r15
  unsigned __int64 v35; // rax
  char *m; // r14
  _DWORD *v37; // rax
  common::milog::MiLogStream *v38; // rax
  bool v39; // r14
  common::milog::MiLogStream *v40; // rax
  bool t; // [rsp+0h] [rbp-B10h]
  bool ta; // [rsp+0h] [rbp-B10h]
  bool tb; // [rsp+0h] [rbp-B10h]
  bool tc; // [rsp+0h] [rbp-B10h]
  bool td; // [rsp+0h] [rbp-B10h]
  data::QuestCondType *te; // [rsp+0h] [rbp-B10h]
  bool tf; // [rsp+0h] [rbp-B10h]
  std::string *tg; // [rsp+0h] [rbp-B10h]
  bool th; // [rsp+0h] [rbp-B10h]
  bool ti; // [rsp+0h] [rbp-B10h]
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-B00h]
  uint32_t array_count; // [rsp+34h] [rbp-ADCh]
  uint32_t array_counta; // [rsp+34h] [rbp-ADCh]
  uint32_t i; // [rsp+38h] [rbp-AD8h]
  uint32_t j; // [rsp+3Ch] [rbp-AD4h]
  char v57[2768]; // [rsp+40h] [rbp-AD0h] BYREF

  v2 = (unsigned __int64)v57;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_6(2720LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "51 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 9"
                        " <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unknown> 208 1 9 <unkn"
                        "own> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 288 1 9 <unknown> 3"
                        "04 1 9 <unknown> 320 1 9 <unknown> 336 1 9 <unknown> 352 24 9 <unknown> 416 24 9 <unknown> 480 3"
                        "2 12 val_str:1016 544 32 9 <unknown> 608 32 9 <unknown> 672 32 9 <unknown> 736 32 9 <unknown> 80"
                        "0 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <unknown> 992 32 9 <unknown> 1056 32 9 <unknown> 11"
                        "20 32 9 <unknown> 1184 32 9 <unknown> 1248 32 9 <unknown> 1312 32 9 <unknown> 1376 32 9 <unknown"
                        "> 1440 32 9 <unknown> 1504 32 9 <unknown> 1568 32 9 <unknown> 1632 32 9 <unknown> 1696 32 9 <unk"
                        "nown> 1760 32 9 <unknown> 1824 32 9 <unknown> 1888 32 9 <unknown> 1952 32 9 <unknown> 2016 32 9 "
                        "<unknown> 2080 32 9 <unknown> 2144 32 9 <unknown> 2208 64 9 <unknown> 2304 64 9 <unknown> 2400 2"
                        "56 13 col_name:1014";
  *(_QWORD *)(v2 + 16) = data::RqTalkExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234753535;
  v4[536862730] = -234753535;
  v4[536862731] = -234881024;
  v4[536862732] = -218959118;
  v4[536862733] = -234881024;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -218959118;
  v4[536862754] = -218959118;
  v4[536862756] = -218959118;
  v4[536862758] = -218959118;
  v4[536862760] = -218959118;
  v4[536862762] = -218959118;
  v4[536862764] = -218959118;
  v4[536862766] = -218959118;
  v4[536862768] = -218959118;
  v4[536862770] = -218959118;
  v4[536862772] = -218959118;
  v4[536862774] = -218959118;
  v4[536862776] = -218959118;
  v4[536862778] = -218959118;
  v4[536862780] = -218959118;
  v4[536862782] = -218959118;
  v4[536862784] = -218959118;
  v4[536862786] = -218959118;
  v4[536862788] = -218959118;
  v4[536862791] = -218959118;
  v4[536862794] = -218959118;
  v4[536862803] = -202116109;
  v4[536862804] = -202116109;
  std::string::basic_string(v2 + 480);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 544),
    &byte_1A46D020,
    (const std::allocator<char> *)(v2 + 48));
  t = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 544), &this->id) != 0;
  std::string::~string((void *)(v2 + 544));
  *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 608) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 608, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 608),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1019);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 608),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v5, (const char (*)[29])byte_1A46D060);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 608));
    *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
    goto LABEL_73;
  }
  *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 672),
    &byte_1A46D0A0,
    (const std::allocator<char> *)(v2 + 64));
  ta = common::tools::TxtFile::Row::assignToEnum<data::TalkBeginWay>(
         row,
         (const std::string *)(v2 + 672),
         &this->begin_way) != 0;
  std::string::~string((void *)(v2 + 672));
  *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  if ( ta )
  {
    *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 736) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 736, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 736),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1024);
    v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 736),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v7, (const char (*)[33])byte_1A46D0E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 736));
    *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
    goto LABEL_73;
  }
  *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 800),
    &byte_1A469EE0,
    (const std::allocator<char> *)(v2 + 80));
  tb = common::tools::TxtFile::Row::assignToEnum<data::PlayMode>(
         row,
         (const std::string *)(v2 + 800),
         &this->active_mode) != 0;
  std::string::~string((void *)(v2 + 800));
  *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( tb )
  {
    *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 864) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 864, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 864),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1029);
    v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 864),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v8, (const char (*)[33])byte_1A469F20);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 864));
    *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
    goto LABEL_73;
  }
  *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 96);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 928),
    asc_1A46D140,
    (const std::allocator<char> *)(v2 + 96));
  tc = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
         row,
         (const std::string *)(v2 + 928),
         &this->begin_cond_comb) != 0;
  std::string::~string((void *)(v2 + 928));
  *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 96);
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( tc )
  {
    *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 992) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 992, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 992),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1034);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 992),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v9, (const char (*)[41])byte_1A46D180);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 992));
    *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
    goto LABEL_73;
  }
  std::vector<data::TalkCond>::resize(&this->begin_cond, 6uLL);
  array_count = 0;
  for ( i = 0; i <= 5; ++i )
  {
    snprintf((char *)(v2 + 2400), 0x100uLL, asc_1A46D1E0, i + 1);
    *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 112);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 1056),
      (const char *)(v2 + 2400),
      (const std::allocator<char> *)(v2 + 112));
    td = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1056));
    std::string::~string((void *)(v2 + 1056));
    *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 112);
    *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
    if ( !td )
    {
      te = &std::vector<data::TalkCond>::operator[](&this->begin_cond, i)->type;
      *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 128);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 1120),
        (const char *)(v2 + 2400),
        (const std::allocator<char> *)(v2 + 128));
      LOBYTE(te) = common::tools::TxtFile::Row::assignToEnum<data::QuestCondType>(
                     row,
                     (const std::string *)(v2 + 1120),
                     te) != 0;
      std::string::~string((void *)(v2 + 1120));
      *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 128);
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)te )
      {
        *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 1184) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1215) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 1215) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1184, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 1184),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1046);
        v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 1184),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v11 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v10, (const char (*)[14])byte_1A451DC0);
        v12 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v11, (const char (*)[256])(v2 + 2400));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1184));
        *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
        goto LABEL_73;
      }
      v13 = std::vector<data::TalkCond>::operator[](&this->begin_cond, i);
      std::vector<std::string>::resize(&v13->param, 5uLL);
      array_counta = 0;
      for ( j = 0; ; ++j )
      {
        if ( j > 4 )
        {
          v18 = std::vector<data::TalkCond>::operator[](&this->begin_cond, i);
          std::vector<std::string>::resize(&v18->param, array_counta);
          array_count = i + 1;
          break;
        }
        snprintf((char *)(v2 + 2400), 0x100uLL, asc_1A46D220, i + 1, j + 1);
        *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 144);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1248),
          (const char *)(v2 + 2400),
          (const std::allocator<char> *)(v2 + 144));
        tf = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1248));
        std::string::~string((void *)(v2 + 1248));
        *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 144);
        *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
        if ( !tf )
        {
          v14 = std::vector<data::TalkCond>::operator[](&this->begin_cond, i);
          tg = std::vector<std::string>::operator[](&v14->param, j);
          *(_DWORD *)(((v2 + 1312) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 160);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 1312),
            (const char *)(v2 + 2400),
            (const std::allocator<char> *)(v2 + 160));
          LOBYTE(tg) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 1312), tg) != 0;
          std::string::~string((void *)(v2 + 1312));
          *(_DWORD *)(((v2 + 1312) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 160);
          *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)tg )
          {
            *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1376) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1407) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1407) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1376, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1376),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              1058);
            v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1376),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v16 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                    v15,
                    (const char (*)[14])byte_1A451DC0);
            v17 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                    v16,
                    (const char (*)[256])(v2 + 2400));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v17, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1376));
            *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = -117901064;
            v6 = -1;
            goto LABEL_73;
          }
          array_counta = j + 1;
        }
      }
    }
  }
  std::vector<data::TalkCond>::resize(&this->begin_cond, array_count);
  *(_DWORD *)(((v2 + 1440) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 176);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1440),
    &byte_1A46D260,
    (const std::allocator<char> *)(v2 + 176));
  th = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 1440), &this->priority) != 0;
  std::string::~string((void *)(v2 + 1440));
  *(_DWORD *)(((v2 + 1440) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 176);
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
  if ( th )
  {
    *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1504) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1535) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 1535) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1504, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1504),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1071);
    v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 1504),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v19, (const char (*)[30])byte_1A46D2A0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1504));
    *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 1568) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 192);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 1568),
      &byte_1A46D2E0,
      (const std::allocator<char> *)(v2 + 192));
    ti = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 1568), (std::string *)(v2 + 480)) != 0;
    std::string::~string((void *)(v2 + 1568));
    *(_DWORD *)(((v2 + 1568) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 192);
    *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
    if ( ti )
    {
      *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 1632) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 1663) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1663) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 1632, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 1632),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1076);
      v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v2 + 1632),
              (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v20, (const char (*)[35])byte_1A46D320);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1632));
      *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      v21 = ((v2 + 352) >> 3) + 2147450880;
      *(_WORD *)v21 = 0;
      *(_BYTE *)(v21 + 2) = 0;
      v22 = (_DWORD *)(((v2 + 2208) >> 3) + 2147450880);
      *v22 = 0;
      v22[1] = 0;
      *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 208);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 2208),
        ";",
        (const std::allocator<char> *)(v2 + 208));
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 224);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 2240),
        ",",
        (const std::allocator<char> *)(v2 + 224));
      *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 240));
      std::vector<std::string>::vector(
        (std::vector<std::string> *const)(v2 + 352),
        (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 2208),
        (const std::vector<std::string>::allocator_type *)(v2 + 240));
      v23 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
              (const std::string *)(v2 + 480),
              (const std::vector<std::string> *)(v2 + 352),
              &this->next_talks,
              1) != 0;
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 352));
      v24 = ((v2 + 352) >> 3) + 2147450880;
      *(_WORD *)v24 = -1800;
      *(_BYTE *)(v24 + 2) = -8;
      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 240));
      *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
      for ( k = (char *)(v2 + 2272); k != (char *)(v2 + 2208); std::string::~string(k) )
        k -= 32;
      v26 = (_DWORD *)(((v2 + 2208) >> 3) + 2147450880);
      *v26 = -117901064;
      v26[1] = -117901064;
      std::allocator<char>::~allocator(v2 + 224);
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
      std::allocator<char>::~allocator(v2 + 208);
      *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
      if ( v23 )
      {
        *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 1696) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1727) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 1727) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1696, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 1696),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1081);
        v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 1696),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v27, (const char (*)[35])byte_1A46D320);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1696));
        *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 1760) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 256);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1760),
          &byte_1A46D380,
          (const std::allocator<char> *)(v2 + 256));
        v28 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                row,
                (const std::string *)(v2 + 1760),
                &this->init_dialog) != 0;
        std::string::~string((void *)(v2 + 1760));
        *(_DWORD *)(((v2 + 1760) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 256);
        *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
        if ( v28 )
        {
          *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 1824) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1855) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 1855) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 1824, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 1824),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1086);
          v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 1824),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(v29, (const char (*)[35])byte_1A46D3C0);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1824));
          *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = -117901064;
          v6 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 272);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 1888),
            &byte_1A46D4C0,
            (const std::allocator<char> *)(v2 + 272));
          v30 = common::tools::TxtFile::Row::assignToStr(
                  row,
                  (const std::string *)(v2 + 1888),
                  (std::string *)(v2 + 480)) != 0;
          std::string::~string((void *)(v2 + 1888));
          *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 272);
          *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
          if ( v30 )
          {
            *(_DWORD *)(((v2 + 1952) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1952) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1983) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 1983) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1952, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1952),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              1091);
            v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1952),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v31, (const char (*)[32])byte_1A46D500);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1952));
            *(_DWORD *)(((v2 + 1952) >> 3) + 0x7FFF8000) = -117901064;
            v6 = -1;
          }
          else
          {
            v32 = ((v2 + 416) >> 3) + 2147450880;
            *(_WORD *)v32 = 0;
            *(_BYTE *)(v32 + 2) = 0;
            v33 = (_DWORD *)(((v2 + 2304) >> 3) + 2147450880);
            *v33 = 0;
            v33[1] = 0;
            *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 288);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 2304),
              ";",
              (const std::allocator<char> *)(v2 + 288));
            *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 304);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 2336),
              ",",
              (const std::allocator<char> *)(v2 + 304));
            __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 2304);
            __l._M_len = 2LL;
            *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 1;
            std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 320));
            std::vector<std::string>::vector(
              (std::vector<std::string> *const)(v2 + 416),
              __l,
              (const std::vector<std::string>::allocator_type *)(v2 + 320));
            v34 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                    (const std::string *)(v2 + 480),
                    (const std::vector<std::string> *)(v2 + 416),
                    &this->npc_id,
                    1) != 0;
            std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 416));
            v35 = ((v2 + 416) >> 3) + 2147450880;
            *(_WORD *)v35 = -1800;
            *(_BYTE *)(v35 + 2) = -8;
            std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 320));
            *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
            for ( m = (char *)(v2 + 2368); m != (char *)(v2 + 2304); std::string::~string(m) )
              m -= 32;
            v37 = (_DWORD *)(((v2 + 2304) >> 3) + 2147450880);
            *v37 = -117901064;
            v37[1] = -117901064;
            std::allocator<char>::~allocator(v2 + 304);
            *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
            std::allocator<char>::~allocator(v2 + 288);
            *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
            if ( v34 )
            {
              *(_DWORD *)(((v2 + 2016) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 2016) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 2047) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 2047) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 2016, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 2016),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                1096);
              v38 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 2016),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v38, (const char (*)[32])byte_1A46D500);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2016));
              *(_DWORD *)(((v2 + 2016) >> 3) + 0x7FFF8000) = -117901064;
              v6 = -1;
            }
            else
            {
              *(_DWORD *)(((v2 + 2080) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 336);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 2080),
                &byte_1A46D540,
                (const std::allocator<char> *)(v2 + 336));
              v39 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                      row,
                      (const std::string *)(v2 + 2080),
                      &this->quest_id) != 0;
              std::string::~string((void *)(v2 + 2080));
              *(_DWORD *)(((v2 + 2080) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 336);
              *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
              if ( v39 )
              {
                *(_DWORD *)(((v2 + 2144) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 2144) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 2175) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 2175) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 2144, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 2144),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                  "init",
                  1101);
                v40 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 2144),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(v40, (const char (*)[38])byte_1A46D580);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2144));
                *(_DWORD *)(((v2 + 2144) >> 3) + 0x7FFF8000) = -117901064;
                v6 = -1;
              }
              else
              {
                v6 = 0;
              }
            }
          }
        }
      }
    }
  }
LABEL_73:
  std::string::~string((void *)(v2 + 480));
  if ( v57 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8124) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862738) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450944 - (((_DWORD)v4 + 2147450952) & 0xFFFFFFF8) + 236) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF814C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_6(v2, 2720LL, v57);
  }
  return v6;
};

// Line 1109: range 000000000EF5EF22-000000000EF5F4AA
int32_t __cdecl data::QuestResCollectionExcelConfig::init(
        data::QuestResCollectionExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  char v10[368]; // [rsp+10h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 1 9 <unknown> 48 1 9 <unknown> 64 32 9 <unknown> 128 32 9 <unknown> 192 32 9 <unknown> 256 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestResCollectionExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862723] = -218959118;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 64),
    &byte_1A469D20,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 64), &this->id) != 0;
  std::string::~string((void *)(v2 + 64));
  *(_DWORD *)(((v2 + 64) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1112);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v6, (const char (*)[29])byte_1A469D60);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 192),
      &byte_1A46DB80,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 192), &this->is_forbid_delete) != 0;
    std::string::~string((void *)(v2 + 192));
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 256) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 256, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 256),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1117);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 256),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(v9, (const char (*)[39])byte_1A46DBC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 256));
      result = -1;
    }
    else
    {
      result = 0;
    }
  }
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8014) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1125: range 000000000EF5F4AC-000000000EF5FA34
int32_t __cdecl data::TalkRole::init(data::TalkRole *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  char v10[368]; // [rsp+10h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 1 9 <unknown> 48 1 9 <unknown> 64 32 9 <unknown> 128 32 9 <unknown> 192 32 9 <unknown> 256 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::TalkRole::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862723] = -218959118;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 64),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::TalkRoleType>(row, (const std::string *)(v2 + 64), &this->type) != 0;
  std::string::~string((void *)(v2 + 64));
  *(_DWORD *)(((v2 + 64) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1128);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 192),
      "ID",
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 192), &this->id) != 0;
    std::string::~string((void *)(v2 + 192));
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 256) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 256, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 256),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1133);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 256),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v9, (const char (*)[23])byte_1A453440);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 256));
      result = -1;
    }
    else
    {
      result = 0;
    }
  }
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8014) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1141: range 000000000EF5FA36-000000000EF60D02
int32_t __cdecl data::DialogExcelConfig::init(
        data::DialogExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  unsigned __int64 v8; // rax
  _DWORD *v9; // rax
  bool v10; // r15
  unsigned __int64 v11; // rax
  char *i; // r14
  _DWORD *v13; // rax
  common::milog::MiLogStream *v14; // rax
  bool v15; // r14
  common::milog::MiLogStream *v16; // rax
  bool v17; // r14
  common::milog::MiLogStream *v18; // rax
  bool v19; // r14
  common::milog::MiLogStream *v20; // rax
  bool t; // [rsp+0h] [rbp-490h]
  bool ta; // [rsp+0h] [rbp-490h]
  char v24[1136]; // [rsp+20h] [rbp-470h] BYREF

  v2 = (unsigned __int64)v24;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1088LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "22 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 24 9 <unknown> 224 32 12 val_str:1142 288 32 9"
                        " <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 "
                        "<unknown> 672 32 9 <unknown> 736 32 9 <unknown> 800 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <"
                        "unknown> 992 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::DialogExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234881024;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862753] = -202116109;
  std::string::basic_string(v2 + 224);
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 288),
    &byte_1A46DDC0,
    (const std::allocator<char> *)(v2 + 32));
  t = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 288), &this->id) != 0;
  std::string::~string((void *)(v2 + 288));
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 352, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 352),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1145);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 352),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v5, (const char (*)[29])byte_1A46DE00);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
    *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 416),
      &byte_1A46DE40,
      (const std::allocator<char> *)(v2 + 48));
    ta = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 416), (std::string *)(v2 + 224)) != 0;
    std::string::~string((void *)(v2 + 416));
    *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 480) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 480, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 480),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1150);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 480),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(v7, (const char (*)[38])byte_1A46DE80);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 480));
      *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      v8 = ((v2 + 160) >> 3) + 2147450880;
      *(_WORD *)v8 = 0;
      *(_BYTE *)(v8 + 2) = 0;
      v9 = (_DWORD *)(((v2 + 992) >> 3) + 2147450880);
      *v9 = 0;
      v9[1] = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 992),
        ";",
        (const std::allocator<char> *)(v2 + 64));
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 1024),
        ",",
        (const std::allocator<char> *)(v2 + 80));
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 96));
      std::vector<std::string>::vector(
        (std::vector<std::string> *const)(v2 + 160),
        (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 992),
        (const std::vector<std::string>::allocator_type *)(v2 + 96));
      v10 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
              (const std::string *)(v2 + 224),
              (const std::vector<std::string> *)(v2 + 160),
              &this->next_dialogs,
              1) != 0;
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 160));
      v11 = ((v2 + 160) >> 3) + 2147450880;
      *(_WORD *)v11 = -1800;
      *(_BYTE *)(v11 + 2) = -8;
      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 96));
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      for ( i = (char *)(v2 + 1056); i != (char *)(v2 + 992); std::string::~string(i) )
        i -= 32;
      v13 = (_DWORD *)(((v2 + 992) >> 3) + 2147450880);
      *v13 = -117901064;
      v13[1] = -117901064;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 544, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 544),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1155);
        v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 544),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(v14, (const char (*)[38])byte_1A46DE80);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
        *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 112);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 608),
          &byte_1A46DEE0,
          (const std::allocator<char> *)(v2 + 112));
        v15 = common::tools::TxtFile::Row::assignToEnum<data::TalkShowType>(
                row,
                (const std::string *)(v2 + 608),
                &this->talk_show_type) != 0;
        std::string::~string((void *)(v2 + 608));
        *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 112);
        *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
        if ( v15 )
        {
          *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 672) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 672, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 672),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1160);
          v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 672),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v16, (const char (*)[33])byte_1A46DF20);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 672));
          *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = -117901064;
          v6 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 128);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 736),
            asc_1A46DF80,
            (const std::allocator<char> *)(v2 + 128));
          v17 = common::tools::TxtFile::Row::assignToEnum<data::TalkRoleType>(
                  row,
                  (const std::string *)(v2 + 736),
                  &this->talk_role.type) != 0;
          std::string::~string((void *)(v2 + 736));
          *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 128);
          *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
          if ( v17 )
          {
            *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 800) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 800, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 800),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              1165);
            v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 800),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v18, (const char (*)[41])byte_1A46DFC0);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 800));
            *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
            v6 = -1;
          }
          else
          {
            *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 144);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 864),
              asc_1A46E020,
              (const std::allocator<char> *)(v2 + 144));
            v19 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 864), &this->talk_role.id) != 0;
            std::string::~string((void *)(v2 + 864));
            *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 144);
            *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
            if ( v19 )
            {
              *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 928) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 959) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 928, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 928),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                1170);
              v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 928),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(v20, (const char (*)[37])byte_1A46E060);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 928));
              *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
              v6 = -1;
            }
            else
            {
              v6 = 0;
            }
          }
        }
      }
    }
  }
  std::string::~string((void *)(v2 + 224));
  if ( v24 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8080) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862730) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450912 - (((_DWORD)v4 + 2147450920) & 0xFFFFFFF8) + 104) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1088LL, v24);
  }
  return v6;
};

// Line 1178: range 000000000EF60D04-000000000EF61A31
int32_t __cdecl data::RandomQuestContent::init(
        data::RandomQuestContent *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  std::string *v9; // r14
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  bool v13; // r14
  common::milog::MiLogStream *v14; // rax
  bool v15; // r14
  common::milog::MiLogStream *v16; // rax
  uint32_t array_count; // [rsp+18h] [rbp-438h]
  uint32_t i; // [rsp+1Ch] [rbp-434h]
  char v19[1072]; // [rsp+20h] [rbp-430h] BYREF

  v2 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(1024LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "15 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 32 "
                        "9 <unknown> 192 32 9 <unknown> 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 32 9"
                        " <unknown> 512 32 9 <unknown> 576 32 9 <unknown> 640 32 9 <unknown> 704 256 13 col_name:1179";
  *(_QWORD *)(v2 + 16) = data::RandomQuestContent::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862750] = -202116109;
  v4[536862751] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 128),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToEnum<data::QuestContentType>(
         row,
         (const std::string *)(v2 + 128),
         &this->type) != 0;
  std::string::~string((void *)(v2 + 128));
  *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 192) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 223) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 223) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 192, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 192),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1183);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 192),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
    result = -1;
  }
  else
  {
    std::vector<std::string>::resize(&this->param, 2uLL);
    array_count = 0;
    for ( i = 0; i <= 1; ++i )
    {
      snprintf((char *)(v2 + 704), 0x100uLL, &byte_1A4539E0, i + 1);
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 256),
        (const char *)(v2 + 704),
        (const std::allocator<char> *)(v2 + 64));
      v8 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 256));
      std::string::~string((void *)(v2 + 256));
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( !v8 )
      {
        v9 = std::vector<std::string>::operator[](&this->param, i);
        *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 320),
          (const char *)(v2 + 704),
          (const std::allocator<char> *)(v2 + 80));
        LOBYTE(v9) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 320), v9) != 0;
        std::string::~string((void *)(v2 + 320));
        *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( (_BYTE)v9 )
        {
          *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 384) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 384, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 384),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1195);
          v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 384),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v11 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v10, (const char (*)[14])byte_1A451DC0);
          v12 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v11, (const char (*)[256])(v2 + 704));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 384));
          result = -1;
          goto LABEL_26;
        }
        array_count = i + 1;
      }
    }
    std::vector<std::string>::resize(&this->param, array_count);
    *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 448),
      &byte_1A468FC0,
      (const std::allocator<char> *)(v2 + 96));
    v13 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 448), &this->param_str) != 0;
    std::string::~string((void *)(v2 + 448));
    *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( v13 )
    {
      *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 512, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 512),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1204);
      v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v2 + 512),
              (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v14, (const char (*)[33])byte_1A469000);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
      result = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 112);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 576),
        &byte_1A469060,
        (const std::allocator<char> *)(v2 + 112));
      v15 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 576), &this->count) != 0;
      std::string::~string((void *)(v2 + 576));
      *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 112);
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      if ( v15 )
      {
        *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 640) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 640, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 640),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1209);
        v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 640),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v16, (const char (*)[27])byte_1A4690A0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 640));
        result = -1;
      }
      else
      {
        result = 0;
      }
    }
  }
LABEL_26:
  if ( v19 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF802C) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF803C) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF804C) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8054) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8078) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8068) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8070) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8078) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1217: range 000000000EF61A32-000000000EF61FBA
int32_t __cdecl data::RandomIdCountConfig::init(
        data::RandomIdCountConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  char v10[368]; // [rsp+10h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 1 9 <unknown> 48 1 9 <unknown> 64 32 9 <unknown> 128 32 9 <unknown> 192 32 9 <unknown> 256 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::RandomIdCountConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862723] = -218959118;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 64),
    "ID",
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 64), (std::string *)((char *)this + 8)) != 0;
  std::string::~string((void *)(v2 + 64));
  *(_DWORD *)(((v2 + 64) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1220);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v6, (const char (*)[23])byte_1A453440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 192),
      &byte_1A46E1E0,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToStr(
           row,
           (const std::string *)(v2 + 192),
           (std::string *)((char *)this + 40)) != 0;
    std::string::~string((void *)(v2 + 192));
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 256) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 256, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 256),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1225);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 256),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v9, (const char (*)[27])byte_1A46E220);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 256));
      result = -1;
    }
    else
    {
      result = 0;
    }
  }
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8014) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1233: range 000000000EF61FBC-000000000EF62E0B
int32_t __cdecl data::RandomQuestFilterConfig::init(
        data::RandomQuestFilterConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  unsigned __int64 v9; // rax
  _DWORD *v10; // rax
  bool v11; // r15
  unsigned __int64 v12; // rax
  char *i; // r14
  _DWORD *v14; // rax
  common::milog::MiLogStream *v15; // rax
  int32_t result; // eax
  bool t; // [rsp+8h] [rbp-368h]
  bool ta; // [rsp+8h] [rbp-368h]
  bool tb; // [rsp+8h] [rbp-368h]
  char v20[848]; // [rsp+20h] [rbp-350h] BYREF

  v2 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(800LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "16 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 24 9 <unknown> 192 32 12 val_str:1234 256 32 9 <unknown> 320 32 9 <unknown> 384 32"
                        " 9 <unknown> 448 32 9 <unknown> 512 32 9 <unknown> 576 32 9 <unknown> 640 32 9 <unknown> 704 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::RandomQuestFilterConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234881024;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862744] = -202116109;
  std::string::basic_string(v2 + 192);
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 256),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 32));
  t = common::tools::TxtFile::Row::assignToEnum<data::RandomQuestFilterType>(
        row,
        (const std::string *)(v2 + 256),
        &this->filter_type) != 0;
  std::string::~string((void *)(v2 + 256));
  *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( t )
  {
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 320, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 320),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1237);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 320),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v5, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 320));
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 384),
      &byte_1A46E3A0,
      (const std::allocator<char> *)(v2 + 48));
    ta = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 384), &this->filter_factor) != 0;
    std::string::~string((void *)(v2 + 384));
    *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( ta )
    {
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 448, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 448),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1242);
      v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 448),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v7, (const char (*)[27])byte_1A46E3E0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 512),
        &byte_1A4515A0,
        (const std::allocator<char> *)(v2 + 64));
      tb = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 512), (std::string *)(v2 + 192)) != 0;
      std::string::~string((void *)(v2 + 512));
      *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( tb )
      {
        *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 576) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 576, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 576),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1247);
        v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
               (common::milog::MiLogStream *const)(v2 + 576),
               (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v8, (const char (*)[27])byte_1A4515E0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 576));
        *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        v9 = ((v2 + 128) >> 3) + 2147450880;
        *(_WORD *)v9 = 0;
        *(_BYTE *)(v9 + 2) = 0;
        v10 = (_DWORD *)(((v2 + 704) >> 3) + 2147450880);
        *v10 = 0;
        v10[1] = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 704),
          ";",
          (const std::allocator<char> *)(v2 + 80));
        *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 96);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 736),
          ",",
          (const std::allocator<char> *)(v2 + 96));
        *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
        std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 112));
        std::vector<std::string>::vector(
          (std::vector<std::string> *const)(v2 + 128),
          (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 704),
          (const std::vector<std::string>::allocator_type *)(v2 + 112));
        v11 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
                (const std::string *)(v2 + 192),
                (const std::vector<std::string> *)(v2 + 128),
                &this->filter_param_list,
                1) != 0;
        std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 128));
        v12 = ((v2 + 128) >> 3) + 2147450880;
        *(_WORD *)v12 = -1800;
        *(_BYTE *)(v12 + 2) = -8;
        std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 112));
        *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
        for ( i = (char *)(v2 + 768); i != (char *)(v2 + 704); std::string::~string(i) )
          i -= 32;
        v14 = (_DWORD *)(((v2 + 704) >> 3) + 2147450880);
        *v14 = -117901064;
        v14[1] = -117901064;
        std::allocator<char>::~allocator(v2 + 96);
        *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v11 )
        {
          *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 640) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 640, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 640),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1252);
          v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 640),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v15, (const char (*)[27])byte_1A4515E0);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 640));
          *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = -117901064;
          v6 = -1;
        }
        else
        {
          v6 = 0;
        }
      }
    }
  }
  std::string::~string((void *)(v2 + 192));
  result = v6;
  if ( v20 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF803C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF804C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8054) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF805C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8060) = -168430091;
  }
  return result;
};

// Line 1260: range 000000000EF62E0C-000000000EF64BA6
int32_t __cdecl data::RandomQuestEntranceExcelConfig::init(
        data::RandomQuestEntranceExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // r14d
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  bool v10; // r14
  common::milog::MiLogStream *v11; // rax
  bool v12; // r14
  common::milog::MiLogStream *v13; // rax
  bool v14; // r14
  data::RandomQuestFilterType *p_filter_type; // r14
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  bool v19; // r14
  std::string *p_filter_factor; // r14
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  bool v24; // r14
  bool v25; // r14
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  std::vector<unsigned int> *p_filter_param_list; // r14
  unsigned __int64 v30; // rax
  _DWORD *v31; // rax
  unsigned __int64 v32; // rax
  char *j; // r14
  _DWORD *v34; // rax
  common::milog::MiLogStream *v35; // rax
  bool v37; // [rsp+Fh] [rbp-801h]
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-800h]
  uint32_t array_count; // [rsp+38h] [rbp-7D8h]
  uint32_t i; // [rsp+3Ch] [rbp-7D4h]
  char v41[2000]; // [rsp+40h] [rbp-7D0h] BYREF

  v2 = (unsigned __int64)v41;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1952LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "35 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 9"
                        " <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unknown> 208 1 9 <unkn"
                        "own> 224 1 9 <unknown> 240 1 9 <unknown> 256 24 9 <unknown> 320 32 12 val_str:1263 384 32 9 <unk"
                        "nown> 448 32 9 <unknown> 512 32 9 <unknown> 576 32 9 <unknown> 640 32 9 <unknown> 704 32 9 <unkn"
                        "own> 768 32 9 <unknown> 832 32 9 <unknown> 896 32 9 <unknown> 960 32 9 <unknown> 1024 32 9 <unkn"
                        "own> 1088 32 9 <unknown> 1152 32 9 <unknown> 1216 32 9 <unknown> 1280 32 9 <unknown> 1344 32 9 <"
                        "unknown> 1408 32 9 <unknown> 1472 32 9 <unknown> 1536 64 9 <unknown> 1632 256 13 col_name:1261";
  *(_QWORD *)(v2 + 16) = data::RandomQuestEntranceExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234881024;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862743] = -218959118;
  v4[536862745] = -218959118;
  v4[536862747] = -218959118;
  v4[536862749] = -218959118;
  v4[536862751] = -218959118;
  v4[536862753] = -218959118;
  v4[536862755] = -218959118;
  v4[536862757] = -218959118;
  v4[536862759] = -218959118;
  v4[536862761] = -218959118;
  v4[536862763] = -218959118;
  v4[536862765] = -218959118;
  v4[536862767] = -218959118;
  v4[536862770] = -218959118;
  v4[536862779] = -202116109;
  v4[536862780] = -202116109;
  std::string::basic_string(v2 + 320);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 384),
    &byte_1A46E6C0,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 384), &this->id) != 0;
  std::string::~string((void *)(v2 + 384));
  *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 63) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 448, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 448),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1266);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 448),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v6, (const char (*)[29])byte_1A46E700);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
    *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_47;
  }
  *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 512),
    &byte_1A46E740,
    (const std::allocator<char> *)(v2 + 64));
  v8 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 512), &this->weight) != 0;
  std::string::~string((void *)(v2 + 512));
  *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  if ( v8 )
  {
    *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 576) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 576, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 576),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1271);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 576),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v9, (const char (*)[27])byte_1A46E780);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 576));
    *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_47;
  }
  *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 640),
    &byte_1A46E7C0,
    (const std::allocator<char> *)(v2 + 80));
  v10 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 640), &this->template_id) != 0;
  std::string::~string((void *)(v2 + 640));
  *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( v10 )
  {
    *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 704) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 735) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 63) & 7) >= *(_BYTE *)(((v2 + 735) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 704, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 704),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1276);
    v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 704),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v11, (const char (*)[29])byte_1A46E800);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 704));
    *(_DWORD *)(((v2 + 704) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_47;
  }
  *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 96);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 768),
    asc_1A46E840,
    (const std::allocator<char> *)(v2 + 96));
  v12 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
          row,
          (const std::string *)(v2 + 768),
          &this->filter_logic_type) != 0;
  std::string::~string((void *)(v2 + 768));
  *(_DWORD *)(((v2 + 768) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 96);
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v12 )
  {
    *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 832) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 863) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 863) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 832, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 832),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1281);
    v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 832),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(v13, (const char (*)[38])byte_1A46E880);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 832));
    *(_DWORD *)(((v2 + 832) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_47;
  }
  std::vector<data::RandomQuestFilterConfig>::resize(&this->filter_list, 8uLL);
  array_count = 0;
  for ( i = 0; ; ++i )
  {
    if ( i > 7 )
    {
      std::vector<data::RandomQuestFilterConfig>::resize(&this->filter_list, array_count);
      v7 = 0;
      goto LABEL_47;
    }
    snprintf((char *)(v2 + 1632), 0x100uLL, asc_1A46E8E0, i + 1);
    *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 112);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 896),
      (const char *)(v2 + 1632),
      (const std::allocator<char> *)(v2 + 112));
    v14 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 896));
    std::string::~string((void *)(v2 + 896));
    *(_DWORD *)(((v2 + 896) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 112);
    *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
    if ( !v14 )
    {
      p_filter_type = &std::vector<data::RandomQuestFilterConfig>::operator[](&this->filter_list, i)->filter_type;
      *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 128);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 960),
        (const char *)(v2 + 1632),
        (const std::allocator<char> *)(v2 + 128));
      LOBYTE(p_filter_type) = common::tools::TxtFile::Row::assignToEnum<data::RandomQuestFilterType>(
                                row,
                                (const std::string *)(v2 + 960),
                                p_filter_type) != 0;
      std::string::~string((void *)(v2 + 960));
      *(_DWORD *)(((v2 + 960) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 128);
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)p_filter_type )
      {
        *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 1024) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1055) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 127) & 7) >= *(_BYTE *)(((v2 + 1055) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1024, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 1024),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1293);
        v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 1024),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v17 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v16, (const char (*)[14])byte_1A451DC0);
        v18 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v17, (const char (*)[256])(v2 + 1632));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v18, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1024));
        *(_DWORD *)(((v2 + 1024) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
        goto LABEL_47;
      }
      snprintf((char *)(v2 + 1632), 0x100uLL, asc_1A46E920, i + 1);
      *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 144);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 1088),
        (const char *)(v2 + 1632),
        (const std::allocator<char> *)(v2 + 144));
      v19 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1088));
      std::string::~string((void *)(v2 + 1088));
      *(_DWORD *)(((v2 + 1088) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 144);
      *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
      if ( !v19 )
      {
        p_filter_factor = &std::vector<data::RandomQuestFilterConfig>::operator[](&this->filter_list, i)->filter_factor;
        *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 160);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1152),
          (const char *)(v2 + 1632),
          (const std::allocator<char> *)(v2 + 160));
        LOBYTE(p_filter_factor) = common::tools::TxtFile::Row::assignToStr(
                                    row,
                                    (const std::string *)(v2 + 1152),
                                    p_filter_factor) != 0;
        std::string::~string((void *)(v2 + 1152));
        *(_DWORD *)(((v2 + 1152) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 160);
        *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
        if ( (_BYTE)p_filter_factor )
        {
          *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 1216) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 1247) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 96 + 63) & 7) >= *(_BYTE *)(((v2 + 1247) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 1216, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 1216),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1301);
          v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 1216),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v22 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v21, (const char (*)[14])byte_1A451DC0);
          v23 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v22, (const char (*)[256])(v2 + 1632));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v23, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1216));
          *(_DWORD *)(((v2 + 1216) >> 3) + 0x7FFF8000) = -117901064;
          v7 = -1;
          goto LABEL_47;
        }
        snprintf((char *)(v2 + 1632), 0x100uLL, asc_1A46E960, i + 1);
        *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 176);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1280),
          (const char *)(v2 + 1632),
          (const std::allocator<char> *)(v2 + 176));
        v24 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1280));
        std::string::~string((void *)(v2 + 1280));
        *(_DWORD *)(((v2 + 1280) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 176);
        *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
        if ( !v24 )
          break;
      }
    }
LABEL_45:
    ;
  }
  *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 192);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1344),
    (const char *)(v2 + 1632),
    (const std::allocator<char> *)(v2 + 192));
  v25 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 1344), (std::string *)(v2 + 320)) != 0;
  std::string::~string((void *)(v2 + 1344));
  *(_DWORD *)(((v2 + 1344) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 192);
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
  if ( v25 )
  {
    *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1408) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1439) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 1439) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1408, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1408),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1309);
    v26 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 1408),
            (const char (*)[16])"[CONFIG_ERROR] ");
    v27 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v26, (const char (*)[14])byte_1A451DC0);
    v28 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v27, (const char (*)[256])(v2 + 1632));
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v28, (const char (*)[7])byte_1A451E00);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1408));
    *(_DWORD *)(((v2 + 1408) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_47;
  }
  p_filter_param_list = &std::vector<data::RandomQuestFilterConfig>::operator[](&this->filter_list, i)->filter_param_list;
  v30 = ((v2 + 256) >> 3) + 2147450880;
  *(_WORD *)v30 = 0;
  *(_BYTE *)(v30 + 2) = 0;
  v31 = (_DWORD *)(((v2 + 1536) >> 3) + 2147450880);
  *v31 = 0;
  v31[1] = 0;
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 208);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1536),
    ";",
    (const std::allocator<char> *)(v2 + 208));
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 224);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1568),
    ",",
    (const std::allocator<char> *)(v2 + 224));
  __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 1536);
  __l._M_len = 2LL;
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
  std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 240));
  std::vector<std::string>::vector(
    (std::vector<std::string> *const)(v2 + 256),
    __l,
    (const std::vector<std::string>::allocator_type *)(v2 + 240));
  v37 = common::tools::StringUtils::splitToListBySeps<unsigned int>(
          (const std::string *)(v2 + 320),
          (const std::vector<std::string> *)(v2 + 256),
          p_filter_param_list,
          1) != 0;
  std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 256));
  v32 = ((v2 + 256) >> 3) + 2147450880;
  *(_WORD *)v32 = -1800;
  *(_BYTE *)(v32 + 2) = -8;
  std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 240));
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
  for ( j = (char *)(v2 + 1600); j != (char *)(v2 + 1536); std::string::~string(j) )
    j -= 32;
  v34 = (_DWORD *)(((v2 + 1536) >> 3) + 2147450880);
  *v34 = -117901064;
  v34[1] = -117901064;
  std::allocator<char>::~allocator(v2 + 224);
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
  std::allocator<char>::~allocator(v2 + 208);
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
  if ( !v37 )
  {
    array_count = i + 1;
    goto LABEL_45;
  }
  *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 1472) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 1503) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 - 96 + 63) & 7) >= *(_BYTE *)(((v2 + 1503) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 1472, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 1472),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
    "init",
    1314);
  v35 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 1472),
          (const char (*)[16])"[CONFIG_ERROR] ");
  common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(v35, (const char (*)[40])byte_1A46E9A0);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1472));
  *(_DWORD *)(((v2 + 1472) >> 3) + 0x7FFF8000) = -117901064;
  v7 = -1;
LABEL_47:
  std::string::~string((void *)(v2 + 320));
  if ( v41 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80C4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862733) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450924 - (((_DWORD)v4 + 2147450932) & 0xFFFFFFF8) + 160) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF80EC) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1952LL, v41);
  }
  return v7;
};

// Line 1326: range 000000000EF64BA8-000000000EF65721
int32_t __cdecl data::RandomQuestElem::init(data::RandomQuestElem *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t v6; // r14d
  unsigned __int64 v7; // rax
  _DWORD *v8; // rax
  bool v9; // r15
  unsigned __int64 v10; // rax
  char *i; // r14
  _DWORD *v12; // rax
  common::milog::MiLogStream *v13; // rax
  bool v14; // r14
  common::milog::MiLogStream *v15; // rax
  int32_t result; // eax
  bool split_list; // [rsp+8h] [rbp-2E8h]
  char v18[720]; // [rsp+20h] [rbp-2D0h] BYREF

  v2 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(672LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "13 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 24 "
                        "9 <unknown> 192 32 12 val_str:1327 256 32 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 "
                        "32 9 <unknown> 512 32 9 <unknown> 576 64 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::RandomQuestElem::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234881024;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -218959118;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862740] = -202116109;
  std::string::basic_string(v2 + 192);
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 256),
    &byte_1A46EB00,
    (const std::allocator<char> *)(v2 + 48));
  split_list = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 256), (std::string *)(v2 + 192)) != 0;
  std::string::~string((void *)(v2 + 256));
  *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( split_list )
  {
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 320, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 320),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1330);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 320),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v5, (const char (*)[27])byte_1A46EB40);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 320));
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
    v6 = -1;
  }
  else
  {
    v7 = ((v2 + 128) >> 3) + 2147450880;
    *(_WORD *)v7 = 0;
    *(_BYTE *)(v7 + 2) = 0;
    v8 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
    *v8 = 0;
    v8[1] = 0;
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 64);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 576),
      ";",
      (const std::allocator<char> *)(v2 + 64));
    *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 80);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 608),
      ",",
      (const std::allocator<char> *)(v2 + 80));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 96));
    std::vector<std::string>::vector(
      (std::vector<std::string> *const)(v2 + 128),
      (std::initializer_list<std::string >)__PAIR128__(2LL, v2 + 576),
      (const std::vector<std::string>::allocator_type *)(v2 + 96));
    v9 = common::tools::StringUtils::splitToListBySeps(
           (const std::string *)(v2 + 192),
           (const std::vector<std::string> *)(v2 + 128),
           &this->name,
           1) != 0;
    std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 128));
    v10 = ((v2 + 128) >> 3) + 2147450880;
    *(_WORD *)v10 = -1800;
    *(_BYTE *)(v10 + 2) = -8;
    std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 96));
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    for ( i = (char *)(v2 + 640); i != (char *)(v2 + 576); std::string::~string(i) )
      i -= 32;
    v12 = (_DWORD *)(((v2 + 576) >> 3) + 2147450880);
    *v12 = -117901064;
    v12[1] = -117901064;
    std::allocator<char>::~allocator(v2 + 80);
    *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
    std::allocator<char>::~allocator(v2 + 64);
    *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
    if ( v9 )
    {
      *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 384) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 384, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 384),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1335);
      v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
              (common::milog::MiLogStream *const)(v2 + 384),
              (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v13, (const char (*)[27])byte_1A46EB40);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 384));
      *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
      v6 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 112);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 448),
        &byte_1A46EB80,
        (const std::allocator<char> *)(v2 + 112));
      v14 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 448), &this->pool_id) != 0;
      std::string::~string((void *)(v2 + 448));
      *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 112);
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      if ( v14 )
      {
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 127) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 512, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 512),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1340);
        v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 512),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v15, (const char (*)[29])byte_1A46EBC0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
        *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
        v6 = -1;
      }
      else
      {
        v6 = 0;
      }
    }
  }
  std::string::~string((void *)(v2 + 192));
  result = v6;
  if ( v18 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8034) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF803C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF804C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8050) = -168430091;
  }
  return result;
};

// Line 1348: range 000000000EF65722-000000000EF668CA
int32_t __cdecl data::RandomQuestTemplateExcelConfig::init(
        data::RandomQuestTemplateExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // r14d
  bool v8; // r14
  bool v9; // r14
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  std::vector<std::string> *p_name; // r14
  unsigned __int64 v14; // rax
  _DWORD *v15; // rax
  unsigned __int64 v16; // rax
  char *j; // r14
  _DWORD *v18; // rax
  common::milog::MiLogStream *v19; // rax
  bool v20; // r14
  unsigned int *p_pool_id; // r14
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  bool v26; // [rsp+Fh] [rbp-561h]
  std::initializer_list<std::string > __l; // [rsp+10h] [rbp-560h]
  uint32_t array_count; // [rsp+38h] [rbp-538h]
  uint32_t i; // [rsp+3Ch] [rbp-534h]
  char v30[1328]; // [rsp+40h] [rbp-530h] BYREF

  v2 = (unsigned __int64)v30;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1280LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "21 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 24 9 <unknown> 224 32 12 val_str:1351 288 32 9"
                        " <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 "
                        "<unknown> 672 32 9 <unknown> 736 32 9 <unknown> 800 32 9 <unknown> 864 64 9 <unknown> 960 256 13 col_name:1349";
  *(_QWORD *)(v2 + 16) = data::RandomQuestTemplateExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234881024;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862749] = -218959118;
  v4[536862758] = -202116109;
  v4[536862759] = -202116109;
  std::string::basic_string(v2 + 224);
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 288),
    &byte_1A469CA0,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 288), &this->main_id) != 0;
  std::string::~string((void *)(v2 + 288));
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 352, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 352),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1354);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 352),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v6, (const char (*)[32])byte_1A469CE0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
    *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
    v7 = -1;
    goto LABEL_30;
  }
  std::vector<data::RandomQuestElem>::resize(&this->elem_list, 8uLL);
  array_count = 0;
  for ( i = 0; ; ++i )
  {
    if ( i > 7 )
    {
      std::vector<data::RandomQuestElem>::resize(&this->elem_list, array_count);
      v7 = 0;
      goto LABEL_30;
    }
    snprintf((char *)(v2 + 960), 0x100uLL, asc_1A46EDA0, i + 1);
    *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 416),
      (const char *)(v2 + 960),
      (const std::allocator<char> *)(v2 + 48));
    v8 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 416));
    std::string::~string((void *)(v2 + 416));
    *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( !v8 )
    {
      *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 480),
        (const char *)(v2 + 960),
        (const std::allocator<char> *)(v2 + 64));
      v9 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 480), (std::string *)(v2 + 224)) != 0;
      std::string::~string((void *)(v2 + 480));
      *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v9 )
      {
        *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 544, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 544),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1366);
        v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 544),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v11 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v10, (const char (*)[14])byte_1A451DC0);
        v12 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v11, (const char (*)[256])(v2 + 960));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v12, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
        *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
        goto LABEL_30;
      }
      p_name = &std::vector<data::RandomQuestElem>::operator[](&this->elem_list, i)->name;
      v14 = ((v2 + 160) >> 3) + 2147450880;
      *(_WORD *)v14 = 0;
      *(_BYTE *)(v14 + 2) = 0;
      v15 = (_DWORD *)(((v2 + 864) >> 3) + 2147450880);
      *v15 = 0;
      v15[1] = 0;
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 80);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 864),
        ";",
        (const std::allocator<char> *)(v2 + 80));
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 96);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 896),
        ",",
        (const std::allocator<char> *)(v2 + 96));
      __l._M_array = (std::initializer_list<std::string >::iterator)(v2 + 864);
      __l._M_len = 2LL;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<std::string>::allocator((std::allocator<std::string > *const)(v2 + 112));
      std::vector<std::string>::vector(
        (std::vector<std::string> *const)(v2 + 160),
        __l,
        (const std::vector<std::string>::allocator_type *)(v2 + 112));
      v26 = common::tools::StringUtils::splitToListBySeps(
              (const std::string *)(v2 + 224),
              (const std::vector<std::string> *)(v2 + 160),
              p_name,
              1) != 0;
      std::vector<std::string>::~vector((std::vector<std::string> *const)(v2 + 160));
      v16 = ((v2 + 160) >> 3) + 2147450880;
      *(_WORD *)v16 = -1800;
      *(_BYTE *)(v16 + 2) = -8;
      std::allocator<std::string>::~allocator((std::allocator<std::string > *const)(v2 + 112));
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      for ( j = (char *)(v2 + 928); j != (char *)(v2 + 864); std::string::~string(j) )
        j -= 32;
      v18 = (_DWORD *)(((v2 + 864) >> 3) + 2147450880);
      *v18 = -117901064;
      v18[1] = -117901064;
      std::allocator<char>::~allocator(v2 + 96);
      *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
      std::allocator<char>::~allocator(v2 + 80);
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      if ( v26 )
      {
        *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 608) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 608, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 608),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1371);
        v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 608),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(v19, (const char (*)[37])byte_1A46EDE0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 608));
        *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = -117901064;
        v7 = -1;
        goto LABEL_30;
      }
      snprintf((char *)(v2 + 960), 0x100uLL, asc_1A46EE40, i + 1);
      *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 128);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 672),
        (const char *)(v2 + 960),
        (const std::allocator<char> *)(v2 + 128));
      v20 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 672));
      std::string::~string((void *)(v2 + 672));
      *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 128);
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      if ( !v20 )
        break;
    }
LABEL_28:
    ;
  }
  p_pool_id = &std::vector<data::RandomQuestElem>::operator[](&this->elem_list, i)->pool_id;
  *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 144);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 736),
    (const char *)(v2 + 960),
    (const std::allocator<char> *)(v2 + 144));
  LOBYTE(p_pool_id) = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                        row,
                        (const std::string *)(v2 + 736),
                        p_pool_id) != 0;
  std::string::~string((void *)(v2 + 736));
  *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 144);
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
  if ( !(_BYTE)p_pool_id )
  {
    array_count = i + 1;
    goto LABEL_28;
  }
  *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 800) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 831) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 800, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 800),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
    "init",
    1379);
  v22 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 800),
          (const char (*)[16])"[CONFIG_ERROR] ");
  v23 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v22, (const char (*)[14])byte_1A451DC0);
  v24 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v23, (const char (*)[256])(v2 + 960));
  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v24, (const char (*)[7])byte_1A451E00);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 800));
  *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
  v7 = -1;
LABEL_30:
  std::string::~string((void *)(v2 + 224));
  if ( v30 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8070) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862730) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450912 - (((_DWORD)v4 + 2147450920) & 0xFFFFFFF8) + 88) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8098) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1280LL, v30);
  }
  return v7;
};

// Line 1391: range 000000000EF668CC-000000000EF66E54
int32_t __cdecl data::QuestElemSample::init(data::QuestElemSample *const this, const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  char v10[368]; // [rsp+10h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 1 9 <unknown> 48 1 9 <unknown> 64 32 9 <unknown> 128 32 9 <unknown> 192 32 9 <unknown> 256 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestElemSample::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862723] = -218959118;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 64),
    &byte_1A451520,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 64), &this->type) != 0;
  std::string::~string((void *)(v2 + 64));
  *(_DWORD *)(((v2 + 64) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1394);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v6, (const char (*)[27])byte_1A451560);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 192),
      &byte_1A46EE80,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 192), &this->content) != 0;
    std::string::~string((void *)(v2 + 192));
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 256) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 256, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 256),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1399);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 256),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v9, (const char (*)[27])byte_1A46EEC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 256));
      result = -1;
    }
    else
    {
      result = 0;
    }
  }
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8014) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1407: range 000000000EF66E56-000000000EF67F22
int32_t __cdecl data::RandomQuestElemPoolExcelConfig::init(
        data::RandomQuestElemPoolExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r15
  common::milog::MiLogStream *v6; // rax
  int v7; // eax
  bool v8; // r15
  common::milog::MiLogStream *v9; // rax
  bool v10; // r15
  common::milog::MiLogStream *v11; // rax
  bool v12; // r15
  std::string *p_type; // r15
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  bool v17; // r15
  std::string *p_content; // r15
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rax
  int32_t v22; // ebx
  uint32_t array_count; // [rsp+18h] [rbp-518h]
  uint32_t i; // [rsp+1Ch] [rbp-514h]
  char v26[1296]; // [rsp+20h] [rbp-510h] BYREF

  v2 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1248LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "20 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 9"
                        " <unknown> 144 1 9 <unknown> 160 32 9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <"
                        "unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 <unknown> 672 32 9 <u"
                        "nknown> 736 32 9 <unknown> 800 32 9 <unknown> 864 32 9 <unknown> 928 256 13 col_name:1408";
  *(_QWORD *)(v2 + 16) = data::RandomQuestElemPoolExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862757] = -202116109;
  v4[536862758] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 160),
    "ID",
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 160), &this->id) != 0;
  std::string::~string((void *)(v2 + 160));
  *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 224, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 224),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1412);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 224),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v6, (const char (*)[23])byte_1A453440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
    v7 = -1;
    goto LABEL_31;
  }
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 288),
    &byte_1A46F080,
    (const std::allocator<char> *)(v2 + 64));
  v8 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 288), &this->pool_id) != 0;
  std::string::~string((void *)(v2 + 288));
  *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  if ( v8 )
  {
    *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 352, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 352),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1417);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 352),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v9, (const char (*)[32])byte_1A46F0C0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
    v7 = -1;
    goto LABEL_31;
  }
  *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 416),
    &byte_1A46F100,
    (const std::allocator<char> *)(v2 + 80));
  v10 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 416), &this->weight) != 0;
  std::string::~string((void *)(v2 + 416));
  *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( v10 )
  {
    *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 480) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 480, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 480),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1422);
    v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 480),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v11, (const char (*)[33])byte_1A46F140);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 480));
    v7 = -1;
    goto LABEL_31;
  }
  std::vector<data::QuestElemSample>::resize(&this->sample_list, 8uLL);
  array_count = 0;
  for ( i = 0; ; ++i )
  {
    if ( i > 7 )
    {
      std::vector<data::QuestElemSample>::resize(&this->sample_list, array_count);
      v7 = 0;
      goto LABEL_31;
    }
    snprintf((char *)(v2 + 928), 0x100uLL, asc_1A46F1A0, i + 1);
    *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 96);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 544),
      (const char *)(v2 + 928),
      (const std::allocator<char> *)(v2 + 96));
    v12 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 544));
    std::string::~string((void *)(v2 + 544));
    *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 96);
    *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
    if ( !v12 )
    {
      p_type = &std::vector<data::QuestElemSample>::operator[](&this->sample_list, i)->type;
      *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 112);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 608),
        (const char *)(v2 + 928),
        (const std::allocator<char> *)(v2 + 112));
      LOBYTE(p_type) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 608), p_type) != 0;
      std::string::~string((void *)(v2 + 608));
      *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 112);
      *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)p_type )
      {
        *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 672) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 703) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 672, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 672),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1434);
        v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 672),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v15 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v14, (const char (*)[14])byte_1A451DC0);
        v16 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v15, (const char (*)[256])(v2 + 928));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v16, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 672));
        v7 = -1;
        goto LABEL_31;
      }
      snprintf((char *)(v2 + 928), 0x100uLL, asc_1A46F1E0, i + 1);
      *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 128);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 736),
        (const char *)(v2 + 928),
        (const std::allocator<char> *)(v2 + 128));
      v17 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 736));
      std::string::~string((void *)(v2 + 736));
      *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 128);
      *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
      if ( !v17 )
        break;
    }
LABEL_29:
    ;
  }
  p_content = &std::vector<data::QuestElemSample>::operator[](&this->sample_list, i)->content;
  *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 144);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 800),
    (const char *)(v2 + 928),
    (const std::allocator<char> *)(v2 + 144));
  LOBYTE(p_content) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 800), p_content) != 0;
  std::string::~string((void *)(v2 + 800));
  *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 144);
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
  if ( !(_BYTE)p_content )
  {
    array_count = i + 1;
    goto LABEL_29;
  }
  *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
  if ( *(char *)(((v2 + 864) >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) != 0
    && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) )
  {
    __asan_report_store_n(v2 + 864, 32LL);
  }
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 864),
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
    "init",
    1442);
  v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
          (common::milog::MiLogStream *const)(v2 + 864),
          (const char (*)[16])"[CONFIG_ERROR] ");
  v20 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v19, (const char (*)[14])byte_1A451DC0);
  v21 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v20, (const char (*)[256])(v2 + 928));
  common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v21, (const char (*)[7])byte_1A451E00);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 864));
  v7 = -1;
LABEL_31:
  v22 = v7;
  if ( v26 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8050) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8058) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8068) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8070) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8094) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1248LL, v26);
  }
  return v22;
};

// Line 1454: range 000000000EF67F24-000000000EF6931D
int32_t __cdecl data::RandomMainQuestExcelConfig::init(
        data::RandomMainQuestExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r15
  common::milog::MiLogStream *v6; // rax
  int v7; // eax
  bool v8; // r15
  common::milog::MiLogStream *v9; // rax
  bool v10; // r15
  common::milog::MiLogStream *v11; // rax
  bool v12; // r15
  common::milog::MiLogStream *v13; // rax
  bool v14; // r15
  common::milog::MiLogStream *v15; // rax
  bool v16; // r15
  common::milog::MiLogStream *v17; // rax
  bool v18; // r15
  common::milog::MiLogStream *v19; // rax
  bool v20; // r15
  common::milog::MiLogStream *v21; // rax
  int32_t v22; // ebx
  char v24[1232]; // [rsp+10h] [rbp-4D0h] BYREF

  v2 = (unsigned __int64)v24;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_5(1184LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "24 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 32 9 <unknown> 224 32 9 <unknown> 288 32 9 <un"
                        "known> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 <unk"
                        "nown> 672 32 9 <unknown> 736 32 9 <unknown> 800 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <unkn"
                        "own> 992 32 9 <unknown> 1056 32 9 <unknown> 1120 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::RandomMainQuestExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -218959118;
  v4[536862752] = -218959118;
  v4[536862754] = -218959118;
  v4[536862756] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 160),
    &byte_1A469CA0,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 160), &this->id) != 0;
  std::string::~string((void *)(v2 + 160));
  *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 224, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 224),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1457);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 224),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v6, (const char (*)[32])byte_1A469CE0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
    v7 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 288),
      &byte_1A469E40,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToEnum<data::QuestType>(row, (const std::string *)(v2 + 288), &this->type) != 0;
    std::string::~string((void *)(v2 + 288));
    *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 352, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 352),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1462);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 352),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v9, (const char (*)[33])byte_1A469E80);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 352));
      v7 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 416),
        aLua_5,
        (const std::allocator<char> *)(v2 + 64));
      v10 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 416), &this->lua_path) != 0;
      std::string::~string((void *)(v2 + 416));
      *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 480) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 511) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 480, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 480),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1467);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 480),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v11, (const char (*)[36])byte_1A469FC0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 480));
        v7 = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 544),
          &byte_1A46A020,
          (const std::allocator<char> *)(v2 + 80));
        v12 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                row,
                (const std::string *)(v2 + 544),
                &this->recommend_level) != 0;
        std::string::~string((void *)(v2 + 544));
        *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v12 )
        {
          *(_DWORD *)(((v2 + 608) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 608) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 639) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 608, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 608),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1472);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 608),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v13, (const char (*)[33])byte_1A46A060);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 608));
          v7 = -1;
        }
        else
        {
          *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 96);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 672),
            &byte_1A46A0C0,
            (const std::allocator<char> *)(v2 + 96));
          v14 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 672), &this->repeatable) != 0;
          std::string::~string((void *)(v2 + 672));
          *(_DWORD *)(((v2 + 672) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 96);
          *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
          if ( v14 )
          {
            *(_DWORD *)(((v2 + 736) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 736) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 767) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 736, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 736),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              1477);
            v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 736),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v15, (const char (*)[30])byte_1A46A100);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 736));
            v7 = -1;
          }
          else
          {
            *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 112);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 800),
              &byte_1A469EE0,
              (const std::allocator<char> *)(v2 + 112));
            v16 = common::tools::TxtFile::Row::assignToEnum<data::PlayMode>(
                    row,
                    (const std::string *)(v2 + 800),
                    &this->active_mode) != 0;
            std::string::~string((void *)(v2 + 800));
            *(_DWORD *)(((v2 + 800) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 112);
            *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
            if ( v16 )
            {
              *(_DWORD *)(((v2 + 864) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 864) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 895) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 864, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 864),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                1482);
              v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 864),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v17, (const char (*)[33])byte_1A469F20);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 864));
              v7 = -1;
            }
            else
            {
              *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = 0;
              *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
              std::allocator<char>::allocator(v2 + 128);
              std::string::basic_string<std::allocator<char>>(
                (std::string *const)(v2 + 928),
                &byte_1A469400,
                (const std::allocator<char> *)(v2 + 128));
              v18 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                      row,
                      (const std::string *)(v2 + 928),
                      &this->chapter_id) != 0;
              std::string::~string((void *)(v2 + 928));
              *(_DWORD *)(((v2 + 928) >> 3) + 0x7FFF8000) = -117901064;
              std::allocator<char>::~allocator(v2 + 128);
              *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
              if ( v18 )
              {
                *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = 0;
                if ( *(char *)(((v2 + 992) >> 3) + 0x7FFF8000) < 0
                  || *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) != 0
                  && (char)((v2 - 96 + 95) & 7) >= *(_BYTE *)(((v2 + 1023) >> 3) + 0x7FFF8000) )
                {
                  __asan_report_store_n(v2 + 992, 32LL);
                }
                common::milog::MiLogStream::create(
                  (common::milog::MiLogStream *)(v2 + 992),
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                  "init",
                  1487);
                v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                        (common::milog::MiLogStream *const)(v2 + 992),
                        (const char (*)[16])"[CONFIG_ERROR] ");
                common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(v19, (const char (*)[29])byte_1A469440);
                common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 992));
                v7 = -1;
              }
              else
              {
                *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 0;
                *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
                std::allocator<char>::allocator(v2 + 144);
                std::string::basic_string<std::allocator<char>>(
                  (std::string *const)(v2 + 1056),
                  &byte_1A46A140,
                  (const std::allocator<char> *)(v2 + 144));
                v20 = common::tools::TxtFile::Row::assignToStr(
                        row,
                        (const std::string *)(v2 + 1056),
                        &this->reward_id_list) != 0;
                std::string::~string((void *)(v2 + 1056));
                *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = -117901064;
                std::allocator<char>::~allocator(v2 + 144);
                *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
                if ( v20 )
                {
                  *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = 0;
                  if ( *(char *)(((v2 + 1120) >> 3) + 0x7FFF8000) < 0
                    || *(_BYTE *)(((v2 + 1151) >> 3) + 0x7FFF8000) != 0
                    && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 1151) >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_store_n(v2 + 1120, 32LL);
                  }
                  common::milog::MiLogStream::create(
                    (common::milog::MiLogStream *)(v2 + 1120),
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                    "init",
                    1492);
                  v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                          (common::milog::MiLogStream *const)(v2 + 1120),
                          (const char (*)[16])"[CONFIG_ERROR] ");
                  common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                    v21,
                    (const char (*)[41])byte_1A46A180);
                  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1120));
                  v7 = -1;
                }
                else
                {
                  v7 = 0;
                }
              }
            }
          }
        }
      }
    }
  }
  v22 = v7;
  if ( v24 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8050) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8058) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8060) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8068) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8070) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8078) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8080) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8088) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8090) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_5(v2, 1184LL, v24);
  }
  return v22;
};

// Line 1500: range 000000000EF6931E-000000000EF71CA1
int32_t __cdecl data::RandomQuestExcelConfig::init(
        data::RandomQuestExcelConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r15
  common::milog::MiLogStream *v6; // rax
  int v7; // eax
  bool v8; // r15
  common::milog::MiLogStream *v9; // rax
  bool v10; // r15
  common::milog::MiLogStream *v11; // rax
  bool v12; // r15
  common::milog::MiLogStream *v13; // rax
  bool v14; // r15
  common::milog::MiLogStream *v15; // rax
  bool v16; // r15
  data::QuestCondType *p_type; // r15
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  std::vector<data::RandomQuestCond>::reference v21; // rax
  bool v22; // r15
  std::vector<data::RandomQuestCond>::reference v23; // rax
  std::string *v24; // r15
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  std::vector<data::RandomQuestCond>::reference v28; // rax
  bool v29; // r15
  common::milog::MiLogStream *v30; // rax
  bool v31; // r15
  data::QuestContentType *v32; // r15
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rax
  std::vector<data::RandomQuestContent>::reference v36; // rax
  bool v37; // r15
  std::vector<data::RandomQuestContent>::reference v38; // rax
  std::string *v39; // r15
  common::milog::MiLogStream *v40; // rax
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // rax
  std::vector<data::RandomQuestContent>::reference v43; // rax
  bool v44; // r15
  std::string *p_param_str; // r15
  common::milog::MiLogStream *v46; // rax
  common::milog::MiLogStream *v47; // rax
  common::milog::MiLogStream *v48; // rax
  bool v49; // r15
  std::string *p_count; // r15
  common::milog::MiLogStream *v51; // rax
  common::milog::MiLogStream *v52; // rax
  common::milog::MiLogStream *v53; // rax
  bool v54; // r15
  common::milog::MiLogStream *v55; // rax
  bool v56; // r15
  data::QuestContentType *v57; // r15
  common::milog::MiLogStream *v58; // rax
  common::milog::MiLogStream *v59; // rax
  common::milog::MiLogStream *v60; // rax
  std::vector<data::RandomQuestContent>::reference v61; // rax
  bool v62; // r15
  std::vector<data::RandomQuestContent>::reference v63; // rax
  std::string *v64; // r15
  common::milog::MiLogStream *v65; // rax
  common::milog::MiLogStream *v66; // rax
  common::milog::MiLogStream *v67; // rax
  std::vector<data::RandomQuestContent>::reference v68; // rax
  bool v69; // r15
  std::string *v70; // r15
  common::milog::MiLogStream *v71; // rax
  common::milog::MiLogStream *v72; // rax
  common::milog::MiLogStream *v73; // rax
  bool v74; // r15
  std::string *v75; // r15
  common::milog::MiLogStream *v76; // rax
  common::milog::MiLogStream *v77; // rax
  common::milog::MiLogStream *v78; // rax
  bool v79; // r15
  common::milog::MiLogStream *v80; // rax
  bool v81; // r15
  common::milog::MiLogStream *v82; // rax
  bool v83; // r15
  std::string *v84; // r15
  common::milog::MiLogStream *v85; // rax
  common::milog::MiLogStream *v86; // rax
  common::milog::MiLogStream *v87; // rax
  bool v88; // r15
  common::milog::MiLogStream *v89; // rax
  bool v90; // r15
  common::milog::MiLogStream *v91; // rax
  bool v92; // r15
  common::milog::MiLogStream *v93; // rax
  bool v94; // r15
  common::milog::MiLogStream *v95; // rax
  bool v96; // r15
  common::milog::MiLogStream *v97; // rax
  bool v98; // r15
  common::milog::MiLogStream *v99; // rax
  bool v100; // r15
  common::milog::MiLogStream *v101; // rax
  bool v102; // r15
  common::milog::MiLogStream *v103; // rax
  bool v104; // r15
  common::milog::MiLogStream *v105; // rax
  bool v106; // r15
  unsigned int *p_id; // r15
  common::milog::MiLogStream *v108; // rax
  common::milog::MiLogStream *v109; // rax
  common::milog::MiLogStream *v110; // rax
  bool v111; // r15
  unsigned int *v112; // r15
  common::milog::MiLogStream *v113; // rax
  common::milog::MiLogStream *v114; // rax
  common::milog::MiLogStream *v115; // rax
  bool v116; // r15
  data::QuestExecType *v117; // r15
  common::milog::MiLogStream *v118; // rax
  common::milog::MiLogStream *v119; // rax
  common::milog::MiLogStream *v120; // rax
  std::vector<data::QuestExec>::reference v121; // rax
  bool v122; // r15
  std::vector<data::QuestExec>::reference v123; // rax
  std::string *v124; // r15
  common::milog::MiLogStream *v125; // rax
  common::milog::MiLogStream *v126; // rax
  common::milog::MiLogStream *v127; // rax
  std::vector<data::QuestExec>::reference v128; // rax
  bool v129; // r15
  data::QuestExecType *v130; // r15
  common::milog::MiLogStream *v131; // rax
  common::milog::MiLogStream *v132; // rax
  common::milog::MiLogStream *v133; // rax
  std::vector<data::QuestExec>::reference v134; // rax
  bool v135; // r15
  std::vector<data::QuestExec>::reference v136; // rax
  std::string *v137; // r15
  common::milog::MiLogStream *v138; // rax
  common::milog::MiLogStream *v139; // rax
  common::milog::MiLogStream *v140; // rax
  std::vector<data::QuestExec>::reference v141; // rax
  bool v142; // r15
  data::QuestExecType *v143; // r15
  common::milog::MiLogStream *v144; // rax
  common::milog::MiLogStream *v145; // rax
  common::milog::MiLogStream *v146; // rax
  std::vector<data::QuestExec>::reference v147; // rax
  bool v148; // r15
  std::vector<data::QuestExec>::reference v149; // rax
  std::string *v150; // r15
  common::milog::MiLogStream *v151; // rax
  common::milog::MiLogStream *v152; // rax
  common::milog::MiLogStream *v153; // rax
  std::vector<data::QuestExec>::reference v154; // rax
  bool v155; // r15
  common::milog::MiLogStream *v156; // rax
  bool v157; // r15
  common::milog::MiLogStream *v158; // rax
  bool v159; // r15
  common::milog::MiLogStream *v160; // rax
  int32_t v161; // ebx
  uint32_t array_count; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_counta; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_countb; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_countc; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_countd; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_counte; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_countf; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_countg; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_counth; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_counti; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_countj; // [rsp+14h] [rbp-1E4Ch]
  uint32_t array_countk; // [rsp+14h] [rbp-1E4Ch]
  uint32_t i; // [rsp+18h] [rbp-1E48h]
  uint32_t j; // [rsp+1Ch] [rbp-1E44h]
  uint32_t i_0; // [rsp+20h] [rbp-1E40h]
  uint32_t j_0; // [rsp+24h] [rbp-1E3Ch]
  uint32_t i_1; // [rsp+28h] [rbp-1E38h]
  uint32_t j_1; // [rsp+2Ch] [rbp-1E34h]
  uint32_t i_2; // [rsp+30h] [rbp-1E30h]
  uint32_t i_3; // [rsp+34h] [rbp-1E2Ch]
  uint32_t i_4; // [rsp+38h] [rbp-1E28h]
  uint32_t j_2; // [rsp+3Ch] [rbp-1E24h]
  uint32_t i_5; // [rsp+40h] [rbp-1E20h]
  uint32_t j_3; // [rsp+44h] [rbp-1E1Ch]
  uint32_t i_6; // [rsp+48h] [rbp-1E18h]
  uint32_t j_4; // [rsp+4Ch] [rbp-1E14h]
  char v189[7696]; // [rsp+50h] [rbp-1E10h] BYREF

  v2 = (unsigned __int64)v189;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_7(7648LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "159 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 "
                        "9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unknown> 208 1 9 <unk"
                        "nown> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 288 1 9 <unknown> "
                        "304 1 9 <unknown> 320 1 9 <unknown> 336 1 9 <unknown> 352 1 9 <unknown> 368 1 9 <unknown> 384 1 "
                        "9 <unknown> 400 1 9 <unknown> 416 1 9 <unknown> 432 1 9 <unknown> 448 1 9 <unknown> 464 1 9 <unk"
                        "nown> 480 1 9 <unknown> 496 1 9 <unknown> 512 1 9 <unknown> 528 1 9 <unknown> 544 1 9 <unknown> "
                        "560 1 9 <unknown> 576 1 9 <unknown> 592 1 9 <unknown> 608 1 9 <unknown> 624 1 9 <unknown> 640 1 "
                        "9 <unknown> 656 1 9 <unknown> 672 1 9 <unknown> 688 1 9 <unknown> 704 1 9 <unknown> 720 1 9 <unk"
                        "nown> 736 1 9 <unknown> 752 1 9 <unknown> 768 1 9 <unknown> 784 1 9 <unknown> 800 1 9 <unknown> "
                        "816 1 9 <unknown> 832 1 9 <unknown> 848 1 9 <unknown> 864 1 9 <unknown> 880 1 9 <unknown> 896 1 "
                        "9 <unknown> 912 1 9 <unknown> 928 1 9 <unknown> 944 1 9 <unknown> 960 1 9 <unknown> 976 1 9 <unk"
                        "nown> 992 32 9 <unknown> 1056 32 9 <unknown> 1120 32 9 <unknown> 1184 32 9 <unknown> 1248 32 9 <"
                        "unknown> 1312 32 9 <unknown> 1376 32 9 <unknown> 1440 32 9 <unknown> 1504 32 9 <unknown> 1568 32"
                        " 9 <unknown> 1632 32 9 <unknown> 1696 32 9 <unknown> 1760 32 9 <unknown> 1824 32 9 <unknown> 188"
                        "8 32 9 <unknown> 1952 32 9 <unknown> 2016 32 9 <unknown> 2080 32 9 <unknown> 2144 32 9 <unknown>"
                        " 2208 32 9 <unknown> 2272 32 9 <unknown> 2336 32 9 <unknown> 2400 32 9 <unknown> 2464 32 9 <unkn"
                        "own> 2528 32 9 <unknown> 2592 32 9 <unknown> 2656 32 9 <unknown> 2720 32 9 <unknown> 2784 32 9 <"
                        "unknown> 2848 32 9 <unknown> 2912 32 9 <unknown> 2976 32 9 <unknown> 3040 32 9 <unknown> 3104 32"
                        " 9 <unknown> 3168 32 9 <unknown> 3232 32 9 <unknown> 3296 32 9 <unknown> 3360 32 9 <unknown> 342"
                        "4 32 9 <unknown> 3488 32 9 <unknown> 3552 32 9 <unknown> 3616 32 9 <unknown> 3680 32 9 <unknown>"
                        " 3744 32 9 <unknown> 3808 32 9 <unknown> 3872 32 9 <unknown> 3936 32 9 <unknown> 4000 32 9 <unkn"
                        "own> 4064 32 9 <unknown> 4128 32 9 <unknown> 4192 32 9 <unknown> 4256 32 9 <unknown> 4320 32 9 <"
                        "unknown> 4384 32 9 <unknown> 4448 32 9 <unknown> 4512 32 9 <unknown> 4576 32 9 <unknown> 4640 32"
                        " 9 <unknown> 4704 32 9 <unknown> 4768 32 9 <unknown> 4832 32 9 <unknown> 4896 32 9 <unknown> 496"
                        "0 32 9 <unknown> 5024 32 9 <unknown> 5088 32 9 <unknown> 5152 32 9 <unknown> 5216 32 9 <unknown>"
                        " 5280 32 9 <unknown> 5344 32 9 <unknown> 5408 32 9 <unknown> 5472 32 9 <unknown> 5536 32 9 <unkn"
                        "own> 5600 32 9 <unknown> 5664 32 9 <unknown> 5728 32 9 <unknown> 5792 32 9 <unknown> 5856 32 9 <"
                        "unknown> 5920 32 9 <unknown> 5984 32 9 <unknown> 6048 32 9 <unknown> 6112 32 9 <unknown> 6176 32"
                        " 9 <unknown> 6240 32 9 <unknown> 6304 32 9 <unknown> 6368 32 9 <unknown> 6432 32 9 <unknown> 649"
                        "6 32 9 <unknown> 6560 32 9 <unknown> 6624 32 9 <unknown> 6688 32 9 <unknown> 6752 32 9 <unknown>"
                        " 6816 32 9 <unknown> 6880 32 9 <unknown> 6944 32 9 <unknown> 7008 32 9 <unknown> 7072 32 9 <unkn"
                        "own> 7136 32 9 <unknown> 7200 32 9 <unknown> 7264 32 9 <unknown> 7328 256 13 col_name:1501";
  *(_QWORD *)(v2 + 16) = data::RandomQuestExcelConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234753535;
  v4[536862730] = -234753535;
  v4[536862731] = -234753535;
  v4[536862732] = -234753535;
  v4[536862733] = -234753535;
  v4[536862734] = -234753535;
  v4[536862735] = -234753535;
  v4[536862736] = -234753535;
  v4[536862737] = -234753535;
  v4[536862738] = -234753535;
  v4[536862739] = -234753535;
  v4[536862740] = -234753535;
  v4[536862741] = -234753535;
  v4[536862742] = -234753535;
  v4[536862743] = -234753535;
  v4[536862744] = -234753535;
  v4[536862745] = -234753535;
  v4[536862746] = -234753535;
  v4[536862747] = -234753535;
  v4[536862748] = -234753535;
  v4[536862749] = -234753535;
  v4[536862750] = -234753535;
  v4[536862752] = -218959118;
  v4[536862754] = -218959118;
  v4[536862756] = -218959118;
  v4[536862758] = -218959118;
  v4[536862760] = -218959118;
  v4[536862762] = -218959118;
  v4[536862764] = -218959118;
  v4[536862766] = -218959118;
  v4[536862768] = -218959118;
  v4[536862770] = -218959118;
  v4[536862772] = -218959118;
  v4[536862774] = -218959118;
  v4[536862776] = -218959118;
  v4[536862778] = -218959118;
  v4[536862780] = -218959118;
  v4[536862782] = -218959118;
  v4[536862784] = -218959118;
  v4[536862786] = -218959118;
  v4[536862788] = -218959118;
  v4[536862790] = -218959118;
  v4[536862792] = -218959118;
  v4[536862794] = -218959118;
  v4[536862796] = -218959118;
  v4[536862798] = -218959118;
  v4[536862800] = -218959118;
  v4[536862802] = -218959118;
  v4[536862804] = -218959118;
  v4[536862806] = -218959118;
  v4[536862808] = -218959118;
  v4[536862810] = -218959118;
  v4[536862812] = -218959118;
  v4[536862814] = -218959118;
  v4[536862816] = -218959118;
  v4[536862818] = -218959118;
  v4[536862820] = -218959118;
  v4[536862822] = -218959118;
  v4[536862824] = -218959118;
  v4[536862826] = -218959118;
  v4[536862828] = -218959118;
  v4[536862830] = -218959118;
  v4[536862832] = -218959118;
  v4[536862834] = -218959118;
  v4[536862836] = -218959118;
  v4[536862838] = -218959118;
  v4[536862840] = -218959118;
  v4[536862842] = -218959118;
  v4[536862844] = -218959118;
  v4[536862846] = -218959118;
  v4[536862848] = -218959118;
  v4[536862850] = -218959118;
  v4[536862852] = -218959118;
  v4[536862854] = -218959118;
  v4[536862856] = -218959118;
  v4[536862858] = -218959118;
  v4[536862860] = -218959118;
  v4[536862862] = -218959118;
  v4[536862864] = -218959118;
  v4[536862866] = -218959118;
  v4[536862868] = -218959118;
  v4[536862870] = -218959118;
  v4[536862872] = -218959118;
  v4[536862874] = -218959118;
  v4[536862876] = -218959118;
  v4[536862878] = -218959118;
  v4[536862880] = -218959118;
  v4[536862882] = -218959118;
  v4[536862884] = -218959118;
  v4[536862886] = -218959118;
  v4[536862888] = -218959118;
  v4[536862890] = -218959118;
  v4[536862892] = -218959118;
  v4[536862894] = -218959118;
  v4[536862896] = -218959118;
  v4[536862898] = -218959118;
  v4[536862900] = -218959118;
  v4[536862902] = -218959118;
  v4[536862904] = -218959118;
  v4[536862906] = -218959118;
  v4[536862908] = -218959118;
  v4[536862910] = -218959118;
  v4[536862912] = -218959118;
  v4[536862914] = -218959118;
  v4[536862916] = -218959118;
  v4[536862918] = -218959118;
  v4[536862920] = -218959118;
  v4[536862922] = -218959118;
  v4[536862924] = -218959118;
  v4[536862926] = -218959118;
  v4[536862928] = -218959118;
  v4[536862930] = -218959118;
  v4[536862932] = -218959118;
  v4[536862934] = -218959118;
  v4[536862936] = -218959118;
  v4[536862938] = -218959118;
  v4[536862940] = -218959118;
  v4[536862942] = -218959118;
  v4[536862944] = -218959118;
  v4[536862946] = -218959118;
  v4[536862948] = -218959118;
  v4[536862957] = -202116109;
  v4[536862958] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 992),
    &byte_1A46B400,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 992), &this->sub_id) != 0;
  std::string::~string((void *)(v2 + 992));
  *(_DWORD *)(((v2 + 992) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 1056) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1056) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 1087) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1056, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1056),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1505);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 1056),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v6, (const char (*)[32])byte_1A46B440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1056));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1120),
    &byte_1A469CA0,
    (const std::allocator<char> *)(v2 + 64));
  v8 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 1120), &this->main_id) != 0;
  std::string::~string((void *)(v2 + 1120));
  *(_DWORD *)(((v2 + 1120) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  if ( v8 )
  {
    *(_DWORD *)(((v2 + 1184) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1184) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1215) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 1215) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1184, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1184),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1510);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 1184),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(v9, (const char (*)[32])byte_1A469CE0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1184));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1248),
    &byte_1A46B480,
    (const std::allocator<char> *)(v2 + 80));
  v10 = common::tools::TxtFile::Row::assignToNum<int>(row, (const std::string *)(v2 + 1248), &this->order) != 0;
  std::string::~string((void *)(v2 + 1248));
  *(_DWORD *)(((v2 + 1248) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  if ( v10 )
  {
    *(_DWORD *)(((v2 + 1312) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1312) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1343) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 1343) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1312, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1312),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1515);
    v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 1312),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v11, (const char (*)[27])byte_1A46B4C0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1312));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 96);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1376),
    &byte_1A46B500,
    (const std::allocator<char> *)(v2 + 96));
  v12 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 1376), &this->sub_id_set) != 0;
  std::string::~string((void *)(v2 + 1376));
  *(_DWORD *)(((v2 + 1376) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 96);
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v12 )
  {
    *(_DWORD *)(((v2 + 1440) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1440) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1471) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 1471) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1440, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1440),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1520);
    v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 1440),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v13, (const char (*)[33])byte_1A46B540);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1440));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 112);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1504),
    asc_1A46B6E0,
    (const std::allocator<char> *)(v2 + 112));
  v14 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
          row,
          (const std::string *)(v2 + 1504),
          &this->accept_cond_comb) != 0;
  std::string::~string((void *)(v2 + 1504));
  *(_DWORD *)(((v2 + 1504) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 112);
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
  if ( v14 )
  {
    *(_DWORD *)(((v2 + 1568) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 1568) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 1599) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 1599) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 1568, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 1568),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1525);
    v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 1568),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v15, (const char (*)[41])byte_1A46B720);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1568));
    v7 = -1;
    goto LABEL_240;
  }
  std::vector<data::RandomQuestCond>::resize(&this->accept_cond, 6uLL);
  array_count = 0;
  for ( i = 0; i <= 5; ++i )
  {
    snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46B780, i + 1);
    *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 128);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 1632),
      (const char *)(v2 + 7328),
      (const std::allocator<char> *)(v2 + 128));
    v16 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1632));
    std::string::~string((void *)(v2 + 1632));
    *(_DWORD *)(((v2 + 1632) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 128);
    *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
    if ( !v16 )
    {
      p_type = &std::vector<data::RandomQuestCond>::operator[](&this->accept_cond, i)->type;
      *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 144);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 1696),
        (const char *)(v2 + 7328),
        (const std::allocator<char> *)(v2 + 144));
      LOBYTE(p_type) = common::tools::TxtFile::Row::assignToEnum<data::QuestCondType>(
                         row,
                         (const std::string *)(v2 + 1696),
                         p_type) != 0;
      std::string::~string((void *)(v2 + 1696));
      *(_DWORD *)(((v2 + 1696) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 144);
      *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)p_type )
      {
        *(_DWORD *)(((v2 + 1760) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 1760) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 1791) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 1791) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 1760, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 1760),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1537);
        v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 1760),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v19 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v18, (const char (*)[14])byte_1A451DC0);
        v20 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v19, (const char (*)[256])(v2 + 7328));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v20, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1760));
        v7 = -1;
        goto LABEL_240;
      }
      v21 = std::vector<data::RandomQuestCond>::operator[](&this->accept_cond, i);
      std::vector<std::string>::resize(&v21->param, 5uLL);
      array_counta = 0;
      for ( j = 0; ; ++j )
      {
        if ( j > 4 )
        {
          v28 = std::vector<data::RandomQuestCond>::operator[](&this->accept_cond, i);
          std::vector<std::string>::resize(&v28->param, array_counta);
          array_count = i + 1;
          break;
        }
        snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46B7C0, i + 1, j + 1);
        *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 160);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 1824),
          (const char *)(v2 + 7328),
          (const std::allocator<char> *)(v2 + 160));
        v22 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 1824));
        std::string::~string((void *)(v2 + 1824));
        *(_DWORD *)(((v2 + 1824) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 160);
        *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
        if ( !v22 )
        {
          v23 = std::vector<data::RandomQuestCond>::operator[](&this->accept_cond, i);
          v24 = std::vector<std::string>::operator[](&v23->param, j);
          *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 176);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 1888),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 176));
          LOBYTE(v24) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 1888), v24) != 0;
          std::string::~string((void *)(v2 + 1888));
          *(_DWORD *)(((v2 + 1888) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 176);
          *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v24 )
          {
            *(_DWORD *)(((v2 + 1952) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 1952) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 1983) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 1983) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 1952, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 1952),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              1549);
            v25 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 1952),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v26 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                    v25,
                    (const char (*)[14])byte_1A451DC0);
            v27 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                    v26,
                    (const char (*)[256])(v2 + 7328));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v27, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 1952));
            v7 = -1;
            goto LABEL_240;
          }
          array_counta = j + 1;
        }
      }
    }
  }
  std::vector<data::RandomQuestCond>::resize(&this->accept_cond, array_count);
  *(_DWORD *)(((v2 + 2016) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 192);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2016),
    asc_1A46B800,
    (const std::allocator<char> *)(v2 + 192));
  v29 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
          row,
          (const std::string *)(v2 + 2016),
          &this->finish_cond_comb) != 0;
  std::string::~string((void *)(v2 + 2016));
  *(_DWORD *)(((v2 + 2016) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 192);
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
  if ( v29 )
  {
    *(_DWORD *)(((v2 + 2080) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2080) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 2111) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 2111) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2080, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2080),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1562);
    v30 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2080),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v30, (const char (*)[41])byte_1A46B840);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2080));
    v7 = -1;
    goto LABEL_240;
  }
  std::vector<data::RandomQuestContent>::resize(&this->finish_cond, 6uLL);
  array_countb = 0;
  for ( i_0 = 0; i_0 <= 5; ++i_0 )
  {
    snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46B8A0, i_0 + 1);
    *(_DWORD *)(((v2 + 2144) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 208);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 2144),
      (const char *)(v2 + 7328),
      (const std::allocator<char> *)(v2 + 208));
    v31 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 2144));
    std::string::~string((void *)(v2 + 2144));
    *(_DWORD *)(((v2 + 2144) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 208);
    *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
    if ( !v31 )
    {
      v32 = &std::vector<data::RandomQuestContent>::operator[](&this->finish_cond, i_0)->type;
      *(_DWORD *)(((v2 + 2208) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 224);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 2208),
        (const char *)(v2 + 7328),
        (const std::allocator<char> *)(v2 + 224));
      LOBYTE(v32) = common::tools::TxtFile::Row::assignToEnum<data::QuestContentType>(
                      row,
                      (const std::string *)(v2 + 2208),
                      v32) != 0;
      std::string::~string((void *)(v2 + 2208));
      *(_DWORD *)(((v2 + 2208) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 224);
      *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v32 )
      {
        *(_DWORD *)(((v2 + 2272) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 2272) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 2303) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 2303) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 2272, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 2272),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1574);
        v33 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 2272),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v34 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v33, (const char (*)[14])byte_1A451DC0);
        v35 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v34, (const char (*)[256])(v2 + 7328));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v35, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2272));
        v7 = -1;
      }
      else
      {
        v36 = std::vector<data::RandomQuestContent>::operator[](&this->finish_cond, i_0);
        std::vector<std::string>::resize(&v36->param, 2uLL);
        array_countb = 0;
        for ( j_0 = 0; j_0 <= 1; ++j_0 )
        {
          snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46B8E0, i_0 + 1, j_0 + 1);
          *(_DWORD *)(((v2 + 2336) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 240);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 2336),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 240));
          v37 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 2336));
          std::string::~string((void *)(v2 + 2336));
          *(_DWORD *)(((v2 + 2336) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 240);
          *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
          if ( !v37 )
          {
            v38 = std::vector<data::RandomQuestContent>::operator[](&this->finish_cond, i_0);
            v39 = std::vector<std::string>::operator[](&v38->param, j_0);
            *(_DWORD *)(((v2 + 2400) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 256);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 2400),
              (const char *)(v2 + 7328),
              (const std::allocator<char> *)(v2 + 256));
            LOBYTE(v39) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 2400), v39) != 0;
            std::string::~string((void *)(v2 + 2400));
            *(_DWORD *)(((v2 + 2400) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 256);
            *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
            if ( (_BYTE)v39 )
            {
              *(_DWORD *)(((v2 + 2464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 2464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 2495) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 2495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 2464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 2464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                1586);
              v40 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 2464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v41 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                      v40,
                      (const char (*)[14])byte_1A451DC0);
              v42 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                      v41,
                      (const char (*)[256])(v2 + 7328));
              common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v42, (const char (*)[7])byte_1A451E00);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2464));
              v7 = -1;
              goto LABEL_240;
            }
            array_countb = j_0 + 1;
          }
        }
        v43 = std::vector<data::RandomQuestContent>::operator[](&this->finish_cond, i_0);
        std::vector<std::string>::resize(&v43->param, array_countb);
        snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46B920, i_0 + 1);
        *(_DWORD *)(((v2 + 2528) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 272);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 2528),
          (const char *)(v2 + 7328),
          (const std::allocator<char> *)(v2 + 272));
        v44 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 2528));
        std::string::~string((void *)(v2 + 2528));
        *(_DWORD *)(((v2 + 2528) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 272);
        *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
        if ( v44 )
          continue;
        p_param_str = &std::vector<data::RandomQuestContent>::operator[](&this->finish_cond, i_0)->param_str;
        *(_DWORD *)(((v2 + 2592) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 288);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 2592),
          (const char *)(v2 + 7328),
          (const std::allocator<char> *)(v2 + 288));
        LOBYTE(p_param_str) = common::tools::TxtFile::Row::assignToStr(
                                row,
                                (const std::string *)(v2 + 2592),
                                p_param_str) != 0;
        std::string::~string((void *)(v2 + 2592));
        *(_DWORD *)(((v2 + 2592) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 288);
        *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
        if ( (_BYTE)p_param_str )
        {
          *(_DWORD *)(((v2 + 2656) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 2656) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 2687) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 2687) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 2656, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 2656),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1598);
          v46 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 2656),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v47 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v46, (const char (*)[14])byte_1A451DC0);
          v48 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v47, (const char (*)[256])(v2 + 7328));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v48, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2656));
          v7 = -1;
        }
        else
        {
          snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46B960, i_0 + 1);
          *(_DWORD *)(((v2 + 2720) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 304);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 2720),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 304));
          v49 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 2720));
          std::string::~string((void *)(v2 + 2720));
          *(_DWORD *)(((v2 + 2720) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 304);
          *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
          if ( v49 )
            continue;
          p_count = &std::vector<data::RandomQuestContent>::operator[](&this->finish_cond, i_0)->count;
          *(_DWORD *)(((v2 + 2784) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 320);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 2784),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 320));
          LOBYTE(p_count) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 2784), p_count) != 0;
          std::string::~string((void *)(v2 + 2784));
          *(_DWORD *)(((v2 + 2784) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 320);
          *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
          if ( !(_BYTE)p_count )
          {
            array_countb = i_0 + 1;
            continue;
          }
          *(_DWORD *)(((v2 + 2848) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 2848) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 2879) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 2879) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 2848, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 2848),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1606);
          v51 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 2848),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v52 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v51, (const char (*)[14])byte_1A451DC0);
          v53 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v52, (const char (*)[256])(v2 + 7328));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v53, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2848));
          v7 = -1;
        }
      }
      goto LABEL_240;
    }
  }
  std::vector<data::RandomQuestContent>::resize(&this->finish_cond, array_countb);
  *(_DWORD *)(((v2 + 2912) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 336);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 2912),
    asc_1A46B9A0,
    (const std::allocator<char> *)(v2 + 336));
  v54 = common::tools::TxtFile::Row::assignToEnum<data::LogicType>(
          row,
          (const std::string *)(v2 + 2912),
          &this->fail_cond_comb) != 0;
  std::string::~string((void *)(v2 + 2912));
  *(_DWORD *)(((v2 + 2912) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 336);
  *(_BYTE *)(((v2 + 336) >> 3) + 0x7FFF8000) = -8;
  if ( v54 )
  {
    *(_DWORD *)(((v2 + 2976) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 2976) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 3007) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 3007) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 2976, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 2976),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1615);
    v55 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 2976),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v55, (const char (*)[41])byte_1A46B9E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 2976));
    v7 = -1;
    goto LABEL_240;
  }
  std::vector<data::RandomQuestContent>::resize(&this->fail_cond, 6uLL);
  array_countc = 0;
  for ( i_1 = 0; i_1 <= 5; ++i_1 )
  {
    snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46BA40, i_1 + 1);
    *(_DWORD *)(((v2 + 3040) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 352);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 3040),
      (const char *)(v2 + 7328),
      (const std::allocator<char> *)(v2 + 352));
    v56 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3040));
    std::string::~string((void *)(v2 + 3040));
    *(_DWORD *)(((v2 + 3040) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 352);
    *(_BYTE *)(((v2 + 352) >> 3) + 0x7FFF8000) = -8;
    if ( !v56 )
    {
      v57 = &std::vector<data::RandomQuestContent>::operator[](&this->fail_cond, i_1)->type;
      *(_DWORD *)(((v2 + 3104) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 368);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 3104),
        (const char *)(v2 + 7328),
        (const std::allocator<char> *)(v2 + 368));
      LOBYTE(v57) = common::tools::TxtFile::Row::assignToEnum<data::QuestContentType>(
                      row,
                      (const std::string *)(v2 + 3104),
                      v57) != 0;
      std::string::~string((void *)(v2 + 3104));
      *(_DWORD *)(((v2 + 3104) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 368);
      *(_BYTE *)(((v2 + 368) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v57 )
      {
        *(_DWORD *)(((v2 + 3168) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 3168) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 3199) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 3199) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 3168, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 3168),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1627);
        v58 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 3168),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v59 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v58, (const char (*)[14])byte_1A451DC0);
        v60 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v59, (const char (*)[256])(v2 + 7328));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v60, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3168));
        v7 = -1;
      }
      else
      {
        v61 = std::vector<data::RandomQuestContent>::operator[](&this->fail_cond, i_1);
        std::vector<std::string>::resize(&v61->param, 2uLL);
        array_countc = 0;
        for ( j_1 = 0; j_1 <= 1; ++j_1 )
        {
          snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46BA80, i_1 + 1, j_1 + 1);
          *(_DWORD *)(((v2 + 3232) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 384);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 3232),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 384));
          v62 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3232));
          std::string::~string((void *)(v2 + 3232));
          *(_DWORD *)(((v2 + 3232) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 384);
          *(_BYTE *)(((v2 + 384) >> 3) + 0x7FFF8000) = -8;
          if ( !v62 )
          {
            v63 = std::vector<data::RandomQuestContent>::operator[](&this->fail_cond, i_1);
            v64 = std::vector<std::string>::operator[](&v63->param, j_1);
            *(_DWORD *)(((v2 + 3296) >> 3) + 0x7FFF8000) = 0;
            *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = 1;
            std::allocator<char>::allocator(v2 + 400);
            std::string::basic_string<std::allocator<char>>(
              (std::string *const)(v2 + 3296),
              (const char *)(v2 + 7328),
              (const std::allocator<char> *)(v2 + 400));
            LOBYTE(v64) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 3296), v64) != 0;
            std::string::~string((void *)(v2 + 3296));
            *(_DWORD *)(((v2 + 3296) >> 3) + 0x7FFF8000) = -117901064;
            std::allocator<char>::~allocator(v2 + 400);
            *(_BYTE *)(((v2 + 400) >> 3) + 0x7FFF8000) = -8;
            if ( (_BYTE)v64 )
            {
              *(_DWORD *)(((v2 + 3360) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 3360) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 3391) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 3391) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 3360, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 3360),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "init",
                1639);
              v65 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 3360),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v66 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                      v65,
                      (const char (*)[14])byte_1A451DC0);
              v67 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                      v66,
                      (const char (*)[256])(v2 + 7328));
              common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v67, (const char (*)[7])byte_1A451E00);
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3360));
              v7 = -1;
              goto LABEL_240;
            }
            array_countc = j_1 + 1;
          }
        }
        v68 = std::vector<data::RandomQuestContent>::operator[](&this->fail_cond, i_1);
        std::vector<std::string>::resize(&v68->param, array_countc);
        snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46BAC0, i_1 + 1);
        *(_DWORD *)(((v2 + 3424) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 416);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 3424),
          (const char *)(v2 + 7328),
          (const std::allocator<char> *)(v2 + 416));
        v69 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3424));
        std::string::~string((void *)(v2 + 3424));
        *(_DWORD *)(((v2 + 3424) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 416);
        *(_BYTE *)(((v2 + 416) >> 3) + 0x7FFF8000) = -8;
        if ( v69 )
          continue;
        v70 = &std::vector<data::RandomQuestContent>::operator[](&this->fail_cond, i_1)->param_str;
        *(_DWORD *)(((v2 + 3488) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 432);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 3488),
          (const char *)(v2 + 7328),
          (const std::allocator<char> *)(v2 + 432));
        LOBYTE(v70) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 3488), v70) != 0;
        std::string::~string((void *)(v2 + 3488));
        *(_DWORD *)(((v2 + 3488) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 432);
        *(_BYTE *)(((v2 + 432) >> 3) + 0x7FFF8000) = -8;
        if ( (_BYTE)v70 )
        {
          *(_DWORD *)(((v2 + 3552) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 3552) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 3583) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 3583) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 3552, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 3552),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1651);
          v71 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 3552),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v72 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v71, (const char (*)[14])byte_1A451DC0);
          v73 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v72, (const char (*)[256])(v2 + 7328));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v73, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3552));
          v7 = -1;
        }
        else
        {
          snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46BB00, i_1 + 1);
          *(_DWORD *)(((v2 + 3616) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 448);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 3616),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 448));
          v74 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 3616));
          std::string::~string((void *)(v2 + 3616));
          *(_DWORD *)(((v2 + 3616) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 448);
          *(_BYTE *)(((v2 + 448) >> 3) + 0x7FFF8000) = -8;
          if ( v74 )
            continue;
          v75 = &std::vector<data::RandomQuestContent>::operator[](&this->fail_cond, i_1)->count;
          *(_DWORD *)(((v2 + 3680) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 464);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 3680),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 464));
          LOBYTE(v75) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 3680), v75) != 0;
          std::string::~string((void *)(v2 + 3680));
          *(_DWORD *)(((v2 + 3680) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 464);
          *(_BYTE *)(((v2 + 464) >> 3) + 0x7FFF8000) = -8;
          if ( !(_BYTE)v75 )
          {
            array_countc = i_1 + 1;
            continue;
          }
          *(_DWORD *)(((v2 + 3744) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 3744) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 3775) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 3775) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 3744, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 3744),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1659);
          v76 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 3744),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          v77 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v76, (const char (*)[14])byte_1A451DC0);
          v78 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v77, (const char (*)[256])(v2 + 7328));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v78, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3744));
          v7 = -1;
        }
      }
      goto LABEL_240;
    }
  }
  std::vector<data::RandomQuestContent>::resize(&this->fail_cond, array_countc);
  *(_DWORD *)(((v2 + 3808) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 480);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3808),
    asc_1A46BB40,
    (const std::allocator<char> *)(v2 + 480));
  v79 = common::tools::TxtFile::Row::assignToEnum<data::QuestGuideType>(
          row,
          (const std::string *)(v2 + 3808),
          &this->guide.type) != 0;
  std::string::~string((void *)(v2 + 3808));
  *(_DWORD *)(((v2 + 3808) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 480);
  *(_BYTE *)(((v2 + 480) >> 3) + 0x7FFF8000) = -8;
  if ( v79 )
  {
    *(_DWORD *)(((v2 + 3872) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 3872) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 3903) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 3903) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 3872, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 3872),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1668);
    v80 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 3872),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v80, (const char (*)[41])byte_1A46BB80);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 3872));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 3936) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 496);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 3936),
    asc_1A46BBE0,
    (const std::allocator<char> *)(v2 + 496));
  v81 = common::tools::TxtFile::Row::assignToEnum<data::QuestGuideAuto>(
          row,
          (const std::string *)(v2 + 3936),
          &this->guide.auto_guide) != 0;
  std::string::~string((void *)(v2 + 3936));
  *(_DWORD *)(((v2 + 3936) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 496);
  *(_BYTE *)(((v2 + 496) >> 3) + 0x7FFF8000) = -8;
  if ( v81 )
  {
    *(_DWORD *)(((v2 + 4000) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 4000) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 4031) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 4031) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 4000, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 4000),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1673);
    v82 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 4000),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(v82, (const char (*)[56])byte_1A46BC40);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4000));
    v7 = -1;
    goto LABEL_240;
  }
  std::vector<std::string>::resize(&this->guide.param, 5uLL);
  array_countd = 0;
  for ( i_2 = 0; i_2 <= 4; ++i_2 )
  {
    snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46BCA0, i_2 + 1);
    *(_DWORD *)(((v2 + 4064) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 512);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 4064),
      (const char *)(v2 + 7328),
      (const std::allocator<char> *)(v2 + 512));
    v83 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 4064));
    std::string::~string((void *)(v2 + 4064));
    *(_DWORD *)(((v2 + 4064) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 512);
    *(_BYTE *)(((v2 + 512) >> 3) + 0x7FFF8000) = -8;
    if ( !v83 )
    {
      v84 = std::vector<std::string>::operator[](&this->guide.param, i_2);
      *(_DWORD *)(((v2 + 4128) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 528);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 4128),
        (const char *)(v2 + 7328),
        (const std::allocator<char> *)(v2 + 528));
      LOBYTE(v84) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 4128), v84) != 0;
      std::string::~string((void *)(v2 + 4128));
      *(_DWORD *)(((v2 + 4128) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 528);
      *(_BYTE *)(((v2 + 528) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v84 )
      {
        *(_DWORD *)(((v2 + 4192) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 4192) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 4223) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 4223) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 4192, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 4192),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1685);
        v85 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 4192),
                (const char (*)[16])"[CONFIG_ERROR] ");
        v86 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v85, (const char (*)[14])byte_1A451DC0);
        v87 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v86, (const char (*)[256])(v2 + 7328));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v87, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4192));
        v7 = -1;
        goto LABEL_240;
      }
      array_countd = i_2 + 1;
    }
  }
  std::vector<std::string>::resize(&this->guide.param, array_countd);
  *(_DWORD *)(((v2 + 4256) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 544);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 4256),
    asc_1A46BCE0,
    (const std::allocator<char> *)(v2 + 544));
  v88 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
          row,
          (const std::string *)(v2 + 4256),
          &this->guide.guide_scene) != 0;
  std::string::~string((void *)(v2 + 4256));
  *(_DWORD *)(((v2 + 4256) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 544);
  *(_BYTE *)(((v2 + 544) >> 3) + 0x7FFF8000) = -8;
  if ( v88 )
  {
    *(_DWORD *)(((v2 + 4320) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 4320) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 4351) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 4351) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 4320, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 4320),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1694);
    v89 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 4320),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(v89, (const char (*)[43])byte_1A46BD20);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4320));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 4384) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 560);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 4384),
    asc_1A46BD80,
    (const std::allocator<char> *)(v2 + 560));
  v90 = common::tools::TxtFile::Row::assignToEnum<data::QuestGuideStyle>(
          row,
          (const std::string *)(v2 + 4384),
          &this->guide.guide_style) != 0;
  std::string::~string((void *)(v2 + 4384));
  *(_DWORD *)(((v2 + 4384) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 560);
  *(_BYTE *)(((v2 + 560) >> 3) + 0x7FFF8000) = -8;
  if ( v90 )
  {
    *(_DWORD *)(((v2 + 4448) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 4448) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 4479) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 4479) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 4448, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 4448),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1699);
    v91 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 4448),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v91, (const char (*)[41])byte_1A46BDC0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4448));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 4512) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 576);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 4512),
    asc_1A46BE20,
    (const std::allocator<char> *)(v2 + 576));
  v92 = common::tools::TxtFile::Row::assignToEnum<data::QuestGuideLayer>(
          row,
          (const std::string *)(v2 + 4512),
          &this->guide.guide_layer) != 0;
  std::string::~string((void *)(v2 + 4512));
  *(_DWORD *)(((v2 + 4512) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 576);
  *(_BYTE *)(((v2 + 576) >> 3) + 0x7FFF8000) = -8;
  if ( v92 )
  {
    *(_DWORD *)(((v2 + 4576) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 4576) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 4607) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 4607) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 4576, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 4576),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1704);
    v93 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 4576),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(v93, (const char (*)[47])byte_1A46BE60);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4576));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 4640) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 592);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 4640),
    &byte_1A46BEC0,
    (const std::allocator<char> *)(v2 + 592));
  v94 = common::tools::TxtFile::Row::assignToEnum<data::ShowQuestGuideType>(
          row,
          (const std::string *)(v2 + 4640),
          &this->show_guide) != 0;
  std::string::~string((void *)(v2 + 4640));
  *(_DWORD *)(((v2 + 4640) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 592);
  *(_BYTE *)(((v2 + 592) >> 3) + 0x7FFF8000) = -8;
  if ( v94 )
  {
    *(_DWORD *)(((v2 + 4704) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 4704) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 4735) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 4735) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 4704, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 4704),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1709);
    v95 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 4704),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v95, (const char (*)[36])byte_1A46BF00);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4704));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 4768) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 608);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 4768),
    &byte_1A46BF60,
    (const std::allocator<char> *)(v2 + 608));
  v96 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 4768), &this->finish_parent) != 0;
  std::string::~string((void *)(v2 + 4768));
  *(_DWORD *)(((v2 + 4768) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 608);
  *(_BYTE *)(((v2 + 608) >> 3) + 0x7FFF8000) = -8;
  if ( v96 )
  {
    *(_DWORD *)(((v2 + 4832) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 4832) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 4863) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 4863) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 4832, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 4832),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1714);
    v97 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 4832),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v97, (const char (*)[36])byte_1A46BFA0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4832));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 4896) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 624);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 4896),
    &byte_1A46C000,
    (const std::allocator<char> *)(v2 + 624));
  v98 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 4896), &this->fail_parent) != 0;
  std::string::~string((void *)(v2 + 4896));
  *(_DWORD *)(((v2 + 4896) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 624);
  *(_BYTE *)(((v2 + 624) >> 3) + 0x7FFF8000) = -8;
  if ( v98 )
  {
    *(_DWORD *)(((v2 + 4960) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 4960) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 4991) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 4991) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 4960, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 4960),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1719);
    v99 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            (common::milog::MiLogStream *const)(v2 + 4960),
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v99, (const char (*)[36])byte_1A46C040);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 4960));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 5024) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 640);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 5024),
    &byte_1A46C0A0,
    (const std::allocator<char> *)(v2 + 640));
  v100 = common::tools::TxtFile::Row::assignToNum<bool>(row, (const std::string *)(v2 + 5024), &this->is_rewind) != 0;
  std::string::~string((void *)(v2 + 5024));
  *(_DWORD *)(((v2 + 5024) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 640);
  *(_BYTE *)(((v2 + 640) >> 3) + 0x7FFF8000) = -8;
  if ( v100 )
  {
    *(_DWORD *)(((v2 + 5088) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 5088) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 5119) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 5119) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 5088, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 5088),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1724);
    v101 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 5088),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(v101, (const char (*)[33])byte_1A46C0E0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5088));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 5152) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 656);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 5152),
    asc_1A46C140,
    (const std::allocator<char> *)(v2 + 656));
  v102 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 5152), &this->quest_item_id_list) != 0;
  std::string::~string((void *)(v2 + 5152));
  *(_DWORD *)(((v2 + 5152) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 656);
  *(_BYTE *)(((v2 + 656) >> 3) + 0x7FFF8000) = -8;
  if ( v102 )
  {
    *(_DWORD *)(((v2 + 5216) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 5216) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 5247) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 5247) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 5216, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 5216),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1729);
    v103 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 5216),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(v103, (const char (*)[37])byte_1A46C180);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5216));
    v7 = -1;
    goto LABEL_240;
  }
  *(_DWORD *)(((v2 + 5280) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 672);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 5280),
    asc_1A46C1E0,
    (const std::allocator<char> *)(v2 + 672));
  v104 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 5280), &this->quest_item_num_list) != 0;
  std::string::~string((void *)(v2 + 5280));
  *(_DWORD *)(((v2 + 5280) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 672);
  *(_BYTE *)(((v2 + 672) >> 3) + 0x7FFF8000) = -8;
  if ( v104 )
  {
    *(_DWORD *)(((v2 + 5344) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 5344) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 5375) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 5375) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 5344, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 5344),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1734);
    v105 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 5344),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v105, (const char (*)[41])byte_1A46C220);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5344));
    v7 = -1;
    goto LABEL_240;
  }
  std::vector<data::IdCountConfig>::resize(&this->award_items, 5uLL);
  array_counte = 0;
  for ( i_3 = 0; i_3 <= 4; ++i_3 )
  {
    snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46FE20, i_3 + 1);
    *(_DWORD *)(((v2 + 5408) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 688);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 5408),
      (const char *)(v2 + 7328),
      (const std::allocator<char> *)(v2 + 688));
    v106 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 5408));
    std::string::~string((void *)(v2 + 5408));
    *(_DWORD *)(((v2 + 5408) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 688);
    *(_BYTE *)(((v2 + 688) >> 3) + 0x7FFF8000) = -8;
    if ( !v106 )
    {
      p_id = &std::vector<data::IdCountConfig>::operator[](&this->award_items, i_3)->id;
      *(_DWORD *)(((v2 + 5472) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 704);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 5472),
        (const char *)(v2 + 7328),
        (const std::allocator<char> *)(v2 + 704));
      LOBYTE(p_id) = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 5472), p_id) != 0;
      std::string::~string((void *)(v2 + 5472));
      *(_DWORD *)(((v2 + 5472) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 704);
      *(_BYTE *)(((v2 + 704) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)p_id )
      {
        *(_DWORD *)(((v2 + 5536) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 5536) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 5567) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 5567) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 5536, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 5536),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1746);
        v108 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 5536),
                 (const char (*)[16])"[CONFIG_ERROR] ");
        v109 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v108, (const char (*)[14])byte_1A451DC0);
        v110 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v109, (const char (*)[256])(v2 + 7328));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v110, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5536));
        v7 = -1;
        goto LABEL_240;
      }
      snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46FE60, i_3 + 1);
      *(_DWORD *)(((v2 + 5600) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 720);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 5600),
        (const char *)(v2 + 7328),
        (const std::allocator<char> *)(v2 + 720));
      v111 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 5600));
      std::string::~string((void *)(v2 + 5600));
      *(_DWORD *)(((v2 + 5600) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 720);
      *(_BYTE *)(((v2 + 720) >> 3) + 0x7FFF8000) = -8;
      if ( !v111 )
      {
        v112 = &std::vector<data::IdCountConfig>::operator[](&this->award_items, i_3)->count;
        *(_DWORD *)(((v2 + 5664) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 736);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 5664),
          (const char *)(v2 + 7328),
          (const std::allocator<char> *)(v2 + 736));
        LOBYTE(v112) = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                         row,
                         (const std::string *)(v2 + 5664),
                         v112) != 0;
        std::string::~string((void *)(v2 + 5664));
        *(_DWORD *)(((v2 + 5664) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 736);
        *(_BYTE *)(((v2 + 736) >> 3) + 0x7FFF8000) = -8;
        if ( (_BYTE)v112 )
        {
          *(_DWORD *)(((v2 + 5728) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 5728) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 5759) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 5759) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 5728, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 5728),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1754);
          v113 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                   (common::milog::MiLogStream *const)(v2 + 5728),
                   (const char (*)[16])"[CONFIG_ERROR] ");
          v114 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                   v113,
                   (const char (*)[14])byte_1A451DC0);
          v115 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                   v114,
                   (const char (*)[256])(v2 + 7328));
          common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v115, (const char (*)[7])byte_1A451E00);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5728));
          v7 = -1;
          goto LABEL_240;
        }
        array_counte = i_3 + 1;
      }
    }
  }
  std::vector<data::IdCountConfig>::resize(&this->award_items, array_counte);
  std::vector<data::QuestExec>::resize(&this->begin_exec, 5uLL);
  array_countf = 0;
  for ( i_4 = 0; i_4 <= 4; ++i_4 )
  {
    snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46C380, i_4 + 1);
    *(_DWORD *)(((v2 + 5792) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 752);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 5792),
      (const char *)(v2 + 7328),
      (const std::allocator<char> *)(v2 + 752));
    v116 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 5792));
    std::string::~string((void *)(v2 + 5792));
    *(_DWORD *)(((v2 + 5792) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 752);
    *(_BYTE *)(((v2 + 752) >> 3) + 0x7FFF8000) = -8;
    if ( !v116 )
    {
      v117 = &std::vector<data::QuestExec>::operator[](&this->begin_exec, i_4)->type;
      *(_DWORD *)(((v2 + 5856) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 768);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 5856),
        (const char *)(v2 + 7328),
        (const std::allocator<char> *)(v2 + 768));
      LOBYTE(v117) = common::tools::TxtFile::Row::assignToEnum<data::QuestExecType>(
                       row,
                       (const std::string *)(v2 + 5856),
                       v117) != 0;
      std::string::~string((void *)(v2 + 5856));
      *(_DWORD *)(((v2 + 5856) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 768);
      *(_BYTE *)(((v2 + 768) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v117 )
      {
        *(_DWORD *)(((v2 + 5920) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 5920) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 5951) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 5951) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 5920, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 5920),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1770);
        v118 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 5920),
                 (const char (*)[16])"[CONFIG_ERROR] ");
        v119 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v118, (const char (*)[14])byte_1A451DC0);
        v120 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v119, (const char (*)[256])(v2 + 7328));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v120, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 5920));
        v7 = -1;
        goto LABEL_240;
      }
      v121 = std::vector<data::QuestExec>::operator[](&this->begin_exec, i_4);
      std::vector<std::string>::resize(&v121->param, 5uLL);
      array_countg = 0;
      for ( j_2 = 0; ; ++j_2 )
      {
        if ( j_2 > 4 )
        {
          v128 = std::vector<data::QuestExec>::operator[](&this->begin_exec, i_4);
          std::vector<std::string>::resize(&v128->param, array_countg);
          array_countf = i_4 + 1;
          break;
        }
        snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46C3C0, i_4 + 1, j_2 + 1);
        *(_DWORD *)(((v2 + 5984) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 784);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 5984),
          (const char *)(v2 + 7328),
          (const std::allocator<char> *)(v2 + 784));
        v122 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 5984));
        std::string::~string((void *)(v2 + 5984));
        *(_DWORD *)(((v2 + 5984) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 784);
        *(_BYTE *)(((v2 + 784) >> 3) + 0x7FFF8000) = -8;
        if ( !v122 )
        {
          v123 = std::vector<data::QuestExec>::operator[](&this->begin_exec, i_4);
          v124 = std::vector<std::string>::operator[](&v123->param, j_2);
          *(_DWORD *)(((v2 + 6048) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 800);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 6048),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 800));
          LOBYTE(v124) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 6048), v124) != 0;
          std::string::~string((void *)(v2 + 6048));
          *(_DWORD *)(((v2 + 6048) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 800);
          *(_BYTE *)(((v2 + 800) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v124 )
          {
            *(_DWORD *)(((v2 + 6112) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 6112) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 6143) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 6143) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 6112, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 6112),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              1782);
            v125 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                     (common::milog::MiLogStream *const)(v2 + 6112),
                     (const char (*)[16])"[CONFIG_ERROR] ");
            v126 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                     v125,
                     (const char (*)[14])byte_1A451DC0);
            v127 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                     v126,
                     (const char (*)[256])(v2 + 7328));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v127, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6112));
            v7 = -1;
            goto LABEL_240;
          }
          array_countg = j_2 + 1;
        }
      }
    }
  }
  std::vector<data::QuestExec>::resize(&this->begin_exec, array_countf);
  std::vector<data::QuestExec>::resize(&this->finish_exec, 5uLL);
  array_counth = 0;
  for ( i_5 = 0; i_5 <= 4; ++i_5 )
  {
    snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46C280, i_5 + 1);
    *(_DWORD *)(((v2 + 6176) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 816);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 6176),
      (const char *)(v2 + 7328),
      (const std::allocator<char> *)(v2 + 816));
    v129 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 6176));
    std::string::~string((void *)(v2 + 6176));
    *(_DWORD *)(((v2 + 6176) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 816);
    *(_BYTE *)(((v2 + 816) >> 3) + 0x7FFF8000) = -8;
    if ( !v129 )
    {
      v130 = &std::vector<data::QuestExec>::operator[](&this->finish_exec, i_5)->type;
      *(_DWORD *)(((v2 + 6240) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 832);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 6240),
        (const char *)(v2 + 7328),
        (const std::allocator<char> *)(v2 + 832));
      LOBYTE(v130) = common::tools::TxtFile::Row::assignToEnum<data::QuestExecType>(
                       row,
                       (const std::string *)(v2 + 6240),
                       v130) != 0;
      std::string::~string((void *)(v2 + 6240));
      *(_DWORD *)(((v2 + 6240) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 832);
      *(_BYTE *)(((v2 + 832) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v130 )
      {
        *(_DWORD *)(((v2 + 6304) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 6304) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 6335) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 6335) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 6304, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 6304),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1802);
        v131 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 6304),
                 (const char (*)[16])"[CONFIG_ERROR] ");
        v132 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v131, (const char (*)[14])byte_1A451DC0);
        v133 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v132, (const char (*)[256])(v2 + 7328));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v133, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6304));
        v7 = -1;
        goto LABEL_240;
      }
      v134 = std::vector<data::QuestExec>::operator[](&this->finish_exec, i_5);
      std::vector<std::string>::resize(&v134->param, 5uLL);
      array_counti = 0;
      for ( j_3 = 0; ; ++j_3 )
      {
        if ( j_3 > 4 )
        {
          v141 = std::vector<data::QuestExec>::operator[](&this->finish_exec, i_5);
          std::vector<std::string>::resize(&v141->param, array_counti);
          array_counth = i_5 + 1;
          break;
        }
        snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46C2C0, i_5 + 1, j_3 + 1);
        *(_DWORD *)(((v2 + 6368) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 848);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 6368),
          (const char *)(v2 + 7328),
          (const std::allocator<char> *)(v2 + 848));
        v135 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 6368));
        std::string::~string((void *)(v2 + 6368));
        *(_DWORD *)(((v2 + 6368) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 848);
        *(_BYTE *)(((v2 + 848) >> 3) + 0x7FFF8000) = -8;
        if ( !v135 )
        {
          v136 = std::vector<data::QuestExec>::operator[](&this->finish_exec, i_5);
          v137 = std::vector<std::string>::operator[](&v136->param, j_3);
          *(_DWORD *)(((v2 + 6432) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 864);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 6432),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 864));
          LOBYTE(v137) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 6432), v137) != 0;
          std::string::~string((void *)(v2 + 6432));
          *(_DWORD *)(((v2 + 6432) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 864);
          *(_BYTE *)(((v2 + 864) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v137 )
          {
            *(_DWORD *)(((v2 + 6496) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 6496) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 6527) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 6527) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 6496, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 6496),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              1814);
            v138 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                     (common::milog::MiLogStream *const)(v2 + 6496),
                     (const char (*)[16])"[CONFIG_ERROR] ");
            v139 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                     v138,
                     (const char (*)[14])byte_1A451DC0);
            v140 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                     v139,
                     (const char (*)[256])(v2 + 7328));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v140, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6496));
            v7 = -1;
            goto LABEL_240;
          }
          array_counti = j_3 + 1;
        }
      }
    }
  }
  std::vector<data::QuestExec>::resize(&this->finish_exec, array_counth);
  std::vector<data::QuestExec>::resize(&this->fail_exec, 5uLL);
  array_countj = 0;
  for ( i_6 = 0; i_6 <= 4; ++i_6 )
  {
    snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46C300, i_6 + 1);
    *(_DWORD *)(((v2 + 6560) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 880);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 6560),
      (const char *)(v2 + 7328),
      (const std::allocator<char> *)(v2 + 880));
    v142 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 6560));
    std::string::~string((void *)(v2 + 6560));
    *(_DWORD *)(((v2 + 6560) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 880);
    *(_BYTE *)(((v2 + 880) >> 3) + 0x7FFF8000) = -8;
    if ( !v142 )
    {
      v143 = &std::vector<data::QuestExec>::operator[](&this->fail_exec, i_6)->type;
      *(_DWORD *)(((v2 + 6624) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 896);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 6624),
        (const char *)(v2 + 7328),
        (const std::allocator<char> *)(v2 + 896));
      LOBYTE(v143) = common::tools::TxtFile::Row::assignToEnum<data::QuestExecType>(
                       row,
                       (const std::string *)(v2 + 6624),
                       v143) != 0;
      std::string::~string((void *)(v2 + 6624));
      *(_DWORD *)(((v2 + 6624) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 896);
      *(_BYTE *)(((v2 + 896) >> 3) + 0x7FFF8000) = -8;
      if ( (_BYTE)v143 )
      {
        *(_DWORD *)(((v2 + 6688) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 6688) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 6719) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 6719) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 6688, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 6688),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1834);
        v144 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 6688),
                 (const char (*)[16])"[CONFIG_ERROR] ");
        v145 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v144, (const char (*)[14])byte_1A451DC0);
        v146 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(v145, (const char (*)[256])(v2 + 7328));
        common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v146, (const char (*)[7])byte_1A451E00);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6688));
        v7 = -1;
        goto LABEL_240;
      }
      v147 = std::vector<data::QuestExec>::operator[](&this->fail_exec, i_6);
      std::vector<std::string>::resize(&v147->param, 5uLL);
      array_countk = 0;
      for ( j_4 = 0; ; ++j_4 )
      {
        if ( j_4 > 4 )
        {
          v154 = std::vector<data::QuestExec>::operator[](&this->fail_exec, i_6);
          std::vector<std::string>::resize(&v154->param, array_countk);
          array_countj = i_6 + 1;
          break;
        }
        snprintf((char *)(v2 + 7328), 0x100uLL, asc_1A46C340, i_6 + 1, j_4 + 1);
        *(_DWORD *)(((v2 + 6752) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 912);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 6752),
          (const char *)(v2 + 7328),
          (const std::allocator<char> *)(v2 + 912));
        v148 = !common::tools::TxtFile::Row::hasKey(row, (const std::string *)(v2 + 6752));
        std::string::~string((void *)(v2 + 6752));
        *(_DWORD *)(((v2 + 6752) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 912);
        *(_BYTE *)(((v2 + 912) >> 3) + 0x7FFF8000) = -8;
        if ( !v148 )
        {
          v149 = std::vector<data::QuestExec>::operator[](&this->fail_exec, i_6);
          v150 = std::vector<std::string>::operator[](&v149->param, j_4);
          *(_DWORD *)(((v2 + 6816) >> 3) + 0x7FFF8000) = 0;
          *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) = 1;
          std::allocator<char>::allocator(v2 + 928);
          std::string::basic_string<std::allocator<char>>(
            (std::string *const)(v2 + 6816),
            (const char *)(v2 + 7328),
            (const std::allocator<char> *)(v2 + 928));
          LOBYTE(v150) = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 6816), v150) != 0;
          std::string::~string((void *)(v2 + 6816));
          *(_DWORD *)(((v2 + 6816) >> 3) + 0x7FFF8000) = -117901064;
          std::allocator<char>::~allocator(v2 + 928);
          *(_BYTE *)(((v2 + 928) >> 3) + 0x7FFF8000) = -8;
          if ( (_BYTE)v150 )
          {
            *(_DWORD *)(((v2 + 6880) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 6880) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 6911) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 6911) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 6880, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 6880),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "init",
              1846);
            v151 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                     (common::milog::MiLogStream *const)(v2 + 6880),
                     (const char (*)[16])"[CONFIG_ERROR] ");
            v152 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                     v151,
                     (const char (*)[14])byte_1A451DC0);
            v153 = common::milog::MiLogStream::operator<<<char [256],(char *[256])0>(
                     v152,
                     (const char (*)[256])(v2 + 7328));
            common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v153, (const char (*)[7])byte_1A451E00);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 6880));
            v7 = -1;
            goto LABEL_240;
          }
          array_countk = j_4 + 1;
        }
      }
    }
  }
  std::vector<data::QuestExec>::resize(&this->fail_exec, array_countj);
  *(_DWORD *)(((v2 + 6944) >> 3) + 0x7FFF8000) = 0;
  *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 944);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 6944),
    &byte_1A46C400,
    (const std::allocator<char> *)(v2 + 944));
  v155 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 6944), &this->exclusive_npc_list) != 0;
  std::string::~string((void *)(v2 + 6944));
  *(_DWORD *)(((v2 + 6944) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 944);
  *(_BYTE *)(((v2 + 944) >> 3) + 0x7FFF8000) = -8;
  if ( v155 )
  {
    *(_DWORD *)(((v2 + 7008) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 7008) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 7039) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 7039) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 7008, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 7008),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1859);
    v156 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 7008),
             (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v156, (const char (*)[30])byte_1A46C440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 7008));
    v7 = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 7072) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 960);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 7072),
      &byte_1A46C480,
      (const std::allocator<char> *)(v2 + 960));
    v157 = common::tools::TxtFile::Row::assignToStr(row, (const std::string *)(v2 + 7072), &this->shared_npc_list) != 0;
    std::string::~string((void *)(v2 + 7072));
    *(_DWORD *)(((v2 + 7072) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 960);
    *(_BYTE *)(((v2 + 960) >> 3) + 0x7FFF8000) = -8;
    if ( v157 )
    {
      *(_DWORD *)(((v2 + 7136) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 7136) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 7167) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 7167) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 7136, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 7136),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1864);
      v158 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
               (common::milog::MiLogStream *const)(v2 + 7136),
               (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v158, (const char (*)[30])byte_1A46C4C0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 7136));
      v7 = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 7200) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 976);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 7200),
        &byte_1A46C500,
        (const std::allocator<char> *)(v2 + 976));
      v159 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
               row,
               (const std::string *)(v2 + 7200),
               &this->exclusive_npc_priority) != 0;
      std::string::~string((void *)(v2 + 7200));
      *(_DWORD *)(((v2 + 7200) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 976);
      *(_BYTE *)(((v2 + 976) >> 3) + 0x7FFF8000) = -8;
      if ( v159 )
      {
        *(_DWORD *)(((v2 + 7264) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 7264) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 7295) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 7295) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 7264, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 7264),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1869);
        v160 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                 (common::milog::MiLogStream *const)(v2 + 7264),
                 (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(v160, (const char (*)[36])byte_1A46C540);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 7264));
        v7 = -1;
      }
      else
      {
        v7 = 0;
      }
    }
  }
LABEL_240:
  v161 = v7;
  if ( v189 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF807C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 132) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF8088) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8090) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8098) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF80A0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80A8) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF80B0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80B8) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF80C0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80C8) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80D0) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF80D8) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80E0) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80E8) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF80F0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80F8) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8100) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8108) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8110) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8118) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8120) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8128) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8130) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8138) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8140) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8148) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8150) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8158) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8160) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8168) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8170) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8178) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8180) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8188) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8190) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8198) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF81A0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF81A8) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF81B0) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF81B8) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF81C0) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF81C8) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF81D0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF81D8) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF81E0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF81E8) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF81F0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF81F8) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8200) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8208) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8210) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8218) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8220) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8228) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8230) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8238) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8240) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8248) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8250) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8258) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8260) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8268) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8270) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8278) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8280) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8288) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8290) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8298) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF82A0) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF82A8) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF82B0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF82B8) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF82C0) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF82C8) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF82D0) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF82D8) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF82E0) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF82E8) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF82F0) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF82F8) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8300) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8308) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8310) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8318) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8320) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8328) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8330) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8338) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8340) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8348) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8350) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8358) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8360) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8368) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8370) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8378) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8380) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8388) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8390) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF83B4) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_7(v2, 7648LL, v189);
  }
  return v161;
};

// Line 1877: range 000000000EF71CA2-000000000EF7222A
int32_t __cdecl data::QuestGlobalVarConfig::init(
        data::QuestGlobalVarConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  char v10[368]; // [rsp+10h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 1 9 <unknown> 48 1 9 <unknown> 64 32 9 <unknown> 128 32 9 <unknown> 192 32 9 <unknown> 256 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestGlobalVarConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862723] = -218959118;
  v4[536862725] = -218959118;
  v4[536862727] = -218959118;
  v4[536862729] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 64),
    &byte_1A46FEA0,
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 64), &this->id) != 0;
  std::string::~string((void *)(v2 + 64));
  *(_DWORD *)(((v2 + 64) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1880);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(v6, (const char (*)[41])byte_1A46FEE0);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 192),
      &byte_1A46FF40,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToNum<int>(row, (const std::string *)(v2 + 192), &this->default_value) != 0;
    std::string::~string((void *)(v2 + 192));
    *(_DWORD *)(((v2 + 192) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 256) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 256) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 287) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 256, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 256),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1885);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 256),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(v9, (const char (*)[30])byte_1A46FF80);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 256));
      result = -1;
    }
    else
    {
      result = 0;
    }
  }
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8014) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1893: range 000000000EF7222C-000000000EF72537
int32_t __cdecl data::QuestPlaceConfig::init(
        data::QuestPlaceConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  char v8[240]; // [rsp+10h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 1 9 <unknown> 64 32 9 <unknown> 128 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestPlaceConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862723] = -218959118;
  v4[536862725] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 64),
    &byte_1A46FFC0,
    (const std::allocator<char> *)(v2 + 48));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 64), &this->place_id) != 0;
  std::string::~string((void *)(v2 + 64));
  *(_DWORD *)(((v2 + 64) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 128) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 128) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 159) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 128, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 128),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1896);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 128),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(v6, (const char (*)[47])byte_1A470000);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 128));
    result = -1;
  }
  else
  {
    result = 0;
  }
  if ( v8 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1904: range 000000000EF72538-000000000EF72FD0
int32_t __cdecl data::QuestSpecialShowConfig::init(
        data::QuestSpecialShowConfig *const this,
        const common::tools::TxtFile::Row *row)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool v5; // r14
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  bool v10; // r14
  common::milog::MiLogStream *v11; // rax
  bool v12; // r14
  common::milog::MiLogStream *v13; // rax
  char v14[656]; // [rsp+10h] [rbp-290h] BYREF

  v2 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(608LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "12 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 32 9 <unknown> 160 32 "
                        "9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9"
                        " <unknown> 544 32 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestSpecialShowConfig::init;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 96),
    "ID",
    (const std::allocator<char> *)(v2 + 32));
  v5 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 96), &this->id) != 0;
  std::string::~string((void *)(v2 + 96));
  *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  if ( v5 )
  {
    *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
    if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(v2 + 160, 32LL);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 160),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "init",
      1907);
    v6 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
           (common::milog::MiLogStream *const)(v2 + 160),
           (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(v6, (const char (*)[23])byte_1A453440);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
    result = -1;
  }
  else
  {
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
    std::allocator<char>::allocator(v2 + 48);
    std::string::basic_string<std::allocator<char>>(
      (std::string *const)(v2 + 224),
      &byte_1A451520,
      (const std::allocator<char> *)(v2 + 48));
    v8 = common::tools::TxtFile::Row::assignToEnum<data::QuestSpecialShowType>(
           row,
           (const std::string *)(v2 + 224),
           &this->cond_type) != 0;
    std::string::~string((void *)(v2 + 224));
    *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
    std::allocator<char>::~allocator(v2 + 48);
    *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
    if ( v8 )
    {
      *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 288, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 288),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "init",
        1912);
      v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
             (common::milog::MiLogStream *const)(v2 + 288),
             (const char (*)[16])"[CONFIG_ERROR] ");
      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(v9, (const char (*)[27])byte_1A451560);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
      result = -1;
    }
    else
    {
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
      std::allocator<char>::allocator(v2 + 64);
      std::string::basic_string<std::allocator<char>>(
        (std::string *const)(v2 + 352),
        &byte_1A470060,
        (const std::allocator<char> *)(v2 + 64));
      v10 = common::tools::TxtFile::Row::assignToNum<unsigned int>(row, (const std::string *)(v2 + 352), &this->param1) != 0;
      std::string::~string((void *)(v2 + 352));
      *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
      std::allocator<char>::~allocator(v2 + 64);
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      if ( v10 )
      {
        *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
        if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
          || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
          && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store_n(v2 + 416, 32LL);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 416),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
          "init",
          1917);
        v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)(v2 + 416),
                (const char (*)[16])"[CONFIG_ERROR] ");
        common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(v11, (const char (*)[28])byte_1A4700A0);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
        result = -1;
      }
      else
      {
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = 0;
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
        std::allocator<char>::allocator(v2 + 80);
        std::string::basic_string<std::allocator<char>>(
          (std::string *const)(v2 + 480),
          &byte_1A4700E0,
          (const std::allocator<char> *)(v2 + 80));
        v12 = common::tools::TxtFile::Row::assignToNum<unsigned int>(
                row,
                (const std::string *)(v2 + 480),
                &this->param2) != 0;
        std::string::~string((void *)(v2 + 480));
        *(_DWORD *)(((v2 + 480) >> 3) + 0x7FFF8000) = -117901064;
        std::allocator<char>::~allocator(v2 + 80);
        *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
        if ( v12 )
        {
          *(_DWORD *)(((v2 + 544) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 544) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 575) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 544, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 544),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "init",
            1922);
          v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  (common::milog::MiLogStream *const)(v2 + 544),
                  (const char (*)[16])"[CONFIG_ERROR] ");
          common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(v13, (const char (*)[28])byte_1A470120);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 544));
          result = -1;
        }
        else
        {
          result = 0;
        }
      }
    }
  }
  if ( v14 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8030) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8048) = -168430091;
  }
  return result;
};

// Line 1931: range 000000000EF72FD2-000000000EF740B2
int32_t __cdecl data::QuestExcelConfigMgrBase::loadChapterExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  _BOOL4 v9; // r14d
  int v10; // eax
  uint32_t v11; // ecx
  unsigned __int64 v12; // rax
  common::milog::MiLogStream *v13; // rax
  int v14; // r14d
  __int64 v15; // rcx
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rdx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rcx
  __int64 v20; // rsi
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // r14
  data::ChapterExcelConfig *v23; // rax
  unsigned int *v24; // rcx
  data::ChapterExcelConfig *v25; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::ChapterExcelConfig>,false,false>,bool> v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  unsigned __int64 v29; // rax
  int v30; // edx
  char *i; // r14
  int32_t v33; // [rsp+1Ch] [rbp-8654h]
  std::string *__for_begin; // [rsp+38h] [rbp-8638h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+58h] [rbp-8618h]
  char v37[34320]; // [rsp+60h] [rbp-8610h] BYREF

  v2 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_10(34272LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "14 32 1 9 <unknown> 48 1 9 <unknown> 64 4 6 r:1947 80 4 9 <unknown> 96 32 9 <unknown> 160 32 9 <"
                        "unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 64 10 p"
                        "aths:1932 576 72 9 data:1950 688 376 25 debug_message_stream:1958 1136 32880 13 txt_file:1941";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::loadChapterExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234556924;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862737] = -218959118;
  v4[536862740] = -218959360;
  v4[536862741] = 62194;
  v4[536862753] = -218959360;
  v4[536862754] = -218959118;
  v4[536862755] = 62194;
  v4[536863783] = -202116109;
  v4[536863784] = -202116109;
  v4[536863785] = -202116109;
  v4[536863786] = -202116109;
  v4[536863787] = -202116109;
  v4[536863788] = -202116109;
  v4[536863789] = -202116109;
  v4[536863790] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 480),
    "/txt/ChapterData.txt",
    (const std::allocator<char> *)(v2 + 32));
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 512),
    "/txt/ChapterData_Exported.txt",
    (const std::allocator<char> *)(v2 + 48));
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v2 + 480); __for_begin != (std::string *)(v2 + 544); ++__for_begin )
  {
    *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v2 + 96) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 127) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 127) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v2 + 96, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 96), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v2 + 96);
    std::string::~string((void *)(v2 + 96));
    *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v2 + 1136, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v2 + 1136));
    v6 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v2 + 1136), v6) )
    {
      *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 160, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 160),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadChapterExcelConfig",
        1944);
      v7 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v2 + 160),
             (const char (*)[8])byte_1A454D80);
      v8 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v8, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
      *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
      v33 = -1;
      v9 = 0;
    }
    else
    {
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 4;
      v10 = *(unsigned __int8 *)(((v2 + 64) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v10 != 0 && (char)v10 <= 3 )
        __asan_report_store4(v2 + 64, v6);
      for ( *(_DWORD *)(v2 + 64) = 0; ; ++*(_DWORD *)(v2 + 64) )
      {
        v11 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v2 + 1136));
        if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 64);
        if ( v11 <= *(_DWORD *)(v2 + 64) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v2 + 1136), *(_DWORD *)(v2 + 64));
        v12 = ((v2 + 576) >> 3) + 2147450880;
        *(_DWORD *)v12 = 0;
        *(_DWORD *)(v12 + 4) = 0;
        *(_BYTE *)(v12 + 8) = 0;
        data::ChapterExcelConfig::ChapterExcelConfig((data::ChapterExcelConfig *const)(v2 + 576));
        if ( row_ptr )
        {
          if ( data::ChapterExcelConfig::init((data::ChapterExcelConfig *const)(v2 + 576), row_ptr) )
          {
            __asan_unpoison_stack_memory(v2 + 688, 376LL);
            std::ostringstream::basic_ostringstream(v2 + 688);
            v15 = std::operator<<<std::char_traits<char>>(v2 + 688, &unk_1A455D00);
            if ( *(_BYTE *)(((v2 + 584) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 584) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 584);
            std::ostream::operator<<(v15, *(unsigned int *)(v2 + 584));
            *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 32 + 95) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 288, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 288),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadChapterExcelConfig",
              1960);
            v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 288),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v17 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v16, (const char (*)[2])"<");
            v18 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, __for_begin);
            v19 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v18,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 64);
            v20 = (unsigned int)(*(_DWORD *)(v2 + 64) + 1);
            if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v2 + 80, v20);
            *(_DWORD *)(v2 + 80) = v20;
            v21 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v19,
                    (const unsigned int *)(v2 + 80));
            v22 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v21,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 352, 32LL);
            }
            std::ostringstream::str(v2 + 352, v2 + 688);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, (const std::string *)(v2 + 352));
            std::string::~string((void *)(v2 + 352));
            *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
            *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
            v33 = -1;
            std::ostringstream::~ostringstream(v2 + 688);
            __asan_poison_stack_memory(v2 + 688, 376LL);
            v14 = 0;
          }
          else
          {
            v23 = std::move<data::ChapterExcelConfig &>((data::ChapterExcelConfig *)(v2 + 576));
            v26 = std::unordered_map<unsigned int,data::ChapterExcelConfig>::emplace<unsigned int &,data::ChapterExcelConfig>(
                    &this->chapter_excel_config_map,
                    (unsigned int *)(v2 + 584),
                    v23,
                    v24,
                    v25);
            if ( !v26.second )
            {
              *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 96 + 31) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 416, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 416),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadChapterExcelConfig",
                1965);
              v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 416),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v28 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v27, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v28,
                (const unsigned int *)(v2 + 584));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
              *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
              v33 = -1;
              v14 = 0;
            }
            else
            {
              v14 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 32 + 31) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 224, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 224),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadChapterExcelConfig",
            1953);
          v13 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v2 + 224),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, (const unsigned int *)(v2 + 64));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
          *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
          v33 = -1;
          v14 = 0;
        }
        data::ChapterExcelConfig::~ChapterExcelConfig((data::ChapterExcelConfig *const)(v2 + 576));
        v29 = ((v2 + 576) >> 3) + 2147450880;
        *(_DWORD *)v29 = -117901064;
        *(_DWORD *)(v29 + 4) = -117901064;
        *(_BYTE *)(v29 + 8) = -8;
        if ( v14 != 1 )
        {
          v30 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 64);
      }
      v30 = 1;
LABEL_45:
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      v9 = v30 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v2 + 1136));
    __asan_poison_stack_memory(v2 + 1136, 32880LL);
    if ( !v9 )
      goto LABEL_49;
  }
  v33 = 0;
LABEL_49:
  for ( i = (char *)(v2 + 544); i != (char *)(v2 + 480); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF90B4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862739) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450948 - (((_DWORD)v4 + 2147450956) & 0xFFFFFFF8) + 4216) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_10(v2, 34272LL, v37);
  }
  return v33;
};

// Line 1974: range 000000000EF740B4-000000000EF751F4
int32_t __cdecl data::QuestExcelConfigMgrBase::loadMainQuestExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  _BOOL4 v9; // r14d
  int v10; // eax
  uint32_t v11; // ecx
  unsigned __int64 v12; // rax
  common::milog::MiLogStream *v13; // rax
  int v14; // r14d
  __int64 v15; // rcx
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rdx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rcx
  __int64 v20; // rsi
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // r14
  data::MainQuestExcelConfig *v23; // rax
  unsigned int *v24; // rcx
  data::MainQuestExcelConfig *v25; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false>,bool> v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  unsigned __int64 v29; // rax
  int v30; // edx
  char *i; // r14
  int32_t v33; // [rsp+1Ch] [rbp-86F4h]
  std::string *__for_begin; // [rsp+38h] [rbp-86D8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+58h] [rbp-86B8h]
  char v37[34480]; // [rsp+60h] [rbp-86B0h] BYREF

  v2 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_10(34432LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "14 32 1 9 <unknown> 48 1 9 <unknown> 64 4 6 r:1990 80 4 9 <unknown> 96 32 9 <unknown> 160 32 9 <"
                        "unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 64 10 p"
                        "aths:1975 576 200 9 data:1993 848 376 25 debug_message_stream:2001 1296 32880 13 txt_file:1984";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::loadMainQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234556924;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862737] = -218959118;
  v4[536862744] = -218959360;
  v4[536862745] = -218959118;
  v4[536862746] = 62194;
  v4[536862758] = -218959360;
  v4[536862759] = -218959118;
  v4[536862760] = 62194;
  v4[536863788] = -202116109;
  v4[536863789] = -202116109;
  v4[536863790] = -202116109;
  v4[536863791] = -202116109;
  v4[536863792] = -202116109;
  v4[536863793] = -202116109;
  v4[536863794] = -202116109;
  v4[536863795] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 480),
    "/txt/MainQuestData.txt",
    (const std::allocator<char> *)(v2 + 32));
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 512),
    "/txt/MainQuestData_Exported.txt",
    (const std::allocator<char> *)(v2 + 48));
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v2 + 480); __for_begin != (std::string *)(v2 + 544); ++__for_begin )
  {
    *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v2 + 96) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 127) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 127) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v2 + 96, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 96), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v2 + 96);
    std::string::~string((void *)(v2 + 96));
    *(_DWORD *)(((v2 + 96) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v2 + 1296, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v2 + 1296));
    v6 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v2 + 1296), v6) )
    {
      *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 160) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 191) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 160, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 160),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadMainQuestExcelConfig",
        1987);
      v7 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v2 + 160),
             (const char (*)[8])byte_1A454D80);
      v8 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v8, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 160));
      *(_DWORD *)(((v2 + 160) >> 3) + 0x7FFF8000) = -117901064;
      v33 = -1;
      v9 = 0;
    }
    else
    {
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 4;
      v10 = *(unsigned __int8 *)(((v2 + 64) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v10 != 0 && (char)v10 <= 3 )
        __asan_report_store4(v2 + 64, v6);
      for ( *(_DWORD *)(v2 + 64) = 0; ; ++*(_DWORD *)(v2 + 64) )
      {
        v11 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v2 + 1296));
        if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 64);
        if ( v11 <= *(_DWORD *)(v2 + 64) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v2 + 1296), *(_DWORD *)(v2 + 64));
        v12 = ((v2 + 576) >> 3) + 2147450880;
        *(_DWORD *)v12 = 0;
        *(_DWORD *)(v12 + 4) = 0;
        *(_DWORD *)(v12 + 8) = 0;
        *(_DWORD *)(v12 + 12) = 0;
        *(_DWORD *)(v12 + 16) = 0;
        *(_DWORD *)(v12 + 20) = 0;
        *(_BYTE *)(v12 + 24) = 0;
        data::MainQuestExcelConfig::MainQuestExcelConfig((data::MainQuestExcelConfig *const)(v2 + 576));
        if ( row_ptr )
        {
          if ( data::MainQuestExcelConfig::init((data::MainQuestExcelConfig *const)(v2 + 576), row_ptr) )
          {
            __asan_unpoison_stack_memory(v2 + 848, 376LL);
            std::ostringstream::basic_ostringstream(v2 + 848);
            v15 = std::operator<<<std::char_traits<char>>(v2 + 848, &unk_1A455D00);
            if ( *(_BYTE *)(((v2 + 584) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 584) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 584);
            std::ostream::operator<<(v15, *(unsigned int *)(v2 + 584));
            *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 288) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 63) & 7) >= *(_BYTE *)(((v2 + 319) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 288, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 288),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadMainQuestExcelConfig",
              2003);
            v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 288),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v17 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v16, (const char (*)[2])"<");
            v18 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, __for_begin);
            v19 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v18,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 64);
            v20 = (unsigned int)(*(_DWORD *)(v2 + 64) + 1);
            if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v2 + 80, v20);
            *(_DWORD *)(v2 + 80) = v20;
            v21 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v19,
                    (const unsigned int *)(v2 + 80));
            v22 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v21,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 352) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 127) & 7) >= *(_BYTE *)(((v2 + 383) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 352, 32LL);
            }
            std::ostringstream::str(v2 + 352, v2 + 848);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, (const std::string *)(v2 + 352));
            std::string::~string((void *)(v2 + 352));
            *(_DWORD *)(((v2 + 352) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 288));
            *(_DWORD *)(((v2 + 288) >> 3) + 0x7FFF8000) = -117901064;
            v33 = -1;
            std::ostringstream::~ostringstream(v2 + 848);
            __asan_poison_stack_memory(v2 + 848, 376LL);
            v14 = 0;
          }
          else
          {
            v23 = std::move<data::MainQuestExcelConfig &>((data::MainQuestExcelConfig *)(v2 + 576));
            v26 = std::unordered_map<unsigned int,data::MainQuestExcelConfig>::emplace<unsigned int &,data::MainQuestExcelConfig>(
                    &this->main_quest_excel_config_map,
                    (unsigned int *)(v2 + 584),
                    v23,
                    v24,
                    v25);
            if ( !v26.second )
            {
              *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 416) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 65) & 7) >= *(_BYTE *)(((v2 + 447) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 416, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 416),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadMainQuestExcelConfig",
                2008);
              v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 416),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v28 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v27, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v28,
                (const unsigned int *)(v2 + 584));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 416));
              *(_DWORD *)(((v2 + 416) >> 3) + 0x7FFF8000) = -117901064;
              v33 = -1;
              v14 = 0;
            }
            else
            {
              v14 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 224) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 1) & 7) >= *(_BYTE *)(((v2 + 255) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 224, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 224),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadMainQuestExcelConfig",
            1996);
          v13 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v2 + 224),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, (const unsigned int *)(v2 + 64));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 224));
          *(_DWORD *)(((v2 + 224) >> 3) + 0x7FFF8000) = -117901064;
          v33 = -1;
          v14 = 0;
        }
        data::MainQuestExcelConfig::~MainQuestExcelConfig((data::MainQuestExcelConfig *const)(v2 + 576));
        v29 = ((v2 + 576) >> 3) + 2147450880;
        *(_DWORD *)v29 = -117901064;
        *(_DWORD *)(v29 + 4) = -117901064;
        *(_DWORD *)(v29 + 8) = -117901064;
        *(_DWORD *)(v29 + 12) = -117901064;
        *(_DWORD *)(v29 + 16) = -117901064;
        *(_DWORD *)(v29 + 20) = -117901064;
        *(_BYTE *)(v29 + 24) = -8;
        if ( v14 != 1 )
        {
          v30 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 64);
      }
      v30 = 1;
LABEL_45:
      *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
      v9 = v30 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v2 + 1296));
    __asan_poison_stack_memory(v2 + 1296, 32880LL);
    if ( !v9 )
      goto LABEL_49;
  }
  v33 = 0;
LABEL_49:
  for ( i = (char *)(v2 + 544); i != (char *)(v2 + 480); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8044) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF90C8) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862739) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450948 - (((_DWORD)v4 + 2147450956) & 0xFFFFFFF8) + 4236) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_10(v2, 34432LL, v37);
  }
  return v33;
};

// Line 2017: range 000000000EF751F6-000000000EF76C67
int32_t __cdecl data::QuestExcelConfigMgrBase::loadQuestExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r14
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  _BOOL4 v9; // r13d
  int v10; // eax
  uint32_t v11; // ecx
  common::milog::MiLogStream *v12; // rax
  int v13; // r13d
  __int64 v14; // rcx
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rdx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rcx
  __int64 v19; // rsi
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // r13
  data::QuestExcelConfig *v22; // rax
  unsigned int *v23; // rcx
  data::QuestExcelConfig *v24; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestExcelConfig>,false,false>,bool> v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  int v28; // edx
  char *i; // r13
  int32_t v31; // [rsp+1Ch] [rbp-8B74h]
  std::string *__for_begin; // [rsp+38h] [rbp-8B58h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+58h] [rbp-8B38h]
  char v35[35632]; // [rsp+60h] [rbp-8B30h] BYREF

  v2 = (unsigned __int64)v35;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_10(35584LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "28 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unkno"
                        "wn> 208 1 9 <unknown> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 28"
                        "8 4 6 r:2047 304 4 9 <unknown> 320 32 9 <unknown> 384 32 9 <unknown> 448 32 9 <unknown> 512 32 9"
                        " <unknown> 576 32 9 <unknown> 640 32 9 <unknown> 704 376 25 debug_message_stream:2058 1152 512 1"
                        "0 paths:2018 1728 592 9 data:2050 2448 32880 13 txt_file:2041";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::loadQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234556924;
  v4[536862731] = -218959118;
  v4[536862733] = -218959118;
  v4[536862735] = -218959118;
  v4[536862737] = -218959118;
  v4[536862739] = -218959118;
  v4[536862741] = -218959118;
  v4[536862753] = -234881024;
  v4[536862754] = -218959118;
  v4[536862755] = -218959118;
  v4[536862772] = -218959118;
  v4[536862773] = -218959118;
  v4[536862792] = -219021312;
  v4[536862793] = -218959118;
  v4[536862794] = -218959118;
  v4[536862795] = -218959118;
  v4[536862796] = 62194;
  v4[536863824] = -202116109;
  v4[536863825] = -202116109;
  v4[536863826] = -202116109;
  v4[536863827] = -202116109;
  v4[536863828] = -202116109;
  v4[536863829] = -202116109;
  v4[536863830] = -202116109;
  v4[536863831] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1152),
    "/txt/QuestData.txt",
    (const std::allocator<char> *)(v2 + 32));
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1184),
    "/txt/QuestData_MengdeMQ.txt",
    (const std::allocator<char> *)(v2 + 48));
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1216),
    "/txt/QuestData_MengdeIQ.txt",
    (const std::allocator<char> *)(v2 + 64));
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1248),
    "/txt/QuestData_MengdeLQ_Adult.txt",
    (const std::allocator<char> *)(v2 + 80));
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 96);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1280),
    "/txt/QuestData_MengdeLQ_Teen.txt",
    (const std::allocator<char> *)(v2 + 96));
  std::allocator<char>::~allocator(v2 + 96);
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 112);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1312),
    "/txt/QuestData_LiyueIQ.txt",
    (const std::allocator<char> *)(v2 + 112));
  std::allocator<char>::~allocator(v2 + 112);
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 128);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1344),
    "/txt/QuestData_NPC.txt",
    (const std::allocator<char> *)(v2 + 128));
  std::allocator<char>::~allocator(v2 + 128);
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 144);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1376),
    "/txt/QuestData_LiyueLQ_Adult.txt",
    (const std::allocator<char> *)(v2 + 144));
  std::allocator<char>::~allocator(v2 + 144);
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 160);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1408),
    "/txt/QuestData_Activity.txt",
    (const std::allocator<char> *)(v2 + 160));
  std::allocator<char>::~allocator(v2 + 160);
  *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 176);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1440),
    "/txt/QuestData_Exported.txt",
    (const std::allocator<char> *)(v2 + 176));
  std::allocator<char>::~allocator(v2 + 176);
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 192);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1472),
    "/txt/QuestData_MengdeIQ_2.txt",
    (const std::allocator<char> *)(v2 + 192));
  std::allocator<char>::~allocator(v2 + 192);
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 208);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1504),
    "/txt/QuestData_LiyueIQ_2.txt",
    (const std::allocator<char> *)(v2 + 208));
  std::allocator<char>::~allocator(v2 + 208);
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 224);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1536),
    "/txt/QuestData_LiyueIQ_3.txt",
    (const std::allocator<char> *)(v2 + 224));
  std::allocator<char>::~allocator(v2 + 224);
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 240);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1568),
    "/txt/QuestData_LiyueMQ.txt",
    (const std::allocator<char> *)(v2 + 240));
  std::allocator<char>::~allocator(v2 + 240);
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 256);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1600),
    "/txt/QuestData_LiyueWQ.txt",
    (const std::allocator<char> *)(v2 + 256));
  std::allocator<char>::~allocator(v2 + 256);
  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 272);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1632),
    "/txt/QuestData_Coop.txt",
    (const std::allocator<char> *)(v2 + 272));
  std::allocator<char>::~allocator(v2 + 272);
  *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v2 + 1152); __for_begin != (std::string *)(v2 + 1664); ++__for_begin )
  {
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v2 + 320) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 351) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v2 + 320, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 320), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v2 + 320);
    std::string::~string((void *)(v2 + 320));
    *(_DWORD *)(((v2 + 320) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v2 + 2448, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v2 + 2448));
    v6 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v2 + 2448), v6) )
    {
      *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 384) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 415) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 384, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 384),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadQuestExcelConfig",
        2044);
      v7 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v2 + 384),
             (const char (*)[8])byte_1A454D80);
      v8 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v8, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 384));
      *(_DWORD *)(((v2 + 384) >> 3) + 0x7FFF8000) = -117901064;
      v31 = -1;
      v9 = 0;
    }
    else
    {
      *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 4;
      v10 = *(unsigned __int8 *)(((v2 + 288) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v10 != 0 && (char)v10 <= 3 )
        __asan_report_store4(v2 + 288, v6);
      for ( *(_DWORD *)(v2 + 288) = 0; ; ++*(_DWORD *)(v2 + 288) )
      {
        v11 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v2 + 2448));
        if ( *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 288);
        if ( v11 <= *(_DWORD *)(v2 + 288) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v2 + 2448), *(_DWORD *)(v2 + 288));
        __asan_unpoison_stack_memory(v2 + 1728, 592LL);
        data::QuestExcelConfig::QuestExcelConfig((data::QuestExcelConfig *const)(v2 + 1728));
        if ( row_ptr )
        {
          if ( data::QuestExcelConfig::init((data::QuestExcelConfig *const)(v2 + 1728), row_ptr) )
          {
            __asan_unpoison_stack_memory(v2 + 704, 376LL);
            std::ostringstream::basic_ostringstream(v2 + 704);
            v14 = std::operator<<<std::char_traits<char>>(v2 + 704, &unk_1A470BE0);
            if ( *(_BYTE *)(((v2 + 1736) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 1736) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 1736);
            std::ostream::operator<<(v14, *(unsigned int *)(v2 + 1736));
            *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 512) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 31) & 7) >= *(_BYTE *)(((v2 + 543) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 512, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 512),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadQuestExcelConfig",
              2060);
            v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 512),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v16 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v15, (const char (*)[2])"<");
            v17 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v16, __for_begin);
            v18 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v17,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 288);
            v19 = (unsigned int)(*(_DWORD *)(v2 + 288) + 1);
            if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v2 + 304, v19);
            *(_DWORD *)(v2 + 304) = v19;
            v20 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v18,
                    (const unsigned int *)(v2 + 304));
            v21 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v20,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 576) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 95) & 7) >= *(_BYTE *)(((v2 + 607) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 576, 32LL);
            }
            std::ostringstream::str(v2 + 576, v2 + 704);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, (const std::string *)(v2 + 576));
            std::string::~string((void *)(v2 + 576));
            *(_DWORD *)(((v2 + 576) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 512));
            *(_DWORD *)(((v2 + 512) >> 3) + 0x7FFF8000) = -117901064;
            v31 = -1;
            std::ostringstream::~ostringstream(v2 + 704);
            __asan_poison_stack_memory(v2 + 704, 376LL);
            v13 = 0;
          }
          else
          {
            v22 = std::move<data::QuestExcelConfig &>((data::QuestExcelConfig *)(v2 + 1728));
            v25 = std::unordered_map<unsigned int,data::QuestExcelConfig>::emplace<unsigned int &,data::QuestExcelConfig>(
                    &this->quest_excel_config_map,
                    (unsigned int *)(v2 + 1736),
                    v22,
                    v23,
                    v24);
            if ( !v25.second )
            {
              *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 640) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 97) & 7) >= *(_BYTE *)(((v2 + 671) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 640, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 640),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadQuestExcelConfig",
                2065);
              v26 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 640),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v27 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                      v26,
                      (const char (*)[12])byte_1A470C20);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v27,
                (const unsigned int *)(v2 + 1736));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 640));
              *(_DWORD *)(((v2 + 640) >> 3) + 0x7FFF8000) = -117901064;
              v31 = -1;
              v13 = 0;
            }
            else
            {
              v13 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 448) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 64 + 31) & 7) >= *(_BYTE *)(((v2 + 479) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 448, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 448),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadQuestExcelConfig",
            2053);
          v12 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v2 + 448),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)(v2 + 288));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 448));
          *(_DWORD *)(((v2 + 448) >> 3) + 0x7FFF8000) = -117901064;
          v31 = -1;
          v13 = 0;
        }
        data::QuestExcelConfig::~QuestExcelConfig((data::QuestExcelConfig *const)(v2 + 1728));
        __asan_poison_stack_memory(v2 + 1728, 592LL);
        if ( v13 != 1 )
        {
          v28 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 288);
      }
      v28 = 1;
LABEL_45:
      *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
      v9 = v28 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v2 + 2448));
    __asan_poison_stack_memory(v2 + 2448, 32880LL);
    if ( !v9 )
      goto LABEL_49;
  }
  v31 = 0;
LABEL_49:
  for ( i = (char *)(v2 + 1664); i != (char *)(v2 + 1152); std::string::~string(i) )
    i -= 32;
  if ( v35 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8088) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 144) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF80D0) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF9158) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862774) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147451088 - (((_DWORD)v4 + 2147451096) & 0xFFFFFFF8) + 4240) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_10(v2, 35584LL, v35);
  }
  return v31;
};

// Line 2074: range 000000000EF76C68-000000000EF7878D
int32_t __cdecl data::QuestExcelConfigMgrBase::loadTalkExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r14
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  _BOOL4 v9; // r13d
  int v10; // eax
  uint32_t v11; // ecx
  _DWORD *v12; // rax
  common::milog::MiLogStream *v13; // rax
  int v14; // r13d
  __int64 v15; // rcx
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rdx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rcx
  __int64 v20; // rsi
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // r13
  data::TalkExcelConfig *v23; // rax
  unsigned int *v24; // rcx
  data::TalkExcelConfig *v25; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::TalkExcelConfig>,false,false>,bool> v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  _DWORD *v29; // rax
  int v30; // edx
  char *i; // r13
  int32_t v33; // [rsp+1Ch] [rbp-89B4h]
  std::string *__for_begin; // [rsp+38h] [rbp-8998h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+58h] [rbp-8978h]
  char v37[35184]; // [rsp+60h] [rbp-8970h] BYREF

  v2 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_10(35136LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "28 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 <unknown> 128 1 9"
                        " <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unknown> 208 1 9 <unkn"
                        "own> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 288 1 9 <unknown> 3"
                        "04 4 6 r:2104 320 4 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 32 "
                        "9 <unknown> 592 32 9 <unknown> 656 32 9 <unknown> 720 192 9 data:2107 976 376 25 debug_message_s"
                        "tream:2115 1424 512 10 paths:2075 2000 32880 13 txt_file:2098";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::loadTalkExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234556927;
  v4[536862730] = 61956;
  v4[536862731] = -219021312;
  v4[536862732] = 62194;
  v4[536862733] = -219021312;
  v4[536862734] = 62194;
  v4[536862735] = -219021312;
  v4[536862736] = 62194;
  v4[536862737] = -219021312;
  v4[536862738] = 62194;
  v4[536862739] = -219021312;
  v4[536862740] = 62194;
  v4[536862741] = -219021312;
  v4[536862742] = 62194;
  v4[536862748] = -219021312;
  v4[536862749] = -218959118;
  v4[536862750] = 62194;
  v4[536862762] = -218959360;
  v4[536862763] = -218959118;
  v4[536862764] = 62194;
  v4[536862780] = -219021312;
  v4[536862781] = -218959118;
  v4[536862782] = 62194;
  v4[536863810] = -202116109;
  v4[536863811] = -202116109;
  v4[536863812] = -202116109;
  v4[536863813] = -202116109;
  v4[536863814] = -202116109;
  v4[536863815] = -202116109;
  v4[536863816] = -202116109;
  v4[536863817] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1424),
    "/txt/TalkData.txt",
    (const std::allocator<char> *)(v2 + 48));
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1456),
    "/txt/TalkData_MengdeMQ.txt",
    (const std::allocator<char> *)(v2 + 64));
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1488),
    "/txt/TalkData_MengdeIQ.txt",
    (const std::allocator<char> *)(v2 + 80));
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 96);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1520),
    "/txt/TalkData_MengdeLQ_Adult.txt",
    (const std::allocator<char> *)(v2 + 96));
  std::allocator<char>::~allocator(v2 + 96);
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 112);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1552),
    "/txt/TalkData_MengdeLQ_Teen.txt",
    (const std::allocator<char> *)(v2 + 112));
  std::allocator<char>::~allocator(v2 + 112);
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 128);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1584),
    "/txt/RqTalkData.txt",
    (const std::allocator<char> *)(v2 + 128));
  std::allocator<char>::~allocator(v2 + 128);
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 144);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1616),
    "/txt/TalkData_LiyueIQ.txt",
    (const std::allocator<char> *)(v2 + 144));
  std::allocator<char>::~allocator(v2 + 144);
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 160);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1648),
    "/txt/TalkData_NPC.txt",
    (const std::allocator<char> *)(v2 + 160));
  std::allocator<char>::~allocator(v2 + 160);
  *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 176);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1680),
    "/txt/TalkData_LiyueLQ_Adult.txt",
    (const std::allocator<char> *)(v2 + 176));
  std::allocator<char>::~allocator(v2 + 176);
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 192);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1712),
    "/txt/TalkData_Activity.txt",
    (const std::allocator<char> *)(v2 + 192));
  std::allocator<char>::~allocator(v2 + 192);
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 208);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1744),
    "/txt/TalkData_MengdeIQ_2.txt",
    (const std::allocator<char> *)(v2 + 208));
  std::allocator<char>::~allocator(v2 + 208);
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 224);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1776),
    "/txt/TalkData_LiyueIQ_2.txt",
    (const std::allocator<char> *)(v2 + 224));
  std::allocator<char>::~allocator(v2 + 224);
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 240);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1808),
    "/txt/TalkData_LiyueIQ_3.txt",
    (const std::allocator<char> *)(v2 + 240));
  std::allocator<char>::~allocator(v2 + 240);
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 256);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1840),
    "/txt/TalkData_LiyueMQ.txt",
    (const std::allocator<char> *)(v2 + 256));
  std::allocator<char>::~allocator(v2 + 256);
  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 272);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1872),
    "/txt/TalkData_LiyueWQ.txt",
    (const std::allocator<char> *)(v2 + 272));
  std::allocator<char>::~allocator(v2 + 272);
  *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 288);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1904),
    "/txt/TalkData_Exported.txt",
    (const std::allocator<char> *)(v2 + 288));
  std::allocator<char>::~allocator(v2 + 288);
  *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v2 + 1424); __for_begin != (std::string *)(v2 + 1936); ++__for_begin )
  {
    *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v2 + 336) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v2 + 336, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 336), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v2 + 336);
    std::string::~string((void *)(v2 + 336));
    *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v2 + 2000, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v2 + 2000));
    v6 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v2 + 2000), v6) )
    {
      *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 400) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 81) & 7) >= *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 400, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 400),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadTalkExcelConfig",
        2101);
      v7 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v2 + 400),
             (const char (*)[8])byte_1A454D80);
      v8 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v8, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 400));
      *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = -117901064;
      v33 = -1;
      v9 = 0;
    }
    else
    {
      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 4;
      v10 = *(unsigned __int8 *)(((v2 + 304) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v10 != 0 && (char)v10 <= 3 )
        __asan_report_store4(v2 + 304, v6);
      for ( *(_DWORD *)(v2 + 304) = 0; ; ++*(_DWORD *)(v2 + 304) )
      {
        v11 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v2 + 2000));
        if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 304);
        if ( v11 <= *(_DWORD *)(v2 + 304) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v2 + 2000), *(_DWORD *)(v2 + 304));
        v12 = (_DWORD *)(((v2 + 720) >> 3) + 2147450880);
        *v12 = 0;
        v12[1] = 0;
        v12[2] = 0;
        v12[3] = 0;
        v12[4] = 0;
        v12[5] = 0;
        data::TalkExcelConfig::TalkExcelConfig((data::TalkExcelConfig *const)(v2 + 720));
        if ( row_ptr )
        {
          if ( data::TalkExcelConfig::init((data::TalkExcelConfig *const)(v2 + 720), row_ptr) )
          {
            __asan_unpoison_stack_memory(v2 + 976, 376LL);
            std::ostringstream::basic_ostringstream(v2 + 976);
            v15 = std::operator<<<std::char_traits<char>>(v2 + 976, &unk_1A455D00);
            if ( *(_BYTE *)(((v2 + 728) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 728) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 728);
            std::ostream::operator<<(v15, *(unsigned int *)(v2 + 728));
            *(_DWORD *)(((v2 + 528) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 528) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 559) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 559) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 528, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 528),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadTalkExcelConfig",
              2117);
            v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 528),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v17 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v16, (const char (*)[2])"<");
            v18 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, __for_begin);
            v19 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v18,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 304);
            v20 = (unsigned int)(*(_DWORD *)(v2 + 304) + 1);
            if ( *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v2 + 320, v20);
            *(_DWORD *)(v2 + 320) = v20;
            v21 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v19,
                    (const unsigned int *)(v2 + 320));
            v22 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v21,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v2 + 592) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 592) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 623) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 623) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 592, 32LL);
            }
            std::ostringstream::str(v2 + 592, v2 + 976);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, (const std::string *)(v2 + 592));
            std::string::~string((void *)(v2 + 592));
            *(_DWORD *)(((v2 + 592) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 528));
            *(_DWORD *)(((v2 + 528) >> 3) + 0x7FFF8000) = -117901064;
            v33 = -1;
            std::ostringstream::~ostringstream(v2 + 976);
            __asan_poison_stack_memory(v2 + 976, 376LL);
            v14 = 0;
          }
          else
          {
            v23 = std::move<data::TalkExcelConfig &>((data::TalkExcelConfig *)(v2 + 720));
            v26 = std::unordered_map<unsigned int,data::TalkExcelConfig>::emplace<unsigned int &,data::TalkExcelConfig>(
                    &this->talk_excel_config_map,
                    (unsigned int *)(v2 + 728),
                    v23,
                    v24,
                    v25);
            if ( !v26.second )
            {
              *(_DWORD *)(((v2 + 656) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 656) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 687) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 81) & 7) >= *(_BYTE *)(((v2 + 687) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 656, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 656),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadTalkExcelConfig",
                2122);
              v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 656),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v28 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v27, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v28,
                (const unsigned int *)(v2 + 728));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 656));
              *(_DWORD *)(((v2 + 656) >> 3) + 0x7FFF8000) = -117901064;
              v33 = -1;
              v14 = 0;
            }
            else
            {
              v14 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 464) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 48 + 31) & 7) >= *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 464, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 464),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadTalkExcelConfig",
            2110);
          v13 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v2 + 464),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, (const unsigned int *)(v2 + 304));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 464));
          *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = -117901064;
          v33 = -1;
          v14 = 0;
        }
        data::TalkExcelConfig::~TalkExcelConfig((data::TalkExcelConfig *const)(v2 + 720));
        v29 = (_DWORD *)(((v2 + 720) >> 3) + 2147450880);
        *v29 = -117901064;
        v29[1] = -117901064;
        v29[2] = -117901064;
        v29[3] = -117901064;
        v29[4] = -117901064;
        v29[5] = -117901064;
        if ( v14 != 1 )
        {
          v30 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 304);
      }
      v30 = 1;
LABEL_45:
      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
      v9 = v30 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v2 + 2000));
    __asan_poison_stack_memory(v2 + 2000, 32880LL);
    if ( !v9 )
      goto LABEL_49;
  }
  v33 = 0;
LABEL_49:
  for ( i = (char *)(v2 + 1936); i != (char *)(v2 + 1424); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF80AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 180) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF80F0) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF9120) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862782) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147451120 - (((_DWORD)v4 + 2147451128) & 0xFFFFFFF8) + 4152) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_10(v2, 35136LL, v37);
  }
  return v33;
};

// Line 2131: range 000000000EF7878E-000000000EF797DE
int32_t __cdecl data::QuestExcelConfigMgrBase::loadRqTalkExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::RqTalkExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::RqTalkExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::RqTalkExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  unsigned __int64 v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-8638h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8618h]
  char v37[34320]; // [rsp+50h] [rbp-8610h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34272LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2146 64 4 9 <unknown> 80 32 10 paths:2132 144 32 9 <unknown> 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 120"
                        " 9 data:2149 688 376 25 debug_message_stream:2157 1136 32880 13 txt_file:2140";
  *(_QWORD *)(v3 + 16) = data::QuestExcelConfigMgrBase::loadRqTalkExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862740] = -218959360;
  v5[536862741] = 62194;
  v5[536862753] = -218959360;
  v5[536862754] = -218959118;
  v5[536862755] = 62194;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 80),
    "/txt/RqTalkData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 80); __for_begin != (std::string *)(v3 + 112); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 144);
    std::string::~string((void *)(v3 + 144));
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1136, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1136), v7) )
    {
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadRqTalkExcelConfig",
        2143);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 208),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 208));
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1136));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1136), *(_DWORD *)(v3 + 48));
        v13 = ((v3 + 528) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_DWORD *)(v13 + 4) = 0;
        *(_DWORD *)(v13 + 8) = 0;
        *(_WORD *)(v13 + 12) = 0;
        *(_BYTE *)(v13 + 14) = 0;
        data::RqTalkExcelConfig::RqTalkExcelConfig((data::RqTalkExcelConfig *const)(v3 + 528));
        if ( row_ptr )
        {
          if ( data::RqTalkExcelConfig::init((data::RqTalkExcelConfig *const)(v3 + 528), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 688, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 688);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 688, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 536);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 536));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadRqTalkExcelConfig",
              2159);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v21);
            *(_DWORD *)(v3 + 64) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 64));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            std::ostringstream::str(v3 + 400, v3 + 688);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 400));
            std::string::~string((void *)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 688);
            __asan_poison_stack_memory(v3 + 688, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::RqTalkExcelConfig &>((data::RqTalkExcelConfig *)(v3 + 528));
            v27 = std::unordered_map<unsigned int,data::RqTalkExcelConfig>::emplace<unsigned int &,data::RqTalkExcelConfig>(
                    &this->rq_talk_excel_config_map,
                    (unsigned int *)(v3 + 536),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadRqTalkExcelConfig",
                2164);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v28, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 536));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 32 + 79) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadRqTalkExcelConfig",
            2152);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::RqTalkExcelConfig::~RqTalkExcelConfig((data::RqTalkExcelConfig *const)(v3 + 528));
        v30 = ((v3 + 528) >> 3) + 2147450880;
        *(_DWORD *)v30 = -117901064;
        *(_DWORD *)(v30 + 4) = -117901064;
        *(_DWORD *)(v30 + 8) = -117901064;
        *(_WORD *)(v30 + 12) = -1800;
        *(_BYTE *)(v30 + 14) = -8;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    __asan_poison_stack_memory(v3 + 1136, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 112); i != (char *)(v3 + 80); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90B4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4284) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34272LL, v37);
  }
  return v2;
};

// Line 2173: range 000000000EF797E0-000000000EF7A9A3
int32_t __cdecl data::QuestExcelConfigMgrBase::loadQuestResCollectionExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  _BOOL4 v9; // r14d
  int v10; // eax
  uint32_t v11; // ecx
  __int64 v12; // rsi
  __int64 *v13; // rdx
  __int64 v14; // rsi
  __int64 v15; // rdx
  common::milog::MiLogStream *v16; // rax
  int v17; // r14d
  __int64 v18; // rcx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rdx
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rcx
  __int64 v23; // rsi
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r14
  data::QuestResCollectionExcelConfig *v26; // rax
  unsigned int *v27; // rcx
  data::QuestResCollectionExcelConfig *v28; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false,false>,bool> v29; // rax
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rax
  int v32; // edx
  char *i; // r14
  int32_t v35; // [rsp+1Ch] [rbp-8614h]
  std::string *__for_begin; // [rsp+38h] [rbp-85F8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+58h] [rbp-85D8h]
  char v39[34256]; // [rsp+60h] [rbp-85D0h] BYREF

  v2 = (unsigned __int64)v39;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_10(34208LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "14 48 1 9 <unknown> 64 1 9 <unknown> 80 4 6 r:2189 96 4 9 <unknown> 112 16 9 data:2192 144 32 9 "
                        "<unknown> 208 32 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <"
                        "unknown> 528 64 10 paths:2174 624 376 25 debug_message_stream:2200 1072 32880 13 txt_file:2183";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::loadQuestResCollectionExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234556927;
  v4[536862723] = 61956;
  v4[536862724] = 62194;
  v4[536862725] = -219021312;
  v4[536862726] = 62194;
  v4[536862727] = -219021312;
  v4[536862728] = 62194;
  v4[536862729] = -219021312;
  v4[536862730] = 62194;
  v4[536862731] = -219021312;
  v4[536862732] = 62194;
  v4[536862733] = -219021312;
  v4[536862734] = 62194;
  v4[536862735] = -219021312;
  v4[536862736] = 62194;
  v4[536862738] = -219021312;
  v4[536862739] = 62194;
  v4[536862751] = -218959360;
  v4[536862752] = -218959118;
  v4[536862753] = 62194;
  v4[536863781] = -202116109;
  v4[536863782] = -202116109;
  v4[536863783] = -202116109;
  v4[536863784] = -202116109;
  v4[536863785] = -202116109;
  v4[536863786] = -202116109;
  v4[536863787] = -202116109;
  v4[536863788] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 528),
    "/txt/QuestResCollection.txt",
    (const std::allocator<char> *)(v2 + 48));
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 560),
    "/txt/QuestResCollection_Exported.txt",
    (const std::allocator<char> *)(v2 + 64));
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v2 + 528); __for_begin != (std::string *)(v2 + 592); ++__for_begin )
  {
    *(_DWORD *)(((v2 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v2 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v2 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v2 + 144);
    std::string::~string((void *)(v2 + 144));
    *(_DWORD *)(((v2 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v2 + 1072, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v2 + 1072));
    v6 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v2 + 1072), v6) )
    {
      *(_DWORD *)(((v2 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadQuestResCollectionExcelConfig",
        2186);
      v7 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v2 + 208),
             (const char (*)[8])byte_1A454D80);
      v8 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v8, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 208));
      *(_DWORD *)(((v2 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v35 = -1;
      v9 = 0;
    }
    else
    {
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 4;
      v10 = *(unsigned __int8 *)(((v2 + 80) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v10 != 0 && (char)v10 <= 3 )
        __asan_report_store4(v2 + 80, v6);
      for ( *(_DWORD *)(v2 + 80) = 0; ; ++*(_DWORD *)(v2 + 80) )
      {
        v11 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v2 + 1072));
        if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 80);
        if ( v11 <= *(_DWORD *)(v2 + 80) )
          break;
        v12 = *(unsigned int *)(v2 + 80);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v2 + 1072), v12);
        *(_WORD *)(((v2 + 112) >> 3) + 0x7FFF8000) = 0;
        v13 = &`vtable for'data::QuestResCollectionExcelConfig + 2;
        if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 112, v12);
        *(_QWORD *)(v2 + 112) = v13;
        if ( *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v2 + 120, v12);
        *(_DWORD *)(v2 + 120) = 0;
        v14 = ((_BYTE)v2 + 124) & 7;
        v15 = (*(_BYTE *)(((v2 + 124) >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v14 >= *(_BYTE *)(((v2 + 124) >> 3) + 0x7FFF8000));
        if ( (_BYTE)v15 )
          __asan_report_store1(v2 + 124, v14, v15);
        *(_BYTE *)(v2 + 124) = 0;
        if ( row_ptr )
        {
          if ( data::QuestResCollectionExcelConfig::init(
                 (data::QuestResCollectionExcelConfig *const)(v2 + 112),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v2 + 624, 376LL);
            std::ostringstream::basic_ostringstream(v2 + 624);
            v18 = std::operator<<<std::char_traits<char>>(v2 + 624, &unk_1A455D00);
            if ( *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 120);
            std::ostream::operator<<(v18, *(unsigned int *)(v2 + 120));
            *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadQuestResCollectionExcelConfig",
              2202);
            v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v20 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v19, (const char (*)[2])"<");
            v21 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v20, __for_begin);
            v22 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v21,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 80);
            v23 = (unsigned int)(*(_DWORD *)(v2 + 80) + 1);
            if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v2 + 96, v23);
            *(_DWORD *)(v2 + 96) = v23;
            v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v22,
                    (const unsigned int *)(v2 + 96));
            v25 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v24,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 400, 32LL);
            }
            std::ostringstream::str(v2 + 400, v2 + 624);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, (const std::string *)(v2 + 400));
            std::string::~string((void *)(v2 + 400));
            *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 336));
            *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v35 = -1;
            std::ostringstream::~ostringstream(v2 + 624);
            __asan_poison_stack_memory(v2 + 624, 376LL);
            v17 = 0;
          }
          else
          {
            v26 = std::move<data::QuestResCollectionExcelConfig &>((data::QuestResCollectionExcelConfig *)(v2 + 112));
            v29 = std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::emplace<unsigned int &,data::QuestResCollectionExcelConfig>(
                    &this->quest_res_collection_excel_config_map,
                    (unsigned int *)(v2 + 120),
                    v26,
                    v27,
                    v28);
            if ( !v29.second )
            {
              *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadQuestResCollectionExcelConfig",
                2207);
              v30 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v31 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v30, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v31,
                (const unsigned int *)(v2 + 120));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 464));
              *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v35 = -1;
              v17 = 0;
            }
            else
            {
              v17 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v2 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadQuestResCollectionExcelConfig",
            2195);
          v16 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v2 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, (const unsigned int *)(v2 + 80));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 272));
          *(_DWORD *)(((v2 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v35 = -1;
          v17 = 0;
        }
        data::QuestResCollectionExcelConfig::~QuestResCollectionExcelConfig((data::QuestResCollectionExcelConfig *const)(v2 + 112));
        *(_WORD *)(((v2 + 112) >> 3) + 0x7FFF8000) = -1800;
        if ( v17 != 1 )
        {
          v32 = 0;
          goto LABEL_51;
        }
        if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 80);
      }
      v32 = 1;
LABEL_51:
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      v9 = v32 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v2 + 1072));
    __asan_poison_stack_memory(v2 + 1072, 32880LL);
    if ( !v9 )
      goto LABEL_55;
  }
  v35 = 0;
LABEL_55:
  for ( i = (char *)(v2 + 592); i != (char *)(v2 + 528); std::string::~string(i) )
    i -= 32;
  if ( v39 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF90AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862740) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450952 - (((_DWORD)v4 + 2147450960) & 0xFFFFFFF8) + 4204) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_10(v2, 34208LL, v39);
  }
  return v35;
};

// Line 2216: range 000000000EF7A9A4-000000000EF7C540
int32_t __cdecl data::QuestExcelConfigMgrBase::loadDialogExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r14
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  _BOOL4 v9; // r13d
  int v10; // eax
  uint32_t v11; // ecx
  _DWORD *v12; // rax
  common::milog::MiLogStream *v13; // rax
  int v14; // r13d
  __int64 v15; // rcx
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rdx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rcx
  __int64 v20; // rsi
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // r13
  data::DialogExcelConfig *v23; // rax
  unsigned int *v24; // rcx
  data::DialogExcelConfig *v25; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::DialogExcelConfig>,false,false>,bool> v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  _DWORD *v29; // rax
  int v30; // edx
  char *i; // r13
  int32_t v33; // [rsp+1Ch] [rbp-8994h]
  std::string *__for_begin; // [rsp+38h] [rbp-8978h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+58h] [rbp-8958h]
  char v37[35152]; // [rsp+60h] [rbp-8950h] BYREF

  v2 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_10(35104LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "29 32 1 9 <unknown> 48 1 9 <unknown> 64 1 9 <unknown> 80 1 9 <unknown> 96 1 9 <unknown> 112 1 9 "
                        "<unknown> 128 1 9 <unknown> 144 1 9 <unknown> 160 1 9 <unknown> 176 1 9 <unknown> 192 1 9 <unkno"
                        "wn> 208 1 9 <unknown> 224 1 9 <unknown> 240 1 9 <unknown> 256 1 9 <unknown> 272 1 9 <unknown> 28"
                        "8 1 9 <unknown> 304 4 6 r:2247 320 4 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 "
                        "<unknown> 528 32 9 <unknown> 592 32 9 <unknown> 656 32 9 <unknown> 720 96 9 data:2250 848 376 25"
                        " debug_message_stream:2258 1296 544 10 paths:2217 1968 32880 13 txt_file:2241";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::loadDialogExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753535;
  v4[536862722] = -234753535;
  v4[536862723] = -234753535;
  v4[536862724] = -234753535;
  v4[536862725] = -234753535;
  v4[536862726] = -234753535;
  v4[536862727] = -234753535;
  v4[536862728] = -234753535;
  v4[536862729] = -234556927;
  v4[536862730] = 61956;
  v4[536862731] = -219021312;
  v4[536862732] = 62194;
  v4[536862733] = -219021312;
  v4[536862734] = 62194;
  v4[536862735] = -219021312;
  v4[536862736] = 62194;
  v4[536862737] = -219021312;
  v4[536862738] = 62194;
  v4[536862739] = -219021312;
  v4[536862740] = 62194;
  v4[536862741] = -219021312;
  v4[536862742] = 62194;
  v4[536862745] = -219021312;
  v4[536862746] = 62194;
  v4[536862758] = -218959360;
  v4[536862759] = -218959118;
  v4[536862760] = 62194;
  v4[536862777] = -219021312;
  v4[536862778] = -218959118;
  v4[536862779] = -218959118;
  v4[536862780] = -218959118;
  v4[536862781] = 62194;
  v4[536863809] = -202116109;
  v4[536863810] = -202116109;
  v4[536863811] = -202116109;
  v4[536863812] = -202116109;
  v4[536863813] = -202116109;
  v4[536863814] = -202116109;
  v4[536863815] = -202116109;
  v4[536863816] = -202116109;
  std::allocator<char>::allocator(v2 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1296),
    "/txt/DialogData.txt",
    (const std::allocator<char> *)(v2 + 32));
  std::allocator<char>::~allocator(v2 + 32);
  *(_BYTE *)(((v2 + 32) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1328),
    "/txt/DialogData_MengdeMQ.txt",
    (const std::allocator<char> *)(v2 + 48));
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1360),
    "/txt/DialogData_MengdeIQ.txt",
    (const std::allocator<char> *)(v2 + 64));
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 80);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1392),
    "/txt/DialogData_MengdeLQ_Adult.txt",
    (const std::allocator<char> *)(v2 + 80));
  std::allocator<char>::~allocator(v2 + 80);
  *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 96);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1424),
    "/txt/DialogData_MengdeLQ_Teen.txt",
    (const std::allocator<char> *)(v2 + 96));
  std::allocator<char>::~allocator(v2 + 96);
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 112);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1456),
    "/txt/RqDialogData.txt",
    (const std::allocator<char> *)(v2 + 112));
  std::allocator<char>::~allocator(v2 + 112);
  *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 128);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1488),
    "/txt/DialogData_LiyueIQ.txt",
    (const std::allocator<char> *)(v2 + 128));
  std::allocator<char>::~allocator(v2 + 128);
  *(_BYTE *)(((v2 + 128) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 144);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1520),
    "/txt/DialogData_NPC.txt",
    (const std::allocator<char> *)(v2 + 144));
  std::allocator<char>::~allocator(v2 + 144);
  *(_BYTE *)(((v2 + 144) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 160);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1552),
    "/txt/DialogData_LiyueLQ_Adult.txt",
    (const std::allocator<char> *)(v2 + 160));
  std::allocator<char>::~allocator(v2 + 160);
  *(_BYTE *)(((v2 + 160) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 176);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1584),
    "/txt/DialogData_Activity.txt",
    (const std::allocator<char> *)(v2 + 176));
  std::allocator<char>::~allocator(v2 + 176);
  *(_BYTE *)(((v2 + 176) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 192);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1616),
    "/txt/DialogData_MengdeIQ_2.txt",
    (const std::allocator<char> *)(v2 + 192));
  std::allocator<char>::~allocator(v2 + 192);
  *(_BYTE *)(((v2 + 192) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 208);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1648),
    "/txt/DialogData_LiyueIQ_2.txt",
    (const std::allocator<char> *)(v2 + 208));
  std::allocator<char>::~allocator(v2 + 208);
  *(_BYTE *)(((v2 + 208) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 224);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1680),
    "/txt/DialogData_LiyueIQ_3.txt",
    (const std::allocator<char> *)(v2 + 224));
  std::allocator<char>::~allocator(v2 + 224);
  *(_BYTE *)(((v2 + 224) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 240);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1712),
    "/txt/DialogData_LiyueMQ.txt",
    (const std::allocator<char> *)(v2 + 240));
  std::allocator<char>::~allocator(v2 + 240);
  *(_BYTE *)(((v2 + 240) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 256);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1744),
    "/txt/DialogData_LiyueWQ.txt",
    (const std::allocator<char> *)(v2 + 256));
  std::allocator<char>::~allocator(v2 + 256);
  *(_BYTE *)(((v2 + 256) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 272);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1776),
    "/txt/DialogData_Exported.txt",
    (const std::allocator<char> *)(v2 + 272));
  std::allocator<char>::~allocator(v2 + 272);
  *(_BYTE *)(((v2 + 272) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 288);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 1808),
    "/txt/DialogData_Coop.txt",
    (const std::allocator<char> *)(v2 + 288));
  std::allocator<char>::~allocator(v2 + 288);
  *(_BYTE *)(((v2 + 288) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v2 + 1296); __for_begin != (std::string *)(v2 + 1840); ++__for_begin )
  {
    *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v2 + 336) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v2 + 336, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 336), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v2 + 336);
    std::string::~string((void *)(v2 + 336));
    *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v2 + 1968, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v2 + 1968));
    v6 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v2 + 1968), v6) )
    {
      *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 400) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 81) & 7) >= *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 400, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 400),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadDialogExcelConfig",
        2244);
      v7 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v2 + 400),
             (const char (*)[8])byte_1A454D80);
      v8 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v8, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 400));
      *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = -117901064;
      v33 = -1;
      v9 = 0;
    }
    else
    {
      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = 4;
      v10 = *(unsigned __int8 *)(((v2 + 304) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v10 != 0 && (char)v10 <= 3 )
        __asan_report_store4(v2 + 304, v6);
      for ( *(_DWORD *)(v2 + 304) = 0; ; ++*(_DWORD *)(v2 + 304) )
      {
        v11 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v2 + 1968));
        if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 304);
        if ( v11 <= *(_DWORD *)(v2 + 304) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v2 + 1968), *(_DWORD *)(v2 + 304));
        v12 = (_DWORD *)(((v2 + 720) >> 3) + 2147450880);
        *v12 = 0;
        v12[1] = 0;
        v12[2] = 0;
        data::DialogExcelConfig::DialogExcelConfig((data::DialogExcelConfig *const)(v2 + 720));
        if ( row_ptr )
        {
          if ( data::DialogExcelConfig::init((data::DialogExcelConfig *const)(v2 + 720), row_ptr) )
          {
            __asan_unpoison_stack_memory(v2 + 848, 376LL);
            std::ostringstream::basic_ostringstream(v2 + 848);
            v15 = std::operator<<<std::char_traits<char>>(v2 + 848, &unk_1A455D00);
            if ( *(_BYTE *)(((v2 + 728) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 728) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 728);
            std::ostream::operator<<(v15, *(unsigned int *)(v2 + 728));
            *(_DWORD *)(((v2 + 528) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 528) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 559) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 559) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 528, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 528),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadDialogExcelConfig",
              2260);
            v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 528),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v17 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v16, (const char (*)[2])"<");
            v18 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, __for_begin);
            v19 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v18,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 304);
            v20 = (unsigned int)(*(_DWORD *)(v2 + 304) + 1);
            if ( *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v2 + 320, v20);
            *(_DWORD *)(v2 + 320) = v20;
            v21 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v19,
                    (const unsigned int *)(v2 + 320));
            v22 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v21,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v2 + 592) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 592) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 623) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 623) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 592, 32LL);
            }
            std::ostringstream::str(v2 + 592, v2 + 848);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, (const std::string *)(v2 + 592));
            std::string::~string((void *)(v2 + 592));
            *(_DWORD *)(((v2 + 592) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v2 + 320) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 528));
            *(_DWORD *)(((v2 + 528) >> 3) + 0x7FFF8000) = -117901064;
            v33 = -1;
            std::ostringstream::~ostringstream(v2 + 848);
            __asan_poison_stack_memory(v2 + 848, 376LL);
            v14 = 0;
          }
          else
          {
            v23 = std::move<data::DialogExcelConfig &>((data::DialogExcelConfig *)(v2 + 720));
            v26 = std::unordered_map<unsigned int,data::DialogExcelConfig>::emplace<unsigned int &,data::DialogExcelConfig>(
                    &this->dialog_excel_config_map,
                    (unsigned int *)(v2 + 728),
                    v23,
                    v24,
                    v25);
            if ( !v26.second )
            {
              *(_DWORD *)(((v2 + 656) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 656) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 687) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 81) & 7) >= *(_BYTE *)(((v2 + 687) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 656, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 656),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadDialogExcelConfig",
                2265);
              v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 656),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v28 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v27, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v28,
                (const unsigned int *)(v2 + 728));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 656));
              *(_DWORD *)(((v2 + 656) >> 3) + 0x7FFF8000) = -117901064;
              v33 = -1;
              v14 = 0;
            }
            else
            {
              v14 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 464) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 - 48 + 31) & 7) >= *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 464, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 464),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadDialogExcelConfig",
            2253);
          v13 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v2 + 464),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, (const unsigned int *)(v2 + 304));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 464));
          *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = -117901064;
          v33 = -1;
          v14 = 0;
        }
        data::DialogExcelConfig::~DialogExcelConfig((data::DialogExcelConfig *const)(v2 + 720));
        v29 = (_DWORD *)(((v2 + 720) >> 3) + 2147450880);
        *v29 = -117901064;
        v29[1] = -117901064;
        v29[2] = -117901064;
        if ( v14 != 1 )
        {
          v30 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 304);
      }
      v30 = 1;
LABEL_45:
      *(_BYTE *)(((v2 + 304) >> 3) + 0x7FFF8000) = -8;
      v9 = v30 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v2 + 1968));
    __asan_poison_stack_memory(v2 + 1968, 32880LL);
    if ( !v9 )
      goto LABEL_49;
  }
  v33 = 0;
LABEL_49:
  for ( i = (char *)(v2 + 1840); i != (char *)(v2 + 1296); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF809C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450880 - (((_DWORD)v4 + 2147450888) & 0xFFFFFFF8) + 164) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v2 >> 3) + 0x7FFF80E4) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF911C) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862779) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147451108 - (((_DWORD)v4 + 2147451116) & 0xFFFFFFF8) + 4160) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_10(v2, 35104LL, v37);
  }
  return v33;
};

// Line 2274: range 000000000EF7C542-000000000EF7D955
int32_t __cdecl data::QuestExcelConfigMgrBase::loadRandomQuestEntranceExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  unsigned __int64 v16; // rax
  std::tuple_element<1,const std::pair<const std::string,short unsigned int> >::type *v17; // rax
  __int64 v18; // rsi
  __int64 v19; // rdx
  std::map<long unsigned int,std::string>::mapped_type *v20; // rdx
  std::vector<std::string>::size_type v21; // rdx
  const char *v22; // rax
  __int64 v23; // r14
  std::map<long unsigned int,std::string>::mapped_type *v24; // rax
  __int64 v25; // rax
  __int64 v26; // r14
  const std::vector<std::string> *p_data_vec; // rax
  std::vector<std::string>::const_reference v28; // rax
  unsigned __int64 v29; // rax
  const char *v30; // rax
  __int64 v31; // r14
  std::vector<std::string>::const_reference v32; // rax
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rdx
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rcx
  __int64 v37; // rsi
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // r14
  data::RandomQuestEntranceExcelConfig *v40; // rax
  data::RandomQuestEntranceExcelConfig *v41; // rdx
  unsigned __int64 v42; // rax
  int v43; // edx
  char *j; // r14
  std::string *__for_begin; // [rsp+20h] [rbp-86A0h]
  size_t i; // [rsp+28h] [rbp-8698h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8678h]
  std::map<std::string,short unsigned int> *__for_range_0; // [rsp+50h] [rbp-8670h]
  std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> >::reference v51; // [rsp+58h] [rbp-8668h]
  std::tuple_element<0,std::pair<const std::string,short unsigned int> >::type *col_name; // [rsp+60h] [rbp-8660h]
  std::tuple_element<1,const std::pair<const std::string,short unsigned int> >::type *col_id; // [rsp+68h] [rbp-8658h]
  char v54[34384]; // [rsp+70h] [rbp-8650h] BYREF

  v3 = (unsigned __int64)v54;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34336LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "17 32 1 9 <unknown> 48 4 6 r:2289 64 4 9 <unknown> 80 8 16 __for_begin:2304 112 8 14 __for_end:2"
                        "304 144 8 9 <unknown> 176 8 6 i:2308 208 32 10 paths:2275 272 32 9 <unknown> 336 32 9 <unknown> "
                        "400 32 9 <unknown> 464 32 9 <unknown> 528 32 9 <unknown> 592 48 9 data:2292 672 48 20 col_id_nam"
                        "e_map:2303 752 376 25 debug_message_stream:2300 1200 32880 13 txt_file:2283";
  *(_QWORD *)(v3 + 16) = data::QuestExcelConfigMgrBase::loadRandomQuestEntranceExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862722] = -234881024;
  v5[536862723] = 62194;
  v5[536862723] = -234881024;
  v5[536862724] = 62194;
  v5[536862724] = -234881024;
  v5[536862725] = 62194;
  v5[536862725] = -234881024;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862737] = -219021312;
  v5[536862738] = 62194;
  v5[536862740] = -218959118;
  v5[536862742] = -219021312;
  v5[536862743] = 62194;
  v5[536862755] = -218959360;
  v5[536862756] = -218959118;
  v5[536862757] = 62194;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  v5[536863791] = -202116109;
  v5[536863792] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 208),
    "/txt/RqEntranceData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 208); __for_begin != (std::string *)(v3 + 240); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 272, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 272), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 272);
    std::string::~string((void *)(v3 + 272));
    *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1200, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1200));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1200), v7) )
    {
      *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 336, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 336),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadRandomQuestEntranceExcelConfig",
        2286);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 336),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
      *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1200));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1200), *(_DWORD *)(v3 + 48));
        v13 = ((v3 + 592) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_WORD *)(v13 + 4) = 0;
        data::RandomQuestEntranceExcelConfig::RandomQuestEntranceExcelConfig((data::RandomQuestEntranceExcelConfig *const)(v3 + 592));
        if ( row_ptr )
        {
          if ( data::RandomQuestEntranceExcelConfig::init(
                 (data::RandomQuestEntranceExcelConfig *const)(v3 + 592),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 752, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 752);
            if ( *(_BYTE *)(((unsigned __int64)&row_ptr->col_name_map_ptr >> 3) + 0x7FFF8000) )
              __asan_report_load8(&row_ptr->col_name_map_ptr);
            if ( row_ptr->col_name_map_ptr )
            {
              v16 = ((v3 + 672) >> 3) + 2147450880;
              *(_DWORD *)v16 = 0;
              *(_WORD *)(v16 + 4) = 0;
              std::map<unsigned long,std::string>::map((std::map<long unsigned int,std::string> *const)(v3 + 672));
              if ( *(_BYTE *)(((unsigned __int64)&row_ptr->col_name_map_ptr >> 3) + 0x7FFF8000) )
                __asan_report_load8(&row_ptr->col_name_map_ptr);
              __for_range_0 = row_ptr->col_name_map_ptr;
              *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 80, 376LL);
              *(std::map<std::string,short unsigned int>::iterator *)(v3 + 80) = std::map<std::string,unsigned short>::begin(__for_range_0);
              *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 112, 376LL);
              *(std::map<std::string,short unsigned int>::iterator *)(v3 + 112) = std::map<std::string,unsigned short>::end(__for_range_0);
              while ( std::operator!=(
                        (const std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> >::_Self *)(v3 + 80),
                        (const std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> >::_Self *)(v3 + 112)) )
              {
                v51 = std::_Rb_tree_iterator<std::pair<std::string const,unsigned short>>::operator*((const std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> > *const)(v3 + 80));
                col_name = std::get<0ul,std::string const,unsigned short>(v51);
                v17 = (std::tuple_element<1,const std::pair<const std::string,short unsigned int> >::type *)std::get<1ul,std::string const,unsigned short>(v51);
                col_id = v17;
                *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
                v18 = ((unsigned __int8)v17 & 7u) + 1;
                if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v17 & 7) + 1) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load2(v17);
                }
                v19 = *col_id;
                if ( *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) )
                  __asan_report_store8(v3 + 144, v18);
                *(_QWORD *)(v3 + 144) = v19;
                v20 = std::map<unsigned long,std::string>::operator[](
                        (std::map<long unsigned int,std::string> *const)(v3 + 672),
                        (std::map<long unsigned int,std::string>::key_type *)(v3 + 144));
                std::string::operator=(v20, col_name);
                *(_BYTE *)(((v3 + 144) >> 3) + 0x7FFF8000) = -8;
                std::_Rb_tree_iterator<std::pair<std::string const,unsigned short>>::operator++((std::_Rb_tree_iterator<std::pair<const std::string,short unsigned int> > *const)(v3 + 80));
              }
              *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v3 + 112) >> 3) + 0x7FFF8000) = -8;
              *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = 0;
              if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
                __asan_report_store8(v3 + 176, v3 + 112);
              for ( *(_QWORD *)(v3 + 176) = 0LL; ; ++*(_QWORD *)(v3 + 176) )
              {
                v21 = std::vector<std::string>::size(&row_ptr->data_vec);
                if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
                  __asan_report_load8(v3 + 176);
                if ( v21 <= *(_QWORD *)(v3 + 176) )
                  break;
                if ( *(_QWORD *)(v3 + 176) )
                  v22 = " ";
                else
                  v22 = byte_1A3FEBE0;
                v23 = std::operator<<<std::char_traits<char>>(v3 + 752, v22);
                v24 = std::map<unsigned long,std::string>::operator[](
                        (std::map<long unsigned int,std::string> *const)(v3 + 672),
                        (const std::map<long unsigned int,std::string>::key_type *)(v3 + 176));
                v25 = std::operator<<<char>(v23, v24);
                v26 = std::operator<<<std::char_traits<char>>(v25, &off_1A455AC0);
                p_data_vec = &row_ptr->data_vec;
                if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
                  __asan_report_load8(v3 + 176);
                v28 = std::vector<std::string>::operator[](p_data_vec, *(_QWORD *)(v3 + 176));
                std::operator<<<char>(v26, v28);
                if ( *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) )
                  __asan_report_load8(v3 + 176);
              }
              *(_BYTE *)(((v3 + 176) >> 3) + 0x7FFF8000) = -8;
              std::map<unsigned long,std::string>::~map((std::map<long unsigned int,std::string> *const)(v3 + 672));
              v29 = ((v3 + 672) >> 3) + 2147450880;
              *(_DWORD *)v29 = -117901064;
              *(_WORD *)(v29 + 4) = -1800;
            }
            else
            {
              for ( i = 0LL; i < std::vector<std::string>::size(&row_ptr->data_vec); ++i )
              {
                if ( i )
                  v30 = (const char *)&unk_1A455B00;
                else
                  v30 = byte_1A3FEBE0;
                v31 = std::operator<<<std::char_traits<char>>(v3 + 752, v30);
                v32 = std::vector<std::string>::operator[](&row_ptr->data_vec, i);
                std::operator<<<char>(v31, v32);
              }
            }
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 464, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 464),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadRandomQuestEntranceExcelConfig",
              2320);
            v33 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 464),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v34 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v33, (const char (*)[2])"<");
            v35 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v34, __for_begin);
            v36 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v35,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v37 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v37);
            *(_DWORD *)(v3 + 64) = v37;
            v38 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v36,
                    (const unsigned int *)(v3 + 64));
            v39 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v38,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 528) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 528, 32LL);
            }
            std::ostringstream::str(v3 + 528, v3 + 752);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v39, (const std::string *)(v3 + 528));
            std::string::~string((void *)(v3 + 528));
            *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 752);
            __asan_poison_stack_memory(v3 + 752, 376LL);
            v15 = 0;
          }
          else
          {
            v40 = std::move<data::RandomQuestEntranceExcelConfig &>((data::RandomQuestEntranceExcelConfig *)(v3 + 592));
            std::vector<data::RandomQuestEntranceExcelConfig>::emplace_back<data::RandomQuestEntranceExcelConfig>(
              &this->random_quest_entrance_excel_config_vec,
              v40,
              v41);
            v15 = 1;
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 400, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 400),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadRandomQuestEntranceExcelConfig",
            2295);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 400),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 400));
          *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::RandomQuestEntranceExcelConfig::~RandomQuestEntranceExcelConfig((data::RandomQuestEntranceExcelConfig *const)(v3 + 592));
        v42 = ((v3 + 592) >> 3) + 2147450880;
        *(_DWORD *)v42 = -117901064;
        *(_WORD *)(v42 + 4) = -1800;
        if ( v15 != 1 )
        {
          v43 = 0;
          goto LABEL_76;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v43 = 1;
LABEL_76:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v43 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1200));
    __asan_poison_stack_memory(v3 + 1200, 32880LL);
    if ( !v10 )
      goto LABEL_80;
  }
  v2 = 0;
LABEL_80:
  for ( j = (char *)(v3 + 240); j != (char *)(v3 + 208); std::string::~string(j) )
    j -= 32;
  if ( v54 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90BC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4292) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34336LL, v54);
  }
  return v2;
};

// Line 2330: range 000000000EF7D956-000000000EF7E929
int32_t __cdecl data::QuestExcelConfigMgrBase::loadRandomQuestTemplateExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::RandomQuestTemplateExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::RandomQuestTemplateExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  unsigned __int64 v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85F8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85D8h]
  char v37[34256]; // [rsp+50h] [rbp-85D0h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34208LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 48 1 9 <unknown> 64 4 6 r:2345 80 4 9 <unknown> 96 32 10 paths:2331 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 40 "
                        "9 data:2348 624 376 25 debug_message_stream:2356 1072 32880 13 txt_file:2339";
  *(_QWORD *)(v3 + 16) = data::QuestExcelConfigMgrBase::loadRandomQuestTemplateExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234556924;
  v5[536862724] = -218959118;
  v5[536862726] = -218959118;
  v5[536862728] = -218959118;
  v5[536862730] = -218959118;
  v5[536862732] = -218959118;
  v5[536862734] = -218959118;
  v5[536862736] = -218959118;
  v5[536862738] = -218959360;
  v5[536862739] = 62194;
  v5[536862751] = -218959360;
  v5[536862752] = -218959118;
  v5[536862753] = 62194;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  std::allocator<char>::allocator(v3 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 96),
    "/txt/RqTemplateData.txt",
    (const std::allocator<char> *)(v3 + 48));
  std::allocator<char>::~allocator(v3 + 48);
  *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 96); __for_begin != (std::string *)(v3 + 128); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 160, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 160), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 160);
    std::string::~string((void *)(v3 + 160));
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1072, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1072), v7) )
    {
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 224) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 96 + 95) & 7) >= *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 224, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 224),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadRandomQuestTemplateExcelConfig",
        2342);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 224),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 224));
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 64) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 64, v7);
      for ( *(_DWORD *)(v3 + 64) = 0; ; ++*(_DWORD *)(v3 + 64) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1072));
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
        if ( v12 <= *(_DWORD *)(v3 + 64) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1072), *(_DWORD *)(v3 + 64));
        v13 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_BYTE *)(v13 + 4) = 0;
        data::RandomQuestTemplateExcelConfig::RandomQuestTemplateExcelConfig((data::RandomQuestTemplateExcelConfig *const)(v3 + 544));
        if ( row_ptr )
        {
          if ( data::RandomQuestTemplateExcelConfig::init(
                 (data::RandomQuestTemplateExcelConfig *const)(v3 + 544),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 624, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 624);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 624, &unk_1A472160);
            if ( *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 552);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 552));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 352) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 127) & 7) >= *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 352, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 352),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadRandomQuestTemplateExcelConfig",
              2358);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 352),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 64);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 64) + 1);
            if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 80, v21);
            *(_DWORD *)(v3 + 80) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 80));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 416) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 416, 32LL);
            }
            std::ostringstream::str(v3 + 416, v3 + 624);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 416));
            std::string::~string((void *)(v3 + 416));
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 352));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 624);
            __asan_poison_stack_memory(v3 + 624, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::RandomQuestTemplateExcelConfig &>((data::RandomQuestTemplateExcelConfig *)(v3 + 544));
            v27 = std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::emplace<unsigned int &,data::RandomQuestTemplateExcelConfig>(
                    &this->random_quest_template_excel_config_map,
                    (unsigned int *)(v3 + 552),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 480) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 96 + 95) & 7) >= *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 480, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 480),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadRandomQuestTemplateExcelConfig",
                2363);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 480),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                      v28,
                      (const char (*)[13])byte_1A4721A0);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 552));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 480));
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 288) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 63) & 7) >= *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 288, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 288),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadRandomQuestTemplateExcelConfig",
            2351);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 288),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 64));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 288));
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::RandomQuestTemplateExcelConfig::~RandomQuestTemplateExcelConfig((data::RandomQuestTemplateExcelConfig *const)(v3 + 544));
        v30 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v30 = -117901064;
        *(_BYTE *)(v30 + 4) = -8;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    __asan_poison_stack_memory(v3 + 1072, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 128); i != (char *)(v3 + 96); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862726) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450896 - (((_DWORD)v5 + 2147450904) & 0xFFFFFFF8) + 4260) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34208LL, v37);
  }
  return v2;
};

// Line 2372: range 000000000EF7E92A-000000000EF7F903
int32_t __cdecl data::QuestExcelConfigMgrBase::loadRandomQuestElemPoolExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::RandomQuestElemPoolExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::RandomQuestElemPoolExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  unsigned __int64 v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85F8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85D8h]
  char v37[34256]; // [rsp+50h] [rbp-85D0h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34208LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 48 1 9 <unknown> 64 4 6 r:2387 80 4 9 <unknown> 96 32 10 paths:2373 160 32 9 <unknown> 224 32"
                        " 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 48 "
                        "9 data:2390 624 376 25 debug_message_stream:2398 1072 32880 13 txt_file:2381";
  *(_QWORD *)(v3 + 16) = data::QuestExcelConfigMgrBase::loadRandomQuestElemPoolExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234556924;
  v5[536862724] = -218959118;
  v5[536862726] = -218959118;
  v5[536862728] = -218959118;
  v5[536862730] = -218959118;
  v5[536862732] = -218959118;
  v5[536862734] = -218959118;
  v5[536862736] = -218959118;
  v5[536862738] = -219021312;
  v5[536862739] = 62194;
  v5[536862751] = -218959360;
  v5[536862752] = -218959118;
  v5[536862753] = 62194;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  std::allocator<char>::allocator(v3 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 96),
    "/txt/RqFactorData.txt",
    (const std::allocator<char> *)(v3 + 48));
  std::allocator<char>::~allocator(v3 + 48);
  *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 96); __for_begin != (std::string *)(v3 + 128); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 160) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 191) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 160, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 160), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 160);
    std::string::~string((void *)(v3 + 160));
    *(_DWORD *)(((v3 + 160) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1072, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1072), v7) )
    {
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 224) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 96 + 95) & 7) >= *(_BYTE *)(((v3 + 255) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 224, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 224),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadRandomQuestElemPoolExcelConfig",
        2384);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 224),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 224));
      *(_DWORD *)(((v3 + 224) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 64) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 64, v7);
      for ( *(_DWORD *)(v3 + 64) = 0; ; ++*(_DWORD *)(v3 + 64) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1072));
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
        if ( v12 <= *(_DWORD *)(v3 + 64) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1072), *(_DWORD *)(v3 + 64));
        v13 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_WORD *)(v13 + 4) = 0;
        data::RandomQuestElemPoolExcelConfig::RandomQuestElemPoolExcelConfig((data::RandomQuestElemPoolExcelConfig *const)(v3 + 544));
        if ( row_ptr )
        {
          if ( data::RandomQuestElemPoolExcelConfig::init(
                 (data::RandomQuestElemPoolExcelConfig *const)(v3 + 544),
                 row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 624, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 624);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 624, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 552) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 552);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 552));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 352) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 127) & 7) >= *(_BYTE *)(((v3 + 383) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 352, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 352),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadRandomQuestElemPoolExcelConfig",
              2400);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 352),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 64);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 64) + 1);
            if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 80, v21);
            *(_DWORD *)(v3 + 80) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 80));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 416) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 96 + 31) & 7) >= *(_BYTE *)(((v3 + 447) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 416, 32LL);
            }
            std::ostringstream::str(v3 + 416, v3 + 624);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 416));
            std::string::~string((void *)(v3 + 416));
            *(_DWORD *)(((v3 + 416) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 352));
            *(_DWORD *)(((v3 + 352) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 624);
            __asan_poison_stack_memory(v3 + 624, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::RandomQuestElemPoolExcelConfig &>((data::RandomQuestElemPoolExcelConfig *)(v3 + 544));
            v27 = std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::emplace<unsigned int &,data::RandomQuestElemPoolExcelConfig>(
                    &this->random_quest_elem_pool_excel_config_map,
                    (unsigned int *)(v3 + 552),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 480) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 96 + 95) & 7) >= *(_BYTE *)(((v3 + 511) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 480, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 480),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadRandomQuestElemPoolExcelConfig",
                2405);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 480),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v28, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 552));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 480));
              *(_DWORD *)(((v3 + 480) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 288) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 63) & 7) >= *(_BYTE *)(((v3 + 319) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 288, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 288),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadRandomQuestElemPoolExcelConfig",
            2393);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 288),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 64));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 288));
          *(_DWORD *)(((v3 + 288) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::RandomQuestElemPoolExcelConfig::~RandomQuestElemPoolExcelConfig((data::RandomQuestElemPoolExcelConfig *const)(v3 + 544));
        v30 = ((v3 + 544) >> 3) + 2147450880;
        *(_DWORD *)v30 = -117901064;
        *(_WORD *)(v30 + 4) = -1800;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 64);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1072));
    __asan_poison_stack_memory(v3 + 1072, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 128); i != (char *)(v3 + 96); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862726) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450896 - (((_DWORD)v5 + 2147450904) & 0xFFFFFFF8) + 4260) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34208LL, v37);
  }
  return v2;
};

// Line 2414: range 000000000EF7F904-000000000EF80954
int32_t __cdecl data::QuestExcelConfigMgrBase::loadRandomMainQuestExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::RandomMainQuestExcelConfig *v24; // rax
  unsigned int *v25; // rcx
  data::RandomMainQuestExcelConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  unsigned __int64 v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-8638h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8618h]
  char v37[34320]; // [rsp+50h] [rbp-8610h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34272LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2429 64 4 9 <unknown> 80 32 10 paths:2415 144 32 9 <unknown> 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 120"
                        " 9 data:2432 688 376 25 debug_message_stream:2440 1136 32880 13 txt_file:2423";
  *(_QWORD *)(v3 + 16) = data::QuestExcelConfigMgrBase::loadRandomMainQuestExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862740] = -218959360;
  v5[536862741] = 62194;
  v5[536862753] = -218959360;
  v5[536862754] = -218959118;
  v5[536862755] = 62194;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  v5[536863788] = -202116109;
  v5[536863789] = -202116109;
  v5[536863790] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 80),
    "/txt/RqMainQuestData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 80); __for_begin != (std::string *)(v3 + 112); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 144);
    std::string::~string((void *)(v3 + 144));
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1136, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1136), v7) )
    {
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadRandomMainQuestExcelConfig",
        2426);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 208),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 208));
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1136));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1136), *(_DWORD *)(v3 + 48));
        v13 = ((v3 + 528) >> 3) + 2147450880;
        *(_DWORD *)v13 = 0;
        *(_DWORD *)(v13 + 4) = 0;
        *(_DWORD *)(v13 + 8) = 0;
        *(_WORD *)(v13 + 12) = 0;
        *(_BYTE *)(v13 + 14) = 0;
        data::RandomMainQuestExcelConfig::RandomMainQuestExcelConfig((data::RandomMainQuestExcelConfig *const)(v3 + 528));
        if ( row_ptr )
        {
          if ( data::RandomMainQuestExcelConfig::init((data::RandomMainQuestExcelConfig *const)(v3 + 528), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 688, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 688);
            v16 = std::operator<<<std::char_traits<char>>(v3 + 688, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 536) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 536);
            std::ostream::operator<<(v16, *(unsigned int *)(v3 + 536));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadRandomMainQuestExcelConfig",
              2442);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v21 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v21);
            *(_DWORD *)(v3 + 64) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v3 + 64));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 112 + 31) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            std::ostringstream::str(v3 + 400, v3 + 688);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v3 + 400));
            std::string::~string((void *)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 688);
            __asan_poison_stack_memory(v3 + 688, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::RandomMainQuestExcelConfig &>((data::RandomMainQuestExcelConfig *)(v3 + 528));
            v27 = std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::emplace<unsigned int &,data::RandomMainQuestExcelConfig>(
                    &this->random_main_quest_excel_config_map,
                    (unsigned int *)(v3 + 536),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadRandomMainQuestExcelConfig",
                2447);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v28, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v3 + 536));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 - 32 + 79) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadRandomMainQuestExcelConfig",
            2435);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v15 = 0;
        }
        data::RandomMainQuestExcelConfig::~RandomMainQuestExcelConfig((data::RandomMainQuestExcelConfig *const)(v3 + 528));
        v30 = ((v3 + 528) >> 3) + 2147450880;
        *(_DWORD *)v30 = -117901064;
        *(_DWORD *)(v30 + 4) = -117901064;
        *(_DWORD *)(v30 + 8) = -117901064;
        *(_WORD *)(v30 + 12) = -1800;
        *(_BYTE *)(v30 + 14) = -8;
        if ( v15 != 1 )
        {
          v31 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v31 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1136));
    __asan_poison_stack_memory(v3 + 1136, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 112); i != (char *)(v3 + 80); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90B4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4284) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34272LL, v37);
  }
  return v2;
};

// Line 2456: range 000000000EF80956-000000000EF8196A
int32_t __cdecl data::QuestExcelConfigMgrBase::loadRandomQuestExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  common::milog::MiLogStream *v13; // rax
  int v14; // r14d
  __int64 v15; // rcx
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rdx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rcx
  __int64 v20; // rsi
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // r14
  data::RandomQuestExcelConfig *v23; // rax
  unsigned int *v24; // rcx
  data::RandomQuestExcelConfig *v25; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false,false>,bool> v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  int v29; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-8778h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8758h]
  char v35[34640]; // [rsp+50h] [rbp-8750h] BYREF

  v3 = (unsigned __int64)v35;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34592LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2471 64 4 9 <unknown> 80 32 10 paths:2457 144 32 9 <unknown> 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 376"
                        " 25 debug_message_stream:2482 976 416 9 data:2474 1456 32880 13 txt_file:2465";
  *(_QWORD *)(v3 + 16) = data::QuestExcelConfigMgrBase::loadRandomQuestExcelConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862748] = -218959360;
  v5[536862749] = -218959118;
  v5[536862750] = 62194;
  v5[536862763] = -219021312;
  v5[536862764] = -218959118;
  v5[536862765] = 62194;
  v5[536863793] = -202116109;
  v5[536863794] = -202116109;
  v5[536863795] = -202116109;
  v5[536863796] = -202116109;
  v5[536863797] = -202116109;
  v5[536863798] = -202116109;
  v5[536863799] = -202116109;
  v5[536863800] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 80),
    "/txt/RqQuestData.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 80); __for_begin != (std::string *)(v3 + 112); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 144);
    std::string::~string((void *)(v3 + 144));
    *(_DWORD *)(((v3 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1456, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1456));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1456), v7) )
    {
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadRandomQuestExcelConfig",
        2468);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 208),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 208));
      *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1456));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1456), *(_DWORD *)(v3 + 48));
        __asan_unpoison_stack_memory(v3 + 976, 416LL);
        data::RandomQuestExcelConfig::RandomQuestExcelConfig((data::RandomQuestExcelConfig *const)(v3 + 976));
        if ( row_ptr )
        {
          if ( data::RandomQuestExcelConfig::init((data::RandomQuestExcelConfig *const)(v3 + 976), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 528, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 528);
            v15 = std::operator<<<std::char_traits<char>>(v3 + 528, &unk_1A470BE0);
            if ( *(_BYTE *)(((v3 + 984) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 984) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 984);
            std::ostream::operator<<(v15, *(unsigned int *)(v3 + 984));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadRandomQuestExcelConfig",
              2484);
            v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v17 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v16, (const char (*)[2])"<");
            v18 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, __for_begin);
            v19 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v18,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v20 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v20);
            *(_DWORD *)(v3 + 64) = v20;
            v21 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v19,
                    (const unsigned int *)(v3 + 64));
            v22 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v21,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            std::ostringstream::str(v3 + 400, v3 + 528);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, (const std::string *)(v3 + 400));
            std::string::~string((void *)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
            *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 528);
            __asan_poison_stack_memory(v3 + 528, 376LL);
            v14 = 0;
          }
          else
          {
            v23 = std::move<data::RandomQuestExcelConfig &>((data::RandomQuestExcelConfig *)(v3 + 976));
            v26 = std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::emplace<unsigned int &,data::RandomQuestExcelConfig>(
                    &this->random_quest_excel_config_map,
                    (unsigned int *)(v3 + 984),
                    v23,
                    v24,
                    v25);
            if ( !v26.second )
            {
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 48 + 31) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadRandomQuestExcelConfig",
                2489);
              v27 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v28 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                      v27,
                      (const char (*)[12])byte_1A470C20);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v28,
                (const unsigned int *)(v3 + 984));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 464));
              *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v14 = 0;
            }
            else
            {
              v14 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadRandomQuestExcelConfig",
            2477);
          v13 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
          *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v14 = 0;
        }
        data::RandomQuestExcelConfig::~RandomQuestExcelConfig((data::RandomQuestExcelConfig *const)(v3 + 976));
        __asan_poison_stack_memory(v3 + 976, 416LL);
        if ( v14 != 1 )
        {
          v29 = 0;
          goto LABEL_45;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v29 = 1;
LABEL_45:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v29 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1456));
    __asan_poison_stack_memory(v3 + 1456, 32880LL);
    if ( !v10 )
      goto LABEL_49;
  }
  v2 = 0;
LABEL_49:
  for ( i = (char *)(v3 + 112); i != (char *)(v3 + 80); std::string::~string(i) )
    i -= 32;
  if ( v35 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90DC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4324) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34592LL, v35);
  }
  return v2;
};

// Line 2498: range 000000000EF8196C-000000000EF82B35
int32_t __cdecl data::QuestExcelConfigMgrBase::loadQuestGlobalVarConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v6; // rsi
  common::milog::MiLogStream *v7; // rdx
  common::milog::MiLogStream *v8; // rax
  _BOOL4 v9; // r14d
  int v10; // eax
  uint32_t v11; // ecx
  __int64 v12; // rsi
  __int64 *v13; // rdx
  common::milog::MiLogStream *v14; // rax
  int v15; // r14d
  __int64 v16; // rcx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 v21; // rsi
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  data::QuestGlobalVarConfig *v24; // rax
  unsigned int *v25; // rcx
  data::QuestGlobalVarConfig *v26; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false,false>,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  int v30; // edx
  char *i; // r14
  int32_t v33; // [rsp+1Ch] [rbp-8614h]
  std::string *__for_begin; // [rsp+38h] [rbp-85F8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+58h] [rbp-85D8h]
  char v37[34256]; // [rsp+60h] [rbp-85D0h] BYREF

  v2 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_10(34208LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "14 48 1 9 <unknown> 64 1 9 <unknown> 80 4 6 r:2514 96 4 9 <unknown> 112 16 9 data:2517 144 32 9 "
                        "<unknown> 208 32 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <"
                        "unknown> 528 64 10 paths:2499 624 376 25 debug_message_stream:2525 1072 32880 13 txt_file:2508";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::loadQuestGlobalVarConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234556927;
  v4[536862723] = 61956;
  v4[536862724] = 62194;
  v4[536862725] = -219021312;
  v4[536862726] = 62194;
  v4[536862727] = -219021312;
  v4[536862728] = 62194;
  v4[536862729] = -219021312;
  v4[536862730] = 62194;
  v4[536862731] = -219021312;
  v4[536862732] = 62194;
  v4[536862733] = -219021312;
  v4[536862734] = 62194;
  v4[536862735] = -219021312;
  v4[536862736] = 62194;
  v4[536862738] = -219021312;
  v4[536862739] = 62194;
  v4[536862751] = -218959360;
  v4[536862752] = -218959118;
  v4[536862753] = 62194;
  v4[536863781] = -202116109;
  v4[536863782] = -202116109;
  v4[536863783] = -202116109;
  v4[536863784] = -202116109;
  v4[536863785] = -202116109;
  v4[536863786] = -202116109;
  v4[536863787] = -202116109;
  v4[536863788] = -202116109;
  std::allocator<char>::allocator(v2 + 48);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 528),
    "/txt/QuestGlobalVar.txt",
    (const std::allocator<char> *)(v2 + 48));
  std::allocator<char>::~allocator(v2 + 48);
  *(_BYTE *)(((v2 + 48) >> 3) + 0x7FFF8000) = -8;
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = 1;
  std::allocator<char>::allocator(v2 + 64);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v2 + 560),
    "/txt/QuestGlobalVar_Exported.txt",
    (const std::allocator<char> *)(v2 + 64));
  std::allocator<char>::~allocator(v2 + 64);
  *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v2 + 528); __for_begin != (std::string *)(v2 + 592); ++__for_begin )
  {
    *(_DWORD *)(((v2 + 144) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v2 + 144) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v2 + 175) >> 3) + 0x7FFF8000) != 0
      && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 175) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v2 + 144, 32LL);
    }
    std::operator+<char>((std::string *)(v2 + 144), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v2 + 144);
    std::string::~string((void *)(v2 + 144));
    *(_DWORD *)(((v2 + 144) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v2 + 1072, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v2 + 1072));
    v6 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v2 + 1072), v6) )
    {
      *(_DWORD *)(((v2 + 208) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v2 + 208) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v2 + 239) >> 3) + 0x7FFF8000) != 0
        && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 239) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v2 + 208, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 208),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadQuestGlobalVarConfig",
        2511);
      v7 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v2 + 208),
             (const char (*)[8])byte_1A454D80);
      v8 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v8, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 208));
      *(_DWORD *)(((v2 + 208) >> 3) + 0x7FFF8000) = -117901064;
      v33 = -1;
      v9 = 0;
    }
    else
    {
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = 4;
      v10 = *(unsigned __int8 *)(((v2 + 80) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v10 != 0 && (char)v10 <= 3 )
        __asan_report_store4(v2 + 80, v6);
      for ( *(_DWORD *)(v2 + 80) = 0; ; ++*(_DWORD *)(v2 + 80) )
      {
        v11 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v2 + 1072));
        if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 80);
        if ( v11 <= *(_DWORD *)(v2 + 80) )
          break;
        v12 = *(unsigned int *)(v2 + 80);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v2 + 1072), v12);
        *(_WORD *)(((v2 + 112) >> 3) + 0x7FFF8000) = 0;
        v13 = &`vtable for'data::QuestGlobalVarConfig + 2;
        if ( *(_BYTE *)(((v2 + 112) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v2 + 112, v12);
        *(_QWORD *)(v2 + 112) = v13;
        if ( *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v2 + 120, v12);
        *(_DWORD *)(v2 + 120) = 0;
        if ( *(_BYTE *)(((v2 + 124) >> 3) + 0x7FFF8000) != 0
          && (char)(((v2 + 124) & 7) + 3) >= *(_BYTE *)(((v2 + 124) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v2 + 124, (((_BYTE)v2 + 124) & 7u) + 3);
        }
        *(_DWORD *)(v2 + 124) = 0;
        if ( row_ptr )
        {
          if ( data::QuestGlobalVarConfig::init((data::QuestGlobalVarConfig *const)(v2 + 112), row_ptr) )
          {
            __asan_unpoison_stack_memory(v2 + 624, 376LL);
            std::ostringstream::basic_ostringstream(v2 + 624);
            v16 = std::operator<<<std::char_traits<char>>(v2 + 624, &unk_1A455D00);
            if ( *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 120) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 120);
            std::ostream::operator<<(v16, *(unsigned int *)(v2 + 120));
            *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 336) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 + 111) & 7) >= *(_BYTE *)(((v2 + 367) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 336, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 336),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadQuestGlobalVarConfig",
              2527);
            v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v2 + 336),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v18 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v17, (const char (*)[2])"<");
            v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, __for_begin);
            v20 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v19,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v2 + 80);
            v21 = (unsigned int)(*(_DWORD *)(v2 + 80) + 1);
            if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v2 + 96, v21);
            *(_DWORD *)(v2 + 96) = v21;
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)(v2 + 96));
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v2 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v2 - 112 + 31) & 7) >= *(_BYTE *)(((v2 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v2 + 400, 32LL);
            }
            std::ostringstream::str(v2 + 400, v2 + 624);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, (const std::string *)(v2 + 400));
            std::string::~string((void *)(v2 + 400));
            *(_DWORD *)(((v2 + 400) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 336));
            *(_DWORD *)(((v2 + 336) >> 3) + 0x7FFF8000) = -117901064;
            v33 = -1;
            std::ostringstream::~ostringstream(v2 + 624);
            __asan_poison_stack_memory(v2 + 624, 376LL);
            v15 = 0;
          }
          else
          {
            v24 = std::move<data::QuestGlobalVarConfig &>((data::QuestGlobalVarConfig *)(v2 + 112));
            v27 = std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::emplace<unsigned int &,data::QuestGlobalVarConfig>(
                    &this->quest_global_var_config_map,
                    (unsigned int *)(v2 + 120),
                    v24,
                    v25,
                    v26);
            if ( !v27.second )
            {
              *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v2 + 464) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) != 0
                && (char)((v2 - 96 + 79) & 7) >= *(_BYTE *)(((v2 + 495) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v2 + 464, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v2 + 464),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadQuestGlobalVarConfig",
                2532);
              v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v2 + 464),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v29 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v28, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v29,
                (const unsigned int *)(v2 + 120));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 464));
              *(_DWORD *)(((v2 + 464) >> 3) + 0x7FFF8000) = -117901064;
              v33 = -1;
              v15 = 0;
            }
            else
            {
              v15 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v2 + 272) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v2 + 272) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v2 + 303) >> 3) + 0x7FFF8000) != 0
            && (char)((v2 + 47) & 7) >= *(_BYTE *)(((v2 + 303) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v2 + 272, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v2 + 272),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadQuestGlobalVarConfig",
            2520);
          v14 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v2 + 272),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v2 + 80));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 272));
          *(_DWORD *)(((v2 + 272) >> 3) + 0x7FFF8000) = -117901064;
          v33 = -1;
          v15 = 0;
        }
        data::QuestGlobalVarConfig::~QuestGlobalVarConfig((data::QuestGlobalVarConfig *const)(v2 + 112));
        *(_WORD *)(((v2 + 112) >> 3) + 0x7FFF8000) = -1800;
        if ( v15 != 1 )
        {
          v30 = 0;
          goto LABEL_51;
        }
        if ( *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v2 + 80);
      }
      v30 = 1;
LABEL_51:
      *(_BYTE *)(((v2 + 80) >> 3) + 0x7FFF8000) = -8;
      v9 = v30 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v2 + 1072));
    __asan_poison_stack_memory(v2 + 1072, 32880LL);
    if ( !v9 )
      goto LABEL_55;
  }
  v33 = 0;
LABEL_55:
  for ( i = (char *)(v2 + 592); i != (char *)(v2 + 528); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8038) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8040) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8048) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF90AC) = 0LL;
    memset(
      (void *)((unsigned __int64)(v4 + 536862740) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v4 + 2147450952 - (((_DWORD)v4 + 2147450960) & 0xFFFFFFF8) + 4204) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    __asan_stack_free_10(v2, 34208LL, v37);
  }
  return v33;
};

// Line 2541: range 000000000EF82B36-000000000EF83B91
int32_t __cdecl data::QuestExcelConfigMgrBase::loadQuestPlaceConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  __int64 v13; // rsi
  __int64 *v14; // rdx
  common::milog::MiLogStream *v15; // rax
  int v16; // r14d
  __int64 v17; // rcx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rdx
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rcx
  __int64 v22; // rsi
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // r14
  data::QuestPlaceConfig *v25; // rax
  unsigned int *v26; // rcx
  data::QuestPlaceConfig *v27; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestPlaceConfig>,false,false>,bool> v28; // rax
  common::milog::MiLogStream *v29; // rax
  common::milog::MiLogStream *v30; // rax
  int v31; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85B8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-8598h]
  char v37[34192]; // [rsp+50h] [rbp-8590h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34144LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2556 64 4 9 <unknown> 80 16 9 data:2559 112 32 10 paths:2542 176 32"
                        " 9 <unknown> 240 32 9 <unknown> 304 32 9 <unknown> 368 32 9 <unknown> 432 32 9 <unknown> 496 32 "
                        "9 <unknown> 560 376 25 debug_message_stream:2567 1008 32880 13 txt_file:2550";
  *(_QWORD *)(v3 + 16) = data::QuestExcelConfigMgrBase::loadQuestPlaceConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = 62194;
  v5[536862724] = -219021312;
  v5[536862725] = 62194;
  v5[536862726] = -219021312;
  v5[536862727] = 62194;
  v5[536862728] = -219021312;
  v5[536862729] = 62194;
  v5[536862730] = -219021312;
  v5[536862731] = 62194;
  v5[536862732] = -219021312;
  v5[536862733] = 62194;
  v5[536862734] = -219021312;
  v5[536862735] = 62194;
  v5[536862736] = -219021312;
  v5[536862737] = 62194;
  v5[536862749] = -218959360;
  v5[536862750] = -218959118;
  v5[536862751] = 62194;
  v5[536863779] = -202116109;
  v5[536863780] = -202116109;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 112),
    "/txt/QuestSceneRegister.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 112); __for_begin != (std::string *)(v3 + 144); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 176) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 176) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 207) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 49) & 7) >= *(_BYTE *)(((v3 + 207) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 176, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 176), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 176);
    std::string::~string((void *)(v3 + 176));
    *(_DWORD *)(((v3 + 176) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1008, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1008));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1008), v7) )
    {
      *(_DWORD *)(((v3 + 240) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 240) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 271) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 - 16 + 31) & 7) >= *(_BYTE *)(((v3 + 271) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 240, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 240),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadQuestPlaceConfig",
        2553);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 240),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 240));
      *(_DWORD *)(((v3 + 240) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1008));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        v13 = *(unsigned int *)(v3 + 48);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1008), v13);
        *(_WORD *)(((v3 + 80) >> 3) + 0x7FFF8000) = 0;
        v14 = &`vtable for'data::QuestPlaceConfig + 2;
        if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 80, v13);
        *(_QWORD *)(v3 + 80) = v14;
        if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 88, v13);
        *(_DWORD *)(v3 + 88) = 0;
        if ( row_ptr )
        {
          if ( data::QuestPlaceConfig::init((data::QuestPlaceConfig *const)(v3 + 80), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 560, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 560);
            v17 = std::operator<<<std::char_traits<char>>(v3 + 560, &unk_1A472A80);
            if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 88);
            std::ostream::operator<<(v17, *(unsigned int *)(v3 + 88));
            *(_DWORD *)(((v3 + 368) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 368) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 399) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 113) & 7) >= *(_BYTE *)(((v3 + 399) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 368, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 368),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadQuestPlaceConfig",
              2569);
            v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 368),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v19 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v18, (const char (*)[2])"<");
            v20 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v19, __for_begin);
            v21 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v20,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v22 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v22);
            *(_DWORD *)(v3 + 64) = v22;
            v23 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v21,
                    (const unsigned int *)(v3 + 64));
            v24 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v23,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 432) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 432) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 463) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 49) & 7) >= *(_BYTE *)(((v3 + 463) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 432, 32LL);
            }
            std::ostringstream::str(v3 + 432, v3 + 560);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v24, (const std::string *)(v3 + 432));
            std::string::~string((void *)(v3 + 432));
            *(_DWORD *)(((v3 + 432) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 368));
            *(_DWORD *)(((v3 + 368) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 560);
            __asan_poison_stack_memory(v3 + 560, 376LL);
            v16 = 0;
          }
          else
          {
            v25 = std::move<data::QuestPlaceConfig &>((data::QuestPlaceConfig *)(v3 + 80));
            v28 = std::unordered_map<unsigned int,data::QuestPlaceConfig>::emplace<unsigned int &,data::QuestPlaceConfig>(
                    &this->quest_place_config_map,
                    (unsigned int *)(v3 + 88),
                    v25,
                    v26,
                    v27);
            if ( !v28.second )
            {
              *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 496) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 527) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 - 16 + 31) & 7) >= *(_BYTE *)(((v3 + 527) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 496, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 496),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadQuestPlaceConfig",
                2574);
              v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 496),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v30 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                      v29,
                      (const char (*)[14])byte_1A472AC0);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v30,
                (const unsigned int *)(v3 + 88));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 496));
              *(_DWORD *)(((v3 + 496) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v16 = 0;
            }
            else
            {
              v16 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 304) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 304) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 335) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 79) & 7) >= *(_BYTE *)(((v3 + 335) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 304, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 304),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadQuestPlaceConfig",
            2562);
          v15 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 304),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 304));
          *(_DWORD *)(((v3 + 304) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v16 = 0;
        }
        data::QuestPlaceConfig::~QuestPlaceConfig((data::QuestPlaceConfig *const)(v3 + 80));
        *(_WORD *)(((v3 + 80) >> 3) + 0x7FFF8000) = -1800;
        if ( v16 != 1 )
        {
          v31 = 0;
          goto LABEL_49;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v31 = 1;
LABEL_49:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v31 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1008));
    __asan_poison_stack_memory(v3 + 1008, 32880LL);
    if ( !v10 )
      goto LABEL_53;
  }
  v2 = 0;
LABEL_53:
  for ( i = (char *)(v3 + 144); i != (char *)(v3 + 112); std::string::~string(i) )
    i -= 32;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90A4) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4268) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34144LL, v37);
  }
  return v2;
};

// Line 2583: range 000000000EF83B92-000000000EF84CD5
int32_t __cdecl data::QuestExcelConfigMgrBase::loadQuestSpecialShowConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::string *p_real_data_base_dir; // rsi
  const char *v7; // rsi
  common::milog::MiLogStream *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  _BOOL4 v10; // r14d
  int v11; // eax
  uint32_t v12; // ecx
  __int64 v13; // rsi
  unsigned __int64 v14; // rax
  __int64 *v15; // rdx
  __int64 v16; // rsi
  common::milog::MiLogStream *v17; // rax
  int v18; // r14d
  __int64 v19; // rcx
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rdx
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rcx
  __int64 v24; // rsi
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // r14
  data::QuestSpecialShowConfig *v27; // rax
  unsigned int *v28; // rcx
  data::QuestSpecialShowConfig *v29; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false,false>,bool> v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  unsigned __int64 v33; // rax
  int v34; // edx
  char *i; // r14
  std::string *__for_begin; // [rsp+28h] [rbp-85D8h]
  const common::tools::TxtFile::Row *row_ptr; // [rsp+48h] [rbp-85B8h]
  char v40[34224]; // [rsp+50h] [rbp-85B0h] BYREF

  v3 = (unsigned __int64)v40;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_10(34176LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "13 32 1 9 <unknown> 48 4 6 r:2598 64 4 9 <unknown> 80 24 9 data:2601 144 32 10 paths:2584 208 32"
                        " 9 <unknown> 272 32 9 <unknown> 336 32 9 <unknown> 400 32 9 <unknown> 464 32 9 <unknown> 528 32 "
                        "9 <unknown> 592 376 25 debug_message_stream:2609 1040 32880 13 txt_file:2592";
  *(_QWORD *)(v3 + 16) = data::QuestExcelConfigMgrBase::loadQuestSpecialShowConfig;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = 61956;
  v5[536862723] = -218959360;
  v5[536862724] = 62194;
  v5[536862725] = -219021312;
  v5[536862726] = 62194;
  v5[536862727] = -219021312;
  v5[536862728] = 62194;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862731] = -219021312;
  v5[536862732] = 62194;
  v5[536862733] = -219021312;
  v5[536862734] = 62194;
  v5[536862735] = -219021312;
  v5[536862736] = 62194;
  v5[536862737] = -219021312;
  v5[536862738] = 62194;
  v5[536862750] = -218959360;
  v5[536862751] = -218959118;
  v5[536862752] = 62194;
  v5[536863780] = -202116109;
  v5[536863781] = -202116109;
  v5[536863782] = -202116109;
  v5[536863783] = -202116109;
  v5[536863784] = -202116109;
  v5[536863785] = -202116109;
  v5[536863786] = -202116109;
  v5[536863787] = -202116109;
  std::allocator<char>::allocator(v3 + 32);
  std::string::basic_string<std::allocator<char>>(
    (std::string *const)(v3 + 144),
    "/txt/QuestSpecialShow.txt",
    (const std::allocator<char> *)(v3 + 32));
  std::allocator<char>::~allocator(v3 + 32);
  *(_BYTE *)(((v3 + 32) >> 3) + 0x7FFF8000) = -8;
  for ( __for_begin = (std::string *)(v3 + 144); __for_begin != (std::string *)(v3 + 176); ++__for_begin )
  {
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = 0;
    p_real_data_base_dir = &config->real_data_base_dir;
    if ( *(char *)(((v3 + 208) >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) != 0
      && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 239) >> 3) + 0x7FFF8000) )
    {
      p_real_data_base_dir = (std::string *)32;
      __asan_report_store_n(v3 + 208, 32LL);
    }
    std::operator+<char>((std::string *)(v3 + 208), p_real_data_base_dir, __for_begin);
    std::string::operator=(__for_begin, v3 + 208);
    std::string::~string((void *)(v3 + 208));
    *(_DWORD *)(((v3 + 208) >> 3) + 0x7FFF8000) = -117901064;
    __asan_unpoison_stack_memory(v3 + 1040, 32880LL);
    common::tools::TxtFile::TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    v7 = (const char *)std::string::c_str(__for_begin);
    if ( common::tools::TxtFile::load((common::tools::TxtFile *const)(v3 + 1040), v7) )
    {
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = 0;
      if ( *(char *)(((v3 + 272) >> 3) + 0x7FFF8000) < 0
        || *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) != 0
        && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 303) >> 3) + 0x7FFF8000) )
      {
        __asan_report_store_n(v3 + 272, 32LL);
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 272),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
        "loadQuestSpecialShowConfig",
        2595);
      v8 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
             (common::milog::MiLogStream *const)(v3 + 272),
             (const char (*)[8])byte_1A454D80);
      v9 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v8, __for_begin);
      common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v9, (const char (*)[8])byte_1A454DC0);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 272));
      *(_DWORD *)(((v3 + 272) >> 3) + 0x7FFF8000) = -117901064;
      v2 = -1;
      v10 = 0;
    }
    else
    {
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = 4;
      v11 = *(unsigned __int8 *)(((v3 + 48) >> 3) + 0x7FFF8000);
      if ( (_BYTE)v11 != 0 && (char)v11 <= 3 )
        __asan_report_store4(v3 + 48, v7);
      for ( *(_DWORD *)(v3 + 48) = 0; ; ++*(_DWORD *)(v3 + 48) )
      {
        v12 = common::tools::TxtFile::rowNum((common::tools::TxtFile *const)(v3 + 1040));
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
        if ( v12 <= *(_DWORD *)(v3 + 48) )
          break;
        v13 = *(unsigned int *)(v3 + 48);
        row_ptr = common::tools::TxtFile::row((common::tools::TxtFile *const)(v3 + 1040), v13);
        v14 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v14 = 0;
        *(_BYTE *)(v14 + 2) = 0;
        v15 = &`vtable for'data::QuestSpecialShowConfig + 2;
        if ( *(_BYTE *)(((v3 + 80) >> 3) + 0x7FFF8000) )
          __asan_report_store8(v3 + 80, v13);
        *(_QWORD *)(v3 + 80) = v15;
        if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 88, v13);
        *(_DWORD *)(v3 + 88) = 0;
        v16 = (((_BYTE)v3 + 92) & 7u) + 3;
        if ( *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 + 92) & 7) + 3) >= *(_BYTE *)(((v3 + 92) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 92, v16);
        }
        *(_DWORD *)(v3 + 92) = 0;
        if ( *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 96) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_store4(v3 + 96, v16);
        *(_DWORD *)(v3 + 96) = 0;
        if ( *(_BYTE *)(((v3 + 100) >> 3) + 0x7FFF8000) != 0
          && (char)(((v3 + 100) & 7) + 3) >= *(_BYTE *)(((v3 + 100) >> 3) + 0x7FFF8000) )
        {
          __asan_report_store4(v3 + 100, (((_BYTE)v3 + 100) & 7u) + 3);
        }
        *(_DWORD *)(v3 + 100) = 0;
        if ( row_ptr )
        {
          if ( data::QuestSpecialShowConfig::init((data::QuestSpecialShowConfig *const)(v3 + 80), row_ptr) )
          {
            __asan_unpoison_stack_memory(v3 + 592, 376LL);
            std::ostringstream::basic_ostringstream(v3 + 592);
            v19 = std::operator<<<std::char_traits<char>>(v3 + 592, &unk_1A455D00);
            if ( *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 88) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 88);
            std::ostream::operator<<(v19, *(unsigned int *)(v3 + 88));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 400) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 81) & 7) >= *(_BYTE *)(((v3 + 431) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 400, 32LL);
            }
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v3 + 400),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
              "loadQuestSpecialShowConfig",
              2611);
            v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    (common::milog::MiLogStream *const)(v3 + 400),
                    (const char (*)[16])"[CONFIG_ERROR] ");
            v21 = common::milog::MiLogStream::operator<<<char [2],(char *[2])0>(v20, (const char (*)[2])"<");
            v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, __for_begin);
            v23 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(
                    v22,
                    (const char (*)[11])byte_1A454EC0);
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = 4;
            if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_load4(v3 + 48);
            v24 = (unsigned int)(*(_DWORD *)(v3 + 48) + 1);
            if ( *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) <= 3 )
              __asan_report_store4(v3 + 64, v24);
            *(_DWORD *)(v3 + 64) = v24;
            v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v23,
                    (const unsigned int *)(v3 + 64));
            v26 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v25,
                    (const char (*)[13])byte_1A454F00);
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = 0;
            if ( *(char *)(((v3 + 464) >> 3) + 0x7FFF8000) < 0
              || *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) != 0
              && (char)((v3 - 17) & 7) >= *(_BYTE *)(((v3 + 495) >> 3) + 0x7FFF8000) )
            {
              __asan_report_store_n(v3 + 464, 32LL);
            }
            std::ostringstream::str(v3 + 464, v3 + 592);
            common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v26, (const std::string *)(v3 + 464));
            std::string::~string((void *)(v3 + 464));
            *(_DWORD *)(((v3 + 464) >> 3) + 0x7FFF8000) = -117901064;
            *(_BYTE *)(((v3 + 64) >> 3) + 0x7FFF8000) = -8;
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 400));
            *(_DWORD *)(((v3 + 400) >> 3) + 0x7FFF8000) = -117901064;
            v2 = -1;
            std::ostringstream::~ostringstream(v3 + 592);
            __asan_poison_stack_memory(v3 + 592, 376LL);
            v18 = 0;
          }
          else
          {
            v27 = std::move<data::QuestSpecialShowConfig &>((data::QuestSpecialShowConfig *)(v3 + 80));
            v30 = std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::emplace<unsigned int &,data::QuestSpecialShowConfig>(
                    &this->quest_special_show_config_map,
                    (unsigned int *)(v3 + 88),
                    v27,
                    v28,
                    v29);
            if ( !v30.second )
            {
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = 0;
              if ( *(char *)(((v3 + 528) >> 3) + 0x7FFF8000) < 0
                || *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) != 0
                && (char)((v3 + 47) & 7) >= *(_BYTE *)(((v3 + 559) >> 3) + 0x7FFF8000) )
              {
                __asan_report_store_n(v3 + 528, 32LL);
              }
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)(v3 + 528),
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
                "loadQuestSpecialShowConfig",
                2616);
              v31 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                      (common::milog::MiLogStream *const)(v3 + 528),
                      (const char (*)[16])"[CONFIG_ERROR] ");
              v32 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v31, (const char (*)[9])byte_1A455D40);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v32,
                (const unsigned int *)(v3 + 88));
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 528));
              *(_DWORD *)(((v3 + 528) >> 3) + 0x7FFF8000) = -117901064;
              v2 = -1;
              v18 = 0;
            }
            else
            {
              v18 = 1;
            }
          }
        }
        else
        {
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = 0;
          if ( *(char *)(((v3 + 336) >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) != 0
            && (char)((v3 + 111) & 7) >= *(_BYTE *)(((v3 + 367) >> 3) + 0x7FFF8000) )
          {
            __asan_report_store_n(v3 + 336, 32LL);
          }
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 336),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
            "loadQuestSpecialShowConfig",
            2604);
          v17 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  (common::milog::MiLogStream *const)(v3 + 336),
                  (const char (*)[22])"row_ptr is null, row:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v3 + 48));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 336));
          *(_DWORD *)(((v3 + 336) >> 3) + 0x7FFF8000) = -117901064;
          v2 = -1;
          v18 = 0;
        }
        data::QuestSpecialShowConfig::~QuestSpecialShowConfig((data::QuestSpecialShowConfig *const)(v3 + 80));
        v33 = ((v3 + 80) >> 3) + 2147450880;
        *(_WORD *)v33 = -1800;
        *(_BYTE *)(v33 + 2) = -8;
        if ( v18 != 1 )
        {
          v34 = 0;
          goto LABEL_55;
        }
        if ( *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) <= 3 )
          __asan_report_load4(v3 + 48);
      }
      v34 = 1;
LABEL_55:
      *(_BYTE *)(((v3 + 48) >> 3) + 0x7FFF8000) = -8;
      v10 = v34 == 1;
    }
    common::tools::TxtFile::~TxtFile((common::tools::TxtFile *const)(v3 + 1040));
    __asan_poison_stack_memory(v3 + 1040, 32880LL);
    if ( !v10 )
      goto LABEL_59;
  }
  v2 = 0;
LABEL_59:
  for ( i = (char *)(v3 + 176); i != (char *)(v3 + 144); std::string::~string(i) )
    i -= 32;
  if ( v40 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF90A8) = 0LL;
    memset(
      (void *)((unsigned __int64)(v5 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v5 + 2147450880 - (((_DWORD)v5 + 2147450888) & 0xFFFFFFF8) + 4272) & 0xFFFFFFF8) >> 3));
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    __asan_stack_free_10(v3, 34176LL, v40);
  }
  return v2;
};

// Line 2625: range 000000000EF84CD6-000000000EF86021
int32_t __cdecl data::QuestExcelConfigMgrBase::loadConfig(
        data::QuestExcelConfigMgrBase *const this,
        HK4EDesignConfig *config)
{
  common::milog::MiLogStream *v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  int32_t result; // eax
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  char v21[1024]; // [rsp+10h] [rbp-400h] BYREF

  v2 = (common::milog::MiLogStream *)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_4(992LL);
    if ( v3 )
      v2 = (common::milog::MiLogStream *)v3;
  }
  v2->log_ = (common::milog::MiLog *)1102416563;
  v2->ostr_ptr_._M_ptr = (std::__shared_ptr<common::tools::StringStream<common::tools::FixedBuffer<16384> >,(__gnu_cxx::_Lock_policy)2>::element_type *)"15 32 32 9 <unknown> 96 32 9 <unknown> 160 32 9 <unknown> 224 32 9 <unknown> 288 32 9 <unknown> 352 32 9 <unknown> 416 32 9 <unknown> 480 32 9 <unknown> 544 32 9 <unknown> 608 32 9 <unknown> 672 32 9 <unknown> 736 32 9 <unknown> 800 32 9 <unknown> 864 32 9 <unknown> 928 32 9 <unknown>";
  v2->ostr_ptr_._M_refcount._M_pi = (std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2> *)data::QuestExcelConfigMgrBase::loadConfig;
  v4 = (_DWORD *)((unsigned __int64)v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862722] = -218959118;
  v4[536862724] = -218959118;
  v4[536862726] = -218959118;
  v4[536862728] = -218959118;
  v4[536862730] = -218959118;
  v4[536862732] = -218959118;
  v4[536862734] = -218959118;
  v4[536862736] = -218959118;
  v4[536862738] = -218959118;
  v4[536862740] = -218959118;
  v4[536862742] = -218959118;
  v4[536862744] = -218959118;
  v4[536862746] = -218959118;
  v4[536862748] = -218959118;
  v4[536862750] = -202116109;
  if ( data::QuestExcelConfigMgrBase::loadChapterExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[1] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[1].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[1].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[1], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 1,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2628);
    v5 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 1, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
      v5,
      (const char (*)[30])"loadChapterExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 1);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadMainQuestExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[3] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[3].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[3].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[3], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 3,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2633);
    v7 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 3, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
      v7,
      (const char (*)[32])"loadMainQuestExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 3);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadQuestExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[5] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[5].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[5].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[5], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 5,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2638);
    v8 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 5, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
      v8,
      (const char (*)[28])"loadQuestExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 5);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadTalkExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[7] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[7].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[7].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[7], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 7,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2643);
    v9 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 7, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
      v9,
      (const char (*)[27])"loadTalkExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 7);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadRqTalkExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[9] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[9].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[9].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[9], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 9,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2648);
    v10 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v2 + 9, (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      v10,
      (const char (*)[29])"loadRqTalkExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 9);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadQuestResCollectionExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[11] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[11].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[11].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[11], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 11,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2653);
    v11 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 11,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
      v11,
      (const char (*)[41])"loadQuestResCollectionExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 11);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadDialogExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[13] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[13].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[13].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[13], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 13,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2658);
    v12 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 13,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      v12,
      (const char (*)[29])"loadDialogExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 13);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadRandomQuestEntranceExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[15] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[15].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[15].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[15], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 15,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2663);
    v13 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 15,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
      v13,
      (const char (*)[42])"loadRandomQuestEntranceExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 15);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadRandomQuestTemplateExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[17] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[17].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[17].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[17], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 17,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2668);
    v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 17,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
      v14,
      (const char (*)[42])"loadRandomQuestTemplateExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 17);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadRandomQuestElemPoolExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[19] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[19].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[19].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[19], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 19,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2673);
    v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 19,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
      v15,
      (const char (*)[42])"loadRandomQuestElemPoolExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 19);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadRandomMainQuestExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[21] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[21].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[21].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[21], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 21,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2678);
    v16 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 21,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      v16,
      (const char (*)[38])"loadRandomMainQuestExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 21);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadRandomQuestExcelConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[23] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[23].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[23].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[23], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 23,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2683);
    v17 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 23,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      v17,
      (const char (*)[34])"loadRandomQuestExcelConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 23);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadQuestGlobalVarConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[25] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[25].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 32 + 95) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[25].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[25], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 25,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2688);
    v18 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 25,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
      v18,
      (const char (*)[32])"loadQuestGlobalVarConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 25);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadQuestPlaceConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[27] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[27].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 + 127) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[27].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[27], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 27,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2693);
    v19 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 27,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
      v19,
      (const char (*)[28])"loadQuestPlaceConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 27);
    result = -1;
  }
  else if ( data::QuestExcelConfigMgrBase::loadQuestSpecialShowConfig(this, config) )
  {
    if ( *(char *)(((unsigned __int64)&v2[29] >> 3) + 0x7FFF8000) < 0
      || *(_BYTE *)((((unsigned __int64)&v2[29].ostr_ + 7) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)v2 - 96 + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&v2[29].ostr_ + 7) >> 3) + 0x7FFF8000) )
    {
      __asan_report_store_n(&v2[29], 32LL);
    }
    common::milog::MiLogStream::create(
      v2 + 29,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/txt_data_auto/QuestExcelConfig.gen.cpp",
      "loadConfig",
      2698);
    v20 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
            v2 + 29,
            (const char (*)[16])"[CONFIG_ERROR] ");
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      v20,
      (const char (*)[34])"loadQuestSpecialShowConfig failed");
    common::milog::MiLogStream::~MiLogStream(v2 + 29);
    result = -1;
  }
  else
  {
    result = 0;
  }
  if ( v21 == (char *)v2 )
  {
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8010) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8018) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8028) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8030) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8038) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8040) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8048) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8050) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8058) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8060) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8068) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8070) = 0;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8078) = 0;
  }
  else
  {
    v2->log_ = (common::milog::MiLog *)1172321806;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8068) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8070) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8078) = -168430091;
  }
  return result;
};

// Line 2705: range 000000000EF86022-000000000EF86034
int32_t __cdecl data::QuestExcelConfigMgrBase::rewriteConfig(
        data::QuestExcelConfigMgrBase *const this,
        TxtConfigMgr *txt_config_mgr)
{
  return 0;
};

// Line 2710: range 000000000EF86036-000000000EF86048
int32_t __cdecl data::QuestExcelConfigMgrBase::finalConfig(
        data::QuestExcelConfigMgrBase *const this,
        TxtConfigMgr *txt_config_mgr)
{
  return 0;
};

// Line 2715: range 000000000EF8604A-000000000EF86205
data::ChapterExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findChapterExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::ChapterExcelConfigMap *p_chapter_excel_config_map; // rdx
  data::ChapterExcelConfigMap *v6; // rdx
  bool v7; // al
  data::ChapterExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2714 64 8 9 iter:2716 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findChapterExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_chapter_excel_config_map = &this->chapter_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::ChapterExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::ChapterExcelConfig>::find(
                                                                                        p_chapter_excel_config_map,
                                                                                        (const std::unordered_map<unsigned int,data::ChapterExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->chapter_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::ChapterExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::ChapterExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::ChapterExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ChapterExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ChapterExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::ChapterExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::ChapterExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2728: range 000000000EF86206-000000000EF863C1
const data::ChapterExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findChapterExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::ChapterExcelConfigMap *p_chapter_excel_config_map; // rdx
  data::ChapterExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::ChapterExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2727 64 8 9 iter:2729 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findChapterExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_chapter_excel_config_map = &this->chapter_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::ChapterExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::ChapterExcelConfig>::find(
                                                                                              p_chapter_excel_config_map,
                                                                                              (const std::unordered_map<unsigned int,data::ChapterExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->chapter_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::ChapterExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::ChapterExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::ChapterExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ChapterExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ChapterExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ChapterExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ChapterExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2741: range 000000000EF863C2-000000000EF8657D
data::MainQuestExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findMainQuestExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::MainQuestExcelConfigMap *p_main_quest_excel_config_map; // rdx
  data::MainQuestExcelConfigMap *v6; // rdx
  bool v7; // al
  data::MainQuestExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2740 64 8 9 iter:2742 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findMainQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_main_quest_excel_config_map = &this->main_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::MainQuestExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::MainQuestExcelConfig>::find(
                                                                                          p_main_quest_excel_config_map,
                                                                                          (const std::unordered_map<unsigned int,data::MainQuestExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->main_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::MainQuestExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::MainQuestExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::MainQuestExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::MainQuestExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::MainQuestExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2754: range 000000000EF8657E-000000000EF86739
const data::MainQuestExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findMainQuestExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::MainQuestExcelConfigMap *p_main_quest_excel_config_map; // rdx
  data::MainQuestExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::MainQuestExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2753 64 8 9 iter:2755 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findMainQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_main_quest_excel_config_map = &this->main_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::MainQuestExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::MainQuestExcelConfig>::find(
                                                                                                p_main_quest_excel_config_map,
                                                                                                (const std::unordered_map<unsigned int,data::MainQuestExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->main_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::MainQuestExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::MainQuestExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::MainQuestExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::MainQuestExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::MainQuestExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::MainQuestExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2767: range 000000000EF8673A-000000000EF868F5
data::QuestExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 sub_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestExcelConfigMap *p_quest_excel_config_map; // rdx
  data::QuestExcelConfigMap *v6; // rdx
  bool v7; // al
  data::QuestExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 11 sub_id:2766 64 8 9 iter:2768 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = sub_id;
  p_quest_excel_config_map = &this->quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, sub_id);
  *(std::unordered_map<unsigned int,data::QuestExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestExcelConfig>::find(
                                                                                      p_quest_excel_config_map,
                                                                                      (const std::unordered_map<unsigned int,data::QuestExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2780: range 000000000EF868F6-000000000EF86AB1
const data::QuestExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 sub_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestExcelConfigMap *p_quest_excel_config_map; // rdx
  data::QuestExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::QuestExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 11 sub_id:2779 64 8 9 iter:2781 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = sub_id;
  p_quest_excel_config_map = &this->quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, sub_id);
  *(std::unordered_map<unsigned int,data::QuestExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestExcelConfig>::find(
                                                                                            p_quest_excel_config_map,
                                                                                            (const std::unordered_map<unsigned int,data::QuestExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2793: range 000000000EF86AB2-000000000EF86C73
data::TalkExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findTalkExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::TalkExcelConfigMap *p_talk_excel_config_map; // rdx
  data::TalkExcelConfigMap *v6; // rdx
  bool v7; // al
  data::TalkExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2792 64 8 9 iter:2794 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findTalkExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_talk_excel_config_map = &this->talk_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::TalkExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::TalkExcelConfig>::find(
                                                                                     p_talk_excel_config_map,
                                                                                     (const std::unordered_map<unsigned int,data::TalkExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->talk_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::TalkExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::TalkExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::TalkExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::TalkExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::TalkExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::TalkExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::TalkExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2806: range 000000000EF86C74-000000000EF86E35
const data::TalkExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findTalkExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::TalkExcelConfigMap *p_talk_excel_config_map; // rdx
  data::TalkExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::TalkExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2805 64 8 9 iter:2807 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findTalkExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_talk_excel_config_map = &this->talk_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::TalkExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::TalkExcelConfig>::find(
                                                                                           p_talk_excel_config_map,
                                                                                           (const std::unordered_map<unsigned int,data::TalkExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->talk_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::TalkExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::TalkExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::TalkExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::TalkExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::TalkExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::TalkExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::TalkExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2819: range 000000000EF86E36-000000000EF86FF7
data::RqTalkExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRqTalkExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RqTalkExcelConfigMap *p_rq_talk_excel_config_map; // rdx
  data::RqTalkExcelConfigMap *v6; // rdx
  bool v7; // al
  data::RqTalkExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2818 64 8 9 iter:2820 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRqTalkExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_rq_talk_excel_config_map = &this->rq_talk_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::RqTalkExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RqTalkExcelConfig>::find(
                                                                                       p_rq_talk_excel_config_map,
                                                                                       (const std::unordered_map<unsigned int,data::RqTalkExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->rq_talk_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RqTalkExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RqTalkExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RqTalkExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RqTalkExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RqTalkExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::RqTalkExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::RqTalkExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2832: range 000000000EF86FF8-000000000EF871B9
const data::RqTalkExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRqTalkExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RqTalkExcelConfigMap *p_rq_talk_excel_config_map; // rdx
  data::RqTalkExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::RqTalkExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2831 64 8 9 iter:2833 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRqTalkExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_rq_talk_excel_config_map = &this->rq_talk_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::RqTalkExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RqTalkExcelConfig>::find(
                                                                                             p_rq_talk_excel_config_map,
                                                                                             (const std::unordered_map<unsigned int,data::RqTalkExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->rq_talk_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RqTalkExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RqTalkExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RqTalkExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RqTalkExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RqTalkExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RqTalkExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RqTalkExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2845: range 000000000EF871BA-000000000EF8737B
data::QuestResCollectionExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestResCollectionExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestResCollectionExcelConfigMap *p_quest_res_collection_excel_config_map; // rdx
  data::QuestResCollectionExcelConfigMap *v6; // rdx
  bool v7; // al
  data::QuestResCollectionExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2844 64 8 9 iter:2846 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestResCollectionExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_quest_res_collection_excel_config_map = &this->quest_res_collection_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::find(
                                                                                                   p_quest_res_collection_excel_config_map,
                                                                                                   (const std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_res_collection_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2858: range 000000000EF8737C-000000000EF8753D
const data::QuestResCollectionExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestResCollectionExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestResCollectionExcelConfigMap *p_quest_res_collection_excel_config_map; // rdx
  data::QuestResCollectionExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::QuestResCollectionExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2857 64 8 9 iter:2859 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestResCollectionExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_quest_res_collection_excel_config_map = &this->quest_res_collection_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::find(p_quest_res_collection_excel_config_map, (const std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_res_collection_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestResCollectionExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestResCollectionExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2871: range 000000000EF8753E-000000000EF876FF
data::DialogExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findDialogExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::DialogExcelConfigMap *p_dialog_excel_config_map; // rdx
  data::DialogExcelConfigMap *v6; // rdx
  bool v7; // al
  data::DialogExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2870 64 8 9 iter:2872 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findDialogExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_dialog_excel_config_map = &this->dialog_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::DialogExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::DialogExcelConfig>::find(
                                                                                       p_dialog_excel_config_map,
                                                                                       (const std::unordered_map<unsigned int,data::DialogExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->dialog_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::DialogExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::DialogExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::DialogExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::DialogExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::DialogExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::DialogExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::DialogExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2884: range 000000000EF87700-000000000EF878C1
const data::DialogExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findDialogExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::DialogExcelConfigMap *p_dialog_excel_config_map; // rdx
  data::DialogExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::DialogExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2883 64 8 9 iter:2885 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findDialogExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_dialog_excel_config_map = &this->dialog_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::DialogExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::DialogExcelConfig>::find(
                                                                                             p_dialog_excel_config_map,
                                                                                             (const std::unordered_map<unsigned int,data::DialogExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->dialog_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::DialogExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::DialogExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::DialogExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::DialogExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::DialogExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::DialogExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::DialogExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2897: range 000000000EF878C2-000000000EF87A83
data::RandomQuestTemplateExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRandomQuestTemplateExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 main_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RandomQuestTemplateExcelConfigMap *p_random_quest_template_excel_config_map; // rdx
  data::RandomQuestTemplateExcelConfigMap *v6; // rdx
  bool v7; // al
  data::RandomQuestTemplateExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 12 main_id:2896 64 8 9 iter:2898 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRandomQuestTemplateExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = main_id;
  p_random_quest_template_excel_config_map = &this->random_quest_template_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, main_id);
  *(std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::find(
                                                                                                    p_random_quest_template_excel_config_map,
                                                                                                    (const std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->random_quest_template_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2910: range 000000000EF87A84-000000000EF87C45
const data::RandomQuestTemplateExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRandomQuestTemplateExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 main_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RandomQuestTemplateExcelConfigMap *p_random_quest_template_excel_config_map; // rdx
  data::RandomQuestTemplateExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::RandomQuestTemplateExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 12 main_id:2909 64 8 9 iter:2911 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRandomQuestTemplateExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = main_id;
  p_random_quest_template_excel_config_map = &this->random_quest_template_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, main_id);
  *(std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::find(p_random_quest_template_excel_config_map, (const std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->random_quest_template_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RandomQuestTemplateExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomQuestTemplateExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2923: range 000000000EF87C46-000000000EF87E07
data::RandomQuestElemPoolExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRandomQuestElemPoolExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RandomQuestElemPoolExcelConfigMap *p_random_quest_elem_pool_excel_config_map; // rdx
  data::RandomQuestElemPoolExcelConfigMap *v6; // rdx
  bool v7; // al
  data::RandomQuestElemPoolExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2922 64 8 9 iter:2924 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRandomQuestElemPoolExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_random_quest_elem_pool_excel_config_map = &this->random_quest_elem_pool_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::find(
                                                                                                    p_random_quest_elem_pool_excel_config_map,
                                                                                                    (const std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->random_quest_elem_pool_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2936: range 000000000EF87E08-000000000EF87FC9
const data::RandomQuestElemPoolExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRandomQuestElemPoolExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RandomQuestElemPoolExcelConfigMap *p_random_quest_elem_pool_excel_config_map; // rdx
  data::RandomQuestElemPoolExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::RandomQuestElemPoolExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2935 64 8 9 iter:2937 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRandomQuestElemPoolExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_random_quest_elem_pool_excel_config_map = &this->random_quest_elem_pool_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::find(p_random_quest_elem_pool_excel_config_map, (const std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->random_quest_elem_pool_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RandomQuestElemPoolExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomQuestElemPoolExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2949: range 000000000EF87FCA-000000000EF8818B
data::RandomMainQuestExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRandomMainQuestExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RandomMainQuestExcelConfigMap *p_random_main_quest_excel_config_map; // rdx
  data::RandomMainQuestExcelConfigMap *v6; // rdx
  bool v7; // al
  data::RandomMainQuestExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2948 64 8 9 iter:2950 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRandomMainQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_random_main_quest_excel_config_map = &this->random_main_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::find(
                                                                                                p_random_main_quest_excel_config_map,
                                                                                                (const std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->random_main_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2962: range 000000000EF8818C-000000000EF8834D
const data::RandomMainQuestExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRandomMainQuestExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RandomMainQuestExcelConfigMap *p_random_main_quest_excel_config_map; // rdx
  data::RandomMainQuestExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::RandomMainQuestExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:2961 64 8 9 iter:2963 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRandomMainQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_random_main_quest_excel_config_map = &this->random_main_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::find(p_random_main_quest_excel_config_map, (const std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->random_main_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RandomMainQuestExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomMainQuestExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2975: range 000000000EF8834E-000000000EF8850F
data::RandomQuestExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRandomQuestExcelConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 sub_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RandomQuestExcelConfigMap *p_random_quest_excel_config_map; // rdx
  data::RandomQuestExcelConfigMap *v6; // rdx
  bool v7; // al
  data::RandomQuestExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 11 sub_id:2974 64 8 9 iter:2976 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRandomQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = sub_id;
  p_random_quest_excel_config_map = &this->random_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, sub_id);
  *(std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::find(
                                                                                            p_random_quest_excel_config_map,
                                                                                            (const std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->random_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2988: range 000000000EF88510-000000000EF886D1
const data::RandomQuestExcelConfig *__fastcall data::QuestExcelConfigMgrBase::findRandomQuestExcelConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 sub_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::RandomQuestExcelConfigMap *p_random_quest_excel_config_map; // rdx
  data::RandomQuestExcelConfigMap *v6; // rdx
  bool v7; // al
  const data::RandomQuestExcelConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 11 sub_id:2987 64 8 9 iter:2989 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findRandomQuestExcelConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = sub_id;
  p_random_quest_excel_config_map = &this->random_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, sub_id);
  *(std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::find(
                                                                                                  p_random_quest_excel_config_map,
                                                                                                  (const std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::key_type *)(v2 + 48));
  v6 = &this->random_quest_excel_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::RandomQuestExcelConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::RandomQuestExcelConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3001: range 000000000EF886D2-000000000EF88893
data::QuestGlobalVarConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestGlobalVarConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestGlobalVarConfigMap *p_quest_global_var_config_map; // rdx
  data::QuestGlobalVarConfigMap *v6; // rdx
  bool v7; // al
  data::QuestGlobalVarConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3000 64 8 9 iter:3002 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestGlobalVarConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_quest_global_var_config_map = &this->quest_global_var_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::find(
                                                                                          p_quest_global_var_config_map,
                                                                                          (const std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_global_var_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3014: range 000000000EF88894-000000000EF88A55
const data::QuestGlobalVarConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestGlobalVarConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestGlobalVarConfigMap *p_quest_global_var_config_map; // rdx
  data::QuestGlobalVarConfigMap *v6; // rdx
  bool v7; // al
  const data::QuestGlobalVarConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3013 64 8 9 iter:3015 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestGlobalVarConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_quest_global_var_config_map = &this->quest_global_var_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::find(
                                                                                                p_quest_global_var_config_map,
                                                                                                (const std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_global_var_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestGlobalVarConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestGlobalVarConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3027: range 000000000EF88A56-000000000EF88C17
data::QuestPlaceConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestPlaceConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 place_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestPlaceConfigMap *p_quest_place_config_map; // rdx
  data::QuestPlaceConfigMap *v6; // rdx
  bool v7; // al
  data::QuestPlaceConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 place_id:3026 64 8 9 iter:3028 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestPlaceConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = place_id;
  p_quest_place_config_map = &this->quest_place_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, place_id);
  *(std::unordered_map<unsigned int,data::QuestPlaceConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestPlaceConfig>::find(
                                                                                      p_quest_place_config_map,
                                                                                      (const std::unordered_map<unsigned int,data::QuestPlaceConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_place_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestPlaceConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestPlaceConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestPlaceConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestPlaceConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestPlaceConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestPlaceConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestPlaceConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3040: range 000000000EF88C18-000000000EF88DD9
const data::QuestPlaceConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestPlaceConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 place_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestPlaceConfigMap *p_quest_place_config_map; // rdx
  data::QuestPlaceConfigMap *v6; // rdx
  bool v7; // al
  const data::QuestPlaceConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 place_id:3039 64 8 9 iter:3041 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestPlaceConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = place_id;
  p_quest_place_config_map = &this->quest_place_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, place_id);
  *(std::unordered_map<unsigned int,data::QuestPlaceConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestPlaceConfig>::find(
                                                                                            p_quest_place_config_map,
                                                                                            (const std::unordered_map<unsigned int,data::QuestPlaceConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_place_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestPlaceConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestPlaceConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestPlaceConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestPlaceConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestPlaceConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestPlaceConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestPlaceConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3053: range 000000000EF88DDA-000000000EF88F9B
data::QuestSpecialShowConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestSpecialShowConfig(
        data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestSpecialShowConfigMap *p_quest_special_show_config_map; // rdx
  data::QuestSpecialShowConfigMap *v6; // rdx
  bool v7; // al
  data::QuestSpecialShowConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3052 64 8 9 iter:3054 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestSpecialShowConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_quest_special_show_config_map = &this->quest_special_show_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::find(
                                                                                            p_quest_special_show_config_map,
                                                                                            (const std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_special_show_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3066: range 000000000EF88F9C-000000000EF8915D
const data::QuestSpecialShowConfig *__fastcall data::QuestExcelConfigMgrBase::findQuestSpecialShowConfig(
        const data::QuestExcelConfigMgrBase *const this,
        __int64 id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  data::QuestSpecialShowConfigMap *p_quest_special_show_config_map; // rdx
  data::QuestSpecialShowConfigMap *v6; // rdx
  bool v7; // al
  const data::QuestSpecialShowConfig *result; // rax
  char v9[160]; // [rsp+10h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 id:3065 64 8 9 iter:3067 96 8 9 <unknown>";
  *(_QWORD *)(v2 + 16) = data::QuestExcelConfigMgrBase::findQuestSpecialShowConfig;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = id;
  p_quest_special_show_config_map = &this->quest_special_show_config_map;
  if ( *(_BYTE *)(((v2 + 64) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 64, id);
  *(std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::find(
                                                                                                  p_quest_special_show_config_map,
                                                                                                  (const std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::key_type *)(v2 + 48));
  v6 = &this->quest_special_show_config_map;
  if ( *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) )
    __asan_report_store8(v2 + 96, v2 + 48);
  *(std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::const_iterator *)(v2 + 96) = std::unordered_map<unsigned int,data::QuestSpecialShowConfig>::end(v6);
  v7 = std::__detail::operator==<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false> *)(v2 + 64),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false> *)(v2 + 96));
  *(_BYTE *)(((v2 + 96) >> 3) + 0x7FFF8000) = -8;
  if ( v7 )
    result = 0LL;
  else
    result = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::QuestSpecialShowConfig>,false,false> *const)(v2 + 64))->second;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};
