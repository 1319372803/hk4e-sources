// File: /data/jenkins/jenkins_hk4e/workspace/hk4e_3.4_dev/gameserver/src/player/activity/vintage_activity.cpp

// Line 32: range 000000001497D910-000000001497DA5F
void __cdecl VintageHuntingStageData::toClient(
        const VintageHuntingStageData *const this,
        proto::VintageHuntingStageData *vintage_hunting_stage_data)
{
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)this & 7) + 3) >= *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(this);
  }
  proto::VintageHuntingStageData::set_stage_id(vintage_hunting_stage_data, this->stage_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintageHuntingStageData::set_is_open(vintage_hunting_stage_data, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 5) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintageHuntingStageData::set_is_finish(vintage_hunting_stage_data, this->is_finish);
  if ( *(_BYTE *)(((unsigned __int64)&this->record_value >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 8) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->record_value >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->record_value);
  }
  proto::VintageHuntingStageData::set_record_value(vintage_hunting_stage_data, this->record_value);
};

// Line 40: range 000000001497DA60-000000001497DBAF
void __cdecl VintageHuntingStageData::toBin(
        const VintageHuntingStageData *const this,
        proto::VintageHuntingStageDataBin *bin)
{
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)this & 7) + 3) >= *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(this);
  }
  proto::VintageHuntingStageDataBin::set_stage_id(bin, this->stage_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintageHuntingStageDataBin::set_is_open(bin, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 5) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintageHuntingStageDataBin::set_is_finish(bin, this->is_finish);
  if ( *(_BYTE *)(((unsigned __int64)&this->record_value >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 8) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->record_value >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->record_value);
  }
  proto::VintageHuntingStageDataBin::set_record_value(bin, this->record_value);
};

// Line 48: range 000000001497DBB0-000000001497DCFB
void __cdecl VintageHuntingStageData::fromBin(
        VintageHuntingStageData *const this,
        const proto::VintageHuntingStageDataBin *bin)
{
  uint32_t v2; // ecx
  char v3; // dl
  __int64 v4; // rdx
  bool is_open; // cl
  char v6; // dl
  __int64 v7; // rdx
  bool is_finish; // cl
  char v9; // dl
  __int64 v10; // rdx
  uint32_t v11; // ecx
  char v12; // dl
  __int64 v13; // rdx
  const proto::VintageHuntingStageDataBin *bina; // [rsp+0h] [rbp-10h]

  bina = bin;
  v2 = proto::VintageHuntingStageDataBin::stage_id(bin);
  v3 = *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v3 != 0;
  v4 = (v3 != 0) & (unsigned __int8)((char)(((unsigned __int8)this & 7) + 3) >= v3);
  if ( (_BYTE)v4 )
    __asan_report_store4(this, bin, v4);
  this->stage_id = v2;
  is_open = proto::VintageHuntingStageDataBin::is_open(bina);
  v6 = *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v6 != 0;
  v7 = (v6 != 0) & (unsigned __int8)((((unsigned __int8)this + 4) & 7) >= v6);
  if ( (_BYTE)v7 )
    __asan_report_store1(&this->is_open, bin, v7);
  this->is_open = is_open;
  is_finish = proto::VintageHuntingStageDataBin::is_finish(bina);
  v9 = *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v9 != 0;
  v10 = (v9 != 0) & (unsigned __int8)((((unsigned __int8)this + 5) & 7) >= v9);
  if ( (_BYTE)v10 )
    __asan_report_store1(&this->is_finish, bin, v10);
  this->is_finish = is_finish;
  v11 = proto::VintageHuntingStageDataBin::record_value(bina);
  v12 = *(_BYTE *)(((unsigned __int64)&this->record_value >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v12 != 0;
  v13 = (v12 != 0) & (unsigned __int8)((char)((((_BYTE)this + 8) & 7) + 3) >= v12);
  if ( (_BYTE)v13 )
    __asan_report_store4(&this->record_value, bin, v13);
  this->record_value = v11;
};

// Line 59: range 000000001497DCFC-000000001497DE4B
void __cdecl VintagePresentLevelData::toClient(
        const VintagePresentLevelData *const this,
        proto::VintagePresentLevelData *vintage_present_level_data)
{
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)this & 7) + 3) >= *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(this);
  }
  proto::VintagePresentLevelData::set_present_id(vintage_present_level_data, this->present_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 8) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintagePresentLevelData::set_is_open(vintage_present_level_data, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 9) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintagePresentLevelData::set_is_finish(vintage_present_level_data, this->is_finish);
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->stage_id);
  }
  proto::VintagePresentLevelData::set_stage_id(vintage_present_level_data, this->stage_id);
};

// Line 67: range 000000001497DE4C-000000001497DF9B
void __cdecl VintagePresentLevelData::toBin(
        const VintagePresentLevelData *const this,
        proto::VintagePresentLevelDataBin *bin)
{
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)this & 7) + 3) >= *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(this);
  }
  proto::VintagePresentLevelDataBin::set_present_id(bin, this->present_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 8) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintagePresentLevelDataBin::set_is_open(bin, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 9) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintagePresentLevelDataBin::set_is_finish(bin, this->is_finish);
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->stage_id);
  }
  proto::VintagePresentLevelDataBin::set_stage_id(bin, this->stage_id);
};

// Line 75: range 000000001497DF9C-000000001497E0E7
void __cdecl VintagePresentLevelData::fromBin(
        VintagePresentLevelData *const this,
        const proto::VintagePresentLevelDataBin *bin)
{
  uint32_t v2; // ecx
  char v3; // dl
  __int64 v4; // rdx
  bool is_open; // cl
  char v6; // dl
  __int64 v7; // rdx
  bool is_finish; // cl
  char v9; // dl
  __int64 v10; // rdx
  uint32_t v11; // ecx
  char v12; // dl
  __int64 v13; // rdx
  const proto::VintagePresentLevelDataBin *bina; // [rsp+0h] [rbp-10h]

  bina = bin;
  v2 = proto::VintagePresentLevelDataBin::present_id(bin);
  v3 = *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v3 != 0;
  v4 = (v3 != 0) & (unsigned __int8)((char)(((unsigned __int8)this & 7) + 3) >= v3);
  if ( (_BYTE)v4 )
    __asan_report_store4(this, bin, v4);
  this->present_id = v2;
  is_open = proto::VintagePresentLevelDataBin::is_open(bina);
  v6 = *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v6 != 0;
  v7 = (v6 != 0) & (unsigned __int8)((((unsigned __int8)this + 8) & 7) >= v6);
  if ( (_BYTE)v7 )
    __asan_report_store1(&this->is_open, bin, v7);
  this->is_open = is_open;
  is_finish = proto::VintagePresentLevelDataBin::is_finish(bina);
  v9 = *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v9 != 0;
  v10 = (v9 != 0) & (unsigned __int8)((((unsigned __int8)this + 9) & 7) >= v9);
  if ( (_BYTE)v10 )
    __asan_report_store1(&this->is_finish, bin, v10);
  this->is_finish = is_finish;
  v11 = proto::VintagePresentLevelDataBin::stage_id(bina);
  v12 = *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v12 != 0;
  v13 = (v12 != 0) & (unsigned __int8)((char)((((_BYTE)this + 4) & 7) + 3) >= v12);
  if ( (_BYTE)v13 )
    __asan_report_store4(&this->stage_id, bin, v13);
  this->stage_id = v11;
};

// Line 83: range 000000001497E0E8-000000001497E29A
void __cdecl VintagePresentStageData::toClient(
        const VintagePresentStageData *const this,
        proto::VintagePresentStageData *vintage_present_stage_data)
{
  std::map<unsigned int,VintagePresentLevelData>::const_iterator __for_begin; // [rsp+10h] [rbp-40h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::const_iterator __for_end; // [rsp+18h] [rbp-38h] BYREF
  google::protobuf::Map<unsigned int,proto::VintagePresentLevelData> *proto_level_map; // [rsp+20h] [rbp-30h]
  const std::map<unsigned int,VintagePresentLevelData> *__for_range; // [rsp+28h] [rbp-28h]
  const std::pair<unsigned int const,VintagePresentLevelData> *v6; // [rsp+30h] [rbp-20h]
  std::tuple_element<0,const std::pair<unsigned int const,VintagePresentLevelData> >::type *level_id; // [rsp+38h] [rbp-18h]
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *level_data; // [rsp+40h] [rbp-10h]
  proto::VintagePresentLevelData *proto_level_data; // [rsp+48h] [rbp-8h]

  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(this);
  }
  proto::VintagePresentStageData::set_stage_id(vintage_present_stage_data, this->stage_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintagePresentStageData::set_is_open(vintage_present_stage_data, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 5) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintagePresentStageData::set_is_finish(vintage_present_stage_data, this->is_finish);
  proto_level_map = proto::VintagePresentStageData::mutable_present_level_map(vintage_present_stage_data);
  __for_range = &this->present_level_map;
  __for_begin._M_node = std::map<unsigned int,VintagePresentLevelData>::begin(&this->present_level_map)._M_node;
  __for_end._M_node = std::map<unsigned int,VintagePresentLevelData>::end(&this->present_level_map)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v6 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator*(&__for_begin);
    level_id = std::get<0ul,unsigned int const,VintagePresentLevelData>(v6);
    level_data = (std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *)std::get<1ul,unsigned int const,VintagePresentLevelData>(v6);
    proto_level_data = google::protobuf::Map<unsigned int,proto::VintagePresentLevelData>::operator[](
                         proto_level_map,
                         level_id);
    VintagePresentLevelData::toClient(level_data, proto_level_data);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator++(&__for_begin);
  }
};

// Line 96: range 000000001497E29C-000000001497E44E
void __cdecl VintagePresentStageData::toBin(
        const VintagePresentStageData *const this,
        proto::VintagePresentStageDataBin *bin)
{
  std::map<unsigned int,VintagePresentLevelData>::const_iterator __for_begin; // [rsp+10h] [rbp-40h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::const_iterator __for_end; // [rsp+18h] [rbp-38h] BYREF
  google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin> *level_map_bin; // [rsp+20h] [rbp-30h]
  const std::map<unsigned int,VintagePresentLevelData> *__for_range; // [rsp+28h] [rbp-28h]
  const std::pair<unsigned int const,VintagePresentLevelData> *v6; // [rsp+30h] [rbp-20h]
  std::tuple_element<0,const std::pair<unsigned int const,VintagePresentLevelData> >::type *level_id; // [rsp+38h] [rbp-18h]
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *level_data; // [rsp+40h] [rbp-10h]
  proto::VintagePresentLevelDataBin *level_data_bin; // [rsp+48h] [rbp-8h]

  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(this);
  }
  proto::VintagePresentStageDataBin::set_stage_id(bin, this->stage_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintagePresentStageDataBin::set_is_open(bin, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 5) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintagePresentStageDataBin::set_is_finish(bin, this->is_finish);
  level_map_bin = proto::VintagePresentStageDataBin::mutable_present_level_map(bin);
  __for_range = &this->present_level_map;
  __for_begin._M_node = std::map<unsigned int,VintagePresentLevelData>::begin(&this->present_level_map)._M_node;
  __for_end._M_node = std::map<unsigned int,VintagePresentLevelData>::end(&this->present_level_map)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v6 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator*(&__for_begin);
    level_id = std::get<0ul,unsigned int const,VintagePresentLevelData>(v6);
    level_data = (std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *)std::get<1ul,unsigned int const,VintagePresentLevelData>(v6);
    level_data_bin = google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin>::operator[](
                       level_map_bin,
                       level_id);
    VintagePresentLevelData::toBin(level_data, level_data_bin);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator++(&__for_begin);
  }
};

// Line 109: range 000000001497E450-000000001497E791
void __cdecl VintagePresentStageData::fromBin(
        VintagePresentStageData *const this,
        const proto::VintagePresentStageDataBin *bin)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r13
  __int64 v5; // rdx
  char v6; // al
  bool is_open; // cl
  char v8; // dl
  __int64 v9; // rdx
  bool is_finish; // cl
  char v11; // dl
  __int64 v12; // rdx
  VintagePresentLevelData *v13; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData> >,bool> v14; // rax
  common::milog::MiLogStream *v15; // rdx
  const proto::VintagePresentStageDataBin *bina; // [rsp+0h] [rbp-E0h]
  const google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin> *__for_range; // [rsp+10h] [rbp-D0h]
  google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin>::const_reference p_level_id; // [rsp+18h] [rbp-C8h]
  google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin>::const_iterator __for_begin; // [rsp+20h] [rbp-C0h] BYREF
  google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin>::const_iterator __for_end; // [rsp+40h] [rbp-A0h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-80h] BYREF
  char v22[96]; // [rsp+80h] [rbp-60h] BYREF

  bina = bin;
  v2 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 12 14 level_data:116";
  *(_QWORD *)(v2 + 16) = VintagePresentStageData::fromBin;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202177536;
  v5 = proto::VintagePresentStageDataBin::stage_id(bin);
  v6 = *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000);
  if ( v6 != 0 && v6 <= 3 )
  {
    LOBYTE(bin) = v6 != 0;
    __asan_report_store4(this, bin, v5);
  }
  this->stage_id = v5;
  is_open = proto::VintagePresentStageDataBin::is_open(bina);
  v8 = *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v8 != 0;
  v9 = (v8 != 0) & (unsigned __int8)((((unsigned __int8)this + 4) & 7) >= v8);
  if ( (_BYTE)v9 )
    __asan_report_store1(&this->is_open, bin, v9);
  this->is_open = is_open;
  is_finish = proto::VintagePresentStageDataBin::is_finish(bina);
  v11 = *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v11 != 0;
  v12 = (v11 != 0) & (unsigned __int8)((((unsigned __int8)this + 5) & 7) >= v11);
  if ( (_BYTE)v12 )
    __asan_report_store1(&this->is_finish, bin, v12);
  this->is_finish = is_finish;
  std::map<unsigned int,VintagePresentLevelData>::clear(&this->present_level_map);
  __for_range = proto::VintagePresentStageDataBin::present_level_map(bina);
  google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin>::begin(&__for_begin, __for_range);
  google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin>::end(&__for_end, __for_range);
  while ( google::protobuf::operator!=(&__for_begin, &__for_end) )
  {
    p_level_id = google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin>::const_iterator::operator*(&__for_begin);
    *(_DWORD *)(v2 + 32) = 0;
    *(_DWORD *)(v2 + 36) = 0;
    *(_BYTE *)(v2 + 40) = 0;
    *(_BYTE *)(v2 + 41) = 0;
    VintagePresentLevelData::fromBin((VintagePresentLevelData *const)(v2 + 32), &p_level_id->second);
    v14 = std::map<unsigned int,VintagePresentLevelData>::emplace<unsigned int const&,VintagePresentLevelData&>(
            &this->present_level_map,
            &p_level_id->first,
            (VintagePresentLevelData *)(v2 + 32),
            (const unsigned int *)&this->present_level_map,
            v13);
    if ( !v14.second )
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "fromBin",
        120);
      v15 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
              &v21,
              (const char (*)[40])"[VINTAGE] duplicate level_id, level_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &p_level_id->first);
      common::milog::MiLogStream::~MiLogStream(&v21);
    }
    google::protobuf::Map<unsigned int,proto::VintagePresentLevelDataBin>::const_iterator::operator++(&__for_begin);
  }
  if ( v22 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 126: range 000000001497E792-000000001497E840
void __cdecl VintageBoothUsedItemData::toClient(
        const VintageBoothUsedItemData *const this,
        proto::VintageBoothUsedItemData *vintage_booth_data)
{
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)this & 7) + 3) >= *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(this);
  }
  proto::VintageBoothUsedItemData::set_gadget_id(vintage_booth_data, this->gadget_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintageBoothUsedItemData::set_is_open(vintage_booth_data, this->is_open);
};

// Line 132: range 000000001497E842-000000001497E8F0
void __cdecl VintageBoothUsedItemData::toBin(
        const VintageBoothUsedItemData *const this,
        proto::VintageBoothUsedItemDataBin *bin)
{
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)this & 7) + 3) >= *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(this);
  }
  proto::VintageBoothUsedItemDataBin::set_gadget_id(bin, this->gadget_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintageBoothUsedItemDataBin::set_is_open(bin, this->is_open);
};

// Line 138: range 000000001497E8F2-000000001497E99E
void __cdecl VintageBoothUsedItemData::fromBin(
        VintageBoothUsedItemData *const this,
        const proto::VintageBoothUsedItemDataBin *bin)
{
  uint32_t v2; // ecx
  char v3; // dl
  __int64 v4; // rdx
  bool is_open; // cl
  char v6; // dl
  __int64 v7; // rdx
  const proto::VintageBoothUsedItemDataBin *bina; // [rsp+0h] [rbp-10h]

  bina = bin;
  v2 = proto::VintageBoothUsedItemDataBin::gadget_id(bin);
  v3 = *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v3 != 0;
  v4 = (v3 != 0) & (unsigned __int8)((char)(((unsigned __int8)this & 7) + 3) >= v3);
  if ( (_BYTE)v4 )
    __asan_report_store4(this, bin, v4);
  this->gadget_id = v2;
  is_open = proto::VintageBoothUsedItemDataBin::is_open(bina);
  v6 = *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v6 != 0;
  v7 = (v6 != 0) & (unsigned __int8)((((unsigned __int8)this + 4) & 7) >= v6);
  if ( (_BYTE)v7 )
    __asan_report_store1(&this->is_open, bin, v7);
  this->is_open = is_open;
};

// Line 144: range 000000001497E9A0-000000001497EA2F
void __cdecl VintageBoothUsedItemData::clear(VintageBoothUsedItemData *const this)
{
  __int64 v1; // rsi
  __int64 v2; // rdx
  __int64 v3; // rdx

  v1 = ((_BYTE)this + 4) & 7;
  v2 = (*(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v1 >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000));
  if ( (_BYTE)v2 )
    __asan_report_store1(&this->is_open, v1, v2);
  this->is_open = 0;
  v3 = (*(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)(((unsigned __int8)this & 7)
                                                                                              + 3) >= *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000));
  if ( (_BYTE)v3 )
    __asan_report_store4(this, ((unsigned __int8)this & 7u) + 3, v3);
  this->gadget_id = 0;
};

// Line 152: range 000000001497EA30-000000001497EB7F
void __cdecl VintageCampChallengeLevelData::toClient(
        const VintageCampChallengeLevelData *const this,
        proto::VintageCampChallengeLevelData *vintage_camp_level_data)
{
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)this & 7) + 3) >= *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(this);
  }
  proto::VintageCampChallengeLevelData::set_level_id(vintage_camp_level_data, this->level_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->stage_id);
  }
  proto::VintageCampChallengeLevelData::set_stage_id(vintage_camp_level_data, this->stage_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 8) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintageCampChallengeLevelData::set_is_open(vintage_camp_level_data, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 9) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintageCampChallengeLevelData::set_is_finish(vintage_camp_level_data, this->is_finish);
};

// Line 160: range 000000001497EB80-000000001497ECCF
void __cdecl VintageCampChallengeLevelData::toBin(
        const VintageCampChallengeLevelData *const this,
        proto::VintageCampChallengeLevelDataBin *bin)
{
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)this & 7) + 3) >= *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(this);
  }
  proto::VintageCampChallengeLevelDataBin::set_level_id(bin, this->level_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->stage_id);
  }
  proto::VintageCampChallengeLevelDataBin::set_stage_id(bin, this->stage_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 8) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_open);
  }
  proto::VintageCampChallengeLevelDataBin::set_is_open(bin, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 9) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintageCampChallengeLevelDataBin::set_is_finish(bin, this->is_finish);
};

// Line 168: range 000000001497ECD0-000000001497EE1B
void __cdecl VintageCampChallengeLevelData::fromBin(
        VintageCampChallengeLevelData *const this,
        const proto::VintageCampChallengeLevelDataBin *bin)
{
  uint32_t v2; // ecx
  char v3; // dl
  __int64 v4; // rdx
  uint32_t v5; // ecx
  char v6; // dl
  __int64 v7; // rdx
  bool is_open; // cl
  char v9; // dl
  __int64 v10; // rdx
  bool is_finish; // cl
  char v12; // dl
  __int64 v13; // rdx
  const proto::VintageCampChallengeLevelDataBin *bina; // [rsp+0h] [rbp-10h]

  bina = bin;
  v2 = proto::VintageCampChallengeLevelDataBin::level_id(bin);
  v3 = *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v3 != 0;
  v4 = (v3 != 0) & (unsigned __int8)((char)(((unsigned __int8)this & 7) + 3) >= v3);
  if ( (_BYTE)v4 )
    __asan_report_store4(this, bin, v4);
  this->level_id = v2;
  v5 = proto::VintageCampChallengeLevelDataBin::stage_id(bina);
  v6 = *(_BYTE *)(((unsigned __int64)&this->stage_id >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v6 != 0;
  v7 = (v6 != 0) & (unsigned __int8)((char)((((_BYTE)this + 4) & 7) + 3) >= v6);
  if ( (_BYTE)v7 )
    __asan_report_store4(&this->stage_id, bin, v7);
  this->stage_id = v5;
  is_open = proto::VintageCampChallengeLevelDataBin::is_open(bina);
  v9 = *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v9 != 0;
  v10 = (v9 != 0) & (unsigned __int8)((((unsigned __int8)this + 8) & 7) >= v9);
  if ( (_BYTE)v10 )
    __asan_report_store1(&this->is_open, bin, v10);
  this->is_open = is_open;
  is_finish = proto::VintageCampChallengeLevelDataBin::is_finish(bina);
  v12 = *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v12 != 0;
  v13 = (v12 != 0) & (unsigned __int8)((((unsigned __int8)this + 9) & 7) >= v12);
  if ( (_BYTE)v13 )
    __asan_report_store1(&this->is_finish, bin, v13);
  this->is_finish = is_finish;
};

// Line 176: range 000000001497EE1C-000000001497F019
void __cdecl VintageCampChallengeStageData::toClient(
        const VintageCampChallengeStageData *const this,
        proto::VintageCampChallengeStageData *vintage_camp_stage_data)
{
  std::map<unsigned int,VintageCampChallengeLevelData>::const_iterator __for_begin; // [rsp+10h] [rbp-40h] BYREF
  std::map<unsigned int,VintageCampChallengeLevelData>::const_iterator __for_end; // [rsp+18h] [rbp-38h] BYREF
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelData> *proto_level_map; // [rsp+20h] [rbp-30h]
  const std::map<unsigned int,VintageCampChallengeLevelData> *__for_range; // [rsp+28h] [rbp-28h]
  const std::pair<unsigned int const,VintageCampChallengeLevelData> *v6; // [rsp+30h] [rbp-20h]
  std::tuple_element<0,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *level_id; // [rsp+38h] [rbp-18h]
  std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *level_data; // [rsp+40h] [rbp-10h]
  proto::VintageCampChallengeLevelData *proto_level_data; // [rsp+48h] [rbp-8h]

  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(this);
  }
  proto::VintageCampChallengeStageData::set_stage_id(vintage_camp_stage_data, this->stage_id);
  if ( *(char *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_open);
  proto::VintageCampChallengeStageData::set_is_open(vintage_camp_stage_data, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 57) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintageCampChallengeStageData::set_is_finish(vintage_camp_stage_data, this->is_finish);
  if ( *(_BYTE *)(((unsigned __int64)&this->max_finished_level >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 60) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->max_finished_level >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->max_finished_level);
  }
  proto::VintageCampChallengeStageData::set_max_finished_level(vintage_camp_stage_data, this->max_finished_level);
  proto_level_map = proto::VintageCampChallengeStageData::mutable_camp_level_map(vintage_camp_stage_data);
  __for_range = &this->camp_level_map;
  __for_begin._M_node = std::map<unsigned int,VintageCampChallengeLevelData>::begin(&this->camp_level_map)._M_node;
  __for_end._M_node = std::map<unsigned int,VintageCampChallengeLevelData>::end(&this->camp_level_map)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v6 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData>>::operator*(&__for_begin);
    level_id = std::get<0ul,unsigned int const,VintageCampChallengeLevelData>(v6);
    level_data = (std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *)std::get<1ul,unsigned int const,VintageCampChallengeLevelData>(v6);
    proto_level_data = google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelData>::operator[](
                         proto_level_map,
                         level_id);
    VintageCampChallengeLevelData::toClient(level_data, proto_level_data);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData>>::operator++(&__for_begin);
  }
};

// Line 191: range 000000001497F01A-000000001497F217
void __cdecl VintageCampChallengeStageData::toBin(
        const VintageCampChallengeStageData *const this,
        proto::VintageCampChallengeStageDataBin *bin)
{
  std::map<unsigned int,VintageCampChallengeLevelData>::const_iterator __for_begin; // [rsp+10h] [rbp-40h] BYREF
  std::map<unsigned int,VintageCampChallengeLevelData>::const_iterator __for_end; // [rsp+18h] [rbp-38h] BYREF
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin> *level_map_bin; // [rsp+20h] [rbp-30h]
  const std::map<unsigned int,VintageCampChallengeLevelData> *__for_range; // [rsp+28h] [rbp-28h]
  const std::pair<unsigned int const,VintageCampChallengeLevelData> *v6; // [rsp+30h] [rbp-20h]
  std::tuple_element<0,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *level_id; // [rsp+38h] [rbp-18h]
  std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *level_data; // [rsp+40h] [rbp-10h]
  proto::VintageCampChallengeLevelDataBin *level_data_bin; // [rsp+48h] [rbp-8h]

  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(this);
  }
  proto::VintageCampChallengeStageDataBin::set_stage_id(bin, this->stage_id);
  if ( *(char *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_open);
  proto::VintageCampChallengeStageDataBin::set_is_open(bin, this->is_open);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 57) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_finish);
  }
  proto::VintageCampChallengeStageDataBin::set_is_finish(bin, this->is_finish);
  if ( *(_BYTE *)(((unsigned __int64)&this->max_finished_level >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 60) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->max_finished_level >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->max_finished_level);
  }
  proto::VintageCampChallengeStageDataBin::set_max_finished_level(bin, this->max_finished_level);
  level_map_bin = proto::VintageCampChallengeStageDataBin::mutable_camp_level_map(bin);
  __for_range = &this->camp_level_map;
  __for_begin._M_node = std::map<unsigned int,VintageCampChallengeLevelData>::begin(&this->camp_level_map)._M_node;
  __for_end._M_node = std::map<unsigned int,VintageCampChallengeLevelData>::end(&this->camp_level_map)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v6 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData>>::operator*(&__for_begin);
    level_id = std::get<0ul,unsigned int const,VintageCampChallengeLevelData>(v6);
    level_data = (std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *)std::get<1ul,unsigned int const,VintageCampChallengeLevelData>(v6);
    level_data_bin = google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin>::operator[](
                       level_map_bin,
                       level_id);
    VintageCampChallengeLevelData::toBin(level_data, level_data_bin);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData>>::operator++(&__for_begin);
  }
};

// Line 206: range 000000001497F218-000000001497F5AE
void __cdecl VintageCampChallengeStageData::fromBin(
        VintageCampChallengeStageData *const this,
        const proto::VintageCampChallengeStageDataBin *bin)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r13
  __int64 v5; // rdx
  char v6; // al
  unsigned int v7; // eax
  __int64 v8; // rdx
  char v9; // al
  bool is_finish; // cl
  char v11; // dl
  __int64 v12; // rdx
  uint32_t v13; // ecx
  char v14; // dl
  __int64 v15; // rdx
  VintageCampChallengeLevelData *v16; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> >,bool> v17; // rax
  common::milog::MiLogStream *v18; // rdx
  const proto::VintageCampChallengeStageDataBin *bina; // [rsp+0h] [rbp-E0h]
  const google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin> *__for_range; // [rsp+10h] [rbp-D0h]
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin>::const_reference p_level_id; // [rsp+18h] [rbp-C8h]
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin>::const_iterator __for_begin; // [rsp+20h] [rbp-C0h] BYREF
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin>::const_iterator __for_end; // [rsp+40h] [rbp-A0h] BYREF
  common::milog::MiLogStream v24; // [rsp+60h] [rbp-80h] BYREF
  char v25[96]; // [rsp+80h] [rbp-60h] BYREF

  bina = bin;
  v2 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 12 14 level_data:215";
  *(_QWORD *)(v2 + 16) = VintageCampChallengeStageData::fromBin;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202177536;
  v5 = proto::VintageCampChallengeStageDataBin::stage_id(bin);
  v6 = *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000);
  if ( v6 != 0 && v6 <= 3 )
  {
    LOBYTE(bin) = v6 != 0;
    __asan_report_store4(this, bin, v5);
  }
  this->stage_id = v5;
  LOBYTE(v7) = proto::VintageCampChallengeStageDataBin::is_open(bina);
  v8 = v7;
  v9 = *(_BYTE *)(((unsigned __int64)&this->is_open >> 3) + 0x7FFF8000);
  if ( v9 < 0 )
  {
    LOBYTE(bin) = v9 != 0;
    __asan_report_store1(&this->is_open, bin, v8);
  }
  this->is_open = v8;
  is_finish = proto::VintageCampChallengeStageDataBin::is_finish(bina);
  v11 = *(_BYTE *)(((unsigned __int64)&this->is_finish >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v11 != 0;
  v12 = (v11 != 0) & (unsigned __int8)((((unsigned __int8)this + 57) & 7) >= v11);
  if ( (_BYTE)v12 )
    __asan_report_store1(&this->is_finish, bin, v12);
  this->is_finish = is_finish;
  v13 = proto::VintageCampChallengeStageDataBin::max_finished_level(bina);
  v14 = *(_BYTE *)(((unsigned __int64)&this->max_finished_level >> 3) + 0x7FFF8000);
  LOBYTE(bin) = v14 != 0;
  v15 = (v14 != 0) & (unsigned __int8)((char)((((_BYTE)this + 60) & 7) + 3) >= v14);
  if ( (_BYTE)v15 )
    __asan_report_store4(&this->max_finished_level, bin, v15);
  this->max_finished_level = v13;
  std::map<unsigned int,VintageCampChallengeLevelData>::clear(&this->camp_level_map);
  __for_range = proto::VintageCampChallengeStageDataBin::camp_level_map(bina);
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin>::begin(&__for_begin, __for_range);
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin>::end(&__for_end, __for_range);
  while ( google::protobuf::operator!=(&__for_begin, &__for_end) )
  {
    p_level_id = google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin>::const_iterator::operator*(&__for_begin);
    *(_DWORD *)(v2 + 32) = 0;
    *(_DWORD *)(v2 + 36) = 0;
    *(_BYTE *)(v2 + 40) = 0;
    *(_BYTE *)(v2 + 41) = 0;
    VintageCampChallengeLevelData::fromBin((VintageCampChallengeLevelData *const)(v2 + 32), &p_level_id->second);
    v17 = std::map<unsigned int,VintageCampChallengeLevelData>::emplace<unsigned int const&,VintageCampChallengeLevelData&>(
            &this->camp_level_map,
            &p_level_id->first,
            (VintageCampChallengeLevelData *)(v2 + 32),
            (const unsigned int *)&this->camp_level_map,
            v16);
    if ( !v17.second )
    {
      common::milog::MiLogStream::create(
        &v24,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "fromBin",
        219);
      v18 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
              &v24,
              (const char (*)[40])"[VINTAGE] duplicate level_id, level_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &p_level_id->first);
      common::milog::MiLogStream::~MiLogStream(&v24);
    }
    google::protobuf::Map<unsigned int,proto::VintageCampChallengeLevelDataBin>::const_iterator::operator++(&__for_begin);
  }
  if ( v25 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 227: range 000000001497F5B0-000000001497FFDA
int32_t __cdecl VintageActivity::fromScheduleBin(VintageActivity *const this, const proto::ActivityScheduleBin *bin)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  google::protobuf::uint32 v5; // r14d
  std::map<proto::VirtualItem,unsigned int>::key_type *p_k; // rsi
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v7; // rax
  google::protobuf::uint32 *v8; // rdx
  char v9; // cl
  google::protobuf::uint32 v10; // r14d
  std::map<proto::VirtualItem,unsigned int>::key_type *v11; // rsi
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v12; // rax
  google::protobuf::uint32 *v13; // rdx
  char v14; // cl
  google::protobuf::uint32 v15; // r14d
  std::map<proto::VirtualItem,unsigned int>::key_type *v16; // rsi
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v17; // rax
  google::protobuf::uint32 *v18; // rdx
  char v19; // cl
  google::protobuf::uint32 v20; // r14d
  std::map<proto::VirtualItem,unsigned int>::key_type *v21; // rsi
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v22; // rax
  google::protobuf::uint32 *v23; // rdx
  char v24; // cl
  google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin>::const_iterator *p_for_end; // rsi
  VintageHuntingStageData *v26; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  __int64 v29; // rdx
  char v30; // al
  VintagePresentStageData *v31; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >,bool> v32; // rax
  common::milog::MiLogStream *v33; // rax
  const proto::VintageBoothUsedItemDataBin *v34; // rsi
  __int64 v35; // rdx
  char v36; // al
  const google::protobuf::RepeatedField<unsigned int> *v37; // rax
  google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin>::const_iterator *v38; // rsi
  VintageCampChallengeStageData *v39; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >,bool> v40; // rax
  common::milog::MiLogStream *v41; // rax
  unsigned int v42; // eax
  __int64 v43; // rdx
  char v44; // al
  int32_t result; // eax
  std::map<proto::VirtualItem,unsigned int>::key_type __k; // [rsp+14h] [rbp-1CCh] BYREF
  const proto::VintageScheduleBin *schedule_bin; // [rsp+18h] [rbp-1C8h]
  const google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin> *__for_range; // [rsp+20h] [rbp-1C0h]
  const google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin> *__for_range_0; // [rsp+28h] [rbp-1B8h]
  const google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin> *__for_range_1; // [rsp+30h] [rbp-1B0h]
  const unsigned int *p_stage_id_1; // [rsp+38h] [rbp-1A8h]
  const unsigned int *p_stage_id_0; // [rsp+40h] [rbp-1A0h]
  const unsigned int *p_stage_id; // [rsp+48h] [rbp-198h]
  google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin>::const_iterator __for_begin; // [rsp+50h] [rbp-190h] BYREF
  google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin>::const_iterator __for_end; // [rsp+70h] [rbp-170h] BYREF
  common::milog::MiLogStream v56; // [rsp+90h] [rbp-150h] BYREF
  char v57[304]; // [rsp+B0h] [rbp-130h] BYREF

  v2 = (unsigned __int64)v57;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(256LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 32 12 22 hunting_stage_data:240 64 56 22 present_stage_data:253 160 64 19 camp_stage_data:269";
  *(_QWORD *)(v2 + 16) = VintageActivity::fromScheduleBin;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219020288;
  v4[536862723] = -234881024;
  v4[536862724] = -218959118;
  v4[536862727] = -202116109;
  schedule_bin = proto::ActivityScheduleBin::vintage_bin(bin);
  v5 = proto::VintageScheduleBin::popularity(schedule_bin);
  __k = ITEM_VIRTUAL_VINTAGE_POPULARITY;
  p_k = &__k;
  v7 = std::map<proto::VirtualItem,unsigned int>::operator[](&this->activity_coin_map_, &__k);
  v8 = v7;
  v9 = *(_BYTE *)(((unsigned __int64)v7 >> 3) + 0x7FFF8000);
  if ( v9 != 0 && (char)(((unsigned __int8)v7 & 7) + 3) >= v9 )
  {
    LOBYTE(p_k) = v9 != 0;
    __asan_report_store4(v7, p_k, v7);
  }
  *v8 = v5;
  v10 = proto::VintageScheduleBin::market_coin_a(schedule_bin);
  __k = ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A;
  v11 = &__k;
  v12 = std::map<proto::VirtualItem,unsigned int>::operator[](&this->activity_coin_map_, &__k);
  v13 = v12;
  v14 = *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000);
  if ( v14 != 0 && (char)(((unsigned __int8)v12 & 7) + 3) >= v14 )
  {
    LOBYTE(v11) = v14 != 0;
    __asan_report_store4(v12, v11, v12);
  }
  *v13 = v10;
  v15 = proto::VintageScheduleBin::market_coin_b(schedule_bin);
  __k = ITEM_VIRTUAL_VINTAGE_MARKET_COIN_B;
  v16 = &__k;
  v17 = std::map<proto::VirtualItem,unsigned int>::operator[](&this->activity_coin_map_, &__k);
  v18 = v17;
  v19 = *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000);
  if ( v19 != 0 && (char)(((unsigned __int8)v17 & 7) + 3) >= v19 )
  {
    LOBYTE(v16) = v19 != 0;
    __asan_report_store4(v17, v16, v17);
  }
  *v18 = v15;
  v20 = proto::VintageScheduleBin::market_coin_c(schedule_bin);
  __k = ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C;
  v21 = &__k;
  v22 = std::map<proto::VirtualItem,unsigned int>::operator[](&this->activity_coin_map_, &__k);
  v23 = v22;
  v24 = *(_BYTE *)(((unsigned __int64)v22 >> 3) + 0x7FFF8000);
  if ( v24 != 0 && (char)(((unsigned __int8)v22 & 7) + 3) >= v24 )
  {
    LOBYTE(v21) = v24 != 0;
    __asan_report_store4(v22, v21, v22);
  }
  *v23 = v20;
  std::map<unsigned int,VintageHuntingStageData>::clear(&this->hunting_stage_map_);
  __for_range = proto::VintageScheduleBin::hunting_stage_map(schedule_bin);
  google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin>::begin(&__for_begin, __for_range);
  google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin>::end(&__for_end, __for_range);
  while ( 1 )
  {
    p_for_end = &__for_end;
    if ( !google::protobuf::operator!=(&__for_begin, &__for_end) )
      break;
    p_stage_id = (const unsigned int *)google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin>::const_iterator::operator*(&__for_begin);
    *(_DWORD *)(v2 + 32) = 0;
    *(_BYTE *)(v2 + 36) = 0;
    *(_BYTE *)(v2 + 37) = 0;
    *(_DWORD *)(v2 + 40) = 0;
    VintageHuntingStageData::fromBin(
      (VintageHuntingStageData *const)(v2 + 32),
      (const proto::VintageHuntingStageDataBin *)(p_stage_id + 2));
    v27 = std::map<unsigned int,VintageHuntingStageData>::emplace<unsigned int const&,VintageHuntingStageData&>(
            &this->hunting_stage_map_,
            p_stage_id,
            (VintageHuntingStageData *)(v2 + 32),
            (const unsigned int *)&this->hunting_stage_map_,
            v26);
    if ( !v27.second )
    {
      common::milog::MiLogStream::create(
        &v56,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "fromScheduleBin",
        244);
      v28 = common::milog::MiLogStream::operator<<<char [71],(char *[71])0>(
              &v56,
              (const char (*)[71])"[VINTAGE] fromScheduleBin error, duplicate hunting stage_id, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v28, p_stage_id);
      common::milog::MiLogStream::~MiLogStream(&v56);
    }
    google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin>::const_iterator::operator++(&__for_begin);
  }
  v29 = proto::VintageScheduleBin::hunting_boss_weak_count(schedule_bin);
  v30 = *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000);
  if ( v30 != 0 && v30 <= 3 )
  {
    LOBYTE(p_for_end) = v30 != 0;
    __asan_report_store4(&this->boss_weak_times_, p_for_end, v29);
  }
  this->boss_weak_times_ = v29;
  std::map<unsigned int,VintagePresentStageData>::clear(&this->present_stage_map_);
  __for_range_0 = proto::VintageScheduleBin::present_stage_map(schedule_bin);
  google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::begin(
    (google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::const_iterator *)&__for_begin,
    __for_range_0);
  google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::end(
    (google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::const_iterator *)&__for_end,
    __for_range_0);
  while ( google::protobuf::operator!=(
            (const google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::const_iterator *)&__for_begin,
            (const google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::const_iterator *)&__for_end) )
  {
    p_stage_id_0 = (const unsigned int *)google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::const_iterator::operator*((const google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::const_iterator *const)&__for_begin);
    VintagePresentStageData::VintagePresentStageData((VintagePresentStageData *const)(v2 + 64));
    VintagePresentStageData::fromBin(
      (VintagePresentStageData *const)(v2 + 64),
      (const proto::VintagePresentStageDataBin *)(p_stage_id_0 + 2));
    v32 = std::map<unsigned int,VintagePresentStageData>::emplace<unsigned int const&,VintagePresentStageData&>(
            &this->present_stage_map_,
            p_stage_id_0,
            (VintagePresentStageData *)(v2 + 64),
            (const unsigned int *)&this->present_stage_map_,
            v31);
    if ( !v32.second )
    {
      common::milog::MiLogStream::create(
        &v56,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "fromScheduleBin",
        257);
      v33 = common::milog::MiLogStream::operator<<<char [71],(char *[71])0>(
              &v56,
              (const char (*)[71])"[VINTAGE] fromScheduleBin error, duplicate present stage_id, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v33, p_stage_id_0);
      common::milog::MiLogStream::~MiLogStream(&v56);
    }
    VintagePresentStageData::~VintagePresentStageData((VintagePresentStageData *const)(v2 + 64));
    google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::const_iterator::operator++((google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::const_iterator *const)&__for_begin);
  }
  VintageBoothUsedItemData::clear(&this->booth_data_);
  v34 = proto::VintageScheduleBin::booth_data(schedule_bin);
  VintageBoothUsedItemData::fromBin(&this->booth_data_, v34);
  v35 = proto::VintageScheduleBin::collected_item_num(schedule_bin);
  v36 = *(_BYTE *)(((unsigned __int64)&this->collected_item_num_ >> 3) + 0x7FFF8000);
  if ( v36 != 0 && v36 <= 3 )
  {
    LOBYTE(v34) = v36 != 0;
    __asan_report_store4(&this->collected_item_num_, v34, v35);
  }
  this->collected_item_num_ = v35;
  v37 = proto::VintageScheduleBin::taken_reward_present_id_list(schedule_bin);
  common::tools::MiscUtils::setFromRepeated<std::set<unsigned int>,unsigned int>(
    &this->taken_reward_present_id_set_,
    v37);
  std::map<unsigned int,VintageCampChallengeStageData>::clear(&this->camp_stage_map_);
  __for_range_1 = proto::VintageScheduleBin::camp_stage_map(schedule_bin);
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::begin(
    (google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::const_iterator *)&__for_begin,
    __for_range_1);
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::end(
    (google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::const_iterator *)&__for_end,
    __for_range_1);
  while ( 1 )
  {
    v38 = &__for_end;
    if ( !google::protobuf::operator!=(
            (const google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::const_iterator *)&__for_begin,
            (const google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::const_iterator *)&__for_end) )
      break;
    p_stage_id_1 = (const unsigned int *)google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::const_iterator::operator*((const google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::const_iterator *const)&__for_begin);
    VintageCampChallengeStageData::VintageCampChallengeStageData((VintageCampChallengeStageData *const)(v2 + 160));
    VintageCampChallengeStageData::fromBin(
      (VintageCampChallengeStageData *const)(v2 + 160),
      (const proto::VintageCampChallengeStageDataBin *)(p_stage_id_1 + 2));
    v40 = std::map<unsigned int,VintageCampChallengeStageData>::emplace<unsigned int const&,VintageCampChallengeStageData&>(
            &this->camp_stage_map_,
            p_stage_id_1,
            (VintageCampChallengeStageData *)(v2 + 160),
            (const unsigned int *)&this->camp_stage_map_,
            v39);
    if ( !v40.second )
    {
      common::milog::MiLogStream::create(
        &v56,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "fromScheduleBin",
        273);
      v41 = common::milog::MiLogStream::operator<<<char [68],(char *[68])0>(
              &v56,
              (const char (*)[68])"[VINTAGE] fromScheduleBin error, duplicate camp stage_id, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v41, p_stage_id_1);
      common::milog::MiLogStream::~MiLogStream(&v56);
    }
    VintageCampChallengeStageData::~VintageCampChallengeStageData((VintageCampChallengeStageData *const)(v2 + 160));
    google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::const_iterator::operator++((google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::const_iterator *const)&__for_begin);
  }
  LOBYTE(v42) = proto::VintageScheduleBin::is_content_closed(schedule_bin);
  v43 = v42;
  v44 = *(_BYTE *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000);
  if ( v44 < 0 )
  {
    LOBYTE(v38) = v44 != 0;
    __asan_report_store1(&this->is_content_closed_, v38, v43);
  }
  this->is_content_closed_ = v43;
  if ( VintageActivity::marketFromBin(this, schedule_bin) )
  {
    common::milog::MiLogStream::create(
      &v56,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "fromScheduleBin",
      281);
    common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
      &v56,
      (const char (*)[31])"[Vintage] marketFromBin failed");
    common::milog::MiLogStream::~MiLogStream(&v56);
  }
  result = 0;
  if ( v57 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF800C) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 287: range 000000001497FFDC-00000000149807CF
int32_t __cdecl VintageActivity::toScheduleBin(const VintageActivity *const this, proto::ActivityScheduleBin *bin)
{
  std::tuple_element<0,const std::pair<const proto::VirtualItem,unsigned int> >::type v2; // eax
  common::milog::MiLogStream *v3; // rax
  google::protobuf::RepeatedField<unsigned int> *v4; // rax
  std::map<proto::VirtualItem,unsigned int>::const_iterator __for_begin; // [rsp+10h] [rbp-100h] BYREF
  std::map<proto::VirtualItem,unsigned int>::const_iterator __for_end; // [rsp+18h] [rbp-F8h] BYREF
  proto::VintageScheduleBin *schedule_bin; // [rsp+20h] [rbp-F0h]
  const std::map<proto::VirtualItem,unsigned int> *__for_range; // [rsp+28h] [rbp-E8h]
  google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin> *hunting_stage_map_bin; // [rsp+30h] [rbp-E0h]
  const std::map<unsigned int,VintageHuntingStageData> *__for_range_0; // [rsp+38h] [rbp-D8h]
  google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin> *present_stage_map_bin; // [rsp+40h] [rbp-D0h]
  const std::map<unsigned int,VintagePresentStageData> *__for_range_1; // [rsp+48h] [rbp-C8h]
  proto::VintageBoothUsedItemDataBin *booth_bin; // [rsp+50h] [rbp-C0h]
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin> *camp_stage_map_bin; // [rsp+58h] [rbp-B8h]
  const std::map<unsigned int,VintageCampChallengeStageData> *__for_range_2; // [rsp+60h] [rbp-B0h]
  const std::pair<unsigned int const,VintageCampChallengeStageData> *v17; // [rsp+68h] [rbp-A8h]
  std::tuple_element<0,const std::pair<unsigned int const,VintageCampChallengeStageData> >::type *stage_id_1; // [rsp+70h] [rbp-A0h]
  std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeStageData> >::type *camp_stage_data; // [rsp+78h] [rbp-98h]
  proto::VintageCampChallengeStageDataBin *stage_data_bin_1; // [rsp+80h] [rbp-90h]
  const std::pair<unsigned int const,VintagePresentStageData> *v21; // [rsp+88h] [rbp-88h]
  std::tuple_element<0,const std::pair<unsigned int const,VintagePresentStageData> >::type *stage_id_0; // [rsp+90h] [rbp-80h]
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentStageData> >::type *present_stage_data; // [rsp+98h] [rbp-78h]
  proto::VintagePresentStageDataBin *stage_data_bin_0; // [rsp+A0h] [rbp-70h]
  const std::pair<unsigned int const,VintageHuntingStageData> *v25; // [rsp+A8h] [rbp-68h]
  std::tuple_element<0,const std::pair<unsigned int const,VintageHuntingStageData> >::type *stage_id; // [rsp+B0h] [rbp-60h]
  std::tuple_element<1,const std::pair<unsigned int const,VintageHuntingStageData> >::type *hunting_stage_data; // [rsp+B8h] [rbp-58h]
  proto::VintageHuntingStageDataBin *stage_data_bin; // [rsp+C0h] [rbp-50h]
  const std::pair<const proto::VirtualItem,unsigned int> *v29; // [rsp+C8h] [rbp-48h]
  std::tuple_element<0,const std::pair<const proto::VirtualItem,unsigned int> >::type *coin_type; // [rsp+D0h] [rbp-40h]
  std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type *coin_num; // [rsp+D8h] [rbp-38h]
  common::milog::MiLogStream v32; // [rsp+E0h] [rbp-30h] BYREF

  schedule_bin = proto::ActivityScheduleBin::mutable_vintage_bin(bin);
  __for_range = &this->activity_coin_map_;
  __for_begin._M_node = std::map<proto::VirtualItem,unsigned int>::begin(&this->activity_coin_map_)._M_node;
  __for_end._M_node = std::map<proto::VirtualItem,unsigned int>::end(&this->activity_coin_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v29 = std::_Rb_tree_const_iterator<std::pair<proto::VirtualItem const,unsigned int>>::operator*(&__for_begin);
    coin_type = std::get<0ul,proto::VirtualItem const,unsigned int>(v29);
    coin_num = (std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type *)std::get<1ul,proto::VirtualItem const,unsigned int>(v29);
    if ( *(_BYTE *)(((unsigned __int64)coin_type >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)coin_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)coin_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(coin_type);
    }
    v2 = *coin_type;
    if ( *coin_type == ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C )
    {
      if ( *(_BYTE *)(((unsigned __int64)coin_num >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)coin_num & 7) + 3) >= *(_BYTE *)(((unsigned __int64)coin_num >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(coin_num);
      }
      proto::VintageScheduleBin::set_market_coin_c(schedule_bin, *coin_num);
    }
    else
    {
      if ( v2 > ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C )
        goto LABEL_24;
      if ( v2 == ITEM_VIRTUAL_VINTAGE_MARKET_COIN_B )
      {
        if ( *(_BYTE *)(((unsigned __int64)coin_num >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)coin_num & 7) + 3) >= *(_BYTE *)(((unsigned __int64)coin_num >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(coin_num);
        }
        proto::VintageScheduleBin::set_market_coin_b(schedule_bin, *coin_num);
      }
      else
      {
        if ( v2 > ITEM_VIRTUAL_VINTAGE_MARKET_COIN_B )
          goto LABEL_24;
        if ( v2 == ITEM_VIRTUAL_VINTAGE_POPULARITY )
        {
          if ( *(_BYTE *)(((unsigned __int64)coin_num >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)coin_num & 7) + 3) >= *(_BYTE *)(((unsigned __int64)coin_num >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(coin_num);
          }
          proto::VintageScheduleBin::set_popularity(schedule_bin, *coin_num);
        }
        else
        {
          if ( v2 != ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A )
          {
LABEL_24:
            common::milog::MiLogStream::create(
              &v32,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/vintage_activity.cpp",
              "toScheduleBin",
              316);
            v3 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                   &v32,
                   (const char (*)[40])"[VINTAGE] unexpected virtual coin type:");
            common::milog::MiLogStream::operator<<<proto::VirtualItem,(proto::VirtualItem*)0>(v3, coin_type);
            common::milog::MiLogStream::~MiLogStream(&v32);
            goto LABEL_25;
          }
          if ( *(_BYTE *)(((unsigned __int64)coin_num >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)coin_num & 7) + 3) >= *(_BYTE *)(((unsigned __int64)coin_num >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(coin_num);
          }
          proto::VintageScheduleBin::set_market_coin_a(schedule_bin, *coin_num);
        }
      }
    }
LABEL_25:
    std::_Rb_tree_const_iterator<std::pair<proto::VirtualItem const,unsigned int>>::operator++(&__for_begin);
  }
  hunting_stage_map_bin = proto::VintageScheduleBin::mutable_hunting_stage_map(schedule_bin);
  __for_range_0 = &this->hunting_stage_map_;
  __for_begin._M_node = std::map<unsigned int,VintageHuntingStageData>::begin(&this->hunting_stage_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,VintageHuntingStageData>::end(__for_range_0)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)&__for_begin,
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)&__for_end) )
  {
    v25 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageHuntingStageData>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageHuntingStageData> > *const)&__for_begin);
    stage_id = std::get<0ul,unsigned int const,VintageHuntingStageData>(v25);
    hunting_stage_data = (std::tuple_element<1,const std::pair<unsigned int const,VintageHuntingStageData> >::type *)std::get<1ul,unsigned int const,VintageHuntingStageData>(v25);
    stage_data_bin = google::protobuf::Map<unsigned int,proto::VintageHuntingStageDataBin>::operator[](
                       hunting_stage_map_bin,
                       stage_id);
    VintageHuntingStageData::toBin(hunting_stage_data, stage_data_bin);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageHuntingStageData>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageHuntingStageData> > *const)&__for_begin);
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->boss_weak_times_);
  }
  proto::VintageScheduleBin::set_hunting_boss_weak_count(schedule_bin, this->boss_weak_times_);
  present_stage_map_bin = proto::VintageScheduleBin::mutable_present_stage_map(schedule_bin);
  __for_range_1 = &this->present_stage_map_;
  __for_begin._M_node = std::map<unsigned int,VintagePresentStageData>::begin(&this->present_stage_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,VintagePresentStageData>::end(__for_range_1)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)&__for_begin,
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)&__for_end) )
  {
    v21 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentStageData> > *const)&__for_begin);
    stage_id_0 = std::get<0ul,unsigned int const,VintagePresentStageData>(v21);
    present_stage_data = (std::tuple_element<1,const std::pair<unsigned int const,VintagePresentStageData> >::type *)std::get<1ul,unsigned int const,VintagePresentStageData>(v21);
    stage_data_bin_0 = google::protobuf::Map<unsigned int,proto::VintagePresentStageDataBin>::operator[](
                         present_stage_map_bin,
                         stage_id_0);
    VintagePresentStageData::toBin(present_stage_data, stage_data_bin_0);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentStageData> > *const)&__for_begin);
  }
  booth_bin = proto::VintageScheduleBin::mutable_booth_data(schedule_bin);
  VintageBoothUsedItemData::toBin(&this->booth_data_, booth_bin);
  if ( *(_BYTE *)(((unsigned __int64)&this->collected_item_num_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->collected_item_num_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->collected_item_num_);
  }
  proto::VintageScheduleBin::set_collected_item_num(schedule_bin, this->collected_item_num_);
  v4 = proto::VintageScheduleBin::mutable_taken_reward_present_id_list(schedule_bin);
  common::tools::MiscUtils::setToRepeated<std::set<unsigned int>,unsigned int>(&this->taken_reward_present_id_set_, v4);
  camp_stage_map_bin = proto::VintageScheduleBin::mutable_camp_stage_map(schedule_bin);
  __for_range_2 = &this->camp_stage_map_;
  __for_begin._M_node = std::map<unsigned int,VintageCampChallengeStageData>::begin(&this->camp_stage_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,VintageCampChallengeStageData>::end(__for_range_2)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::_Self *)&__for_begin,
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::_Self *)&__for_end) )
  {
    v17 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeStageData>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> > *const)&__for_begin);
    stage_id_1 = std::get<0ul,unsigned int const,VintageCampChallengeStageData>(v17);
    camp_stage_data = (std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeStageData> >::type *)std::get<1ul,unsigned int const,VintageCampChallengeStageData>(v17);
    stage_data_bin_1 = google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageDataBin>::operator[](
                         camp_stage_map_bin,
                         stage_id_1);
    VintageCampChallengeStageData::toBin(camp_stage_data, stage_data_bin_1);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeStageData>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> > *const)&__for_begin);
  }
  if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_content_closed_);
  proto::VintageScheduleBin::set_is_content_closed(schedule_bin, this->is_content_closed_);
  if ( VintageActivity::marketToBin(this, schedule_bin) )
  {
    common::milog::MiLogStream::create(
      &v32,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "toScheduleBin",
      355);
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      &v32,
      (const char (*)[29])"[Vintage] marketToBin failed");
    common::milog::MiLogStream::~MiLogStream(&v32);
  }
  return 0;
};

// Line 361: range 00000000149807D0-0000000014981206
int32_t __cdecl VintageActivity::toClient(VintageActivity *const this, proto::ActivityInfo *activity_info)
{
  common::milog::MiLogStream *v2; // rbx
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // rcx
  common::milog::MiLogStream *v5; // rax
  uint32_t v6; // ecx
  uint32_t BeginTimeByOpenDay; // eax
  ActivityVintageExcelConfigMgr *v8; // rcx
  common::milog::MiLogStream *v9; // rax
  uint32_t v10; // eax
  ActivityVintageExcelConfigMgr *v11; // rcx
  common::milog::MiLogStream *v12; // rax
  uint32_t v13; // eax
  unsigned int val; // [rsp+1Ch] [rbp-104h] BYREF
  uint32_t open_day_0; // [rsp+20h] [rbp-100h]
  uint32_t open_day; // [rsp+24h] [rbp-FCh]
  std::map<unsigned int,VintageHuntingStageData>::iterator __for_begin; // [rsp+28h] [rbp-F8h] BYREF
  std::map<unsigned int,VintageHuntingStageData>::iterator __for_end; // [rsp+30h] [rbp-F0h] BYREF
  proto::VintageActivityDetailInfo *vintage_info; // [rsp+38h] [rbp-E8h]
  google::protobuf::Map<unsigned int,proto::VintageHuntingStageData> *proto_hunting_stage_map; // [rsp+40h] [rbp-E0h]
  std::map<unsigned int,VintageHuntingStageData> *__for_range; // [rsp+48h] [rbp-D8h]
  google::protobuf::Map<unsigned int,proto::VintagePresentStageData> *proto_present_stage_map; // [rsp+50h] [rbp-D0h]
  std::map<unsigned int,VintagePresentStageData> *__for_range_0; // [rsp+58h] [rbp-C8h]
  proto::VintageBoothUsedItemData *proto_booth; // [rsp+60h] [rbp-C0h]
  google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageData> *proto_camp_stage_map; // [rsp+68h] [rbp-B8h]
  std::map<unsigned int,VintageCampChallengeStageData> *__for_range_1; // [rsp+70h] [rbp-B0h]
  const std::pair<unsigned int const,VintageCampChallengeStageData> *v27; // [rsp+78h] [rbp-A8h]
  std::tuple_element<0,const std::pair<unsigned int const,VintageCampChallengeStageData> >::type *stage_id_1; // [rsp+80h] [rbp-A0h]
  std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeStageData> >::type *camp_stage_data; // [rsp+88h] [rbp-98h]
  proto::VintageCampChallengeStageData *proto_stage_data_1; // [rsp+90h] [rbp-90h]
  const std::pair<unsigned int const,VintagePresentStageData> *v31; // [rsp+98h] [rbp-88h]
  std::tuple_element<0,const std::pair<unsigned int const,VintagePresentStageData> >::type *stage_id_0; // [rsp+A0h] [rbp-80h]
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentStageData> >::type *present_stage_data; // [rsp+A8h] [rbp-78h]
  proto::VintagePresentStageData *proto_stage_data_0; // [rsp+B0h] [rbp-70h]
  const std::pair<unsigned int const,VintageHuntingStageData> *v35; // [rsp+B8h] [rbp-68h]
  std::tuple_element<0,const std::pair<unsigned int const,VintageHuntingStageData> >::type *stage_id; // [rsp+C0h] [rbp-60h]
  std::tuple_element<1,const std::pair<unsigned int const,VintageHuntingStageData> >::type *hunting_stage_data; // [rsp+C8h] [rbp-58h]
  proto::VintageHuntingStageData *proto_stage_data; // [rsp+D0h] [rbp-50h]
  const data::ActivityVintageHuntingExcelConfig *hunting_config_ptr; // [rsp+D8h] [rbp-48h]
  std::shared_ptr<Config> v40; // [rsp+E0h] [rbp-40h] BYREF
  common::milog::MiLogStream v41; // [rsp+F0h] [rbp-30h] BYREF

  if ( BaseActivity::toClient((BaseActivity *const)this, activity_info) )
  {
    common::milog::MiLogStream::create(
      &v41,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "toClient",
      364);
    v2 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
           &v41,
           (const char (*)[46])"[VINTAGE] BaseActivity::toClient fails, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v2, &val);
    common::milog::MiLogStream::~MiLogStream(&v41);
    return -1;
  }
  else
  {
    vintage_info = proto::ActivityInfo::mutable_vintage_info(activity_info);
    proto_hunting_stage_map = proto::VintageActivityDetailInfo::mutable_hunting_stage_map(vintage_info);
    __for_range = &this->hunting_stage_map_;
    __for_begin._M_node = std::map<unsigned int,VintageHuntingStageData>::begin(&this->hunting_stage_map_)._M_node;
    __for_end._M_node = std::map<unsigned int,VintageHuntingStageData>::end(&this->hunting_stage_map_)._M_node;
    while ( std::operator!=(&__for_begin, &__for_end) )
    {
      v35 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData>>::operator*(&__for_begin);
      stage_id = std::get<0ul,unsigned int const,VintageHuntingStageData>(v35);
      hunting_stage_data = (std::tuple_element<1,const std::pair<unsigned int const,VintageHuntingStageData> >::type *)std::get<1ul,unsigned int const,VintageHuntingStageData>(v35);
      proto_stage_data = google::protobuf::Map<unsigned int,proto::VintageHuntingStageData>::operator[](
                           proto_hunting_stage_map,
                           stage_id);
      VintageHuntingStageData::toClient(hunting_stage_data, proto_stage_data);
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v40);
      p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v40)->design_config.txt_config_mgr.activity_vintage_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)stage_id >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)stage_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)stage_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(stage_id);
      }
      hunting_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintageHuntingExcelConfig(
                             p_activity_vintage_config_mgr,
                             *stage_id);
      std::shared_ptr<Config>::~shared_ptr(&v40);
      if ( !hunting_config_ptr )
      {
        common::milog::MiLogStream::create(
          &v41,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "toClient",
          379);
        v5 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
               &v41,
               (const char (*)[65])"[VINTAGE] findActivityVintageHuntingExcelConfig fails, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, stage_id);
        common::milog::MiLogStream::~MiLogStream(&v41);
        return -1;
      }
      if ( *(_BYTE *)(((unsigned __int64)&hunting_config_ptr->open_day >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&hunting_config_ptr->open_day >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&hunting_config_ptr->open_day);
      }
      v6 = hunting_config_ptr->open_day;
      if ( *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->schedule_id_);
      }
      BeginTimeByOpenDay = BaseActivity::getBeginTimeByOpenDay(this->schedule_id_, v6);
      proto::VintageHuntingStageData::set_open_time(proto_stage_data, BeginTimeByOpenDay);
      std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData>>::operator++(&__for_begin);
    }
    proto_present_stage_map = proto::VintageActivityDetailInfo::mutable_present_stage_map(vintage_info);
    __for_range_0 = &this->present_stage_map_;
    __for_begin._M_node = std::map<unsigned int,VintagePresentStageData>::begin(&this->present_stage_map_)._M_node;
    __for_end._M_node = std::map<unsigned int,VintagePresentStageData>::end(__for_range_0)._M_node;
    while ( std::operator!=(
              (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)&__for_begin,
              (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)&__for_end) )
    {
      v31 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> > *const)&__for_begin);
      stage_id_0 = std::get<0ul,unsigned int const,VintagePresentStageData>(v31);
      present_stage_data = (std::tuple_element<1,const std::pair<unsigned int const,VintagePresentStageData> >::type *)std::get<1ul,unsigned int const,VintagePresentStageData>(v31);
      proto_stage_data_0 = google::protobuf::Map<unsigned int,proto::VintagePresentStageData>::operator[](
                             proto_present_stage_map,
                             stage_id_0);
      VintagePresentStageData::toClient(present_stage_data, proto_stage_data_0);
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v40);
      v8 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v40)->design_config.txt_config_mgr.activity_vintage_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)stage_id_0 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)stage_id_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)stage_id_0 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(stage_id_0);
      }
      open_day = ActivityVintageExcelConfigMgr::getPresentOpenDayByStageId(v8, *stage_id_0);
      std::shared_ptr<Config>::~shared_ptr(&v40);
      if ( !open_day )
      {
        common::milog::MiLogStream::create(
          &v41,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "toClient",
          394);
        v9 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
               &v41,
               (const char (*)[54])"[VINTAGE] getPresentOpenDayByStageId fails, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, stage_id_0);
        common::milog::MiLogStream::~MiLogStream(&v41);
        return -1;
      }
      if ( *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->schedule_id_);
      }
      v10 = BaseActivity::getBeginTimeByOpenDay(this->schedule_id_, open_day);
      proto::VintagePresentStageData::set_open_time(proto_stage_data_0, v10);
      std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> > *const)&__for_begin);
    }
    proto_booth = proto::VintageActivityDetailInfo::mutable_booth_data(vintage_info);
    VintageBoothUsedItemData::toClient(&this->booth_data_, proto_booth);
    proto_camp_stage_map = proto::VintageActivityDetailInfo::mutable_camp_stage_map(vintage_info);
    __for_range_1 = &this->camp_stage_map_;
    __for_begin._M_node = std::map<unsigned int,VintageCampChallengeStageData>::begin(&this->camp_stage_map_)._M_node;
    __for_end._M_node = std::map<unsigned int,VintageCampChallengeStageData>::end(__for_range_1)._M_node;
    while ( std::operator!=(
              (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::_Self *)&__for_begin,
              (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::_Self *)&__for_end) )
    {
      v27 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> > *const)&__for_begin);
      stage_id_1 = std::get<0ul,unsigned int const,VintageCampChallengeStageData>(v27);
      camp_stage_data = (std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeStageData> >::type *)std::get<1ul,unsigned int const,VintageCampChallengeStageData>(v27);
      proto_stage_data_1 = google::protobuf::Map<unsigned int,proto::VintageCampChallengeStageData>::operator[](
                             proto_camp_stage_map,
                             stage_id_1);
      VintageCampChallengeStageData::toClient(camp_stage_data, proto_stage_data_1);
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v40);
      v11 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v40)->design_config.txt_config_mgr.activity_vintage_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)stage_id_1 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)stage_id_1 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)stage_id_1 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(stage_id_1);
      }
      open_day_0 = ActivityVintageExcelConfigMgr::getCampOpenDayByStageId(v11, *stage_id_1);
      std::shared_ptr<Config>::~shared_ptr(&v40);
      if ( !open_day_0 )
      {
        common::milog::MiLogStream::create(
          &v41,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "toClient",
          411);
        v12 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
                &v41,
                (const char (*)[51])"[VINTAGE] getCampOpenDayByStageId fails, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, stage_id_1);
        common::milog::MiLogStream::~MiLogStream(&v41);
        return -1;
      }
      if ( *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->schedule_id_);
      }
      v13 = BaseActivity::getBeginTimeByOpenDay(this->schedule_id_, open_day_0);
      proto::VintageCampChallengeStageData::set_open_time(proto_stage_data_1, v13);
      std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> > *const)&__for_begin);
    }
    if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
      __asan_report_load1(&this->is_content_closed_);
    proto::VintageActivityDetailInfo::set_is_content_closed(vintage_info, this->is_content_closed_);
    if ( VintageActivity::marketToClient(this, vintage_info) )
    {
      common::milog::MiLogStream::create(
        &v41,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "toClient",
        421);
      common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
        &v41,
        (const char (*)[32])"[Vintage] marketToClient failed");
      common::milog::MiLogStream::~MiLogStream(&v41);
    }
    return 0;
  }
};

// Line 427: range 0000000014981208-0000000014981CA3
void __cdecl VintageActivity::onPreStart(VintageActivity *const this)
{
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int> > > *v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r13
  __int64 v4; // rsi
  uint32_t v5; // ecx
  char v6; // dl
  __int64 v7; // rdx
  __int64 v8; // rsi
  __int64 v9; // rdx
  __int64 v10; // rsi
  __int64 v11; // rdx
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int> > >::pointer v12; // rax
  std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig>::const_iterator *p_for_end; // rsi
  __int64 v14; // rsi
  uint32_t v15; // ecx
  char v16; // dl
  __int64 v17; // rdx
  unsigned __int64 v18; // rax
  uint32_t v19; // ecx
  char v20; // dl
  __int64 v21; // rdx
  __int64 v22; // rsi
  __int64 v23; // rdx
  __int64 v24; // rsi
  __int64 v25; // rdx
  unsigned __int64 v26; // rax
  uint32_t v27; // ecx
  char v28; // al
  __int64 v29; // rsi
  __int64 v30; // rdx
  __int64 v31; // rsi
  __int64 v32; // rdx
  __int64 v33; // rsi
  uint32_t open_stage_id; // ecx
  char v35; // al
  __int64 v36; // rsi
  uint32_t v37; // ecx
  char v38; // dl
  __int64 v39; // rdx
  __int64 v40; // rsi
  uint32_t v41; // ecx
  char v42; // dl
  __int64 v43; // rdx
  __int64 v44; // rsi
  __int64 v45; // rdx
  __int64 v46; // rsi
  __int64 v47; // rdx
  std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig>::const_iterator __for_begin; // [rsp+18h] [rbp-128h] BYREF
  std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig>::const_iterator __for_end; // [rsp+20h] [rbp-120h] BYREF
  const ActivityVintageExcelConfigMgr *config_mgr; // [rsp+28h] [rbp-118h]
  const std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig> *__for_range; // [rsp+30h] [rbp-110h]
  const std::map<unsigned int,std::map<unsigned int,unsigned int>> *stage_present_config_map; // [rsp+38h] [rbp-108h]
  const std::unordered_map<unsigned int,data::ActivityVintageCampChallengeExcelConfig> *__for_range_1; // [rsp+40h] [rbp-100h]
  const std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig> *v54; // [rsp+48h] [rbp-F8h]
  std::tuple_element<0,const std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig> >::type *camp_id; // [rsp+50h] [rbp-F0h]
  std::tuple_element<1,const std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig> >::type *camp_config; // [rsp+58h] [rbp-E8h]
  VintageCampChallengeStageData *camp_stage_data; // [rsp+60h] [rbp-E0h]
  VintageCampChallengeLevelData *camp_level_data; // [rsp+68h] [rbp-D8h]
  VintagePresentStageData *present_stage_data; // [rsp+70h] [rbp-D0h]
  const std::map<unsigned int,unsigned int> *__for_range_0; // [rsp+78h] [rbp-C8h]
  const std::pair<unsigned int const,unsigned int> *v61; // [rsp+80h] [rbp-C0h]
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *present_id; // [rsp+88h] [rbp-B8h]
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *present_index; // [rsp+90h] [rbp-B0h]
  VintagePresentLevelData *present_level_data; // [rsp+98h] [rbp-A8h]
  const std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig> *v65; // [rsp+A0h] [rbp-A0h]
  std::tuple_element<0,const std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig> >::type *stage_id; // [rsp+A8h] [rbp-98h]
  std::tuple_element<1,const std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig> >::type *_; // [rsp+B0h] [rbp-90h]
  VintageHuntingStageData *hunting_stage_data; // [rsp+B8h] [rbp-88h]
  std::shared_ptr<Config> v69; // [rsp+C0h] [rbp-80h] BYREF
  char v70[112]; // [rsp+D0h] [rbp-70h] BYREF

  v1 = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int> > > *)v70;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int> > > *)v2;
  }
  v1->_M_node = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int> > >::_Base_ptr)1102416563;
  v1[1]._M_node = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int> > >::_Base_ptr)"1 32 8 8 iter:443";
  v1[2]._M_node = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int> > >::_Base_ptr)VintageActivity::onPreStart;
  v3 = (unsigned __int64)v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202116352;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v69);
  config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v69)->design_config.txt_config_mgr.activity_vintage_config_mgr;
  std::shared_ptr<Config>::~shared_ptr(&v69);
  std::map<unsigned int,VintageHuntingStageData>::clear(&this->hunting_stage_map_);
  __for_range = &config_mgr->activity_vintage_hunting_excel_config_map;
  __for_begin._M_cur = std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig>::begin(&config_mgr->activity_vintage_hunting_excel_config_map)._M_cur;
  __for_end._M_cur = std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig>::end(&config_mgr->activity_vintage_hunting_excel_config_map)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false>(
            &__for_begin,
            &__for_end) )
  {
    v65 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false,false>::operator*(&__for_begin);
    stage_id = std::get<0ul,unsigned int const,data::ActivityVintageHuntingExcelConfig>(v65);
    _ = (std::tuple_element<1,const std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig> >::type *)std::get<1ul,unsigned int const,data::ActivityVintageHuntingExcelConfig>(v65);
    hunting_stage_data = std::map<unsigned int,VintageHuntingStageData>::operator[](&this->hunting_stage_map_, stage_id);
    v4 = ((unsigned __int8)stage_id & 7u) + 3;
    if ( *(_BYTE *)(((unsigned __int64)stage_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)stage_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)stage_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(stage_id);
    }
    v5 = *stage_id;
    v6 = *(_BYTE *)(((unsigned __int64)hunting_stage_data >> 3) + 0x7FFF8000);
    LOBYTE(v4) = v6 != 0;
    v7 = (v6 != 0) & (unsigned __int8)((char)(((unsigned __int8)hunting_stage_data & 7) + 3) >= v6);
    if ( (_BYTE)v7 )
      __asan_report_store4(hunting_stage_data, v4, v7);
    hunting_stage_data->stage_id = v5;
    v8 = ((_BYTE)hunting_stage_data + 4) & 7;
    v9 = (*(_BYTE *)(((unsigned __int64)&hunting_stage_data->is_open >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v8 >= *(_BYTE *)(((unsigned __int64)&hunting_stage_data->is_open >> 3) + 0x7FFF8000));
    if ( (_BYTE)v9 )
      __asan_report_store1(&hunting_stage_data->is_open, v8, v9);
    hunting_stage_data->is_open = 0;
    v10 = ((_BYTE)hunting_stage_data + 5) & 7;
    v11 = (*(_BYTE *)(((unsigned __int64)&hunting_stage_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v10 >= *(_BYTE *)(((unsigned __int64)&hunting_stage_data->is_finish >> 3) + 0x7FFF8000));
    if ( (_BYTE)v11 )
      __asan_report_store1(&hunting_stage_data->is_finish, v10, v11);
    hunting_stage_data->is_finish = 0;
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false,false>::operator++(&__for_begin);
  }
  std::map<unsigned int,VintagePresentStageData>::clear(&this->present_stage_map_);
  stage_present_config_map = ActivityVintageExcelConfigMgr::getPresentStageDataMap(config_mgr);
  v1[4]._M_node = std::map<unsigned int,std::map<unsigned int,unsigned int>>::begin(stage_present_config_map)._M_node;
  while ( 1 )
  {
    __for_end._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false>::__node_type *)std::map<unsigned int,std::map<unsigned int,unsigned int>>::end(stage_present_config_map)._M_node;
    if ( !std::operator!=(
            v1 + 4,
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int> > >::_Self *)&__for_end) )
      break;
    v12 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int>>>::operator->(v1 + 4);
    present_stage_data = std::map<unsigned int,VintagePresentStageData>::operator[](
                           &this->present_stage_map_,
                           &v12->first);
    __for_range_0 = &std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int>>>::operator->(v1 + 4)->second;
    __for_begin._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false>::__node_type *)std::map<unsigned int,unsigned int>::begin(__for_range_0)._M_node;
    __for_end._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false>::__node_type *)std::map<unsigned int,unsigned int>::end(__for_range_0)._M_node;
    while ( 1 )
    {
      p_for_end = &__for_end;
      if ( !std::operator!=(
              (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_begin,
              (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_end) )
        break;
      v61 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)&__for_begin);
      present_id = std::get<0ul,unsigned int const,unsigned int>(v61);
      present_index = (std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *)std::get<1ul,unsigned int const,unsigned int>(v61);
      present_level_data = std::map<unsigned int,VintagePresentLevelData>::operator[](
                             &present_stage_data->present_level_map,
                             present_index);
      v14 = ((unsigned __int8)present_id & 7u) + 3;
      if ( *(_BYTE *)(((unsigned __int64)present_id >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)present_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)present_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(present_id);
      }
      v15 = *present_id;
      v16 = *(_BYTE *)(((unsigned __int64)present_level_data >> 3) + 0x7FFF8000);
      LOBYTE(v14) = v16 != 0;
      v17 = (v16 != 0) & (unsigned __int8)((char)(((unsigned __int8)present_level_data & 7) + 3) >= v16);
      if ( (_BYTE)v17 )
        __asan_report_store4(present_level_data, v14, v17);
      present_level_data->present_id = v15;
      v18 = (unsigned __int64)std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int>>>::operator->(v1 + 4);
      if ( *(_BYTE *)((v18 >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)((v18 >> 3) + 0x7FFF8000) <= 3 )
        v18 = __asan_report_load4(v18);
      v19 = *(_DWORD *)v18;
      v20 = *(_BYTE *)(((unsigned __int64)&present_level_data->stage_id >> 3) + 0x7FFF8000);
      LOBYTE(v14) = v20 != 0;
      v21 = (v20 != 0) & (unsigned __int8)((char)((((_BYTE)present_level_data + 4) & 7) + 3) >= v20);
      if ( (_BYTE)v21 )
        __asan_report_store4(&present_level_data->stage_id, v14, v21);
      present_level_data->stage_id = v19;
      v22 = ((_BYTE)present_level_data + 8) & 7;
      v23 = (*(_BYTE *)(((unsigned __int64)&present_level_data->is_open >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v22 >= *(_BYTE *)(((unsigned __int64)&present_level_data->is_open >> 3) + 0x7FFF8000));
      if ( (_BYTE)v23 )
        __asan_report_store1(&present_level_data->is_open, v22, v23);
      present_level_data->is_open = 0;
      v24 = ((_BYTE)present_level_data + 9) & 7;
      v25 = (*(_BYTE *)(((unsigned __int64)&present_level_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v24 >= *(_BYTE *)(((unsigned __int64)&present_level_data->is_finish >> 3) + 0x7FFF8000));
      if ( (_BYTE)v25 )
        __asan_report_store1(&present_level_data->is_finish, v24, v25);
      present_level_data->is_finish = 0;
      std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)&__for_begin);
    }
    v26 = (unsigned __int64)std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int>>>::operator->(v1 + 4);
    if ( *(_BYTE *)((v26 >> 3) + 0x7FFF8000) != 0 && *(_BYTE *)((v26 >> 3) + 0x7FFF8000) <= 3 )
      v26 = __asan_report_load4(v26);
    v27 = *(_DWORD *)v26;
    v28 = *(_BYTE *)(((unsigned __int64)present_stage_data >> 3) + 0x7FFF8000);
    if ( v28 != 0 && v28 <= 3 )
    {
      LOBYTE(p_for_end) = v28 != 0;
      __asan_report_store4(present_stage_data, p_for_end, present_stage_data);
    }
    present_stage_data->stage_id = v27;
    v29 = ((_BYTE)present_stage_data + 4) & 7;
    v30 = (*(_BYTE *)(((unsigned __int64)&present_stage_data->is_open >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v29 >= *(_BYTE *)(((unsigned __int64)&present_stage_data->is_open >> 3) + 0x7FFF8000));
    if ( (_BYTE)v30 )
      __asan_report_store1(&present_stage_data->is_open, v29, v30);
    present_stage_data->is_open = 0;
    v31 = ((_BYTE)present_stage_data + 5) & 7;
    v32 = (*(_BYTE *)(((unsigned __int64)&present_stage_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v31 >= *(_BYTE *)(((unsigned __int64)&present_stage_data->is_finish >> 3) + 0x7FFF8000));
    if ( (_BYTE)v32 )
      __asan_report_store1(&present_stage_data->is_finish, v31, v32);
    present_stage_data->is_finish = 0;
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int>>>::operator++(
      v1 + 4,
      0);
  }
  VintageBoothUsedItemData::clear(&this->booth_data_);
  std::map<unsigned int,VintageCampChallengeStageData>::clear(&this->camp_stage_map_);
  __for_range_1 = &config_mgr->activity_vintage_camp_challenge_excel_config_map;
  __for_begin._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false>::__node_type *)std::unordered_map<unsigned int,data::ActivityVintageCampChallengeExcelConfig>::begin(&config_mgr->activity_vintage_camp_challenge_excel_config_map)._M_cur;
  __for_end._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false>::__node_type *)std::unordered_map<unsigned int,data::ActivityVintageCampChallengeExcelConfig>::end(__for_range_1)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig>,false> *)&__for_begin,
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig>,false> *)&__for_end) )
  {
    v54 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig>,false,false> *const)&__for_begin);
    camp_id = std::get<0ul,unsigned int const,data::ActivityVintageCampChallengeExcelConfig>(v54);
    camp_config = (std::tuple_element<1,const std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig> >::type *)std::get<1ul,unsigned int const,data::ActivityVintageCampChallengeExcelConfig>(v54);
    camp_stage_data = std::map<unsigned int,VintageCampChallengeStageData>::operator[](
                        &this->camp_stage_map_,
                        &camp_config->open_stage_id);
    v33 = (((_BYTE)camp_config + 20) & 7u) + 3;
    if ( *(_BYTE *)(((unsigned __int64)&camp_config->open_stage_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)camp_config + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&camp_config->open_stage_id >> 3)
                                                                 + 0x7FFF8000) )
    {
      __asan_report_load4(&camp_config->open_stage_id);
    }
    open_stage_id = camp_config->open_stage_id;
    v35 = *(_BYTE *)(((unsigned __int64)camp_stage_data >> 3) + 0x7FFF8000);
    if ( v35 != 0 && v35 <= 3 )
    {
      LOBYTE(v33) = v35 != 0;
      __asan_report_store4(camp_stage_data, v33, camp_stage_data);
    }
    camp_stage_data->stage_id = open_stage_id;
    camp_level_data = std::map<unsigned int,VintageCampChallengeLevelData>::operator[](
                        &camp_stage_data->camp_level_map,
                        &camp_config->open_order);
    v36 = ((unsigned __int8)camp_id & 7u) + 3;
    if ( *(_BYTE *)(((unsigned __int64)camp_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)camp_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)camp_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(camp_id);
    }
    v37 = *camp_id;
    v38 = *(_BYTE *)(((unsigned __int64)camp_level_data >> 3) + 0x7FFF8000);
    LOBYTE(v36) = v38 != 0;
    v39 = (v38 != 0) & (unsigned __int8)((char)(((unsigned __int8)camp_level_data & 7) + 3) >= v38);
    if ( (_BYTE)v39 )
      __asan_report_store4(camp_level_data, v36, v39);
    camp_level_data->level_id = v37;
    v40 = (((_BYTE)camp_config + 20) & 7u) + 3;
    if ( *(_BYTE *)(((unsigned __int64)&camp_config->open_stage_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)camp_config + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&camp_config->open_stage_id >> 3)
                                                                 + 0x7FFF8000) )
    {
      __asan_report_load4(&camp_config->open_stage_id);
    }
    v41 = camp_config->open_stage_id;
    v42 = *(_BYTE *)(((unsigned __int64)&camp_level_data->stage_id >> 3) + 0x7FFF8000);
    LOBYTE(v40) = v42 != 0;
    v43 = (v42 != 0) & (unsigned __int8)((char)((((_BYTE)camp_level_data + 4) & 7) + 3) >= v42);
    if ( (_BYTE)v43 )
      __asan_report_store4(&camp_level_data->stage_id, v40, v43);
    camp_level_data->stage_id = v41;
    v44 = ((_BYTE)camp_level_data + 8) & 7;
    v45 = (*(_BYTE *)(((unsigned __int64)&camp_level_data->is_open >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v44 >= *(_BYTE *)(((unsigned __int64)&camp_level_data->is_open >> 3) + 0x7FFF8000));
    if ( (_BYTE)v45 )
      __asan_report_store1(&camp_level_data->is_open, v44, v45);
    camp_level_data->is_open = 0;
    v46 = ((_BYTE)camp_level_data + 9) & 7;
    v47 = (*(_BYTE *)(((unsigned __int64)&camp_level_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v46 >= *(_BYTE *)(((unsigned __int64)&camp_level_data->is_finish >> 3) + 0x7FFF8000));
    if ( (_BYTE)v47 )
      __asan_report_store1(&camp_level_data->is_finish, v46, v47);
    camp_level_data->is_finish = 0;
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintageCampChallengeExcelConfig>,false,false> *const)&__for_begin);
  }
  if ( v70 == (char *)v1 )
  {
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    v1->_M_node = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::map<unsigned int,unsigned int> > >::_Base_ptr)1172321806;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 479: range 0000000014981CA4-0000000014981CCA
void __cdecl VintageActivity::onStart(VintageActivity *const this)
{
  VintageActivity::registerEventObserver(this);
  VintageActivity::registerOfflineOp(this);
};

// Line 485: range 0000000014981CCC-0000000014981D3A
void __cdecl VintageActivity::onLogin(VintageActivity *const this)
{
  BaseActivity::onLogin((BaseActivity *const)this);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  if ( !Player::isRelogin(this->player_) )
  {
    VintageActivity::initPresentGroups(this);
    VintageActivity::tryUnregisterHuntingGroupBundle(this);
  }
};

// Line 496: range 0000000014981D3C-0000000014981DA5
int32_t __cdecl VintageActivity::init(VintageActivity *const this)
{
  if ( BaseActivity::isOpening((const BaseActivity *const)this, 0)
    && !BaseActivity::isSettled((const BaseActivity *const)this) )
  {
    VintageActivity::registerEventObserver(this);
    VintageActivity::registerOfflineOp(this);
  }
  return 0;
};

// Line 507: range 0000000014981DA6-0000000014981E13
void __cdecl VintageActivity::onSettle(VintageActivity *const this)
{
  if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_content_closed_);
  if ( !this->is_content_closed_ )
    VintageActivity::closeContent(this);
  VintageActivity::unregisterEventObserver(this);
};

// Line 517: range 0000000014981E14-0000000014981EED
void __cdecl VintageActivity::closeContent(VintageActivity *const this)
{
  common::milog::MiLogStream v1; // [rsp+10h] [rbp-30h] BYREF

  common::milog::MiLogStream::create(
    &v1,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/vintage_activity.cpp",
    "closeContent",
    518);
  common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(&v1, (const char (*)[25])"[VINTAGE] close content.");
  common::milog::MiLogStream::~MiLogStream(&v1);
  if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_content_closed_, "[VINTAGE] close content.", &this->is_content_closed_);
  this->is_content_closed_ = 1;
  VintageActivity::unregisterPresentGroups(this);
  BaseActivity::notifyClientData((BaseActivity *const)this, 0);
};

// Line 525: range 0000000014981EEE-00000000149822FF
void __cdecl VintageActivity::onClear(VintageActivity *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r12
  std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type *v4; // rax
  uint32_t v5; // edi
  std::map<proto::VirtualItem,unsigned int>::iterator __for_begin; // [rsp+10h] [rbp-B0h] BYREF
  std::map<proto::VirtualItem,unsigned int>::iterator __for_end; // [rsp+18h] [rbp-A8h] BYREF
  std::map<proto::VirtualItem,unsigned int> *__for_range; // [rsp+20h] [rbp-A0h]
  const std::pair<const proto::VirtualItem,unsigned int> *v10; // [rsp+28h] [rbp-98h]
  std::tuple_element<0,const std::pair<const proto::VirtualItem,unsigned int> >::type *coin_type; // [rsp+30h] [rbp-90h]
  std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type *coin_num; // [rsp+38h] [rbp-88h]
  common::milog::MiLogStream v13; // [rsp+40h] [rbp-80h] BYREF
  char v14[96]; // [rsp+60h] [rbp-60h] BYREF

  v1 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 8 14 sub_reason:526";
  *(_QWORD *)(v1 + 16) = VintageActivity::onClear;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202116352;
  SubItemReason::SubItemReason((SubItemReason *const)(v1 + 32), ACTION_REASON_ACTIVITY_EXPIRE_ITEM);
  __for_range = &this->activity_coin_map_;
  __for_begin._M_node = std::map<proto::VirtualItem,unsigned int>::begin(&this->activity_coin_map_)._M_node;
  __for_end._M_node = std::map<proto::VirtualItem,unsigned int>::end(&this->activity_coin_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v10 = std::_Rb_tree_iterator<std::pair<proto::VirtualItem const,unsigned int>>::operator*(&__for_begin);
    coin_type = std::get<0ul,proto::VirtualItem const,unsigned int>(v10);
    v4 = (std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type *)std::get<1ul,proto::VirtualItem const,unsigned int>(v10);
    coin_num = v4;
    if ( *(_BYTE *)(((unsigned __int64)v4 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v4 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v4 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v4);
    }
    if ( *coin_num )
    {
      v5 = *coin_num;
      if ( *(_BYTE *)(((unsigned __int64)coin_type >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)coin_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)coin_type >> 3) + 0x7FFF8000) )
      {
        v5 = (unsigned int)coin_type;
        __asan_report_load4(coin_type);
      }
      if ( VintageActivity::subActivityCoin(this, *coin_type, v5, (const SubItemReason *)(v1 + 32), 0) )
      {
        common::milog::MiLogStream::create(
          &v13,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "onClear",
          533);
        common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
          &v13,
          (const char (*)[33])"[VINTAGE] subActivityCoin failed");
        common::milog::MiLogStream::~MiLogStream(&v13);
      }
    }
    std::_Rb_tree_iterator<std::pair<proto::VirtualItem const,unsigned int>>::operator++(&__for_begin);
  }
  std::map<proto::VirtualItem,unsigned int>::clear(&this->activity_coin_map_);
  std::map<unsigned int,VintageHuntingStageData>::clear(&this->hunting_stage_map_);
  std::map<unsigned int,VintagePresentStageData>::clear(&this->present_stage_map_);
  VintageBoothUsedItemData::clear(&this->booth_data_);
  std::map<unsigned int,VintageCampChallengeStageData>::clear(&this->camp_stage_map_);
  if ( *(_BYTE *)(((unsigned __int64)&this->collected_item_num_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->collected_item_num_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->collected_item_num_, &__for_end, &this->collected_item_num_);
  }
  this->collected_item_num_ = 0;
  std::set<unsigned int>::clear(&this->taken_reward_present_id_set_);
  if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_content_closed_, &__for_end, &this->is_content_closed_);
  this->is_content_closed_ = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->boss_weak_times_, &__for_end, &this->boss_weak_times_);
  }
  this->boss_weak_times_ = 0;
  VintageActivity::clearMarketData(this);
  if ( v14 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 553: range 0000000014982300-00000000149825D2
void __cdecl VintageActivity::tryUnregisterHuntingGroupBundle(VintageActivity *const this)
{
  PlayerGroupLinkComp *GroupLinkComp; // rcx
  PlayerGroupLinkComp *v2; // rcx
  std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig>::const_iterator __for_begin; // [rsp+10h] [rbp-90h] BYREF
  std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig>::const_iterator __for_end; // [rsp+18h] [rbp-88h] BYREF
  std::vector<unsigned int>::const_iterator __for_begin_0; // [rsp+20h] [rbp-80h] BYREF
  std::vector<unsigned int>::const_iterator __for_end_0; // [rsp+28h] [rbp-78h] BYREF
  const std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig> *__for_range; // [rsp+30h] [rbp-70h]
  const std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig> *v8; // [rsp+38h] [rbp-68h]
  std::tuple_element<0,const std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig> >::type *_; // [rsp+40h] [rbp-60h]
  std::tuple_element<1,const std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig> >::type *hunting_config; // [rsp+48h] [rbp-58h]
  const std::vector<unsigned int> *__for_range_0; // [rsp+50h] [rbp-50h]
  const unsigned int *group_bundle_id; // [rsp+58h] [rbp-48h]
  std::shared_ptr<Config> v13; // [rsp+60h] [rbp-40h] BYREF
  common::milog::MiLogStream v14; // [rsp+70h] [rbp-30h] BYREF

  common::milog::MiLogStream::create(
    &v14,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/vintage_activity.cpp",
    "tryUnregisterHuntingGroupBundle",
    554);
  common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
    &v14,
    (const char (*)[49])"[VINTAGE] tryUnregisterHuntingGroupBundle begin.");
  common::milog::MiLogStream::~MiLogStream(&v14);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v13);
  __for_range = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v13)->design_config.txt_config_mgr.activity_vintage_config_mgr.activity_vintage_hunting_excel_config_map;
  std::shared_ptr<Config>::~shared_ptr(&v13);
  __for_begin._M_cur = std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig>::begin(__for_range)._M_cur;
  __for_end._M_cur = std::unordered_map<unsigned int,data::ActivityVintageHuntingExcelConfig>::end(__for_range)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false>(
            &__for_begin,
            &__for_end) )
  {
    v8 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false,false>::operator*(&__for_begin);
    _ = std::get<0ul,unsigned int const,data::ActivityVintageHuntingExcelConfig>(v8);
    hunting_config = (std::tuple_element<1,const std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig> >::type *)std::get<1ul,unsigned int const,data::ActivityVintageHuntingExcelConfig>(v8);
    __for_range_0 = &hunting_config->group_bundle_id_list;
    __for_begin_0._M_current = std::vector<unsigned int>::begin(&hunting_config->group_bundle_id_list)._M_current;
    __for_end_0._M_current = std::vector<unsigned int>::end(__for_range_0)._M_current;
    while ( __gnu_cxx::operator!=<unsigned int const*,std::vector<unsigned int>>(&__for_begin_0, &__for_end_0) )
    {
      group_bundle_id = __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator*(&__for_begin_0);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      GroupLinkComp = Player::getGroupLinkComp(this->player_);
      if ( *(_BYTE *)(((unsigned __int64)group_bundle_id >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)group_bundle_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_bundle_id >> 3)
                                                                          + 0x7FFF8000) )
      {
        __asan_report_load4(group_bundle_id);
      }
      if ( PlayerGroupLinkComp::isGroupBundleRegistered(GroupLinkComp, *group_bundle_id) )
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        v2 = Player::getGroupLinkComp(this->player_);
        if ( *(_BYTE *)(((unsigned __int64)group_bundle_id >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)group_bundle_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_bundle_id >> 3)
                                                                            + 0x7FFF8000) )
        {
          __asan_report_load4(group_bundle_id);
        }
        PlayerGroupLinkComp::unregisterGroupBundle(v2, *group_bundle_id, 1);
      }
      __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator++(&__for_begin_0);
    }
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintageHuntingExcelConfig>,false,false>::operator++(&__for_begin);
  }
};

// Line 568: range 00000000149825D4-0000000014982E11
bool __cdecl VintageActivity::checkCondIsMeet(VintageActivity *const this, const data::NewActivityCond *cond)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  data::NewActivityCondType type; // eax
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // r13
  bool result; // al
  __gnu_cxx::__normal_iterator<int const*,std::vector<int> >::reference v10; // rax
  _DWORD *v11; // rdx
  common::milog::MiLogStream *v12; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::pointer v13; // rdx
  bool *p_is_finish; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // r13
  uint32_t *v18; // rax
  uint32_t *v19; // rdx
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // r13
  uint32_t *v23; // rax
  uint32_t *v24; // rdx
  uint32_t count; // [rsp+18h] [rbp-C8h]
  uint32_t round; // [rsp+1Ch] [rbp-C4h]
  std::vector<int>::const_iterator __for_begin; // [rsp+20h] [rbp-C0h] BYREF
  std::vector<int>::const_iterator __for_end; // [rsp+28h] [rbp-B8h] BYREF
  unsigned __int64 val; // [rsp+30h] [rbp-B0h] BYREF
  const std::vector<int> *__for_range; // [rsp+38h] [rbp-A8h]
  common::milog::MiLogStream v31; // [rsp+40h] [rbp-A0h] BYREF
  char v32[128]; // [rsp+60h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v32;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 12 stage_id:579 64 8 8 iter:581";
  *(_QWORD *)(v2 + 16) = VintageActivity::checkCondIsMeet;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -202116352;
  if ( *(_BYTE *)(((unsigned __int64)&cond->type >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cond->type >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&cond->type);
  }
  type = cond->type;
  if ( type == NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND_SETTLE )
  {
    if ( *(char *)(((unsigned __int64)&this->is_in_store_settle_duration_ >> 3) + 0x7FFF8000) < 0 )
      __asan_report_load1(&this->is_in_store_settle_duration_);
    if ( this->is_in_store_settle_duration_ )
      goto LABEL_44;
    if ( *(char *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000) < 0 )
      __asan_report_load1(&this->is_store_content_finish_);
    if ( this->is_store_content_finish_ )
LABEL_44:
      result = 1;
    else
      result = 0;
  }
  else
  {
    if ( type > NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND_SETTLE )
    {
LABEL_46:
      result = BaseActivity::checkCondIsMeet((BaseActivity *const)this, cond);
      goto LABEL_47;
    }
    switch ( type )
    {
      case NEW_ACTIVITY_COND_VINTAGE_MARKET_COIN_A:
        if ( std::vector<int>::size(&cond->param) )
        {
          v23 = (uint32_t *)std::vector<int>::operator[](&cond->param, 0LL);
          v24 = v23;
          if ( *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v23 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v23);
          }
          count = *v24;
          result = count <= VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A);
        }
        else
        {
          common::milog::MiLogStream::create(
            &v31,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "checkCondIsMeet",
            610);
          v20 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  &v31,
                  (const char (*)[22])"[Vintage] cond_type: ");
          v21 = common::milog::MiLogStream::operator<<<data::NewActivityCondType,(data::NewActivityCondType*)0>(
                  v20,
                  &cond->type);
          v22 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                  v21,
                  (const char (*)[21])" param num invalid: ");
          val = std::vector<int>::size(&cond->param);
          common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v22, &val);
          common::milog::MiLogStream::~MiLogStream(&v31);
          result = 0;
        }
        break;
      case NEW_ACTIVITY_COND_FINISH_SEEK_PRESENT_STAGE:
        if ( std::vector<int>::size(&cond->param) )
        {
          __for_range = &cond->param;
          __for_begin._M_current = std::vector<int>::begin(&cond->param)._M_current;
          __for_end._M_current = std::vector<int>::end(&cond->param)._M_current;
          while ( __gnu_cxx::operator!=<int const*,std::vector<int>>(&__for_begin, &__for_end) )
          {
            v10 = __gnu_cxx::__normal_iterator<int const*,std::vector<int>>::operator*(&__for_begin);
            v11 = v10;
            if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v10 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v10);
            }
            *(_DWORD *)(v2 + 48) = *v11;
            *(std::map<unsigned int,VintagePresentStageData>::iterator *)(v2 + 64) = std::map<unsigned int,VintagePresentStageData>::find(
                                                                                       &this->present_stage_map_,
                                                                                       (const std::map<unsigned int,VintagePresentStageData>::key_type *)(v2 + 48));
            val = (unsigned __int64)std::map<unsigned int,VintagePresentStageData>::end(&this->present_stage_map_)._M_node;
            if ( std::operator==(
                   (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)(v2 + 64),
                   (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)&val) )
            {
              common::milog::MiLogStream::create(
                &v31,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/vintage_activity.cpp",
                "checkCondIsMeet",
                584);
              v12 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                      &v31,
                      (const char (*)[35])"[VINTAGE] present_stage_id error: ");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v12,
                (const unsigned int *)(v2 + 48));
              common::milog::MiLogStream::~MiLogStream(&v31);
              result = 0;
              goto LABEL_47;
            }
            v13 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> > *const)(v2 + 64));
            p_is_finish = &v13->second.is_finish;
            if ( *(_BYTE *)(((unsigned __int64)p_is_finish >> 3) + 0x7FFF8000) != 0
              && ((unsigned __int8)p_is_finish & 7) >= *(_BYTE *)(((unsigned __int64)p_is_finish >> 3) + 0x7FFF8000) )
            {
              __asan_report_load1(p_is_finish);
            }
            if ( !v13->second.is_finish )
            {
              result = 0;
              goto LABEL_47;
            }
            __gnu_cxx::__normal_iterator<int const*,std::vector<int>>::operator++(&__for_begin);
          }
          result = 1;
        }
        else
        {
          common::milog::MiLogStream::create(
            &v31,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "checkCondIsMeet",
            575);
          v6 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                 &v31,
                 (const char (*)[21])"[VINTAGE]cond_type: ");
          v7 = common::milog::MiLogStream::operator<<<data::NewActivityCondType,(data::NewActivityCondType*)0>(
                 v6,
                 &cond->type);
          v8 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                 v7,
                 (const char (*)[21])" param num invalid: ");
          val = std::vector<int>::size(&cond->param);
          common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v8, &val);
          common::milog::MiLogStream::~MiLogStream(&v31);
          result = 0;
        }
        break;
      case NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND:
        if ( std::vector<int>::size(&cond->param) )
        {
          v18 = (uint32_t *)std::vector<int>::operator[](&cond->param, 0LL);
          v19 = v18;
          if ( *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v18 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v18);
          }
          round = *v19;
          if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&this->store_round_);
          }
          result = round < this->store_round_;
        }
        else
        {
          common::milog::MiLogStream::create(
            &v31,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "checkCondIsMeet",
            600);
          v15 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                  &v31,
                  (const char (*)[22])"[Vintage] cond_type: ");
          v16 = common::milog::MiLogStream::operator<<<data::NewActivityCondType,(data::NewActivityCondType*)0>(
                  v15,
                  &cond->type);
          v17 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                  v16,
                  (const char (*)[21])" param num invalid: ");
          val = std::vector<int>::size(&cond->param);
          common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v17, &val);
          common::milog::MiLogStream::~MiLogStream(&v31);
          result = 0;
        }
        break;
      default:
        goto LABEL_46;
    }
  }
LABEL_47:
  if ( v32 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 628: range 0000000014982E12-0000000014983F4B
int32_t __cdecl VintageActivity::execAction(VintageActivity *const this, const data::NewActivityExec *action_exec)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  unsigned __int64 v4; // r13
  common::milog::MiLogStream *v5; // rbx
  common::milog::MiLogStream *v6; // rax
  int32_t result; // eax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rbx
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  __int64 v12; // rsi
  __int64 v13; // rdx
  common::milog::MiLogStream *v14; // rbx
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rbx
  const std::string *v18; // rax
  common::milog::MiLogStream *v19; // rbx
  const std::string *v20; // rax
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rbx
  const std::string *v23; // rax
  common::milog::MiLogStream *v24; // rbx
  const std::string *v25; // rax
  __int64 v26; // rsi
  __int64 v27; // rdx
  PlayerWatcherComp *WatcherComp; // rax
  __int64 v29; // rsi
  __int64 v30; // rdx
  __int64 v31; // rsi
  __int64 v32; // rdx
  __int64 v33; // rdx
  bool is_interrupt; // [rsp+1Fh] [rbp-C1h]
  std::vector<std::string>::const_iterator __for_begin; // [rsp+20h] [rbp-C0h] BYREF
  std::vector<std::string>::const_iterator __for_end; // [rsp+28h] [rbp-B8h] BYREF
  const std::vector<std::string> *__for_range_1; // [rsp+30h] [rbp-B0h]
  const std::string *stage_id_str_1; // [rsp+38h] [rbp-A8h]
  const std::vector<std::string> *__for_range_0; // [rsp+40h] [rbp-A0h]
  const std::string *stage_id_str_0; // [rsp+48h] [rbp-98h]
  const std::vector<std::string> *__for_range; // [rsp+50h] [rbp-90h]
  const std::string *stage_id_str; // [rsp+58h] [rbp-88h]
  common::milog::MiLogStream v43; // [rsp+60h] [rbp-80h] BYREF
  char v44[96]; // [rsp+80h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v44;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 4 7 num:771";
  *(_QWORD *)(v2 + 16) = VintageActivity::execAction;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202116348;
  if ( *(_BYTE *)(((unsigned __int64)&action_exec->type >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&action_exec->type >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&action_exec->type);
  }
  switch ( action_exec->type )
  {
    case NEW_ACTIVITY_ACTION_OPEN_VINTAGE_HUNTING_STAGE:
      if ( std::vector<std::string>::size(&action_exec->param) )
      {
        __for_range = &action_exec->param;
        __for_begin._M_current = std::vector<std::string>::begin(&action_exec->param)._M_current;
        __for_end._M_current = std::vector<std::string>::end(&action_exec->param)._M_current;
        while ( 1 )
        {
          if ( !__gnu_cxx::operator!=<std::string const*,std::vector<std::string>>(&__for_begin, &__for_end) )
            goto LABEL_36;
          stage_id_str = __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator*(&__for_begin);
          *(_DWORD *)(v2 + 32) = 0;
          if ( !common::tools::StringUtils::strToNum<unsigned int>(stage_id_str, (unsigned int *)(v2 + 32), 1) )
          {
            if ( VintageActivity::openHuntingStage(this, *(_DWORD *)(v2 + 32)) )
              break;
          }
          __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator++(&__for_begin);
        }
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          648);
        v8 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
               &v43,
               (const char (*)[46])"[VINTAGE] openHuntingStage failed, stage_id: ");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v2 + 32));
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
      }
      else
      {
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          635);
        v5 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
               &v43,
               (const char (*)[29])"[VINTAGE] action param size ");
        __for_end._M_current = (const std::string *)std::vector<std::string>::size(&action_exec->param);
        v6 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
               v5,
               (const unsigned __int64 *)&__for_end);
        common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v6, (const char (*)[12])off_25510D20);
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
      }
      goto LABEL_86;
    case NEW_ACTIVITY_ACTION_OPEN_VINTAGE_PRESENT_STAGE:
      if ( std::vector<std::string>::size(&action_exec->param) )
      {
        __for_range_0 = &action_exec->param;
        __for_begin._M_current = std::vector<std::string>::begin(&action_exec->param)._M_current;
        __for_end._M_current = std::vector<std::string>::end(&action_exec->param)._M_current;
        while ( 1 )
        {
          if ( !__gnu_cxx::operator!=<std::string const*,std::vector<std::string>>(&__for_begin, &__for_end) )
            goto LABEL_36;
          stage_id_str_0 = __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator*(&__for_begin);
          *(_DWORD *)(v2 + 32) = 0;
          if ( !common::tools::StringUtils::strToNum<unsigned int>(stage_id_str_0, (unsigned int *)(v2 + 32), 1) )
          {
            if ( VintageActivity::openPresentStage(this, *(_DWORD *)(v2 + 32)) )
              break;
          }
          __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator++(&__for_begin);
        }
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          671);
        v11 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                &v43,
                (const char (*)[46])"[VINTAGE] openPresentStage failed, stage_id: ");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v2 + 32));
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
      }
      else
      {
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          659);
        v9 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
               &v43,
               (const char (*)[29])"[VINTAGE] action param size ");
        __for_end._M_current = (const std::string *)std::vector<std::string>::size(&action_exec->param);
        v10 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                v9,
                (const unsigned __int64 *)&__for_end);
        common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v10, (const char (*)[12])off_25510D20);
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
      }
      goto LABEL_86;
    case NEW_ACTIVITY_ACTION_OPEN_VINTAGE_CAMP_STAGE:
      if ( std::vector<std::string>::size(&action_exec->param) )
      {
        __for_range_1 = &action_exec->param;
        __for_begin._M_current = std::vector<std::string>::begin(&action_exec->param)._M_current;
        __for_end._M_current = std::vector<std::string>::end(&action_exec->param)._M_current;
        while ( 1 )
        {
          if ( !__gnu_cxx::operator!=<std::string const*,std::vector<std::string>>(&__for_begin, &__for_end) )
          {
LABEL_36:
            BaseActivity::notifyClientData((BaseActivity *const)this, 0);
            goto LABEL_85;
          }
          stage_id_str_1 = __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator*(&__for_begin);
          *(_DWORD *)(v2 + 32) = 0;
          if ( !common::tools::StringUtils::strToNum<unsigned int>(stage_id_str_1, (unsigned int *)(v2 + 32), 1) )
          {
            if ( VintageActivity::openCampStage(this, *(_DWORD *)(v2 + 32)) )
              break;
          }
          __gnu_cxx::__normal_iterator<std::string const*,std::vector<std::string>>::operator++(&__for_begin);
        }
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          700);
        v16 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v43,
                (const char (*)[43])"[VINTAGE] openCampStage failed, stage_id: ");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, (const unsigned int *)(v2 + 32));
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
      }
      else
      {
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          688);
        v14 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                &v43,
                (const char (*)[29])"[VINTAGE] action param size ");
        __for_end._M_current = (const std::string *)std::vector<std::string>::size(&action_exec->param);
        v15 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                v14,
                (const unsigned __int64 *)&__for_end);
        common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v15, (const char (*)[12])off_25510D20);
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
      }
      goto LABEL_86;
    case NEW_ACTIVITY_ACTION_OPEN_VINTAGE_OPEN_BOOTH:
      v12 = ((_BYTE)this + 76) & 7;
      v13 = (*(_BYTE *)(((unsigned __int64)&this->booth_data_.is_open >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v12 >= *(_BYTE *)(((unsigned __int64)&this->booth_data_.is_open >> 3) + 0x7FFF8000));
      if ( (_BYTE)v13 )
        __asan_report_store1(&this->booth_data_.is_open, v12, v13);
      this->booth_data_.is_open = 1;
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_CLOSE_VINTAGE_CONTENT:
      VintageActivity::closeContent(this);
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_CONTENT:
      if ( *(char *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000) < 0 )
        __asan_report_store1(&this->is_market_content_open_, action_exec, &this->is_market_content_open_);
      this->is_market_content_open_ = 1;
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_SHOP:
      if ( !std::vector<std::string>::size(&action_exec->param) )
      {
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          731);
        v17 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                &v43,
                (const char (*)[47])"[Vintage] param size not enough, param.size():");
        __for_end._M_current = (const std::string *)std::vector<std::string>::size(&action_exec->param);
        common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
          v17,
          (const unsigned __int64 *)&__for_end);
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
        goto LABEL_86;
      }
      *(_DWORD *)(v2 + 32) = 0;
      v18 = std::vector<std::string>::operator[](&action_exec->param, 0LL);
      if ( common::tools::StringUtils::strToNum<unsigned int>(v18, (unsigned int *)(v2 + 32), 1) )
      {
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          737);
        v19 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
                &v43,
                (const char (*)[34])"[Vintage] strToNum falied, param:");
        v20 = std::vector<std::string>::operator[](&action_exec->param, 0LL);
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v19, v20);
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
        goto LABEL_86;
      }
      if ( VintageActivity::internalOpenStore(this, *(_DWORD *)(v2 + 32)) )
      {
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          742);
        v21 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                &v43,
                (const char (*)[47])"[Vintage] internalOpenStore falied, store_id: ");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, (const unsigned int *)(v2 + 32));
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
        goto LABEL_86;
      }
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_VINTAGE_CLOSE_MARKET_CONTENT:
      if ( *(char *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000) < 0 )
        __asan_report_store1(&this->is_market_content_open_, action_exec, &this->is_market_content_open_);
      this->is_market_content_open_ = 0;
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_VINTAGE_OPEN_MARKET_SHOP_CONTENT:
      if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->store_round_);
      }
      if ( this->store_round_ )
      {
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          759);
        common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
          &v43,
          (const char (*)[43])"[Vintage] market shop content already open");
        common::milog::MiLogStream::~MiLogStream(&v43);
      }
      else
      {
        VintageActivity::updateStoreRound(this);
        VintageActivity::initStoreHelpSkill(this);
        BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      }
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_VINTAGE_INTERRUPT_MARKET_SHOP_CONTENT:
      if ( std::vector<std::string>::size(&action_exec->param) )
      {
        *(_DWORD *)(v2 + 32) = 0;
        v23 = std::vector<std::string>::operator[](&action_exec->param, 0LL);
        if ( common::tools::StringUtils::strToNum<unsigned int>(v23, (unsigned int *)(v2 + 32), 1) )
        {
          common::milog::MiLogStream::create(
            &v43,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "execAction",
            774);
          v24 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
                  &v43,
                  (const char (*)[34])"[Vintage] strToNum falied, param:");
          v25 = std::vector<std::string>::operator[](&action_exec->param, 0LL);
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v24, v25);
          common::milog::MiLogStream::~MiLogStream(&v43);
          result = -1;
        }
        else
        {
          is_interrupt = *(_DWORD *)(v2 + 32) == 0;
          v26 = ((_BYTE)this + 105) & 7;
          v27 = (*(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v26 >= *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000));
          if ( (_BYTE)v27 )
            __asan_report_store1(&this->is_store_content_interrupt_, v26, v27);
          this->is_store_content_interrupt_ = is_interrupt;
          BaseActivity::notifyClientData((BaseActivity *const)this, 0);
LABEL_85:
          result = 0;
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "execAction",
          768);
        v22 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                &v43,
                (const char (*)[47])"[Vintage] param size not enough, param.size():");
        __for_end._M_current = (const std::string *)std::vector<std::string>::size(&action_exec->param);
        common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
          v22,
          (const unsigned __int64 *)&__for_end);
        common::milog::MiLogStream::~MiLogStream(&v43);
        result = -1;
      }
LABEL_86:
      if ( v44 == (char *)v2 )
      {
        *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
      }
      else
      {
        *(_QWORD *)v2 = 1172321806LL;
        *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
      }
      return result;
    case NEW_ACTIVITY_ACTION_VINTAGE_FINISH_MARKET_SHOP_CONTENT:
      if ( *(char *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000) < 0 )
        __asan_report_load1(&this->is_store_content_finish_);
      if ( !this->is_store_content_finish_ )
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        WatcherComp = Player::getWatcherComp(this->player_);
        PlayerWatcherComp::triggerVintageMarketContentFinishEvent(WatcherComp);
      }
      if ( *(char *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000) < 0 )
        __asan_report_store1(&this->is_store_content_finish_, action_exec, &this->is_store_content_finish_);
      this->is_store_content_finish_ = 1;
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_VINTAGE_FINISH_MARKET_CONTENT:
      v29 = ((_BYTE)this - 15) & 7;
      v30 = (*(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v29 >= *(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000));
      if ( (_BYTE)v30 )
        __asan_report_store1(&this->is_market_content_finish_, v29, v30);
      this->is_market_content_finish_ = 1;
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_VINTAGE_SHOP_UNLOCK_STRATEGY_MODULE:
      if ( *(char *)(((unsigned __int64)&this->is_strategy_module_open_ >> 3) + 0x7FFF8000) < 0 )
        __asan_report_store1(&this->is_strategy_module_open_, action_exec, &this->is_strategy_module_open_);
      this->is_strategy_module_open_ = 1;
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_VINTAGE_SHOP_UNLOCK_HELP_MODULE:
      v31 = ((_BYTE)this - 87) & 7;
      v32 = (*(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v31 >= *(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000));
      if ( (_BYTE)v32 )
        __asan_report_store1(&this->is_help_module_open_, v31, v32);
      this->is_help_module_open_ = 1;
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      goto LABEL_85;
    case NEW_ACTIVITY_ACTION_VINTAGE_SHOP_REFRESH_HELP_CD:
      v33 = (*(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this - 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000));
      if ( (_BYTE)v33 )
        __asan_report_store4(&this->next_can_use_help_round_, (((_BYTE)this - 84) & 7u) + 3, v33);
      this->next_can_use_help_round_ = 0;
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      goto LABEL_85;
    default:
      result = BaseActivity::execAction((BaseActivity *const)this, action_exec);
      goto LABEL_86;
  }
};

// Line 824: range 0000000014983F4C-00000000149847AC
void __cdecl VintageActivity::registerEventObserver(VintageActivity *const this)
{
  unsigned __int64 v1; // r14
  __int64 v2; // rax
  _DWORD *v3; // r15
  PlayerEventComp *EventComp; // r12
  PlayerEventComp *v5; // r12
  PlayerEventComp *v6; // r12
  PlayerEventComp *v7; // r12
  PlayerEventComp *v8; // r12
  PlayerEventComp *v9; // r12
  PlayerEventComp *v10; // rbx
  PlayerEventComp *v11; // rbx
  PlayerEventComp *v12; // rbx
  std::enable_shared_from_this<BaseActivity> v13; // [rsp+A0h] [rbp-A0h] BYREF
  char v14[144]; // [rsp+B0h] [rbp-90h] BYREF

  v1 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_1(96LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "2 32 16 12 this_ptr:825 64 16 12 this_wtr:826";
  *(_QWORD *)(v1 + 16) = VintageActivity::registerEventObserver;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -219021312;
  v3[536862722] = -202178560;
  std::enable_shared_from_this<BaseActivity>::shared_from_this(&v13);
  std::dynamic_pointer_cast<VintageActivity,BaseActivity>((const std::shared_ptr<BaseActivity> *)(v1 + 32));
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)&v13);
  std::weak_ptr<VintageActivity>::weak_ptr<VintageActivity,void>(
    (std::weak_ptr<VintageActivity> *const)(v1 + 64),
    (const std::shared_ptr<VintageActivity> *)(v1 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  EventComp = Player::getEventComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v13,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  PlayerEventComp::tryRegisterObserver<VintageActivity,GalleryVintageHuntingStageOneSettleEvent>(
    EventComp,
    (std::weak_ptr<VintageActivity> *)&v13,
    (void (*)(VintageActivity *, const GalleryVintageHuntingStageOneSettleEvent *))VintageActivity::onGalleryVintageHuntingStageOneSettleEvent,
    0LL);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)&v13);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  v5 = Player::getEventComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v13,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  PlayerEventComp::tryRegisterObserver<VintageActivity,GalleryVintageHuntingStageTwoSettleEvent>(
    v5,
    (std::weak_ptr<VintageActivity> *)&v13,
    (void (*)(VintageActivity *, const GalleryVintageHuntingStageTwoSettleEvent *))VintageActivity::onGalleryVintageHuntingStageTwoSettleEvent,
    0LL);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)&v13);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  v6 = Player::getEventComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v13,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  PlayerEventComp::tryRegisterObserver<VintageActivity,GalleryVintageHuntingStageThreeSettleEvent>(
    v6,
    (std::weak_ptr<VintageActivity> *)&v13,
    (void (*)(VintageActivity *, const GalleryVintageHuntingStageThreeSettleEvent *))VintageActivity::onGalleryVintageHuntingStageThreeSettleEvent,
    0LL);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)&v13);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  v7 = Player::getEventComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v13,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  PlayerEventComp::tryRegisterObserver<VintageActivity,PostEnterSceneEvent>(
    v7,
    (std::weak_ptr<VintageActivity> *)&v13,
    (void (*)(VintageActivity *, const PostEnterSceneEvent *))VintageActivity::onPostEnterSceneEvent,
    0LL);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)&v13);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  v8 = Player::getEventComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v13,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  PlayerEventComp::tryRegisterObserver<VintageActivity,ObtainItemEvent>(
    v8,
    (std::weak_ptr<VintageActivity> *)&v13,
    (void (*)(VintageActivity *, const ObtainItemEvent *))VintageActivity::onObtainItemEvent,
    0LL);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)&v13);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  v9 = Player::getEventComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v13,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  PlayerEventComp::tryRegisterObserver<VintageActivity,GroupBundleFinishEvent>(
    v9,
    (std::weak_ptr<VintageActivity> *)&v13,
    (void (*)(VintageActivity *, const GroupBundleFinishEvent *))VintageActivity::onGroupBundleFinishEvent,
    0LL);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)&v13);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  v10 = Player::getEventComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v13,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  PlayerEventComp::tryRegisterObserver<VintageActivity,FinishParentQuestEvent>(
    v10,
    (std::weak_ptr<VintageActivity> *)&v13,
    (void (*)(VintageActivity *, const FinishParentQuestEvent *))VintageActivity::onFinishParentQuestEvent,
    0LL);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)&v13);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  v11 = Player::getEventComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v13,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  PlayerEventComp::tryRegisterObserver<VintageActivity,BargainFinishEvent>(
    v11,
    (std::weak_ptr<VintageActivity> *)&v13,
    (void (*)(VintageActivity *, const BargainFinishEvent *))VintageActivity::onBargainFinishEvent,
    0LL);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)&v13);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  v12 = Player::getEventComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v13,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  PlayerEventComp::tryRegisterObserver<VintageActivity,CompleteTalkEvent>(
    v12,
    (std::weak_ptr<VintageActivity> *)&v13,
    (void (*)(VintageActivity *, const CompleteTalkEvent *))VintageActivity::onCompleteTalkEvent,
    0LL);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)&v13);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)(v1 + 64));
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v1 + 32));
  if ( v14 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 846: range 00000000149847AE-00000000149848B2
void __cdecl VintageActivity::unregisterEventObserver(VintageActivity *const this)
{
  PlayerEventComp *EventComp; // rax
  std::map<std::type_index,std::weak_ptr<Observer>>::iterator __for_begin; // [rsp+10h] [rbp-30h] BYREF
  std::map<std::type_index,std::weak_ptr<Observer>>::iterator __for_end; // [rsp+18h] [rbp-28h] BYREF
  std::map<std::type_index,std::weak_ptr<Observer>> *__for_range; // [rsp+20h] [rbp-20h]
  std::pair<const std::type_index,std::weak_ptr<Observer> > *__in; // [rsp+28h] [rbp-18h]
  std::tuple_element<0,std::pair<const std::type_index,std::weak_ptr<Observer> > >::type *_; // [rsp+30h] [rbp-10h]
  std::tuple_element<1,std::pair<const std::type_index,std::weak_ptr<Observer> > >::type *obs_wtr; // [rsp+38h] [rbp-8h]

  __for_range = &this->event_observer_map_;
  __for_begin._M_node = std::map<std::type_index,std::weak_ptr<Observer>>::begin(&this->event_observer_map_)._M_node;
  __for_end._M_node = std::map<std::type_index,std::weak_ptr<Observer>>::end(&this->event_observer_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    __in = std::_Rb_tree_iterator<std::pair<std::type_index const,std::weak_ptr<Observer>>>::operator*(&__for_begin);
    _ = std::get<0ul,std::type_index const,std::weak_ptr<Observer>>(__in);
    obs_wtr = std::get<1ul,std::type_index const,std::weak_ptr<Observer>>(__in);
    if ( !std::__weak_ptr<Observer,(__gnu_cxx::_Lock_policy)2>::expired(obs_wtr) )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      EventComp = Player::getEventComp(this->player_);
      PlayerEventComp::unregisterObserver(EventComp, obs_wtr);
    }
    std::_Rb_tree_iterator<std::pair<std::type_index const,std::weak_ptr<Observer>>>::operator++(&__for_begin);
  }
  std::map<std::type_index,std::weak_ptr<Observer>>::clear(&this->event_observer_map_);
};

// Line 858: range 00000000149848B4-0000000014984A22
void __cdecl VintageActivity::fillActivityCoinInfo(
        VintageActivity *const this,
        google::protobuf::Map<unsigned int,unsigned int> *activity_coin_map)
{
  std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type *v2; // rax
  std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type v3; // ebx
  google::protobuf::Map<unsigned int,unsigned int>::key_type *p_key; // rsi
  unsigned int *v5; // rax
  std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type *v6; // rdx
  char v7; // cl
  google::protobuf::Map<unsigned int,unsigned int>::key_type key; // [rsp+1Ch] [rbp-44h] BYREF
  std::map<proto::VirtualItem,unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-40h] BYREF
  std::map<proto::VirtualItem,unsigned int>::iterator __for_end; // [rsp+28h] [rbp-38h] BYREF
  std::map<proto::VirtualItem,unsigned int> *__for_range; // [rsp+30h] [rbp-30h]
  const std::pair<const proto::VirtualItem,unsigned int> *v13; // [rsp+38h] [rbp-28h]
  std::tuple_element<0,const std::pair<const proto::VirtualItem,unsigned int> >::type *coin_type; // [rsp+40h] [rbp-20h]
  std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type *coin_num; // [rsp+48h] [rbp-18h]

  __for_range = &this->activity_coin_map_;
  __for_begin._M_node = std::map<proto::VirtualItem,unsigned int>::begin(&this->activity_coin_map_)._M_node;
  __for_end._M_node = std::map<proto::VirtualItem,unsigned int>::end(&this->activity_coin_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v13 = std::_Rb_tree_iterator<std::pair<proto::VirtualItem const,unsigned int>>::operator*(&__for_begin);
    coin_type = std::get<0ul,proto::VirtualItem const,unsigned int>(v13);
    v2 = (std::tuple_element<1,const std::pair<const proto::VirtualItem,unsigned int> >::type *)std::get<1ul,proto::VirtualItem const,unsigned int>(v13);
    coin_num = v2;
    if ( *(_BYTE *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v2 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v2);
    }
    v3 = *coin_num;
    if ( *(_BYTE *)(((unsigned __int64)coin_type >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)coin_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)coin_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(coin_type);
    }
    key = *coin_type;
    p_key = &key;
    v5 = google::protobuf::Map<unsigned int,unsigned int>::operator[](activity_coin_map, &key);
    v6 = v5;
    v7 = *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000);
    if ( v7 != 0 && (char)(((unsigned __int8)v5 & 7) + 3) >= v7 )
    {
      LOBYTE(p_key) = v7 != 0;
      __asan_report_store4(v5, p_key, v5);
    }
    *v6 = v3;
    std::_Rb_tree_iterator<std::pair<proto::VirtualItem const,unsigned int>>::operator++(&__for_begin);
  }
};

// Line 866: range 0000000014984A24-0000000014984A60
bool __cdecl VintageActivity::isCoinTypeValid(const VintageActivity *const this, proto::VirtualItem coin_type)
{
  return coin_type == ITEM_VIRTUAL_VINTAGE_POPULARITY
      || coin_type == ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A
      || coin_type == ITEM_VIRTUAL_VINTAGE_MARKET_COIN_B
      || coin_type == ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C;
};

// Line 874: range 0000000014984A62-0000000014984DE5
__int64 __fastcall VintageActivity::checkAddActivityCoin(
        const VintageActivity *const this,
        proto::VirtualItem coin_type,
        uint32_t add_num)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // rax
  __int64 result; // rax
  std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> >::pointer v8; // rdx
  unsigned int *p_second; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> >::_Self __y; // [rsp+18h] [rbp-C8h] BYREF
  common::milog::MiLogStream v17; // [rsp+20h] [rbp-C0h] BYREF
  char v18[160]; // [rsp+40h] [rbp-A0h] BYREF

  v3 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 48 4 16 cur_coin_num:880 64 4 13 coin_type:873 80 4 11 add_num:873 96 8 8 iter:881";
  *(_QWORD *)(v3 + 16) = VintageActivity::checkAddActivityCoin;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -234556924;
  v5[536862723] = -202116352;
  *(_DWORD *)(v3 + 64) = coin_type;
  *(_DWORD *)(v3 + 80) = add_num;
  if ( !VintageActivity::isCoinTypeValid(this, *(proto::VirtualItem *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "checkAddActivityCoin",
      877);
    v6 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           &v17,
           (const char (*)[43])"[VINTAGE] coin_type is invalid. coin_type:");
    common::milog::MiLogStream::operator<<<proto::VirtualItem,(proto::VirtualItem*)0>(
      v6,
      (const proto::VirtualItem *)(v3 + 64));
    common::milog::MiLogStream::~MiLogStream(&v17);
    result = 0xFFFFFFFFLL;
  }
  else
  {
    *(_DWORD *)(v3 + 48) = 0;
    *(std::map<proto::VirtualItem,unsigned int>::const_iterator *)(v3 + 96) = std::map<proto::VirtualItem,unsigned int>::find(
                                                                                &this->activity_coin_map_,
                                                                                (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v3 + 64));
    __y._M_node = std::map<proto::VirtualItem,unsigned int>::end(&this->activity_coin_map_)._M_node;
    if ( std::operator!=(
           (const std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> >::_Self *)(v3 + 96),
           &__y) )
    {
      v8 = std::_Rb_tree_const_iterator<std::pair<proto::VirtualItem const,unsigned int>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> > *const)(v3 + 96));
      p_second = &v8->second;
      if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(p_second);
      }
      *(_DWORD *)(v3 + 48) = v8->second;
    }
    if ( (!*(_DWORD *)(v3 + 80)
       || !*(_DWORD *)(v3 + 48)
       || (unsigned int)(*(_DWORD *)(v3 + 48) + *(_DWORD *)(v3 + 80)) >= *(_DWORD *)(v3 + 80))
      && (*(_DWORD *)(v3 + 80)
       || *(_DWORD *)(v3 + 48)
       || (unsigned int)(*(_DWORD *)(v3 + 48) + *(_DWORD *)(v3 + 80)) <= *(_DWORD *)(v3 + 80)) )
    {
      result = 0LL;
    }
    else
    {
      common::milog::MiLogStream::create(
        &v17,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "checkAddActivityCoin",
        889);
      v10 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
              &v17,
              (const char (*)[37])"[VINTAGE] coin over flow, coin_type:");
      v11 = common::milog::MiLogStream::operator<<<proto::VirtualItem,(proto::VirtualItem*)0>(
              v10,
              (const proto::VirtualItem *)(v3 + 64));
      v12 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v11, (const char (*)[12])", cur num: ");
      v13 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)(v3 + 48));
      v14 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v13, (const char (*)[12])" ,add num: ");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 80));
      common::milog::MiLogStream::~MiLogStream(&v17);
      result = 0xFFFFFFFFLL;
    }
  }
  if ( v18 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 897: range 0000000014984DE6-00000000149851BD
__int64 __fastcall VintageActivity::checkSubActivityCoin(
        const VintageActivity *const this,
        proto::VirtualItem coin_type,
        uint32_t sub_num)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // rax
  __int64 result; // rax
  common::milog::MiLogStream *v8; // rax
  std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> >::pointer v9; // rdx
  unsigned int *p_second; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> >::_Self __y; // [rsp+18h] [rbp-C8h] BYREF
  common::milog::MiLogStream v18; // [rsp+20h] [rbp-C0h] BYREF
  char v19[160]; // [rsp+40h] [rbp-A0h] BYREF

  v3 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 48 4 16 cur_coin_num:910 64 4 13 coin_type:896 80 4 11 sub_num:896 96 8 8 iter:904";
  *(_QWORD *)(v3 + 16) = VintageActivity::checkSubActivityCoin;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -234556924;
  v5[536862723] = -202116352;
  *(_DWORD *)(v3 + 64) = coin_type;
  *(_DWORD *)(v3 + 80) = sub_num;
  if ( !VintageActivity::isCoinTypeValid(this, *(proto::VirtualItem *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v18,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "checkSubActivityCoin",
      900);
    v6 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           &v18,
           (const char (*)[43])"[VINTAGE] coin_type is invalid. coin_type:");
    common::milog::MiLogStream::operator<<<proto::VirtualItem,(proto::VirtualItem*)0>(
      v6,
      (const proto::VirtualItem *)(v3 + 64));
    common::milog::MiLogStream::~MiLogStream(&v18);
    result = 0xFFFFFFFFLL;
  }
  else
  {
    *(std::map<proto::VirtualItem,unsigned int>::const_iterator *)(v3 + 96) = std::map<proto::VirtualItem,unsigned int>::find(
                                                                                &this->activity_coin_map_,
                                                                                (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v3 + 64));
    __y._M_node = std::map<proto::VirtualItem,unsigned int>::end(&this->activity_coin_map_)._M_node;
    if ( std::operator==(
           (const std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> >::_Self *)(v3 + 96),
           &__y) )
    {
      common::milog::MiLogStream::create(
        &v18,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "checkSubActivityCoin",
        907);
      v8 = common::milog::MiLogStream::operator<<<char [61],(char *[61])0>(
             &v18,
             (const char (*)[61])"[VINTAGE] coin_type is not in activity_coin_map_. coin_type:");
      common::milog::MiLogStream::operator<<<proto::VirtualItem,(proto::VirtualItem*)0>(
        v8,
        (const proto::VirtualItem *)(v3 + 64));
      common::milog::MiLogStream::~MiLogStream(&v18);
      result = 10401LL;
    }
    else
    {
      v9 = std::_Rb_tree_const_iterator<std::pair<proto::VirtualItem const,unsigned int>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> > *const)(v3 + 96));
      p_second = &v9->second;
      if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(p_second);
      }
      *(_DWORD *)(v3 + 48) = v9->second;
      if ( *(_DWORD *)(v3 + 48) >= *(_DWORD *)(v3 + 80) )
      {
        result = 0LL;
      }
      else
      {
        common::milog::MiLogStream::create(
          &v18,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/vintage_activity.cpp",
          "checkSubActivityCoin",
          913);
        v11 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                &v18,
                (const char (*)[38])"[VINTAGE] coin not enough, coin_type:");
        v12 = common::milog::MiLogStream::operator<<<proto::VirtualItem,(proto::VirtualItem*)0>(
                v11,
                (const proto::VirtualItem *)(v3 + 64));
        v13 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v12, (const char (*)[12])", cur num: ");
        v14 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v13,
                (const unsigned int *)(v3 + 48));
        v15 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v14, (const char (*)[10])off_255189E0);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, (const unsigned int *)(v3 + 80));
        common::milog::MiLogStream::~MiLogStream(&v18);
        result = 10401LL;
      }
    }
  }
  if ( v19 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 921: range 00000000149851BE-0000000014985778
__int64 __fastcall VintageActivity::addActivityCoin(
        VintageActivity *const this,
        proto::VirtualItem coin_type,
        uint32_t add_num,
        const ActionReason *reason,
        __int8 is_notify)
{
  unsigned __int64 v5; // r12
  __int64 v6; // rax
  _DWORD *v7; // r13
  unsigned int v8; // r14d
  PlayerBasicComp *BasicComp; // rax
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v10; // rax
  unsigned int *v11; // rdx
  SelectType v12; // r14d
  char *v13; // rsi
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v14; // rax
  SelectType *v15; // rdx
  char v16; // cl
  PlayerItemComp *ItemComp; // r14
  data::ItemLimitType v18; // r15d
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v19; // rax
  unsigned int *v20; // rdx
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v21; // rax
  uint32_t *v22; // rdx
  uint32_t v23; // esi
  int32_t v24; // ecx
  PlayerWatcherComp *WatcherComp; // r14
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v26; // rax
  uint32_t *v27; // rdx
  __int64 result; // rax
  std::string v29; // [rsp+0h] [rbp-F0h]
  uint32_t reason_type; // [rsp+10h] [rbp-E0h]
  int32_t ret; // [rsp+38h] [rbp-B8h]
  uint32_t old_coin_num; // [rsp+3Ch] [rbp-B4h]
  std::string v34; // [rsp+40h] [rbp-B0h] BYREF
  char v35[144]; // [rsp+60h] [rbp-90h] BYREF

  *(&v29._anon_0._M_allocated_capacity + 1) = (std::string::size_type)reason;
  v29._anon_0._M_local_buf[4] = is_notify;
  v5 = (unsigned __int64)v35;
  v29._M_string_length = (std::string::size_type)v35;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_1(96LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "2 48 1 22 log_context_holder:928 64 4 13 coin_type:920";
  *(_QWORD *)(v5 + 16) = VintageActivity::addActivityCoin;
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -234753551;
  v7[536862722] = -202116348;
  *(_DWORD *)(v5 + 64) = coin_type;
  ret = VintageActivity::checkAddActivityCoin(this, (proto::VirtualItem)*(_DWORD *)(v5 + 64), add_num);
  if ( ret )
  {
    v8 = ret;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    BasicComp = Player::getBasicComp(this->player_);
    PlayerBasicComp::getNextTransNo[abi:cxx11](&v34, BasicComp);
    StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v5 + 48), 0x67u, v29);
    std::string::~string(&v34);
    v10 = std::map<proto::VirtualItem,unsigned int>::operator[](
            &this->activity_coin_map_,
            (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v5 + 64));
    v11 = v10;
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v10 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v10);
    }
    old_coin_num = *v11;
    v12 = SAFE_ADD<unsigned int,unsigned int>(*v11, add_num);
    v13 = (char *)(v5 + 64);
    v14 = std::map<proto::VirtualItem,unsigned int>::operator[](
            &this->activity_coin_map_,
            (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v5 + 64));
    v15 = v14;
    v16 = *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000);
    if ( v16 != 0 && (char)(((unsigned __int8)v14 & 7) + 3) >= v16 )
    {
      LOBYTE(v13) = v16 != 0;
      __asan_report_store4(v14, v13, v14);
    }
    *v15 = v12;
    if ( v29._anon_0._M_local_buf[4] )
      BaseActivity::notifyActivityCoinInfo((BaseActivity *const)this);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    ItemComp = Player::getItemComp(this->player_);
    if ( *(_BYTE *)(((*(&v29._anon_0._M_allocated_capacity + 1) + 4) >> 3) + 0x7FFF8000) != 0
      && (char)(((v29._anon_0._M_local_buf[8] + 4) & 7) + 3) >= *(_BYTE *)(((*(&v29._anon_0._M_allocated_capacity + 1)
                                                                           + 4) >> 3)
                                                                         + 0x7FFF8000) )
    {
      __asan_report_load4(*(&v29._anon_0._M_allocated_capacity + 1) + 4);
    }
    v18 = *(_DWORD *)(*(&v29._anon_0._M_allocated_capacity + 1) + 4);
    if ( *(_BYTE *)((*(&v29._anon_0._M_allocated_capacity + 1) >> 3) + 0x7FFF8000) != 0
      && (char)((v29._anon_0._M_local_buf[8] & 7) + 3) >= *(_BYTE *)((*(&v29._anon_0._M_allocated_capacity + 1) >> 3)
                                                                   + 0x7FFF8000) )
    {
      __asan_report_load4(*(&v29._anon_0._M_allocated_capacity + 1));
    }
    reason_type = **((_DWORD **)&v29._anon_0._M_allocated_capacity + 1);
    v19 = std::map<proto::VirtualItem,unsigned int>::operator[](
            &this->activity_coin_map_,
            (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v5 + 64));
    v20 = v19;
    if ( *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v19 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v19);
    }
    PlayerItemComp::logPlayerAddCoin(
      ItemComp,
      *(proto::VirtualItem *)(v5 + 64),
      old_coin_num,
      *v20,
      reason_type,
      v18,
      0);
    v21 = std::map<proto::VirtualItem,unsigned int>::operator[](
            &this->activity_coin_map_,
            (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v5 + 64));
    v22 = v21;
    if ( *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v21 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v21);
    }
    v23 = *v22;
    v24 = add_num;
    if ( *(_BYTE *)((*(&v29._anon_0._M_allocated_capacity + 1) >> 3) + 0x7FFF8000) != 0
      && (char)((v29._anon_0._M_local_buf[8] & 7) + 3) >= *(_BYTE *)((*(&v29._anon_0._M_allocated_capacity + 1) >> 3)
                                                                   + 0x7FFF8000) )
    {
      __asan_report_load4(*(&v29._anon_0._M_allocated_capacity + 1));
    }
    VintageActivity::logCoinChange(
      this,
      *(_DWORD *)(v5 + 64),
      **((_DWORD **)&v29._anon_0._M_allocated_capacity + 1),
      v24,
      v23);
    if ( *(_DWORD *)(v5 + 64) == 148 )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      WatcherComp = Player::getWatcherComp(this->player_);
      v26 = std::map<proto::VirtualItem,unsigned int>::operator[](
              &this->activity_coin_map_,
              (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v5 + 64));
      v27 = v26;
      if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v26 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v26);
      }
      PlayerWatcherComp::triggerVintageMarketCoinAChangeEvent(WatcherComp, *v27);
    }
    v8 = 0;
    StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v5 + 48));
  }
  result = v8;
  if ( v29._M_string_length == v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 945: range 000000001498577A-0000000014985C27
__int64 __fastcall VintageActivity::subActivityCoin(
        VintageActivity *const this,
        __int32 coin_type,
        __int32 sub_num,
        const SubItemReason *reason,
        __int8 is_notify)
{
  unsigned __int64 v5; // r12
  __int64 v6; // rax
  _DWORD *v7; // r13
  unsigned int v8; // r14d
  PlayerBasicComp *BasicComp; // rax
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v10; // rax
  uint32_t *v11; // rdx
  unsigned __int64 v12; // rax
  PlayerItemComp *ItemComp; // r14
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v14; // rax
  unsigned int *v15; // rdx
  std::map<proto::VirtualItem,unsigned int>::mapped_type *v16; // rax
  uint32_t *v17; // rdx
  uint32_t v18; // ecx
  int32_t v19; // r9d
  __int64 result; // rax
  std::string reason_type; // [rsp+0h] [rbp-E0h]
  uint32_t reason_typea; // [rsp+0h] [rbp-E0h]
  bool is_notifya; // [rsp+4h] [rbp-DCh]
  uint32_t *reasona; // [rsp+8h] [rbp-D8h]
  uint32_t sub_numa; // [rsp+10h] [rbp-D0h]
  VintageActivity *thisa; // [rsp+18h] [rbp-C8h]
  int32_t ret; // [rsp+28h] [rbp-B8h]
  uint32_t old_coin_num; // [rsp+2Ch] [rbp-B4h]
  std::string v29; // [rsp+30h] [rbp-B0h] BYREF
  char v30[144]; // [rsp+50h] [rbp-90h] BYREF

  *(&reason_type._anon_0._M_allocated_capacity + 1) = (std::string::size_type)this;
  HIDWORD(reason_type._anon_0._M_allocated_capacity) = coin_type;
  *(_DWORD *)reason_type._anon_0._M_local_buf = sub_num;
  reason_type._M_string_length = (std::string::size_type)reason;
  BYTE4(reason_type._M_dataplus._M_p) = is_notify;
  v5 = (unsigned __int64)v30;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_1(96LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "2 48 1 22 log_context_holder:952 64 4 13 coin_type:944";
  *(_QWORD *)(v5 + 16) = VintageActivity::subActivityCoin;
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -234753551;
  v7[536862722] = -202116348;
  *(_DWORD *)(v5 + 64) = coin_type;
  ret = VintageActivity::checkSubActivityCoin(
          this,
          (proto::VirtualItem)*(_DWORD *)(v5 + 64),
          reason_type._anon_0._M_allocated_capacity);
  if ( ret )
  {
    v8 = ret;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    BasicComp = Player::getBasicComp(this->player_);
    PlayerBasicComp::getNextTransNo[abi:cxx11](&v29, BasicComp);
    StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v5 + 48), 0x67u, reason_type);
    std::string::~string(&v29);
    v10 = std::map<proto::VirtualItem,unsigned int>::operator[](
            &thisa->activity_coin_map_,
            (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v5 + 64));
    v11 = v10;
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v10 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v10);
    }
    old_coin_num = *v11;
    v12 = (unsigned __int64)std::map<proto::VirtualItem,unsigned int>::operator[](
                              &thisa->activity_coin_map_,
                              (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v5 + 64));
    if ( *(_BYTE *)((v12 >> 3) + 0x7FFF8000) != 0 && (char)((v12 & 7) + 3) >= *(_BYTE *)((v12 >> 3) + 0x7FFF8000) )
      v12 = __asan_report_load4(v12);
    *(_DWORD *)v12 -= sub_numa;
    if ( is_notifya )
      BaseActivity::notifyActivityCoinInfo((BaseActivity *const)thisa);
    if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&thisa->player_);
    ItemComp = Player::getItemComp(thisa->player_);
    if ( *(_BYTE *)(((unsigned __int64)reasona >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)reasona & 7) + 3) >= *(_BYTE *)(((unsigned __int64)reasona >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(reasona);
    }
    reason_typea = *reasona;
    v14 = std::map<proto::VirtualItem,unsigned int>::operator[](
            &thisa->activity_coin_map_,
            (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v5 + 64));
    v15 = v14;
    if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v14 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v14);
    }
    PlayerItemComp::logPlayerAddCoin(
      ItemComp,
      *(proto::VirtualItem *)(v5 + 64),
      old_coin_num,
      *v15,
      reason_typea,
      ITEM_LIMIT_NONE,
      0);
    v16 = std::map<proto::VirtualItem,unsigned int>::operator[](
            &thisa->activity_coin_map_,
            (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v5 + 64));
    v17 = v16;
    if ( *(_BYTE *)(((unsigned __int64)v16 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v16 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v16 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v16);
    }
    v18 = *v17;
    v19 = -sub_numa;
    if ( *(_BYTE *)(((unsigned __int64)reasona >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)reasona & 7) + 3) >= *(_BYTE *)(((unsigned __int64)reasona >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(reasona);
    }
    VintageActivity::logCoinChange(thisa, *(_DWORD *)(v5 + 64), *reasona, v19, v18);
    v8 = 0;
    StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v5 + 48));
  }
  result = v8;
  if ( v30 == (char *)v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 965: range 0000000014985C28-0000000014985DBA
__int64 __fastcall VintageActivity::getActivityCoin(const VintageActivity *const this, proto::VirtualItem coin_type)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> >::pointer v6; // rdx
  unsigned int *p_second; // rax
  std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> >::_Self __y; // [rsp+18h] [rbp-88h] BYREF
  char v9[128]; // [rsp+20h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 13 coin_type:964 64 8 8 iter:966";
  *(_QWORD *)(v2 + 16) = VintageActivity::getActivityCoin;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -202116352;
  *(_DWORD *)(v2 + 48) = coin_type;
  *(std::map<proto::VirtualItem,unsigned int>::const_iterator *)(v2 + 64) = std::map<proto::VirtualItem,unsigned int>::find(
                                                                              &this->activity_coin_map_,
                                                                              (const std::map<proto::VirtualItem,unsigned int>::key_type *)(v2 + 48));
  __y._M_node = std::map<proto::VirtualItem,unsigned int>::end(&this->activity_coin_map_)._M_node;
  if ( std::operator==(
         (const std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> >::_Self *)(v2 + 64),
         &__y) )
  {
    result = 0LL;
  }
  else
  {
    v6 = std::_Rb_tree_const_iterator<std::pair<proto::VirtualItem const,unsigned int>>::operator->((const std::_Rb_tree_const_iterator<std::pair<const proto::VirtualItem,unsigned int> > *const)(v2 + 64));
    p_second = &v6->second;
    if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(p_second);
    }
    result = v6->second;
  }
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 975: range 0000000014985DBC-00000000149861FC
std::set<unsigned int> *__cdecl VintageActivity::getFinishedWatcherSetWithoutEvent(
        std::set<unsigned int> *retstr,
        VintageActivity *const this,
        const std::vector<unsigned int> *watcher_id_vec)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  VintageActivity *v6; // rcx
  unsigned __int64 v7; // rax
  unsigned __int8 (__fastcall *v8)(VintageActivity *, _QWORD); // r8
  const BaseActivity *v9; // rcx
  uint32_t WatcherComp; // ecx
  common::milog::MiLogStream *v11; // rax
  std::__shared_ptr_access<BaseWatcher,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  std::vector<unsigned int>::const_iterator __for_begin; // [rsp+20h] [rbp-B0h] BYREF
  std::vector<unsigned int>::const_iterator __for_end; // [rsp+28h] [rbp-A8h] BYREF
  const std::vector<unsigned int> *__for_range; // [rsp+30h] [rbp-A0h]
  const unsigned int *watcher_id; // [rsp+38h] [rbp-98h]
  common::milog::MiLogStream v19; // [rsp+40h] [rbp-90h] BYREF
  char v20[112]; // [rsp+60h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 15 watcher_ptr:989";
  *(_QWORD *)(v3 + 16) = VintageActivity::getFinishedWatcherSetWithoutEvent;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  std::set<unsigned int>::set(retstr);
  __for_range = watcher_id_vec;
  __for_begin._M_current = std::vector<unsigned int>::begin(watcher_id_vec)._M_current;
  __for_end._M_current = std::vector<unsigned int>::end(watcher_id_vec)._M_current;
  while ( __gnu_cxx::operator!=<unsigned int const*,std::vector<unsigned int>>(&__for_begin, &__for_end) )
  {
    watcher_id = __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator*(&__for_begin);
    v6 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v7 = (unsigned __int64)(this->_vptr_DescribalBase + 23);
    if ( *(_BYTE *)((v7 >> 3) + 0x7FFF8000) )
      v7 = __asan_report_load8(this->_vptr_DescribalBase + 23);
    v8 = *(unsigned __int8 (__fastcall **)(VintageActivity *, _QWORD))v7;
    if ( *(_BYTE *)(((unsigned __int64)watcher_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)watcher_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)watcher_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(watcher_id);
    }
    if ( v8(v6, *watcher_id) == 1 )
    {
      v9 = (const BaseActivity *)this;
      if ( *(_BYTE *)(((unsigned __int64)watcher_id >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)watcher_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)watcher_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(watcher_id);
      }
      if ( BaseActivity::isWatcherFinished(v9, *watcher_id) )
      {
        std::set<unsigned int>::insert(retstr, watcher_id);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        WatcherComp = (unsigned int)Player::getWatcherComp(this->player_);
        if ( *(_BYTE *)(((unsigned __int64)watcher_id >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)watcher_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)watcher_id >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(watcher_id);
        }
        PlayerWatcherComp::findWatcher((PlayerWatcherComp *const)(v3 + 32), WatcherComp);
        if ( std::operator==<BaseWatcher>(0LL, (const std::shared_ptr<BaseWatcher> *)(v3 + 32)) )
        {
          common::milog::MiLogStream::create(
            &v19,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "getFinishedWatcherSetWithoutEvent",
            992);
          v11 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                  &v19,
                  (const char (*)[31])"findWatcher fails, watcher_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, watcher_id);
          common::milog::MiLogStream::~MiLogStream(&v19);
        }
        else
        {
          v12 = std::__shared_ptr_access<BaseWatcher,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseWatcher,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
          if ( BaseWatcher::isFinished(v12) )
            std::set<unsigned int>::insert(retstr, watcher_id);
        }
        std::shared_ptr<BaseWatcher>::~shared_ptr((std::shared_ptr<BaseWatcher> *const)(v3 + 32));
      }
    }
    __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator++(&__for_begin);
  }
  if ( v20 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return retstr;
};

// Line 1008: range 00000000149861FE-0000000014986519
__int64 __fastcall VintageActivity::openHuntingStage(VintageActivity *const this, uint32_t stage_id)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  __int64 result; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *p_y; // rsi
  common::milog::MiLogStream *v8; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::pointer v9; // rdx
  char v10; // cl
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self __y; // [rsp+10h] [rbp-C0h] BYREF
  const ActivityVintageExcelConfigMgr *activity_vintage_config_mgr; // [rsp+18h] [rbp-B8h]
  std::shared_ptr<Config> v13; // [rsp+20h] [rbp-B0h] BYREF
  common::milog::MiLogStream v14; // [rsp+30h] [rbp-A0h] BYREF
  char v15[128]; // [rsp+50h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 13 stage_id:1007 64 8 9 iter:1016";
  *(_QWORD *)(v2 + 16) = VintageActivity::openHuntingStage;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -202116352;
  *(_DWORD *)(v2 + 48) = stage_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v13);
  activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v13)->design_config.txt_config_mgr.activity_vintage_config_mgr;
  std::shared_ptr<Config>::~shared_ptr(&v13);
  if ( data::ActivityVintageExcelConfigMgrBase::findActivityVintageHuntingExcelConfig(
         activity_vintage_config_mgr,
         *(_DWORD *)(v2 + 48)) )
  {
    *(std::map<unsigned int,VintageHuntingStageData>::iterator *)(v2 + 64) = std::map<unsigned int,VintageHuntingStageData>::find(
                                                                               &this->hunting_stage_map_,
                                                                               (const std::map<unsigned int,VintageHuntingStageData>::key_type *)(v2 + 48));
    __y._M_node = std::map<unsigned int,VintageHuntingStageData>::end(&this->hunting_stage_map_)._M_node;
    p_y = &__y;
    if ( std::operator==(
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)(v2 + 64),
           &__y) )
    {
      common::milog::MiLogStream::create(
        &v14,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "openHuntingStage",
        1019);
      v8 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
             &v14,
             (const char (*)[40])"[VINTAGE] stage id not exist, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v2 + 48));
      common::milog::MiLogStream::~MiLogStream(&v14);
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v9 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> > *const)(v2 + 64));
      v10 = *(_BYTE *)(((unsigned __int64)&v9->second.is_open >> 3) + 0x7FFF8000);
      if ( v10 != 0 && (((unsigned __int8)v9 + 8) & 7) >= v10 )
      {
        LOBYTE(p_y) = v10 != 0;
        __asan_report_store1(&v9->second.is_open, p_y, v9);
      }
      v9->second.is_open = 1;
      result = 0LL;
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "openHuntingStage",
      1012);
    v5 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
           &v14,
           (const char (*)[65])"[VINTAGE] findActivityVintageHuntingExcelConfig fails, stage_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, (const unsigned int *)(v2 + 48));
    common::milog::MiLogStream::~MiLogStream(&v14);
    result = 0xFFFFFFFFLL;
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1029: range 000000001498651A-00000000149873C4
int32_t __cdecl VintageActivity::onVintageHuntingStartGalleryReq(
        VintageActivity *const this,
        const proto::VintageHuntingStartGalleryReq *req,
        proto::VintageHuntingStartGalleryRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r14d
  PlayerSceneComp *SceneComp; // rax
  uint32_t v8; // eax
  common::milog::MiLogStream *v9; // rbx
  common::milog::MiLogStream *v10; // rbx
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::pointer v11; // rax
  bool *p_is_open; // rax
  common::milog::MiLogStream *v13; // rbx
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v14; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  common::milog::MiLogStream *v16; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // rax
  Scene *v18; // rax
  bool v19; // r14
  common::milog::MiLogStream *v20; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  ActivityVintageExcelConfigMgr *v22; // r14
  uint32_t v23; // r15d
  TxtConfigMgr *p_txt_config_mgr; // rsi
  common::milog::MiLogStream *v25; // r14
  uint32_t v26; // ecx
  char v27; // dl
  __int64 v28; // rdx
  PlayerSceneComp *v29; // r14
  Scene *v30; // rax
  common::milog::MiLogStream *v31; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v32; // rax
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rax
  int32_t result; // eax
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // [rsp+10h] [rbp-1C0h]
  uint32_t SceneId; // [rsp+10h] [rbp-1C0h]
  SceneGalleryComp *GalleryComp; // [rsp+10h] [rbp-1C0h]
  std::less<unsigned int> __comp; // [rsp+32h] [rbp-19Eh] BYREF
  std::allocator<unsigned int> __a; // [rsp+33h] [rbp-19Dh] BYREF
  unsigned int val; // [rsp+34h] [rbp-19Ch] BYREF
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self __y; // [rsp+38h] [rbp-198h] BYREF
  const data::ActivityVintageHuntingExcelConfig *vintage_hunting_config_ptr; // [rsp+40h] [rbp-190h]
  VintageHuntingStageData *stage_data; // [rsp+48h] [rbp-188h]
  std::shared_ptr<Config> v48; // [rsp+50h] [rbp-180h] BYREF
  std::shared_ptr<Config> v49; // [rsp+60h] [rbp-170h] BYREF
  common::milog::MiLogStream v50; // [rsp+70h] [rbp-160h] BYREF
  std::set<unsigned int> uid_set; // [rsp+90h] [rbp-140h] BYREF
  TransferReason p_reason; // [rsp+C0h] [rbp-110h] BYREF
  char v53[208]; // [rsp+100h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v53;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 32 8 9 iter:1049 64 12 8 pos:1082 96 12 8 rot:1083 128 16 14 scene_ptr:1062";
  *(_QWORD *)(v3 + 16) = VintageActivity::onVintageHuntingStartGalleryReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -218959360;
  v5[536862722] = -219020288;
  v5[536862723] = -219020288;
  v5[536862724] = -202178560;
  if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_content_closed_);
  if ( this->is_content_closed_ )
  {
    common::milog::MiLogStream::create(
      &v50,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "onVintageHuntingStartGalleryReq",
      1032);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v50, (const char (*)[24])"[VINTAGE] play is over.");
    common::milog::MiLogStream::~MiLogStream(&v50);
    v6 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    SceneComp = Player::getSceneComp(this->player_);
    if ( !PlayerSceneComp::isInMyPlayerWorld(SceneComp) )
    {
      common::milog::MiLogStream::create(
        &v50,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "onVintageHuntingStartGalleryReq",
        1038);
      common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
        &v50,
        (const char (*)[35])"[VINTAGE] player not in self scene");
      common::milog::MiLogStream::~MiLogStream(&v50);
      v6 = -1;
    }
    else
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v49);
      p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v49)->design_config.txt_config_mgr.activity_vintage_config_mgr;
      v8 = proto::VintageHuntingStartGalleryReq::stage_id(req);
      vintage_hunting_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintageHuntingExcelConfig(
                                     p_activity_vintage_config_mgr,
                                     v8);
      std::shared_ptr<Config>::~shared_ptr(&v49);
      if ( vintage_hunting_config_ptr )
      {
        val = proto::VintageHuntingStartGalleryReq::stage_id(req);
        *(std::map<unsigned int,VintageHuntingStageData>::iterator *)(v3 + 32) = std::map<unsigned int,VintageHuntingStageData>::find(
                                                                                   &this->hunting_stage_map_,
                                                                                   &val);
        __y._M_node = std::map<unsigned int,VintageHuntingStageData>::end(&this->hunting_stage_map_)._M_node;
        if ( std::operator==(
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)(v3 + 32),
               &__y) )
        {
          common::milog::MiLogStream::create(
            &v50,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "onVintageHuntingStartGalleryReq",
            1052);
          v10 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                  &v50,
                  (const char (*)[40])"[VINTAGE] stage id not exist, stage_id:");
          val = proto::VintageHuntingStartGalleryReq::stage_id(req);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
          common::milog::MiLogStream::~MiLogStream(&v50);
          v6 = -1;
        }
        else
        {
          v11 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> > *const)(v3 + 32));
          stage_data = &v11->second;
          p_is_open = &v11->second.is_open;
          if ( *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) != 0
            && ((unsigned __int8)p_is_open & 7) >= *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) )
          {
            __asan_report_load1(p_is_open);
          }
          if ( !stage_data->is_open )
          {
            common::milog::MiLogStream::create(
              &v50,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/vintage_activity.cpp",
              "onVintageHuntingStartGalleryReq",
              1058);
            v13 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                    &v50,
                    (const char (*)[39])"[VINTAGE] stage is not open, stage_id:");
            val = proto::VintageHuntingStartGalleryReq::stage_id(req);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &val);
            common::milog::MiLogStream::~MiLogStream(&v50);
            v6 = -1;
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->player_);
            Player::getSceneComp(this->player_);
            PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 128));
            if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v3 + 128)) )
            {
              common::milog::MiLogStream::create(
                &v50,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/vintage_activity.cpp",
                "onVintageHuntingStartGalleryReq",
                1065);
              common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                &v50,
                (const char (*)[29])"[VINTAGE] getCurScene fails.");
              common::milog::MiLogStream::~MiLogStream(&v50);
              v6 = -1;
            }
            else
            {
              v14 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
              SceneId = Scene::getSceneId(v14);
              ServiceBox::findService<GameserverService>();
              GameserverService::getConfig((GameserverService *const)&v49);
              v15 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v49);
              LOBYTE(SceneId) = SceneId != TxtConfigMgr::getDefaultWorldMainSceneId(&v15->design_config.txt_config_mgr);
              std::shared_ptr<Config>::~shared_ptr(&v49);
              if ( (_BYTE)SceneId )
              {
                common::milog::MiLogStream::create(
                  &v50,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/vintage_activity.cpp",
                  "onVintageHuntingStartGalleryReq",
                  1071);
                v16 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                        &v50,
                        (const char (*)[48])"[VINTAGE] player not in main scene 3, scene_id:");
                v17 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
                val = Scene::getSceneId(v17);
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, &val);
                common::milog::MiLogStream::~MiLogStream(&v50);
                v6 = -1;
              }
              else
              {
                v18 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
                GalleryComp = Scene::getGalleryComp(v18);
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->player_);
                val = Player::getUid(this->player_);
                std::allocator<unsigned int>::allocator(&__a);
                std::set<unsigned int>::set(
                  &uid_set,
                  (std::initializer_list<unsigned int>)__PAIR128__(1LL, &val),
                  &__comp,
                  &__a);
                if ( *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->gallery_id >> 3) + 0x7FFF8000) != 0
                  && (char)((((_BYTE)vintage_hunting_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->gallery_id >> 3)
                                                                                            + 0x7FFF8000) )
                {
                  __asan_report_load4(&vintage_hunting_config_ptr->gallery_id);
                }
                v19 = SceneGalleryComp::checkCanStartGallery(
                        GalleryComp,
                        vintage_hunting_config_ptr->gallery_id,
                        &uid_set) != 0;
                std::set<unsigned int>::~set(&uid_set);
                std::allocator<unsigned int>::~allocator(&__a);
                if ( v19 )
                {
                  common::milog::MiLogStream::create(
                    &v50,
                    &common::milog::MiLogDefault::default_log_obj_,
                    1u,
                    "./src/player/activity/vintage_activity.cpp",
                    "onVintageHuntingStartGalleryReq",
                    1077);
                  v20 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                          &v50,
                          (const char (*)[52])"[VINTAGE] player can not start gallery, gallery_id:");
                  v21 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
                  val = Scene::getSceneId(v21);
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v20, &val);
                  common::milog::MiLogStream::~MiLogStream(&v50);
                  v6 = -1;
                }
                else
                {
                  Vector3::Vector3((Vector3 *const)(v3 + 64), 0.0, 0.0, 0.0);
                  Vector3::Vector3((Vector3 *const)(v3 + 96), 0.0, 0.0, 0.0);
                  ServiceBox::findService<GameserverService>();
                  GameserverService::getConfig((GameserverService *const)&v48);
                  v22 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v48)->design_config.txt_config_mgr.activity_vintage_config_mgr;
                  v23 = proto::VintageHuntingStartGalleryReq::stage_id(req);
                  ServiceBox::findService<GameserverService>();
                  GameserverService::getConfig((GameserverService *const)&v49);
                  p_txt_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v49)->design_config.txt_config_mgr;
                  LOBYTE(v22) = ActivityVintageExcelConfigMgr::getVintageHuntingTransferPosAndRot(
                                  v22,
                                  p_txt_config_mgr,
                                  v23,
                                  (Vector3 *)(v3 + 64),
                                  (Vector3 *)(v3 + 96)) != 0;
                  std::shared_ptr<Config>::~shared_ptr(&v49);
                  std::shared_ptr<Config>::~shared_ptr(&v48);
                  if ( (_BYTE)v22 )
                  {
                    common::milog::MiLogStream::create(
                      &v50,
                      &common::milog::MiLogDefault::default_log_obj_,
                      3u,
                      "./src/player/activity/vintage_activity.cpp",
                      "onVintageHuntingStartGalleryReq",
                      1086);
                    v25 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
                            &v50,
                            (const char (*)[65])"[VINTAGE] getVintageHuntingTransferPosAndRot failed, stage_id_: ");
                    val = proto::VintageHuntingStartGalleryReq::stage_id(req);
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v25, &val);
                    common::milog::MiLogStream::~MiLogStream(&v50);
                    v6 = -1;
                  }
                  else
                  {
                    v26 = proto::VintageHuntingStartGalleryReq::stage_id(req);
                    v27 = *(_BYTE *)(((unsigned __int64)&this->transfer_context_ >> 3) + 0x7FFF8000);
                    LOBYTE(p_txt_config_mgr) = v27 != 0;
                    v28 = (v27 != 0) & (unsigned __int8)((char)((((_BYTE)this - 92) & 7) + 3) >= v27);
                    if ( (_BYTE)v28 )
                      __asan_report_store4(&this->transfer_context_, p_txt_config_mgr, v28);
                    this->transfer_context_.hunting_stage_id = v26;
                    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                      __asan_report_load8(&this->player_);
                    v29 = Player::getSceneComp(this->player_);
                    TransferReason::TransferReason(&p_reason, ENTER_REASON_VINTAGE_HUNTING_TRANSFER);
                    v30 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
                    LOBYTE(v29) = PlayerSceneComp::jumpToScene(
                                    v29,
                                    v30,
                                    (const Vector3 *)(v3 + 64),
                                    (const Vector3 *)(v3 + 96),
                                    0,
                                    &p_reason) != 0;
                    TransferReason::~TransferReason(&p_reason);
                    if ( (_BYTE)v29 )
                    {
                      common::milog::MiLogStream::create(
                        &v50,
                        &common::milog::MiLogDefault::default_log_obj_,
                        1u,
                        "./src/player/activity/vintage_activity.cpp",
                        "onVintageHuntingStartGalleryReq",
                        1095);
                      v31 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                              &v50,
                              (const char (*)[40])"[VINTAGE] jumpToScene failed, scene_id:");
                      v32 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
                      val = Scene::getSceneId(v32);
                      v33 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v31, &val);
                      v34 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(
                              v33,
                              (const char (*)[7])", pos:");
                      v35 = operator<<(v34, (const Vector3 *)(v3 + 64));
                      v36 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(
                              v35,
                              (const char (*)[7])", rot:");
                      operator<<(v36, (const Vector3 *)(v3 + 96));
                      common::milog::MiLogStream::~MiLogStream(&v50);
                      v6 = -1;
                    }
                    else
                    {
                      common::milog::MiLogStream::create(
                        &v50,
                        &common::milog::MiLogDefault::default_log_obj_,
                        1u,
                        "./src/player/activity/vintage_activity.cpp",
                        "onVintageHuntingStartGalleryReq",
                        1099);
                      common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                        &v50,
                        (const char (*)[47])"[VINTAGE] onVintageHuntingStartGalleryReq end.");
                      common::milog::MiLogStream::~MiLogStream(&v50);
                      v6 = 0;
                    }
                  }
                }
              }
            }
            std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 128));
          }
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v50,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "onVintageHuntingStartGalleryReq",
          1045);
        v9 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
               &v50,
               (const char (*)[65])"[VINTAGE] findActivityVintageHuntingExcelConfig fails, stage_id:");
        val = proto::VintageHuntingStartGalleryReq::stage_id(req);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
        common::milog::MiLogStream::~MiLogStream(&v50);
        v6 = -1;
      }
    }
  }
  result = v6;
  if ( v53 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 1105: range 00000000149873C6-0000000014987EC0
void __cdecl VintageActivity::onGalleryVintageHuntingStageOneSettleEvent(
        VintageActivity *const this,
        const GalleryVintageHuntingStageOneSettleEvent *event)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // rcx
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::pointer v9; // rax
  bool *p_is_open; // rax
  common::milog::MiLogStream *v11; // rax
  PlayerWatcherComp *WatcherComp; // rcx
  uint32_t score; // ecx
  google::protobuf::uint32 v14; // eax
  google::protobuf::uint32 v15; // eax
  uint32_t *p_score; // rsi
  uint32_t *v17; // rax
  uint32_t *v18; // rdx
  uint32_t v19; // ecx
  char v20; // dl
  __int64 v21; // rdx
  __int64 v22; // rsi
  __int64 v23; // rdx
  bool has_new_watcher; // [rsp+17h] [rbp-1C9h]
  std::set<unsigned int>::iterator __for_begin; // [rsp+18h] [rbp-1C8h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+20h] [rbp-1C0h] BYREF
  const data::ActivityVintageHuntingExcelConfig *vintage_hunting_config_ptr; // [rsp+28h] [rbp-1B8h]
  VintageHuntingStageData *stage_data; // [rsp+30h] [rbp-1B0h]
  std::set<unsigned int> *__for_range; // [rsp+38h] [rbp-1A8h]
  const unsigned int *new_watcher_id; // [rsp+40h] [rbp-1A0h]
  proto::VintageHuntingFirstStageSettleInfo *stage_info; // [rsp+48h] [rbp-198h]
  std::shared_ptr<Config> v33; // [rsp+50h] [rbp-190h] BYREF
  common::milog::MiLogStream v34; // [rsp+60h] [rbp-180h] BYREF
  char v35[352]; // [rsp+80h] [rbp-160h] BYREF

  v2 = (unsigned __int64)v35;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 48 8 9 iter:1118 80 48 29 old_finished_watcher_set:1134 160 48 29 new_finished_watcher_set:113"
                        "8 240 48 11 notify:1149";
  *(_QWORD *)(v2 + 16) = VintageActivity::onGalleryVintageHuntingStageOneSettleEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862721] = -234881024;
  v4[536862722] = 62194;
  v4[536862724] = -218959118;
  v4[536862726] = -219021312;
  v4[536862727] = 62194;
  v4[536862729] = -202116109;
  if ( BaseActivity::isOpening((const BaseActivity *const)this, 0)
    && !BaseActivity::isSettled((const BaseActivity *const)this) )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v33);
    p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v33)->design_config.txt_config_mgr.activity_vintage_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)event + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&event->stage_id);
    }
    vintage_hunting_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintageHuntingExcelConfig(
                                   p_activity_vintage_config_mgr,
                                   event->stage_id);
    std::shared_ptr<Config>::~shared_ptr(&v33);
    if ( vintage_hunting_config_ptr )
    {
      *(std::map<unsigned int,VintageHuntingStageData>::iterator *)(v2 + 48) = std::map<unsigned int,VintageHuntingStageData>::find(
                                                                                 &this->hunting_stage_map_,
                                                                                 &event->stage_id);
      __for_end._M_node = std::map<unsigned int,VintageHuntingStageData>::end(&this->hunting_stage_map_)._M_node;
      if ( std::operator==(
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)(v2 + 48),
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)&__for_end) )
      {
        common::milog::MiLogStream::create(
          &v34,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "onGalleryVintageHuntingStageOneSettleEvent",
          1121);
        v8 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
               &v34,
               (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &event->stage_id);
        common::milog::MiLogStream::~MiLogStream(&v34);
      }
      else
      {
        v9 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> > *const)(v2 + 48));
        stage_data = &v9->second;
        p_is_open = &v9->second.is_open;
        if ( *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) != 0
          && ((unsigned __int8)p_is_open & 7) >= *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) )
        {
          __asan_report_load1(p_is_open);
        }
        if ( !stage_data->is_open )
        {
          common::milog::MiLogStream::create(
            &v34,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "onGalleryVintageHuntingStageOneSettleEvent",
            1128);
          v11 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                  &v34,
                  (const char (*)[36])"[VINTAGE] stage not open, stage_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &event->stage_id);
          common::milog::MiLogStream::~MiLogStream(&v34);
        }
        else
        {
          has_new_watcher = 0;
          VintageActivity::getFinishedWatcherSetWithoutEvent(
            (std::set<unsigned int> *)(v2 + 80),
            this,
            &vintage_hunting_config_ptr->watcher_ids);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          WatcherComp = Player::getWatcherComp(this->player_);
          if ( *(_BYTE *)(((unsigned __int64)&event->score >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->score >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->score);
          }
          PlayerWatcherComp::triggerVintageHuntingScoreEvent(WatcherComp, event->score);
          VintageActivity::getFinishedWatcherSetWithoutEvent(
            (std::set<unsigned int> *)(v2 + 160),
            this,
            &vintage_hunting_config_ptr->watcher_ids);
          __for_range = (std::set<unsigned int> *)(v2 + 160);
          __for_begin._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v2 + 160))._M_node;
          __for_end._M_node = std::set<unsigned int>::end(__for_range)._M_node;
          while ( std::operator!=(&__for_begin, &__for_end) )
          {
            new_watcher_id = std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
            if ( !common::tools::MiscUtils::isContains<std::set<unsigned int>,unsigned int>(
                    (std::set<unsigned int> *)(v2 + 80),
                    new_watcher_id) )
            {
              has_new_watcher = 1;
              break;
            }
            std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
          }
          proto::SceneGalleryVintageHuntingSettleNotify::SceneGalleryVintageHuntingSettleNotify((proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240));
          if ( *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)event + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(&event->stage_id);
          }
          proto::SceneGalleryVintageHuntingSettleNotify::set_stage_id(
            (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
            event->stage_id);
          if ( *(_BYTE *)(((unsigned __int64)&event->score >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->score >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->score);
          }
          score = event->score;
          if ( *(_BYTE *)(((unsigned __int64)&stage_data->record_value >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)stage_data + 8) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_data->record_value >> 3)
                                                                     + 0x7FFF8000) )
          {
            __asan_report_load4(&stage_data->record_value);
          }
          proto::SceneGalleryVintageHuntingSettleNotify::set_is_new_record(
            (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
            score > stage_data->record_value);
          if ( has_new_watcher )
          {
            proto::SceneGalleryVintageHuntingSettleNotify::set_has_new_watcher(
              (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
              1);
            v14 = std::set<unsigned int>::size((const std::set<unsigned int> *const)(v2 + 160));
            proto::SceneGalleryVintageHuntingSettleNotify::set_finished_watcher_num(
              (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
              v14);
            v15 = std::vector<unsigned int>::size(&vintage_hunting_config_ptr->watcher_ids);
            proto::SceneGalleryVintageHuntingSettleNotify::set_total_watcher_num(
              (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
              v15);
          }
          stage_info = proto::SceneGalleryVintageHuntingSettleNotify::mutable_first_stage_info((proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240));
          if ( *(_BYTE *)(((unsigned __int64)&event->score >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->score >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->score);
          }
          proto::VintageHuntingFirstStageSettleInfo::set_score(stage_info, event->score);
          if ( *(_BYTE *)(((unsigned __int64)&event->timid_cnt >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)event + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->timid_cnt >> 3)
                                                                 + 0x7FFF8000) )
          {
            __asan_report_load4(&event->timid_cnt);
          }
          proto::VintageHuntingFirstStageSettleInfo::set_timid_cnt(stage_info, event->timid_cnt);
          if ( *(_BYTE *)(((unsigned __int64)&event->brutal_cnt >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->brutal_cnt >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->brutal_cnt);
          }
          proto::VintageHuntingFirstStageSettleInfo::set_brutal_cnt(stage_info, event->brutal_cnt);
          if ( *(_BYTE *)(((unsigned __int64)&event->elite_cnt >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)event + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->elite_cnt >> 3)
                                                                 + 0x7FFF8000) )
          {
            __asan_report_load4(&event->elite_cnt);
          }
          proto::VintageHuntingFirstStageSettleInfo::set_elite_cnt(stage_info, event->elite_cnt);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 240));
          p_score = &event->score;
          v17 = (uint32_t *)std::max<unsigned int>(&stage_data->record_value, &event->score);
          v18 = v17;
          if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v17 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v17);
          }
          v19 = *v18;
          v20 = *(_BYTE *)(((unsigned __int64)&stage_data->record_value >> 3) + 0x7FFF8000);
          LOBYTE(p_score) = v20 != 0;
          v21 = (v20 != 0) & (unsigned __int8)((char)((((_BYTE)stage_data + 8) & 7) + 3) >= v20);
          if ( (_BYTE)v21 )
            __asan_report_store4(&stage_data->record_value, p_score, v21);
          stage_data->record_value = v19;
          v22 = ((_BYTE)stage_data + 5) & 7;
          v23 = (*(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v22 >= *(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000));
          if ( (_BYTE)v23 )
            __asan_report_store1(&stage_data->is_finish, v22, v23);
          stage_data->is_finish = 1;
          BaseActivity::notifyClientData((BaseActivity *const)this, 0);
          proto::SceneGalleryVintageHuntingSettleNotify::~SceneGalleryVintageHuntingSettleNotify((proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240));
          std::set<unsigned int>::~set((std::set<unsigned int> *const)(v2 + 160));
          std::set<unsigned int>::~set((std::set<unsigned int> *const)(v2 + 80));
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v34,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "onGalleryVintageHuntingStageOneSettleEvent",
        1114);
      v7 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
             &v34,
             (const char (*)[65])"[VINTAGE] findActivityVintageHuntingExcelConfig fails, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &event->stage_id);
      common::milog::MiLogStream::~MiLogStream(&v34);
    }
  }
  if ( v35 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1172: range 0000000014987EC2-0000000014988B95
void __cdecl VintageActivity::onGalleryVintageHuntingStageTwoSettleEvent(
        VintageActivity *const this,
        const GalleryVintageHuntingStageTwoSettleEvent *event)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // rcx
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::pointer v9; // rax
  bool *p_is_open; // rax
  common::milog::MiLogStream *v11; // rax
  PlayerWatcherComp *WatcherComp; // rcx
  PlayerWatcherComp *v13; // rcx
  PlayerWatcherComp *v14; // rcx
  uint32_t capture_animal_num; // ecx
  google::protobuf::uint32 v16; // eax
  google::protobuf::uint32 v17; // eax
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *v18; // rax
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type v19; // r14d
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *v20; // rsi
  unsigned int *v21; // rax
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *v22; // rdx
  char v23; // cl
  uint32_t *p_capture_animal_num; // rsi
  uint32_t *v25; // rax
  uint32_t *v26; // rdx
  uint32_t v27; // ecx
  char v28; // dl
  __int64 v29; // rdx
  __int64 v30; // rsi
  __int64 v31; // rdx
  bool has_new_watcher; // [rsp+1Fh] [rbp-201h]
  std::set<unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-200h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+28h] [rbp-1F8h] BYREF
  const data::ActivityVintageHuntingExcelConfig *vintage_hunting_config_ptr; // [rsp+30h] [rbp-1F0h]
  VintageHuntingStageData *stage_data; // [rsp+38h] [rbp-1E8h]
  std::set<unsigned int> *__for_range; // [rsp+40h] [rbp-1E0h]
  const unsigned int *new_watcher_id; // [rsp+48h] [rbp-1D8h]
  proto::VintageHuntingSecondStageSettleInfo *stage_info; // [rsp+50h] [rbp-1D0h]
  google::protobuf::Map<unsigned int,unsigned int> *animal_map; // [rsp+58h] [rbp-1C8h]
  const std::map<unsigned int,unsigned int> *__for_range_0; // [rsp+60h] [rbp-1C0h]
  const std::pair<unsigned int const,unsigned int> *v43; // [rsp+68h] [rbp-1B8h]
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *animal_id; // [rsp+70h] [rbp-1B0h]
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *count; // [rsp+78h] [rbp-1A8h]
  std::shared_ptr<Config> v46; // [rsp+80h] [rbp-1A0h] BYREF
  common::milog::MiLogStream v47; // [rsp+90h] [rbp-190h] BYREF
  char v48[368]; // [rsp+B0h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 48 8 9 iter:1185 80 48 29 old_finished_watcher_set:1201 160 48 29 new_finished_watcher_set:120"
                        "7 240 48 11 notify:1218";
  *(_QWORD *)(v2 + 16) = VintageActivity::onGalleryVintageHuntingStageTwoSettleEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862721] = -234881024;
  v4[536862722] = 62194;
  v4[536862724] = -218959118;
  v4[536862726] = -219021312;
  v4[536862727] = 62194;
  v4[536862729] = -202116109;
  if ( BaseActivity::isOpening((const BaseActivity *const)this, 0)
    && !BaseActivity::isSettled((const BaseActivity *const)this) )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v46);
    p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v46)->design_config.txt_config_mgr.activity_vintage_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)event + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&event->stage_id);
    }
    vintage_hunting_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintageHuntingExcelConfig(
                                   p_activity_vintage_config_mgr,
                                   event->stage_id);
    std::shared_ptr<Config>::~shared_ptr(&v46);
    if ( vintage_hunting_config_ptr )
    {
      *(std::map<unsigned int,VintageHuntingStageData>::iterator *)(v2 + 48) = std::map<unsigned int,VintageHuntingStageData>::find(
                                                                                 &this->hunting_stage_map_,
                                                                                 &event->stage_id);
      __for_end._M_node = std::map<unsigned int,VintageHuntingStageData>::end(&this->hunting_stage_map_)._M_node;
      if ( std::operator==(
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)(v2 + 48),
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)&__for_end) )
      {
        common::milog::MiLogStream::create(
          &v47,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "onGalleryVintageHuntingStageTwoSettleEvent",
          1188);
        v8 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
               &v47,
               (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &event->stage_id);
        common::milog::MiLogStream::~MiLogStream(&v47);
      }
      else
      {
        v9 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> > *const)(v2 + 48));
        stage_data = &v9->second;
        p_is_open = &v9->second.is_open;
        if ( *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) != 0
          && ((unsigned __int8)p_is_open & 7) >= *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) )
        {
          __asan_report_load1(p_is_open);
        }
        if ( !stage_data->is_open )
        {
          common::milog::MiLogStream::create(
            &v47,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "onGalleryVintageHuntingStageTwoSettleEvent",
            1195);
          v11 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                  &v47,
                  (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &event->stage_id);
          common::milog::MiLogStream::~MiLogStream(&v47);
        }
        else
        {
          has_new_watcher = 0;
          VintageActivity::getFinishedWatcherSetWithoutEvent(
            (std::set<unsigned int> *)(v2 + 80),
            this,
            &vintage_hunting_config_ptr->watcher_ids);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          WatcherComp = Player::getWatcherComp(this->player_);
          if ( *(_BYTE *)(((unsigned __int64)&event->capture_animal_num >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->capture_animal_num >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->capture_animal_num);
          }
          PlayerWatcherComp::triggerVintageHuntingCaptureNumEvent(WatcherComp, event->capture_animal_num);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          v13 = Player::getWatcherComp(this->player_);
          if ( *(_BYTE *)(((unsigned __int64)&event->capture_no_battle_num >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->capture_no_battle_num >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->capture_no_battle_num);
          }
          PlayerWatcherComp::triggerVintageHuntingCaptureNoBattleNumEvent(v13, event->capture_no_battle_num);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          v14 = Player::getWatcherComp(this->player_);
          if ( *(_BYTE *)(((unsigned __int64)&event->capture_type_num >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)event + 92) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->capture_type_num >> 3)
                                                                 + 0x7FFF8000) )
          {
            __asan_report_load4(&event->capture_type_num);
          }
          PlayerWatcherComp::triggerVintageHuntingCaptureTypeNumEvent(v14, event->capture_type_num);
          VintageActivity::getFinishedWatcherSetWithoutEvent(
            (std::set<unsigned int> *)(v2 + 160),
            this,
            &vintage_hunting_config_ptr->watcher_ids);
          __for_range = (std::set<unsigned int> *)(v2 + 160);
          __for_begin._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v2 + 160))._M_node;
          __for_end._M_node = std::set<unsigned int>::end(__for_range)._M_node;
          while ( std::operator!=(&__for_begin, &__for_end) )
          {
            new_watcher_id = std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
            if ( !common::tools::MiscUtils::isContains<std::set<unsigned int>,unsigned int>(
                    (std::set<unsigned int> *)(v2 + 80),
                    new_watcher_id) )
            {
              has_new_watcher = 1;
              break;
            }
            std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
          }
          proto::SceneGalleryVintageHuntingSettleNotify::SceneGalleryVintageHuntingSettleNotify((proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240));
          if ( *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)event + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(&event->stage_id);
          }
          proto::SceneGalleryVintageHuntingSettleNotify::set_stage_id(
            (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
            event->stage_id);
          if ( *(_BYTE *)(((unsigned __int64)&event->capture_animal_num >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->capture_animal_num >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->capture_animal_num);
          }
          capture_animal_num = event->capture_animal_num;
          if ( *(_BYTE *)(((unsigned __int64)&stage_data->record_value >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)stage_data + 8) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_data->record_value >> 3)
                                                                     + 0x7FFF8000) )
          {
            __asan_report_load4(&stage_data->record_value);
          }
          proto::SceneGalleryVintageHuntingSettleNotify::set_is_new_record(
            (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
            capture_animal_num > stage_data->record_value);
          if ( has_new_watcher )
          {
            proto::SceneGalleryVintageHuntingSettleNotify::set_has_new_watcher(
              (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
              1);
            v16 = std::set<unsigned int>::size((const std::set<unsigned int> *const)(v2 + 160));
            proto::SceneGalleryVintageHuntingSettleNotify::set_finished_watcher_num(
              (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
              v16);
            v17 = std::vector<unsigned int>::size(&vintage_hunting_config_ptr->watcher_ids);
            proto::SceneGalleryVintageHuntingSettleNotify::set_total_watcher_num(
              (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
              v17);
          }
          stage_info = proto::SceneGalleryVintageHuntingSettleNotify::mutable_second_stage_info((proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240));
          if ( *(_BYTE *)(((unsigned __int64)&event->capture_animal_num >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->capture_animal_num >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->capture_animal_num);
          }
          proto::VintageHuntingSecondStageSettleInfo::set_capture_animal_num(stage_info, event->capture_animal_num);
          if ( *(_BYTE *)(((unsigned __int64)&event->total_num >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)event + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->total_num >> 3)
                                                                 + 0x7FFF8000) )
          {
            __asan_report_load4(&event->total_num);
          }
          proto::VintageHuntingSecondStageSettleInfo::set_total_num(stage_info, event->total_num);
          animal_map = proto::VintageHuntingSecondStageSettleInfo::mutable_animal_count_map(stage_info);
          __for_range_0 = &event->animal_count_map;
          __for_begin._M_node = std::map<unsigned int,unsigned int>::begin(&event->animal_count_map)._M_node;
          __for_end._M_node = std::map<unsigned int,unsigned int>::end(__for_range_0)._M_node;
          while ( std::operator!=(
                    (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_begin,
                    (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_end) )
          {
            v43 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)&__for_begin);
            animal_id = std::get<0ul,unsigned int const,unsigned int>(v43);
            v18 = (std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *)std::get<1ul,unsigned int const,unsigned int>(v43);
            count = v18;
            if ( *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v18 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v18);
            }
            v19 = *count;
            v20 = animal_id;
            v21 = google::protobuf::Map<unsigned int,unsigned int>::operator[](animal_map, animal_id);
            v22 = v21;
            v23 = *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000);
            if ( v23 != 0 && (char)(((unsigned __int8)v21 & 7) + 3) >= v23 )
            {
              LOBYTE(v20) = v23 != 0;
              __asan_report_store4(v21, v20, v21);
            }
            *v22 = v19;
            std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)&__for_begin);
          }
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 240));
          p_capture_animal_num = &event->capture_animal_num;
          v25 = (uint32_t *)std::max<unsigned int>(&stage_data->record_value, &event->capture_animal_num);
          v26 = v25;
          if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v25 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v25);
          }
          v27 = *v26;
          v28 = *(_BYTE *)(((unsigned __int64)&stage_data->record_value >> 3) + 0x7FFF8000);
          LOBYTE(p_capture_animal_num) = v28 != 0;
          v29 = (v28 != 0) & (unsigned __int8)((char)((((_BYTE)stage_data + 8) & 7) + 3) >= v28);
          if ( (_BYTE)v29 )
            __asan_report_store4(&stage_data->record_value, p_capture_animal_num, v29);
          stage_data->record_value = v27;
          v30 = ((_BYTE)stage_data + 5) & 7;
          v31 = (*(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v30 >= *(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000));
          if ( (_BYTE)v31 )
            __asan_report_store1(&stage_data->is_finish, v30, v31);
          stage_data->is_finish = 1;
          BaseActivity::notifyClientData((BaseActivity *const)this, 0);
          proto::SceneGalleryVintageHuntingSettleNotify::~SceneGalleryVintageHuntingSettleNotify((proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240));
          std::set<unsigned int>::~set((std::set<unsigned int> *const)(v2 + 160));
          std::set<unsigned int>::~set((std::set<unsigned int> *const)(v2 + 80));
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v47,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "onGalleryVintageHuntingStageTwoSettleEvent",
        1181);
      v7 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
             &v47,
             (const char (*)[65])"[VINTAGE] findActivityVintageHuntingExcelConfig fails, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &event->stage_id);
      common::milog::MiLogStream::~MiLogStream(&v47);
    }
  }
  if ( v48 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1244: range 0000000014988B96-00000000149897DB
void __cdecl VintageActivity::onGalleryVintageHuntingStageThreeSettleEvent(
        VintageActivity *const this,
        const GalleryVintageHuntingStageThreeSettleEvent *event)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // rcx
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::pointer v9; // rax
  bool *p_is_open; // rax
  common::milog::MiLogStream *v11; // rax
  unsigned int boss_weak_times; // edx
  __int64 v13; // rsi
  __int64 v14; // rdx
  char v15; // al
  PlayerWatcherComp *WatcherComp; // rax
  PlayerWatcherComp *v17; // rcx
  PlayerWatcherComp *v18; // rcx
  uint32_t left_time; // ecx
  google::protobuf::uint32 v20; // eax
  google::protobuf::uint32 v21; // eax
  uint32_t *p_left_time; // rsi
  uint32_t *v23; // rax
  uint32_t *v24; // rdx
  uint32_t v25; // ecx
  char v26; // dl
  __int64 v27; // rdx
  __int64 v28; // rsi
  __int64 v29; // rdx
  bool has_new_watcher; // [rsp+17h] [rbp-1C9h]
  std::set<unsigned int>::iterator __for_begin; // [rsp+18h] [rbp-1C8h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+20h] [rbp-1C0h] BYREF
  const data::ActivityVintageHuntingExcelConfig *vintage_hunting_config_ptr; // [rsp+28h] [rbp-1B8h]
  VintageHuntingStageData *stage_data; // [rsp+30h] [rbp-1B0h]
  std::set<unsigned int> *__for_range; // [rsp+38h] [rbp-1A8h]
  const unsigned int *new_watcher_id; // [rsp+40h] [rbp-1A0h]
  proto::VintageHuntingThirdStageSettleInfo *stage_info; // [rsp+48h] [rbp-198h]
  std::shared_ptr<Config> v39; // [rsp+50h] [rbp-190h] BYREF
  common::milog::MiLogStream v40; // [rsp+60h] [rbp-180h] BYREF
  char v41[352]; // [rsp+80h] [rbp-160h] BYREF

  v2 = (unsigned __int64)v41;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 48 8 9 iter:1257 80 48 29 old_finished_watcher_set:1275 160 48 29 new_finished_watcher_set:128"
                        "4 240 48 11 notify:1295";
  *(_QWORD *)(v2 + 16) = VintageActivity::onGalleryVintageHuntingStageThreeSettleEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862721] = -234881024;
  v4[536862722] = 62194;
  v4[536862724] = -218959118;
  v4[536862726] = -219021312;
  v4[536862727] = 62194;
  v4[536862729] = -202116109;
  if ( BaseActivity::isOpening((const BaseActivity *const)this, 0)
    && !BaseActivity::isSettled((const BaseActivity *const)this) )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v39);
    p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v39)->design_config.txt_config_mgr.activity_vintage_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)event + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&event->stage_id);
    }
    vintage_hunting_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintageHuntingExcelConfig(
                                   p_activity_vintage_config_mgr,
                                   event->stage_id);
    std::shared_ptr<Config>::~shared_ptr(&v39);
    if ( vintage_hunting_config_ptr )
    {
      *(std::map<unsigned int,VintageHuntingStageData>::iterator *)(v2 + 48) = std::map<unsigned int,VintageHuntingStageData>::find(
                                                                                 &this->hunting_stage_map_,
                                                                                 &event->stage_id);
      __for_end._M_node = std::map<unsigned int,VintageHuntingStageData>::end(&this->hunting_stage_map_)._M_node;
      if ( std::operator==(
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)(v2 + 48),
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> >::_Self *)&__for_end) )
      {
        common::milog::MiLogStream::create(
          &v40,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "onGalleryVintageHuntingStageThreeSettleEvent",
          1260);
        v8 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
               &v40,
               (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &event->stage_id);
        common::milog::MiLogStream::~MiLogStream(&v40);
      }
      else
      {
        v9 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageHuntingStageData> > *const)(v2 + 48));
        stage_data = &v9->second;
        p_is_open = &v9->second.is_open;
        if ( *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) != 0
          && ((unsigned __int8)p_is_open & 7) >= *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) )
        {
          __asan_report_load1(p_is_open);
        }
        if ( !stage_data->is_open )
        {
          common::milog::MiLogStream::create(
            &v40,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "onGalleryVintageHuntingStageThreeSettleEvent",
            1267);
          v11 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                  &v40,
                  (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &event->stage_id);
          common::milog::MiLogStream::~MiLogStream(&v40);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)&event->boss_weak_times >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)event + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->boss_weak_times >> 3)
                                                                 + 0x7FFF8000) )
          {
            __asan_report_load4(&event->boss_weak_times);
          }
          boss_weak_times = event->boss_weak_times;
          if ( *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&this->boss_weak_times_);
          }
          v13 = boss_weak_times;
          v14 = SAFE_ADD<unsigned int,unsigned int>(this->boss_weak_times_, boss_weak_times);
          v15 = *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000);
          if ( v15 != 0 && v15 <= 3 )
          {
            LOBYTE(v13) = v15 != 0;
            __asan_report_store4(&this->boss_weak_times_, v13, v14);
          }
          this->boss_weak_times_ = v14;
          has_new_watcher = 0;
          VintageActivity::getFinishedWatcherSetWithoutEvent(
            (std::set<unsigned int> *)(v2 + 80),
            this,
            &vintage_hunting_config_ptr->watcher_ids);
          if ( *(char *)(((unsigned __int64)&event->is_success >> 3) + 0x7FFF8000) < 0 )
            __asan_report_load1(&event->is_success);
          if ( event->is_success )
          {
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->player_);
            WatcherComp = Player::getWatcherComp(this->player_);
            PlayerWatcherComp::triggerVintageHuntingFinishBossEvent(WatcherComp);
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->player_);
            v17 = Player::getWatcherComp(this->player_);
            if ( *(_BYTE *)(((unsigned __int64)&event->left_time >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&event->left_time >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&event->left_time);
            }
            PlayerWatcherComp::triggerVintageHuntingFinishBossInTimeEvent(v17, event->left_time);
          }
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          v18 = Player::getWatcherComp(this->player_);
          if ( *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&this->boss_weak_times_ >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&this->boss_weak_times_);
          }
          PlayerWatcherComp::triggerVintageHuntingBossWeakTimesEvent(v18, this->boss_weak_times_);
          VintageActivity::getFinishedWatcherSetWithoutEvent(
            (std::set<unsigned int> *)(v2 + 160),
            this,
            &vintage_hunting_config_ptr->watcher_ids);
          __for_range = (std::set<unsigned int> *)(v2 + 160);
          __for_begin._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v2 + 160))._M_node;
          __for_end._M_node = std::set<unsigned int>::end(__for_range)._M_node;
          while ( std::operator!=(&__for_begin, &__for_end) )
          {
            new_watcher_id = std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
            if ( !common::tools::MiscUtils::isContains<std::set<unsigned int>,unsigned int>(
                    (std::set<unsigned int> *)(v2 + 80),
                    new_watcher_id) )
            {
              has_new_watcher = 1;
              break;
            }
            std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
          }
          proto::SceneGalleryVintageHuntingSettleNotify::SceneGalleryVintageHuntingSettleNotify((proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240));
          if ( *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)event + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->stage_id >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(&event->stage_id);
          }
          proto::SceneGalleryVintageHuntingSettleNotify::set_stage_id(
            (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
            event->stage_id);
          if ( *(_BYTE *)(((unsigned __int64)&event->left_time >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->left_time >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->left_time);
          }
          left_time = event->left_time;
          if ( *(_BYTE *)(((unsigned __int64)&stage_data->record_value >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)stage_data + 8) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_data->record_value >> 3)
                                                                     + 0x7FFF8000) )
          {
            __asan_report_load4(&stage_data->record_value);
          }
          proto::SceneGalleryVintageHuntingSettleNotify::set_is_new_record(
            (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
            left_time > stage_data->record_value);
          if ( has_new_watcher )
          {
            proto::SceneGalleryVintageHuntingSettleNotify::set_has_new_watcher(
              (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
              1);
            v20 = std::set<unsigned int>::size((const std::set<unsigned int> *const)(v2 + 160));
            proto::SceneGalleryVintageHuntingSettleNotify::set_finished_watcher_num(
              (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
              v20);
            v21 = std::vector<unsigned int>::size(&vintage_hunting_config_ptr->watcher_ids);
            proto::SceneGalleryVintageHuntingSettleNotify::set_total_watcher_num(
              (proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240),
              v21);
          }
          stage_info = proto::SceneGalleryVintageHuntingSettleNotify::mutable_third_stage_info((proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240));
          if ( *(_BYTE *)(((unsigned __int64)&event->left_time >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&event->left_time >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&event->left_time);
          }
          proto::VintageHuntingThirdStageSettleInfo::set_left_time(stage_info, event->left_time);
          if ( *(char *)(((unsigned __int64)&event->is_success >> 3) + 0x7FFF8000) < 0 )
            __asan_report_load1(&event->is_success);
          proto::VintageHuntingThirdStageSettleInfo::set_is_success(stage_info, event->is_success);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 240));
          p_left_time = &event->left_time;
          v23 = (uint32_t *)std::max<unsigned int>(&stage_data->record_value, &event->left_time);
          v24 = v23;
          if ( *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v23 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v23);
          }
          v25 = *v24;
          v26 = *(_BYTE *)(((unsigned __int64)&stage_data->record_value >> 3) + 0x7FFF8000);
          LOBYTE(p_left_time) = v26 != 0;
          v27 = (v26 != 0) & (unsigned __int8)((char)((((_BYTE)stage_data + 8) & 7) + 3) >= v26);
          if ( (_BYTE)v27 )
            __asan_report_store4(&stage_data->record_value, p_left_time, v27);
          stage_data->record_value = v25;
          v28 = ((_BYTE)stage_data + 5) & 7;
          v29 = (*(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v28 >= *(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000));
          if ( (_BYTE)v29 )
            __asan_report_store1(&stage_data->is_finish, v28, v29);
          stage_data->is_finish = 1;
          BaseActivity::notifyClientData((BaseActivity *const)this, 0);
          proto::SceneGalleryVintageHuntingSettleNotify::~SceneGalleryVintageHuntingSettleNotify((proto::SceneGalleryVintageHuntingSettleNotify *const)(v2 + 240));
          std::set<unsigned int>::~set((std::set<unsigned int> *const)(v2 + 160));
          std::set<unsigned int>::~set((std::set<unsigned int> *const)(v2 + 80));
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v40,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "onGalleryVintageHuntingStageThreeSettleEvent",
        1253);
      v7 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
             &v40,
             (const char (*)[65])"[VINTAGE] findActivityVintageHuntingExcelConfig fails, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &event->stage_id);
      common::milog::MiLogStream::~MiLogStream(&v40);
    }
  }
  if ( v41 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1316: range 00000000149897DC-00000000149898B0
void __cdecl VintageActivity::onEnterScene(VintageActivity *const this, ScenePtr *p_scene_ptr, bool is_reenter)
{
  __int64 v3; // rsi
  PlayerSceneComp *SceneComp; // rax
  __int64 DestEnterReason; // rdx
  char v7; // al

  v3 = 0LL;
  if ( BaseActivity::isOpening((const BaseActivity *const)this, 0)
    && !BaseActivity::isSettled((const BaseActivity *const)this) )
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    SceneComp = Player::getSceneComp(this->player_);
    DestEnterReason = (unsigned int)PlayerSceneComp::getDestEnterReason(SceneComp);
    v7 = *(_BYTE *)(((unsigned __int64)&this->transfer_context_.enter_reason_ >> 3) + 0x7FFF8000);
    if ( v7 != 0 && v7 <= 3 )
    {
      LOBYTE(v3) = v7 != 0;
      __asan_report_store4(&this->transfer_context_.enter_reason_, v3, DestEnterReason);
    }
    this->transfer_context_.enter_reason_ = DestEnterReason;
  }
};

// Line 1327: range 00000000149898B2-000000001498A25D
void __cdecl VintageActivity::onPostEnterSceneEvent(VintageActivity *const this, const PostEnterSceneEvent *event)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  common::milog::MiLogStream *v7; // rax
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v10; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  Scene *v12; // rax
  common::milog::MiLogStream *v13; // rax
  Scene *v14; // rax
  SceneGalleryComp *v15; // rcx
  common::milog::MiLogStream *v16; // rax
  BaseActivity *v17; // rcx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  Scene *v21; // rax
  SceneGalleryComp *p_gallery_id; // rdi
  uint32_t SceneId; // [rsp+8h] [rbp-128h]
  SceneGalleryComp *GalleryComp; // [rsp+8h] [rbp-128h]
  std::less<unsigned int> __comp; // [rsp+2Eh] [rbp-102h] BYREF
  std::allocator<unsigned int> __a; // [rsp+2Fh] [rbp-101h] BYREF
  unsigned int val; // [rsp+30h] [rbp-100h] BYREF
  int32_t ret; // [rsp+34h] [rbp-FCh]
  const data::ActivityVintageHuntingExcelConfig *vintage_hunting_config_ptr; // [rsp+38h] [rbp-F8h]
  std::shared_ptr<Config> v30; // [rsp+40h] [rbp-F0h] BYREF
  common::milog::MiLogStream v31; // [rsp+50h] [rbp-E0h] BYREF
  std::set<unsigned int> uid_set; // [rsp+70h] [rbp-C0h] BYREF
  char v33[144]; // [rsp+A0h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v33;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 32 4 17 enter_reason:1334 48 4 21 hunting_stage_id:1335 64 16 14 scene_ptr:1346";
  *(_QWORD *)(v2 + 16) = VintageActivity::onPostEnterSceneEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -202178560;
  if ( BaseActivity::isOpening((const BaseActivity *const)this, 0)
    && !BaseActivity::isSettled((const BaseActivity *const)this) )
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->transfer_context_.enter_reason_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->transfer_context_.enter_reason_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->transfer_context_.enter_reason_);
    }
    *(_DWORD *)(v2 + 32) = this->transfer_context_.enter_reason_;
    if ( *(_BYTE *)(((unsigned __int64)&this->transfer_context_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this - 92) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->transfer_context_ >> 3)
                                                          + 0x7FFF8000) )
    {
      __asan_report_load4(&this->transfer_context_);
    }
    *(_DWORD *)(v2 + 48) = this->transfer_context_.hunting_stage_id;
    this->transfer_context_.hunting_stage_id = 0;
    this->transfer_context_.enter_reason_ = ENTER_REASON_NONE;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v30);
    v6 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v30);
    vintage_hunting_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintageHuntingExcelConfig(
                                   &v6->design_config.txt_config_mgr.activity_vintage_config_mgr,
                                   *(_DWORD *)(v2 + 48));
    std::shared_ptr<Config>::~shared_ptr(&v30);
    if ( vintage_hunting_config_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      Player::getSceneComp(this->player_);
      PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v2 + 64));
      if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v2 + 64)) )
      {
        common::milog::MiLogStream::create(
          &v31,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "onPostEnterSceneEvent",
          1349);
        common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
          &v31,
          (const char (*)[29])"[VINTAGE] getCurScene fails.");
        common::milog::MiLogStream::~MiLogStream(&v31);
      }
      else
      {
        v8 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
        SceneId = Scene::getSceneId(v8);
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v30);
        v9 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v30);
        LOBYTE(SceneId) = SceneId != TxtConfigMgr::getDefaultWorldMainSceneId(&v9->design_config.txt_config_mgr);
        std::shared_ptr<Config>::~shared_ptr(&v30);
        if ( (_BYTE)SceneId )
        {
          common::milog::MiLogStream::create(
            &v31,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "onPostEnterSceneEvent",
            1355);
          v10 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                  &v31,
                  (const char (*)[48])"[VINTAGE] player not in main scene 3, scene_id:");
          v11 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
          val = Scene::getSceneId(v11);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
          common::milog::MiLogStream::~MiLogStream(&v31);
        }
        else if ( *(_DWORD *)(v2 + 32) == 87 )
        {
          v12 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
          GalleryComp = Scene::getGalleryComp(v12);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          val = Player::getUid(this->player_);
          std::allocator<unsigned int>::allocator(&__a);
          std::set<unsigned int>::set(
            &uid_set,
            (std::initializer_list<unsigned int>)__PAIR128__(1LL, &val),
            &__comp,
            &__a);
          if ( *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->gallery_id >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)vintage_hunting_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->gallery_id >> 3)
                                                                                      + 0x7FFF8000) )
          {
            __asan_report_load4(&vintage_hunting_config_ptr->gallery_id);
          }
          ret = SceneGalleryComp::initGallery(GalleryComp, vintage_hunting_config_ptr->gallery_id, &uid_set);
          std::set<unsigned int>::~set(&uid_set);
          std::allocator<unsigned int>::~allocator(&__a);
          if ( ret )
          {
            common::milog::MiLogStream::create(
              &v31,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/vintage_activity.cpp",
              "onPostEnterSceneEvent",
              1365);
            v13 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    &v31,
                    (const char (*)[43])"[VINTAGE] gallery init failed, gallery_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v13,
              &vintage_hunting_config_ptr->gallery_id);
            common::milog::MiLogStream::~MiLogStream(&v31);
          }
          else
          {
            v14 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
            v15 = Scene::getGalleryComp(v14);
            if ( *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->gallery_id >> 3) + 0x7FFF8000) != 0
              && (char)((((_BYTE)vintage_hunting_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->gallery_id >> 3)
                                                                                        + 0x7FFF8000) )
            {
              __asan_report_load4(&vintage_hunting_config_ptr->gallery_id);
            }
            ret = SceneGalleryComp::startGallery(v15, vintage_hunting_config_ptr->gallery_id);
            if ( ret )
            {
              common::milog::MiLogStream::create(
                &v31,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/vintage_activity.cpp",
                "onPostEnterSceneEvent",
                1371);
              v16 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                      &v31,
                      (const char (*)[44])"[VINTAGE] gallery start failed, gallery_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v16,
                &vintage_hunting_config_ptr->gallery_id);
              common::milog::MiLogStream::~MiLogStream(&v31);
            }
            else
            {
              v17 = (BaseActivity *)this;
              if ( *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->quest_trigger_id >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)vintage_hunting_config_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->quest_trigger_id >> 3)
                                                                                          + 0x7FFF8000) )
              {
                __asan_report_load4(&vintage_hunting_config_ptr->quest_trigger_id);
              }
              BaseActivity::updateQuestContent(v17, vintage_hunting_config_ptr->quest_trigger_id);
            }
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v31,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/player/activity/vintage_activity.cpp",
            "onPostEnterSceneEvent",
            1380);
          v18 = common::milog::MiLogStream::operator<<<char [84],(char *[84])0>(
                  &v31,
                  (const char (*)[84])"[VINTAGE] player is in other transfer, need to stop gallery if exist. enter_reason:");
          v19 = common::milog::MiLogStream::operator<<<proto::EnterReason,(proto::EnterReason*)0>(
                  v18,
                  (const proto::EnterReason *)(v2 + 32));
          v20 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                  v19,
                  (const char (*)[20])", hunting_stage_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v20, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v31);
          v21 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
          p_gallery_id = Scene::getGalleryComp(v21);
          if ( *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->gallery_id >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)vintage_hunting_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&vintage_hunting_config_ptr->gallery_id >> 3)
                                                                                      + 0x7FFF8000) )
          {
            p_gallery_id = (SceneGalleryComp *)&vintage_hunting_config_ptr->gallery_id;
            __asan_report_load4(&vintage_hunting_config_ptr->gallery_id);
          }
          SceneGalleryComp::forceStopAndClearGallery(
            p_gallery_id,
            vintage_hunting_config_ptr->gallery_id,
            1,
            GALLERY_STOP_OWNER_LEAVE_SCENE);
        }
      }
      std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v2 + 64));
    }
    else
    {
      common::milog::MiLogStream::create(
        &v31,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "onPostEnterSceneEvent",
        1342);
      v7 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
             &v31,
             (const char (*)[65])"[VINTAGE] findActivityVintageHuntingExcelConfig fails, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 48));
      common::milog::MiLogStream::~MiLogStream(&v31);
    }
  }
  if ( v33 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 1390: range 000000001498A25E-000000001498A6F2
void __cdecl VintageActivity::tryRegisterPresentGroups(
        VintageActivity *const this,
        const std::vector<unsigned int> *present_group_vec)
{
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  PlayerSceneComp *SceneComp; // rcx
  Scene *v6; // rax
  unsigned __int64 BlockGroupComp; // rax
  unsigned __int64 v8; // rdx
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  common::milog::MiLogStream *v13; // rdx
  common::milog::MiLogStream *v14; // rax
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::iterator __for_begin; // [rsp+10h] [rbp-100h] BYREF
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::iterator __for_end; // [rsp+18h] [rbp-F8h] BYREF
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *__for_range; // [rsp+20h] [rbp-F0h]
  std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > *__in; // [rsp+28h] [rbp-E8h]
  std::tuple_element<0,std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *scene_ptr; // [rsp+30h] [rbp-E0h]
  std::tuple_element<1,std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *group_vec; // [rsp+38h] [rbp-D8h]
  common::milog::MiLogStream v21; // [rsp+40h] [rbp-D0h] BYREF
  char v22[176]; // [rsp+60h] [rbp-B0h] BYREF

  v2 = (std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = (std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *)v3;
  }
  *(_QWORD *)v2->_M_t._M_impl.gap0 = 1102416563LL;
  *(_QWORD *)&v2->_M_t._M_impl._M_header._M_color = "1 48 48 20 scene_group_map:1397";
  v2->_M_t._M_impl._M_header._M_parent = (std::_Rb_tree_node_base::_Base_ptr)VintageActivity::tryRegisterPresentGroups;
  v4 = (_DWORD *)((unsigned __int64)v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862723] = -202116109;
  if ( std::vector<unsigned int>::empty(present_group_vec) )
  {
    common::milog::MiLogStream::create(
      &v21,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "tryRegisterPresentGroups",
      1393);
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
      &v21,
      (const char (*)[35])"[VINTAGE] present_group_vec empty.");
    common::milog::MiLogStream::~MiLogStream(&v21);
  }
  else
  {
    std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::map(v2 + 1);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    SceneComp = Player::getSceneComp(this->player_);
    PlayerSceneComp::getGroupSceneMap(SceneComp, present_group_vec, v2 + 1);
    __for_range = v2 + 1;
    __for_begin._M_node = std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::begin(v2 + 1)._M_node;
    __for_end._M_node = std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::end(v2 + 1)._M_node;
    while ( std::operator!=(&__for_begin, &__for_end) )
    {
      __in = std::_Rb_tree_iterator<std::pair<std::shared_ptr<Scene> const,std::vector<unsigned int>>>::operator*(&__for_begin);
      scene_ptr = std::get<0ul,std::shared_ptr<Scene> const,std::vector<unsigned int>>(__in);
      group_vec = std::get<1ul,std::shared_ptr<Scene> const,std::vector<unsigned int>>(__in);
      if ( !std::operator==<Scene>(0LL, scene_ptr) )
      {
        v6 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)scene_ptr);
        BlockGroupComp = (unsigned __int64)Scene::getBlockGroupComp(v6);
        if ( *(_BYTE *)((BlockGroupComp >> 3) + 0x7FFF8000) )
          BlockGroupComp = __asan_report_load8(BlockGroupComp);
        v8 = *(_QWORD *)BlockGroupComp + 96LL;
        if ( *(_BYTE *)((v8 >> 3) + 0x7FFF8000) )
          BlockGroupComp = __asan_report_load8(*(_QWORD *)BlockGroupComp + 96LL);
        if ( (*(unsigned int (__fastcall **)(unsigned __int64, std::tuple_element<1,std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *, _QWORD, _QWORD))v8)(
               BlockGroupComp,
               group_vec,
               0LL,
               0LL) )
        {
          common::milog::MiLogStream::create(
            &v21,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "tryRegisterPresentGroups",
            1407);
          v9 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
                 &v21,
                 (const char (*)[27])"[VINTAGE] register groups:");
          v10 = common::milog::MiLogStream::operator<<<unsigned int>(v9, group_vec);
          v11 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v10, (const char (*)[9])" failed.");
          v12 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)scene_ptr);
          common::milog::MiLogStream::operator<<<Scene,(Scene*)0>(v11, v12);
          common::milog::MiLogStream::~MiLogStream(&v21);
        }
      }
      std::_Rb_tree_iterator<std::pair<std::shared_ptr<Scene> const,std::vector<unsigned int>>>::operator++(&__for_begin);
    }
    common::milog::MiLogStream::create(
      &v21,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "tryRegisterPresentGroups",
      1411);
    v13 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
            &v21,
            (const char (*)[33])"[VINTAGE] register stage groups:");
    v14 = common::milog::MiLogStream::operator<<<unsigned int>(v13, present_group_vec);
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v14, (const char (*)[7])" done.");
    common::milog::MiLogStream::~MiLogStream(&v21);
    std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::~map(v2 + 1);
  }
  if ( v22 == (char *)v2 )
  {
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v2->_M_t._M_impl.gap0 = 1172321806LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1417: range 000000001498A6F4-000000001498ADE1
void __cdecl VintageActivity::unregisterPresentGroups(VintageActivity *const this)
{
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // rcx
  common::milog::MiLogStream *v5; // rax
  const unsigned int *M_current; // r15
  const unsigned int *v7; // r14
  PlayerSceneComp *SceneComp; // rax
  Scene *v9; // rax
  unsigned __int64 BlockGroupComp; // rax
  unsigned __int64 v11; // rdx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  std::map<unsigned int,VintagePresentStageData>::iterator __for_begin; // [rsp+18h] [rbp-1B8h] BYREF
  std::map<unsigned int,VintagePresentStageData>::iterator __for_end; // [rsp+20h] [rbp-1B0h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::const_iterator __for_begin_0; // [rsp+28h] [rbp-1A8h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::const_iterator __for_end_0; // [rsp+30h] [rbp-1A0h] BYREF
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::iterator __for_begin_1; // [rsp+38h] [rbp-198h] BYREF
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::iterator __for_end_1; // [rsp+40h] [rbp-190h] BYREF
  std::map<unsigned int,VintagePresentStageData> *__for_range; // [rsp+48h] [rbp-188h]
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *__for_range_1; // [rsp+50h] [rbp-180h]
  const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > *v22; // [rsp+58h] [rbp-178h]
  std::tuple_element<0,const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *scene_ptr; // [rsp+60h] [rbp-170h]
  std::tuple_element<1,const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *group_vec; // [rsp+68h] [rbp-168h]
  const std::pair<unsigned int const,VintagePresentStageData> *v25; // [rsp+70h] [rbp-160h]
  std::tuple_element<0,const std::pair<unsigned int const,VintagePresentStageData> >::type *stage_id; // [rsp+78h] [rbp-158h]
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentStageData> >::type *stage_data; // [rsp+80h] [rbp-150h]
  const std::map<unsigned int,VintagePresentLevelData> *__for_range_0; // [rsp+88h] [rbp-148h]
  const std::pair<unsigned int const,VintagePresentLevelData> *v29; // [rsp+90h] [rbp-140h]
  std::tuple_element<0,const std::pair<unsigned int const,VintagePresentLevelData> >::type *_; // [rsp+98h] [rbp-138h]
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *present_data; // [rsp+A0h] [rbp-130h]
  const data::ActivityVintagePresentExcelConfig *present_config_ptr; // [rsp+A8h] [rbp-128h]
  std::shared_ptr<Config> v33; // [rsp+B0h] [rbp-120h] BYREF
  common::milog::MiLogStream v34; // [rsp+C0h] [rbp-110h] BYREF
  char v35[240]; // [rsp+E0h] [rbp-F0h] BYREF

  v1 = (unsigned __int64)v35;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_2(192LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "2 48 24 22 present_group_vec:1418 112 48 20 scene_group_map:1436";
  *(_QWORD *)(v1 + 16) = VintageActivity::unregisterPresentGroups;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = 61937;
  v3[536862722] = -218959360;
  v3[536862723] = 62194;
  v3[536862725] = -202116109;
  std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v1 + 48));
  __for_range = &this->present_stage_map_;
  __for_begin._M_node = std::map<unsigned int,VintagePresentStageData>::begin(&this->present_stage_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,VintagePresentStageData>::end(&this->present_stage_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v25 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator*(&__for_begin);
    stage_id = std::get<0ul,unsigned int const,VintagePresentStageData>(v25);
    stage_data = (std::tuple_element<1,const std::pair<unsigned int const,VintagePresentStageData> >::type *)std::get<1ul,unsigned int const,VintagePresentStageData>(v25);
    __for_range_0 = &stage_data->present_level_map;
    __for_begin_0._M_node = std::map<unsigned int,VintagePresentLevelData>::begin(&stage_data->present_level_map)._M_node;
    __for_end_0._M_node = std::map<unsigned int,VintagePresentLevelData>::end(__for_range_0)._M_node;
    while ( std::operator!=(&__for_begin_0, &__for_end_0) )
    {
      v29 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator*(&__for_begin_0);
      _ = std::get<0ul,unsigned int const,VintagePresentLevelData>(v29);
      present_data = (std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *)std::get<1ul,unsigned int const,VintagePresentLevelData>(v29);
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v33);
      p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v33)->design_config.txt_config_mgr.activity_vintage_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)present_data >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)present_data & 7) + 3) >= *(_BYTE *)(((unsigned __int64)present_data >> 3)
                                                                       + 0x7FFF8000) )
      {
        __asan_report_load4(present_data);
      }
      present_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintagePresentExcelConfig(
                             p_activity_vintage_config_mgr,
                             present_data->present_id);
      std::shared_ptr<Config>::~shared_ptr(&v33);
      if ( present_config_ptr )
      {
        M_current = std::vector<unsigned int>::end(&present_config_ptr->group_id_list)._M_current;
        v7 = std::vector<unsigned int>::begin(&present_config_ptr->group_id_list)._M_current;
        __for_begin_1._M_node = (std::_Rb_tree_iterator<std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::_Base_ptr)std::vector<unsigned int>::end((std::vector<unsigned int> *const)(v1 + 48))._M_current;
        __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::__normal_iterator<unsigned int *>(
          (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> > *const)&__for_end_1,
          (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)&__for_begin_1);
        std::vector<unsigned int>::insert<__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>,void>(
          (std::vector<unsigned int> *const)(v1 + 48),
          (std::vector<unsigned int>::const_iterator)__for_end_1._M_node,
          (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >)v7,
          (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >)M_current);
      }
      else
      {
        common::milog::MiLogStream::create(
          &v34,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "unregisterPresentGroups",
          1427);
        v5 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
               &v34,
               (const char (*)[67])"[VINTAGE] findActivityVintagePresentExcelConfig fails, present_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, &present_data->present_id);
        common::milog::MiLogStream::~MiLogStream(&v34);
      }
      std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator++(&__for_begin_0);
    }
    std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator++(&__for_begin);
  }
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::map((std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *const)(v1 + 112));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  SceneComp = Player::getSceneComp(this->player_);
  PlayerSceneComp::getGroupSceneMap(
    SceneComp,
    (const std::vector<unsigned int> *)(v1 + 48),
    (std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *)(v1 + 112));
  __for_range_1 = (std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *)(v1 + 112);
  __for_begin_1._M_node = std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::begin((std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *const)(v1 + 112))._M_node;
  __for_end_1._M_node = std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::end(__for_range_1)._M_node;
  while ( std::operator!=(&__for_begin_1, &__for_end_1) )
  {
    v22 = std::_Rb_tree_iterator<std::pair<std::shared_ptr<Scene> const,std::vector<unsigned int>>>::operator*(&__for_begin_1);
    scene_ptr = std::get<0ul,std::shared_ptr<Scene> const,std::vector<unsigned int>>(v22);
    group_vec = (std::tuple_element<1,const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *)std::get<1ul,std::shared_ptr<Scene> const,std::vector<unsigned int>>(v22);
    if ( !std::operator==<Scene>(0LL, scene_ptr) )
    {
      v9 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)scene_ptr);
      BlockGroupComp = (unsigned __int64)Scene::getBlockGroupComp(v9);
      if ( *(_BYTE *)((BlockGroupComp >> 3) + 0x7FFF8000) )
        BlockGroupComp = __asan_report_load8(BlockGroupComp);
      v11 = *(_QWORD *)BlockGroupComp + 104LL;
      if ( *(_BYTE *)((v11 >> 3) + 0x7FFF8000) )
        BlockGroupComp = __asan_report_load8(*(_QWORD *)BlockGroupComp + 104LL);
      if ( (*(unsigned int (__fastcall **)(unsigned __int64, std::tuple_element<1,const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *, __int64))v11)(
             BlockGroupComp,
             group_vec,
             1LL) )
      {
        common::milog::MiLogStream::create(
          &v34,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "unregisterPresentGroups",
          1446);
        v12 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                &v34,
                (const char (*)[28])"[VINTAGE] unregister group:");
        v13 = common::milog::MiLogStream::operator<<<unsigned int>(v12, group_vec);
        common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v13, (const char (*)[9])" failed.");
        common::milog::MiLogStream::~MiLogStream(&v34);
      }
    }
    std::_Rb_tree_iterator<std::pair<std::shared_ptr<Scene> const,std::vector<unsigned int>>>::operator++(&__for_begin_1);
  }
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::~map((std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *const)(v1 + 112));
  std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v1 + 48));
  if ( v35 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1452: range 000000001498ADE2-000000001498B491
void __cdecl VintageActivity::initPresentGroups(VintageActivity *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  _DWORD *v3; // r12
  bool *p_is_finish; // rax
  bool *p_is_open; // rax
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // rcx
  common::milog::MiLogStream *v8; // rax
  const unsigned int *M_current; // r15
  const unsigned int *v10; // r14
  std::map<unsigned int,VintagePresentStageData>::iterator __for_begin; // [rsp+18h] [rbp-138h] BYREF
  std::map<unsigned int,VintagePresentStageData>::iterator __for_end; // [rsp+20h] [rbp-130h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::const_iterator __for_begin_0; // [rsp+28h] [rbp-128h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::const_iterator __for_end_0; // [rsp+30h] [rbp-120h] BYREF
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > __i; // [rsp+38h] [rbp-118h] BYREF
  __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> > __position; // [rsp+40h] [rbp-110h] BYREF
  std::map<unsigned int,VintagePresentStageData> *__for_range; // [rsp+48h] [rbp-108h]
  const std::pair<unsigned int const,VintagePresentStageData> *v18; // [rsp+50h] [rbp-100h]
  std::tuple_element<0,const std::pair<unsigned int const,VintagePresentStageData> >::type *stage_id; // [rsp+58h] [rbp-F8h]
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentStageData> >::type *stage_data; // [rsp+60h] [rbp-F0h]
  const std::map<unsigned int,VintagePresentLevelData> *__for_range_0; // [rsp+68h] [rbp-E8h]
  const std::pair<unsigned int const,VintagePresentLevelData> *v22; // [rsp+70h] [rbp-E0h]
  std::tuple_element<0,const std::pair<unsigned int const,VintagePresentLevelData> >::type *level_id; // [rsp+78h] [rbp-D8h]
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *level_data; // [rsp+80h] [rbp-D0h]
  const data::ActivityVintagePresentExcelConfig *present_config_ptr; // [rsp+88h] [rbp-C8h]
  std::shared_ptr<Config> v26; // [rsp+90h] [rbp-C0h] BYREF
  common::milog::MiLogStream v27; // [rsp+A0h] [rbp-B0h] BYREF
  char v28[144]; // [rsp+C0h] [rbp-90h] BYREF

  v1 = (unsigned __int64)v28;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_1(96LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 24 22 present_group_vec:1459";
  *(_QWORD *)(v1 + 16) = VintageActivity::initPresentGroups;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -218103808;
  v3[536862722] = -202116109;
  common::milog::MiLogStream::create(
    &v27,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/vintage_activity.cpp",
    "initPresentGroups",
    1453);
  common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
    &v27,
    (const char (*)[35])"[VINTAGE] initPresentGroups begin.");
  common::milog::MiLogStream::~MiLogStream(&v27);
  if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_content_closed_);
  if ( !this->is_content_closed_
    && !BaseActivity::isSettled((const BaseActivity *const)this)
    && BaseActivity::isOpening((const BaseActivity *const)this, 0) )
  {
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v1 + 32));
    __for_range = &this->present_stage_map_;
    __for_begin._M_node = std::map<unsigned int,VintagePresentStageData>::begin(&this->present_stage_map_)._M_node;
    __for_end._M_node = std::map<unsigned int,VintagePresentStageData>::end(&this->present_stage_map_)._M_node;
    while ( std::operator!=(&__for_begin, &__for_end) )
    {
      v18 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator*(&__for_begin);
      stage_id = std::get<0ul,unsigned int const,VintagePresentStageData>(v18);
      stage_data = (std::tuple_element<1,const std::pair<unsigned int const,VintagePresentStageData> >::type *)std::get<1ul,unsigned int const,VintagePresentStageData>(v18);
      p_is_finish = &stage_data->is_finish;
      if ( *(_BYTE *)(((unsigned __int64)p_is_finish >> 3) + 0x7FFF8000) != 0
        && ((unsigned __int8)p_is_finish & 7) >= *(_BYTE *)(((unsigned __int64)p_is_finish >> 3) + 0x7FFF8000) )
      {
        __asan_report_load1(p_is_finish);
      }
      if ( !stage_data->is_finish )
      {
        if ( *(_BYTE *)(((unsigned __int64)&stage_data->is_open >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)stage_data + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&stage_data->is_open >> 3)
                                                                 + 0x7FFF8000) )
        {
          __asan_report_load1(&stage_data->is_open);
        }
        if ( stage_data->is_open )
        {
          __for_range_0 = &stage_data->present_level_map;
          __for_begin_0._M_node = std::map<unsigned int,VintagePresentLevelData>::begin(&stage_data->present_level_map)._M_node;
          __for_end_0._M_node = std::map<unsigned int,VintagePresentLevelData>::end(__for_range_0)._M_node;
          while ( std::operator!=(&__for_begin_0, &__for_end_0) )
          {
            v22 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator*(&__for_begin_0);
            level_id = std::get<0ul,unsigned int const,VintagePresentLevelData>(v22);
            level_data = (std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *)std::get<1ul,unsigned int const,VintagePresentLevelData>(v22);
            p_is_open = &level_data->is_open;
            if ( *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) != 0
              && ((unsigned __int8)p_is_open & 7) >= *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) )
            {
              __asan_report_load1(p_is_open);
            }
            if ( level_data->is_open )
            {
              if ( *(_BYTE *)(((unsigned __int64)&level_data->is_finish >> 3) + 0x7FFF8000) != 0
                && (((unsigned __int8)level_data + 9) & 7) >= *(_BYTE *)(((unsigned __int64)&level_data->is_finish >> 3)
                                                                       + 0x7FFF8000) )
              {
                __asan_report_load1(&level_data->is_finish);
              }
              if ( !level_data->is_finish )
              {
                ServiceBox::findService<GameserverService>();
                GameserverService::getConfig((GameserverService *const)&v26);
                p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v26)->design_config.txt_config_mgr.activity_vintage_config_mgr;
                if ( *(_BYTE *)(((unsigned __int64)level_data >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)level_data & 7) + 3) >= *(_BYTE *)(((unsigned __int64)level_data >> 3)
                                                                               + 0x7FFF8000) )
                {
                  __asan_report_load4(level_data);
                }
                present_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintagePresentExcelConfig(
                                       p_activity_vintage_config_mgr,
                                       level_data->present_id);
                std::shared_ptr<Config>::~shared_ptr(&v26);
                if ( !present_config_ptr )
                {
                  common::milog::MiLogStream::create(
                    &v27,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/vintage_activity.cpp",
                    "initPresentGroups",
                    1477);
                  v8 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
                         &v27,
                         (const char (*)[67])"[VINTAGE] findActivityVintagePresentExcelConfig fails, present_id:");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &level_data->present_id);
                  common::milog::MiLogStream::~MiLogStream(&v27);
                  goto LABEL_36;
                }
                M_current = std::vector<unsigned int>::end(&present_config_ptr->group_id_list)._M_current;
                v10 = std::vector<unsigned int>::begin(&present_config_ptr->group_id_list)._M_current;
                __i._M_current = std::vector<unsigned int>::end((std::vector<unsigned int> *const)(v1 + 32))._M_current;
                __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::__normal_iterator<unsigned int *>(
                  &__position,
                  &__i);
                std::vector<unsigned int>::insert<__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>,void>(
                  (std::vector<unsigned int> *const)(v1 + 32),
                  __position,
                  (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >)v10,
                  (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >)M_current);
              }
            }
            std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator++(&__for_begin_0);
          }
        }
      }
      std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator++(&__for_begin);
    }
    VintageActivity::tryRegisterPresentGroups(this, (const std::vector<unsigned int> *)(v1 + 32));
LABEL_36:
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v1 + 32));
  }
  if ( v28 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 1489: range 000000001498B492-000000001498BAF1
__int64 __fastcall VintageActivity::openPresentStage(VintageActivity *const this, uint32_t stage_id)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  unsigned int v6; // r14d
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::pointer v7; // rax
  bool *p_is_open; // rax
  common::milog::MiLogStream *v9; // rax
  __int64 v10; // rsi
  __int64 v11; // rdx
  bool *v12; // rax
  __int64 v13; // rsi
  __int64 v14; // rdx
  uint32_t *p_open_order; // rax
  const unsigned int *M_current; // r15
  const unsigned int *v17; // r14
  __int64 result; // rax
  std::unordered_map<unsigned int,data::ActivityVintagePresentExcelConfig>::const_iterator __for_begin_0; // [rsp+28h] [rbp-168h] BYREF
  std::unordered_map<unsigned int,data::ActivityVintagePresentExcelConfig>::const_iterator __for_end_0; // [rsp+30h] [rbp-160h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::iterator __for_begin; // [rsp+38h] [rbp-158h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::iterator __for_end; // [rsp+40h] [rbp-150h] BYREF
  VintagePresentStageData *stage_data; // [rsp+48h] [rbp-148h]
  std::map<unsigned int,VintagePresentLevelData> *__for_range; // [rsp+50h] [rbp-140h]
  const std::unordered_map<unsigned int,data::ActivityVintagePresentExcelConfig> *__for_range_0; // [rsp+58h] [rbp-138h]
  const std::pair<unsigned int const,data::ActivityVintagePresentExcelConfig> *v26; // [rsp+60h] [rbp-130h]
  std::tuple_element<0,const std::pair<unsigned int const,data::ActivityVintagePresentExcelConfig> >::type *_; // [rsp+68h] [rbp-128h]
  std::tuple_element<1,const std::pair<unsigned int const,data::ActivityVintagePresentExcelConfig> >::type *present_config; // [rsp+70h] [rbp-120h]
  std::pair<unsigned int const,VintagePresentLevelData> *__in; // [rsp+78h] [rbp-118h]
  std::tuple_element<0,std::pair<unsigned int const,VintagePresentLevelData> >::type *level_id; // [rsp+80h] [rbp-110h]
  std::tuple_element<1,std::pair<unsigned int const,VintagePresentLevelData> >::type *level_data; // [rsp+88h] [rbp-108h]
  std::shared_ptr<Config> v32; // [rsp+90h] [rbp-100h] BYREF
  common::milog::MiLogStream v33; // [rsp+A0h] [rbp-F0h] BYREF
  char v34[208]; // [rsp+C0h] [rbp-D0h] BYREF

  v2 = (unsigned __int64)v34;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(160LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 stage_id:1488 64 8 9 iter:1490 96 24 22 present_group_vec:1512";
  *(_QWORD *)(v2 + 16) = VintageActivity::openPresentStage;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -218103808;
  v4[536862724] = -202116109;
  *(_DWORD *)(v2 + 48) = stage_id;
  *(std::map<unsigned int,VintagePresentStageData>::iterator *)(v2 + 64) = std::map<unsigned int,VintagePresentStageData>::find(
                                                                             &this->present_stage_map_,
                                                                             (const std::map<unsigned int,VintagePresentStageData>::key_type *)(v2 + 48));
  __for_end._M_node = std::map<unsigned int,VintagePresentStageData>::end(&this->present_stage_map_)._M_node;
  if ( std::operator==(
         (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)(v2 + 64),
         (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)&__for_end) )
  {
    common::milog::MiLogStream::create(
      &v33,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "openPresentStage",
      1493);
    v5 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
           &v33,
           (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, (const unsigned int *)(v2 + 48));
    common::milog::MiLogStream::~MiLogStream(&v33);
    v6 = -1;
  }
  else
  {
    v7 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> > *const)(v2 + 64));
    stage_data = &v7->second;
    p_is_open = &v7->second.is_open;
    if ( *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) != 0
      && ((unsigned __int8)p_is_open & 7) >= *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) )
    {
      __asan_report_load1(p_is_open);
    }
    if ( stage_data->is_open )
    {
      common::milog::MiLogStream::create(
        &v33,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "openPresentStage",
        1501);
      v9 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
             &v33,
             (const char (*)[43])"[VINTAGE] stage is already open, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v2 + 48));
      common::milog::MiLogStream::~MiLogStream(&v33);
      v6 = 0;
    }
    else
    {
      v10 = ((_BYTE)stage_data + 4) & 7;
      v11 = (*(_BYTE *)(((unsigned __int64)&stage_data->is_open >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v10 >= *(_BYTE *)(((unsigned __int64)&stage_data->is_open >> 3) + 0x7FFF8000));
      if ( (_BYTE)v11 )
        __asan_report_store1(&stage_data->is_open, v10, v11);
      stage_data->is_open = 1;
      __for_range = &stage_data->present_level_map;
      __for_begin._M_node = std::map<unsigned int,VintagePresentLevelData>::begin(&stage_data->present_level_map)._M_node;
      __for_end._M_node = std::map<unsigned int,VintagePresentLevelData>::end(__for_range)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        __in = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator*(&__for_begin);
        level_id = std::get<0ul,unsigned int const,VintagePresentLevelData>(__in);
        level_data = std::get<1ul,unsigned int const,VintagePresentLevelData>(__in);
        v12 = &level_data->is_open;
        v13 = ((_BYTE)level_data + 8) & 7;
        v14 = (*(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v13 >= *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000));
        if ( (_BYTE)v14 )
          __asan_report_store1(v12, v13, v14);
        level_data->is_open = 1;
        std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator++(&__for_begin);
      }
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 96));
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v32);
      __for_range_0 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v32)->design_config.txt_config_mgr.activity_vintage_config_mgr.activity_vintage_present_excel_config_map;
      std::shared_ptr<Config>::~shared_ptr(&v32);
      __for_begin_0._M_cur = std::unordered_map<unsigned int,data::ActivityVintagePresentExcelConfig>::begin(__for_range_0)._M_cur;
      __for_end_0._M_cur = std::unordered_map<unsigned int,data::ActivityVintagePresentExcelConfig>::end(__for_range_0)._M_cur;
      while ( std::__detail::operator!=<std::pair<unsigned int const,data::ActivityVintagePresentExcelConfig>,false>(
                &__for_begin_0,
                &__for_end_0) )
      {
        v26 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintagePresentExcelConfig>,false,false>::operator*(&__for_begin_0);
        _ = std::get<0ul,unsigned int const,data::ActivityVintagePresentExcelConfig>(v26);
        present_config = (std::tuple_element<1,const std::pair<unsigned int const,data::ActivityVintagePresentExcelConfig> >::type *)std::get<1ul,unsigned int const,data::ActivityVintagePresentExcelConfig>(v26);
        p_open_order = &present_config->open_order;
        if ( *(_BYTE *)(((unsigned __int64)p_open_order >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)p_open_order & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_open_order >> 3)
                                                                         + 0x7FFF8000) )
        {
          __asan_report_load4(p_open_order);
        }
        if ( present_config->open_order == *(_DWORD *)(v2 + 48) )
        {
          M_current = std::vector<unsigned int>::end(&present_config->group_id_list)._M_current;
          v17 = std::vector<unsigned int>::begin(&present_config->group_id_list)._M_current;
          __for_begin._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData> >::_Base_ptr)std::vector<unsigned int>::end((std::vector<unsigned int> *const)(v2 + 96))._M_current;
          __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::__normal_iterator<unsigned int *>(
            (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> > *const)&__for_end,
            (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)&__for_begin);
          std::vector<unsigned int>::insert<__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>,void>(
            (std::vector<unsigned int> *const)(v2 + 96),
            (std::vector<unsigned int>::const_iterator)__for_end._M_node,
            (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >)v17,
            (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >)M_current);
        }
        std::__detail::_Node_const_iterator<std::pair<unsigned int const,data::ActivityVintagePresentExcelConfig>,false,false>::operator++(&__for_begin_0);
      }
      VintageActivity::tryRegisterPresentGroups(this, (const std::vector<unsigned int> *)(v2 + 96));
      v6 = 0;
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 96));
    }
  }
  result = v6;
  if ( v34 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 1529: range 000000001498BAF2-000000001498C431
__int64 __fastcall VintageActivity::finishGroupsByPresentId(VintageActivity *const this, const uint32_t present_id)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  common::milog::MiLogStream *v6; // rax
  unsigned int v7; // r14d
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  PlayerItemComp *ItemComp; // rcx
  common::milog::MiLogStream *v11; // rbx
  PlayerItemComp *p_reward_id; // rdi
  PlayerSceneComp *SceneComp; // rax
  Scene *v14; // rax
  unsigned __int64 BlockGroupComp; // rax
  unsigned __int64 v16; // rdx
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  __int64 result; // rax
  unsigned int val; // [rsp+10h] [rbp-1A0h] BYREF
  int32_t ret; // [rsp+14h] [rbp-19Ch]
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::iterator __for_begin; // [rsp+18h] [rbp-198h] BYREF
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::iterator __for_end; // [rsp+20h] [rbp-190h] BYREF
  const data::ActivityVintagePresentExcelConfig *present_config_ptr; // [rsp+28h] [rbp-188h]
  std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *__for_range; // [rsp+30h] [rbp-180h]
  const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > *v27; // [rsp+38h] [rbp-178h]
  std::tuple_element<0,const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *scene_ptr; // [rsp+40h] [rbp-170h]
  std::tuple_element<1,const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *group_vec; // [rsp+48h] [rbp-168h]
  std::shared_ptr<Config> v30; // [rsp+50h] [rbp-160h] BYREF
  common::milog::MiLogStream v31; // [rsp+60h] [rbp-150h] BYREF
  char v32[304]; // [rsp+80h] [rbp-130h] BYREF

  v2 = (unsigned __int64)v32;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(256LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 32 4 15 present_id:1528 48 24 11 reason:1549 112 24 11 notify:1561 176 48 20 scene_group_map:1566";
  *(_QWORD *)(v2 + 16) = VintageActivity::finishGroupsByPresentId;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61956;
  v4[536862722] = -218959360;
  v4[536862723] = 62194;
  v4[536862724] = -218959360;
  v4[536862725] = 62194;
  v4[536862727] = -202116109;
  *(_DWORD *)(v2 + 32) = present_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v30);
  v5 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v30);
  present_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintagePresentExcelConfig(
                         &v5->design_config.txt_config_mgr.activity_vintage_config_mgr,
                         *(_DWORD *)(v2 + 32));
  std::shared_ptr<Config>::~shared_ptr(&v30);
  if ( present_config_ptr )
  {
    if ( VintageActivity::checkPresentIdIsOpen(this, *(_DWORD *)(v2 + 32)) )
    {
      common::milog::MiLogStream::create(
        &v31,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "finishGroupsByPresentId",
        1539);
      v8 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
             &v31,
             (const char (*)[50])"[VINTAGE] checkPresentIdIsOpen fails, present_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v2 + 32));
      common::milog::MiLogStream::~MiLogStream(&v31);
      v7 = -1;
    }
    else if ( common::tools::MiscUtils::isContains<std::set<unsigned int>,unsigned int>(
                &this->taken_reward_present_id_set_,
                (const unsigned int *)(v2 + 32)) )
    {
      common::milog::MiLogStream::create(
        &v31,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "finishGroupsByPresentId",
        1546);
      v9 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
             &v31,
             (const char (*)[44])"[VINTAGE] already taken reward, present_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v2 + 32));
      common::milog::MiLogStream::~MiLogStream(&v31);
      v7 = -1;
    }
    else
    {
      ActionReason::ActionReason(
        (ActionReason *const)(v2 + 48),
        ACTION_REASON_VINTAGE_PRESENT,
        ITEM_LIMIT_ACTIVITY_VINTAGE);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      ItemComp = Player::getItemComp(this->player_);
      if ( *(_BYTE *)(((unsigned __int64)&present_config_ptr->reward_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&present_config_ptr->reward_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&present_config_ptr->reward_id);
      }
      ret = PlayerItemComp::checkGrantReward(ItemComp, present_config_ptr->reward_id, (const ActionReason *)(v2 + 48));
      if ( ret )
      {
        common::milog::MiLogStream::create(
          &v31,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "finishGroupsByPresentId",
          1553);
        v11 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                &v31,
                (const char (*)[41])"[VINTAGE] checkGrantReward failed, uid: ");
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        val = Player::getUid(this->player_);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
        common::milog::MiLogStream::~MiLogStream(&v31);
        v7 = ret;
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        p_reward_id = Player::getItemComp(this->player_);
        if ( *(_BYTE *)(((unsigned __int64)&present_config_ptr->reward_id >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&present_config_ptr->reward_id >> 3) + 0x7FFF8000) <= 3 )
        {
          p_reward_id = (PlayerItemComp *)&present_config_ptr->reward_id;
          __asan_report_load4(&present_config_ptr->reward_id);
        }
        PlayerItemComp::grantReward(p_reward_id, present_config_ptr->reward_id, (const ActionReason *)(v2 + 48), 0LL);
        std::set<unsigned int>::insert(
          &this->taken_reward_present_id_set_,
          (const std::set<unsigned int>::value_type *)(v2 + 32));
        VintageActivity::updatePresentDataState(this, *(_DWORD *)(v2 + 32));
        proto::VintagePresentFinishNotify::VintagePresentFinishNotify((proto::VintagePresentFinishNotify *const)(v2 + 112));
        proto::VintagePresentFinishNotify::set_present_id(
          (proto::VintagePresentFinishNotify *const)(v2 + 112),
          *(_DWORD *)(v2 + 32));
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 112));
        std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::map((std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *const)(v2 + 176));
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        SceneComp = Player::getSceneComp(this->player_);
        PlayerSceneComp::getGroupSceneMap(
          SceneComp,
          &present_config_ptr->group_id_list,
          (std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *)(v2 + 176));
        __for_range = (std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *)(v2 + 176);
        __for_begin._M_node = std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::begin((std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *const)(v2 + 176))._M_node;
        __for_end._M_node = std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::end((std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *const)(v2 + 176))._M_node;
        while ( std::operator!=(&__for_begin, &__for_end) )
        {
          v27 = std::_Rb_tree_iterator<std::pair<std::shared_ptr<Scene> const,std::vector<unsigned int>>>::operator*(&__for_begin);
          scene_ptr = std::get<0ul,std::shared_ptr<Scene> const,std::vector<unsigned int>>(v27);
          group_vec = (std::tuple_element<1,const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *)std::get<1ul,std::shared_ptr<Scene> const,std::vector<unsigned int>>(v27);
          if ( !std::operator==<Scene>(0LL, scene_ptr) )
          {
            v14 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)scene_ptr);
            BlockGroupComp = (unsigned __int64)Scene::getBlockGroupComp(v14);
            if ( *(_BYTE *)((BlockGroupComp >> 3) + 0x7FFF8000) )
              BlockGroupComp = __asan_report_load8(BlockGroupComp);
            v16 = *(_QWORD *)BlockGroupComp + 104LL;
            if ( *(_BYTE *)((v16 >> 3) + 0x7FFF8000) )
              BlockGroupComp = __asan_report_load8(*(_QWORD *)BlockGroupComp + 104LL);
            if ( (*(unsigned int (__fastcall **)(unsigned __int64, std::tuple_element<1,const std::pair<const std::shared_ptr<Scene>,std::vector<unsigned int> > >::type *, _QWORD))v16)(
                   BlockGroupComp,
                   group_vec,
                   0LL) )
            {
              common::milog::MiLogStream::create(
                &v31,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/vintage_activity.cpp",
                "finishGroupsByPresentId",
                1576);
              v17 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                      &v31,
                      (const char (*)[28])"[VINTAGE] unregister group:");
              v18 = common::milog::MiLogStream::operator<<<unsigned int>(v17, group_vec);
              common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v18, (const char (*)[9])" failed.");
              common::milog::MiLogStream::~MiLogStream(&v31);
            }
          }
          std::_Rb_tree_iterator<std::pair<std::shared_ptr<Scene> const,std::vector<unsigned int>>>::operator++(&__for_begin);
        }
        v7 = 0;
        std::map<std::shared_ptr<Scene>,std::vector<unsigned int>>::~map((std::map<std::shared_ptr<Scene>,std::vector<unsigned int>> *const)(v2 + 176));
        proto::VintagePresentFinishNotify::~VintagePresentFinishNotify((proto::VintagePresentFinishNotify *const)(v2 + 112));
      }
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v31,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "finishGroupsByPresentId",
      1533);
    v6 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
           &v31,
           (const char (*)[67])"[VINTAGE] findActivityVintagePresentExcelConfig fails, present_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, (const unsigned int *)(v2 + 32));
    common::milog::MiLogStream::~MiLogStream(&v31);
    v7 = -1;
  }
  result = v7;
  if ( v32 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1584: range 000000001498C432-000000001498CABB
__int64 __fastcall VintageActivity::checkPresentIdIsOpen(VintageActivity *const this, const uint32_t present_id)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  common::milog::MiLogStream *v6; // rax
  __int64 result; // rax
  common::milog::MiLogStream *v8; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::pointer v9; // rax
  bool *p_is_open; // rax
  common::milog::MiLogStream *v11; // rax
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  bool is_exist; // [rsp+1Fh] [rbp-F1h]
  std::map<unsigned int,VintagePresentLevelData>::iterator __for_begin; // [rsp+20h] [rbp-F0h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::iterator __for_end; // [rsp+28h] [rbp-E8h] BYREF
  const data::ActivityVintagePresentExcelConfig *present_config_ptr; // [rsp+30h] [rbp-E0h]
  VintagePresentStageData *stage_data; // [rsp+38h] [rbp-D8h]
  std::map<unsigned int,VintagePresentLevelData> *__for_range; // [rsp+40h] [rbp-D0h]
  const std::pair<unsigned int const,VintagePresentLevelData> *v21; // [rsp+48h] [rbp-C8h]
  std::tuple_element<0,const std::pair<unsigned int const,VintagePresentLevelData> >::type *_; // [rsp+50h] [rbp-C0h]
  std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *present_data; // [rsp+58h] [rbp-B8h]
  std::shared_ptr<Config> v24; // [rsp+60h] [rbp-B0h] BYREF
  common::milog::MiLogStream v25; // [rsp+70h] [rbp-A0h] BYREF
  char v26[128]; // [rsp+90h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 15 present_id:1583 64 8 9 iter:1592";
  *(_QWORD *)(v2 + 16) = VintageActivity::checkPresentIdIsOpen;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -202116352;
  *(_DWORD *)(v2 + 48) = present_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v24);
  v5 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v24);
  present_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintagePresentExcelConfig(
                         &v5->design_config.txt_config_mgr.activity_vintage_config_mgr,
                         *(_DWORD *)(v2 + 48));
  std::shared_ptr<Config>::~shared_ptr(&v24);
  if ( present_config_ptr )
  {
    *(std::map<unsigned int,VintagePresentStageData>::iterator *)(v2 + 64) = std::map<unsigned int,VintagePresentStageData>::find(
                                                                               &this->present_stage_map_,
                                                                               &present_config_ptr->open_order);
    __for_end._M_node = std::map<unsigned int,VintagePresentStageData>::end(&this->present_stage_map_)._M_node;
    if ( std::operator==(
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)(v2 + 64),
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)&__for_end) )
    {
      common::milog::MiLogStream::create(
        &v25,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "checkPresentIdIsOpen",
        1595);
      v8 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
             &v25,
             (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &present_config_ptr->open_order);
      common::milog::MiLogStream::~MiLogStream(&v25);
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v9 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> > *const)(v2 + 64));
      stage_data = &v9->second;
      p_is_open = &v9->second.is_open;
      if ( *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) != 0
        && ((unsigned __int8)p_is_open & 7) >= *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) )
      {
        __asan_report_load1(p_is_open);
      }
      if ( !stage_data->is_open )
      {
        common::milog::MiLogStream::create(
          &v25,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "checkPresentIdIsOpen",
          1601);
        v11 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                &v25,
                (const char (*)[36])"[VINTAGE] stage not open, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &stage_data->stage_id);
        common::milog::MiLogStream::~MiLogStream(&v25);
        result = 0xFFFFFFFFLL;
      }
      else
      {
        is_exist = 0;
        __for_range = &stage_data->present_level_map;
        __for_begin._M_node = std::map<unsigned int,VintagePresentLevelData>::begin(&stage_data->present_level_map)._M_node;
        __for_end._M_node = std::map<unsigned int,VintagePresentLevelData>::end(__for_range)._M_node;
        while ( std::operator!=(&__for_begin, &__for_end) )
        {
          v21 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator*(&__for_begin);
          _ = std::get<0ul,unsigned int const,VintagePresentLevelData>(v21);
          v12 = (std::tuple_element<1,const std::pair<unsigned int const,VintagePresentLevelData> >::type *)std::get<1ul,unsigned int const,VintagePresentLevelData>(v21);
          present_data = v12;
          if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v12 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v12);
          }
          if ( present_data->present_id == *(_DWORD *)(v2 + 48) )
          {
            is_exist = 1;
            if ( *(_BYTE *)(((unsigned __int64)&present_data->is_open >> 3) + 0x7FFF8000) != 0
              && (((unsigned __int8)present_data + 8) & 7) >= *(_BYTE *)(((unsigned __int64)&present_data->is_open >> 3)
                                                                       + 0x7FFF8000) )
            {
              __asan_report_load1(&present_data->is_open);
            }
            if ( !present_data->is_open )
            {
              common::milog::MiLogStream::create(
                &v25,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/vintage_activity.cpp",
                "checkPresentIdIsOpen",
                1612);
              v13 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                      &v25,
                      (const char (*)[43])"[VINTAGE] present_id not open, present_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &present_data->present_id);
              common::milog::MiLogStream::~MiLogStream(&v25);
              result = 0xFFFFFFFFLL;
              goto LABEL_25;
            }
            break;
          }
          std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator++(&__for_begin);
        }
        if ( !is_exist )
        {
          common::milog::MiLogStream::create(
            &v25,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "checkPresentIdIsOpen",
            1620);
          v14 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  &v25,
                  (const char (*)[44])"[VINTAGE] present_id not exist, present_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v25);
          result = 0xFFFFFFFFLL;
        }
        else
        {
          result = 0LL;
        }
      }
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v25,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "checkPresentIdIsOpen",
      1588);
    v6 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
           &v25,
           (const char (*)[67])"[VINTAGE] findActivityVintagePresentExcelConfig fails, present_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, (const unsigned int *)(v2 + 48));
    common::milog::MiLogStream::~MiLogStream(&v25);
    result = 0xFFFFFFFFLL;
  }
LABEL_25:
  if ( v26 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1628: range 000000001498CABC-000000001498CFE6
__int64 __fastcall VintageActivity::updatePresentDataState(VintageActivity *const this, uint32_t present_id)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  common::milog::MiLogStream *v6; // rax
  __int64 result; // rax
  common::milog::MiLogStream *v8; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::pointer v9; // rax
  std::tuple_element<1,std::pair<unsigned int const,VintagePresentLevelData> >::type *v10; // rax
  __int64 v11; // rsi
  __int64 v12; // rdx
  __int64 v13; // rsi
  __int64 v14; // rdx
  bool is_all_finish; // [rsp+1Fh] [rbp-F1h]
  std::map<unsigned int,VintagePresentLevelData>::iterator __for_begin; // [rsp+20h] [rbp-F0h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::iterator __for_end; // [rsp+28h] [rbp-E8h] BYREF
  const data::ActivityVintagePresentExcelConfig *present_config_ptr; // [rsp+30h] [rbp-E0h]
  VintagePresentStageData *stage_data; // [rsp+38h] [rbp-D8h]
  std::map<unsigned int,VintagePresentLevelData> *__for_range; // [rsp+40h] [rbp-D0h]
  std::pair<unsigned int const,VintagePresentLevelData> *__in; // [rsp+48h] [rbp-C8h]
  std::tuple_element<0,std::pair<unsigned int const,VintagePresentLevelData> >::type *_; // [rsp+50h] [rbp-C0h]
  std::tuple_element<1,std::pair<unsigned int const,VintagePresentLevelData> >::type *level_data; // [rsp+58h] [rbp-B8h]
  std::shared_ptr<Config> v24; // [rsp+60h] [rbp-B0h] BYREF
  common::milog::MiLogStream v25; // [rsp+70h] [rbp-A0h] BYREF
  char v26[128]; // [rsp+90h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 15 present_id:1627 64 8 9 iter:1636";
  *(_QWORD *)(v2 + 16) = VintageActivity::updatePresentDataState;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -202116352;
  *(_DWORD *)(v2 + 48) = present_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v24);
  v5 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v24);
  present_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintagePresentExcelConfig(
                         &v5->design_config.txt_config_mgr.activity_vintage_config_mgr,
                         *(_DWORD *)(v2 + 48));
  std::shared_ptr<Config>::~shared_ptr(&v24);
  if ( present_config_ptr )
  {
    *(std::map<unsigned int,VintagePresentStageData>::iterator *)(v2 + 64) = std::map<unsigned int,VintagePresentStageData>::find(
                                                                               &this->present_stage_map_,
                                                                               &present_config_ptr->open_order);
    __for_end._M_node = std::map<unsigned int,VintagePresentStageData>::end(&this->present_stage_map_)._M_node;
    if ( std::operator==(
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)(v2 + 64),
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)&__for_end) )
    {
      common::milog::MiLogStream::create(
        &v25,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "updatePresentDataState",
        1639);
      v8 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
             &v25,
             (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &present_config_ptr->open_order);
      common::milog::MiLogStream::~MiLogStream(&v25);
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v9 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> > *const)(v2 + 64));
      stage_data = &v9->second;
      is_all_finish = 1;
      __for_range = &v9->second.present_level_map;
      __for_begin._M_node = std::map<unsigned int,VintagePresentLevelData>::begin(&v9->second.present_level_map)._M_node;
      __for_end._M_node = std::map<unsigned int,VintagePresentLevelData>::end(__for_range)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        __in = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator*(&__for_begin);
        _ = std::get<0ul,unsigned int const,VintagePresentLevelData>(__in);
        v10 = std::get<1ul,unsigned int const,VintagePresentLevelData>(__in);
        level_data = v10;
        if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v10 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v10);
        }
        if ( level_data->present_id == *(_DWORD *)(v2 + 48) )
        {
          v11 = ((_BYTE)level_data + 9) & 7;
          v12 = (*(_BYTE *)(((unsigned __int64)&level_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v11 >= *(_BYTE *)(((unsigned __int64)&level_data->is_finish >> 3) + 0x7FFF8000));
          if ( (_BYTE)v12 )
            __asan_report_store1(&level_data->is_finish, v11, v12);
          level_data->is_finish = 1;
        }
        if ( *(_BYTE *)(((unsigned __int64)&level_data->is_finish >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)level_data + 9) & 7) >= *(_BYTE *)(((unsigned __int64)&level_data->is_finish >> 3)
                                                                 + 0x7FFF8000) )
        {
          __asan_report_load1(&level_data->is_finish);
        }
        if ( !level_data->is_finish )
          is_all_finish = 0;
        std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator++(&__for_begin);
      }
      if ( is_all_finish )
      {
        v13 = ((_BYTE)stage_data + 5) & 7;
        v14 = (*(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v13 >= *(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000));
        if ( (_BYTE)v14 )
          __asan_report_store1(&stage_data->is_finish, v13, v14);
        stage_data->is_finish = 1;
        BaseActivity::updateAllConds((BaseActivity *const)this);
      }
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      result = 0LL;
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v25,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "updatePresentDataState",
      1632);
    v6 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
           &v25,
           (const char (*)[67])"[VINTAGE] findActivityVintagePresentExcelConfig fails, present_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, (const unsigned int *)(v2 + 48));
    common::milog::MiLogStream::~MiLogStream(&v25);
    result = 0xFFFFFFFFLL;
  }
  if ( v26 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1667: range 000000001498CFE8-000000001498E705
int32_t __cdecl VintageActivity::onVintageDecorateBoothReq(
        VintageActivity *const this,
        const proto::VintageDecorateBoothReq *req,
        proto::VintageDecorateBoothRsp *rsp_0)
{
  int32_t v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  common::milog::MiLogStream *v7; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  uint32_t OwnerUid; // r15d
  common::milog::MiLogStream *v10; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  uint32_t v14; // eax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // r14
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // r14
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // rcx
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v25; // rax
  common::milog::MiLogStream *v26; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // r14
  const google::protobuf::RepeatedPtrField<proto::CustomCommonNodeInfo> *v32; // r15
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v33; // rax
  uint32_t GadgetId; // eax
  common::milog::MiLogStream *v35; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v36; // rax
  const std::shared_ptr<CustomCommonNodeData> *v37; // rax
  int v38; // r15d
  std::__shared_ptr_access<CustomCommonNodeData,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v39; // rax
  std::pair<std::_Rb_tree_const_iterator<std::string >,bool> v40; // rax
  common::milog::MiLogStream *v41; // r14
  std::__shared_ptr_access<CustomCommonNodeData,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v42; // rax
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // r14
  std::__shared_ptr_access<CustomCommonNodeData,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v45; // rax
  common::milog::MiLogStream *v46; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v47; // rax
  common::milog::MiLogStream *v48; // rax
  common::milog::MiLogStream *v49; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v50; // rax
  common::milog::MiLogStream *v51; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v52; // rax
  common::milog::MiLogStream *v53; // rax
  common::milog::MiLogStream *v54; // r14
  CustomGadgetComp *v55; // rax
  const proto::CustomGadgetTreeInfo *v56; // rax
  PlayerEventComp *EventComp; // r14
  PlayerBasicComp *BasicComp; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v59; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v60; // rax
  uint32_t v61; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v62; // r14
  google::protobuf::uint32 v63; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v64; // rax
  const std::string *v65; // rax
  google::protobuf::uint32 v66; // eax
  Player *v67; // r14
  int32_t result; // eax
  std::string v69; // [rsp+0h] [rbp-320h]
  unsigned int GroupId; // [rsp+28h] [rbp-2F8h] BYREF
  unsigned int val; // [rsp+2Ch] [rbp-2F4h] BYREF
  uint32_t gadget_config_id; // [rsp+30h] [rbp-2F0h]
  int32_t ret; // [rsp+34h] [rbp-2ECh]
  std::vector<std::shared_ptr<CustomCommonNodeData>>::iterator __for_begin; // [rsp+38h] [rbp-2E8h] BYREF
  std::vector<std::shared_ptr<CustomCommonNodeData>>::iterator __for_end; // [rsp+40h] [rbp-2E0h] BYREF
  const data::ActivityVintageDecoExcelConfig *booth_config_ptr; // [rsp+48h] [rbp-2D8h]
  const proto::CustomGadgetTreeInfo *info; // [rsp+50h] [rbp-2D0h]
  const JsonConfigMgr *json_config_mgr; // [rsp+58h] [rbp-2C8h]
  std::vector<std::shared_ptr<CustomCommonNodeData>> *__for_range; // [rsp+60h] [rbp-2C0h]
  const google::protobuf::RepeatedPtrField<proto::CustomCommonNodeInfo> *__for_range_0; // [rsp+68h] [rbp-2B8h]
  const proto::CustomCommonNodeInfo *node; // [rsp+70h] [rbp-2B0h]
  proto_log::PlantFlowerShelfSlotLog *slot_log; // [rsp+78h] [rbp-2A8h]
  std::shared_ptr<google::protobuf::Message> p_body_ptr; // [rsp+80h] [rbp-2A0h] BYREF
  common::milog::MiLogStream v84; // [rsp+90h] [rbp-290h] BYREF
  char v85[624]; // [rsp+B0h] [rbp-270h] BYREF

  *(&v69._anon_0._M_allocated_capacity + 1) = (std::string::size_type)this;
  v69._anon_0._M_allocated_capacity = (std::string::size_type)req;
  v69._M_string_length = (std::string::size_type)rsp_0;
  v4 = (unsigned __int64)v85;
  v69._M_dataplus._M_p = v85;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_4(576LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "12 32 1 11 holder:1771 48 4 14 entity_id:1686 64 16 14 scene_ptr:1674 96 16 15 gadget_ptr:1687 1"
                        "28 16 27 custom_gadget_comp_ptr:1694 160 16 14 event_ptr:1766 192 16 12 log_ptr:1772 224 16 13 n"
                        "ode_ptr:1727 256 24 13 node_vec:1717 320 48 24 slot_identifier_set:1726 400 48 24 used_item_coun"
                        "t_map:1741 480 56 29 pass_part_item_count_map:1742";
  *(_QWORD *)(v4 + 16) = VintageActivity::onVintageDecorateBoothReq;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556927;
  v6[536862722] = -219021312;
  v6[536862723] = -219021312;
  v6[536862724] = -219021312;
  v6[536862725] = -219021312;
  v6[536862726] = -219021312;
  v6[536862727] = -219021312;
  v6[536862728] = -234881024;
  v6[536862729] = -218959118;
  v6[536862731] = -219021312;
  v6[536862732] = 62194;
  v6[536862734] = -218959118;
  v6[536862736] = -218103808;
  v6[536862737] = -202116109;
  if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_content_closed_);
  if ( this->is_content_closed_ )
  {
    common::milog::MiLogStream::create(
      &v84,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "onVintageDecorateBoothReq",
      1670);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v84, (const char (*)[24])"[VINTAGE] play is over.");
    common::milog::MiLogStream::~MiLogStream(&v84);
    v3 = -1;
    goto LABEL_78;
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v4 + 64));
  if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v4 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v84,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "onVintageDecorateBoothReq",
      1677);
    v7 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
           &v84,
           (const char (*)[34])"[VINTAGE] scene_ptr is null, uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &val);
    common::milog::MiLogStream::~MiLogStream(&v84);
    v3 = 555;
    goto LABEL_77;
  }
  v8 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 64));
  OwnerUid = Scene::getOwnerUid(v8);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  if ( OwnerUid != Player::getUid(this->player_) )
  {
    common::milog::MiLogStream::create(
      &v84,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "onVintageDecorateBoothReq",
      1682);
    v10 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
            &v84,
            (const char (*)[39])"[VINTAGE] not in self scene, OwnerUid:");
    v11 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 64));
    GroupId = Scene::getOwnerUid(v11);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &GroupId);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &val);
    common::milog::MiLogStream::~MiLogStream(&v84);
    v3 = 512;
    goto LABEL_77;
  }
  *(_DWORD *)(v4 + 48) = proto::VintageDecorateBoothReq::entity_id(req);
  v14 = (unsigned int)std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 64));
  Scene::findEntity<Gadget>((const Scene *const)(v4 + 96), v14);
  if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 96)) )
  {
    common::milog::MiLogStream::create(
      &v84,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "onVintageDecorateBoothReq",
      1690);
    v15 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
            &v84,
            (const char (*)[39])"[VINTAGE] findEntity fails, entity_id:");
    v16 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, (const unsigned int *)(v4 + 48));
    v17 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v16, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, &val);
    common::milog::MiLogStream::~MiLogStream(&v84);
    v3 = 504;
    goto LABEL_76;
  }
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
  EcsBase<Gadget,GadgetCompBase,28u>::findComp<CustomGadgetComp>((const EcsBase<Gadget,GadgetCompBase,28> *const)(v4 + 128));
  if ( std::operator==<CustomGadgetComp>(0LL, (const std::shared_ptr<CustomGadgetComp> *)(v4 + 128)) )
  {
    common::milog::MiLogStream::create(
      &v84,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "onVintageDecorateBoothReq",
      1697);
    v18 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
            &v84,
            (const char (*)[21])"[VINTAGE] entity id:");
    v19 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, (const unsigned int *)(v4 + 48));
    v20 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(v19, (const char (*)[22])off_2551E740);
    v21 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v20, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v4 + 224));
    p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224))->design_config.txt_config_mgr.activity_vintage_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->schedule_id_);
    }
    booth_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintageDecoExcelConfig(
                         p_activity_vintage_config_mgr,
                         this->schedule_id_);
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 224));
    if ( booth_config_ptr )
    {
      v25 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
      val = Entity::getGroupId((const Entity *const)v25);
      if ( !common::tools::MiscUtils::isContains<unsigned int>(&booth_config_ptr->edit_group_id_list, &val) )
      {
        common::milog::MiLogStream::create(
          &v84,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/vintage_activity.cpp",
          "onVintageDecorateBoothReq",
          1711);
        v26 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                &v84,
                (const char (*)[28])"[VINTAGE] invalid group id:");
        v27 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
        GroupId = Entity::getGroupId((const Entity *const)v27);
        v28 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v26, &GroupId);
        v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                v28,
                (const char (*)[16])" group_id_list:");
        v30 = common::milog::MiLogStream::operator<<<unsigned int>(v29, &booth_config_ptr->edit_group_id_list);
        v31 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v30, (const char (*)[6])" uid:");
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        val = Player::getUid(this->player_);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v31, &val);
        common::milog::MiLogStream::~MiLogStream(&v84);
        v3 = -1;
      }
      else
      {
        info = proto::VintageDecorateBoothReq::combination_info(req);
        std::vector<std::shared_ptr<CustomCommonNodeData>>::vector((std::vector<std::shared_ptr<CustomCommonNodeData>> *const)(v4 + 256));
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)(v4 + 224));
        json_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224))->design_config.json_config_mgr;
        std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 224));
        v32 = proto::CustomGadgetTreeInfo::node_list(info);
        v33 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
        GadgetId = Gadget::getGadgetId(v33);
        if ( JsonConfigMgr::convertCustomTreeInfo(
               json_config_mgr,
               GadgetId,
               v32,
               (std::vector<std::shared_ptr<CustomCommonNodeData>> *)(v4 + 256)) )
        {
          common::milog::MiLogStream::create(
            &v84,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "onVintageDecorateBoothReq",
            1721);
          v35 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
                  &v84,
                  (const char (*)[50])"[VINTAGE] convertCustomTreeInfo fails, gadget_id:");
          v36 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
          val = Gadget::getGadgetId(v36);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v35, &val);
          common::milog::MiLogStream::~MiLogStream(&v84);
          v3 = -1;
        }
        else
        {
          std::set<std::string>::set((std::set<std::string> *const)(v4 + 320));
          __for_range = (std::vector<std::shared_ptr<CustomCommonNodeData>> *)(v4 + 256);
          __for_begin._M_current = std::vector<std::shared_ptr<CustomCommonNodeData>>::begin((std::vector<std::shared_ptr<CustomCommonNodeData>> *const)(v4 + 256))._M_current;
          __for_end._M_current = std::vector<std::shared_ptr<CustomCommonNodeData>>::end(__for_range)._M_current;
          while ( __gnu_cxx::operator!=<std::shared_ptr<CustomCommonNodeData> *,std::vector<std::shared_ptr<CustomCommonNodeData>>>(
                    &__for_begin,
                    &__for_end) )
          {
            v37 = __gnu_cxx::__normal_iterator<std::shared_ptr<CustomCommonNodeData> *,std::vector<std::shared_ptr<CustomCommonNodeData>>>::operator*(&__for_begin);
            std::shared_ptr<CustomCommonNodeData>::shared_ptr(
              (std::shared_ptr<CustomCommonNodeData> *const)(v4 + 224),
              v37);
            if ( std::operator==<CustomCommonNodeData>(0LL, (const std::shared_ptr<CustomCommonNodeData> *)(v4 + 224)) )
            {
              common::milog::MiLogStream::create(
                &v84,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/vintage_activity.cpp",
                "onVintageDecorateBoothReq",
                1731);
              common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
                &v84,
                (const char (*)[27])"[VINTAGE] node_ptr is null");
              common::milog::MiLogStream::~MiLogStream(&v84);
              v3 = -1;
              v38 = 0;
            }
            else
            {
              v39 = std::__shared_ptr_access<CustomCommonNodeData,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CustomCommonNodeData,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224));
              v40 = std::set<std::string>::emplace<std::string&>(
                      (std::set<std::string> *const)(v4 + 320),
                      &v39->slot_identifier,
                      &v39->slot_identifier);
              if ( !v40.second )
              {
                common::milog::MiLogStream::create(
                  &v84,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/vintage_activity.cpp",
                  "onVintageDecorateBoothReq",
                  1736);
                v41 = common::milog::MiLogStream::operator<<<char [66],(char *[66])0>(
                        &v84,
                        (const char (*)[66])"[VINTAGE] duplicate custom node slot_identifier, slot_identifier:");
                v42 = std::__shared_ptr_access<CustomCommonNodeData,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CustomCommonNodeData,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224));
                v43 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v41, &v42->slot_identifier);
                v44 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                        v43,
                        (const char (*)[13])", config_id:");
                v45 = std::__shared_ptr_access<CustomCommonNodeData,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CustomCommonNodeData,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224));
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v44, &v45->config_id);
                common::milog::MiLogStream::~MiLogStream(&v84);
                v3 = -1;
                v38 = 0;
              }
              else
              {
                v38 = 1;
              }
            }
            std::shared_ptr<CustomCommonNodeData>::~shared_ptr((std::shared_ptr<CustomCommonNodeData> *const)(v4 + 224));
            if ( v38 != 1 )
              goto LABEL_73;
            __gnu_cxx::__normal_iterator<std::shared_ptr<CustomCommonNodeData> *,std::vector<std::shared_ptr<CustomCommonNodeData>>>::operator++(&__for_begin);
          }
          std::map<unsigned int,unsigned int>::map((std::map<unsigned int,unsigned int> *const)(v4 + 400));
          std::unordered_map<unsigned int,unsigned int>::unordered_map((std::unordered_map<unsigned int,unsigned int> *const)(v4 + 480));
          if ( JsonConfigMgr::checkCustomTreeInfo(
                 json_config_mgr,
                 (const std::vector<std::shared_ptr<CustomCommonNodeData>> *)(v4 + 256),
                 (std::map<unsigned int,unsigned int> *)(v4 + 400),
                 (std::unordered_map<unsigned int,unsigned int> *)(v4 + 480)) )
          {
            common::milog::MiLogStream::create(
              &v84,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/vintage_activity.cpp",
              "onVintageDecorateBoothReq",
              1745);
            v46 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                    &v84,
                    (const char (*)[47])"[VINTAGE] checkCustomTreeInfo fail, gadget_id:");
            v47 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
            GroupId = Gadget::getGadgetId(v47);
            v48 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v46, &GroupId);
            v49 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v48, (const char (*)[6])" uid:");
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->player_);
            val = Player::getUid(this->player_);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v49, &val);
            common::milog::MiLogStream::~MiLogStream(&v84);
            v3 = 831;
          }
          else
          {
            v50 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
            gadget_config_id = Entity::getConfigId((const Entity *const)v50);
            ret = VintageActivity::checkUsedItemNumLimit(this, (const std::map<unsigned int,unsigned int> *)(v4 + 400));
            if ( ret )
            {
              v3 = ret;
            }
            else if ( VintageActivity::updateBoothUsedItemInfo(this, gadget_config_id) )
            {
              common::milog::MiLogStream::create(
                &v84,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/vintage_activity.cpp",
                "onVintageDecorateBoothReq",
                1759);
              v51 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
                      &v84,
                      (const char (*)[51])"[VINTAGE] updateBoothUsedItemInfo fail, gadget_id:");
              v52 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
              GroupId = Gadget::getGadgetId(v52);
              v53 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v51, &GroupId);
              v54 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v53, (const char (*)[6])" uid:");
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->player_);
              val = Player::getUid(this->player_);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v54, &val);
              common::milog::MiLogStream::~MiLogStream(&v84);
              v3 = -1;
            }
            else
            {
              BaseActivity::notifyClientData((BaseActivity *const)this, 0);
              v55 = std::__shared_ptr_access<CustomGadgetComp,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CustomGadgetComp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128));
              CustomGadgetComp::updateCustomGadgetInfo(v55, info);
              v56 = proto::VintageDecorateBoothReq::combination_info(req);
              val = proto::CustomGadgetTreeInfo::node_list_size(v56);
              common::tools::perf::make_shared<VintageDecorationCompleteEvent,int>((int *)(v4 + 160), (int *)&val);
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->player_);
              EventComp = Player::getEventComp(this->player_);
              std::shared_ptr<BaseEvent>::shared_ptr<VintageDecorationCompleteEvent,void>(
                (std::shared_ptr<BaseEvent> *const)(v4 + 224),
                (const std::shared_ptr<VintageDecorationCompleteEvent> *)(v4 + 160));
              PlayerEventComp::notifyEvent(EventComp, (BaseEventPtr *)(v4 + 224));
              std::shared_ptr<BaseEvent>::~shared_ptr((std::shared_ptr<BaseEvent> *const)(v4 + 224));
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->player_);
              BasicComp = Player::getBasicComp(this->player_);
              PlayerBasicComp::getNextTransNo[abi:cxx11]((std::string *)&v84, BasicComp);
              StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v4 + 32), 0xDC9u, v69);
              std::string::~string(&v84);
              common::tools::perf::make_shared<proto_log::PlayerLogBodyPlantFlowerCombinationEdit>();
              v59 = std::__shared_ptr_access<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 192));
              v60 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
              v61 = Gadget::getGadgetId(v60);
              proto_log::PlayerLogBodyPlantFlowerCombinationEdit::set_gadget_config_id(v59, v61);
              __for_range_0 = proto::CustomGadgetTreeInfo::node_list(info);
              __for_begin._M_current = (std::shared_ptr<CustomCommonNodeData> *)google::protobuf::RepeatedPtrField<proto::CustomCommonNodeInfo>::begin(__for_range_0).it_;
              __for_end._M_current = (std::shared_ptr<CustomCommonNodeData> *)google::protobuf::RepeatedPtrField<proto::CustomCommonNodeInfo>::end(__for_range_0).it_;
              while ( google::protobuf::internal::RepeatedPtrIterator<proto::CustomCommonNodeInfo const>::operator!=(
                        (const google::protobuf::internal::RepeatedPtrIterator<const proto::CustomCommonNodeInfo> *const)&__for_begin,
                        (const google::protobuf::internal::RepeatedPtrIterator<const proto::CustomCommonNodeInfo>::iterator *)&__for_end) )
              {
                node = google::protobuf::internal::RepeatedPtrIterator<proto::CustomCommonNodeInfo const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::CustomCommonNodeInfo> *const)&__for_begin);
                if ( proto::CustomCommonNodeInfo::parent_index(node) >= 0 )
                {
                  v64 = std::__shared_ptr_access<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 192));
                  slot_log = proto_log::PlayerLogBodyPlantFlowerCombinationEdit::add_slot_log(v64);
                  v65 = proto::CustomCommonNodeInfo::slot_identifier[abi:cxx11](node);
                  proto_log::PlantFlowerShelfSlotLog::set_slot_identifier(slot_log, v65);
                  v66 = proto::CustomCommonNodeInfo::config_id(node);
                  proto_log::PlantFlowerShelfSlotLog::set_flower_id(slot_log, v66);
                }
                else
                {
                  v62 = std::__shared_ptr_access<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 192));
                  v63 = proto::CustomCommonNodeInfo::config_id(node);
                  proto_log::PlayerLogBodyPlantFlowerCombinationEdit::set_flower_shelf_id(v62, v63);
                }
                google::protobuf::internal::RepeatedPtrIterator<proto::CustomCommonNodeInfo const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::CustomCommonNodeInfo> *const)&__for_begin);
              }
              if ( *(_BYTE *)(((*(&v69._anon_0._M_allocated_capacity + 1) + 24) >> 3) + 0x7FFF8000) )
                __asan_report_load8(*(&v69._anon_0._M_allocated_capacity + 1) + 24);
              v67 = *(Player **)(*(&v69._anon_0._M_allocated_capacity + 1) + 24);
              std::shared_ptr<google::protobuf::Message>::shared_ptr(
                (std::shared_ptr<google::protobuf::Message> *const)(v4 + 224),
                0LL);
              std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyPlantFlowerCombinationEdit,void>(
                &p_body_ptr,
                (const std::shared_ptr<proto_log::PlayerLogBodyPlantFlowerCombinationEdit> *)(v4 + 192));
              Player::printStatLog(v67, &p_body_ptr, (MessagePtr *)(v4 + 224), 0xEu);
              std::shared_ptr<google::protobuf::Message>::~shared_ptr(&p_body_ptr);
              std::shared_ptr<google::protobuf::Message>::~shared_ptr((std::shared_ptr<google::protobuf::Message> *const)(v4 + 224));
              std::shared_ptr<proto_log::PlayerLogBodyPlantFlowerCombinationEdit>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyPlantFlowerCombinationEdit> *const)(v4 + 192));
              StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v4 + 32));
              v3 = 0;
              std::shared_ptr<VintageDecorationCompleteEvent>::~shared_ptr((std::shared_ptr<VintageDecorationCompleteEvent> *const)(v4 + 160));
            }
          }
          std::unordered_map<unsigned int,unsigned int>::~unordered_map((std::unordered_map<unsigned int,unsigned int> *const)(v4 + 480));
          std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v4 + 400));
LABEL_73:
          std::set<std::string>::~set((std::set<std::string> *const)(v4 + 320));
        }
        std::vector<std::shared_ptr<CustomCommonNodeData>>::~vector((std::vector<std::shared_ptr<CustomCommonNodeData>> *const)(v4 + 256));
      }
      goto LABEL_75;
    }
    common::milog::MiLogStream::create(
      &v84,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "onVintageDecorateBoothReq",
      1706);
    v23 = common::milog::MiLogStream::operator<<<char [64],(char *[64])0>(
            &v84,
            (const char (*)[64])"[VINTAGE] findActivityVintageDecoExcelConfig fail, schedule_id:");
    v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v23, &this->schedule_id_);
    v21 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v24, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
  }
  val = Player::getUid(this->player_);
  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, &val);
  common::milog::MiLogStream::~MiLogStream(&v84);
  v3 = -1;
LABEL_75:
  std::shared_ptr<CustomGadgetComp>::~shared_ptr((std::shared_ptr<CustomGadgetComp> *const)(v4 + 128));
LABEL_76:
  std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 96));
LABEL_77:
  std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v4 + 64));
LABEL_78:
  result = v3;
  if ( v69._M_dataplus._M_p == (std::string::pointer)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF802C) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8038) = 0;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1794: range 000000001498E706-000000001498E9E2
int32_t __cdecl VintageActivity::checkUsedItemNumLimit(
        VintageActivity *const this,
        const std::map<unsigned int,unsigned int> *used_item_count_map)
{
  uint32_t ItemCount; // ecx
  common::milog::MiLogStream *v3; // rax
  common::milog::MiLogStream *v4; // rax
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rbx
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rbx
  unsigned int val; // [rsp+10h] [rbp-70h] BYREF
  unsigned int Uid; // [rsp+14h] [rbp-6Ch] BYREF
  std::map<unsigned int,unsigned int>::const_iterator __for_begin; // [rsp+18h] [rbp-68h] BYREF
  std::map<unsigned int,unsigned int>::const_iterator __for_end; // [rsp+20h] [rbp-60h] BYREF
  PlayerItemComp *player_item_comp; // [rsp+28h] [rbp-58h]
  const std::map<unsigned int,unsigned int> *__for_range; // [rsp+30h] [rbp-50h]
  const std::pair<unsigned int const,unsigned int> *v17; // [rsp+38h] [rbp-48h]
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *item_id; // [rsp+40h] [rbp-40h]
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *count; // [rsp+48h] [rbp-38h]
  common::milog::MiLogStream v20; // [rsp+50h] [rbp-30h] BYREF

  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  player_item_comp = Player::getItemComp(this->player_);
  __for_range = used_item_count_map;
  __for_begin._M_node = std::map<unsigned int,unsigned int>::begin(used_item_count_map)._M_node;
  __for_end._M_node = std::map<unsigned int,unsigned int>::end(used_item_count_map)._M_node;
  while ( 1 )
  {
    if ( !std::operator!=(&__for_begin, &__for_end) )
      return 0;
    v17 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator*(&__for_begin);
    item_id = std::get<0ul,unsigned int const,unsigned int>(v17);
    count = (std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *)std::get<1ul,unsigned int const,unsigned int>(v17);
    if ( *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)item_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(item_id);
    }
    ItemCount = PlayerItemComp::getItemCount(player_item_comp, *item_id);
    if ( *(_BYTE *)(((unsigned __int64)count >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)count & 7) + 3) >= *(_BYTE *)(((unsigned __int64)count >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(count);
    }
    if ( ItemCount < *count )
      break;
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator++(&__for_begin);
  }
  common::milog::MiLogStream::create(
    &v20,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/vintage_activity.cpp",
    "checkUsedItemNumLimit",
    1801);
  v3 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
         &v20,
         (const char (*)[36])"[VINTAGE] item not enough. item id:");
  v4 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v3, item_id);
  v5 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v4, (const char (*)[13])" need count:");
  v6 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, count);
  v7 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v6, (const char (*)[12])" has count:");
  if ( *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)item_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(item_id);
  }
  val = PlayerItemComp::getItemCount(player_item_comp, *item_id);
  v8 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &val);
  v9 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v8, (const char (*)[6])" uid:");
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  Uid = Player::getUid(this->player_);
  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &Uid);
  common::milog::MiLogStream::~MiLogStream(&v20);
  return 609;
};

// Line 1810: range 000000001498E9E4-000000001498EAFD
int32_t __cdecl VintageActivity::updateBoothUsedItemInfo(VintageActivity *const this, uint32_t gadget_id)
{
  __int64 v2; // rsi
  common::milog::MiLogStream v5; // [rsp+10h] [rbp-30h] BYREF

  v2 = ((_BYTE)this + 76) & 7;
  if ( *(_BYTE *)(((unsigned __int64)&this->booth_data_.is_open >> 3) + 0x7FFF8000) != 0
    && (char)v2 >= *(_BYTE *)(((unsigned __int64)&this->booth_data_.is_open >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->booth_data_.is_open);
  }
  if ( !this->booth_data_.is_open )
  {
    common::milog::MiLogStream::create(
      &v5,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "updateBoothUsedItemInfo",
      1813);
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
      &v5,
      (const char (*)[35])"[VINTAGE] booth_data_ is not open.");
    common::milog::MiLogStream::~MiLogStream(&v5);
    return -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->booth_data_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->booth_data_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_store4(&this->booth_data_, v2, &this->booth_data_);
    }
    this->booth_data_.gadget_id = gadget_id;
    return 0;
  }
};

// Line 1822: range 000000001498EAFE-000000001498EF77
void __cdecl VintageActivity::onObtainItemEvent(VintageActivity *const this, const ObtainItemEvent *event)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // rcx
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // r13
  PlayerEventComp *EventComp; // r14
  unsigned int val; // [rsp+14h] [rbp-ACh] BYREF
  const data::ActivityVintageDecoExcelConfig *booth_config_ptr; // [rsp+18h] [rbp-A8h]
  std::shared_ptr<Config> v13; // [rsp+20h] [rbp-A0h] BYREF
  common::milog::MiLogStream v14; // [rsp+30h] [rbp-90h] BYREF
  char v15[112]; // [rsp+50h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 14 event_ptr:1842";
  *(_QWORD *)(v2 + 16) = VintageActivity::onObtainItemEvent;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  if ( BaseActivity::isOpening((const BaseActivity *const)this, 0)
    && !BaseActivity::isSettled((const BaseActivity *const)this) )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v13);
    p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v13)->design_config.txt_config_mgr.activity_vintage_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->schedule_id_);
    }
    booth_config_ptr = data::ActivityVintageExcelConfigMgrBase::findActivityVintageDecoExcelConfig(
                         p_activity_vintage_config_mgr,
                         this->schedule_id_);
    std::shared_ptr<Config>::~shared_ptr(&v13);
    if ( booth_config_ptr )
    {
      if ( common::tools::MiscUtils::isContains<unsigned int>(&booth_config_ptr->furniture_ids, &event->item_id) )
      {
        if ( *(_BYTE *)(((unsigned __int64)&event->item_num >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)event + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&event->item_num >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(&event->item_num);
        }
        if ( event->item_num )
        {
          if ( *(_BYTE *)(((unsigned __int64)&this->collected_item_num_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&this->collected_item_num_ >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&this->collected_item_num_);
          }
          this->collected_item_num_ += event->item_num;
          common::tools::perf::make_shared<VintageCollectDecorationNumEvent,unsigned int &>(
            (unsigned int *)(v2 + 32),
            &this->collected_item_num_);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          EventComp = Player::getEventComp(this->player_);
          std::shared_ptr<BaseEvent>::shared_ptr<VintageCollectDecorationNumEvent,void>(
            (std::shared_ptr<BaseEvent> *const)&v13,
            (const std::shared_ptr<VintageCollectDecorationNumEvent> *)(v2 + 32));
          PlayerEventComp::notifyEvent(EventComp, (BaseEventPtr *)&v13);
          std::shared_ptr<BaseEvent>::~shared_ptr((std::shared_ptr<BaseEvent> *const)&v13);
          std::shared_ptr<VintageCollectDecorationNumEvent>::~shared_ptr((std::shared_ptr<VintageCollectDecorationNumEvent> *const)(v2 + 32));
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v14,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "onObtainItemEvent",
        1831);
      v7 = common::milog::MiLogStream::operator<<<char [64],(char *[64])0>(
             &v14,
             (const char (*)[64])"[VINTAGE] findActivityVintageDecoExcelConfig fail, schedule_id:");
      v8 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &this->schedule_id_);
      v9 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v8, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
      common::milog::MiLogStream::~MiLogStream(&v14);
    }
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1848: range 000000001498EF78-000000001498F373
__int64 __fastcall VintageActivity::finishPresentStageByGM(VintageActivity *const this, uint32_t stage_id)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  __int64 result; // rax
  common::milog::MiLogStream *v7; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::pointer v8; // rax
  bool *p_is_finish; // rax
  __int64 v10; // rsi
  __int64 v11; // rdx
  bool *v12; // rax
  std::map<unsigned int,VintagePresentLevelData>::iterator __for_begin; // [rsp+18h] [rbp-D8h] BYREF
  std::map<unsigned int,VintagePresentLevelData>::iterator __for_end; // [rsp+20h] [rbp-D0h] BYREF
  VintagePresentStageData *stage_data; // [rsp+28h] [rbp-C8h]
  std::map<unsigned int,VintagePresentLevelData> *__for_range; // [rsp+30h] [rbp-C0h]
  std::pair<unsigned int const,VintagePresentLevelData> *__in; // [rsp+38h] [rbp-B8h]
  std::tuple_element<0,std::pair<unsigned int const,VintagePresentLevelData> >::type *_; // [rsp+40h] [rbp-B0h]
  std::tuple_element<1,std::pair<unsigned int const,VintagePresentLevelData> >::type *level_data; // [rsp+48h] [rbp-A8h]
  common::milog::MiLogStream v20; // [rsp+50h] [rbp-A0h] BYREF
  char v21[128]; // [rsp+70h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 13 stage_id:1847 64 8 9 iter:1854";
  *(_QWORD *)(v2 + 16) = VintageActivity::finishPresentStageByGM;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -202116352;
  *(_DWORD *)(v2 + 48) = stage_id;
  if ( !BaseActivity::isOpening((const BaseActivity *const)this, 0)
    || BaseActivity::isSettled((const BaseActivity *const)this) )
  {
    result = 0xFFFFFFFFLL;
  }
  else
  {
    *(std::map<unsigned int,VintagePresentStageData>::iterator *)(v2 + 64) = std::map<unsigned int,VintagePresentStageData>::find(
                                                                               &this->present_stage_map_,
                                                                               (const std::map<unsigned int,VintagePresentStageData>::key_type *)(v2 + 48));
    __for_end._M_node = std::map<unsigned int,VintagePresentStageData>::end(&this->present_stage_map_)._M_node;
    if ( std::operator==(
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)(v2 + 64),
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> >::_Self *)&__for_end) )
    {
      common::milog::MiLogStream::create(
        &v20,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "finishPresentStageByGM",
        1857);
      v7 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
             &v20,
             (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 48));
      common::milog::MiLogStream::~MiLogStream(&v20);
      result = 0xFFFFFFFFLL;
    }
    else
    {
      v8 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentStageData> > *const)(v2 + 64));
      stage_data = &v8->second;
      p_is_finish = &v8->second.is_finish;
      v10 = (unsigned __int8)p_is_finish & 7;
      v11 = (*(_BYTE *)(((unsigned __int64)p_is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v10 >= *(_BYTE *)(((unsigned __int64)p_is_finish >> 3) + 0x7FFF8000));
      if ( (_BYTE)v11 )
        __asan_report_store1(p_is_finish, v10, v11);
      stage_data->is_finish = 1;
      __for_range = &stage_data->present_level_map;
      __for_begin._M_node = std::map<unsigned int,VintagePresentLevelData>::begin(&stage_data->present_level_map)._M_node;
      __for_end._M_node = std::map<unsigned int,VintagePresentLevelData>::end(__for_range)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        __in = std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator*(&__for_begin);
        _ = std::get<0ul,unsigned int const,VintagePresentLevelData>(__in);
        level_data = std::get<1ul,unsigned int const,VintagePresentLevelData>(__in);
        v12 = &level_data->is_finish;
        if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) != 0
          && ((unsigned __int8)v12 & 7) >= *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load1(v12);
        }
        if ( !level_data->is_finish )
        {
          if ( *(_BYTE *)(((unsigned __int64)level_data >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)level_data & 7) + 3) >= *(_BYTE *)(((unsigned __int64)level_data >> 3)
                                                                         + 0x7FFF8000) )
          {
            __asan_report_load4(level_data);
          }
          VintageActivity::finishGroupsByPresentId(this, level_data->present_id);
        }
        std::_Rb_tree_iterator<std::pair<unsigned int const,VintagePresentLevelData>>::operator++(&__for_begin);
      }
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      BaseActivity::updateAllConds((BaseActivity *const)this);
      result = 0LL;
    }
  }
  if ( v21 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1882: range 000000001498F374-000000001498F6E6
__int64 __fastcall VintageActivity::openCampStage(VintageActivity *const this, uint32_t stage_id)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  common::milog::MiLogStream *v5; // rax
  __int64 result; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::pointer v7; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::_Self *p_y; // rsi
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> >::pointer v9; // rdx
  char v10; // cl
  std::map<unsigned int,VintageCampChallengeLevelData>::key_type __x; // [rsp+1Ch] [rbp-D4h] BYREF
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::_Self __y; // [rsp+20h] [rbp-D0h] BYREF
  VintageCampChallengeStageData *stage_data; // [rsp+28h] [rbp-C8h]
  common::milog::MiLogStream v14; // [rsp+30h] [rbp-C0h] BYREF
  char v15[160]; // [rsp+50h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 13 stage_id:1881 64 8 9 iter:1883 96 8 15 level_iter:1892";
  *(_QWORD *)(v2 + 16) = VintageActivity::openCampStage;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202116352;
  *(_DWORD *)(v2 + 48) = stage_id;
  *(std::map<unsigned int,VintageCampChallengeStageData>::iterator *)(v2 + 64) = std::map<unsigned int,VintageCampChallengeStageData>::find(
                                                                                   &this->camp_stage_map_,
                                                                                   (const std::map<unsigned int,VintageCampChallengeStageData>::key_type *)(v2 + 48));
  __y._M_node = std::map<unsigned int,VintageCampChallengeStageData>::end(&this->camp_stage_map_)._M_node;
  if ( std::operator==(
         (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::_Self *)(v2 + 64),
         &__y) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "openCampStage",
      1886);
    v5 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
           &v14,
           (const char (*)[37])"[VINTAGE] stage not found, stage_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, (const unsigned int *)(v2 + 48));
    common::milog::MiLogStream::~MiLogStream(&v14);
    result = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> > *const)(v2 + 64));
    stage_data = &v7->second;
    __x = 1;
    *(std::map<unsigned int,VintageCampChallengeLevelData>::iterator *)(v2 + 96) = std::map<unsigned int,VintageCampChallengeLevelData>::find(
                                                                                     &v7->second.camp_level_map,
                                                                                     &__x);
    __y._M_node = std::map<unsigned int,VintageCampChallengeLevelData>::end(&stage_data->camp_level_map)._M_node;
    p_y = &__y;
    if ( std::operator==(
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> >::_Self *)(v2 + 96),
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> >::_Self *)&__y) )
    {
      common::milog::MiLogStream::create(
        &v14,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "openCampStage",
        1895);
      common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
        &v14,
        (const char (*)[39])"[VINTAGE] camp can't find first level.");
      common::milog::MiLogStream::~MiLogStream(&v14);
      result = 0xFFFFFFFFLL;
    }
    else
    {
      if ( *(char *)(((unsigned __int64)&stage_data->is_open >> 3) + 0x7FFF8000) < 0 )
        __asan_report_store1(&stage_data->is_open, &__y, &stage_data->is_open);
      stage_data->is_open = 1;
      v9 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> > *const)(v2 + 96));
      v10 = *(_BYTE *)(((unsigned __int64)&v9->second.is_open >> 3) + 0x7FFF8000);
      if ( v10 != 0 && (((unsigned __int8)v9 + 12) & 7) >= v10 )
      {
        LOBYTE(p_y) = v10 != 0;
        __asan_report_store1(&v9->second.is_open, p_y, v9);
      }
      v9->second.is_open = 1;
      result = 0LL;
    }
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1905: range 000000001498F6E8-0000000014990214
void __cdecl VintageActivity::onGroupBundleFinishEvent(
        VintageActivity *const this,
        const GroupBundleFinishEvent *event)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  ActivityVintageExcelConfigMgr *p_activity_vintage_config_mgr; // rcx
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::pointer v9; // rax
  common::milog::MiLogStream *v10; // rax
  std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *v11; // rax
  uint32_t level_id; // ecx
  common::milog::MiLogStream *v13; // rax
  bool *p_is_open; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  __int64 v19; // rsi
  __int64 v20; // rdx
  uint32_t *p_max_finished_level; // rsi
  uint32_t *v22; // rax
  uint32_t *v23; // rdx
  uint32_t v24; // ecx
  char v25; // dl
  __int64 v26; // rdx
  std::map<unsigned int,VintageCampChallengeLevelData>::size_type max_finished_level; // r14
  __int64 v28; // rsi
  __int64 v29; // rdx
  PlayerEventComp *EventComp; // r14
  uint32_t v31; // edx
  std::map<unsigned int,VintageCampChallengeLevelData>::iterator __for_begin; // [rsp+18h] [rbp-128h] BYREF
  std::map<unsigned int,VintageCampChallengeLevelData>::iterator __for_end; // [rsp+20h] [rbp-120h] BYREF
  const data::ActivityVintageCampChallengeExcelConfig *vintage_camp_config_ptr; // [rsp+28h] [rbp-118h]
  VintageCampChallengeStageData *stage_data; // [rsp+30h] [rbp-110h]
  std::map<unsigned int,VintageCampChallengeLevelData> *__for_range; // [rsp+38h] [rbp-108h]
  const std::pair<unsigned int const,VintageCampChallengeLevelData> *v38; // [rsp+40h] [rbp-100h]
  std::tuple_element<0,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *index; // [rsp+48h] [rbp-F8h]
  std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *level_data_0; // [rsp+50h] [rbp-F0h]
  VintageCampChallengeLevelData *level_data; // [rsp+58h] [rbp-E8h]
  std::shared_ptr<Config> v42; // [rsp+60h] [rbp-E0h] BYREF
  common::milog::MiLogStream v43; // [rsp+70h] [rbp-D0h] BYREF
  char v44[176]; // [rsp+90h] [rbp-B0h] BYREF

  v2 = (unsigned __int64)v44;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 16 level_index:1933 64 8 15 stage_iter:1919 96 16 14 event_ptr:1969";
  *(_QWORD *)(v2 + 16) = VintageActivity::onGroupBundleFinishEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202178560;
  if ( BaseActivity::isOpening((const BaseActivity *const)this, 0)
    && !BaseActivity::isSettled((const BaseActivity *const)this) )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v42);
    p_activity_vintage_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v42)->design_config.txt_config_mgr.activity_vintage_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&event->bundle_id >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&event->bundle_id >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&event->bundle_id);
    }
    vintage_camp_config_ptr = ActivityVintageExcelConfigMgr::findCampConfigByGroupBundleId(
                                p_activity_vintage_config_mgr,
                                event->bundle_id);
    std::shared_ptr<Config>::~shared_ptr(&v42);
    if ( vintage_camp_config_ptr )
    {
      *(std::map<unsigned int,VintageCampChallengeStageData>::iterator *)(v2 + 64) = std::map<unsigned int,VintageCampChallengeStageData>::find(
                                                                                       &this->camp_stage_map_,
                                                                                       &vintage_camp_config_ptr->open_stage_id);
      __for_end._M_node = std::map<unsigned int,VintageCampChallengeStageData>::end(&this->camp_stage_map_)._M_node;
      if ( std::operator==(
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::_Self *)(v2 + 64),
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> >::_Self *)&__for_end) )
      {
        common::milog::MiLogStream::create(
          &v43,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "onGroupBundleFinishEvent",
          1922);
        v8 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
               &v43,
               (const char (*)[41])"[VINTAGE] camp stage id error, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
          v8,
          &vintage_camp_config_ptr->open_stage_id);
        common::milog::MiLogStream::~MiLogStream(&v43);
      }
      else
      {
        v9 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeStageData> > *const)(v2 + 64));
        stage_data = &v9->second;
        if ( *(char *)(((unsigned __int64)&v9->second.is_open >> 3) + 0x7FFF8000) < 0 )
          __asan_report_load1(&v9->second.is_open);
        if ( !stage_data->is_open )
        {
          common::milog::MiLogStream::create(
            &v43,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "onGroupBundleFinishEvent",
            1930);
          v10 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                  &v43,
                  (const char (*)[36])"[VINTAGE] stage not open, stage_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
            v10,
            &vintage_camp_config_ptr->open_stage_id);
          common::milog::MiLogStream::~MiLogStream(&v43);
        }
        else
        {
          *(_DWORD *)(v2 + 48) = 0;
          __for_range = &stage_data->camp_level_map;
          __for_begin._M_node = std::map<unsigned int,VintageCampChallengeLevelData>::begin(&stage_data->camp_level_map)._M_node;
          __for_end._M_node = std::map<unsigned int,VintageCampChallengeLevelData>::end(__for_range)._M_node;
          while ( std::operator!=(&__for_begin, &__for_end) )
          {
            v38 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData>>::operator*(&__for_begin);
            index = std::get<0ul,unsigned int const,VintageCampChallengeLevelData>(v38);
            v11 = (std::tuple_element<1,const std::pair<unsigned int const,VintageCampChallengeLevelData> >::type *)std::get<1ul,unsigned int const,VintageCampChallengeLevelData>(v38);
            level_data_0 = v11;
            if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v11 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v11);
            }
            level_id = level_data_0->level_id;
            if ( *(_BYTE *)(((unsigned __int64)&vintage_camp_config_ptr->id >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&vintage_camp_config_ptr->id >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&vintage_camp_config_ptr->id);
            }
            if ( level_id == vintage_camp_config_ptr->id )
            {
              if ( *(_BYTE *)(((unsigned __int64)index >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)index & 7) + 3) >= *(_BYTE *)(((unsigned __int64)index >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(index);
              }
              *(_DWORD *)(v2 + 48) = *index;
              break;
            }
            std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData>>::operator++(&__for_begin);
          }
          if ( *(_DWORD *)(v2 + 48) )
          {
            level_data = std::map<unsigned int,VintageCampChallengeLevelData>::operator[](
                           &stage_data->camp_level_map,
                           (const std::map<unsigned int,VintageCampChallengeLevelData>::key_type *)(v2 + 48));
            p_is_open = &level_data->is_open;
            if ( *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) != 0
              && ((unsigned __int8)p_is_open & 7) >= *(_BYTE *)(((unsigned __int64)p_is_open >> 3) + 0x7FFF8000) )
            {
              __asan_report_load1(p_is_open);
            }
            if ( !level_data->is_open )
            {
              common::milog::MiLogStream::create(
                &v43,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/vintage_activity.cpp",
                "onGroupBundleFinishEvent",
                1950);
              v15 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                      &v43,
                      (const char (*)[36])"[VINTAGE] level not open, level_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &level_data->level_id);
              common::milog::MiLogStream::~MiLogStream(&v43);
            }
            else
            {
              if ( *(_BYTE *)(((unsigned __int64)&stage_data->max_finished_level >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)stage_data + 60) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_data->max_finished_level >> 3)
                                                                          + 0x7FFF8000) )
              {
                __asan_report_load4(&stage_data->max_finished_level);
              }
              if ( stage_data->max_finished_level + 1 >= *(_DWORD *)(v2 + 48) )
              {
                v19 = ((_BYTE)level_data + 9) & 7;
                v20 = (*(_BYTE *)(((unsigned __int64)&level_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v19 >= *(_BYTE *)(((unsigned __int64)&level_data->is_finish >> 3) + 0x7FFF8000));
                if ( (_BYTE)v20 )
                  __asan_report_store1(&level_data->is_finish, v19, v20);
                level_data->is_finish = 1;
                p_max_finished_level = &stage_data->max_finished_level;
                v22 = (uint32_t *)std::max<unsigned int>(
                                    (const unsigned int *)(v2 + 48),
                                    &stage_data->max_finished_level);
                v23 = v22;
                if ( *(_BYTE *)(((unsigned __int64)v22 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v22 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v22 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v22);
                }
                v24 = *v23;
                v25 = *(_BYTE *)(((unsigned __int64)&stage_data->max_finished_level >> 3) + 0x7FFF8000);
                LOBYTE(p_max_finished_level) = v25 != 0;
                v26 = (v25 != 0) & (unsigned __int8)((char)((((_BYTE)stage_data + 60) & 7) + 3) >= v25);
                if ( (_BYTE)v26 )
                  __asan_report_store4(&stage_data->max_finished_level, p_max_finished_level, v26);
                stage_data->max_finished_level = v24;
                max_finished_level = stage_data->max_finished_level;
                if ( max_finished_level >= std::map<unsigned int,VintageCampChallengeLevelData>::size(&stage_data->camp_level_map) )
                {
                  v28 = ((_BYTE)stage_data + 57) & 7;
                  v29 = (*(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v28 >= *(_BYTE *)(((unsigned __int64)&stage_data->is_finish >> 3) + 0x7FFF8000));
                  if ( (_BYTE)v29 )
                    __asan_report_store1(&stage_data->is_finish, v28, v29);
                  stage_data->is_finish = 1;
                }
                common::tools::perf::make_shared<VintageFinishCampEvent,unsigned int &>(
                  (unsigned int *)(v2 + 96),
                  &level_data->level_id);
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->player_);
                EventComp = Player::getEventComp(this->player_);
                std::shared_ptr<BaseEvent>::shared_ptr<VintageFinishCampEvent,void>(
                  (std::shared_ptr<BaseEvent> *const)&v42,
                  (const std::shared_ptr<VintageFinishCampEvent> *)(v2 + 96));
                PlayerEventComp::notifyEvent(EventComp, (BaseEventPtr *)&v42);
                std::shared_ptr<BaseEvent>::~shared_ptr((std::shared_ptr<BaseEvent> *const)&v42);
                v31 = *(_DWORD *)(v2 + 48);
                if ( *(_BYTE *)(((unsigned __int64)&event->bundle_id >> 3) + 0x7FFF8000) != 0
                  && *(_BYTE *)(((unsigned __int64)&event->bundle_id >> 3) + 0x7FFF8000) <= 3 )
                {
                  __asan_report_load4(&event->bundle_id);
                }
                VintageActivity::tryRegisterCampNextGroupBundleAndSendNotify(this, event->bundle_id, v31, stage_data);
                BaseActivity::notifyClientData((BaseActivity *const)this, 0);
                std::shared_ptr<VintageFinishCampEvent>::~shared_ptr((std::shared_ptr<VintageFinishCampEvent> *const)(v2 + 96));
              }
              else
              {
                common::milog::MiLogStream::create(
                  &v43,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/vintage_activity.cpp",
                  "onGroupBundleFinishEvent",
                  1956);
                v16 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                        &v43,
                        (const char (*)[56])"[VINTAGE] finish level don't order, max_finished_level:");
                v17 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v16,
                        &stage_data->max_finished_level);
                v18 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                        v17,
                        (const char (*)[15])", level_index:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v18,
                  (const unsigned int *)(v2 + 48));
                common::milog::MiLogStream::~MiLogStream(&v43);
              }
            }
          }
          else
          {
            common::milog::MiLogStream::create(
              &v43,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/vintage_activity.cpp",
              "onGroupBundleFinishEvent",
              1944);
            v13 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                    &v43,
                    (const char (*)[46])"[VINTAGE] camp find level id fails, level_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &vintage_camp_config_ptr->id);
            common::milog::MiLogStream::~MiLogStream(&v43);
          }
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v43,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "onGroupBundleFinishEvent",
        1914);
      v7 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
             &v43,
             (const char (*)[58])"[VINTAGE] findCampConfigByGroupBundleId fails, bundle_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &event->bundle_id);
      common::milog::MiLogStream::~MiLogStream(&v43);
    }
  }
  if ( v44 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1980: range 0000000014990216-00000000149908A5
void __fastcall VintageActivity::tryRegisterCampNextGroupBundleAndSendNotify(
        VintageActivity *const this,
        const uint32_t now_bundle_id,
        const uint32_t level_index,
        VintageCampChallengeStageData *stage_data)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v8; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> >::_Self *p_y; // rsi
  common::milog::MiLogStream *v11; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> >::pointer v12; // rdx
  char v13; // cl
  PlayerGroupLinkComp *GroupLinkComp; // rcx
  common::milog::MiLogStream *v15; // rax
  std::map<unsigned int,VintageCampChallengeLevelData>::key_type __x; // [rsp+2Ch] [rbp-104h] BYREF
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> >::_Self __y; // [rsp+30h] [rbp-100h] BYREF
  const data::ActivityVintageCampChallengeExcelConfig *vintage_camp_config_ptr; // [rsp+38h] [rbp-F8h]
  std::shared_ptr<Config> v21; // [rsp+40h] [rbp-F0h] BYREF
  common::milog::MiLogStream v22; // [rsp+50h] [rbp-E0h] BYREF
  char v23[192]; // [rsp+70h] [rbp-C0h] BYREF

  v4 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_2(160LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "4 32 4 19 next_bundle_id:1989 48 4 18 now_bundle_id:1979 64 8 20 next_level_iter:1994 96 24 11 notify:2015";
  *(_QWORD *)(v4 + 16) = VintageActivity::tryRegisterCampNextGroupBundleAndSendNotify;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556924;
  v6[536862722] = -218959360;
  v6[536862723] = -218103808;
  v6[536862724] = -202116109;
  *(_DWORD *)(v4 + 48) = now_bundle_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v21);
  v7 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v21);
  vintage_camp_config_ptr = ActivityVintageExcelConfigMgr::findCampConfigByGroupBundleId(
                              &v7->design_config.txt_config_mgr.activity_vintage_config_mgr,
                              *(_DWORD *)(v4 + 48));
  std::shared_ptr<Config>::~shared_ptr(&v21);
  if ( vintage_camp_config_ptr )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v21);
    v9 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v21);
    *(_DWORD *)(v4 + 32) = ActivityVintageExcelConfigMgr::findCampNextGroupBundleId(
                             &v9->design_config.txt_config_mgr.activity_vintage_config_mgr,
                             *(_DWORD *)(v4 + 48));
    std::shared_ptr<Config>::~shared_ptr(&v21);
    if ( *(_DWORD *)(v4 + 32) )
    {
      __x = level_index + 1;
      *(std::map<unsigned int,VintageCampChallengeLevelData>::iterator *)(v4 + 64) = std::map<unsigned int,VintageCampChallengeLevelData>::find(
                                                                                       &stage_data->camp_level_map,
                                                                                       &__x);
      __y._M_node = std::map<unsigned int,VintageCampChallengeLevelData>::end(&stage_data->camp_level_map)._M_node;
      p_y = &__y;
      if ( std::operator==(
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> >::_Self *)(v4 + 64),
             &__y) )
      {
        common::milog::MiLogStream::create(
          &v22,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "tryRegisterCampNextGroupBundleAndSendNotify",
          1997);
        v11 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                &v22,
                (const char (*)[48])"[VINTAGE] can't find next level, next_level_id:");
        __x = level_index + 1;
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &__x);
        common::milog::MiLogStream::~MiLogStream(&v22);
      }
      else
      {
        v12 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageCampChallengeLevelData> > *const)(v4 + 64));
        v13 = *(_BYTE *)(((unsigned __int64)&v12->second.is_open >> 3) + 0x7FFF8000);
        if ( v13 != 0 && (((unsigned __int8)v12 + 12) & 7) >= v13 )
        {
          LOBYTE(p_y) = v13 != 0;
          __asan_report_store1(&v12->second.is_open, p_y, v12);
        }
        v12->second.is_open = 1;
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        GroupLinkComp = Player::getGroupLinkComp(this->player_);
        if ( *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&this->activity_id_);
        }
        if ( PlayerGroupLinkComp::registerGroupBundle(GroupLinkComp, *(_DWORD *)(v4 + 32), this->activity_id_) )
        {
          common::milog::MiLogStream::create(
            &v22,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "tryRegisterCampNextGroupBundleAndSendNotify",
            2004);
          v15 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                  &v22,
                  (const char (*)[45])"register next group bundle fail. bundle_id: ");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, (const unsigned int *)(v4 + 32));
          common::milog::MiLogStream::~MiLogStream(&v22);
        }
        else
        {
          proto::VintageCampGroupBundleRegisterNotify::VintageCampGroupBundleRegisterNotify((proto::VintageCampGroupBundleRegisterNotify *const)(v4 + 96));
          proto::VintageCampGroupBundleRegisterNotify::set_group_bundle_id(
            (proto::VintageCampGroupBundleRegisterNotify *const)(v4 + 96),
            *(_DWORD *)(v4 + 32));
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          Player::sendProto(this->player_, (const google::protobuf::Message *)(v4 + 96));
          proto::VintageCampGroupBundleRegisterNotify::~VintageCampGroupBundleRegisterNotify((proto::VintageCampGroupBundleRegisterNotify *const)(v4 + 96));
        }
      }
    }
    else
    {
      proto::VintageCampStageFinishNotify::VintageCampStageFinishNotify((proto::VintageCampStageFinishNotify *const)(v4 + 96));
      if ( *(_BYTE *)(((unsigned __int64)&vintage_camp_config_ptr->open_stage_id >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)vintage_camp_config_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&vintage_camp_config_ptr->open_stage_id >> 3)
                                                                               + 0x7FFF8000) )
      {
        __asan_report_load4(&vintage_camp_config_ptr->open_stage_id);
      }
      proto::VintageCampStageFinishNotify::set_stage_id(
        (proto::VintageCampStageFinishNotify *const)(v4 + 96),
        vintage_camp_config_ptr->open_stage_id);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v4 + 96));
      proto::VintageCampStageFinishNotify::~VintageCampStageFinishNotify((proto::VintageCampStageFinishNotify *const)(v4 + 96));
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v22,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "tryRegisterCampNextGroupBundleAndSendNotify",
      1984);
    v8 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
           &v22,
           (const char (*)[58])"[VINTAGE] findCampConfigByGroupBundleId fails, bundle_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v4 + 48));
    common::milog::MiLogStream::~MiLogStream(&v22);
  }
  if ( v23 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8010) = -168430091;
  }
};

// Line 2025: range 00000000149908A6-0000000014991BED
int32_t __cdecl VintageActivity::marketToClient(
        VintageActivity *const this,
        proto::VintageActivityDetailInfo *detail_info)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  google::protobuf::Map<unsigned int,proto::VintageMarketTraderInfo> *v5; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false,false>::pointer v6; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false,false>::pointer v7; // rax
  unsigned int first; // r14d
  std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v9; // rdx
  unsigned int *p_second; // rax
  unsigned int v11; // r14d
  std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v12; // rdx
  unsigned int *v13; // rax
  google::protobuf::uint32 v14; // eax
  bool *v15; // rax
  bool second; // r14
  google::protobuf::Map<unsigned int,bool> *v17; // rax
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *v18; // rsi
  bool *v19; // rax
  bool *v20; // rdx
  char v21; // cl
  google::protobuf::RepeatedField<unsigned int> *v22; // rax
  google::protobuf::RepeatedField<unsigned int> *aim_attr_list; // rax
  google::protobuf::RepeatedField<unsigned int> *v24; // rax
  unsigned int store_round; // ecx
  google::protobuf::RepeatedField<unsigned int> *v26; // rax
  google::protobuf::RepeatedField<unsigned int> *v27; // rax
  uint32_t next_can_use_help_round; // ecx
  bool v29; // al
  google::protobuf::RepeatedField<unsigned int> *v30; // rax
  int32_t result; // eax
  std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>::const_iterator __for_begin; // [rsp+20h] [rbp-1C0h] BYREF
  std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>::const_iterator __for_end; // [rsp+28h] [rbp-1B8h] BYREF
  std::map<unsigned int,std::pair<unsigned int,unsigned int>>::const_iterator __for_begin_0; // [rsp+30h] [rbp-1B0h] BYREF
  std::map<unsigned int,std::pair<unsigned int,unsigned int>>::const_iterator __for_end_0; // [rsp+38h] [rbp-1A8h] BYREF
  std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::iterator __for_end_1; // [rsp+40h] [rbp-1A0h] BYREF
  proto::VintageMarketInfo *market_info; // [rsp+48h] [rbp-198h]
  proto::VintageMarketDealInfo *deal_info; // [rsp+50h] [rbp-190h]
  const std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>> *__for_range; // [rsp+58h] [rbp-188h]
  std::unordered_map<unsigned int,std::pair<unsigned int,bool>> *__for_range_1; // [rsp+60h] [rbp-180h]
  std::map<unsigned int,VintageMarketStoreData> *__for_range_2; // [rsp+68h] [rbp-178h]
  std::unordered_map<unsigned int,unsigned int> *__for_range_3; // [rsp+70h] [rbp-170h]
  std::unordered_map<unsigned int,std::pair<unsigned int,bool>> *__for_range_4; // [rsp+78h] [rbp-168h]
  const std::pair<unsigned int const,std::pair<unsigned int,bool> > *v44; // [rsp+80h] [rbp-160h]
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *id_1; // [rsp+88h] [rbp-158h]
  std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *pair; // [rsp+90h] [rbp-150h]
  const std::pair<unsigned int const,unsigned int> *v47; // [rsp+98h] [rbp-148h]
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *id_0; // [rsp+A0h] [rbp-140h]
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *round; // [rsp+A8h] [rbp-138h]
  const std::pair<unsigned int const,VintageMarketStoreData> *v50; // [rsp+B0h] [rbp-130h]
  std::tuple_element<0,const std::pair<unsigned int const,VintageMarketStoreData> >::type *id; // [rsp+B8h] [rbp-128h]
  std::tuple_element<1,const std::pair<unsigned int const,VintageMarketStoreData> >::type *store_data; // [rsp+C0h] [rbp-120h]
  proto::VintageMarketStoreInfo *store_info; // [rsp+C8h] [rbp-118h]
  const std::pair<unsigned int const,std::pair<unsigned int,bool> > *v54; // [rsp+D0h] [rbp-110h]
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *bargain_id; // [rsp+D8h] [rbp-108h]
  std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *price_succ_pair; // [rsp+E0h] [rbp-100h]
  const std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> > *v57; // [rsp+E8h] [rbp-F8h]
  std::tuple_element<0,const std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> > >::type *trader_id; // [rsp+F0h] [rbp-F0h]
  std::tuple_element<1,const std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> > >::type *deal_info_map; // [rsp+F8h] [rbp-E8h]
  proto::VintageMarketTraderInfo *trader_info; // [rsp+100h] [rbp-E0h]
  const std::map<unsigned int,std::pair<unsigned int,unsigned int>> *__for_range_0; // [rsp+108h] [rbp-D8h]
  const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > *v62; // [rsp+110h] [rbp-D0h]
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *item_id; // [rsp+118h] [rbp-C8h]
  std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *num_price_pair; // [rsp+120h] [rbp-C0h]
  proto::ItemParam *item_param_1; // [rsp+128h] [rbp-B8h]
  proto::ItemParam *item_param_0; // [rsp+130h] [rbp-B0h]
  proto::ItemParam *item_param; // [rsp+138h] [rbp-A8h]
  std::shared_ptr<Config> v68; // [rsp+140h] [rbp-A0h] BYREF
  char v69[144]; // [rsp+150h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v69;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 16 trader_iter:2036 64 8 14 item_iter:2045";
  *(_QWORD *)(v2 + 16) = VintageActivity::marketToClient;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202116352;
  market_info = proto::VintageActivityDetailInfo::mutable_market_info(detail_info);
  if ( *(char *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_market_content_open_);
  proto::VintageMarketInfo::set_is_market_content_open(market_info, this->is_market_content_open_);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this - 15) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3)
                                                      + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_market_content_finish_);
  }
  proto::VintageMarketInfo::set_is_market_content_finish(market_info, this->is_market_content_finish_);
  deal_info = proto::VintageMarketInfo::mutable_deal_info(market_info);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v68);
  __for_range = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v68)->design_config.txt_config_mgr.activity_vintage_market_config_mgr.trader_item_info_map;
  std::shared_ptr<Config>::~shared_ptr(&v68);
  __for_begin._M_cur = std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>::begin(__for_range)._M_cur;
  __for_end._M_cur = std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>::end(__for_range)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>,false>(
            &__for_begin,
            &__for_end) )
  {
    v57 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>,false,false>::operator*(&__for_begin);
    trader_id = std::get<0ul,unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>(v57);
    deal_info_map = (std::tuple_element<1,const std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> > >::type *)std::get<1ul,unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>(v57);
    v5 = proto::VintageMarketDealInfo::mutable_trader_item_info_map(deal_info);
    trader_info = google::protobuf::Map<unsigned int,proto::VintageMarketTraderInfo>::operator[](v5, trader_id);
    if ( *(_BYTE *)(((unsigned __int64)trader_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)trader_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)trader_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(trader_id);
    }
    proto::VintageMarketTraderInfo::set_trader_id(trader_info, *trader_id);
    __for_range_0 = deal_info_map;
    __for_begin_0._M_node = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::begin(deal_info_map)._M_node;
    __for_end_0._M_node = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::end(__for_range_0)._M_node;
    while ( std::operator!=(&__for_begin_0, &__for_end_0) )
    {
      v62 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator*(&__for_begin_0);
      item_id = std::get<0ul,unsigned int const,std::pair<unsigned int,unsigned int>>(v62);
      num_price_pair = (std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *)std::get<1ul,unsigned int const,std::pair<unsigned int,unsigned int>>(v62);
      *(std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::iterator *)(v2 + 32) = std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::find(&this->trader_deal_item_map_, trader_id);
      __for_end_1._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false>::__node_type *)std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::end(&this->trader_deal_item_map_)._M_cur;
      if ( std::__detail::operator==<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int>>,false>(
             (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false> *)(v2 + 32),
             (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false> *)&__for_end_1) )
      {
        item_param = proto::VintageMarketTraderInfo::add_available_item_list(trader_info);
        if ( *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)item_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(item_id);
        }
        proto::ItemParam::set_item_id(item_param, *item_id);
        if ( *(_BYTE *)(((unsigned __int64)num_price_pair >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)num_price_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)num_price_pair >> 3)
                                                                           + 0x7FFF8000) )
        {
          __asan_report_load4(num_price_pair);
        }
        proto::ItemParam::set_count(item_param, num_price_pair->first);
      }
      else
      {
        v6 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false,false> *const)(v2 + 32));
        *(std::unordered_map<unsigned int,unsigned int>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,unsigned int>::find(
                                                                                  &v6->second,
                                                                                  item_id);
        v7 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false,false> *const)(v2 + 32));
        __for_end_1._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false>::__node_type *)std::unordered_map<unsigned int,unsigned int>::end(&v7->second)._M_cur;
        if ( std::__detail::operator==<std::pair<unsigned int const,unsigned int>,false>(
               (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v2 + 64),
               (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)&__for_end_1) )
        {
          item_param_0 = proto::VintageMarketTraderInfo::add_available_item_list(trader_info);
          if ( *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)item_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(item_id);
          }
          proto::ItemParam::set_item_id(item_param_0, *item_id);
          if ( *(_BYTE *)(((unsigned __int64)num_price_pair >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)num_price_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)num_price_pair >> 3)
                                                                             + 0x7FFF8000) )
          {
            __asan_report_load4(num_price_pair);
          }
          proto::ItemParam::set_count(item_param_0, num_price_pair->first);
        }
        else
        {
          item_param_1 = proto::VintageMarketTraderInfo::add_available_item_list(trader_info);
          if ( *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)item_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(item_id);
          }
          proto::ItemParam::set_item_id(item_param_1, *item_id);
          if ( *(_BYTE *)(((unsigned __int64)num_price_pair >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)num_price_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)num_price_pair >> 3)
                                                                             + 0x7FFF8000) )
          {
            __asan_report_load4(num_price_pair);
          }
          first = num_price_pair->first;
          v9 = std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 64));
          p_second = &v9->second;
          if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(p_second);
          }
          if ( first <= v9->second )
          {
            v14 = 0;
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)num_price_pair >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)num_price_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)num_price_pair >> 3)
                                                                               + 0x7FFF8000) )
            {
              __asan_report_load4(num_price_pair);
            }
            v11 = num_price_pair->first;
            v12 = std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 64));
            v13 = &v12->second;
            if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v13 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v13);
            }
            v14 = v11 - v12->second;
          }
          proto::ItemParam::set_count(item_param_1, v14);
        }
      }
      std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator++(&__for_begin_0);
    }
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>,false,false>::operator++(&__for_begin);
  }
  __for_range_1 = &this->bargain_price_map_;
  *(std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::begin(&this->bargain_price_map_);
  __for_end_1._M_cur = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::end(__for_range_1)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)(v2 + 64),
            &__for_end_1) )
  {
    v54 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 64));
    bargain_id = std::get<0ul,unsigned int const,std::pair<unsigned int,bool>>(v54);
    price_succ_pair = (std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *)std::get<1ul,unsigned int const,std::pair<unsigned int,bool>>(v54);
    v15 = &price_succ_pair->second;
    if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) != 0
      && ((unsigned __int8)v15 & 7) >= *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load1(v15);
    }
    second = price_succ_pair->second;
    v17 = proto::VintageMarketInfo::mutable_bargain_info_map(market_info);
    v18 = bargain_id;
    v19 = google::protobuf::Map<unsigned int,bool>::operator[](v17, bargain_id);
    v20 = v19;
    v21 = *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000);
    if ( v21 != 0 && ((unsigned __int8)v19 & 7) >= v21 )
    {
      LOBYTE(v18) = v21 != 0;
      __asan_report_store1(v19, v18, v19);
    }
    *v20 = second;
    std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 64));
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->store_round_);
  }
  proto::VintageMarketInfo::set_store_round(market_info, this->store_round_);
  __for_range_2 = &this->store_map_;
  *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v2 + 64) = std::map<unsigned int,VintageMarketStoreData>::begin(&this->store_map_);
  __for_end_1._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false>::__node_type *)std::map<unsigned int,VintageMarketStoreData>::end(__for_range_2)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v2 + 64),
            (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)&__for_end_1) )
  {
    v50 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 64));
    id = std::get<0ul,unsigned int const,VintageMarketStoreData>(v50);
    store_data = (std::tuple_element<1,const std::pair<unsigned int const,VintageMarketStoreData> >::type *)std::get<1ul,unsigned int const,VintageMarketStoreData>(v50);
    store_info = proto::VintageMarketInfo::add_open_store_list(market_info);
    if ( *(_BYTE *)(((unsigned __int64)id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(id);
    }
    proto::VintageMarketStoreInfo::set_store_id(store_info, *id);
    v22 = proto::VintageMarketStoreInfo::mutable_cur_attr_list(store_info);
    common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(&store_data->attr_vec, v22);
    aim_attr_list = proto::VintageMarketStoreInfo::mutable_next_aim_attr_list(store_info);
    common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(&store_data->aim_attr_vec, aim_attr_list);
    v24 = proto::VintageMarketStoreInfo::mutable_strategy_list(store_info);
    common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(&store_data->chosen_skill_vec, v24);
    if ( *(_BYTE *)(((unsigned __int64)&store_data->slot_count >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&store_data->slot_count >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&store_data->slot_count);
    }
    proto::VintageMarketStoreInfo::set_slot_count(store_info, store_data->slot_count);
    std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 64));
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this - 60) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_round_tips_view_);
  }
  proto::VintageMarketInfo::set_is_round_tips_view(market_info, this->is_round_tips_view_);
  if ( *(char *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_store_content_finish_);
  proto::VintageMarketInfo::set_is_store_content_finish(market_info, this->is_store_content_finish_);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 105) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3)
                                                       + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_store_content_interrupt_);
  }
  proto::VintageMarketInfo::set_is_store_content_interrupt(market_info, this->is_store_content_interrupt_);
  __for_range_3 = &this->env_to_round_map_;
  *(std::unordered_map<unsigned int,unsigned int>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,unsigned int>::begin(&this->env_to_round_map_);
  __for_end_1._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false>::__node_type *)std::unordered_map<unsigned int,unsigned int>::end(__for_range_3)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,unsigned int>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v2 + 64),
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)&__for_end_1) )
  {
    v47 = std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 64));
    id_0 = std::get<0ul,unsigned int const,unsigned int>(v47);
    round = (std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *)std::get<1ul,unsigned int const,unsigned int>(v47);
    if ( *(_BYTE *)(((unsigned __int64)id_0 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)id_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)id_0 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(id_0);
    }
    proto::VintageMarketInfo::add_cur_env_event_list(market_info, *id_0);
    std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 64));
  }
  __for_range_4 = &this->npc_to_round_finish_map_;
  *(std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::begin(&this->npc_to_round_finish_map_);
  __for_end_1._M_cur = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::end(__for_range_4)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)(v2 + 64),
            &__for_end_1) )
  {
    v44 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 64));
    id_1 = std::get<0ul,unsigned int const,std::pair<unsigned int,bool>>(v44);
    pair = (std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *)std::get<1ul,unsigned int const,std::pair<unsigned int,bool>>(v44);
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    store_round = this->store_round_;
    if ( *(_BYTE *)(((unsigned __int64)pair >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)pair >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(pair);
    }
    if ( store_round <= pair->first )
    {
      if ( *(_BYTE *)(((unsigned __int64)&pair->second >> 3) + 0x7FFF8000) != 0
        && (((unsigned __int8)pair + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&pair->second >> 3) + 0x7FFF8000) )
      {
        __asan_report_load1(&pair->second);
      }
      if ( !pair->second )
      {
        if ( *(_BYTE *)(((unsigned __int64)id_1 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)id_1 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)id_1 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(id_1);
        }
        proto::VintageMarketInfo::add_cur_npc_event_list(market_info, *id_1);
      }
    }
    std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 64));
  }
  v26 = proto::VintageMarketInfo::mutable_unlock_strategy_list(market_info);
  common::tools::MiscUtils::setToRepeated<std::unordered_set<unsigned int>,unsigned int>(&this->unlock_skill_set_, v26);
  v27 = proto::VintageMarketInfo::mutable_viewed_strategy_list(market_info);
  common::tools::MiscUtils::setToRepeated<std::unordered_set<unsigned int>,unsigned int>(&this->viewed_skill_set_, v27);
  if ( *(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 68) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->prev_coin_b_num_);
  }
  proto::VintageMarketInfo::set_prev_coin_b_num(market_info, this->prev_coin_b_num_);
  if ( *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->prev_coin_c_num_);
  }
  proto::VintageMarketInfo::set_prev_coin_c_num(market_info, this->prev_coin_c_num_);
  if ( *(char *)(((unsigned __int64)&this->is_strategy_module_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_strategy_module_open_);
  proto::VintageMarketInfo::set_is_strategy_module_open(market_info, this->is_strategy_module_open_);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this - 87) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_help_module_open_);
  }
  proto::VintageMarketInfo::set_is_help_module_open(market_info, this->is_help_module_open_);
  if ( *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3)
                                                        + 0x7FFF8000) )
  {
    __asan_report_load4(&this->next_can_use_help_round_);
  }
  if ( !this->next_can_use_help_round_ )
    goto LABEL_97;
  next_can_use_help_round = this->next_can_use_help_round_;
  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->store_round_);
  }
  if ( next_can_use_help_round > this->store_round_ )
    v29 = 0;
  else
LABEL_97:
    v29 = 1;
  proto::VintageMarketInfo::set_is_help_in_cd(market_info, v29);
  v30 = proto::VintageMarketInfo::mutable_store_round_income_list(market_info);
  common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(&this->store_round_income_vec_, v30);
  if ( *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 76) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->help_skill_id_);
  }
  proto::VintageMarketInfo::set_help_skill_id(market_info, this->help_skill_id_);
  if ( *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3)
                                                        + 0x7FFF8000) )
  {
    __asan_report_load4(&this->dividend_reward_count_);
  }
  proto::VintageMarketInfo::set_dividend_reward_count(market_info, this->dividend_reward_count_);
  if ( *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3)
                                                        + 0x7FFF8000) )
  {
    __asan_report_load4(&this->next_can_use_help_round_);
  }
  proto::VintageMarketInfo::set_next_can_use_help_round(market_info, this->next_can_use_help_round_);
  result = 0;
  if ( v69 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2107: range 0000000014991BEE-0000000014992D57
int32_t __cdecl VintageActivity::marketToBin(
        const VintageActivity *const this,
        proto::VintageScheduleBin *schedule_bin)
{
  google::protobuf::RepeatedField<unsigned int> *v2; // rax
  google::protobuf::RepeatedField<unsigned int> *v3; // rax
  google::protobuf::RepeatedField<unsigned int> *v4; // rax
  google::protobuf::RepeatedField<unsigned int> *v5; // rax
  google::protobuf::RepeatedField<unsigned int> *v6; // rax
  google::protobuf::RepeatedField<unsigned int> *v7; // rax
  google::protobuf::Map<unsigned int,proto::Uint32PairBin> *v8; // rax
  google::protobuf::RepeatedField<unsigned int> *v9; // rax
  std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::const_iterator __for_begin; // [rsp+10h] [rbp-160h] BYREF
  std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::const_iterator __for_end; // [rsp+18h] [rbp-158h] BYREF
  std::unordered_map<unsigned int,unsigned int>::const_iterator __for_begin_0; // [rsp+20h] [rbp-150h] BYREF
  std::unordered_map<unsigned int,unsigned int>::const_iterator __for_end_0; // [rsp+28h] [rbp-148h] BYREF
  const std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>> *__for_range; // [rsp+30h] [rbp-140h]
  const std::unordered_map<unsigned int,std::pair<unsigned int,bool>> *__for_range_1; // [rsp+38h] [rbp-138h]
  const std::map<unsigned int,VintageMarketStoreData> *__for_range_2; // [rsp+40h] [rbp-130h]
  const std::unordered_map<unsigned int,unsigned int> *__for_range_4; // [rsp+48h] [rbp-128h]
  const std::unordered_map<unsigned int,std::pair<unsigned int,bool>> *__for_range_5; // [rsp+50h] [rbp-120h]
  const std::map<unsigned int,std::pair<unsigned int,unsigned int>> *__for_range_6; // [rsp+58h] [rbp-118h]
  const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > *v21; // [rsp+60h] [rbp-110h]
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *id_3; // [rsp+68h] [rbp-108h]
  std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *res_pair; // [rsp+70h] [rbp-100h]
  proto::Uint32PairBin *pair_bin_1; // [rsp+78h] [rbp-F8h]
  const std::pair<unsigned int const,std::pair<unsigned int,bool> > *v25; // [rsp+80h] [rbp-F0h]
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *id_2; // [rsp+88h] [rbp-E8h]
  std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *pair; // [rsp+90h] [rbp-E0h]
  proto::VintageNpcEventBin *npc_bin; // [rsp+98h] [rbp-D8h]
  const std::pair<unsigned int const,unsigned int> *v29; // [rsp+A0h] [rbp-D0h]
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *id_1; // [rsp+A8h] [rbp-C8h]
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *round; // [rsp+B0h] [rbp-C0h]
  proto::Uint32PairBin *pair_bin_0; // [rsp+B8h] [rbp-B8h]
  const std::pair<unsigned int const,VintageMarketStoreData> *v33; // [rsp+C0h] [rbp-B0h]
  std::tuple_element<0,const std::pair<unsigned int const,VintageMarketStoreData> >::type *id; // [rsp+C8h] [rbp-A8h]
  std::tuple_element<1,const std::pair<unsigned int const,VintageMarketStoreData> >::type *store_data; // [rsp+D0h] [rbp-A0h]
  proto::VintageStoreBin *store_bin; // [rsp+D8h] [rbp-98h]
  const std::map<unsigned int,std::vector<unsigned int>> *__for_range_3; // [rsp+E0h] [rbp-90h]
  const std::pair<unsigned int const,std::vector<unsigned int> > *v38; // [rsp+E8h] [rbp-88h]
  std::tuple_element<0,const std::pair<unsigned int const,std::vector<unsigned int> > >::type *id_0; // [rsp+F0h] [rbp-80h]
  std::tuple_element<1,const std::pair<unsigned int const,std::vector<unsigned int> > >::type *pool_vec; // [rsp+F8h] [rbp-78h]
  proto::VintageStoreAttrRandomPoolBin *random_bin; // [rsp+100h] [rbp-70h]
  const std::pair<unsigned int const,std::pair<unsigned int,bool> > *v42; // [rsp+108h] [rbp-68h]
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *bargain_id; // [rsp+110h] [rbp-60h]
  std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *price_succ_pair; // [rsp+118h] [rbp-58h]
  proto::VintageBargainBin *bargain_bin; // [rsp+120h] [rbp-50h]
  const std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> > *v46; // [rsp+128h] [rbp-48h]
  std::tuple_element<0,const std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> > >::type *trader_id; // [rsp+130h] [rbp-40h]
  std::tuple_element<1,const std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> > >::type *deal_info_map; // [rsp+138h] [rbp-38h]
  proto::VintageTraderDealBin *deal_bin; // [rsp+140h] [rbp-30h]
  const std::unordered_map<unsigned int,unsigned int> *__for_range_0; // [rsp+148h] [rbp-28h]
  const std::pair<unsigned int const,unsigned int> *v51; // [rsp+150h] [rbp-20h]
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *item_id; // [rsp+158h] [rbp-18h]
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *count; // [rsp+160h] [rbp-10h]
  proto::Uint32PairBin *pair_bin; // [rsp+168h] [rbp-8h]

  if ( *(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this - 15) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3)
                                                      + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_market_content_finish_);
  }
  proto::VintageScheduleBin::set_is_market_content_finish(schedule_bin, this->is_market_content_finish_);
  if ( *(char *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_market_content_open_);
  proto::VintageScheduleBin::set_is_market_content_open(schedule_bin, this->is_market_content_open_);
  __for_range = &this->trader_deal_item_map_;
  __for_begin._M_cur = std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::begin(&this->trader_deal_item_map_)._M_cur;
  __for_end._M_cur = std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::end(&this->trader_deal_item_map_)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int>>,false>(
            &__for_begin,
            &__for_end) )
  {
    v46 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int>>,false,false>::operator*(&__for_begin);
    trader_id = std::get<0ul,unsigned int const,std::unordered_map<unsigned int,unsigned int>>(v46);
    deal_info_map = (std::tuple_element<1,const std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> > >::type *)std::get<1ul,unsigned int const,std::unordered_map<unsigned int,unsigned int>>(v46);
    deal_bin = proto::VintageScheduleBin::add_trader_list(schedule_bin);
    if ( *(_BYTE *)(((unsigned __int64)trader_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)trader_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)trader_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(trader_id);
    }
    proto::VintageTraderDealBin::set_trader_id(deal_bin, *trader_id);
    __for_range_0 = deal_info_map;
    __for_begin_0._M_cur = std::unordered_map<unsigned int,unsigned int>::begin(deal_info_map)._M_cur;
    __for_end_0._M_cur = std::unordered_map<unsigned int,unsigned int>::end(__for_range_0)._M_cur;
    while ( std::__detail::operator!=<std::pair<unsigned int const,unsigned int>,false>(&__for_begin_0, &__for_end_0) )
    {
      v51 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator*(&__for_begin_0);
      item_id = std::get<0ul,unsigned int const,unsigned int>(v51);
      count = (std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *)std::get<1ul,unsigned int const,unsigned int>(v51);
      pair_bin = proto::VintageTraderDealBin::add_deal_item_list(deal_bin);
      if ( *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)item_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(item_id);
      }
      proto::Uint32PairBin::set_key(pair_bin, *item_id);
      if ( *(_BYTE *)(((unsigned __int64)count >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)count & 7) + 3) >= *(_BYTE *)(((unsigned __int64)count >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(count);
      }
      proto::Uint32PairBin::set_value(pair_bin, *count);
      std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator++(&__for_begin_0);
    }
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int>>,false,false>::operator++(&__for_begin);
  }
  __for_range_1 = &this->bargain_price_map_;
  __for_begin_0._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false>::__node_type *)std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::begin(&this->bargain_price_map_)._M_cur;
  __for_end_0._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false>::__node_type *)std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::end(__for_range_1)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)&__for_begin_0,
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)&__for_end_0) )
  {
    v42 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)&__for_begin_0);
    bargain_id = std::get<0ul,unsigned int const,std::pair<unsigned int,bool>>(v42);
    price_succ_pair = (std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *)std::get<1ul,unsigned int const,std::pair<unsigned int,bool>>(v42);
    bargain_bin = proto::VintageScheduleBin::add_bargain_list(schedule_bin);
    if ( *(_BYTE *)(((unsigned __int64)bargain_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)bargain_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)bargain_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(bargain_id);
    }
    proto::VintageBargainBin::set_bargain_id(bargain_bin, *bargain_id);
    if ( *(_BYTE *)(((unsigned __int64)price_succ_pair >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)price_succ_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)price_succ_pair >> 3)
                                                                        + 0x7FFF8000) )
    {
      __asan_report_load4(price_succ_pair);
    }
    proto::VintageBargainBin::set_price(bargain_bin, price_succ_pair->first);
    if ( *(_BYTE *)(((unsigned __int64)&price_succ_pair->second >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)price_succ_pair + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&price_succ_pair->second >> 3)
                                                                  + 0x7FFF8000) )
    {
      __asan_report_load1(&price_succ_pair->second);
    }
    proto::VintageBargainBin::set_is_succ(bargain_bin, price_succ_pair->second);
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)&__for_begin_0);
  }
  __for_range_2 = &this->store_map_;
  __for_begin._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false>::__node_type *)std::map<unsigned int,VintageMarketStoreData>::begin(&this->store_map_)._M_node;
  __for_end._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false>::__node_type *)std::map<unsigned int,VintageMarketStoreData>::end(__for_range_2)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)&__for_begin,
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)&__for_end) )
  {
    v33 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)&__for_begin);
    id = std::get<0ul,unsigned int const,VintageMarketStoreData>(v33);
    store_data = (std::tuple_element<1,const std::pair<unsigned int const,VintageMarketStoreData> >::type *)std::get<1ul,unsigned int const,VintageMarketStoreData>(v33);
    store_bin = proto::VintageScheduleBin::add_store_list(schedule_bin);
    if ( *(_BYTE *)(((unsigned __int64)id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(id);
    }
    proto::VintageStoreBin::set_store_id(store_bin, *id);
    v2 = proto::VintageStoreBin::mutable_attr_list(store_bin);
    common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(&store_data->attr_vec, v2);
    v3 = proto::VintageStoreBin::mutable_aim_attr_list(store_bin);
    common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(&store_data->aim_attr_vec, v3);
    if ( *(_BYTE *)(((unsigned __int64)&store_data->slot_count >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&store_data->slot_count >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&store_data->slot_count);
    }
    proto::VintageStoreBin::set_slot_count(store_bin, store_data->slot_count);
    v4 = proto::VintageStoreBin::mutable_chosen_skill_list(store_bin);
    common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(&store_data->chosen_skill_vec, v4);
    __for_range_3 = &store_data->attr_random_pool_map;
    __for_begin_0._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false>::__node_type *)std::map<unsigned int,std::vector<unsigned int>>::begin(&store_data->attr_random_pool_map)._M_node;
    __for_end_0._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false>::__node_type *)std::map<unsigned int,std::vector<unsigned int>>::end(__for_range_3)._M_node;
    while ( std::operator!=(
              (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)&__for_begin_0,
              (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)&__for_end_0) )
    {
      v38 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)&__for_begin_0);
      id_0 = std::get<0ul,unsigned int const,std::vector<unsigned int>>(v38);
      pool_vec = (std::tuple_element<1,const std::pair<unsigned int const,std::vector<unsigned int> > >::type *)std::get<1ul,unsigned int const,std::vector<unsigned int>>(v38);
      random_bin = proto::VintageStoreBin::add_attr_random_pool_list(store_bin);
      if ( *(_BYTE *)(((unsigned __int64)id_0 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)id_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)id_0 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(id_0);
      }
      proto::VintageStoreAttrRandomPoolBin::set_template_id(random_bin, *id_0);
      v5 = proto::VintageStoreAttrRandomPoolBin::mutable_pool_list(random_bin);
      common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(pool_vec, v5);
      std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)&__for_begin_0);
    }
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)&__for_begin);
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->store_round_);
  }
  proto::VintageScheduleBin::set_store_round(schedule_bin, this->store_round_);
  if ( *(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 68) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->prev_coin_b_num_);
  }
  proto::VintageScheduleBin::set_prev_coin_b_num(schedule_bin, this->prev_coin_b_num_);
  if ( *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->prev_coin_c_num_);
  }
  proto::VintageScheduleBin::set_prev_coin_c_num(schedule_bin, this->prev_coin_c_num_);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this - 60) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_round_tips_view_);
  }
  proto::VintageScheduleBin::set_is_round_tips_view(schedule_bin, this->is_round_tips_view_);
  if ( *(char *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_store_content_finish_);
  proto::VintageScheduleBin::set_is_store_content_finish(schedule_bin, this->is_store_content_finish_);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 105) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3)
                                                       + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_store_content_interrupt_);
  }
  proto::VintageScheduleBin::set_is_store_content_interrupt(schedule_bin, this->is_store_content_interrupt_);
  __for_range_4 = &this->env_to_round_map_;
  __for_begin_0._M_cur = std::unordered_map<unsigned int,unsigned int>::begin(&this->env_to_round_map_)._M_cur;
  __for_end_0._M_cur = std::unordered_map<unsigned int,unsigned int>::end(__for_range_4)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,unsigned int>,false>(&__for_begin_0, &__for_end_0) )
  {
    v29 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator*(&__for_begin_0);
    id_1 = std::get<0ul,unsigned int const,unsigned int>(v29);
    round = (std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *)std::get<1ul,unsigned int const,unsigned int>(v29);
    pair_bin_0 = proto::VintageScheduleBin::add_env_event_list(schedule_bin);
    if ( *(_BYTE *)(((unsigned __int64)id_1 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)id_1 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)id_1 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(id_1);
    }
    proto::Uint32PairBin::set_key(pair_bin_0, *id_1);
    if ( *(_BYTE *)(((unsigned __int64)round >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)round & 7) + 3) >= *(_BYTE *)(((unsigned __int64)round >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(round);
    }
    proto::Uint32PairBin::set_value(pair_bin_0, *round);
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator++(&__for_begin_0);
  }
  __for_range_5 = &this->npc_to_round_finish_map_;
  __for_begin_0._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false>::__node_type *)std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::begin(&this->npc_to_round_finish_map_)._M_cur;
  __for_end_0._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false>::__node_type *)std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::end(__for_range_5)._M_cur;
  while ( std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false>(
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)&__for_begin_0,
            (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)&__for_end_0) )
  {
    v25 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator*((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)&__for_begin_0);
    id_2 = std::get<0ul,unsigned int const,std::pair<unsigned int,bool>>(v25);
    pair = (std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,bool> > >::type *)std::get<1ul,unsigned int const,std::pair<unsigned int,bool>>(v25);
    npc_bin = proto::VintageScheduleBin::add_npc_event_list(schedule_bin);
    if ( *(_BYTE *)(((unsigned __int64)id_2 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)id_2 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)id_2 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(id_2);
    }
    proto::VintageNpcEventBin::set_event_id(npc_bin, *id_2);
    if ( *(_BYTE *)(((unsigned __int64)pair >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)pair >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(pair);
    }
    proto::VintageNpcEventBin::set_max_effective_round(npc_bin, pair->first);
    if ( *(_BYTE *)(((unsigned __int64)&pair->second >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)pair + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&pair->second >> 3) + 0x7FFF8000) )
    {
      __asan_report_load1(&pair->second);
    }
    proto::VintageNpcEventBin::set_is_finish(npc_bin, pair->second);
    std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator++((std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)&__for_begin_0);
  }
  v6 = proto::VintageScheduleBin::mutable_skill_list(schedule_bin);
  common::tools::MiscUtils::setToRepeated<std::unordered_set<unsigned int>,unsigned int>(&this->unlock_skill_set_, v6);
  v7 = proto::VintageScheduleBin::mutable_viewed_skill_list(schedule_bin);
  common::tools::MiscUtils::setToRepeated<std::unordered_set<unsigned int>,unsigned int>(&this->viewed_skill_set_, v7);
  if ( *(char *)(((unsigned __int64)&this->is_strategy_module_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_strategy_module_open_);
  proto::VintageScheduleBin::set_is_strategy_module_open(schedule_bin, this->is_strategy_module_open_);
  if ( *(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this - 87) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_help_module_open_);
  }
  proto::VintageScheduleBin::set_is_help_module_open(schedule_bin, this->is_help_module_open_);
  if ( *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3)
                                                        + 0x7FFF8000) )
  {
    __asan_report_load4(&this->next_can_use_help_round_);
  }
  proto::VintageScheduleBin::set_next_can_use_help_round(schedule_bin, this->next_can_use_help_round_);
  if ( *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 76) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->help_skill_id_);
  }
  proto::VintageScheduleBin::set_help_skill_id(schedule_bin, this->help_skill_id_);
  __for_range_6 = &this->dividend_info_map_;
  __for_begin_0._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false>::__node_type *)std::map<unsigned int,std::pair<unsigned int,unsigned int>>::begin(&this->dividend_info_map_)._M_node;
  __for_end_0._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false>::__node_type *)std::map<unsigned int,std::pair<unsigned int,unsigned int>>::end(__for_range_6)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::_Self *)&__for_begin_0,
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::_Self *)&__for_end_0) )
  {
    v21 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > > *const)&__for_begin_0);
    id_3 = std::get<0ul,unsigned int const,std::pair<unsigned int,unsigned int>>(v21);
    res_pair = (std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *)std::get<1ul,unsigned int const,std::pair<unsigned int,unsigned int>>(v21);
    v8 = proto::VintageScheduleBin::mutable_dividend_res_map(schedule_bin);
    pair_bin_1 = google::protobuf::Map<unsigned int,proto::Uint32PairBin>::operator[](v8, id_3);
    if ( *(_BYTE *)(((unsigned __int64)res_pair >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)res_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)res_pair >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(res_pair);
    }
    proto::Uint32PairBin::set_key(pair_bin_1, res_pair->first);
    if ( *(_BYTE *)(((unsigned __int64)&res_pair->second >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)res_pair + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&res_pair->second >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&res_pair->second);
    }
    proto::Uint32PairBin::set_value(pair_bin_1, res_pair->second);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > > *const)&__for_begin_0);
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->dividend_id_);
  }
  proto::VintageScheduleBin::set_dividend_id(schedule_bin, this->dividend_id_);
  if ( *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3)
                                                        + 0x7FFF8000) )
  {
    __asan_report_load4(&this->dividend_reward_count_);
  }
  proto::VintageScheduleBin::set_dividend_reward_count(schedule_bin, this->dividend_reward_count_);
  v9 = proto::VintageScheduleBin::mutable_store_round_income_list(schedule_bin);
  common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(&this->store_round_income_vec_, v9);
  return 0;
};

// Line 2181: range 0000000014992D58-0000000014994145
int32_t __cdecl VintageActivity::marketFromBin(
        VintageActivity *const this,
        const proto::VintageScheduleBin *schedule_bin)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool is_market_content_finish; // cl
  char v6; // dl
  __int64 v7; // rdx
  unsigned int v8; // eax
  __int64 v9; // rdx
  char v10; // al
  unsigned int *v11; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>,bool> v12; // rax
  common::milog::MiLogStream *v13; // r14
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // r14
  unsigned int *v16; // rcx
  std::pair<unsigned int,bool> *v17; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>,bool> v18; // rax
  common::milog::MiLogStream *v19; // r14
  google::protobuf::RepeatedPtrField<proto::VintageNpcEventBin>::const_iterator *p_for_begin_1; // rsi
  const google::protobuf::RepeatedField<unsigned int> *v21; // rax
  const google::protobuf::RepeatedField<unsigned int> *v22; // rax
  const google::protobuf::RepeatedField<unsigned int> *v23; // rax
  const google::protobuf::RepeatedField<unsigned int> *v24; // rax
  std::vector<unsigned int> *v25; // r14
  std::vector<unsigned int> *v26; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >,bool> v27; // rax
  common::milog::MiLogStream *v28; // r14
  VintageMarketStoreData *v29; // r15
  unsigned int *v30; // rcx
  VintageMarketStoreData *v31; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >,bool> v32; // rax
  common::milog::MiLogStream *v33; // r14
  __int64 v34; // rdx
  char v35; // al
  uint32_t coin_b_num; // ecx
  char v37; // dl
  __int64 v38; // rdx
  __int64 coin_c_num; // rdx
  char v40; // al
  bool is_round_tips_view; // cl
  char v42; // dl
  __int64 v43; // rdx
  unsigned int v44; // eax
  __int64 v45; // rdx
  char v46; // al
  bool is_store_content_interrupt; // cl
  char v48; // dl
  __int64 v49; // rdx
  unsigned int *v50; // rcx
  unsigned int *v51; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>,bool> v52; // rax
  common::milog::MiLogStream *v53; // r14
  unsigned int *v54; // rcx
  std::pair<unsigned int,bool> *v55; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>,bool> v56; // rax
  common::milog::MiLogStream *v57; // r14
  const google::protobuf::RepeatedField<unsigned int> *v58; // rax
  const google::protobuf::RepeatedField<unsigned int> *v59; // rsi
  unsigned int v60; // eax
  __int64 v61; // rdx
  char v62; // al
  bool is_help_module_open; // cl
  char v64; // dl
  __int64 v65; // rdx
  uint32_t can_use_help_round; // ecx
  char v67; // dl
  __int64 v68; // rdx
  uint32_t v69; // ecx
  char v70; // dl
  __int64 v71; // rdx
  char *v72; // rsi
  const unsigned int *v73; // rcx
  std::pair<unsigned int,unsigned int> *v74; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >,bool> v75; // rax
  common::milog::MiLogStream *v76; // rax
  __int64 v77; // rdx
  char v78; // al
  uint32_t v79; // ecx
  char v80; // dl
  __int64 v81; // rdx
  const google::protobuf::RepeatedField<unsigned int> *v82; // rax
  int32_t result; // eax
  const proto::VintageScheduleBin *schedule_bina; // [rsp+10h] [rbp-240h]
  bool __y; // [rsp+2Fh] [rbp-221h] BYREF
  unsigned int __args_0; // [rsp+30h] [rbp-220h] BYREF
  std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::key_type __k; // [rsp+34h] [rbp-21Ch] BYREF
  google::protobuf::RepeatedPtrField<proto::VintageTraderDealBin>::const_iterator __for_begin; // [rsp+38h] [rbp-218h] BYREF
  google::protobuf::RepeatedPtrField<proto::VintageNpcEventBin>::const_iterator __for_begin_1; // [rsp+40h] [rbp-210h] BYREF
  google::protobuf::RepeatedPtrField<proto::VintageNpcEventBin>::const_iterator __for_end_0; // [rsp+48h] [rbp-208h] BYREF
  const google::protobuf::RepeatedPtrField<proto::VintageTraderDealBin> *__for_range; // [rsp+50h] [rbp-200h]
  const google::protobuf::RepeatedPtrField<proto::VintageBargainBin> *__for_range_1; // [rsp+58h] [rbp-1F8h]
  const google::protobuf::RepeatedPtrField<proto::VintageStoreBin> *__for_range_2; // [rsp+60h] [rbp-1F0h]
  const google::protobuf::RepeatedPtrField<proto::Uint32PairBin> *__for_range_4; // [rsp+68h] [rbp-1E8h]
  const google::protobuf::RepeatedPtrField<proto::VintageNpcEventBin> *__for_range_5; // [rsp+70h] [rbp-1E0h]
  const google::protobuf::Map<unsigned int,proto::Uint32PairBin> *__for_range_6; // [rsp+78h] [rbp-1D8h]
  const unsigned int *p_id; // [rsp+80h] [rbp-1D0h]
  const proto::VintageNpcEventBin *npc_bin; // [rsp+88h] [rbp-1C8h]
  const proto::Uint32PairBin *pair_bin; // [rsp+90h] [rbp-1C0h]
  const proto::VintageStoreBin *store_bin; // [rsp+98h] [rbp-1B8h]
  const google::protobuf::RepeatedPtrField<proto::VintageStoreAttrRandomPoolBin> *__for_range_3; // [rsp+A0h] [rbp-1B0h]
  const proto::VintageStoreAttrRandomPoolBin *random_bin; // [rsp+A8h] [rbp-1A8h]
  const proto::VintageBargainBin *bargain_bin; // [rsp+B0h] [rbp-1A0h]
  const proto::VintageTraderDealBin *trader_bin; // [rsp+B8h] [rbp-198h]
  std::unordered_map<unsigned int,unsigned int> *deal_info_map; // [rsp+C0h] [rbp-190h]
  const google::protobuf::RepeatedPtrField<proto::Uint32PairBin> *__for_range_0; // [rsp+C8h] [rbp-188h]
  const proto::Uint32PairBin *deal_item_bin; // [rsp+D0h] [rbp-180h]
  google::protobuf::RepeatedPtrField<proto::VintageStoreAttrRandomPoolBin>::const_iterator __for_end; // [rsp+D8h] [rbp-178h] BYREF
  google::protobuf::Map<unsigned int,proto::Uint32PairBin>::const_iterator __for_begin_0; // [rsp+E0h] [rbp-170h] BYREF
  common::milog::MiLogStream v110; // [rsp+100h] [rbp-150h] BYREF
  char v111[304]; // [rsp+120h] [rbp-130h] BYREF

  schedule_bina = schedule_bin;
  v2 = (unsigned __int64)v111;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(256LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 24 13 pool_vec:2213 96 128 9 data:2206";
  *(_QWORD *)(v2 + 16) = VintageActivity::marketFromBin;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234881024;
  v4[536862722] = -218959118;
  v4[536862727] = -202116109;
  is_market_content_finish = proto::VintageScheduleBin::is_market_content_finish(schedule_bin);
  v6 = *(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000);
  LOBYTE(schedule_bin) = v6 != 0;
  v7 = (v6 != 0) & (unsigned __int8)((((unsigned __int8)this - 15) & 7) >= v6);
  if ( (_BYTE)v7 )
    __asan_report_store1(&this->is_market_content_finish_, schedule_bin, v7);
  this->is_market_content_finish_ = is_market_content_finish;
  LOBYTE(v8) = proto::VintageScheduleBin::is_market_content_open(schedule_bina);
  v9 = v8;
  v10 = *(_BYTE *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000);
  if ( v10 < 0 )
  {
    LOBYTE(schedule_bin) = v10 != 0;
    __asan_report_store1(&this->is_market_content_open_, schedule_bin, v9);
  }
  this->is_market_content_open_ = v9;
  __for_range = proto::VintageScheduleBin::trader_list(schedule_bina);
  __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::VintageTraderDealBin>::begin(__for_range).it_;
  __for_begin_1.it_ = google::protobuf::RepeatedPtrField<proto::VintageTraderDealBin>::end(__for_range).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::VintageTraderDealBin const>::operator!=(
            &__for_begin,
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageTraderDealBin>::iterator *)&__for_begin_1) )
  {
    trader_bin = google::protobuf::internal::RepeatedPtrIterator<proto::VintageTraderDealBin const>::operator*(&__for_begin);
    __k = proto::VintageTraderDealBin::trader_id(trader_bin);
    deal_info_map = std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::operator[](
                      &this->trader_deal_item_map_,
                      &__k);
    __for_range_0 = proto::VintageTraderDealBin::deal_item_list(trader_bin);
    __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::Uint32PairBin>::begin(__for_range_0).it_;
    __for_end.it_ = google::protobuf::RepeatedPtrField<proto::Uint32PairBin>::end(__for_range_0).it_;
    while ( google::protobuf::internal::RepeatedPtrIterator<proto::Uint32PairBin const>::operator!=(
              (const google::protobuf::internal::RepeatedPtrIterator<const proto::Uint32PairBin> *const)&__for_end_0,
              (const google::protobuf::internal::RepeatedPtrIterator<const proto::Uint32PairBin>::iterator *)&__for_end) )
    {
      deal_item_bin = google::protobuf::internal::RepeatedPtrIterator<proto::Uint32PairBin const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::Uint32PairBin> *const)&__for_end_0);
      __k = proto::Uint32PairBin::value(deal_item_bin);
      __args_0 = proto::Uint32PairBin::key(deal_item_bin);
      v12 = std::unordered_map<unsigned int,unsigned int>::emplace<unsigned int,unsigned int>(
              deal_info_map,
              &__args_0,
              &__k,
              &__args_0,
              v11);
      if ( !v12.second )
      {
        common::milog::MiLogStream::create(
          &v110,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "marketFromBin",
          2191);
        v13 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
                &v110,
                (const char (*)[34])"[Vintage] duplicate deal item_id:");
        __args_0 = proto::Uint32PairBin::key(deal_item_bin);
        v14 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &__args_0);
        v15 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v14, (const char (*)[13])", trader_id:");
        __k = proto::VintageTraderDealBin::trader_id(trader_bin);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &__k);
        common::milog::MiLogStream::~MiLogStream(&v110);
      }
      google::protobuf::internal::RepeatedPtrIterator<proto::Uint32PairBin const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::Uint32PairBin> *const)&__for_end_0);
    }
    google::protobuf::internal::RepeatedPtrIterator<proto::VintageTraderDealBin const>::operator++(&__for_begin);
  }
  __for_range_1 = proto::VintageScheduleBin::bargain_list(schedule_bina);
  __for_begin_1.it_ = google::protobuf::RepeatedPtrField<proto::VintageBargainBin>::begin(__for_range_1).it_;
  __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::VintageBargainBin>::end(__for_range_1).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::VintageBargainBin const>::operator!=(
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageBargainBin> *const)&__for_begin_1,
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageBargainBin>::iterator *)&__for_end_0) )
  {
    bargain_bin = google::protobuf::internal::RepeatedPtrIterator<proto::VintageBargainBin const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageBargainBin> *const)&__for_begin_1);
    __y = proto::VintageBargainBin::is_succ(bargain_bin);
    __args_0 = proto::VintageBargainBin::price(bargain_bin);
    __for_end.it_ = (void *const *)std::make_pair<unsigned int,bool>(&__args_0, &__y);
    __k = proto::VintageBargainBin::bargain_id(bargain_bin);
    v18 = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::emplace<unsigned int,std::pair<unsigned int,bool>>(
            &this->bargain_price_map_,
            &__k,
            (std::pair<unsigned int,bool> *)&__for_end,
            v16,
            v17);
    if ( !v18.second )
    {
      common::milog::MiLogStream::create(
        &v110,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "marketFromBin",
        2200);
      v19 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
              &v110,
              (const char (*)[32])"[Vintage] duplicate bargain_id:");
      __k = proto::VintageBargainBin::bargain_id(bargain_bin);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, &__k);
      common::milog::MiLogStream::~MiLogStream(&v110);
    }
    google::protobuf::internal::RepeatedPtrIterator<proto::VintageBargainBin const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::VintageBargainBin> *const)&__for_begin_1);
  }
  __for_range_2 = proto::VintageScheduleBin::store_list(schedule_bina);
  __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::VintageStoreBin>::begin(__for_range_2).it_;
  __for_begin_1.it_ = google::protobuf::RepeatedPtrField<proto::VintageStoreBin>::end(__for_range_2).it_;
  while ( 1 )
  {
    p_for_begin_1 = &__for_begin_1;
    if ( !google::protobuf::internal::RepeatedPtrIterator<proto::VintageStoreBin const>::operator!=(
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageStoreBin> *const)&__for_begin,
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageStoreBin>::iterator *)&__for_begin_1) )
      break;
    store_bin = google::protobuf::internal::RepeatedPtrIterator<proto::VintageStoreBin const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageStoreBin> *const)&__for_begin);
    VintageMarketStoreData::VintageMarketStoreData((VintageMarketStoreData *const)(v2 + 96));
    *(_DWORD *)(v2 + 192) = proto::VintageStoreBin::slot_count(store_bin);
    v21 = proto::VintageStoreBin::attr_list(store_bin);
    common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(v21, (std::vector<unsigned int> *)(v2 + 96));
    v22 = proto::VintageStoreBin::aim_attr_list(store_bin);
    common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(v22, (std::vector<unsigned int> *)(v2 + 120));
    v23 = proto::VintageStoreBin::chosen_skill_list(store_bin);
    common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(v23, (std::vector<unsigned int> *)(v2 + 200));
    __for_range_3 = proto::VintageStoreBin::attr_random_pool_list(store_bin);
    __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::VintageStoreAttrRandomPoolBin>::begin(__for_range_3).it_;
    __for_end.it_ = google::protobuf::RepeatedPtrField<proto::VintageStoreAttrRandomPoolBin>::end(__for_range_3).it_;
    while ( google::protobuf::internal::RepeatedPtrIterator<proto::VintageStoreAttrRandomPoolBin const>::operator!=(
              (const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageStoreAttrRandomPoolBin> *const)&__for_end_0,
              &__for_end) )
    {
      random_bin = google::protobuf::internal::RepeatedPtrIterator<proto::VintageStoreAttrRandomPoolBin const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageStoreAttrRandomPoolBin> *const)&__for_end_0);
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 32));
      v24 = proto::VintageStoreAttrRandomPoolBin::pool_list(random_bin);
      common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(v24, (std::vector<unsigned int> *)(v2 + 32));
      v25 = std::move<std::vector<unsigned int> &>((std::vector<unsigned int> *)(v2 + 32));
      __k = proto::VintageStoreAttrRandomPoolBin::template_id(random_bin);
      v27 = std::map<unsigned int,std::vector<unsigned int>>::emplace<unsigned int,std::vector<unsigned int>>(
              (std::map<unsigned int,std::vector<unsigned int>> *const)(v2 + 144),
              &__k,
              v25,
              (unsigned int *)(v2 + 144),
              v26);
      if ( !v27.second )
      {
        common::milog::MiLogStream::create(
          &v110,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "marketFromBin",
          2217);
        v28 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                &v110,
                (const char (*)[33])"[Vintage] duplicate template_id:");
        __k = proto::VintageStoreAttrRandomPoolBin::template_id(random_bin);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v28, &__k);
        common::milog::MiLogStream::~MiLogStream(&v110);
      }
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 32));
      google::protobuf::internal::RepeatedPtrIterator<proto::VintageStoreAttrRandomPoolBin const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::VintageStoreAttrRandomPoolBin> *const)&__for_end_0);
    }
    v29 = std::move<VintageMarketStoreData &>((VintageMarketStoreData *)(v2 + 96));
    __k = proto::VintageStoreBin::store_id(store_bin);
    v32 = std::map<unsigned int,VintageMarketStoreData>::emplace<unsigned int,VintageMarketStoreData>(
            &this->store_map_,
            &__k,
            v29,
            v30,
            v31);
    if ( !v32.second )
    {
      common::milog::MiLogStream::create(
        &v110,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "marketFromBin",
        2223);
      v33 = common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
              &v110,
              (const char (*)[30])"[Vintage] duplicate store_id:");
      __k = proto::VintageStoreBin::store_id(store_bin);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v33, &__k);
      common::milog::MiLogStream::~MiLogStream(&v110);
    }
    VintageMarketStoreData::~VintageMarketStoreData((VintageMarketStoreData *const)(v2 + 96));
    google::protobuf::internal::RepeatedPtrIterator<proto::VintageStoreBin const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::VintageStoreBin> *const)&__for_begin);
  }
  v34 = proto::VintageScheduleBin::store_round(schedule_bina);
  v35 = *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000);
  if ( v35 != 0 && v35 <= 3 )
  {
    LOBYTE(p_for_begin_1) = v35 != 0;
    __asan_report_store4(&this->store_round_, p_for_begin_1, v34);
  }
  this->store_round_ = v34;
  coin_b_num = proto::VintageScheduleBin::prev_coin_b_num(schedule_bina);
  v37 = *(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000);
  LOBYTE(p_for_begin_1) = v37 != 0;
  v38 = (v37 != 0) & (unsigned __int8)((char)((((_BYTE)this - 68) & 7) + 3) >= v37);
  if ( (_BYTE)v38 )
    __asan_report_store4(&this->prev_coin_b_num_, p_for_begin_1, v38);
  this->prev_coin_b_num_ = coin_b_num;
  coin_c_num = proto::VintageScheduleBin::prev_coin_c_num(schedule_bina);
  v40 = *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000);
  if ( v40 != 0 && v40 <= 3 )
  {
    LOBYTE(p_for_begin_1) = v40 != 0;
    __asan_report_store4(&this->prev_coin_c_num_, p_for_begin_1, coin_c_num);
  }
  this->prev_coin_c_num_ = coin_c_num;
  is_round_tips_view = proto::VintageScheduleBin::is_round_tips_view(schedule_bina);
  v42 = *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000);
  LOBYTE(p_for_begin_1) = v42 != 0;
  v43 = (v42 != 0) & (unsigned __int8)((((unsigned __int8)this - 60) & 7) >= v42);
  if ( (_BYTE)v43 )
    __asan_report_store1(&this->is_round_tips_view_, p_for_begin_1, v43);
  this->is_round_tips_view_ = is_round_tips_view;
  LOBYTE(v44) = proto::VintageScheduleBin::is_store_content_finish(schedule_bina);
  v45 = v44;
  v46 = *(_BYTE *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000);
  if ( v46 < 0 )
  {
    LOBYTE(p_for_begin_1) = v46 != 0;
    __asan_report_store1(&this->is_store_content_finish_, p_for_begin_1, v45);
  }
  this->is_store_content_finish_ = v45;
  is_store_content_interrupt = proto::VintageScheduleBin::is_store_content_interrupt(schedule_bina);
  v48 = *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000);
  LOBYTE(p_for_begin_1) = v48 != 0;
  v49 = (v48 != 0) & (unsigned __int8)((((unsigned __int8)this + 105) & 7) >= v48);
  if ( (_BYTE)v49 )
    __asan_report_store1(&this->is_store_content_interrupt_, p_for_begin_1, v49);
  this->is_store_content_interrupt_ = is_store_content_interrupt;
  __for_range_4 = proto::VintageScheduleBin::env_event_list(schedule_bina);
  __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::Uint32PairBin>::begin(__for_range_4).it_;
  __for_end.it_ = google::protobuf::RepeatedPtrField<proto::Uint32PairBin>::end(__for_range_4).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::Uint32PairBin const>::operator!=(
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::Uint32PairBin> *const)&__for_end_0,
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::Uint32PairBin>::iterator *)&__for_end) )
  {
    pair_bin = google::protobuf::internal::RepeatedPtrIterator<proto::Uint32PairBin const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::Uint32PairBin> *const)&__for_end_0);
    __k = proto::Uint32PairBin::value(pair_bin);
    __args_0 = proto::Uint32PairBin::key(pair_bin);
    v52 = std::unordered_map<unsigned int,unsigned int>::emplace<unsigned int,unsigned int>(
            &this->env_to_round_map_,
            &__args_0,
            &__k,
            v50,
            v51);
    if ( !v52.second )
    {
      common::milog::MiLogStream::create(
        &v110,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "marketFromBin",
        2237);
      v53 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
              &v110,
              (const char (*)[28])"[Vintage] duplicate env_id:");
      __k = proto::Uint32PairBin::key(pair_bin);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v53, &__k);
      common::milog::MiLogStream::~MiLogStream(&v110);
    }
    google::protobuf::internal::RepeatedPtrIterator<proto::Uint32PairBin const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::Uint32PairBin> *const)&__for_end_0);
  }
  __for_range_5 = proto::VintageScheduleBin::npc_event_list(schedule_bina);
  __for_begin_1.it_ = google::protobuf::RepeatedPtrField<proto::VintageNpcEventBin>::begin(__for_range_5).it_;
  __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::VintageNpcEventBin>::end(__for_range_5).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::VintageNpcEventBin const>::operator!=(
            &__for_begin_1,
            &__for_end_0) )
  {
    npc_bin = google::protobuf::internal::RepeatedPtrIterator<proto::VintageNpcEventBin const>::operator*(&__for_begin_1);
    __y = proto::VintageNpcEventBin::is_finish(npc_bin);
    __args_0 = proto::VintageNpcEventBin::max_effective_round(npc_bin);
    __for_end.it_ = (void *const *)std::make_pair<unsigned int,bool>(&__args_0, &__y);
    __k = proto::VintageNpcEventBin::event_id(npc_bin);
    v56 = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::emplace<unsigned int,std::pair<unsigned int,bool>>(
            &this->npc_to_round_finish_map_,
            &__k,
            (std::pair<unsigned int,bool> *)&__for_end,
            v54,
            v55);
    if ( !v56.second )
    {
      common::milog::MiLogStream::create(
        &v110,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "marketFromBin",
        2245);
      v57 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
              &v110,
              (const char (*)[34])"[Vintage] duplicate npc_event_id:");
      __k = proto::VintageNpcEventBin::event_id(npc_bin);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v57, &__k);
      common::milog::MiLogStream::~MiLogStream(&v110);
    }
    google::protobuf::internal::RepeatedPtrIterator<proto::VintageNpcEventBin const>::operator++(&__for_begin_1);
  }
  v58 = proto::VintageScheduleBin::skill_list(schedule_bina);
  common::tools::MiscUtils::setFromRepeated<std::unordered_set<unsigned int>,unsigned int>(
    &this->unlock_skill_set_,
    v58);
  v59 = proto::VintageScheduleBin::viewed_skill_list(schedule_bina);
  common::tools::MiscUtils::setFromRepeated<std::unordered_set<unsigned int>,unsigned int>(
    &this->viewed_skill_set_,
    v59);
  LOBYTE(v60) = proto::VintageScheduleBin::is_strategy_module_open(schedule_bina);
  v61 = v60;
  v62 = *(_BYTE *)(((unsigned __int64)&this->is_strategy_module_open_ >> 3) + 0x7FFF8000);
  if ( v62 < 0 )
  {
    LOBYTE(v59) = v62 != 0;
    __asan_report_store1(&this->is_strategy_module_open_, v59, v61);
  }
  this->is_strategy_module_open_ = v61;
  is_help_module_open = proto::VintageScheduleBin::is_help_module_open(schedule_bina);
  v64 = *(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000);
  LOBYTE(v59) = v64 != 0;
  v65 = (v64 != 0) & (unsigned __int8)((((unsigned __int8)this - 87) & 7) >= v64);
  if ( (_BYTE)v65 )
    __asan_report_store1(&this->is_help_module_open_, v59, v65);
  this->is_help_module_open_ = is_help_module_open;
  can_use_help_round = proto::VintageScheduleBin::next_can_use_help_round(schedule_bina);
  v67 = *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000);
  LOBYTE(v59) = v67 != 0;
  v68 = (v67 != 0) & (unsigned __int8)((char)((((_BYTE)this - 84) & 7) + 3) >= v67);
  if ( (_BYTE)v68 )
    __asan_report_store4(&this->next_can_use_help_round_, v59, v68);
  this->next_can_use_help_round_ = can_use_help_round;
  v69 = proto::VintageScheduleBin::help_skill_id(schedule_bina);
  v70 = *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000);
  LOBYTE(v59) = v70 != 0;
  v71 = (v70 != 0) & (unsigned __int8)((char)((((_BYTE)this - 76) & 7) + 3) >= v70);
  if ( (_BYTE)v71 )
    __asan_report_store4(&this->help_skill_id_, v59, v71);
  this->help_skill_id_ = v69;
  __for_range_6 = proto::VintageScheduleBin::dividend_res_map(schedule_bina);
  google::protobuf::Map<unsigned int,proto::Uint32PairBin>::begin(&__for_begin_0, __for_range_6);
  google::protobuf::Map<unsigned int,proto::Uint32PairBin>::end(
    (google::protobuf::Map<unsigned int,proto::Uint32PairBin>::const_iterator *)(v2 + 32),
    __for_range_6);
  while ( 1 )
  {
    v72 = (char *)(v2 + 32);
    if ( !google::protobuf::operator!=(
            &__for_begin_0,
            (const google::protobuf::Map<unsigned int,proto::Uint32PairBin>::const_iterator *)(v2 + 32)) )
      break;
    p_id = (const unsigned int *)google::protobuf::Map<unsigned int,proto::Uint32PairBin>::const_iterator::operator*(&__for_begin_0);
    __k = proto::Uint32PairBin::value((const proto::Uint32PairBin *const)(p_id + 2));
    __args_0 = proto::Uint32PairBin::key((const proto::Uint32PairBin *const)(p_id + 2));
    __for_end.it_ = (void *const *)std::make_pair<unsigned int,unsigned int>(&__args_0, &__k);
    v75 = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int const&,std::pair<unsigned int,unsigned int>>(
            &this->dividend_info_map_,
            p_id,
            (std::pair<unsigned int,unsigned int> *)&__for_end,
            v73,
            v74);
    if ( !v75.second )
    {
      common::milog::MiLogStream::create(
        &v110,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "marketFromBin",
        2259);
      v76 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
              &v110,
              (const char (*)[33])"[Vintage] duplicate dividend_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v76, p_id);
      common::milog::MiLogStream::~MiLogStream(&v110);
    }
    google::protobuf::Map<unsigned int,proto::Uint32PairBin>::const_iterator::operator++(&__for_begin_0);
  }
  v77 = proto::VintageScheduleBin::dividend_id(schedule_bina);
  v78 = *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000);
  if ( v78 != 0 && v78 <= 3 )
  {
    LOBYTE(v72) = v78 != 0;
    __asan_report_store4(&this->dividend_id_, v72, v77);
  }
  this->dividend_id_ = v77;
  v79 = proto::VintageScheduleBin::dividend_reward_count(schedule_bina);
  v80 = *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3) + 0x7FFF8000);
  LOBYTE(v72) = v80 != 0;
  v81 = (v80 != 0) & (unsigned __int8)((char)((((_BYTE)this - 20) & 7) + 3) >= v80);
  if ( (_BYTE)v81 )
    __asan_report_store4(&this->dividend_reward_count_, v72, v81);
  this->dividend_reward_count_ = v79;
  v82 = proto::VintageScheduleBin::store_round_income_list(schedule_bina);
  common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(v82, &this->store_round_income_vec_);
  result = 0;
  if ( v111 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2270: range 0000000014994146-0000000014995436
int32_t __cdecl VintageActivity::marketDeliverItem(
        VintageActivity *const this,
        const proto::VintageMarketDeliverItemReq *req,
        proto::VintageMarketDeliverItemRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r14d
  std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>> *p_trader_item_info_map; // r14
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v9; // rbx
  std::map<unsigned int,std::pair<unsigned int,unsigned int>>::size_type v10; // r14
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> >,false,false>::pointer v11; // rax
  common::milog::MiLogStream *v12; // r14
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // r14
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> >,false,false>::pointer v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rbx
  std::map<unsigned int,std::pair<unsigned int,unsigned int>> *p_second; // r14
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> >,false,false>::pointer v19; // rax
  common::milog::MiLogStream *v20; // r14
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // r14
  std::pair<std::__detail::_Node_iterator<unsigned int,true,false>,bool> v23; // rax
  common::milog::MiLogStream *v24; // r14
  std::unordered_map<unsigned int,unsigned int> *v25; // r14
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false,false>::pointer v26; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v27; // rdx
  unsigned int *v28; // rax
  unsigned int v29; // r14d
  unsigned int v30; // eax
  SelectType v31; // r14d
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::pointer v32; // rdx
  std::pair<unsigned int,unsigned int> *v33; // rax
  char v34; // al
  common::milog::MiLogStream *v35; // r14
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // r14
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::pointer v40; // rax
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // r14
  PlayerItemComp *ItemComp; // rax
  common::milog::MiLogStream *v44; // r14
  common::milog::MiLogStream *v45; // rax
  common::milog::MiLogStream *v46; // r14
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::pointer v47; // rdx
  unsigned int *v48; // rax
  unsigned int second; // r14d
  unsigned int v50; // eax
  unsigned int v51; // eax
  PlayerItemComp *v52; // rax
  common::milog::MiLogStream *v53; // rax
  PlayerItemComp *v54; // rax
  PlayerItemComp *v55; // r14
  PlayerItemComp *v56; // rax
  unsigned __int64 v57; // rax
  int v58; // esi
  int32_t result; // eax
  int val; // [rsp+24h] [rbp-25Ch] BYREF
  std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>::key_type __x; // [rsp+28h] [rbp-258h] BYREF
  uint32_t add_coin_num; // [rsp+2Ch] [rbp-254h]
  google::protobuf::RepeatedPtrField<proto::ItemParam>::const_iterator __for_begin; // [rsp+30h] [rbp-250h] BYREF
  google::protobuf::RepeatedPtrField<proto::ItemParam>::const_iterator __for_end; // [rsp+38h] [rbp-248h] BYREF
  const google::protobuf::RepeatedPtrField<proto::ItemParam> *__for_range; // [rsp+40h] [rbp-240h]
  std::unordered_map<unsigned int,unsigned int> *deal_item_map; // [rsp+48h] [rbp-238h]
  std::vector<ItemParam> *__for_range_0; // [rsp+50h] [rbp-230h]
  const ItemParam *item_param_0; // [rsp+58h] [rbp-228h]
  const proto::ItemParam *item_param; // [rsp+60h] [rbp-220h]
  std::vector<ItemParam>::iterator __for_end_0; // [rsp+68h] [rbp-218h] BYREF
  common::milog::MiLogStream v71; // [rsp+70h] [rbp-210h] BYREF
  char v72[496]; // [rsp+90h] [rbp-1F0h] BYREF

  v3 = (unsigned __int64)v72;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_3(448LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "10 32 4 8 ret:2271 48 4 20 item_deal_count:2306 64 8 23 trader_config_iter:2276 96 8 26 deal_ite"
                        "m_config_iter:2295 128 8 16 trader_iter:2307 160 8 14 item_iter:2310 192 16 19 add_item_param:23"
                        "40 224 24 23 sub_item_param_vec:2289 288 24 11 reason:2333 352 56 13 item_set:2291";
  *(_QWORD *)(v3 + 16) = VintageActivity::marketDeliverItem;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556924;
  v5[536862722] = -218959360;
  v5[536862723] = -218959360;
  v5[536862724] = -218959360;
  v5[536862725] = -218959360;
  v5[536862726] = -219021312;
  v5[536862727] = -234881024;
  v5[536862728] = -218959118;
  v5[536862729] = -234881024;
  v5[536862730] = -218959118;
  v5[536862732] = -218103808;
  v5[536862733] = -202116109;
  *(_DWORD *)(v3 + 32) = VintageActivity::checkCanPlayMarketContent(this);
  if ( *(_DWORD *)(v3 + 32) )
  {
    v6 = *(_DWORD *)(v3 + 32);
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v3 + 192));
    p_trader_item_info_map = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 192))->design_config.txt_config_mgr.activity_vintage_market_config_mgr.trader_item_info_map;
    __x = proto::VintageMarketDeliverItemReq::trader_id(req);
    *(std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>::const_iterator *)(v3 + 64) = std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>::find(p_trader_item_info_map, &__x);
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 192));
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v3 + 192));
    v8 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 192));
    __for_end_0._M_current = (ItemParam *)std::unordered_map<unsigned int,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>::end(&v8->design_config.txt_config_mgr.activity_vintage_market_config_mgr.trader_item_info_map)._M_cur;
    LOBYTE(p_trader_item_info_map) = std::__detail::operator==<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>,false>(
                                       (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> >,false> *)(v3 + 64),
                                       (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> >,false> *)&__for_end_0);
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 192));
    if ( (_BYTE)p_trader_item_info_map )
    {
      common::milog::MiLogStream::create(
        &v71,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "marketDeliverItem",
        2279);
      v9 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
             &v71,
             (const char (*)[29])"[Vintage] invalid trader_id:");
      __x = proto::VintageMarketDeliverItemReq::trader_id(req);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &__x);
      common::milog::MiLogStream::~MiLogStream(&v71);
      v6 = -1;
    }
    else
    {
      v10 = proto::VintageMarketDeliverItemReq::deliver_item_list_size(req);
      v11 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> >,false,false> *const)(v3 + 64));
      if ( v10 <= std::map<unsigned int,std::pair<unsigned int,unsigned int>>::size(&v11->second) )
      {
        std::vector<ItemParam>::vector((std::vector<ItemParam> *const)(v3 + 224));
        add_coin_num = 0;
        std::unordered_set<unsigned int>::unordered_set((std::unordered_set<unsigned int> *const)(v3 + 352));
        __for_range = proto::VintageMarketDeliverItemReq::deliver_item_list(req);
        __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::ItemParam>::begin(__for_range).it_;
        __for_end.it_ = google::protobuf::RepeatedPtrField<proto::ItemParam>::end(__for_range).it_;
        while ( google::protobuf::internal::RepeatedPtrIterator<proto::ItemParam const>::operator!=(
                  &__for_begin,
                  &__for_end) )
        {
          item_param = google::protobuf::internal::RepeatedPtrIterator<proto::ItemParam const>::operator*(&__for_begin);
          p_second = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> >,false,false> *const)(v3 + 64))->second;
          __x = proto::ItemParam::item_id(item_param);
          *(std::map<unsigned int,std::pair<unsigned int,unsigned int>>::const_iterator *)(v3 + 96) = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::find(p_second, &__x);
          v19 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> >,false,false> *const)(v3 + 64));
          __for_end_0._M_current = (ItemParam *)std::map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&v19->second)._M_node;
          if ( std::operator==(
                 (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::_Self *)(v3 + 96),
                 (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::_Self *)&__for_end_0) )
          {
            common::milog::MiLogStream::create(
              &v71,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/vintage_activity.cpp",
              "marketDeliverItem",
              2298);
            v20 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                    &v71,
                    (const char (*)[41])"[Vintage] invalid deliver item, item_id:");
            val = proto::ItemParam::item_id(item_param);
            v21 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    (const unsigned int *)&val);
            v22 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v21,
                    (const char (*)[13])", trader_id:");
            __x = proto::VintageMarketDeliverItemReq::trader_id(req);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &__x);
            common::milog::MiLogStream::~MiLogStream(&v71);
            v6 = -1;
            goto LABEL_60;
          }
          __x = proto::ItemParam::item_id(item_param);
          v23 = std::unordered_set<unsigned int>::insert((std::unordered_set<unsigned int> *const)(v3 + 352), &__x);
          if ( !v23.second )
          {
            common::milog::MiLogStream::create(
              &v71,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/vintage_activity.cpp",
              "marketDeliverItem",
              2303);
            v24 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    &v71,
                    (const char (*)[43])"[Vintage] duplicate deliver item, item_id:");
            __x = proto::ItemParam::item_id(item_param);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v24, &__x);
            common::milog::MiLogStream::~MiLogStream(&v71);
            v6 = -1;
            goto LABEL_60;
          }
          *(_DWORD *)(v3 + 48) = 0;
          __x = proto::VintageMarketDeliverItemReq::trader_id(req);
          *(std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::iterator *)(v3 + 128) = std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::find(&this->trader_deal_item_map_, &__x);
          __for_end_0._M_current = (ItemParam *)std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::end(&this->trader_deal_item_map_)._M_cur;
          if ( std::__detail::operator!=<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int>>,false>(
                 (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false> *)(v3 + 128),
                 (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false> *)&__for_end_0) )
          {
            v25 = &std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false,false> *const)(v3 + 128))->second;
            __x = proto::ItemParam::item_id(item_param);
            *(std::unordered_map<unsigned int,unsigned int>::iterator *)(v3 + 160) = std::unordered_map<unsigned int,unsigned int>::find(
                                                                                       v25,
                                                                                       &__x);
            v26 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::unordered_map<unsigned int,unsigned int> >,false,false> *const)(v3 + 128));
            __for_end_0._M_current = (ItemParam *)std::unordered_map<unsigned int,unsigned int>::end(&v26->second)._M_cur;
            if ( std::__detail::operator!=<std::pair<unsigned int const,unsigned int>,false>(
                   (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v3 + 160),
                   (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)&__for_end_0) )
            {
              v27 = std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v3 + 160));
              v28 = &v27->second;
              if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v28 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v28);
              }
              *(_DWORD *)(v3 + 48) = v27->second;
            }
          }
          if ( !proto::ItemParam::count(item_param) )
            goto LABEL_25;
          v29 = *(_DWORD *)(v3 + 48);
          v30 = proto::ItemParam::count(item_param);
          v31 = SAFE_ADD<unsigned int,unsigned int>(v30, v29);
          v32 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > > *const)(v3 + 96));
          v33 = &v32->second;
          if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v33 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v33);
          }
          if ( v31 <= v32->second.first )
            v34 = 0;
          else
LABEL_25:
            v34 = 1;
          if ( v34 )
          {
            common::milog::MiLogStream::create(
              &v71,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/vintage_activity.cpp",
              "marketDeliverItem",
              2318);
            v35 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                    &v71,
                    (const char (*)[33])"[Vintage] invalid deliver count:");
            val = proto::ItemParam::count(item_param);
            v36 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v35,
                    (const unsigned int *)&val);
            v37 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(
                    v36,
                    (const char (*)[19])", item_deal_count:");
            v38 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v37,
                    (const unsigned int *)(v3 + 48));
            v39 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                    v38,
                    (const char (*)[15])", limit_count:");
            v40 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > > *const)(v3 + 96));
            v41 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v39,
                    (const unsigned int *)&v40->second);
            v42 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v41, (const char (*)[11])", item_id:");
            __x = proto::ItemParam::item_id(item_param);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v42, &__x);
            common::milog::MiLogStream::~MiLogStream(&v71);
            v6 = -1;
            goto LABEL_60;
          }
          *(_QWORD *)(v3 + 192) = 0LL;
          *(_QWORD *)(v3 + 200) = 0LL;
          *(_DWORD *)(v3 + 192) = proto::ItemParam::item_id(item_param);
          *(_DWORD *)(v3 + 196) = proto::ItemParam::count(item_param);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          ItemComp = Player::getItemComp(this->player_);
          *(_DWORD *)(v3 + 32) = PlayerItemComp::checkSubItem(ItemComp, (const ItemParam *)(v3 + 192));
          if ( *(_DWORD *)(v3 + 32) )
          {
            common::milog::MiLogStream::create(
              &v71,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/vintage_activity.cpp",
              "marketDeliverItem",
              2326);
            v44 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                    &v71,
                    (const char (*)[40])"[Vintage] checkSubItem failed, item_id:");
            val = proto::ItemParam::item_id(item_param);
            v45 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v44,
                    (const unsigned int *)&val);
            v46 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v45, (const char (*)[9])", count:");
            __x = proto::ItemParam::count(item_param);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v46, &__x);
            common::milog::MiLogStream::~MiLogStream(&v71);
            v6 = *(_DWORD *)(v3 + 32);
            goto LABEL_60;
          }
          std::vector<ItemParam>::push_back(
            (std::vector<ItemParam> *const)(v3 + 224),
            (const std::vector<ItemParam>::value_type *)(v3 + 192));
          v47 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > > *const)(v3 + 96));
          v48 = &v47->second.second;
          if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v48 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v48);
          }
          second = v47->second.second;
          v50 = proto::ItemParam::count(item_param);
          v51 = SAFE_MULTIPLY<unsigned int,unsigned int>(v50, second);
          add_coin_num = SAFE_ADD<unsigned int,unsigned int>(add_coin_num, v51);
          google::protobuf::internal::RepeatedPtrIterator<proto::ItemParam const>::operator++(&__for_begin);
        }
        ActionReason::ActionReason(
          (ActionReason *const)(v3 + 288),
          ACTION_REASON_VINTAGE_MARKET_DEAL,
          ITEM_LIMIT_ACTIVITY_VINTAGE);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        v52 = Player::getItemComp(this->player_);
        *(_DWORD *)(v3 + 32) = PlayerItemComp::checkSubItemBatch(v52, (const std::vector<ItemParam> *)(v3 + 224));
        if ( *(_DWORD *)(v3 + 32) )
        {
          common::milog::MiLogStream::create(
            &v71,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/player/activity/vintage_activity.cpp",
            "marketDeliverItem",
            2337);
          v53 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                  &v71,
                  (const char (*)[41])"[Vintage] checkSubItemBatch failed, ret:");
          common::milog::MiLogStream::operator<<<int,(int *)0>(v53, (const int *)(v3 + 32));
          common::milog::MiLogStream::~MiLogStream(&v71);
          v6 = *(_DWORD *)(v3 + 32);
        }
        else
        {
          *(_QWORD *)(v3 + 192) = 0LL;
          *(_QWORD *)(v3 + 200) = 0LL;
          *(_DWORD *)(v3 + 192) = 148;
          *(_DWORD *)(v3 + 196) = add_coin_num;
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          v54 = Player::getItemComp(this->player_);
          *(_DWORD *)(v3 + 32) = PlayerItemComp::checkAddItem(
                                   v54,
                                   (const ItemParam *)(v3 + 192),
                                   (const ActionReason *)(v3 + 288));
          if ( *(_DWORD *)(v3 + 32) )
          {
            common::milog::MiLogStream::create(
              &v71,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/vintage_activity.cpp",
              "marketDeliverItem",
              2344);
            common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
              &v71,
              (const char (*)[30])"[Vintage] checkAddItem failed");
            common::milog::MiLogStream::~MiLogStream(&v71);
            v6 = *(_DWORD *)(v3 + 32);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->player_);
            v55 = Player::getItemComp(this->player_);
            SubItemReason::SubItemReason((SubItemReason *const)&__for_end_0, (const ActionReason *)(v3 + 288));
            *(_DWORD *)(v3 + 32) = PlayerItemComp::subItemBatch(
                                     v55,
                                     (const std::vector<ItemParam> *)(v3 + 224),
                                     (const SubItemReason *)&__for_end_0);
            if ( *(_DWORD *)(v3 + 32) )
            {
              common::milog::MiLogStream::create(
                &v71,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/vintage_activity.cpp",
                "marketDeliverItem",
                2351);
              common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
                &v71,
                (const char (*)[30])"[Vintage] subItemBatch failed");
              common::milog::MiLogStream::~MiLogStream(&v71);
              v6 = *(_DWORD *)(v3 + 32);
            }
            else
            {
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->player_);
              v56 = Player::getItemComp(this->player_);
              if ( PlayerItemComp::addItem(v56, (const ItemParam *)(v3 + 192), (const ActionReason *)(v3 + 288), 0LL) )
              {
                common::milog::MiLogStream::create(
                  &v71,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/player/activity/vintage_activity.cpp",
                  "marketDeliverItem",
                  2357);
                common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
                  &v71,
                  (const char (*)[25])"[Vintage] addItem failed");
                common::milog::MiLogStream::~MiLogStream(&v71);
              }
              __x = proto::VintageMarketDeliverItemReq::trader_id(req);
              deal_item_map = std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::operator[](
                                &this->trader_deal_item_map_,
                                &__x);
              __for_range_0 = (std::vector<ItemParam> *)(v3 + 224);
              *(std::vector<ItemParam>::iterator *)(v3 + 160) = std::vector<ItemParam>::begin((std::vector<ItemParam> *const)(v3 + 224));
              __for_end_0._M_current = std::vector<ItemParam>::end(__for_range_0)._M_current;
              while ( __gnu_cxx::operator!=<ItemParam *,std::vector<ItemParam>>(
                        (const __gnu_cxx::__normal_iterator<ItemParam*,std::vector<ItemParam> > *)(v3 + 160),
                        &__for_end_0) )
              {
                item_param_0 = __gnu_cxx::__normal_iterator<ItemParam *,std::vector<ItemParam>>::operator*((const __gnu_cxx::__normal_iterator<ItemParam*,std::vector<ItemParam> > *const)(v3 + 160));
                v57 = (unsigned __int64)std::unordered_map<unsigned int,unsigned int>::operator[](
                                          deal_item_map,
                                          &item_param_0->item_id);
                if ( *(_BYTE *)((v57 >> 3) + 0x7FFF8000) != 0
                  && (char)((v57 & 7) + 3) >= *(_BYTE *)((v57 >> 3) + 0x7FFF8000) )
                {
                  v57 = __asan_report_load4(v57);
                }
                v58 = *(_DWORD *)v57;
                if ( *(_BYTE *)(((unsigned __int64)&item_param_0->count >> 3) + 0x7FFF8000) != 0
                  && (char)((((_BYTE)item_param_0 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&item_param_0->count >> 3)
                                                                             + 0x7FFF8000) )
                {
                  v57 = __asan_report_load4(&item_param_0->count);
                }
                *(_DWORD *)v57 = v58 + item_param_0->count;
                __gnu_cxx::__normal_iterator<ItemParam *,std::vector<ItemParam>>::operator++((__gnu_cxx::__normal_iterator<ItemParam*,std::vector<ItemParam> > *const)(v3 + 160));
              }
              BaseActivity::updateAllConds((BaseActivity *const)this);
              BaseActivity::notifyClientData((BaseActivity *const)this, 0);
              BaseActivity::notifyActivityCoinInfo((BaseActivity *const)this);
              v6 = 0;
            }
          }
        }
LABEL_60:
        std::unordered_set<unsigned int>::~unordered_set((std::unordered_set<unsigned int> *const)(v3 + 352));
        std::vector<ItemParam>::~vector((std::vector<ItemParam> *const)(v3 + 224));
      }
      else
      {
        common::milog::MiLogStream::create(
          &v71,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "marketDeliverItem",
          2284);
        v12 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
                &v71,
                (const char (*)[54])"[Vintage] deliver item size too larger, deliver_size:");
        val = proto::VintageMarketDeliverItemReq::deliver_item_list_size(req);
        v13 = common::milog::MiLogStream::operator<<<int,(int *)0>(v12, &val);
        v14 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v13, (const char (*)[14])", total_size:");
        v15 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::map<unsigned int,std::pair<unsigned int,unsigned int>> >,false,false> *const)(v3 + 64));
        __for_end_0._M_current = (ItemParam *)std::map<unsigned int,std::pair<unsigned int,unsigned int>>::size(&v15->second);
        v16 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                v14,
                (const unsigned __int64 *)&__for_end_0);
        v17 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v16, (const char (*)[13])", trader_id:");
        __x = proto::VintageMarketDeliverItemReq::trader_id(req);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, &__x);
        common::milog::MiLogStream::~MiLogStream(&v71);
        v6 = -1;
      }
    }
  }
  result = v6;
  if ( v72 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8028) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8030) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2372: range 0000000014995438-0000000014995557
// local variable allocation has failed, the output may be wrong!
void __cdecl VintageActivity::setMarketContentByGm(VintageActivity *const this, bool is_open)
{
  __int64 v2; // rdx
  bool is_opena; // [rsp+4h] [rbp-Ch]

  is_opena = is_open;
  if ( !is_open )
  {
    if ( *(char *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000) < 0 )
      __asan_report_store1(&this->is_market_content_open_, is_open, &this->is_market_content_open_);
    this->is_market_content_open_ = 0;
    *(_QWORD *)&is_open = ((_BYTE)this - 15) & 7;
    v2 = (*(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)(is_open >= *(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000));
    if ( (_BYTE)v2 )
      __asan_report_store1(&this->is_market_content_finish_, is_open, v2);
    this->is_market_content_finish_ = 0;
    std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::clear(&this->trader_deal_item_map_);
    std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::clear(&this->bargain_price_map_);
  }
  if ( *(char *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_market_content_open_, is_open, &this->is_market_content_open_);
  this->is_market_content_open_ = is_opena;
  BaseActivity::notifyClientData((BaseActivity *const)this, 0);
};

// Line 2385: range 0000000014995558-000000001499561B
void __cdecl VintageActivity::clearMarketData(VintageActivity *const this)
{
  __int64 v1; // rsi
  __int64 v2; // rsi
  __int64 v3; // rdx

  if ( *(char *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_market_content_open_, v1, &this->is_market_content_open_);
  this->is_market_content_open_ = 0;
  v2 = ((_BYTE)this - 15) & 7;
  v3 = (*(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v2 >= *(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v3 )
    __asan_report_store1(&this->is_market_content_finish_, v2, v3);
  this->is_market_content_finish_ = 0;
  std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::clear(&this->trader_deal_item_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::clear(&this->bargain_price_map_);
  VintageActivity::clearMarketStoreData(this);
};

// Line 2395: range 000000001499561C-0000000014995A2C
void __cdecl VintageActivity::clearMarketStoreData(VintageActivity *const this)
{
  __int64 v1; // rsi
  __int64 v2; // rsi
  __int64 v3; // rdx
  __int64 v4; // rsi
  __int64 v5; // rdx
  __int64 v6; // rsi
  __int64 v7; // rdx
  __int64 v8; // rsi
  __int64 v9; // rdx
  __int64 v10; // rsi
  __int64 v11; // rdx
  __int64 v12; // rsi
  __int64 v13; // rdx
  __int64 v14; // rdx

  if ( *(char *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_store_content_finish_, v1, &this->is_store_content_finish_);
  this->is_store_content_finish_ = 0;
  v2 = ((_BYTE)this + 105) & 7;
  v3 = (*(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v2 >= *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v3 )
    __asan_report_store1(&this->is_store_content_interrupt_, v2, v3);
  this->is_store_content_interrupt_ = 0;
  std::map<unsigned int,VintageMarketStoreData>::clear(&this->store_map_);
  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->store_round_, v2, &this->store_round_);
  }
  this->store_round_ = 0;
  std::vector<unsigned int>::clear(&this->store_round_income_vec_);
  v4 = (((_BYTE)this - 68) & 7u) + 3;
  v5 = (*(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this - 68) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v5 )
    __asan_report_store4(&this->prev_coin_b_num_, v4, v5);
  this->prev_coin_b_num_ = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->prev_coin_c_num_, v4, &this->prev_coin_c_num_);
  }
  this->prev_coin_c_num_ = 0;
  v6 = ((_BYTE)this - 60) & 7;
  v7 = (*(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v6 >= *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v7 )
    __asan_report_store1(&this->is_round_tips_view_, v6, v7);
  this->is_round_tips_view_ = 0;
  std::unordered_map<unsigned int,unsigned int>::clear(&this->env_to_round_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::clear(&this->npc_to_round_finish_map_);
  std::unordered_set<unsigned int>::clear(&this->unlock_skill_set_);
  std::unordered_set<unsigned int>::clear(&this->viewed_skill_set_);
  if ( *(char *)(((unsigned __int64)&this->is_strategy_module_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_strategy_module_open_, v6, &this->is_strategy_module_open_);
  this->is_strategy_module_open_ = 0;
  v8 = ((_BYTE)this - 87) & 7;
  v9 = (*(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v8 >= *(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v9 )
    __asan_report_store1(&this->is_help_module_open_, v8, v9);
  this->is_help_module_open_ = 0;
  v10 = (((_BYTE)this - 84) & 7u) + 3;
  v11 = (*(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this - 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v11 )
    __asan_report_store4(&this->next_can_use_help_round_, v10, v11);
  this->next_can_use_help_round_ = 0;
  if ( *(char *)(((unsigned __int64)&this->is_in_store_settle_duration_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_in_store_settle_duration_, v10, &this->is_in_store_settle_duration_);
  this->is_in_store_settle_duration_ = 0;
  v12 = (((_BYTE)this - 76) & 7u) + 3;
  v13 = (*(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this - 76) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v13 )
    __asan_report_store4(&this->help_skill_id_, v12, v13);
  this->help_skill_id_ = 0;
  std::map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->dividend_info_map_);
  if ( *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->dividend_id_, v12, &this->dividend_id_);
  }
  this->dividend_id_ = 0;
  v14 = (*(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this - 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v14 )
    __asan_report_store4(&this->dividend_reward_count_, (((_BYTE)this - 20) & 7u) + 3, v14);
  this->dividend_reward_count_ = 0;
};

// Line 2421: range 0000000014995A2E-0000000014996238
void __cdecl VintageActivity::onFinishParentQuestEvent(
        VintageActivity *const this,
        const FinishParentQuestEvent *event)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  bool v7; // r14
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v8; // rax
  common::milog::MiLogStream *v9; // r14
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>::pointer v13; // rdx
  bool *p_second; // rax
  common::milog::MiLogStream *v15; // r14
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>::pointer v19; // rdx
  std::pair<unsigned int,bool> *v20; // rax
  PlayerItemComp *ItemComp; // rax
  PlayerItemComp *v22; // rax
  const char *v23; // rsi
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>::pointer v24; // rdx
  char v25; // cl
  common::milog::MiLogStream *v26; // r14
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // r14
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>::pointer v30; // rax
  std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> __y; // [rsp+18h] [rbp-118h] BYREF
  common::milog::MiLogStream v32; // [rsp+20h] [rbp-110h] BYREF
  char v33[240]; // [rsp+40h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v33;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 32 8 9 iter:2426 64 8 17 bargain_iter:2431 96 16 19 add_item_param:2444 128 24 11 reason:2443";
  *(_QWORD *)(v2 + 16) = VintageActivity::onFinishParentQuestEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -218959360;
  v4[536862723] = -219021312;
  v4[536862724] = -218103808;
  v4[536862725] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&event->is_random >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)event + 28) & 7) >= *(_BYTE *)(((unsigned __int64)&event->is_random >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&event->is_random);
  }
  if ( !event->is_random )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 96));
    v5 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96));
    *(std::unordered_map<unsigned int,unsigned int>::const_iterator *)(v2 + 32) = std::unordered_map<unsigned int,unsigned int>::find(
                                                                                    &v5->design_config.txt_config_mgr.activity_vintage_market_config_mgr.parent_quest_to_bargain_map,
                                                                                    &event->parent_quest_id);
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 96));
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 96));
    v6 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96));
    __y._M_cur = std::unordered_map<unsigned int,unsigned int>::end(&v6->design_config.txt_config_mgr.activity_vintage_market_config_mgr.parent_quest_to_bargain_map)._M_cur;
    v7 = std::__detail::operator==<std::pair<unsigned int const,unsigned int>,false>(
           (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v2 + 32),
           &__y);
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 96));
    if ( !v7 )
    {
      v8 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 32));
      *(std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::find(
                                                                                                &this->bargain_price_map_,
                                                                                                &v8->second);
      __y._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false>::__node_type *)std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::end(&this->bargain_price_map_)._M_cur;
      if ( std::__detail::operator==<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false>(
             (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)(v2 + 64),
             (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)&__y) )
      {
        common::milog::MiLogStream::create(
          &v32,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "onFinishParentQuestEvent",
          2434);
        v9 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
               &v32,
               (const char (*)[42])"[Vintage] bargain not finish, bargain_id:");
        v10 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 32));
        v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &v10->second);
        v12 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(
                v11,
                (const char (*)[19])", parent_quest_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &event->parent_quest_id);
        common::milog::MiLogStream::~MiLogStream(&v32);
      }
      else
      {
        v13 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 64));
        p_second = &v13->second.second;
        if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
          && ((unsigned __int8)p_second & 7) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
        {
          __asan_report_load1(p_second);
        }
        if ( v13->second.second )
        {
          common::milog::MiLogStream::create(
            &v32,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "onFinishParentQuestEvent",
            2439);
          v15 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                  &v32,
                  (const char (*)[47])"[Vintage] bargain finish add coin, bargain_id:");
          v16 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 32));
          v17 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &v16->second);
          v18 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(
                  v17,
                  (const char (*)[19])", parent_quest_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &event->parent_quest_id);
          common::milog::MiLogStream::~MiLogStream(&v32);
        }
        else
        {
          ActionReason::ActionReason(
            (ActionReason *const)(v2 + 128),
            ACTION_REASON_VINTAGE_MARKET_BARGAIN,
            ITEM_LIMIT_ACTIVITY_VINTAGE);
          *(_QWORD *)(v2 + 96) = 0LL;
          *(_QWORD *)(v2 + 104) = 0LL;
          *(_DWORD *)(v2 + 96) = 148;
          v19 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 64));
          v20 = &v19->second;
          if ( *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v20 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v20);
          }
          *(_DWORD *)(v2 + 100) = v19->second.first;
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          ItemComp = Player::getItemComp(this->player_);
          if ( PlayerItemComp::checkAddItem(ItemComp, (const ItemParam *)(v2 + 96), (const ActionReason *)(v2 + 128)) )
          {
            common::milog::MiLogStream::create(
              &v32,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/vintage_activity.cpp",
              "onFinishParentQuestEvent",
              2447);
            common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
              &v32,
              (const char (*)[30])"[Vintage] checkAddItem failed");
            common::milog::MiLogStream::~MiLogStream(&v32);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->player_);
            v22 = Player::getItemComp(this->player_);
            v23 = (const char *)(v2 + 96);
            if ( PlayerItemComp::addItem(v22, (const ItemParam *)(v2 + 96), (const ActionReason *)(v2 + 128), 0LL) )
            {
              common::milog::MiLogStream::create(
                &v32,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/vintage_activity.cpp",
                "onFinishParentQuestEvent",
                2452);
              v23 = "[Vintage] addItem failed";
              common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
                &v32,
                (const char (*)[25])"[Vintage] addItem failed");
              common::milog::MiLogStream::~MiLogStream(&v32);
            }
            v24 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 64));
            v25 = *(_BYTE *)(((unsigned __int64)&v24->second.second >> 3) + 0x7FFF8000);
            if ( v25 != 0 && (((unsigned __int8)v24 + 8) & 7) >= v25 )
            {
              LOBYTE(v23) = v25 != 0;
              __asan_report_store1(&v24->second.second, v23, v24);
            }
            v24->second.second = 1;
            BaseActivity::updateAllConds((BaseActivity *const)this);
            BaseActivity::notifyClientData((BaseActivity *const)this, 0);
            BaseActivity::notifyActivityCoinInfo((BaseActivity *const)this);
            common::milog::MiLogStream::create(
              &v32,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/vintage_activity.cpp",
              "onFinishParentQuestEvent",
              2458);
            v26 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                    &v32,
                    (const char (*)[45])"[Vintage] bargain task finished, bargain_id:");
            v27 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 32));
            v28 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v26, &v27->second);
            v29 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    v28,
                    (const char (*)[16])", add_coin_num:");
            v30 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 64));
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v29,
              (const unsigned int *)&v30->second);
            common::milog::MiLogStream::~MiLogStream(&v32);
          }
        }
      }
    }
  }
  if ( v33 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 2462: range 000000001499623A-00000000149965E4
void __cdecl VintageActivity::onBargainFinishEvent(VintageActivity *const this, const BargainFinishEvent *event)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  ActivityVintageMarketExcelConfigMgr *p_activity_vintage_market_config_mgr; // rcx
  PlayerItemComp *ItemComp; // rcx
  std::pair<unsigned int,bool> *v7; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>,bool> v8; // rax
  common::milog::MiLogStream *v9; // rax
  bool __y; // [rsp+1Fh] [rbp-B1h] BYREF
  const data::VintageMarketBargainExcelConfig *vintage_bargain_config_ptr; // [rsp+20h] [rbp-B0h]
  std::pair<unsigned int,bool> v12; // [rsp+28h] [rbp-A8h] BYREF
  std::shared_ptr<Config> v13; // [rsp+30h] [rbp-A0h] BYREF
  common::milog::MiLogStream v14; // [rsp+40h] [rbp-90h] BYREF
  char v15[112]; // [rsp+60h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 4 10 count:2468";
  *(_QWORD *)(v2 + 16) = VintageActivity::onBargainFinishEvent;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202116348;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v13);
  p_activity_vintage_market_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v13)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&event->bargain_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&event->bargain_id >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&event->bargain_id);
  }
  vintage_bargain_config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketBargainExcelConfig(
                                 p_activity_vintage_market_config_mgr,
                                 event->bargain_id);
  std::shared_ptr<Config>::~shared_ptr(&v13);
  if ( vintage_bargain_config_ptr )
  {
    *(_DWORD *)(v2 + 32) = 0;
    if ( *(_BYTE *)(((unsigned __int64)&event->is_succ >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)event + 28) & 7) >= *(_BYTE *)(((unsigned __int64)&event->is_succ >> 3) + 0x7FFF8000) )
    {
      __asan_report_load1(&event->is_succ);
    }
    if ( event->is_succ )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      ItemComp = Player::getItemComp(this->player_);
      if ( *(_BYTE *)(((unsigned __int64)&vintage_bargain_config_ptr->quest_item_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&vintage_bargain_config_ptr->quest_item_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&vintage_bargain_config_ptr->quest_item_id);
      }
      *(_DWORD *)(v2 + 32) = PlayerItemComp::getPackMaterialCount(ItemComp, vintage_bargain_config_ptr->quest_item_id);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&vintage_bargain_config_ptr->fail_coin_num >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)vintage_bargain_config_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&vintage_bargain_config_ptr->fail_coin_num >> 3)
                                                                                  + 0x7FFF8000) )
      {
        __asan_report_load4(&vintage_bargain_config_ptr->fail_coin_num);
      }
      *(_DWORD *)(v2 + 32) = vintage_bargain_config_ptr->fail_coin_num;
    }
    __y = 0;
    v12 = std::make_pair<unsigned int &,bool>((unsigned int *)(v2 + 32), &__y);
    v8 = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::emplace<unsigned int const&,std::pair<unsigned int,bool>>(
           &this->bargain_price_map_,
           &event->bargain_id,
           &v12,
           &event->bargain_id,
           v7);
    if ( !v8.second )
    {
      common::milog::MiLogStream::create(
        &v14,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "onBargainFinishEvent",
        2481);
      v9 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
             &v14,
             (const char (*)[48])"[Vintage] duplicate bargain finish, bargain_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &event->bargain_id);
      common::milog::MiLogStream::~MiLogStream(&v14);
    }
  }
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 2487: range 00000000149965E6-00000000149973FB
void __cdecl VintageActivity::onCompleteTalkEvent(VintageActivity *const this, const CompleteTalkEvent *event)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  bool v7; // r14
  PlayerBasicComp *BasicComp; // rax
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v9; // rdx
  std::pair<unsigned int,unsigned int> *p_second; // rax
  std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v11; // rdx
  unsigned int *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rax
  common::milog::MiLogStream *v17; // rax
  unsigned int store_round; // r14d
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>::pointer v19; // rdx
  std::pair<unsigned int,bool> *v20; // rax
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>::pointer v24; // rdx
  bool *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  PlayerItemComp *ItemComp; // rax
  std::vector<unsigned int>::const_iterator *p_for_end; // rsi
  __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >::reference v31; // rax
  _DWORD *v32; // rdx
  std::pair<std::__detail::_Node_iterator<unsigned int,true,false>,bool> v33; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>::pointer v34; // rdx
  char v35; // cl
  google::protobuf::uint32 v36; // eax
  google::protobuf::uint32 v37; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v39; // r14
  google::protobuf::uint32 v40; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v41; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v42; // rax
  Player *player; // r14
  common::milog::MiLogStream *v44; // rax
  common::milog::MiLogStream *v45; // rax
  common::milog::MiLogStream *v46; // rax
  std::string eventa; // [rsp+0h] [rbp-210h]
  const CompleteTalkEvent *eventb; // [rsp+0h] [rbp-210h]
  VintageActivity *thisa; // [rsp+8h] [rbp-208h]
  uint32_t prev_coin_a_num; // [rsp+10h] [rbp-200h]
  uint32_t prev_coin_c_num; // [rsp+14h] [rbp-1FCh]
  uint32_t cur_coin_a_num; // [rsp+18h] [rbp-1F8h]
  uint32_t cur_coin_c_num; // [rsp+1Ch] [rbp-1F4h]
  std::vector<unsigned int>::const_iterator __for_begin; // [rsp+20h] [rbp-1F0h] BYREF
  std::vector<unsigned int>::const_iterator __for_end; // [rsp+28h] [rbp-1E8h] BYREF
  const data::VintageMarketNpcEventExcelConfig *npc_event_config_ptr; // [rsp+30h] [rbp-1E0h]
  const std::vector<unsigned int> *__for_range; // [rsp+38h] [rbp-1D8h]
  std::shared_ptr<google::protobuf::Message> p_body_ptr; // [rsp+40h] [rbp-1D0h] BYREF
  std::shared_ptr<google::protobuf::Message> v59; // [rsp+50h] [rbp-1C0h] BYREF
  std::string v60; // [rsp+60h] [rbp-1B0h] BYREF
  char v61[400]; // [rsp+80h] [rbp-190h] BYREF

  eventa._M_string_length = (std::string::size_type)this;
  eventa._M_dataplus._M_p = (std::string::pointer)event;
  v2 = (unsigned __int64)v61;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "9 48 1 23 log_context_holder:2493 64 4 17 npc_event_id:2494 80 4 14 reward_id:2495 96 4 13 skill"
                        "_id:2526 112 8 9 iter:2488 144 8 19 npc_event_iter:2496 176 16 12 log_ptr:2542 208 24 11 reason:"
                        "2524 272 48 21 npc_event_notify:2520";
  *(_QWORD *)(v2 + 16) = VintageActivity::onCompleteTalkEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234753551;
  v4[536862722] = -234556924;
  v4[536862723] = 61956;
  v4[536862723] = -234881024;
  v4[536862724] = 62194;
  v4[536862724] = -234881024;
  v4[536862725] = 62194;
  v4[536862726] = 62194;
  v4[536862727] = -218959360;
  v4[536862728] = 62194;
  v4[536862730] = -202116109;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v59);
  v5 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v59);
  *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::const_iterator *)(v2 + 112) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::find(&v5->design_config.txt_config_mgr.activity_vintage_market_config_mgr.talk_id_to_event_map, &event->talk_id);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v59);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v59);
  v6 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v59);
  __for_end._M_current = (const unsigned int *)std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&v6->design_config.txt_config_mgr.activity_vintage_market_config_mgr.talk_id_to_event_map)._M_cur;
  v7 = std::__detail::operator==<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 112),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)&__for_end);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v59);
  if ( !v7 )
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    BasicComp = Player::getBasicComp(this->player_);
    PlayerBasicComp::getNextTransNo[abi:cxx11](&v60, BasicComp);
    StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v2 + 48), 0xE6Fu, eventa);
    std::string::~string(&v60);
    v9 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 112));
    p_second = &v9->second;
    if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(p_second);
    }
    *(_DWORD *)(v2 + 64) = v9->second.first;
    v11 = std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 112));
    v12 = &v11->second.second;
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v12 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v12);
    }
    *(_DWORD *)(v2 + 80) = v11->second.second;
    *(std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::iterator *)(v2 + 144) = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::find(
                                                                                               &thisa->npc_to_round_finish_map_,
                                                                                               (const std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::key_type *)(v2 + 64));
    __for_end._M_current = (const unsigned int *)std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::end(&thisa->npc_to_round_finish_map_)._M_cur;
    if ( std::__detail::operator==<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false>(
           (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)(v2 + 144),
           (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)&__for_end) )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&v60,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "onCompleteTalkEvent",
        2499);
      v13 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
              (common::milog::MiLogStream *const)&v60,
              (const char (*)[52])"[Vintage] talk complete without npc event, talk_id:");
      v14 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &eventb->talk_id);
      v15 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v14, (const char (*)[16])", npc_event_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, (const unsigned int *)(v2 + 64));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v60);
    }
    else
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v59);
      v16 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v59);
      npc_event_config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketNpcEventExcelConfig(
                               &v16->design_config.txt_config_mgr.activity_vintage_market_config_mgr,
                               *(_DWORD *)(v2 + 64));
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v59);
      if ( npc_event_config_ptr )
      {
        if ( *(_BYTE *)(((unsigned __int64)&thisa->store_round_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&thisa->store_round_ >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&thisa->store_round_);
        }
        store_round = thisa->store_round_;
        v19 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 144));
        v20 = &v19->second;
        if ( *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v20 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v20);
        }
        if ( store_round <= v19->second.first )
        {
          v24 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 144));
          v25 = &v24->second.second;
          if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) != 0
            && ((unsigned __int8)v25 & 7) >= *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load1(v25);
          }
          if ( v24->second.second )
          {
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&v60,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/vintage_activity.cpp",
              "onCompleteTalkEvent",
              2516);
            v26 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                    (common::milog::MiLogStream *const)&v60,
                    (const char (*)[39])"[Vintage] npc event finished, talk_id:");
            v27 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v26, &eventb->talk_id);
            v28 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                    v27,
                    (const char (*)[16])", npc_event_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v28, (const unsigned int *)(v2 + 64));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v60);
          }
          else
          {
            proto::VintageMarketNpcEventFinishNotify::VintageMarketNpcEventFinishNotify((proto::VintageMarketNpcEventFinishNotify *const)(v2 + 272));
            prev_coin_a_num = VintageActivity::getActivityCoin(thisa, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A);
            prev_coin_c_num = VintageActivity::getActivityCoin(thisa, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C);
            ActionReason::ActionReason(
              (ActionReason *const)(v2 + 208),
              ACTION_REASON_VINTAGE_STORE_NPC_EVENT,
              ITEM_LIMIT_ACTIVITY_VINTAGE);
            if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&thisa->player_);
            ItemComp = Player::getItemComp(thisa->player_);
            PlayerItemComp::grantReward(ItemComp, *(_DWORD *)(v2 + 80), (const ActionReason *)(v2 + 208), 0LL);
            __for_range = &npc_event_config_ptr->reward_skill_list;
            __for_begin._M_current = std::vector<unsigned int>::begin(&npc_event_config_ptr->reward_skill_list)._M_current;
            __for_end._M_current = std::vector<unsigned int>::end(__for_range)._M_current;
            while ( 1 )
            {
              p_for_end = &__for_end;
              if ( !__gnu_cxx::operator!=<unsigned int const*,std::vector<unsigned int>>(&__for_begin, &__for_end) )
                break;
              v31 = __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator*(&__for_begin);
              v32 = v31;
              if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v31 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v31);
              }
              *(_DWORD *)(v2 + 96) = *v32;
              v33 = std::unordered_set<unsigned int>::insert(
                      &thisa->unlock_skill_set_,
                      (const std::unordered_set<unsigned int>::value_type *)(v2 + 96));
              if ( v33.second )
                proto::VintageMarketNpcEventFinishNotify::add_unlock_strategy_list(
                  (proto::VintageMarketNpcEventFinishNotify *const)(v2 + 272),
                  *(_DWORD *)(v2 + 96));
              __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator++(&__for_begin);
            }
            v34 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false> *const)(v2 + 144));
            v35 = *(_BYTE *)(((unsigned __int64)&v34->second.second >> 3) + 0x7FFF8000);
            if ( v35 != 0 && (((unsigned __int8)v34 + 8) & 7) >= v35 )
            {
              LOBYTE(p_for_end) = v35 != 0;
              __asan_report_store1(&v34->second.second, p_for_end, v34);
            }
            v34->second.second = 1;
            BaseActivity::notifyClientData((BaseActivity *const)thisa, 0);
            cur_coin_a_num = VintageActivity::getActivityCoin(thisa, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A);
            cur_coin_c_num = VintageActivity::getActivityCoin(thisa, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C);
            if ( cur_coin_a_num <= prev_coin_a_num )
              v36 = 0;
            else
              v36 = cur_coin_a_num - prev_coin_a_num;
            proto::VintageMarketNpcEventFinishNotify::set_coin_a(
              (proto::VintageMarketNpcEventFinishNotify *const)(v2 + 272),
              v36);
            if ( cur_coin_c_num <= prev_coin_c_num )
              v37 = 0;
            else
              v37 = cur_coin_c_num - prev_coin_c_num;
            proto::VintageMarketNpcEventFinishNotify::set_coin_c(
              (proto::VintageMarketNpcEventFinishNotify *const)(v2 + 272),
              v37);
            if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&thisa->player_);
            Player::sendProto(thisa->player_, (const google::protobuf::Message *)(v2 + 272));
            common::tools::perf::make_shared<proto_log::PlayerLogBodyVintageMarketNpcEventFinish>();
            v38 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 176));
            if ( *(_BYTE *)(((unsigned __int64)&thisa->store_round_ >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&thisa->store_round_ >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&thisa->store_round_);
            }
            proto_log::PlayerLogBodyVintageMarketNpcEventFinish::set_round(v38, thisa->store_round_);
            v39 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 176));
            v40 = std::map<unsigned int,VintageMarketStoreData>::size(&thisa->store_map_);
            proto_log::PlayerLogBodyVintageMarketNpcEventFinish::set_shop_count(v39, v40);
            v41 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 176));
            proto_log::PlayerLogBodyVintageMarketNpcEventFinish::set_npc_event_id(v41, *(_DWORD *)(v2 + 64));
            v42 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 176));
            proto_log::PlayerLogBodyVintageMarketNpcEventFinish::set_reward_id(v42, *(_DWORD *)(v2 + 80));
            if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&thisa->player_);
            player = thisa->player_;
            std::shared_ptr<google::protobuf::Message>::shared_ptr(&v59, 0LL);
            std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyVintageMarketNpcEventFinish,void>(
              &p_body_ptr,
              (const std::shared_ptr<proto_log::PlayerLogBodyVintageMarketNpcEventFinish> *)(v2 + 176));
            Player::printStatLog(player, &p_body_ptr, &v59, 0xEu);
            std::shared_ptr<google::protobuf::Message>::~shared_ptr(&p_body_ptr);
            std::shared_ptr<google::protobuf::Message>::~shared_ptr(&v59);
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&v60,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/vintage_activity.cpp",
              "onCompleteTalkEvent",
              2548);
            v44 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                    (common::milog::MiLogStream *const)&v60,
                    (const char (*)[44])"[Vintage] npc event finished, npc_event_id:");
            v45 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v44,
                    (const unsigned int *)(v2 + 64));
            v46 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v45,
                    (const char (*)[13])", reward_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v46, (const unsigned int *)(v2 + 80));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v60);
            std::shared_ptr<proto_log::PlayerLogBodyVintageMarketNpcEventFinish>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyVintageMarketNpcEventFinish> *const)(v2 + 176));
            proto::VintageMarketNpcEventFinishNotify::~VintageMarketNpcEventFinishNotify((proto::VintageMarketNpcEventFinishNotify *const)(v2 + 272));
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&v60,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "onCompleteTalkEvent",
            2511);
          v21 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                  (common::milog::MiLogStream *const)&v60,
                  (const char (*)[38])"[Vintage] npc event expired, talk_id:");
          v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, &eventb->talk_id);
          v23 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  v22,
                  (const char (*)[16])", npc_event_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v23, (const unsigned int *)(v2 + 64));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v60);
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&v60,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "onCompleteTalkEvent",
          2505);
        v17 = common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(
                (common::milog::MiLogStream *const)&v60,
                (const char (*)[69])"[Vintage] findVintageMarketNpcEventExcelConfig failed, npc_event_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v2 + 64));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v60);
      }
    }
    StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v2 + 48));
  }
  if ( v61 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
};

// Line 2552: range 00000000149973FC-0000000014997561
int32_t __cdecl VintageActivity::checkCanPlayMarketContent(VintageActivity *const this)
{
  PlayerMpComp *MpComp; // rax
  common::milog::MiLogStream v3; // [rsp+10h] [rbp-30h] BYREF

  if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_content_closed_);
  if ( this->is_content_closed_ )
    return 10396;
  if ( *(char *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_market_content_open_);
  if ( !this->is_market_content_open_ )
  {
    common::milog::MiLogStream::create(
      &v3,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "checkCanPlayMarketContent",
      2559);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v3,
      (const char (*)[34])"[Vintage] market content not open");
    common::milog::MiLogStream::~MiLogStream(&v3);
    return -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    MpComp = Player::getMpComp(this->player_);
    if ( PlayerMpComp::isInOtherWorldOrScene(MpComp) )
      return 1202;
    else
      return 0;
  }
};

// Line 2571: range 0000000014997562-00000000149976BE
int32_t __cdecl VintageActivity::checkCanPlayMarketStoreContent(VintageActivity *const this)
{
  int32_t ret; // [rsp+1Ch] [rbp-34h]
  common::milog::MiLogStream v3; // [rsp+20h] [rbp-30h] BYREF

  ret = VintageActivity::checkCanPlayMarketContent(this);
  if ( ret )
    return ret;
  if ( *(char *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_store_content_finish_);
  if ( this->is_store_content_finish_ )
    return 10397;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 105) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3)
                                                       + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_store_content_interrupt_);
  }
  if ( this->is_store_content_interrupt_ )
    return 10400;
  if ( !std::map<unsigned int,VintageMarketStoreData>::empty(&this->store_map_) )
    return 0;
  common::milog::MiLogStream::create(
    &v3,
    &common::milog::MiLogDefault::default_log_obj_,
    3u,
    "./src/player/activity/vintage_activity.cpp",
    "checkCanPlayMarketStoreContent",
    2587);
  common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(&v3, (const char (*)[25])"[Vintage] store not open");
  common::milog::MiLogStream::~MiLogStream(&v3);
  return -1;
};

// Line 2595: range 00000000149976C0-00000000149979FF
int32_t __cdecl VintageActivity::marketStartStorePlay(
        VintageActivity *const this,
        const proto::VintageMarketStartStorePlayReq *req,
        proto::VintageMarketStartStorePlayRsp *rsp_0)
{
  char v4; // bl
  uint32_t store_round; // r12d
  google::protobuf::uint32 v6; // r12d
  TxtConfigMgr *p_txt_config_mgr; // rax
  char v8; // r12
  common::milog::MiLogStream *v9; // rbx
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  google::protobuf::uint32 v12; // edx
  unsigned int val; // [rsp+28h] [rbp-48h] BYREF
  int32_t ret; // [rsp+2Ch] [rbp-44h]
  std::shared_ptr<Config> v16; // [rsp+30h] [rbp-40h] BYREF
  common::milog::MiLogStream v17; // [rsp+40h] [rbp-30h] BYREF

  ret = VintageActivity::checkCanPlayMarketStoreContent(this);
  if ( ret )
    return ret;
  v4 = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->store_round_);
  }
  store_round = this->store_round_;
  if ( store_round != proto::VintageMarketStartStorePlayReq::store_round(req) )
    goto LABEL_9;
  v6 = proto::VintageMarketStartStorePlayReq::store_round(req);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v16);
  v4 = 1;
  p_txt_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v16)->design_config.txt_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&p_txt_config_mgr->activity_vintage_market_config_mgr.max_round >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&p_txt_config_mgr->activity_vintage_market_config_mgr.max_round >> 3) + 0x7FFF8000) <= 3 )
  {
    p_txt_config_mgr = (TxtConfigMgr *)__asan_report_load4(&p_txt_config_mgr->activity_vintage_market_config_mgr.max_round);
  }
  if ( v6 <= p_txt_config_mgr->activity_vintage_market_config_mgr.max_round )
    v8 = 0;
  else
LABEL_9:
    v8 = 1;
  if ( v4 )
    std::shared_ptr<Config>::~shared_ptr(&v16);
  if ( v8 )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "marketStartStorePlay",
      2603);
    v9 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
           &v17,
           (const char (*)[45])"[Vintage] store round is not correct, round:");
    val = proto::VintageMarketStartStorePlayReq::store_round(req);
    v10 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
    v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])", cur_round:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &this->store_round_);
    common::milog::MiLogStream::~MiLogStream(&v17);
    return -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)this - 60) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3)
                                                        + 0x7FFF8000) )
    {
      __asan_report_load1(&this->is_round_tips_view_);
    }
    if ( !this->is_round_tips_view_ )
      this->is_round_tips_view_ = 1;
    v12 = proto::VintageMarketStartStorePlayReq::store_round(req);
    proto::VintageMarketStartStorePlayRsp::set_store_round(rsp_0, v12);
    if ( *(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this - 68) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->prev_coin_b_num_);
    }
    proto::VintageMarketStartStorePlayRsp::set_prev_round_coin_b(rsp_0, this->prev_coin_b_num_);
    if ( *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->prev_coin_c_num_);
    }
    proto::VintageMarketStartStorePlayRsp::set_prev_round_coin_c(rsp_0, this->prev_coin_c_num_);
    BaseActivity::notifyClientData((BaseActivity *const)this, 0);
    return 0;
  }
};

// Line 2620: range 0000000014997A00-0000000014997E08
void __cdecl VintageActivity::updateStoreRound(VintageActivity *const this)
{
  uint32_t store_round; // ebx
  TxtConfigMgr *p_txt_config_mgr; // rax
  bool v3; // bl
  common::milog::MiLogStream *v4; // rax
  uint32_t v5; // ebx
  TxtConfigMgr *v6; // rax
  bool v7; // bl
  __int64 v8; // rsi
  __int64 v9; // rdx
  common::milog::MiLogStream *v10; // rax
  __int64 v11; // rsi
  __int64 v12; // rdx
  std::shared_ptr<Config> v13; // [rsp+10h] [rbp-70h] BYREF
  common::milog::MiLogStream v14; // [rsp+20h] [rbp-60h] BYREF
  std::set<unsigned int> store_set; // [rsp+40h] [rbp-40h] BYREF

  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->store_round_);
  }
  store_round = this->store_round_;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v13);
  p_txt_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v13)->design_config.txt_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&p_txt_config_mgr->activity_vintage_market_config_mgr.max_round >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&p_txt_config_mgr->activity_vintage_market_config_mgr.max_round >> 3) + 0x7FFF8000) <= 3 )
  {
    p_txt_config_mgr = (TxtConfigMgr *)__asan_report_load4(&p_txt_config_mgr->activity_vintage_market_config_mgr.max_round);
  }
  v3 = store_round > p_txt_config_mgr->activity_vintage_market_config_mgr.max_round;
  std::shared_ptr<Config>::~shared_ptr(&v13);
  if ( v3 )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "updateStoreRound",
      2623);
    v4 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
           &v14,
           (const char (*)[41])"[Vintage] cur round is too large, round:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v4, &this->store_round_);
    common::milog::MiLogStream::~MiLogStream(&v14);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    v5 = this->store_round_;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v13);
    v6 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v13)->design_config.txt_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&v6->activity_vintage_market_config_mgr.max_round >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&v6->activity_vintage_market_config_mgr.max_round >> 3) + 0x7FFF8000) <= 3 )
    {
      v6 = (TxtConfigMgr *)__asan_report_load4(&v6->activity_vintage_market_config_mgr.max_round);
    }
    v7 = v5 == v6->activity_vintage_market_config_mgr.max_round;
    std::shared_ptr<Config>::~shared_ptr(&v13);
    if ( v7 )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->store_round_);
      }
      ++this->store_round_;
      v8 = ((_BYTE)this - 60) & 7;
      v9 = (*(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v8 >= *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000));
      if ( (_BYTE)v9 )
        __asan_report_store1(&this->is_round_tips_view_, v8, v9);
      this->is_round_tips_view_ = 0;
      common::milog::MiLogStream::create(
        &v14,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "updateStoreRound",
        2631);
      v10 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
              &v14,
              (const char (*)[48])"[Vintage] after finish last round, store_round:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &this->store_round_);
      common::milog::MiLogStream::~MiLogStream(&v14);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->store_round_);
      }
      ++this->store_round_;
      v11 = ((_BYTE)this - 60) & 7;
      v12 = (*(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v11 >= *(_BYTE *)(((unsigned __int64)&this->is_round_tips_view_ >> 3) + 0x7FFF8000));
      if ( (_BYTE)v12 )
        __asan_report_store1(&this->is_round_tips_view_, v11, v12);
      this->is_round_tips_view_ = 0;
      common::tools::MiscUtils::getAllMapKeysSet<std::map<unsigned int,VintageMarketStoreData>>(
        &store_set,
        &this->store_map_);
      VintageActivity::calcStoreRoundAimAttr(this, &store_set);
      std::set<unsigned int>::~set(&store_set);
    }
  }
};

// Line 2644: range 0000000014997E0A-000000001499944B
void __cdecl VintageActivity::calcStoreRoundAimAttr(
        VintageActivity *const this,
        const std::set<unsigned int> *store_set)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::_Rb_tree_const_iterator<unsigned int>::reference v5; // rax
  _DWORD *v6; // rdx
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v9; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  std::map<unsigned int,std::vector<unsigned int>> *p_random_template_pool_map; // r14
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v15; // rax
  common::milog::MiLogStream *v16; // r14
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  std::map<unsigned int,std::vector<unsigned int>> *p_attr_random_pool_map; // r14
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v21; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v22; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v23; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v25; // rax
  const unsigned int *M_current; // r14
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v27; // rax
  std::vector<unsigned int>::const_iterator v28; // rax
  unsigned int *v29; // r14
  std::vector<unsigned int>::iterator v30; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v31; // rax
  common::milog::MiLogStream *v32; // r14
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v33; // rax
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rax
  int v36; // r14d
  std::vector<unsigned int>::reference v37; // rax
  uint32_t *v38; // rdx
  std::vector<unsigned int>::size_type v39; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v40; // rax
  common::milog::MiLogStream *v42; // rax
  const unsigned int *v43; // r14
  std::vector<unsigned int>::const_iterator v44; // rax
  std::vector<unsigned int> *v45; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >,bool> v46; // rax
  common::milog::MiLogStream *v47; // rax
  std::vector<unsigned int> *v48; // r14
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v49; // rax
  std::pair<unsigned int,std::vector<unsigned int> > *v50; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > >,bool> v51; // rax
  common::milog::MiLogStream *v52; // rax
  std::_Rb_tree_const_iterator<unsigned int>::reference v53; // rax
  _DWORD *v54; // rdx
  common::milog::MiLogStream *v55; // rax
  common::milog::MiLogStream *v56; // rax
  common::milog::MiLogStream *v57; // rax
  std::vector<unsigned int>::size_type v58; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v59; // rax
  std::vector<unsigned int>::size_type v60; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v61; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v63; // rax
  std::vector<unsigned int>::reference v64; // rax
  unsigned int *v65; // rdx
  unsigned int v66; // r14d
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v67; // rax
  std::vector<unsigned int>::reference v68; // rax
  unsigned int *v69; // rdx
  SelectType v70; // r14d
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v71; // rax
  __int64 v72; // rsi
  std::vector<unsigned int>::reference v73; // rax
  SelectType *v74; // rdx
  char v75; // cl
  std::vector<unsigned int> *p_second; // r14
  std::map<unsigned int,std::vector<unsigned int>> *v77; // r15
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > >::pointer v78; // rax
  std::vector<unsigned int> *v79; // rax
  common::milog::MiLogStream *v80; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v81; // rax
  common::milog::MiLogStream *v82; // rax
  common::milog::MiLogStream *v83; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > >::pointer v84; // rax
  common::milog::MiLogStream *v85; // rax
  common::milog::MiLogStream *v86; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > >::pointer v87; // rax
  common::milog::MiLogStream *v88; // rax
  common::milog::MiLogStream *v89; // rax
  common::milog::MiLogStream *v90; // rax
  common::milog::MiLogStream *v91; // rax
  std::allocator<unsigned int> __a; // [rsp+2Fh] [rbp-301h] BYREF
  uint32_t idx; // [rsp+30h] [rbp-300h]
  uint32_t random_config_id; // [rsp+34h] [rbp-2FCh]
  std::set<unsigned int>::iterator __for_begin; // [rsp+38h] [rbp-2F8h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+40h] [rbp-2F0h] BYREF
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self __y; // [rsp+48h] [rbp-2E8h] BYREF
  const ActivityVintageMarketExcelConfigMgr *config_mgr; // [rsp+50h] [rbp-2E0h]
  const std::set<unsigned int> *__for_range; // [rsp+58h] [rbp-2D8h]
  const std::set<unsigned int> *__for_range_0; // [rsp+60h] [rbp-2D0h]
  const data::VintageMarketAttrRandomTemplateExcelConfig *random_config_ptr; // [rsp+68h] [rbp-2C8h]
  std::shared_ptr<Config> v102; // [rsp+70h] [rbp-2C0h] BYREF
  std::vector<unsigned int> __x; // [rsp+80h] [rbp-2B0h] BYREF
  common::milog::MiLogStream v104; // [rsp+A0h] [rbp-290h] BYREF
  common::milog::MiLogStream v105; // [rsp+C0h] [rbp-270h] BYREF
  common::milog::MiLogStream v106; // [rsp+E0h] [rbp-250h] BYREF
  common::milog::MiLogStream v107; // [rsp+100h] [rbp-230h] BYREF
  char v108[528]; // [rsp+120h] [rbp-210h] BYREF

  v2 = (unsigned __int64)v108;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(480LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "10 48 4 7 id:2724 64 8 15 store_iter:2660 96 8 22 store_config_iter:2666 128 8 21 store_round_it"
                        "er:2672 160 8 15 store_iter:2726 192 8 14 attr_iter:2732 224 8 14 pool_iter:2738 256 24 13 pool_"
                        "vec:2685 320 48 23 store_add_attr_map:2656 400 48 24 store_pool_pair_map:2657";
  *(_QWORD *)(v2 + 16) = VintageActivity::calcStoreRoundAimAttr;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -218959360;
  v4[536862724] = -218959360;
  v4[536862725] = -218959360;
  v4[536862726] = -218959360;
  v4[536862727] = -218959360;
  v4[536862728] = -234881024;
  v4[536862729] = -218959118;
  v4[536862731] = -219021312;
  v4[536862732] = 62194;
  v4[536862734] = -202116109;
  if ( std::set<unsigned int>::empty(store_set) )
  {
    common::milog::MiLogStream::create(
      &v107,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "calcStoreRoundAimAttr",
      2647);
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
      &v107,
      (const char (*)[26])"[Vintage] store_set empty");
    common::milog::MiLogStream::~MiLogStream(&v107);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    if ( this->store_round_ )
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v102);
      config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v102)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
      std::shared_ptr<Config>::~shared_ptr(&v102);
      std::map<unsigned int,std::vector<unsigned int>>::map((std::map<unsigned int,std::vector<unsigned int>> *const)(v2 + 320));
      std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int>>>::map((std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int> >> *const)(v2 + 400));
      __for_range = store_set;
      __for_begin._M_node = std::set<unsigned int>::begin(store_set)._M_node;
      __for_end._M_node = std::set<unsigned int>::end(store_set)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v5 = std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
        v6 = v5;
        if ( *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v5 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v5);
        }
        *(_DWORD *)(v2 + 48) = *v6;
        *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v2 + 64) = std::map<unsigned int,VintageMarketStoreData>::find(
                                                                                  &this->store_map_,
                                                                                  (const std::map<unsigned int,VintageMarketStoreData>::key_type *)(v2 + 48));
        __y._M_node = std::map<unsigned int,VintageMarketStoreData>::end(&this->store_map_)._M_node;
        if ( std::operator==(
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v2 + 64),
               &__y) )
        {
          common::milog::MiLogStream::create(
            &v104,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "calcStoreRoundAimAttr",
            2663);
          v7 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                 &v104,
                 (const char (*)[44])"[Vintage] find open store failed, store_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v104);
          goto LABEL_71;
        }
        *(std::map<unsigned int,ActivityVintageMarketStoreConfig>::const_iterator *)(v2 + 96) = std::map<unsigned int,ActivityVintageMarketStoreConfig>::find(
                                                                                                  &config_mgr->store_config_map,
                                                                                                  (const std::map<unsigned int,ActivityVintageMarketStoreConfig>::key_type *)(v2 + 48));
        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Base_ptr)std::map<unsigned int,ActivityVintageMarketStoreConfig>::end(&config_mgr->store_config_map)._M_node;
        if ( std::operator==(
               (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)(v2 + 96),
               (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)&__y) )
        {
          common::milog::MiLogStream::create(
            &v105,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "calcStoreRoundAimAttr",
            2669);
          v8 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                 &v105,
                 (const char (*)[46])"[Vintage] find store config failed, store_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v105);
          goto LABEL_71;
        }
        v9 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v2 + 96));
        *(std::map<unsigned int,ActivityVintageMarketStoreRoundConfig>::const_iterator *)(v2 + 128) = std::map<unsigned int,ActivityVintageMarketStoreRoundConfig>::find(&v9->second.round_config_map, &this->store_round_);
        v10 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v2 + 96));
        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Base_ptr)std::map<unsigned int,ActivityVintageMarketStoreRoundConfig>::end(&v10->second.round_config_map)._M_node;
        if ( std::operator==(
               (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::_Self *)(v2 + 128),
               (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::_Self *)&__y) )
        {
          common::milog::MiLogStream::create(
            &v106,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "calcStoreRoundAimAttr",
            2675);
          v11 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                  &v106,
                  (const char (*)[52])"[Vintage] find store round config failed, store_id:");
          v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v11,
                  (const unsigned int *)(v2 + 48));
          v13 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v12, (const char (*)[12])", round_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &this->store_round_);
          common::milog::MiLogStream::~MiLogStream(&v106);
          goto LABEL_71;
        }
        p_random_template_pool_map = &config_mgr->random_template_pool_map;
        v15 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v2 + 128));
        *(std::map<unsigned int,std::vector<unsigned int>>::const_iterator *)(v2 + 160) = std::map<unsigned int,std::vector<unsigned int>>::find(
                                                                                            p_random_template_pool_map,
                                                                                            &v15->second.random_template_id);
        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Base_ptr)std::map<unsigned int,std::vector<unsigned int>>::end(&config_mgr->random_template_pool_map)._M_node;
        if ( std::operator==(
               (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)(v2 + 160),
               (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)&__y) )
        {
          common::milog::MiLogStream::create(
            &v107,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "calcStoreRoundAimAttr",
            2682);
          v16 = common::milog::MiLogStream::operator<<<char [71],(char *[71])0>(
                  &v107,
                  (const char (*)[71])"[Vintage] find random template pool config failed, random_template_id:");
          v17 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v2 + 128));
          v18 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v16,
                  &v17->second.random_template_id);
          v19 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v18, (const char (*)[12])", store_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v107);
          goto LABEL_71;
        }
        std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 256));
        random_config_id = 0;
        p_attr_random_pool_map = &std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 64))->second.attr_random_pool_map;
        v21 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v2 + 128));
        *(std::map<unsigned int,std::vector<unsigned int>>::iterator *)(v2 + 192) = std::map<unsigned int,std::vector<unsigned int>>::find(
                                                                                      p_attr_random_pool_map,
                                                                                      &v21->second.random_template_id);
        v22 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 64));
        __y._M_node = std::map<unsigned int,std::vector<unsigned int>>::end(&v22->second.attr_random_pool_map)._M_node;
        if ( std::operator==(
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)(v2 + 192),
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)&__y)
          || (v23 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v2 + 192)),
              std::vector<unsigned int>::empty(&v23->second)) )
        {
          std::allocator<unsigned int>::allocator(&__a);
          v25 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v2 + 160));
          M_current = std::vector<unsigned int>::end(&v25->second)._M_current;
          v27 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v2 + 160));
          v28._M_current = std::vector<unsigned int>::begin(&v27->second)._M_current;
          std::vector<unsigned int>::vector<__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>,void>(
            &__x,
            v28,
            (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >)M_current,
            &__a);
          std::vector<unsigned int>::operator=((std::vector<unsigned int> *const)(v2 + 256), &__x);
          std::vector<unsigned int>::~vector(&__x);
          std::allocator<unsigned int>::~allocator(&__a);
          v29 = std::vector<unsigned int>::end((std::vector<unsigned int> *const)(v2 + 256))._M_current;
          v30._M_current = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v2 + 256))._M_current;
          std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>>(
            v30,
            (__gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >)v29);
        }
        else
        {
          v31 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v2 + 192));
          std::vector<unsigned int>::operator=((std::vector<unsigned int> *const)(v2 + 256), &v31->second);
        }
        if ( std::vector<unsigned int>::empty((const std::vector<unsigned int> *const)(v2 + 256)) )
        {
          common::milog::MiLogStream::create(
            &v107,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "calcStoreRoundAimAttr",
            2699);
          v32 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                  &v107,
                  (const char (*)[46])"[Vintage] pool_vec empty, random_template_id:");
          v33 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v2 + 128));
          v34 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v32,
                  &v33->second.random_template_id);
          v35 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v34, (const char (*)[12])", store_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v35, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v107);
          v36 = 0;
        }
        else
        {
          v37 = std::vector<unsigned int>::front((std::vector<unsigned int> *const)(v2 + 256));
          v38 = v37;
          if ( *(_BYTE *)(((unsigned __int64)v37 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v37 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v37 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v37);
          }
          random_config_id = *v38;
          *(std::vector<unsigned int>::iterator *)(v2 + 224) = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v2 + 256));
          __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::__normal_iterator<unsigned int *>(
            (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> > *const)&__y,
            (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v2 + 224));
          std::vector<unsigned int>::erase(
            (std::vector<unsigned int> *const)(v2 + 256),
            (std::vector<unsigned int>::const_iterator)__y._M_node);
          random_config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketAttrRandomTemplateExcelConfig(
                                config_mgr,
                                random_config_id);
          if ( !random_config_ptr
            || (v39 = std::vector<unsigned int>::size(&random_config_ptr->add_attr_list),
                v40 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 64)),
                v39 != std::vector<unsigned int>::size(&v40->second.aim_attr_vec)) )
          {
            common::milog::MiLogStream::create(
              &v107,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/vintage_activity.cpp",
              "calcStoreRoundAimAttr",
              2708);
            v42 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                    &v107,
                    (const char (*)[53])"[Vintage] store find random config failed, store_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v42, (const unsigned int *)(v2 + 48));
            common::milog::MiLogStream::~MiLogStream(&v107);
            v36 = 0;
          }
          else
          {
            std::allocator<unsigned int>::allocator(&__a);
            v43 = std::vector<unsigned int>::end(&random_config_ptr->add_attr_list)._M_current;
            v44._M_current = std::vector<unsigned int>::begin(&random_config_ptr->add_attr_list)._M_current;
            std::vector<unsigned int>::vector<__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>,void>(
              &__x,
              v44,
              (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >)v43,
              &__a);
            v46 = std::map<unsigned int,std::vector<unsigned int>>::emplace<unsigned int &,std::vector<unsigned int>>(
                    (std::map<unsigned int,std::vector<unsigned int>> *const)(v2 + 320),
                    (unsigned int *)(v2 + 48),
                    &__x,
                    (unsigned int *)(v2 + 48),
                    v45);
            LOBYTE(v43) = !v46.second;
            std::vector<unsigned int>::~vector(&__x);
            std::allocator<unsigned int>::~allocator(&__a);
            if ( (_BYTE)v43 )
            {
              common::milog::MiLogStream::create(
                &v107,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/vintage_activity.cpp",
                "calcStoreRoundAimAttr",
                2713);
              v47 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                      &v107,
                      (const char (*)[40])"[Vintage] duplicate store_id, store_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v47,
                (const unsigned int *)(v2 + 48));
              common::milog::MiLogStream::~MiLogStream(&v107);
              v36 = 0;
            }
            else
            {
              v48 = std::move<std::vector<unsigned int> &>((std::vector<unsigned int> *)(v2 + 256));
              v49 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v2 + 128));
              std::make_pair<unsigned int const&,std::vector<unsigned int>>(
                (std::pair<unsigned int,std::vector<unsigned int> > *)&v107,
                &v49->second.random_template_id,
                v48);
              v51 = std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int>>>::emplace<unsigned int &,std::pair<unsigned int,std::vector<unsigned int>>>(
                      (std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int> >> *const)(v2 + 400),
                      (unsigned int *)(v2 + 48),
                      (std::pair<unsigned int,std::vector<unsigned int> > *)&v107,
                      (unsigned int *)(v2 + 48),
                      v50);
              LOBYTE(v48) = !v51.second;
              std::pair<unsigned int,std::vector<unsigned int>>::~pair((std::pair<unsigned int,std::vector<unsigned int> > *const)&v107);
              if ( (_BYTE)v48 )
              {
                common::milog::MiLogStream::create(
                  &v107,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/player/activity/vintage_activity.cpp",
                  "calcStoreRoundAimAttr",
                  2718);
                v52 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                        &v107,
                        (const char (*)[40])"[Vintage] duplicate store_id, store_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v52,
                  (const unsigned int *)(v2 + 48));
                common::milog::MiLogStream::~MiLogStream(&v107);
                v36 = 0;
              }
              else
              {
                v36 = 1;
              }
            }
          }
        }
        std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 256));
        if ( v36 != 1 )
          goto LABEL_71;
        std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
      }
      __for_range_0 = store_set;
      *(std::set<unsigned int>::iterator *)(v2 + 96) = std::set<unsigned int>::begin(store_set);
      *(std::set<unsigned int>::iterator *)(v2 + 128) = std::set<unsigned int>::end(__for_range_0);
      while ( std::operator!=(
                (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v2 + 96),
                (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v2 + 128)) )
      {
        v53 = std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v2 + 96));
        v54 = v53;
        if ( *(_BYTE *)(((unsigned __int64)v53 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v53 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v53 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v53);
        }
        *(_DWORD *)(v2 + 48) = *v54;
        *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v2 + 160) = std::map<unsigned int,VintageMarketStoreData>::find(
                                                                                   &this->store_map_,
                                                                                   (const std::map<unsigned int,VintageMarketStoreData>::key_type *)(v2 + 48));
        __y._M_node = std::map<unsigned int,VintageMarketStoreData>::end(&this->store_map_)._M_node;
        if ( std::operator==(
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v2 + 160),
               &__y) )
        {
          common::milog::MiLogStream::create(
            &v104,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "calcStoreRoundAimAttr",
            2729);
          v55 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  &v104,
                  (const char (*)[44])"[Vintage] find open store failed, store_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v55, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v104);
          break;
        }
        *(std::map<unsigned int,std::vector<unsigned int>>::iterator *)(v2 + 192) = std::map<unsigned int,std::vector<unsigned int>>::find(
                                                                                      (std::map<unsigned int,std::vector<unsigned int>> *const)(v2 + 320),
                                                                                      (const std::map<unsigned int,std::vector<unsigned int>>::key_type *)(v2 + 48));
        __y._M_node = std::map<unsigned int,std::vector<unsigned int>>::end((std::map<unsigned int,std::vector<unsigned int>> *const)(v2 + 320))._M_node;
        if ( std::operator==(
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)(v2 + 192),
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)&__y) )
        {
          common::milog::MiLogStream::create(
            &v105,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "calcStoreRoundAimAttr",
            2735);
          v56 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  &v105,
                  (const char (*)[44])"[Vintage] find open store failed, store_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v56, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v105);
          break;
        }
        *(std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int> >>::iterator *)(v2 + 224) = std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int>>>::find((std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int> >> *const)(v2 + 400), (const std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int> >>::key_type *)(v2 + 48));
        __y._M_node = std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int>>>::end((std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int> >> *const)(v2 + 400))._M_node;
        if ( std::operator==(
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > >::_Self *)(v2 + 224),
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > >::_Self *)&__y) )
        {
          common::milog::MiLogStream::create(
            &v106,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "calcStoreRoundAimAttr",
            2741);
          v57 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  &v106,
                  (const char (*)[44])"[Vintage] find open store failed, store_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v57, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v106);
          break;
        }
        for ( idx = 0; ; ++idx )
        {
          v58 = idx;
          v59 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 160));
          if ( v58 >= std::vector<unsigned int>::size(&v59->second.aim_attr_vec) )
            break;
          v60 = idx;
          v61 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v2 + 192));
          if ( v60 >= std::vector<unsigned int>::size(&v61->second) )
            break;
          v63 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v2 + 192));
          v64 = std::vector<unsigned int>::operator[](&v63->second, idx);
          v65 = v64;
          if ( *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v64 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v64);
          }
          v66 = *v65;
          v67 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 160));
          v68 = std::vector<unsigned int>::operator[](&v67->second.aim_attr_vec, idx);
          v69 = v68;
          if ( *(_BYTE *)(((unsigned __int64)v68 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v68 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v68 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v68);
          }
          v70 = SAFE_ADD<unsigned int,unsigned int>(*v69, v66);
          v71 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 160));
          v72 = idx;
          v73 = std::vector<unsigned int>::operator[](&v71->second.aim_attr_vec, idx);
          v74 = v73;
          v75 = *(_BYTE *)(((unsigned __int64)v73 >> 3) + 0x7FFF8000);
          if ( v75 != 0 && (char)(((unsigned __int8)v73 & 7) + 3) >= v75 )
          {
            LOBYTE(v72) = v75 != 0;
            __asan_report_store4(v73, v72, v73);
          }
          *v74 = v70;
        }
        p_second = &std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int>>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > > *const)(v2 + 224))->second.second;
        v77 = &std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 160))->second.attr_random_pool_map;
        v78 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int>>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > > *const)(v2 + 224));
        v79 = std::map<unsigned int,std::vector<unsigned int>>::operator[](v77, &v78->second.first);
        std::vector<unsigned int>::operator=(v79, p_second);
        common::milog::MiLogStream::create(
          &v107,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/vintage_activity.cpp",
          "calcStoreRoundAimAttr",
          2749);
        v80 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                &v107,
                (const char (*)[31])"[Vintage] store aim atter_vec:");
        v81 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v2 + 160));
        v82 = common::milog::MiLogStream::operator<<<unsigned int>(v80, &v81->second.aim_attr_vec);
        v83 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                v82,
                (const char (*)[22])", random_template_id:");
        v84 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int>>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > > *const)(v2 + 224));
        v85 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v83, &v84->second.first);
        v86 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v85, (const char (*)[12])", pool_vec:");
        v87 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int>>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,std::vector<unsigned int> > > > *const)(v2 + 224));
        v88 = common::milog::MiLogStream::operator<<<unsigned int>(v86, &v87->second.second);
        v89 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v88, (const char (*)[12])", store_id:");
        v90 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v89,
                (const unsigned int *)(v2 + 48));
        v91 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v90, (const char (*)[9])", round:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v91, &this->store_round_);
        common::milog::MiLogStream::~MiLogStream(&v107);
        std::_Rb_tree_const_iterator<unsigned int>::operator++((std::_Rb_tree_const_iterator<unsigned int> *const)(v2 + 96));
      }
LABEL_71:
      std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int>>>::~map((std::map<unsigned int,std::pair<unsigned int,std::vector<unsigned int> >> *const)(v2 + 400));
      std::map<unsigned int,std::vector<unsigned int>>::~map((std::map<unsigned int,std::vector<unsigned int>> *const)(v2 + 320));
    }
    else
    {
      common::milog::MiLogStream::create(
        &v107,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "calcStoreRoundAimAttr",
        2652);
      common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
        &v107,
        (const char (*)[47])"[Vintage] store round 0, stop content not open");
      common::milog::MiLogStream::~MiLogStream(&v107);
    }
  }
  if ( v108 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8038) = -168430091;
  }
};

// Line 2755: range 000000001499944C-000000001499992C
int32_t __cdecl VintageActivity::checkStoreOperationOnStore(
        VintageActivity *const this,
        const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *store_op_list)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // rbx
  __int64 v5; // r14
  common::milog::MiLogStream *v6; // r13
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // r13
  int32_t v9; // r14d
  std::pair<std::_Rb_tree_const_iterator<unsigned int>,bool> v10; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // r14
  int32_t result; // eax
  int val; // [rsp+14h] [rbp-11Ch] BYREF
  google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::const_iterator __for_begin; // [rsp+18h] [rbp-118h] BYREF
  google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::const_iterator __for_end; // [rsp+20h] [rbp-110h] BYREF
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self __y; // [rsp+28h] [rbp-108h] BYREF
  const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *__for_range; // [rsp+30h] [rbp-100h]
  const proto::VintageMarketStoreOpInfo *store_op; // [rsp+38h] [rbp-F8h]
  common::milog::MiLogStream v20; // [rsp+40h] [rbp-F0h] BYREF
  char v21[208]; // [rsp+60h] [rbp-D0h] BYREF

  v2 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(160LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 8 15 store_iter:2770 80 48 17 op_store_set:2762";
  *(_QWORD *)(v2 + 16) = VintageActivity::checkStoreOperationOnStore;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862721] = -234881024;
  v4[536862722] = 62194;
  v4[536862724] = -202116109;
  v5 = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::size(store_op_list);
  if ( v5 == std::map<unsigned int,VintageMarketStoreData>::size(&this->store_map_) )
  {
    std::set<unsigned int>::set((std::set<unsigned int> *const)(v2 + 80));
    __for_range = store_op_list;
    __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::begin(store_op_list).it_;
    __for_end.it_ = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::end(store_op_list).it_;
    while ( google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator!=(
              &__for_begin,
              &__for_end) )
    {
      store_op = google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator*(&__for_begin);
      val = proto::VintageMarketStoreOpInfo::store_id(store_op);
      v10 = std::set<unsigned int>::insert(
              (std::set<unsigned int> *const)(v2 + 80),
              (std::set<unsigned int>::value_type *)&val);
      if ( !v10.second )
      {
        common::milog::MiLogStream::create(
          &v20,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "checkStoreOperationOnStore",
          2767);
        v11 = common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
                &v20,
                (const char (*)[30])"[Vintage] duplicate store_id:");
        val = proto::VintageMarketStoreOpInfo::store_id(store_op);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)&val);
        common::milog::MiLogStream::~MiLogStream(&v20);
        v9 = -1;
        goto LABEL_14;
      }
      val = proto::VintageMarketStoreOpInfo::store_id(store_op);
      *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v2 + 48) = std::map<unsigned int,VintageMarketStoreData>::find(
                                                                                &this->store_map_,
                                                                                (const std::map<unsigned int,VintageMarketStoreData>::key_type *)&val);
      __y._M_node = std::map<unsigned int,VintageMarketStoreData>::end(&this->store_map_)._M_node;
      if ( std::operator==(
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v2 + 48),
             &__y) )
      {
        common::milog::MiLogStream::create(
          &v20,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "checkStoreOperationOnStore",
          2773);
        v12 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                &v20,
                (const char (*)[39])"[Vintage] store is not open, store_id:");
        val = proto::VintageMarketStoreOpInfo::store_id(store_op);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)&val);
        common::milog::MiLogStream::~MiLogStream(&v20);
        v9 = -1;
        goto LABEL_14;
      }
      google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator++(&__for_begin);
    }
    v9 = 0;
LABEL_14:
    std::set<unsigned int>::~set((std::set<unsigned int> *const)(v2 + 80));
  }
  else
  {
    common::milog::MiLogStream::create(
      &v20,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "checkStoreOperationOnStore",
      2758);
    v6 = common::milog::MiLogStream::operator<<<char [63],(char *[63])0>(
           &v20,
           (const char (*)[63])"[Vintage] op store size not equal to open store size, op_size:");
    val = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::size(store_op_list);
    v7 = common::milog::MiLogStream::operator<<<int,(int *)0>(v6, &val);
    v8 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v7, (const char (*)[14])", store_size:");
    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Base_ptr)std::map<unsigned int,VintageMarketStoreData>::size(&this->store_map_);
    common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v8, (const unsigned __int64 *)&__y);
    common::milog::MiLogStream::~MiLogStream(&v20);
    v9 = -1;
  }
  result = v9;
  if ( v21 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 2782: range 000000001499992E-0000000014999C2D
int32_t __cdecl VintageActivity::checkAndRewriteStoreOperationOnHelp(
        VintageActivity *const this,
        const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *store_op_list,
        uint32_t *help_uid)
{
  common::milog::MiLogStream *v3; // rbx
  common::milog::MiLogStream *v4; // rax
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // rdx
  uint32_t v9; // ebx
  uint32_t v10; // ecx
  __int64 v11; // rsi
  common::milog::MiLogStream *v12; // rbx
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  uint32_t v15; // ecx
  char v16; // dl
  __int64 v17; // rdx
  unsigned int val; // [rsp+28h] [rbp-58h] BYREF
  int32_t ret; // [rsp+2Ch] [rbp-54h]
  google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::const_iterator __for_begin; // [rsp+30h] [rbp-50h] BYREF
  google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::const_iterator __for_end; // [rsp+38h] [rbp-48h] BYREF
  const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *__for_range; // [rsp+40h] [rbp-40h]
  const proto::VintageMarketStoreOpInfo *store_op; // [rsp+48h] [rbp-38h]
  common::milog::MiLogStream v25; // [rsp+50h] [rbp-30h] BYREF

  ret = 0;
  __for_range = store_op_list;
  __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::begin(store_op_list).it_;
  __for_end.it_ = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::end(store_op_list).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator!=(
            &__for_begin,
            &__for_end) )
  {
    store_op = google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator*(&__for_begin);
    if ( proto::VintageMarketStoreOpInfo::help_uid(store_op) )
    {
      if ( *(_BYTE *)(((unsigned __int64)help_uid >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)help_uid & 7) + 3) >= *(_BYTE *)(((unsigned __int64)help_uid >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(help_uid);
      }
      if ( *help_uid )
      {
        common::milog::MiLogStream::create(
          &v25,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "checkAndRewriteStoreOperationOnHelp",
          2790);
        v3 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
               &v25,
               (const char (*)[40])"[Vintage] duplicate use help, store_id:");
        val = proto::VintageMarketStoreOpInfo::store_id(store_op);
        v4 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v3, &val);
        v5 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v4, (const char (*)[12])", round_id:");
        v6 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, &this->store_round_);
        v7 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v6, (const char (*)[12])", help_uid:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, help_uid);
        common::milog::MiLogStream::~MiLogStream(&v25);
        return -1;
      }
      v9 = proto::VintageMarketStoreOpInfo::help_skill_id(store_op);
      v10 = proto::VintageMarketStoreOpInfo::help_uid(store_op);
      v11 = v10;
      ret = VintageActivity::checkUseHelpModule(this, v10, v9);
      if ( ret )
      {
        common::milog::MiLogStream::create(
          &v25,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "checkAndRewriteStoreOperationOnHelp",
          2796);
        v12 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                &v25,
                (const char (*)[47])"[Vintage] checkUseHelpModule failed, store_id:");
        val = proto::VintageMarketStoreOpInfo::store_id(store_op);
        v13 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
        v14 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v13, (const char (*)[12])", round_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &this->store_round_);
        common::milog::MiLogStream::~MiLogStream(&v25);
        return ret;
      }
      v15 = proto::VintageMarketStoreOpInfo::help_uid(store_op);
      v16 = *(_BYTE *)(((unsigned __int64)help_uid >> 3) + 0x7FFF8000);
      LOBYTE(v11) = v16 != 0;
      v17 = (v16 != 0) & (unsigned __int8)((char)(((unsigned __int8)help_uid & 7) + 3) >= v16);
      if ( (_BYTE)v17 )
        __asan_report_store4(help_uid, v11, v17);
      *help_uid = v15;
    }
    google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator++(&__for_begin);
  }
  return ret;
};

// Line 2806: range 0000000014999C2E-000000001499A7A2
int32_t __cdecl VintageActivity::checkAndRewriteStoreOperationOnStrategy(
        VintageActivity *const this,
        const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *store_op_list,
        std::map<unsigned int,std::vector<unsigned int>> *store_chosen_skill_map)
{
  int32_t v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  __int64 v7; // r15
  common::milog::MiLogStream *v8; // rbx
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rbx
  std::pair<std::_Rb_tree_const_iterator<unsigned int>,bool> v11; // rax
  common::milog::MiLogStream *v12; // r14
  common::milog::MiLogStream *v13; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v14; // rax
  unsigned int slot_count; // r15d
  common::milog::MiLogStream *v16; // r14
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // r14
  common::milog::MiLogStream *v22; // r14
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r14
  std::pair<std::_Rb_tree_const_iterator<unsigned int>,bool> v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // r14
  const google::protobuf::RepeatedField<unsigned int> *v30; // rax
  std::vector<unsigned int> *v31; // r15
  std::vector<unsigned int> *v32; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >,bool> v33; // rax
  common::milog::MiLogStream *v34; // r14
  int v35; // r15d
  int32_t result; // eax
  int val; // [rsp+2Ch] [rbp-1D4h] BYREF
  google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::const_iterator __for_begin; // [rsp+30h] [rbp-1D0h] BYREF
  google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::const_iterator __for_end; // [rsp+38h] [rbp-1C8h] BYREF
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self __y; // [rsp+40h] [rbp-1C0h] BYREF
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_begin_0; // [rsp+48h] [rbp-1B8h]
  const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *__for_range; // [rsp+50h] [rbp-1B0h]
  const proto::VintageMarketStoreOpInfo *store_op; // [rsp+58h] [rbp-1A8h]
  const google::protobuf::RepeatedField<unsigned int> *__for_range_0; // [rsp+60h] [rbp-1A0h]
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_end_0; // [rsp+68h] [rbp-198h]
  common::milog::MiLogStream v47; // [rsp+70h] [rbp-190h] BYREF
  char v48[368]; // [rsp+90h] [rbp-170h] BYREF

  v4 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_3(320LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "5 48 4 13 skill_id:2835 64 8 15 store_iter:2823 96 24 14 skill_vec:2853 160 48 17 op_store_set:2"
                        "814 240 48 18 use_skill_set:2815";
  *(_QWORD *)(v4 + 16) = VintageActivity::checkAndRewriteStoreOperationOnStrategy;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -218959360;
  v6[536862723] = -234881024;
  v6[536862724] = -218959118;
  v6[536862726] = -219021312;
  v6[536862727] = 62194;
  v6[536862729] = -202116109;
  v7 = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::size(store_op_list);
  if ( v7 == std::map<unsigned int,VintageMarketStoreData>::size(&this->store_map_) )
  {
    std::set<unsigned int>::set((std::set<unsigned int> *const)(v4 + 160));
    std::set<unsigned int>::set((std::set<unsigned int> *const)(v4 + 240));
    __for_range = store_op_list;
    __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::begin(store_op_list).it_;
    __for_end.it_ = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::end(store_op_list).it_;
    while ( google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator!=(
              &__for_begin,
              &__for_end) )
    {
      store_op = google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator*(&__for_begin);
      val = proto::VintageMarketStoreOpInfo::store_id(store_op);
      v11 = std::set<unsigned int>::insert(
              (std::set<unsigned int> *const)(v4 + 160),
              (std::set<unsigned int>::value_type *)&val);
      if ( !v11.second )
      {
        common::milog::MiLogStream::create(
          &v47,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "checkAndRewriteStoreOperationOnStrategy",
          2820);
        v12 = common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
                &v47,
                (const char (*)[30])"[Vintage] duplicate store_id:");
        val = proto::VintageMarketStoreOpInfo::store_id(store_op);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)&val);
        common::milog::MiLogStream::~MiLogStream(&v47);
        v3 = -1;
        goto LABEL_33;
      }
      val = proto::VintageMarketStoreOpInfo::store_id(store_op);
      *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v4 + 64) = std::map<unsigned int,VintageMarketStoreData>::find(
                                                                                &this->store_map_,
                                                                                (const std::map<unsigned int,VintageMarketStoreData>::key_type *)&val);
      __y._M_node = std::map<unsigned int,VintageMarketStoreData>::end(&this->store_map_)._M_node;
      if ( std::operator==(
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v4 + 64),
             &__y) )
      {
        common::milog::MiLogStream::create(
          &v47,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "checkAndRewriteStoreOperationOnStrategy",
          2826);
        v13 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                &v47,
                (const char (*)[39])"[Vintage] store is not open, store_id:");
        val = proto::VintageMarketStoreOpInfo::store_id(store_op);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, (const unsigned int *)&val);
        common::milog::MiLogStream::~MiLogStream(&v47);
        v3 = -1;
        goto LABEL_33;
      }
      v14 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&v14->second.slot_count >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&v14->second.slot_count >> 3) + 0x7FFF8000) <= 3 )
      {
        v14 = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer)__asan_report_load4(&v14->second.slot_count);
      }
      slot_count = v14->second.slot_count;
      if ( slot_count < proto::VintageMarketStoreOpInfo::strategy_list_size(store_op) )
      {
        common::milog::MiLogStream::create(
          &v47,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "checkAndRewriteStoreOperationOnStrategy",
          2831);
        v16 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                &v47,
                (const char (*)[45])"[Vintage] store strategy count error, count:");
        *(_DWORD *)(v4 + 48) = proto::VintageMarketStoreOpInfo::strategy_list_size(store_op);
        v17 = common::milog::MiLogStream::operator<<<int,(int *)0>(v16, (const int *)(v4 + 48));
        v18 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v17, (const char (*)[14])", slot_count:");
        v19 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 64));
        v20 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &v19->second.slot_count);
        v21 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v20, (const char (*)[12])", store_id:");
        val = proto::VintageMarketStoreOpInfo::store_id(store_op);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, (const unsigned int *)&val);
        common::milog::MiLogStream::~MiLogStream(&v47);
        v3 = -1;
        goto LABEL_33;
      }
      __for_range_0 = proto::VintageMarketStoreOpInfo::strategy_list(store_op);
      __for_begin_0 = google::protobuf::RepeatedField<unsigned int>::begin(__for_range_0);
      __for_end_0 = google::protobuf::RepeatedField<unsigned int>::end(__for_range_0);
      while ( __for_begin_0 != __for_end_0 )
      {
        if ( *(_BYTE *)(((unsigned __int64)__for_begin_0 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)__for_begin_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__for_begin_0 >> 3)
                                                                          + 0x7FFF8000) )
        {
          __asan_report_load4(__for_begin_0);
        }
        *(_DWORD *)(v4 + 48) = *__for_begin_0;
        if ( !*(_DWORD *)(v4 + 48) )
        {
          common::milog::MiLogStream::create(
            &v47,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "checkAndRewriteStoreOperationOnStrategy",
            2839);
          v22 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                  &v47,
                  (const char (*)[38])"[Vintage] skill_id 0 error, store_id:");
          val = proto::VintageMarketStoreOpInfo::store_id(store_op);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, (const unsigned int *)&val);
          common::milog::MiLogStream::~MiLogStream(&v47);
          v3 = -1;
          goto LABEL_33;
        }
        if ( !common::tools::MiscUtils::isContains<std::unordered_set<unsigned int>,unsigned int>(
                &this->unlock_skill_set_,
                (const unsigned int *)(v4 + 48)) )
        {
          common::milog::MiLogStream::create(
            &v47,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "checkAndRewriteStoreOperationOnStrategy",
            2844);
          v23 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                  &v47,
                  (const char (*)[41])"[Vintage] skill is not unlock, skill_id:");
          v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v23,
                  (const unsigned int *)(v4 + 48));
          v25 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v24, (const char (*)[12])", store_id:");
          val = proto::VintageMarketStoreOpInfo::store_id(store_op);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v25, (const unsigned int *)&val);
          common::milog::MiLogStream::~MiLogStream(&v47);
          v3 = -1;
          goto LABEL_33;
        }
        v26 = std::set<unsigned int>::insert(
                (std::set<unsigned int> *const)(v4 + 240),
                (const std::set<unsigned int>::value_type *)(v4 + 48));
        if ( !v26.second )
        {
          common::milog::MiLogStream::create(
            &v47,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "checkAndRewriteStoreOperationOnStrategy",
            2849);
          v27 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                  &v47,
                  (const char (*)[45])"[Vintage] duplicate skill is used, skill_id:");
          v28 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v27,
                  (const unsigned int *)(v4 + 48));
          v29 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v28, (const char (*)[12])", store_id:");
          val = proto::VintageMarketStoreOpInfo::store_id(store_op);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v29, (const unsigned int *)&val);
          common::milog::MiLogStream::~MiLogStream(&v47);
          v3 = -1;
          goto LABEL_33;
        }
        ++__for_begin_0;
      }
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 96));
      v30 = proto::VintageMarketStoreOpInfo::strategy_list(store_op);
      common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(v30, (std::vector<unsigned int> *)(v4 + 96));
      v31 = std::move<std::vector<unsigned int> &>((std::vector<unsigned int> *)(v4 + 96));
      val = proto::VintageMarketStoreOpInfo::store_id(store_op);
      v33 = std::map<unsigned int,std::vector<unsigned int>>::emplace<unsigned int,std::vector<unsigned int>>(
              store_chosen_skill_map,
              (unsigned int *)&val,
              v31,
              (unsigned int *)&val,
              v32);
      if ( !v33.second )
      {
        common::milog::MiLogStream::create(
          &v47,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "checkAndRewriteStoreOperationOnStrategy",
          2857);
        v34 = common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
                &v47,
                (const char (*)[30])"[Vintage] duplicate store_id:");
        val = proto::VintageMarketStoreOpInfo::store_id(store_op);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v34, (const unsigned int *)&val);
        common::milog::MiLogStream::~MiLogStream(&v47);
        v3 = -1;
        v35 = 0;
      }
      else
      {
        v35 = 1;
      }
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 96));
      if ( v35 != 1 )
        goto LABEL_33;
      google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator++(&__for_begin);
    }
    v3 = 0;
LABEL_33:
    std::set<unsigned int>::~set((std::set<unsigned int> *const)(v4 + 240));
    std::set<unsigned int>::~set((std::set<unsigned int> *const)(v4 + 160));
  }
  else
  {
    common::milog::MiLogStream::create(
      &v47,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "checkAndRewriteStoreOperationOnStrategy",
      2810);
    v8 = common::milog::MiLogStream::operator<<<char [63],(char *[63])0>(
           &v47,
           (const char (*)[63])"[Vintage] op store size not equal to open store size, op_size:");
    val = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::size(store_op_list);
    v9 = common::milog::MiLogStream::operator<<<int,(int *)0>(v8, &val);
    v10 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v9, (const char (*)[14])", store_size:");
    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Base_ptr)std::map<unsigned int,VintageMarketStoreData>::size(&this->store_map_);
    common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v10, (const unsigned __int64 *)&__y);
    common::milog::MiLogStream::~MiLogStream(&v47);
    v3 = -1;
  }
  result = v3;
  if ( v48 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2865: range 000000001499AA7C-000000001499FC8F
int32_t __cdecl VintageActivity::marketFinishStorePlay(
        VintageActivity *const this,
        const proto::VintageMarketFinishStorePlayReq *req,
        proto::VintageMarketFinishStorePlayRsp *rsp_0)
{
  int32_t v3; // r14d
  unsigned __int64 v4; // r15
  __int64 v5; // rax
  _DWORD *v6; // r13
  google::protobuf::uint32 v7; // eax
  uint32_t store_round; // r12d
  uint32_t v9; // ecx
  char v10; // al
  common::milog::MiLogStream *v11; // r12
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  const ActivityVintageMarketExcelConfigMgr *v14; // rdx
  common::milog::MiLogStream *v15; // rax
  const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *v16; // rax
  const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *v17; // rax
  const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *v18; // rax
  PlayerBasicComp *BasicComp; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v20; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v21; // rax
  common::milog::MiLogStream *v22; // r12
  std::map<unsigned int,ActivityVintageMarketStoreConfig> *p_store_config_map; // r12
  common::milog::MiLogStream *v24; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v25; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v26; // rax
  common::milog::MiLogStream *v27; // r12
  common::milog::MiLogStream *v28; // rax
  common::milog::MiLogStream *v29; // rax
  __int64 v30; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v31; // rax
  common::milog::MiLogStream *v32; // r12
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // r12
  const google::protobuf::RepeatedField<unsigned int> *v35; // rax
  std::vector<unsigned int>::size_type v36; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v37; // rax
  std::vector<unsigned int>::size_type v38; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v39; // rax
  std::vector<unsigned int>::size_type v40; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v41; // rax
  std::vector<unsigned int>::size_type v42; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v43; // rax
  std::vector<unsigned int>::size_type v44; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v45; // rax
  char v46; // al
  common::milog::MiLogStream *v47; // r12
  common::milog::MiLogStream *v48; // rax
  common::milog::MiLogStream *v49; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v50; // rax
  common::milog::MiLogStream *v51; // rax
  common::milog::MiLogStream *v52; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v53; // rax
  common::milog::MiLogStream *v54; // rax
  common::milog::MiLogStream *v55; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v56; // rax
  int v57; // r12d
  std::vector<unsigned int>::size_type v58; // rax
  std::vector<unsigned int>::size_type v59; // rax
  std::vector<unsigned int>::size_type v60; // r12
  std::vector<unsigned int>::size_type v61; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v62; // rax
  std::vector<std::map<unsigned int,unsigned int>>::size_type v63; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v64; // rax
  std::vector<unsigned int>::size_type v65; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v66; // rax
  std::vector<float>::size_type v67; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v68; // rax
  char v69; // al
  std::vector<unsigned int>::reference v70; // rax
  unsigned int *v71; // rdx
  unsigned int v72; // r12d
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v73; // rax
  unsigned int *v74; // rcx
  int *v75; // r8
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v76; // rax
  const std::map<unsigned int,unsigned int> *v77; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v78; // rax
  const std::map<unsigned int,unsigned int> *v79; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v80; // rax
  const std::map<unsigned int,unsigned int>::key_type *v81; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v82; // rax
  const std::map<unsigned int,unsigned int> *v83; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v84; // rax
  const std::map<unsigned int,unsigned int> *v85; // rax
  common::milog::MiLogStream *v87; // rax
  common::milog::MiLogStream *v88; // rax
  common::milog::MiLogStream *v89; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v90; // rax
  const unsigned int *v91; // rax
  common::milog::MiLogStream *v92; // rax
  common::milog::MiLogStream *v93; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::pointer v94; // rdx
  unsigned int *p_second; // rax
  unsigned int second; // r12d
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::pointer v97; // rcx
  common::milog::MiLogStream *v98; // rax
  common::milog::MiLogStream *v99; // rax
  common::milog::MiLogStream *v100; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::pointer v101; // rax
  common::milog::MiLogStream *v102; // rax
  common::milog::MiLogStream *v103; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v104; // rax
  const unsigned int *v105; // rax
  common::milog::MiLogStream *v106; // rax
  common::milog::MiLogStream *v107; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::pointer v108; // rax
  common::milog::MiLogStream *v109; // rax
  common::milog::MiLogStream *v110; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::pointer v111; // rdx
  unsigned int *v112; // rax
  unsigned int v113; // r12d
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::pointer v114; // rcx
  int v115; // r12d
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v116; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v117; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v118; // rax
  google::protobuf::uint32 v119; // eax
  const google::protobuf::RepeatedField<unsigned int> *v120; // rax
  uint32_t v121; // eax
  common::milog::MiLogStream *v122; // rax
  common::milog::MiLogStream *v123; // rax
  common::milog::MiLogStream *v124; // r12
  int v125; // r12d
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v126; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v127; // rax
  std::vector<unsigned int>::size_type v128; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v129; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v130; // rax
  unsigned int *v131; // rax
  int *v132; // r8
  uint32_t v133; // eax
  common::milog::MiLogStream *v134; // rax
  common::milog::MiLogStream *v135; // rax
  common::milog::MiLogStream *v136; // r12
  int v137; // r12d
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v138; // rax
  std::vector<std::pair<unsigned int,int>>::size_type v139; // r12
  std::vector<std::pair<unsigned int,int>>::size_type v140; // r12
  std::vector<unsigned int>::size_type v141; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v142; // rax
  std::vector<unsigned int>::size_type v143; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v144; // rax
  std::vector<float>::size_type v145; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v146; // rax
  std::vector<std::pair<unsigned int,int>>::reference v148; // rdx
  int *v149; // rax
  std::vector<std::pair<unsigned int,int>>::reference v150; // rax
  unsigned int *v151; // rdx
  unsigned int v152; // r12d
  std::vector<std::pair<unsigned int,int>>::reference v153; // rcx
  char v154; // al
  common::milog::MiLogStream *v155; // r12
  std::vector<std::pair<unsigned int,int>>::reference v156; // rax
  common::milog::MiLogStream *v157; // rax
  common::milog::MiLogStream *v158; // r12
  std::vector<std::pair<unsigned int,int>>::reference v159; // rax
  common::milog::MiLogStream *v160; // rax
  common::milog::MiLogStream *v161; // rax
  std::vector<std::pair<unsigned int,int>>::reference v162; // rdx
  int *v163; // rax
  std::vector<std::pair<unsigned int,int>>::reference v164; // rax
  unsigned int *v165; // rdx
  unsigned int v166; // r12d
  std::vector<std::pair<unsigned int,int>>::reference v167; // rcx
  char v168; // al
  common::milog::MiLogStream *v169; // r12
  std::vector<std::pair<unsigned int,int>>::reference v170; // rax
  common::milog::MiLogStream *v171; // rax
  common::milog::MiLogStream *v172; // r12
  std::vector<std::pair<unsigned int,int>>::reference v173; // rax
  common::milog::MiLogStream *v174; // rax
  common::milog::MiLogStream *v175; // rax
  std::vector<std::pair<unsigned int,int>>::reference v176; // rax
  int *v177; // rdx
  int v178; // r12d
  std::vector<std::pair<unsigned int,int>>::reference v179; // rcx
  std::vector<std::pair<unsigned int,int>>::reference v180; // rax
  int *v181; // rdx
  int v182; // r12d
  std::vector<std::pair<unsigned int,int>>::reference v183; // rcx
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v184; // rax
  __gnu_cxx::__alloc_traits<std::allocator<float>,float>::value_type *v185; // rax
  float *v186; // rdx
  float v187; // xmm0_4
  common::milog::MiLogStream *v188; // rax
  common::milog::MiLogStream *v189; // rax
  common::milog::MiLogStream *v190; // rax
  common::milog::MiLogStream *v191; // rax
  common::milog::MiLogStream *v192; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v193; // rax
  std::vector<unsigned int>::const_reference v194; // rax
  _DWORD *v195; // rdx
  common::milog::MiLogStream *v196; // rax
  common::milog::MiLogStream *v197; // rax
  common::milog::MiLogStream *v198; // rax
  common::milog::MiLogStream *v199; // rax
  common::milog::MiLogStream *v200; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v201; // rax
  const unsigned int *v202; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v203; // rax
  std::vector<unsigned int>::const_reference v204; // rax
  _DWORD *v205; // rdx
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v206; // rax
  std::vector<unsigned int>::reference v207; // rax
  _DWORD *v208; // rdx
  int v209; // r12d
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v210; // rax
  uint32_t v211; // eax
  common::milog::MiLogStream *v212; // rax
  common::milog::MiLogStream *v213; // rax
  common::milog::MiLogStream *v214; // r12
  uint32_t v215; // eax
  common::milog::MiLogStream *v216; // rax
  common::milog::MiLogStream *v217; // rax
  common::milog::MiLogStream *v218; // r12
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v219; // rax
  int reward_factor_low; // xmm0_4
  float v221; // xmm1_4
  __m128i v222; // xmm0
  common::milog::MiLogStream *v223; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v224; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v225; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v226; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v227; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v228; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v229; // rax
  char *v230; // rsi
  std::map<unsigned int,float>::mapped_type *v231; // rax
  _DWORD *v232; // rdx
  char v233; // cl
  std::vector<unsigned int> *v234; // r12
  std::vector<unsigned int> *v235; // rax
  std::vector<unsigned int> *v236; // r12
  std::vector<unsigned int> *v237; // rax
  std::map<unsigned int,unsigned int>::mapped_type v238; // r12d
  std::map<unsigned int,unsigned int>::mapped_type *v239; // rcx
  __int64 v240; // rsi
  int v241; // r12d
  int v242; // r12d
  google::protobuf::RepeatedField<unsigned int> *v243; // rax
  PlayerItemComp *ItemComp; // rax
  common::milog::MiLogStream *v245; // rax
  common::milog::MiLogStream *v246; // rax
  common::milog::MiLogStream *v247; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v248; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v249; // rax
  bool v250; // r12
  common::milog::MiLogStream *v251; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v252; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v253; // rax
  common::milog::MiLogStream *v254; // rax
  common::milog::MiLogStream *v255; // rax
  common::milog::MiLogStream *v256; // rax
  common::milog::MiLogStream *v257; // rax
  common::milog::MiLogStream *v258; // rax
  common::milog::MiLogStream *v259; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v260; // rax
  ActivityVintageMarketExcelConfigMgr *p_activity_vintage_market_config_mgr; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v262; // rax
  std::vector<unsigned int>::reference v263; // rax
  uint32_t *v264; // rdx
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v265; // rax
  std::vector<unsigned int>::reference v266; // rax
  unsigned int *v267; // rdx
  __m128i v268; // xmm0
  __m128i v269; // xmm0
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v270; // rcx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v271; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v272; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v273; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v274; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,float> >::pointer v275; // rdx
  float *v276; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v277; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v278; // r12
  std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::pointer v279; // rdx
  unsigned int *v280; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,float> >::pointer v281; // rdx
  float *v282; // rax
  __m128i v283; // xmm0
  std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::pointer v284; // rdx
  unsigned int *v285; // rax
  __m128i v286; // xmm0
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v287; // rdx
  float *p_income_b_factor; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer v289; // rdx
  uint32_t *p_fixed_income; // rax
  __m128i v291; // xmm0
  int v292; // r12d
  google::protobuf::Map<unsigned int,unsigned int> *v293; // rax
  std::tuple_element<0,std::pair<unsigned int const,VintageMarketStoreData> >::type *v294; // rsi
  unsigned int *v295; // rax
  float *v296; // r8
  int *v297; // rdx
  char v298; // cl
  float v299; // xmm0_4
  float v300; // xmm0_4
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v301; // r12
  float v302; // xmm0_4
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v303; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v304; // r12
  float v305; // xmm0_4
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v306; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v307; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v308; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v309; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v310; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v311; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v312; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v313; // rax
  PlayerItemComp *v314; // rax
  PlayerItemComp *v315; // r12
  uint32_t ActivityCoin; // ecx
  char v317; // dl
  __int64 v318; // rsi
  __int64 v319; // rdx
  __int64 v320; // rdx
  char v321; // al
  __int64 v322; // rsi
  common::milog::MiLogStream *v323; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v324; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v326; // rax
  std::vector<unsigned int>::reference v327; // rax
  unsigned int *v328; // rdx
  unsigned int v329; // r12d
  std::vector<unsigned int>::reference v330; // rax
  unsigned int *v331; // rdx
  SelectType v332; // r12d
  __int64 v333; // rsi
  std::vector<unsigned int>::reference v334; // rax
  SelectType *v335; // rdx
  char v336; // cl
  PlayerItemComp *v337; // rax
  char *v338; // rsi
  uint32_t v339; // ecx
  char v340; // dl
  __int64 v341; // rdx
  google::protobuf::RepeatedField<unsigned int> *v342; // rax
  google::protobuf::RepeatedField<unsigned int> *v343; // rsi
  google::protobuf::uint32 v344; // edx
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v345; // r12
  google::protobuf::uint32 v346; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v347; // r12
  int v348; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v349; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v350; // r12
  google::protobuf::uint32 v351; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v352; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v353; // rax
  google::protobuf::uint32 v354; // eax
  google::protobuf::uint32 v355; // eax
  google::protobuf::RepeatedField<unsigned int> *v356; // r12
  const google::protobuf::RepeatedField<unsigned int> *v357; // rax
  google::protobuf::RepeatedField<unsigned int> *v358; // r12
  const google::protobuf::RepeatedField<unsigned int> *v359; // rax
  google::protobuf::uint32 v360; // eax
  google::protobuf::uint32 v361; // eax
  Player *player; // r12
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v363; // r12
  unsigned int v364; // eax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v365; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v366; // rcx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v367; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v368; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v369; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v370; // rax
  Player *v371; // r12
  Player *v372; // r12
  VintageActivity::marketFinishStorePlay::<lambda(uint32_t, const std::vector<data::VintageMarketEffectExcelConfig>&)>_1 v374; // [rsp-30h] [rbp-870h]
  VintageActivity::marketFinishStorePlay::<lambda(uint32_t, const std::vector<data::VintageMarketEffectExcelConfig>&)>_2 v375; // [rsp-20h] [rbp-860h]
  std::string v376; // [rsp+0h] [rbp-840h]
  int v377; // [rsp+Ch] [rbp-834h]
  float b; // [rsp+20h] [rbp-820h]
  float ba; // [rsp+20h] [rbp-820h]
  bool is_finish_reward_cond; // [rsp+5Fh] [rbp-7E1h]
  unsigned int cost; // [rsp+60h] [rbp-7E0h]
  unsigned int store_idx; // [rsp+64h] [rbp-7DCh]
  uint32_t idx; // [rsp+68h] [rbp-7D8h]
  unsigned int total_income_b; // [rsp+6Ch] [rbp-7D4h]
  uint32_t idx_0; // [rsp+70h] [rbp-7D0h]
  uint32_t idx_1; // [rsp+74h] [rbp-7CCh]
  uint32_t help_cd_round; // [rsp+78h] [rbp-7C8h]
  uint32_t cur_coin_c_num; // [rsp+7Ch] [rbp-7C4h]
  float single_store_income_b; // [rsp+80h] [rbp-7C0h]
  float single_attr_product; // [rsp+84h] [rbp-7BCh]
  uint32_t help_skill_id; // [rsp+88h] [rbp-7B8h]
  unsigned int aim_attr; // [rsp+8Ch] [rbp-7B4h]
  google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::const_iterator __for_begin; // [rsp+90h] [rbp-7B0h] BYREF
  std::map<unsigned int,VintageMarketStoreData>::iterator __for_begin_0; // [rsp+98h] [rbp-7A8h] BYREF
  const ActivityVintageMarketExcelConfigMgr *config_mgr; // [rsp+A0h] [rbp-7A0h]
  const data::VintageMarketConstValueExcelConfig *activity_const_value_config_ptr; // [rsp+A8h] [rbp-798h]
  const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *__for_range; // [rsp+B0h] [rbp-790h]
  std::map<unsigned int,VintageMarketStoreData> *__for_range_0; // [rsp+B8h] [rbp-788h]
  std::map<unsigned int,VintageMarketStoreData> *__for_range_1; // [rsp+C0h] [rbp-780h]
  const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *__for_range_2; // [rsp+C8h] [rbp-778h]
  const proto::VintageMarketStoreOpInfo *op; // [rsp+D0h] [rbp-770h]
  proto_log::VintageMarketStoreRoundLog *store_log; // [rsp+D8h] [rbp-768h]
  std::pair<unsigned int const,VintageMarketStoreData> *v405; // [rsp+E0h] [rbp-760h]
  std::tuple_element<0,std::pair<unsigned int const,VintageMarketStoreData> >::type *id_0; // [rsp+E8h] [rbp-758h]
  std::tuple_element<1,std::pair<unsigned int const,VintageMarketStoreData> >::type *store_data_0; // [rsp+F0h] [rbp-750h]
  std::pair<unsigned int const,VintageMarketStoreData> *__in; // [rsp+F8h] [rbp-748h]
  std::tuple_element<0,std::pair<unsigned int const,VintageMarketStoreData> >::type *id; // [rsp+100h] [rbp-740h]
  std::tuple_element<1,std::pair<unsigned int const,VintageMarketStoreData> >::type *store_data; // [rsp+108h] [rbp-738h]
  const proto::VintageMarketStoreOpInfo *store_op; // [rsp+110h] [rbp-730h]
  google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::const_iterator __for_end; // [rsp+118h] [rbp-728h] BYREF
  std::shared_ptr<google::protobuf::Message> v413; // [rsp+120h] [rbp-720h] BYREF
  std::shared_ptr<google::protobuf::Message> v414; // [rsp+130h] [rbp-710h] BYREF
  common::milog::MiLogStream v415; // [rsp+140h] [rbp-700h] BYREF
  common::milog::MiLogStream v416; // [rsp+160h] [rbp-6E0h] BYREF
  common::milog::MiLogStream v417; // [rsp+180h] [rbp-6C0h] BYREF
  common::milog::MiLogStream v418; // [rsp+1A0h] [rbp-6A0h] BYREF
  common::milog::MiLogStream v419; // [rsp+1C0h] [rbp-680h] BYREF
  common::milog::MiLogStream v420; // [rsp+1E0h] [rbp-660h] BYREF
  VintageActivity::marketFinishStorePlay::<lambda(uint32_t, const std::vector<data::VintageMarketEffectExcelConfig>&)>_1 v421; // [rsp+200h] [rbp-640h]
  char v422[1552]; // [rsp+230h] [rbp-610h] BYREF

  v4 = (unsigned __int64)v422;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_5(1504LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "33 48 1 23 log_context_holder:2908 64 4 8 ret:2867 80 4 13 help_uid:2893 96 4 18 return_coin_b:2"
                        "917 112 4 26 display_return_coin_b:2918 128 4 15 fix_income:3102 144 4 18 income_factor:3103 160"
                        " 4 19 total_income_a:3153 176 4 16 single_cost:2997 192 8 15 store_iter:2927 224 8 22 store_conf"
                        "ig_iter:3161 256 8 28 store_round_config_iter:3167 288 8 24 high_attr_cost_iter:2981 320 8 23 cu"
                        "r_attr_cost_iter:2982 352 8 22 fixed_income_iter:3186 384 16 17 operation_ss:2921 416 16 19 sub_"
                        "item_param:3141 448 16 14 result_ss:3156 480 16 12 log_ptr:3303 512 24 23 low_attr_store_vec:291"
                        "5 576 24 17 add_attr_vec:2954 640 24 28 base_buff_attr_pair_vec:2969 704 24 13 cost_vec:2970 768"
                        " 24 11 reason:3223 832 24 19 item_param_vec:3224 896 24 26 trigger_env_event_vec:3285 960 24 26 "
                        "trigger_npc_event_vec:3286 1024 48 27 store_chosen_skill_map:2892 1104 48 23 store_add_attr_map:"
                        "2911 1184 48 24 store_actu_attr_map:2912 1264 48 32 store_income_correction_map:2913 1344 48 28 "
                        "store_reward_factor_map:2914 1424 48 21 store_income_map:3155";
  *(_QWORD *)(v4 + 16) = VintageActivity::marketFinishStorePlay;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234753551;
  v6[536862722] = -234556924;
  v6[536862723] = -234556924;
  v6[536862724] = -234556924;
  v6[536862725] = -234556924;
  v6[536862726] = -218959360;
  v6[536862727] = -218959360;
  v6[536862728] = -218959360;
  v6[536862729] = -218959360;
  v6[536862730] = -218959360;
  v6[536862731] = -218959360;
  v6[536862732] = -219021312;
  v6[536862733] = -219021312;
  v6[536862734] = -219021312;
  v6[536862735] = -219021312;
  v6[536862736] = -234881024;
  v6[536862737] = -218959118;
  v6[536862738] = -234881024;
  v6[536862739] = -218959118;
  v6[536862740] = -234881024;
  v6[536862741] = -218959118;
  v6[536862742] = -234881024;
  v6[536862743] = -218959118;
  v6[536862744] = -234881024;
  v6[536862745] = -218959118;
  v6[536862746] = -234881024;
  v6[536862747] = -218959118;
  v6[536862748] = -234881024;
  v6[536862749] = -218959118;
  v6[536862750] = -234881024;
  v6[536862751] = -218959118;
  v6[536862753] = -219021312;
  v6[536862754] = 62194;
  v6[536862756] = -218959118;
  v6[536862758] = -219021312;
  v6[536862759] = 62194;
  v6[536862761] = -218959118;
  v6[536862763] = -219021312;
  v6[536862764] = 62194;
  v6[536862766] = -202116109;
  v7 = proto::VintageMarketFinishStorePlayReq::store_round(req);
  proto::VintageMarketFinishStorePlayRsp::set_store_round(rsp_0, v7);
  *(_DWORD *)(v4 + 64) = VintageActivity::checkCanPlayMarketStoreContent(this);
  if ( *(_DWORD *)(v4 + 64) )
  {
    v3 = *(_DWORD *)(v4 + 64);
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v414);
    config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v414)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v414);
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    store_round = this->store_round_;
    if ( store_round != proto::VintageMarketFinishStorePlayReq::store_round(req) )
      goto LABEL_12;
    v9 = proto::VintageMarketFinishStorePlayReq::store_round(req);
    if ( *(_BYTE *)(((unsigned __int64)&config_mgr->max_round >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&config_mgr->max_round >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&config_mgr->max_round);
    }
    if ( v9 <= config_mgr->max_round )
      v10 = 0;
    else
LABEL_12:
      v10 = 1;
    if ( v10 )
    {
      common::milog::MiLogStream::create(
        &v420,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "marketFinishStorePlay",
        2876);
      v11 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
              &v420,
              (const char (*)[45])"[Vintage] store round is not correct, round:");
      *(_DWORD *)(v4 + 176) = proto::VintageMarketFinishStorePlayReq::store_round(req);
      v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v11,
              (const unsigned int *)(v4 + 176));
      v13 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v12, (const char (*)[13])", cur_round:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &this->store_round_);
      common::milog::MiLogStream::~MiLogStream(&v420);
      v3 = -1;
    }
    else
    {
      v14 = config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->activity_id_);
      }
      activity_const_value_config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketConstValueExcelConfig(
                                          v14,
                                          this->activity_id_);
      if ( activity_const_value_config_ptr )
      {
        v16 = proto::VintageMarketFinishStorePlayReq::store_op_list(req);
        *(_DWORD *)(v4 + 64) = VintageActivity::checkStoreOperationOnStore(this, v16);
        if ( *(_DWORD *)(v4 + 64) )
        {
          v3 = *(_DWORD *)(v4 + 64);
        }
        else
        {
          std::map<unsigned int,std::vector<unsigned int>>::map((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1024));
          *(_DWORD *)(v4 + 80) = 0;
          if ( *(_BYTE *)(((unsigned __int64)&activity_const_value_config_ptr->help_cd_round >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)activity_const_value_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&activity_const_value_config_ptr->help_cd_round >> 3)
                                                                                           + 0x7FFF8000) )
          {
            __asan_report_load4(&activity_const_value_config_ptr->help_cd_round);
          }
          help_cd_round = activity_const_value_config_ptr->help_cd_round;
          v17 = proto::VintageMarketFinishStorePlayReq::store_op_list(req);
          *(_DWORD *)(v4 + 64) = VintageActivity::checkAndRewriteStoreOperationOnStrategy(
                                   this,
                                   v17,
                                   (std::map<unsigned int,std::vector<unsigned int>> *)(v4 + 1024));
          if ( *(_DWORD *)(v4 + 64) )
          {
            v3 = *(_DWORD *)(v4 + 64);
          }
          else
          {
            v18 = proto::VintageMarketFinishStorePlayReq::store_op_list(req);
            *(_DWORD *)(v4 + 64) = VintageActivity::checkAndRewriteStoreOperationOnHelp(
                                     this,
                                     v18,
                                     (uint32_t *)(v4 + 80));
            if ( *(_DWORD *)(v4 + 64) )
            {
              v3 = *(_DWORD *)(v4 + 64);
            }
            else
            {
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->player_);
              BasicComp = Player::getBasicComp(this->player_);
              PlayerBasicComp::getNextTransNo[abi:cxx11]((std::string *)&v420, BasicComp);
              StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v4 + 48), 0xE6Eu, v376);
              std::string::~string(&v420);
              std::map<unsigned int,std::vector<unsigned int>>::map((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1104));
              std::map<unsigned int,std::vector<unsigned int>>::map((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1184));
              std::map<unsigned int,unsigned int>::map((std::map<unsigned int,unsigned int> *const)(v4 + 1264));
              std::map<unsigned int,float>::map((std::map<unsigned int,float> *const)(v4 + 1344));
              std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 512));
              cost = 0;
              *(_DWORD *)(v4 + 96) = 0;
              *(_DWORD *)(v4 + 112) = 0;
              store_idx = 0;
              common::tools::StringStream<common::tools::FixedBuffer<4096>>::StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384));
              common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384),
                "[VintageMarketSettle]");
              __for_range = proto::VintageMarketFinishStorePlayReq::store_op_list(req);
              __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::begin(__for_range).it_;
              __for_begin_0._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Base_ptr)google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::end(__for_range).it_;
              while ( google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator!=(
                        &__for_begin,
                        (const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageMarketStoreOpInfo>::iterator *)&__for_begin_0) )
              {
                store_op = google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator*(&__for_begin);
                ++store_idx;
                v20 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                        (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384),
                        "{store");
                v21 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v20, store_idx);
                common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v21, ":");
                *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v4 + 192) = std::map<unsigned int,VintageMarketStoreData>::find(
                                                                                           &this->store_map_,
                                                                                           (const std::map<unsigned int,VintageMarketStoreData>::key_type *)(v4 + 176));
                __for_end.it_ = (void *const *)std::map<unsigned int,VintageMarketStoreData>::end(&this->store_map_)._M_node;
                if ( std::operator==(
                       (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v4 + 192),
                       (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)&__for_end) )
                {
                  common::milog::MiLogStream::create(
                    &v419,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/vintage_activity.cpp",
                    "marketFinishStorePlay",
                    2930);
                  v22 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                          &v419,
                          (const char (*)[39])"[Vintage] store is not open, store_id:");
                  *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v22,
                    (const unsigned int *)(v4 + 176));
                  common::milog::MiLogStream::~MiLogStream(&v419);
                  v3 = -1;
                  goto LABEL_306;
                }
                p_store_config_map = &config_mgr->store_config_map;
                *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                *(std::map<unsigned int,ActivityVintageMarketStoreConfig>::const_iterator *)(v4 + 224) = std::map<unsigned int,ActivityVintageMarketStoreConfig>::find(p_store_config_map, (const std::map<unsigned int,ActivityVintageMarketStoreConfig>::key_type *)(v4 + 176));
                __for_end.it_ = (void *const *)std::map<unsigned int,ActivityVintageMarketStoreConfig>::end(&config_mgr->store_config_map)._M_node;
                if ( std::operator==(
                       (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)(v4 + 224),
                       (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)&__for_end) )
                {
                  common::milog::MiLogStream::create(
                    &v419,
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/player/activity/vintage_activity.cpp",
                    "marketFinishStorePlay",
                    2937);
                  v24 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                          &v419,
                          (const char (*)[46])"[Vintage] find store config failed, store_id:");
                  *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v24,
                    (const unsigned int *)(v4 + 176));
                  common::milog::MiLogStream::~MiLogStream(&v419);
                  v3 = -1;
                  goto LABEL_306;
                }
                v25 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                *(std::map<unsigned int,ActivityVintageMarketStoreRoundConfig>::const_iterator *)(v4 + 256) = std::map<unsigned int,ActivityVintageMarketStoreRoundConfig>::find(&v25->second.round_config_map, &this->store_round_);
                v26 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                __for_end.it_ = (void *const *)std::map<unsigned int,ActivityVintageMarketStoreRoundConfig>::end(&v26->second.round_config_map)._M_node;
                if ( std::operator==(
                       (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::_Self *)(v4 + 256),
                       (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::_Self *)&__for_end) )
                {
                  common::milog::MiLogStream::create(
                    &v419,
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/player/activity/vintage_activity.cpp",
                    "marketFinishStorePlay",
                    2943);
                  v27 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                          &v419,
                          (const char (*)[52])"[Vintage] find store round config failed, store_id:");
                  *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                  v28 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v27,
                          (const unsigned int *)(v4 + 176));
                  v29 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                          v28,
                          (const char (*)[12])", round_id:");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v29, &this->store_round_);
                  common::milog::MiLogStream::~MiLogStream(&v419);
                  v3 = -1;
                  goto LABEL_306;
                }
                v30 = proto::VintageMarketStoreOpInfo::add_attr_list_size(store_op);
                v31 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                if ( v30 != std::vector<unsigned int>::size(&v31->second.attr_vec) )
                {
                  common::milog::MiLogStream::create(
                    &v419,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/vintage_activity.cpp",
                    "marketFinishStorePlay",
                    2950);
                  v32 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                          &v419,
                          (const char (*)[47])"[Vintage] store add attr size error, store_id:");
                  *(_DWORD *)(v4 + 160) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                  v33 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v32,
                          (const unsigned int *)(v4 + 160));
                  v34 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v33, (const char (*)[8])", size:");
                  *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::add_attr_list_size(store_op);
                  common::milog::MiLogStream::operator<<<int,(int *)0>(v34, (const int *)(v4 + 176));
                  common::milog::MiLogStream::~MiLogStream(&v419);
                  v3 = -1;
                  goto LABEL_306;
                }
                std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 576));
                v35 = proto::VintageMarketStoreOpInfo::add_attr_list(store_op);
                common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(
                  v35,
                  (std::vector<unsigned int> *)(v4 + 576));
                v36 = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 576));
                v37 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                if ( v36 != std::vector<unsigned int>::size(&v37->second.attr_vec) )
                  goto LABEL_45;
                v38 = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 576));
                v39 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                if ( v38 != std::vector<unsigned int>::size(&v39->second.aim_attr_vec) )
                  goto LABEL_45;
                v40 = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 576));
                v41 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                if ( v40 == std::vector<unsigned int>::size(&v41->second.max_attr_vec)
                  && (v42 = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 576)),
                      v43 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v4 + 256)),
                      v42 == std::vector<float>::size(&v43->second.attr_low_limit_factor_vec))
                  && (v44 = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 576)),
                      v45 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224)),
                      v44 == std::vector<std::map<unsigned int,unsigned int>>::size(&v45->second.attr_level_cost_map_vec)) )
                {
                  v46 = 0;
                }
                else
                {
LABEL_45:
                  v46 = 1;
                }
                if ( v46 )
                {
                  common::milog::MiLogStream::create(
                    &v419,
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/player/activity/vintage_activity.cpp",
                    "marketFinishStorePlay",
                    2963);
                  v47 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                          &v419,
                          (const char (*)[45])"[Vintage] attr vec size error, op_attr_size:");
                  *(_QWORD *)(v4 + 288) = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 576));
                  v48 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                          v47,
                          (const unsigned __int64 *)(v4 + 288));
                  v49 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(
                          v48,
                          (const char (*)[19])", store_attr_size:");
                  v50 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                  *(_QWORD *)(v4 + 320) = std::vector<unsigned int>::size(&v50->second.attr_vec);
                  v51 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                          v49,
                          (const unsigned __int64 *)(v4 + 320));
                  v52 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
                          v51,
                          (const char (*)[23])", store_max_attr_size:");
                  v53 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                  *(_QWORD *)(v4 + 352) = std::vector<unsigned int>::size(&v53->second.max_attr_vec);
                  v54 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                          v52,
                          (const unsigned __int64 *)(v4 + 352));
                  v55 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
                          v54,
                          (const char (*)[23])", round_low_attr_size:");
                  v56 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v4 + 256));
                  __for_end.it_ = (void *const *)std::vector<float>::size(&v56->second.attr_low_limit_factor_vec);
                  common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                    v55,
                    (const unsigned __int64 *)&__for_end);
                  common::milog::MiLogStream::~MiLogStream(&v419);
                  v3 = -1;
                  v57 = 0;
                }
                else
                {
                  std::vector<std::pair<unsigned int,int>>::vector((std::vector<std::pair<unsigned int,int>> *const)(v4 + 640));
                  std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 704));
                  v58 = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 576));
                  std::vector<std::pair<unsigned int,int>>::reserve(
                    (std::vector<std::pair<unsigned int,int>> *const)(v4 + 640),
                    v58);
                  v59 = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 576));
                  std::vector<unsigned int>::reserve((std::vector<unsigned int> *const)(v4 + 704), v59);
                  for ( *(_DWORD *)(v4 + 128) = 0; ; ++*(_DWORD *)(v4 + 128) )
                  {
                    v60 = *(unsigned int *)(v4 + 128);
                    if ( v60 >= std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 576)) )
                      goto LABEL_56;
                    v61 = *(unsigned int *)(v4 + 128);
                    v62 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                    if ( v61 >= std::vector<unsigned int>::size(&v62->second.attr_vec)
                      || (v63 = *(unsigned int *)(v4 + 128),
                          v64 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224)),
                          v63 >= std::vector<std::map<unsigned int,unsigned int>>::size(&v64->second.attr_level_cost_map_vec))
                      || (v65 = *(unsigned int *)(v4 + 128),
                          v66 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224)),
                          v65 >= std::vector<unsigned int>::size(&v66->second.max_attr_vec))
                      || (v67 = *(unsigned int *)(v4 + 128),
                          v68 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v4 + 256)),
                          v67 >= std::vector<float>::size(&v68->second.attr_low_limit_factor_vec)) )
                    {
LABEL_56:
                      v69 = 0;
                    }
                    else
                    {
                      v69 = 1;
                    }
                    if ( !v69 )
                      break;
                    v70 = std::vector<unsigned int>::operator[](
                            (std::vector<unsigned int> *const)(v4 + 576),
                            *(unsigned int *)(v4 + 128));
                    v71 = v70;
                    if ( *(_BYTE *)(((unsigned __int64)v70 >> 3) + 0x7FFF8000) != 0
                      && (char)(((unsigned __int8)v70 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v70 >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_load4(v70);
                    }
                    v72 = *v71;
                    v73 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                    v74 = std::vector<unsigned int>::operator[](&v73->second.attr_vec, *(unsigned int *)(v4 + 128));
                    if ( *(_BYTE *)(((unsigned __int64)v74 >> 3) + 0x7FFF8000) != 0
                      && (char)(((unsigned __int8)v74 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v74 >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_load4(v74);
                    }
                    *(_DWORD *)(v4 + 144) = SAFE_ADD<unsigned int,unsigned int>(*v74, v72);
                    *(_DWORD *)(v4 + 160) = 0;
                    std::vector<std::pair<unsigned int,int>>::emplace_back<unsigned int &,int>(
                      (std::vector<std::pair<unsigned int,int>> *const)(v4 + 640),
                      (unsigned int *)(v4 + 144),
                      (int *)(v4 + 160),
                      (unsigned int *)(v4 + 144),
                      v75);
                    v76 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                    v77 = std::vector<std::map<unsigned int,unsigned int>>::operator[](
                            &v76->second.attr_level_cost_map_vec,
                            *(unsigned int *)(v4 + 128));
                    *(std::map<unsigned int,unsigned int>::const_iterator *)(v4 + 288) = std::map<unsigned int,unsigned int>::find(
                                                                                           v77,
                                                                                           (const std::map<unsigned int,unsigned int>::key_type *)(v4 + 144));
                    v78 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                    v79 = std::vector<std::map<unsigned int,unsigned int>>::operator[](
                            &v78->second.attr_level_cost_map_vec,
                            *(unsigned int *)(v4 + 128));
                    v80 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                    v81 = std::vector<unsigned int>::operator[](&v80->second.attr_vec, *(unsigned int *)(v4 + 128));
                    *(std::map<unsigned int,unsigned int>::const_iterator *)(v4 + 320) = std::map<unsigned int,unsigned int>::find(
                                                                                           v79,
                                                                                           v81);
                    v82 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                    v83 = std::vector<std::map<unsigned int,unsigned int>>::operator[](
                            &v82->second.attr_level_cost_map_vec,
                            *(unsigned int *)(v4 + 128));
                    *(std::map<unsigned int,unsigned int>::const_iterator *)(v4 + 352) = std::map<unsigned int,unsigned int>::end(v83);
                    if ( std::operator==(
                           (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)(v4 + 288),
                           (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)(v4 + 352))
                      || (v84 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224)),
                          v85 = std::vector<std::map<unsigned int,unsigned int>>::operator[](
                                  &v84->second.attr_level_cost_map_vec,
                                  *(unsigned int *)(v4 + 128)),
                          __for_end.it_ = (void *const *)std::map<unsigned int,unsigned int>::end(v85)._M_node,
                          std::operator==(
                            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)(v4 + 320),
                            (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_end)) )
                    {
                      common::milog::MiLogStream::create(
                        &v418,
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/player/activity/vintage_activity.cpp",
                        "marketFinishStorePlay",
                        2986);
                      v87 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
                              &v418,
                              (const char (*)[51])"[Vintage] find attr level cost failed, high_level:");
                      v88 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                              v87,
                              (const unsigned int *)(v4 + 144));
                      v89 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                              v88,
                              (const char (*)[13])", cur_level:");
                      v90 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                      v91 = std::vector<unsigned int>::operator[](&v90->second.attr_vec, *(unsigned int *)(v4 + 128));
                      v92 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v89, v91);
                      v93 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                              v92,
                              (const char (*)[12])", attr_idx:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v93,
                        (const unsigned int *)(v4 + 128));
                      common::milog::MiLogStream::~MiLogStream(&v418);
                      v3 = -1;
LABEL_79:
                      v115 = 0;
                      goto LABEL_185;
                    }
                    v94 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)(v4 + 288));
                    p_second = &v94->second;
                    if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
                      && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3)
                                                                                 + 0x7FFF8000) )
                    {
                      __asan_report_load4(p_second);
                    }
                    second = v94->second;
                    v97 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)(v4 + 320));
                    if ( *(_BYTE *)(((unsigned __int64)&v97->second >> 3) + 0x7FFF8000) != 0
                      && (char)((((_BYTE)v97 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&v97->second >> 3)
                                                                        + 0x7FFF8000) )
                    {
                      __asan_report_load4(&v97->second);
                    }
                    if ( second < v97->second )
                    {
                      common::milog::MiLogStream::create(
                        &v419,
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/player/activity/vintage_activity.cpp",
                        "marketFinishStorePlay",
                        2992);
                      v98 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                              &v419,
                              (const char (*)[45])"[Vintage] attr level cost error, high_level:");
                      v99 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                              v98,
                              (const unsigned int *)(v4 + 144));
                      v100 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
                               v99,
                               (const char (*)[8])", cost:");
                      v101 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)(v4 + 288));
                      v102 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v100, &v101->second);
                      v103 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                               v102,
                               (const char (*)[13])", cur_level:");
                      v104 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                      v105 = std::vector<unsigned int>::operator[](&v104->second.attr_vec, *(unsigned int *)(v4 + 128));
                      v106 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v103, v105);
                      v107 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
                               v106,
                               (const char (*)[8])", cost:");
                      v108 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)(v4 + 320));
                      v109 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v107, &v108->second);
                      v110 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                               v109,
                               (const char (*)[12])", attr_idx:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v110,
                        (const unsigned int *)(v4 + 128));
                      common::milog::MiLogStream::~MiLogStream(&v419);
                      v3 = -1;
                      goto LABEL_79;
                    }
                    v111 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)(v4 + 288));
                    v112 = &v111->second;
                    if ( *(_BYTE *)(((unsigned __int64)v112 >> 3) + 0x7FFF8000) != 0
                      && (char)(((unsigned __int8)v112 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v112 >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_load4(v112);
                    }
                    v113 = v111->second;
                    v114 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,unsigned int> > *const)(v4 + 320));
                    if ( *(_BYTE *)(((unsigned __int64)&v114->second >> 3) + 0x7FFF8000) != 0
                      && (char)((((_BYTE)v114 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&v114->second >> 3)
                                                                         + 0x7FFF8000) )
                    {
                      __asan_report_load4(&v114->second);
                    }
                    *(_DWORD *)(v4 + 176) = v113 - v114->second;
                    std::vector<unsigned int>::push_back(
                      (std::vector<unsigned int> *const)(v4 + 704),
                      (const std::vector<unsigned int>::value_type *)(v4 + 176));
                    cost = SAFE_ADD<unsigned int,unsigned int>(cost, *(_DWORD *)(v4 + 176));
                  }
                  v116 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                           (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384),
                           "delta_attr");
                  v117 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<<unsigned int>(
                           v116,
                           (const std::vector<unsigned int> *)(v4 + 576));
                  v118 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v117, "cost");
                  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<<unsigned int>(
                    v118,
                    (const std::vector<unsigned int> *)(v4 + 704));
                  if ( proto::VintageMarketStoreOpInfo::help_uid(store_op) )
                    v119 = proto::VintageMarketStoreOpInfo::help_skill_id(store_op);
                  else
                    v119 = 0;
                  help_skill_id = v119;
                  std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 768));
                  v120 = proto::VintageMarketStoreOpInfo::strategy_list(store_op);
                  common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(
                    v120,
                    (std::vector<unsigned int> *)(v4 + 768));
                  std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::function<VintageActivity::marketFinishStorePlay(proto::VintageMarketFinishStorePlayReq const&,proto::VintageMarketFinishStorePlayRsp &)::{lambda(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)#1},void,void>(
                    (std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *const)&v419,
                    (VintageActivity::marketFinishStorePlay::<lambda(uint32_t, const std::vector<data::VintageMarketEffectExcelConfig>&)>)__PAIR128__(v4 + 640, (unsigned __int64)this));
                  v121 = proto::VintageMarketStoreOpInfo::store_id(store_op);
                  *(_DWORD *)(v4 + 64) = VintageActivity::calcStoreEffect(
                                           this,
                                           v121,
                                           help_skill_id,
                                           (const std::vector<unsigned int> *)(v4 + 768),
                                           (std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *)&v419);
                  std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::~function((std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *const)&v419);
                  if ( *(_DWORD *)(v4 + 64) )
                  {
                    common::milog::MiLogStream::create(
                      &v419,
                      &common::milog::MiLogDefault::default_log_obj_,
                      1u,
                      "./src/player/activity/vintage_activity.cpp",
                      "marketFinishStorePlay",
                      3013);
                    v122 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                             &v419,
                             (const char (*)[52])"[Vintage] calcStoreEffect on actu attr failed, ret:");
                    v123 = common::milog::MiLogStream::operator<<<int,(int *)0>(v122, (const int *)(v4 + 64));
                    v124 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                             v123,
                             (const char (*)[12])", store_id:");
                    *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v124,
                      (const unsigned int *)(v4 + 176));
                    common::milog::MiLogStream::~MiLogStream(&v419);
                    v3 = *(_DWORD *)(v4 + 64);
                    v125 = 0;
                  }
                  else
                  {
                    v126 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                             (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384),
                             "cur_attr");
                    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<<std::pair<unsigned int,int>>(
                      v126,
                      (const std::vector<std::pair<unsigned int,int>> *)(v4 + 640));
                    std::vector<std::pair<unsigned int,int>>::vector((std::vector<std::pair<unsigned int,int>> *const)(v4 + 832));
                    v127 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                    v128 = std::vector<unsigned int>::size(&v127->second.aim_attr_vec);
                    std::vector<std::pair<unsigned int,int>>::reserve(
                      (std::vector<std::pair<unsigned int,int>> *const)(v4 + 832),
                      v128);
                    for ( idx = 0; ; ++idx )
                    {
                      v129 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                      if ( idx >= std::vector<unsigned int>::size(&v129->second.aim_attr_vec) )
                        break;
                      *(_DWORD *)(v4 + 176) = 0;
                      v130 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                      v131 = std::vector<unsigned int>::operator[](&v130->second.aim_attr_vec, idx);
                      std::vector<std::pair<unsigned int,int>>::emplace_back<unsigned int &,int>(
                        (std::vector<std::pair<unsigned int,int>> *const)(v4 + 832),
                        v131,
                        (int *)(v4 + 176),
                        v131,
                        v132);
                    }
                    std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::function<VintageActivity::marketFinishStorePlay(proto::VintageMarketFinishStorePlayReq const&,proto::VintageMarketFinishStorePlayRsp &)::{lambda(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)#2},void,void>(
                      (std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *const)&v419,
                      (VintageActivity::marketFinishStorePlay::<lambda(uint32_t, const std::vector<data::VintageMarketEffectExcelConfig>&)>_0)__PAIR128__(v4 + 832, (unsigned __int64)this));
                    v133 = proto::VintageMarketStoreOpInfo::store_id(store_op);
                    *(_DWORD *)(v4 + 64) = VintageActivity::calcStoreEffect(
                                             this,
                                             v133,
                                             help_skill_id,
                                             (const std::vector<unsigned int> *)(v4 + 768),
                                             (std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *)&v419);
                    std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::~function((std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *const)&v419);
                    if ( *(_DWORD *)(v4 + 64) )
                    {
                      common::milog::MiLogStream::create(
                        &v419,
                        &common::milog::MiLogDefault::default_log_obj_,
                        1u,
                        "./src/player/activity/vintage_activity.cpp",
                        "marketFinishStorePlay",
                        3032);
                      v134 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
                               &v419,
                               (const char (*)[51])"[Vintage] calcStoreEffect on aim attr failed, ret:");
                      v135 = common::milog::MiLogStream::operator<<<int,(int *)0>(v134, (const int *)(v4 + 64));
                      v136 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                               v135,
                               (const char (*)[12])", store_id:");
                      *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v136,
                        (const unsigned int *)(v4 + 176));
                      common::milog::MiLogStream::~MiLogStream(&v419);
                      v3 = *(_DWORD *)(v4 + 64);
                      v137 = 0;
                    }
                    else
                    {
                      v138 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                               (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384),
                               "aim_attr");
                      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<<std::pair<unsigned int,int>>(
                        v138,
                        (const std::vector<std::pair<unsigned int,int>> *)(v4 + 832));
                      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 896));
                      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 960));
                      for ( *(_DWORD *)(v4 + 128) = 0; ; ++*(_DWORD *)(v4 + 128) )
                      {
                        v139 = *(unsigned int *)(v4 + 128);
                        if ( v139 >= std::vector<std::pair<unsigned int,int>>::size((const std::vector<std::pair<unsigned int,int>> *const)(v4 + 832)) )
                          goto LABEL_147;
                        v140 = *(unsigned int *)(v4 + 128);
                        if ( v140 >= std::vector<std::pair<unsigned int,int>>::size((const std::vector<std::pair<unsigned int,int>> *const)(v4 + 640)) )
                          goto LABEL_147;
                        v141 = *(unsigned int *)(v4 + 128);
                        v142 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                        if ( v141 >= std::vector<unsigned int>::size(&v142->second.aim_attr_vec) )
                          goto LABEL_147;
                        v143 = *(unsigned int *)(v4 + 128);
                        v144 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                        if ( v143 >= std::vector<unsigned int>::size(&v144->second.max_attr_vec) )
                          goto LABEL_147;
                        v145 = *(unsigned int *)(v4 + 128);
                        v146 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v4 + 256));
                        if ( v145 >= std::vector<float>::size(&v146->second.attr_low_limit_factor_vec) )
                          goto LABEL_147;
                        v148 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 832),
                                 *(unsigned int *)(v4 + 128));
                        v149 = &v148->second;
                        if ( *(_BYTE *)(((unsigned __int64)v149 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v149 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v149 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v149);
                        }
                        if ( v148->second >= 0 )
                          goto LABEL_108;
                        v150 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 832),
                                 *(unsigned int *)(v4 + 128));
                        v151 = (unsigned int *)v150;
                        if ( *(_BYTE *)(((unsigned __int64)v150 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v150 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v150 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v150);
                        }
                        v152 = *v151;
                        v153 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 832),
                                 *(unsigned int *)(v4 + 128));
                        if ( *(_BYTE *)(((unsigned __int64)&v153->second >> 3) + 0x7FFF8000) != 0
                          && (char)((((_BYTE)v153 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&v153->second >> 3)
                                                                             + 0x7FFF8000) )
                        {
                          __asan_report_load4(&v153->second);
                        }
                        if ( v152 >= abs32(v153->second) )
LABEL_108:
                          v154 = 0;
                        else
                          v154 = 1;
                        if ( v154 )
                        {
                          common::milog::MiLogStream::create(
                            &v416,
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/player/activity/vintage_activity.cpp",
                            "marketFinishStorePlay",
                            3048);
                          v155 = common::milog::MiLogStream::operator<<<char [60],(char *[60])0>(
                                   &v416,
                                   (const char (*)[60])"[Vintage] base_aim_attr + buff_aim_attr < 0, base_aim_attr:");
                          v156 = std::vector<std::pair<unsigned int,int>>::operator[](
                                   (std::vector<std::pair<unsigned int,int>> *const)(v4 + 832),
                                   *(unsigned int *)(v4 + 128));
                          v157 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                   v155,
                                   (const unsigned int *)v156);
                          v158 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                                   v157,
                                   (const char (*)[17])", buff_aim_attr:");
                          v159 = std::vector<std::pair<unsigned int,int>>::operator[](
                                   (std::vector<std::pair<unsigned int,int>> *const)(v4 + 832),
                                   *(unsigned int *)(v4 + 128));
                          v160 = common::milog::MiLogStream::operator<<<int,(int *)0>(v158, &v159->second);
                          v161 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                   v160,
                                   (const char (*)[12])", attr_idx:");
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v161,
                            (const unsigned int *)(v4 + 128));
                          common::milog::MiLogStream::~MiLogStream(&v416);
                          v3 = -1;
LABEL_146:
                          v209 = 0;
                          goto LABEL_165;
                        }
                        v162 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 640),
                                 *(unsigned int *)(v4 + 128));
                        v163 = &v162->second;
                        if ( *(_BYTE *)(((unsigned __int64)v163 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v163 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v163 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v163);
                        }
                        if ( v162->second >= 0 )
                          goto LABEL_120;
                        v164 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 640),
                                 *(unsigned int *)(v4 + 128));
                        v165 = (unsigned int *)v164;
                        if ( *(_BYTE *)(((unsigned __int64)v164 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v164 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v164 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v164);
                        }
                        v166 = *v165;
                        v167 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 640),
                                 *(unsigned int *)(v4 + 128));
                        if ( *(_BYTE *)(((unsigned __int64)&v167->second >> 3) + 0x7FFF8000) != 0
                          && (char)((((_BYTE)v167 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&v167->second >> 3)
                                                                             + 0x7FFF8000) )
                        {
                          __asan_report_load4(&v167->second);
                        }
                        if ( v166 >= abs32(v167->second) )
LABEL_120:
                          v168 = 0;
                        else
                          v168 = 1;
                        if ( v168 )
                        {
                          common::milog::MiLogStream::create(
                            &v417,
                            &common::milog::MiLogDefault::default_log_obj_,
                            1u,
                            "./src/player/activity/vintage_activity.cpp",
                            "marketFinishStorePlay",
                            3055);
                          v169 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                                   &v417,
                                   (const char (*)[48])"[Vintage] base_attr + buff_attr < 0, base_attr:");
                          v170 = std::vector<std::pair<unsigned int,int>>::operator[](
                                   (std::vector<std::pair<unsigned int,int>> *const)(v4 + 640),
                                   *(unsigned int *)(v4 + 128));
                          v171 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                   v169,
                                   (const unsigned int *)v170);
                          v172 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                                   v171,
                                   (const char (*)[13])", buff_attr:");
                          v173 = std::vector<std::pair<unsigned int,int>>::operator[](
                                   (std::vector<std::pair<unsigned int,int>> *const)(v4 + 640),
                                   *(unsigned int *)(v4 + 128));
                          v174 = common::milog::MiLogStream::operator<<<int,(int *)0>(v172, &v173->second);
                          v175 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                   v174,
                                   (const char (*)[12])", attr_idx:");
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v175,
                            (const unsigned int *)(v4 + 128));
                          common::milog::MiLogStream::~MiLogStream(&v417);
                          v3 = 10402;
                          goto LABEL_146;
                        }
                        v176 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 640),
                                 *(unsigned int *)(v4 + 128));
                        v177 = (int *)v176;
                        if ( *(_BYTE *)(((unsigned __int64)v176 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v176 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v176 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v176);
                        }
                        v178 = *v177;
                        v179 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 640),
                                 *(unsigned int *)(v4 + 128));
                        if ( *(_BYTE *)(((unsigned __int64)&v179->second >> 3) + 0x7FFF8000) != 0
                          && (char)((((_BYTE)v179 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&v179->second >> 3)
                                                                             + 0x7FFF8000) )
                        {
                          __asan_report_load4(&v179->second);
                        }
                        *(_DWORD *)(v4 + 144) = v178 + v179->second;
                        v180 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 832),
                                 *(unsigned int *)(v4 + 128));
                        v181 = (int *)v180;
                        if ( *(_BYTE *)(((unsigned __int64)v180 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v180 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v180 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v180);
                        }
                        v182 = *v181;
                        v183 = std::vector<std::pair<unsigned int,int>>::operator[](
                                 (std::vector<std::pair<unsigned int,int>> *const)(v4 + 832),
                                 *(unsigned int *)(v4 + 128));
                        if ( *(_BYTE *)(((unsigned __int64)&v183->second >> 3) + 0x7FFF8000) != 0
                          && (char)((((_BYTE)v183 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&v183->second >> 3)
                                                                             + 0x7FFF8000) )
                        {
                          __asan_report_load4(&v183->second);
                        }
                        aim_attr = v182 + v183->second;
                        v184 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v4 + 256));
                        v185 = (__gnu_cxx::__alloc_traits<std::allocator<float>,float>::value_type *)std::vector<float>::operator[](&v184->second.attr_low_limit_factor_vec, *(unsigned int *)(v4 + 128));
                        v186 = v185;
                        if ( *(_BYTE *)(((unsigned __int64)v185 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v185 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v185 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v185);
                        }
                        v187 = SAFE_MULTIPLY<unsigned int,float>(aim_attr, *v186);
                        *(_DWORD *)(v4 + 160) = (int)std::floor(v187);
                        if ( *(_DWORD *)(v4 + 144) < *(_DWORD *)(v4 + 160) )
                          break;
                        v193 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                        v194 = std::vector<unsigned int>::operator[](
                                 &v193->second.max_attr_vec,
                                 *(unsigned int *)(v4 + 128));
                        v195 = v194;
                        if ( *(_BYTE *)(((unsigned __int64)v194 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v194 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v194 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v194);
                        }
                        if ( *v195 < *(_DWORD *)(v4 + 144) )
                        {
                          common::milog::MiLogStream::create(
                            &v419,
                            &common::milog::MiLogDefault::default_log_obj_,
                            1u,
                            "./src/player/activity/vintage_activity.cpp",
                            "marketFinishStorePlay",
                            3073);
                          v196 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                                   &v419,
                                   (const char (*)[48])"[Vintage] attr too large, set attr to max, idx:");
                          v197 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                   v196,
                                   (const unsigned int *)(v4 + 128));
                          v198 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
                                   v197,
                                   (const char (*)[8])", attr:");
                          v199 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                   v198,
                                   (const unsigned int *)(v4 + 144));
                          v200 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                   v199,
                                   (const char (*)[12])", max_attr:");
                          v201 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                          v202 = std::vector<unsigned int>::operator[](
                                   &v201->second.max_attr_vec,
                                   *(unsigned int *)(v4 + 128));
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v200, v202);
                          common::milog::MiLogStream::~MiLogStream(&v419);
                          v203 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                          v204 = std::vector<unsigned int>::operator[](
                                   &v203->second.max_attr_vec,
                                   *(unsigned int *)(v4 + 128));
                          v205 = v204;
                          if ( *(_BYTE *)(((unsigned __int64)v204 >> 3) + 0x7FFF8000) != 0
                            && (char)(((unsigned __int8)v204 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v204 >> 3)
                                                                                   + 0x7FFF8000) )
                          {
                            __asan_report_load4(v204);
                          }
                          *(_DWORD *)(v4 + 144) = *v205;
                        }
                        v206 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 192));
                        v207 = std::vector<unsigned int>::operator[](
                                 &v206->second.aim_attr_vec,
                                 *(unsigned int *)(v4 + 128));
                        v208 = v207;
                        if ( *(_BYTE *)(((unsigned __int64)v207 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v207 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v207 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v207);
                        }
                        if ( *v208 <= *(_DWORD *)(v4 + 144) )
                          std::vector<unsigned int>::push_back(
                            (std::vector<unsigned int> *const)(v4 + 960),
                            (const std::vector<unsigned int>::value_type *)(v4 + 128));
                        std::vector<unsigned int>::push_back(
                          (std::vector<unsigned int> *const)(v4 + 896),
                          (const std::vector<unsigned int>::value_type *)(v4 + 144));
                      }
                      common::milog::MiLogStream::create(
                        &v418,
                        &common::milog::MiLogDefault::default_log_obj_,
                        1u,
                        "./src/player/activity/vintage_activity.cpp",
                        "marketFinishStorePlay",
                        3065);
                      v188 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                               &v418,
                               (const char (*)[31])"[Vintage] attr too small, idx:");
                      v189 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                               v188,
                               (const unsigned int *)(v4 + 128));
                      v190 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(
                               v189,
                               (const char (*)[8])", attr:");
                      v191 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                               v190,
                               (const unsigned int *)(v4 + 144));
                      v192 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                               v191,
                               (const char (*)[12])", min_attr:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v192,
                        (const unsigned int *)(v4 + 160));
                      common::milog::MiLogStream::~MiLogStream(&v418);
                      *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                      std::vector<unsigned int>::push_back(
                        (std::vector<unsigned int> *const)(v4 + 512),
                        (std::vector<unsigned int>::value_type *)(v4 + 176));
                      *(_DWORD *)(v4 + 64) = 10398;
LABEL_147:
                      if ( *(_DWORD *)(v4 + 64) == 10398 )
                      {
                        *(_DWORD *)(v4 + 64) = 0;
                        v209 = 1;
                      }
                      else
                      {
                        v210 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                 (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384),
                                 "finish_aim_attr_vec");
                        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<<unsigned int>(
                          v210,
                          (const std::vector<unsigned int> *)(v4 + 960));
                        v421.__this = this;
                        v421.__finish_aim_attr_vec = (std::vector<unsigned int> *)(v4 + 960);
                        v421.__cost_vec = (std::vector<unsigned int> *)(v4 + 704);
                        v421.__return_coin_b = (uint32_t *)(v4 + 96);
                        v421.__display_return_coin_b = (uint32_t *)(v4 + 112);
                        v374.__display_return_coin_b = (uint32_t *)(v4 + 112);
                        v374.__return_coin_b = (uint32_t *)(v4 + 96);
                        v374.__cost_vec = (std::vector<unsigned int> *)(v4 + 704);
                        v374.__finish_aim_attr_vec = (std::vector<unsigned int> *)(v4 + 960);
                        v374.__this = this;
                        std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::function<VintageActivity::marketFinishStorePlay(proto::VintageMarketFinishStorePlayReq const&,proto::VintageMarketFinishStorePlayRsp &)::{lambda(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)#3},void,void>(
                          (std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *const)&v419,
                          v374);
                        v211 = proto::VintageMarketStoreOpInfo::store_id(store_op);
                        *(_DWORD *)(v4 + 64) = VintageActivity::calcStoreEffect(
                                                 this,
                                                 v211,
                                                 help_skill_id,
                                                 (const std::vector<unsigned int> *)(v4 + 768),
                                                 (std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *)&v419);
                        std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::~function((std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *const)&v419);
                        if ( *(_DWORD *)(v4 + 64) )
                        {
                          common::milog::MiLogStream::create(
                            &v419,
                            &common::milog::MiLogDefault::default_log_obj_,
                            1u,
                            "./src/player/activity/vintage_activity.cpp",
                            "marketFinishStorePlay",
                            3097);
                          v212 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                                   &v419,
                                   (const char (*)[56])"[Vintage] calcStoreEffect on return coin_B failed, ret:");
                          v213 = common::milog::MiLogStream::operator<<<int,(int *)0>(v212, (const int *)(v4 + 64));
                          v214 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                   v213,
                                   (const char (*)[12])", store_id:");
                          *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v214,
                            (const unsigned int *)(v4 + 176));
                          common::milog::MiLogStream::~MiLogStream(&v419);
                          v3 = *(_DWORD *)(v4 + 64);
                          v209 = 0;
                        }
                        else
                        {
                          is_finish_reward_cond = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 960)) == 3;
                          *(_DWORD *)(v4 + 128) = 0;
                          *(_DWORD *)(v4 + 144) = 0;
                          v420.log_ = (common::milog::MiLog *)this;
                          v420.ostr_ptr_._M_ptr = (std::__shared_ptr<common::tools::StringStream<common::tools::FixedBuffer<16384> >,(__gnu_cxx::_Lock_policy)2>::element_type *)(v4 + 960);
                          v420.ostr_ptr_._M_refcount._M_pi = (std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2> *)(v4 + 128);
                          v420.ostr_ = (common::milog::MilogStringStream *)(v4 + 144);
                          v375.__income_factor = (float *)(v4 + 144);
                          v375.__fix_income = (uint32_t *)(v4 + 128);
                          v375.__finish_aim_attr_vec = (std::vector<unsigned int> *)(v4 + 960);
                          v375.__this = this;
                          std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::function<VintageActivity::marketFinishStorePlay(proto::VintageMarketFinishStorePlayReq const&,proto::VintageMarketFinishStorePlayRsp &)::{lambda(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)#4},void,void>(
                            (std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *const)&v419,
                            v375);
                          v215 = proto::VintageMarketStoreOpInfo::store_id(store_op);
                          *(_DWORD *)(v4 + 64) = VintageActivity::calcStoreEffect(
                                                   this,
                                                   v215,
                                                   help_skill_id,
                                                   (const std::vector<unsigned int> *)(v4 + 768),
                                                   (std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *)&v419);
                          std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::~function((std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *const)&v419);
                          if ( *(_DWORD *)(v4 + 64) )
                          {
                            common::milog::MiLogStream::create(
                              &v419,
                              &common::milog::MiLogDefault::default_log_obj_,
                              1u,
                              "./src/player/activity/vintage_activity.cpp",
                              "marketFinishStorePlay",
                              3111);
                            v216 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                                     &v419,
                                     (const char (*)[49])"[Vintage] calcStoreEffect on income failed, ret:");
                            v217 = common::milog::MiLogStream::operator<<<int,(int *)0>(v216, (const int *)(v4 + 64));
                            v218 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                     v217,
                                     (const char (*)[12])", store_id:");
                            *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                              v218,
                              (const unsigned int *)(v4 + 176));
                            common::milog::MiLogStream::~MiLogStream(&v419);
                            v3 = *(_DWORD *)(v4 + 64);
                            v209 = 0;
                          }
                          else
                          {
                            if ( is_finish_reward_cond )
                            {
                              v219 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v4 + 256));
                              if ( *(_BYTE *)(((unsigned __int64)&v219->second.reward_factor >> 3) + 0x7FFF8000) != 0
                                && *(_BYTE *)(((unsigned __int64)&v219->second.reward_factor >> 3) + 0x7FFF8000) <= 3 )
                              {
                                v219 = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::pointer)__asan_report_load4(&v219->second.reward_factor);
                              }
                              reward_factor_low = LODWORD(v219->second.reward_factor);
                            }
                            else
                            {
                              reward_factor_low = 1065353216;
                            }
                            v221 = *(float *)&reward_factor_low;
                            v222 = _mm_cvtsi32_si128(*(_DWORD *)(v4 + 144));
                            *(float *)v222.m128i_i32 = SAFE_ADD<float,float>(*(float *)v222.m128i_i32, v221);
                            *(_DWORD *)(v4 + 160) = _mm_cvtsi128_si32(v222);
                            if ( *(float *)(v4 + 160) >= 0.0 )
                            {
                              v224 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384),
                                       "fixed_income");
                              v225 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v224,
                                       *(_DWORD *)(v4 + 128));
                              v226 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v225,
                                       "|buff_factor");
                              v227 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v226,
                                       *(float *)(v4 + 144));
                              v228 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v227,
                                       "|total_factor");
                              v229 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v228,
                                       *(float *)(v4 + 160));
                              common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v229, "}");
                              v377 = *(_DWORD *)(v4 + 160);
                              *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                              v230 = (char *)(v4 + 176);
                              v231 = std::map<unsigned int,float>::operator[](
                                       (std::map<unsigned int,float> *const)(v4 + 1344),
                                       (std::map<unsigned int,float>::key_type *)(v4 + 176));
                              v232 = v231;
                              v233 = *(_BYTE *)(((unsigned __int64)v231 >> 3) + 0x7FFF8000);
                              if ( v233 != 0 && (char)(((unsigned __int8)v231 & 7) + 3) >= v233 )
                              {
                                LOBYTE(v230) = v233 != 0;
                                __asan_report_store4(v231, v230, v231);
                              }
                              *v232 = v377;
                              v234 = std::move<std::vector<unsigned int> &>((std::vector<unsigned int> *)(v4 + 576));
                              *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                              v235 = std::map<unsigned int,std::vector<unsigned int>>::operator[](
                                       (std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1104),
                                       (std::map<unsigned int,std::vector<unsigned int>>::key_type *)(v4 + 176));
                              std::vector<unsigned int>::operator=(v235, v234);
                              v236 = std::move<std::vector<unsigned int> &>((std::vector<unsigned int> *)(v4 + 896));
                              *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                              v237 = std::map<unsigned int,std::vector<unsigned int>>::operator[](
                                       (std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1184),
                                       (std::map<unsigned int,std::vector<unsigned int>>::key_type *)(v4 + 176));
                              std::vector<unsigned int>::operator=(v237, v236);
                              v238 = *(_DWORD *)(v4 + 128);
                              *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(store_op);
                              v239 = std::map<unsigned int,unsigned int>::operator[](
                                       (std::map<unsigned int,unsigned int> *const)(v4 + 1264),
                                       (std::map<unsigned int,unsigned int>::key_type *)(v4 + 176));
                              v240 = *(unsigned __int8 *)(((unsigned __int64)v239 >> 3) + 0x7FFF8000);
                              if ( (_BYTE)v240 != 0 && (char)(((unsigned __int8)v239 & 7) + 3) >= (char)v240 )
                                __asan_report_store4(v239, v240, v239);
                              *v239 = v238;
                              v209 = 2;
                            }
                            else
                            {
                              common::milog::MiLogStream::create(
                                &v419,
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/player/activity/vintage_activity.cpp",
                                "marketFinishStorePlay",
                                3119);
                              v223 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                                       &v419,
                                       (const char (*)[41])"[Vintage] income factor < 0, cur_factor:");
                              common::milog::MiLogStream::operator<<<float,(float *)0>(v223, (const float *)(v4 + 160));
                              common::milog::MiLogStream::~MiLogStream(&v419);
                              v3 = -1;
                              v209 = 0;
                            }
                          }
                        }
                      }
LABEL_165:
                      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 960));
                      if ( v209 )
                      {
                        if ( v209 == 2 )
                          v241 = 2;
                        else
                          v241 = 1;
                      }
                      else
                      {
                        v241 = 0;
                      }
                      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 896));
                      if ( v241 )
                      {
                        if ( v241 == 2 )
                          v137 = 2;
                        else
                          v137 = 1;
                      }
                      else
                      {
                        v137 = 0;
                      }
                    }
                    std::vector<std::pair<unsigned int,int>>::~vector((std::vector<std::pair<unsigned int,int>> *const)(v4 + 832));
                    if ( v137 )
                    {
                      if ( v137 == 2 )
                        v125 = 2;
                      else
                        v125 = 1;
                    }
                    else
                    {
                      v125 = 0;
                    }
                  }
                  std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 768));
                  if ( v125 )
                  {
                    if ( v125 == 2 )
                      v115 = 2;
                    else
                      v115 = 1;
                  }
                  else
                  {
                    v115 = 0;
                  }
LABEL_185:
                  std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 704));
                  if ( v115 )
                  {
                    if ( v115 == 2 )
                      v242 = 2;
                    else
                      v242 = 1;
                  }
                  else
                  {
                    v242 = 0;
                  }
                  std::vector<std::pair<unsigned int,int>>::~vector((std::vector<std::pair<unsigned int,int>> *const)(v4 + 640));
                  if ( v242 )
                  {
                    if ( v242 == 2 )
                      v57 = 2;
                    else
                      v57 = 1;
                  }
                  else
                  {
                    v57 = 0;
                  }
                }
                std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 576));
                if ( !v57 )
                  goto LABEL_306;
                google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator++(&__for_begin);
              }
              if ( !std::vector<unsigned int>::empty((const std::vector<unsigned int> *const)(v4 + 512)) )
              {
                v243 = proto::VintageMarketFinishStorePlayRsp::mutable_low_attr_store_list(rsp_0);
                common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
                  (const std::vector<unsigned int> *)(v4 + 512),
                  v243);
                v3 = 10398;
              }
              else
              {
                common::milog::MiLogStream::create(
                  &v418,
                  &common::milog::MiLogDefault::default_log_obj_,
                  1u,
                  "./src/player/activity/vintage_activity.cpp",
                  "marketFinishStorePlay",
                  3138);
                common::tools::StringStream<common::tools::FixedBuffer<4096>>::str[abi:cxx11](
                  (std::string *)&v419,
                  (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384));
                common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(&v418, (const std::string *)&v419);
                std::string::~string(&v419);
                common::milog::MiLogStream::~MiLogStream(&v418);
                *(_QWORD *)(v4 + 416) = 0LL;
                *(_QWORD *)(v4 + 424) = 0LL;
                *(_DWORD *)(v4 + 416) = 149;
                *(_DWORD *)(v4 + 420) = cost;
                if ( !*(_DWORD *)(v4 + 420) )
                  goto LABEL_204;
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->player_);
                ItemComp = Player::getItemComp(this->player_);
                *(_DWORD *)(v4 + 64) = PlayerItemComp::checkSubItem(ItemComp, (const ItemParam *)(v4 + 416));
                if ( *(_DWORD *)(v4 + 64) )
                {
                  common::milog::MiLogStream::create(
                    &v419,
                    &common::milog::MiLogDefault::default_log_obj_,
                    1u,
                    "./src/player/activity/vintage_activity.cpp",
                    "marketFinishStorePlay",
                    3147);
                  v245 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                           &v419,
                           (const char (*)[40])"[Vintage] checkSubItem failed, item_id:");
                  v246 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                           v245,
                           (const unsigned int *)(v4 + 416));
                  v247 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(
                           v246,
                           (const char (*)[9])", count:");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v247,
                    (const unsigned int *)(v4 + 420));
                  common::milog::MiLogStream::~MiLogStream(&v419);
                  v3 = *(_DWORD *)(v4 + 64);
                }
                else
                {
LABEL_204:
                  *(_DWORD *)(v4 + 160) = 0;
                  total_income_b = 0;
                  std::map<unsigned int,unsigned int>::map((std::map<unsigned int,unsigned int> *const)(v4 + 1424));
                  common::tools::StringStream<common::tools::FixedBuffer<4096>>::StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 448));
                  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                    (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 448),
                    "[VintageMarketSettle]");
                  __for_range_0 = &this->store_map_;
                  __for_begin_0._M_node = std::map<unsigned int,VintageMarketStoreData>::begin(&this->store_map_)._M_node;
                  *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v4 + 192) = std::map<unsigned int,VintageMarketStoreData>::end(__for_range_0);
                  while ( std::operator!=(
                            &__for_begin_0,
                            (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v4 + 192)) )
                  {
                    __in = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator*(&__for_begin_0);
                    id = std::get<0ul,unsigned int const,VintageMarketStoreData>(__in);
                    store_data = std::get<1ul,unsigned int const,VintageMarketStoreData>(__in);
                    ServiceBox::findService<GameserverService>();
                    GameserverService::getConfig((GameserverService *const)(v4 + 480));
                    v248 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 480));
                    *(std::map<unsigned int,ActivityVintageMarketStoreConfig>::const_iterator *)(v4 + 224) = std::map<unsigned int,ActivityVintageMarketStoreConfig>::find(&v248->design_config.txt_config_mgr.activity_vintage_market_config_mgr.store_config_map, id);
                    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 480));
                    ServiceBox::findService<GameserverService>();
                    GameserverService::getConfig((GameserverService *const)&v413);
                    v249 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v413);
                    __for_end.it_ = (void *const *)std::map<unsigned int,ActivityVintageMarketStoreConfig>::end(&v249->design_config.txt_config_mgr.activity_vintage_market_config_mgr.store_config_map)._M_node;
                    v250 = std::operator==(
                             (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)(v4 + 224),
                             (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)&__for_end);
                    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v413);
                    if ( v250 )
                    {
                      common::milog::MiLogStream::create(
                        &v415,
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/player/activity/vintage_activity.cpp",
                        "marketFinishStorePlay",
                        3164);
                      v251 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                               &v415,
                               (const char (*)[46])"[Vintage] find store config failed, store_id:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v251, id);
                      common::milog::MiLogStream::~MiLogStream(&v415);
                    }
                    else
                    {
                      v252 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                      *(std::map<unsigned int,ActivityVintageMarketStoreRoundConfig>::const_iterator *)(v4 + 256) = std::map<unsigned int,ActivityVintageMarketStoreRoundConfig>::find(&v252->second.round_config_map, &this->store_round_);
                      v253 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v4 + 224));
                      __for_end.it_ = (void *const *)std::map<unsigned int,ActivityVintageMarketStoreRoundConfig>::end(&v253->second.round_config_map)._M_node;
                      if ( std::operator==(
                             (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::_Self *)(v4 + 256),
                             (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> >::_Self *)&__for_end) )
                      {
                        common::milog::MiLogStream::create(
                          &v416,
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/player/activity/vintage_activity.cpp",
                          "marketFinishStorePlay",
                          3170);
                        v254 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                                 &v416,
                                 (const char (*)[52])"[Vintage] find store round config failed, store_id:");
                        v255 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v254, id);
                        v256 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                 v255,
                                 (const char (*)[12])", round_id:");
                        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v256,
                          &this->store_round_);
                        common::milog::MiLogStream::~MiLogStream(&v416);
                      }
                      else
                      {
                        *(std::map<unsigned int,std::vector<unsigned int>>::iterator *)(v4 + 288) = std::map<unsigned int,std::vector<unsigned int>>::find((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1184), id);
                        __for_end.it_ = (void *const *)std::map<unsigned int,std::vector<unsigned int>>::end((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1184))._M_node;
                        if ( std::operator==(
                               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)(v4 + 288),
                               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)&__for_end) )
                        {
                          common::milog::MiLogStream::create(
                            &v417,
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/player/activity/vintage_activity.cpp",
                            "marketFinishStorePlay",
                            3177);
                          v257 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
                                   &v417,
                                   (const char (*)[50])"[Vintage] find store current attr_vec failed, id:");
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v257, id);
                          common::milog::MiLogStream::~MiLogStream(&v417);
                        }
                        else
                        {
                          *(std::map<unsigned int,float>::iterator *)(v4 + 320) = std::map<unsigned int,float>::find(
                                                                                    (std::map<unsigned int,float> *const)(v4 + 1344),
                                                                                    id);
                          __for_end.it_ = (void *const *)std::map<unsigned int,float>::end((std::map<unsigned int,float> *const)(v4 + 1344))._M_node;
                          if ( std::operator==(
                                 (const std::_Rb_tree_iterator<std::pair<unsigned int const,float> >::_Self *)(v4 + 320),
                                 (const std::_Rb_tree_iterator<std::pair<unsigned int const,float> >::_Self *)&__for_end) )
                          {
                            common::milog::MiLogStream::create(
                              &v418,
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/player/activity/vintage_activity.cpp",
                              "marketFinishStorePlay",
                              3183);
                            v258 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                                     &v418,
                                     (const char (*)[47])"[Vintage] find store reward factor failed, id:");
                            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v258, id);
                            common::milog::MiLogStream::~MiLogStream(&v418);
                          }
                          else
                          {
                            *(std::map<unsigned int,unsigned int>::iterator *)(v4 + 352) = std::map<unsigned int,unsigned int>::find(
                                                                                             (std::map<unsigned int,unsigned int> *const)(v4 + 1264),
                                                                                             id);
                            __for_end.it_ = (void *const *)std::map<unsigned int,unsigned int>::end((std::map<unsigned int,unsigned int> *const)(v4 + 1264))._M_node;
                            if ( std::operator==(
                                   (const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)(v4 + 352),
                                   (const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_end) )
                            {
                              common::milog::MiLogStream::create(
                                &v419,
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/player/activity/vintage_activity.cpp",
                                "marketFinishStorePlay",
                                3189);
                              v259 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                                       &v419,
                                       (const char (*)[53])"[Vintage] find store reward fixed income failed, id:");
                              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v259, id);
                              common::milog::MiLogStream::~MiLogStream(&v419);
                            }
                            else
                            {
                              *(_DWORD *)(v4 + 176) = 0;
                              for ( idx_0 = 0; ; ++idx_0 )
                              {
                                v260 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v4 + 288));
                                if ( idx_0 >= std::vector<unsigned int>::size(&v260->second) )
                                  break;
                                ServiceBox::findService<GameserverService>();
                                GameserverService::getConfig((GameserverService *const)&v414);
                                p_activity_vintage_market_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v414)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
                                v262 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v4 + 288));
                                v263 = std::vector<unsigned int>::operator[](&v262->second, idx_0);
                                v264 = v263;
                                if ( *(_BYTE *)(((unsigned __int64)v263 >> 3) + 0x7FFF8000) != 0
                                  && (char)(((unsigned __int8)v263 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v263 >> 3)
                                                                                         + 0x7FFF8000) )
                                {
                                  __asan_report_load4(v263);
                                }
                                b = ActivityVintageMarketExcelConfigMgr::getAttrFactor(
                                      p_activity_vintage_market_config_mgr,
                                      *v264);
                                v265 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v4 + 288));
                                v266 = std::vector<unsigned int>::operator[](&v265->second, idx_0);
                                v267 = v266;
                                if ( *(_BYTE *)(((unsigned __int64)v266 >> 3) + 0x7FFF8000) != 0
                                  && (char)(((unsigned __int8)v266 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v266 >> 3)
                                                                                         + 0x7FFF8000) )
                                {
                                  __asan_report_load4(v266);
                                }
                                v268 = (__m128i)LODWORD(b);
                                *(float *)v268.m128i_i32 = SAFE_MULTIPLY<unsigned int,float>(*v267, b);
                                single_attr_product = COERCE_FLOAT(_mm_cvtsi128_si32(v268));
                                std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v414);
                                v269 = _mm_cvtsi32_si128(*(_DWORD *)(v4 + 176));
                                *(float *)v269.m128i_i32 = SAFE_ADD<float,float>(
                                                             *(float *)v269.m128i_i32,
                                                             single_attr_product);
                                *(_DWORD *)(v4 + 176) = _mm_cvtsi128_si32(v269);
                              }
                              v270 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 448),
                                       "{store");
                              if ( *(_BYTE *)(((unsigned __int64)id >> 3) + 0x7FFF8000) != 0
                                && (char)(((unsigned __int8)id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)id >> 3)
                                                                                     + 0x7FFF8000) )
                              {
                                __asan_report_load4(id);
                              }
                              v271 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v270,
                                       *id);
                              v272 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v271,
                                       ",coin_a:");
                              v273 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v272,
                                       *(float *)(v4 + 176));
                              v274 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v273,
                                       "*");
                              v275 = std::_Rb_tree_iterator<std::pair<unsigned int const,float>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,float> > *const)(v4 + 320));
                              v276 = &v275->second;
                              if ( *(_BYTE *)(((unsigned __int64)v276 >> 3) + 0x7FFF8000) != 0
                                && (char)(((unsigned __int8)v276 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v276 >> 3)
                                                                                       + 0x7FFF8000) )
                              {
                                __asan_report_load4(v276);
                              }
                              v277 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v274,
                                       v275->second);
                              v278 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v277,
                                       "+");
                              v279 = std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> > *const)(v4 + 352));
                              v280 = &v279->second;
                              if ( *(_BYTE *)(((unsigned __int64)v280 >> 3) + 0x7FFF8000) != 0
                                && (char)(((unsigned __int8)v280 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v280 >> 3)
                                                                                       + 0x7FFF8000) )
                              {
                                __asan_report_load4(v280);
                              }
                              common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                v278,
                                v279->second);
                              v281 = std::_Rb_tree_iterator<std::pair<unsigned int const,float>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,float> > *const)(v4 + 320));
                              v282 = &v281->second;
                              if ( *(_BYTE *)(((unsigned __int64)v282 >> 3) + 0x7FFF8000) != 0
                                && (char)(((unsigned __int8)v282 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v282 >> 3)
                                                                                       + 0x7FFF8000) )
                              {
                                __asan_report_load4(v282);
                              }
                              v283 = _mm_cvtsi32_si128(*(_DWORD *)(v4 + 176));
                              *(float *)v283.m128i_i32 = SAFE_MULTIPLY<float,float>(
                                                           *(float *)v283.m128i_i32,
                                                           v281->second);
                              *(_DWORD *)(v4 + 176) = _mm_cvtsi128_si32(v283);
                              v284 = std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> > *const)(v4 + 352));
                              v285 = &v284->second;
                              if ( *(_BYTE *)(((unsigned __int64)v285 >> 3) + 0x7FFF8000) != 0
                                && (char)(((unsigned __int8)v285 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v285 >> 3)
                                                                                       + 0x7FFF8000) )
                              {
                                __asan_report_load4(v285);
                              }
                              v286 = _mm_cvtsi32_si128(*(_DWORD *)(v4 + 176));
                              *(float *)v286.m128i_i32 = SAFE_ADD<float,unsigned int>(
                                                           *(float *)v286.m128i_i32,
                                                           v284->second);
                              *(_DWORD *)(v4 + 176) = _mm_cvtsi128_si32(v286);
                              v287 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v4 + 256));
                              p_income_b_factor = &v287->second.income_b_factor;
                              if ( *(_BYTE *)(((unsigned __int64)p_income_b_factor >> 3) + 0x7FFF8000) != 0
                                && (char)(((unsigned __int8)p_income_b_factor & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_income_b_factor >> 3) + 0x7FFF8000) )
                              {
                                __asan_report_load4(p_income_b_factor);
                              }
                              ba = SAFE_MULTIPLY<float,float>(*(float *)(v4 + 176), v287->second.income_b_factor);
                              v289 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreRoundConfig> > *const)(v4 + 256));
                              p_fixed_income = &v289->second.fixed_income;
                              if ( *(_BYTE *)(((unsigned __int64)p_fixed_income >> 3) + 0x7FFF8000) != 0
                                && (char)(((unsigned __int8)p_fixed_income & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_fixed_income >> 3)
                                                                                                 + 0x7FFF8000) )
                              {
                                __asan_report_load4(p_fixed_income);
                              }
                              v291 = (__m128i)LODWORD(ba);
                              *(float *)v291.m128i_i32 = SAFE_ADD<unsigned int,float>(v289->second.fixed_income, ba);
                              single_store_income_b = COERCE_FLOAT(_mm_cvtsi128_si32(v291));
                              v292 = (int)std::floor(*(float *)(v4 + 176));
                              v293 = proto::VintageMarketFinishStorePlayRsp::mutable_store_income_map(rsp_0);
                              v294 = id;
                              v295 = google::protobuf::Map<unsigned int,unsigned int>::operator[](v293, id);
                              v297 = (int *)v295;
                              v298 = *(_BYTE *)(((unsigned __int64)v295 >> 3) + 0x7FFF8000);
                              if ( v298 != 0 && (char)(((unsigned __int8)v295 & 7) + 3) >= v298 )
                              {
                                LOBYTE(v294) = v298 != 0;
                                __asan_report_store4(v295, v294, v295);
                              }
                              *v297 = v292;
                              std::map<unsigned int,unsigned int>::emplace<unsigned int const&,float &>(
                                (std::map<unsigned int,unsigned int> *const)(v4 + 1424),
                                id,
                                (float *)(v4 + 176),
                                id,
                                v296);
                              v299 = std::floor(*(float *)(v4 + 176));
                              *(_DWORD *)(v4 + 160) = (int)SAFE_ADD<unsigned int,float>(*(_DWORD *)(v4 + 160), v299);
                              v300 = std::floor(single_store_income_b);
                              total_income_b = (int)SAFE_ADD<unsigned int,float>(total_income_b, v300);
                              v301 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 448),
                                       "=");
                              v302 = std::floor(*(float *)(v4 + 176));
                              v303 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v301,
                                       v302);
                              v304 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v303,
                                       ",coin_b:");
                              v305 = std::floor(single_store_income_b);
                              v306 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                                       v304,
                                       v305);
                              common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v306, "}");
                            }
                          }
                        }
                      }
                    }
                    std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator++(&__for_begin_0);
                  }
                  v307 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                           (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 448),
                           "round_coin_a:");
                  v308 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                           v307,
                           *(_DWORD *)(v4 + 160));
                  v309 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                           v308,
                           ", round_coin_b:");
                  v310 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v309, total_income_b);
                  v311 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                           v310,
                           ",return_coin_b:");
                  v312 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                           v311,
                           *(_DWORD *)(v4 + 96));
                  v313 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                           v312,
                           ",display_return_coin_b:");
                  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v313, *(_DWORD *)(v4 + 112));
                  proto::VintageMarketFinishStorePlayRsp::set_round_total_income(rsp_0, *(_DWORD *)(v4 + 160));
                  proto::VintageMarketFinishStorePlayRsp::set_round_coin_b_income(rsp_0, total_income_b);
                  proto::VintageMarketFinishStorePlayRsp::set_display_return_coin_b(rsp_0, *(_DWORD *)(v4 + 112));
                  ActionReason::ActionReason(
                    (ActionReason *const)(v4 + 768),
                    ACTION_REASON_VINTAGE_MARKET_STORE,
                    ITEM_LIMIT_ACTIVITY_VINTAGE);
                  std::vector<ItemParam>::vector((std::vector<ItemParam> *const)(v4 + 832));
                  LODWORD(v414._M_ptr) = 148;
                  HIDWORD(v414._M_ptr) = *(_DWORD *)(v4 + 160);
                  v414._M_refcount._M_pi = 0LL;
                  std::vector<ItemParam>::emplace_back<ItemParam>(
                    (std::vector<ItemParam> *const)(v4 + 832),
                    (ItemParam *)&v414,
                    (ItemParam *)&v414);
                  LODWORD(v414._M_ptr) = 149;
                  HIDWORD(v414._M_ptr) = SAFE_ADD<unsigned int,unsigned int>(total_income_b, *(_DWORD *)(v4 + 96));
                  v414._M_refcount._M_pi = 0LL;
                  std::vector<ItemParam>::emplace_back<ItemParam>(
                    (std::vector<ItemParam> *const)(v4 + 832),
                    (ItemParam *)&v414,
                    (ItemParam *)&v414);
                  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->player_);
                  v314 = Player::getItemComp(this->player_);
                  *(_DWORD *)(v4 + 64) = PlayerItemComp::checkAddItemBatch(
                                           v314,
                                           (const std::vector<ItemParam> *)(v4 + 832),
                                           (const ActionReason *)(v4 + 768));
                  if ( *(_DWORD *)(v4 + 64) )
                  {
                    common::milog::MiLogStream::create(
                      &v419,
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/player/activity/vintage_activity.cpp",
                      "marketFinishStorePlay",
                      3231);
                    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                      &v419,
                      (const char (*)[35])"[Vintage] checkAddItemBatch failed");
                    common::milog::MiLogStream::~MiLogStream(&v419);
                    v3 = *(_DWORD *)(v4 + 64);
                  }
                  else
                  {
                    if ( !*(_DWORD *)(v4 + 420) )
                      goto LABEL_250;
                    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                      __asan_report_load8(&this->player_);
                    v315 = Player::getItemComp(this->player_);
                    SubItemReason::SubItemReason((SubItemReason *const)&__for_end, (const ActionReason *)(v4 + 768));
                    *(_DWORD *)(v4 + 64) = PlayerItemComp::subItem(
                                             v315,
                                             (const ItemParam *)(v4 + 416),
                                             (const SubItemReason *)&__for_end);
                    if ( *(_DWORD *)(v4 + 64) )
                    {
                      common::milog::MiLogStream::create(
                        &v419,
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/player/activity/vintage_activity.cpp",
                        "marketFinishStorePlay",
                        3241);
                      common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
                        &v419,
                        (const char (*)[25])"[Vintage] subItem failed");
                      common::milog::MiLogStream::~MiLogStream(&v419);
                      v3 = *(_DWORD *)(v4 + 64);
                    }
                    else
                    {
LABEL_250:
                      v318 = 149LL;
                      ActivityCoin = VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_B);
                      v317 = *(_BYTE *)(((unsigned __int64)&this->prev_coin_b_num_ >> 3) + 0x7FFF8000);
                      LOBYTE(v318) = v317 != 0;
                      v319 = (v317 != 0) & (unsigned __int8)((char)((((_BYTE)this - 68) & 7) + 3) >= v317);
                      if ( (_BYTE)v319 )
                        __asan_report_store4(&this->prev_coin_b_num_, v318, v319);
                      this->prev_coin_b_num_ = ActivityCoin;
                      v322 = 150LL;
                      v320 = (unsigned int)VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C);
                      v321 = *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000);
                      LOBYTE(v322) = v321 != 0;
                      if ( v321 != 0 && v321 <= 3 )
                        __asan_report_store4(&this->prev_coin_c_num_, v322, v320);
                      this->prev_coin_c_num_ = v320;
                      if ( *(char *)(((unsigned __int64)&this->is_in_store_settle_duration_ >> 3) + 0x7FFF8000) < 0 )
                        __asan_report_store1(
                          &this->is_in_store_settle_duration_,
                          v322,
                          &this->is_in_store_settle_duration_);
                      this->is_in_store_settle_duration_ = 1;
                      __for_range_1 = &this->store_map_;
                      *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v4 + 288) = std::map<unsigned int,VintageMarketStoreData>::begin(&this->store_map_);
                      *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v4 + 320) = std::map<unsigned int,VintageMarketStoreData>::end(__for_range_1);
                      while ( std::operator!=(
                                (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v4 + 288),
                                (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v4 + 320)) )
                      {
                        v405 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 288));
                        id_0 = std::get<0ul,unsigned int const,VintageMarketStoreData>(v405);
                        store_data_0 = std::get<1ul,unsigned int const,VintageMarketStoreData>(v405);
                        *(std::map<unsigned int,std::vector<unsigned int>>::iterator *)(v4 + 352) = std::map<unsigned int,std::vector<unsigned int>>::find((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1104), id_0);
                        __for_end.it_ = (void *const *)std::map<unsigned int,std::vector<unsigned int>>::end((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1104))._M_node;
                        if ( std::operator==(
                               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)(v4 + 352),
                               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)&__for_end) )
                        {
                          common::milog::MiLogStream::create(
                            &v419,
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/player/activity/vintage_activity.cpp",
                            "marketFinishStorePlay",
                            3260);
                          v323 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
                                   &v419,
                                   (const char (*)[50])"[Vintage] find store current attr_vec failed, id:");
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v323, id_0);
                          common::milog::MiLogStream::~MiLogStream(&v419);
                        }
                        else
                        {
                          for ( idx_1 = 0; ; ++idx_1 )
                          {
                            v324 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v4 + 352));
                            if ( idx_1 >= std::vector<unsigned int>::size(&v324->second)
                              || idx_1 >= std::vector<unsigned int>::size(&store_data_0->attr_vec) )
                            {
                              break;
                            }
                            v326 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v4 + 352));
                            v327 = std::vector<unsigned int>::operator[](&v326->second, idx_1);
                            v328 = v327;
                            if ( *(_BYTE *)(((unsigned __int64)v327 >> 3) + 0x7FFF8000) != 0
                              && (char)(((unsigned __int8)v327 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v327 >> 3)
                                                                                     + 0x7FFF8000) )
                            {
                              __asan_report_load4(v327);
                            }
                            v329 = *v328;
                            v330 = std::vector<unsigned int>::operator[](&store_data_0->attr_vec, idx_1);
                            v331 = v330;
                            if ( *(_BYTE *)(((unsigned __int64)v330 >> 3) + 0x7FFF8000) != 0
                              && (char)(((unsigned __int8)v330 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v330 >> 3)
                                                                                     + 0x7FFF8000) )
                            {
                              __asan_report_load4(v330);
                            }
                            v332 = SAFE_ADD<unsigned int,unsigned int>(*v331, v329);
                            v333 = idx_1;
                            v334 = std::vector<unsigned int>::operator[](&store_data_0->attr_vec, idx_1);
                            v335 = v334;
                            v336 = *(_BYTE *)(((unsigned __int64)v334 >> 3) + 0x7FFF8000);
                            if ( v336 != 0 && (char)(((unsigned __int8)v334 & 7) + 3) >= v336 )
                            {
                              LOBYTE(v333) = v336 != 0;
                              __asan_report_store4(v334, v333, v334);
                            }
                            *v335 = v332;
                          }
                        }
                        std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v4 + 288));
                      }
                      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                        __asan_report_load8(&this->player_);
                      v337 = Player::getItemComp(this->player_);
                      if ( PlayerItemComp::addItemBatch(
                             v337,
                             (const std::vector<ItemParam> *)(v4 + 832),
                             (const ActionReason *)(v4 + 768),
                             0LL) )
                      {
                        common::milog::MiLogStream::create(
                          &v419,
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/player/activity/vintage_activity.cpp",
                          "marketFinishStorePlay",
                          3272);
                        common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
                          &v419,
                          (const char (*)[30])"[Vintage] addItemBatch failed");
                        common::milog::MiLogStream::~MiLogStream(&v419);
                      }
                      VintageActivity::updateStoreRound(this);
                      v338 = (char *)(v4 + 160);
                      std::vector<unsigned int>::push_back(
                        &this->store_round_income_vec_,
                        (const std::vector<unsigned int>::value_type *)(v4 + 160));
                      if ( *(_DWORD *)(v4 + 80) )
                      {
                        if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
                          && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
                        {
                          __asan_report_load4(&this->store_round_);
                        }
                        v339 = this->store_round_ + help_cd_round;
                        v340 = *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000);
                        LOBYTE(v338) = v340 != 0;
                        v341 = (v340 != 0) & (unsigned __int8)((char)((((_BYTE)this - 84) & 7) + 3) >= v340);
                        if ( (_BYTE)v341 )
                          __asan_report_store4(&this->next_can_use_help_round_, v338, v341);
                        this->next_can_use_help_round_ = v339;
                        VintageActivity::sendDividendByOfflineOp(this, *(_DWORD *)(v4 + 80));
                      }
                      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 896));
                      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 960));
                      VintageActivity::updateEnvEventData(this, (std::vector<unsigned int> *)(v4 + 896));
                      VintageActivity::updateNpcEventData(this, (std::vector<unsigned int> *)(v4 + 960));
                      v342 = proto::VintageMarketFinishStorePlayRsp::mutable_trigger_env_event_list(rsp_0);
                      common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
                        (const std::vector<unsigned int> *)(v4 + 896),
                        v342);
                      v343 = proto::VintageMarketFinishStorePlayRsp::mutable_trigger_npc_event_list(rsp_0);
                      common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
                        (const std::vector<unsigned int> *)(v4 + 960),
                        v343);
                      BaseActivity::updateAllConds((BaseActivity *const)this);
                      if ( *(char *)(((unsigned __int64)&this->is_in_store_settle_duration_ >> 3) + 0x7FFF8000) < 0 )
                        __asan_report_store1(
                          &this->is_in_store_settle_duration_,
                          v343,
                          &this->is_in_store_settle_duration_);
                      this->is_in_store_settle_duration_ = 0;
                      cur_coin_c_num = VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C);
                      if ( *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((unsigned __int64)&this->prev_coin_c_num_ >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(&this->prev_coin_c_num_);
                      }
                      if ( cur_coin_c_num <= this->prev_coin_c_num_ )
                        v344 = 0;
                      else
                        v344 = cur_coin_c_num - this->prev_coin_c_num_;
                      proto::VintageMarketFinishStorePlayRsp::set_round_delta_coin_c(rsp_0, v344);
                      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
                      common::tools::perf::make_shared<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle>();
                      v345 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 480));
                      v346 = proto::VintageMarketFinishStorePlayReq::store_round(req);
                      proto_log::PlayerLogBodyVintageMarketStoreRoundSettle::set_round(v345, v346);
                      v347 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 480));
                      v348 = proto::VintageMarketFinishStorePlayReq::store_op_list_size(req);
                      proto_log::PlayerLogBodyVintageMarketStoreRoundSettle::set_shop_count(v347, v348);
                      v349 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 480));
                      if ( *(char *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000) < 0 )
                        __asan_report_load1(&this->is_store_content_finish_);
                      proto_log::PlayerLogBodyVintageMarketStoreRoundSettle::set_is_finish_store_content(
                        v349,
                        this->is_store_content_finish_);
                      v350 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 480));
                      v351 = VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A);
                      proto_log::PlayerLogBodyVintageMarketStoreRoundSettle::set_total_income(v350, v351);
                      v352 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 480));
                      proto_log::PlayerLogBodyVintageMarketStoreRoundSettle::set_round_income(
                        v352,
                        *(_DWORD *)(v4 + 160));
                      __for_range_2 = proto::VintageMarketFinishStorePlayReq::store_op_list(req);
                      *(google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::const_iterator *)(v4 + 352) = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::begin(__for_range_2);
                      __for_end.it_ = google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo>::end(__for_range_2).it_;
                      while ( google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator!=(
                                (const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageMarketStoreOpInfo> *const)(v4 + 352),
                                &__for_end) )
                      {
                        op = google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::VintageMarketStoreOpInfo> *const)(v4 + 352));
                        v353 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 480));
                        store_log = proto_log::PlayerLogBodyVintageMarketStoreRoundSettle::add_store_list(v353);
                        v354 = proto::VintageMarketStoreOpInfo::store_id(op);
                        proto_log::VintageMarketStoreRoundLog::set_id(store_log, v354);
                        *(_DWORD *)(v4 + 176) = proto::VintageMarketStoreOpInfo::store_id(op);
                        v355 = common::tools::MiscUtils::findMapWithDefaultValue<std::map<unsigned int,unsigned int>>(
                                 (const std::map<unsigned int,unsigned int> *)(v4 + 1424),
                                 (const std::map<unsigned int,unsigned int>::key_type *)(v4 + 176),
                                 0);
                        proto_log::VintageMarketStoreRoundLog::set_income(store_log, v355);
                        v356 = proto_log::VintageMarketStoreRoundLog::mutable_add_attr_list(store_log);
                        v357 = proto::VintageMarketStoreOpInfo::add_attr_list(op);
                        google::protobuf::RepeatedField<unsigned int>::CopyFrom(v356, v357);
                        v358 = proto_log::VintageMarketStoreRoundLog::mutable_strategy_list(store_log);
                        v359 = proto::VintageMarketStoreOpInfo::strategy_list(op);
                        google::protobuf::RepeatedField<unsigned int>::CopyFrom(v358, v359);
                        v360 = proto::VintageMarketStoreOpInfo::help_uid(op);
                        proto_log::VintageMarketStoreRoundLog::set_help_uid(store_log, v360);
                        v361 = proto::VintageMarketStoreOpInfo::help_skill_id(op);
                        proto_log::VintageMarketStoreRoundLog::set_help_skill_id(store_log, v361);
                        google::protobuf::internal::RepeatedPtrIterator<proto::VintageMarketStoreOpInfo const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::VintageMarketStoreOpInfo> *const)(v4 + 352));
                      }
                      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                        __asan_report_load8(&this->player_);
                      player = this->player_;
                      std::shared_ptr<google::protobuf::Message>::shared_ptr(&v414, 0LL);
                      std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle,void>(
                        &v413,
                        (const std::shared_ptr<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle> *)(v4 + 480));
                      Player::printStatLog(player, &v413, &v414, 0xEu);
                      std::shared_ptr<google::protobuf::Message>::~shared_ptr(&v413);
                      std::shared_ptr<google::protobuf::Message>::~shared_ptr(&v414);
                      v363 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                               (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 448),
                               ",finish round:");
                      v364 = proto::VintageMarketFinishStorePlayReq::store_round(req);
                      v365 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v363, v364);
                      v366 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                               v365,
                               ",cur_round:");
                      if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(&this->store_round_);
                      }
                      v367 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                               v366,
                               this->store_round_);
                      v368 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                               v367,
                               ",trigger_env_event:");
                      v369 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<<unsigned int>(
                               v368,
                               (const std::vector<unsigned int> *)(v4 + 896));
                      v370 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                               v369,
                               ",trigger_npc_event:");
                      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<<unsigned int>(
                        v370,
                        (const std::vector<unsigned int> *)(v4 + 960));
                      common::milog::MiLogStream::create(
                        &v418,
                        &common::milog::MiLogDefault::default_log_obj_,
                        1u,
                        "./src/player/activity/vintage_activity.cpp",
                        "marketFinishStorePlay",
                        3323);
                      common::tools::StringStream<common::tools::FixedBuffer<4096>>::str[abi:cxx11](
                        (std::string *)&v419,
                        (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 448));
                      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(
                        &v418,
                        (const std::string *)&v419);
                      std::string::~string(&v419);
                      common::milog::MiLogStream::~MiLogStream(&v418);
                      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                        __asan_report_load8(&this->player_);
                      v371 = this->player_;
                      common::tools::StringStream<common::tools::FixedBuffer<4096>>::str[abi:cxx11](
                        (std::string *)&v419,
                        (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384));
                      Player::notifyServerLog(v371, SERVER_LOG_LEVEL, LOG_LEVEL_NONE, (const std::string *)&v419);
                      std::string::~string(&v419);
                      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                        __asan_report_load8(&this->player_);
                      v372 = this->player_;
                      common::tools::StringStream<common::tools::FixedBuffer<4096>>::str[abi:cxx11](
                        (std::string *)&v419,
                        (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 448));
                      Player::notifyServerLog(v372, SERVER_LOG_LEVEL, LOG_LEVEL_NONE, (const std::string *)&v419);
                      std::string::~string(&v419);
                      v3 = 0;
                      std::shared_ptr<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyVintageMarketStoreRoundSettle> *const)(v4 + 480));
                      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 960));
                      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 896));
                    }
                  }
                  std::vector<ItemParam>::~vector((std::vector<ItemParam> *const)(v4 + 832));
                  common::tools::StringStream<common::tools::FixedBuffer<4096>>::~StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 448));
                  std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v4 + 1424));
                }
              }
LABEL_306:
              common::tools::StringStream<common::tools::FixedBuffer<4096>>::~StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v4 + 384));
              std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 512));
              std::map<unsigned int,float>::~map((std::map<unsigned int,float> *const)(v4 + 1344));
              std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v4 + 1264));
              std::map<unsigned int,std::vector<unsigned int>>::~map((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1184));
              std::map<unsigned int,std::vector<unsigned int>>::~map((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1104));
              StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v4 + 48));
            }
          }
          std::map<unsigned int,std::vector<unsigned int>>::~map((std::map<unsigned int,std::vector<unsigned int>> *const)(v4 + 1024));
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v420,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "marketFinishStorePlay",
          2882);
        v15 = common::milog::MiLogStream::operator<<<char [70],(char *[70])0>(
                &v420,
                (const char (*)[70])"[Vintage] findVintageMarketConstValueExcelConfig failed, activity_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &this->activity_id_);
        common::milog::MiLogStream::~MiLogStream(&v420);
        v3 = -1;
      }
    }
  }
  if ( v422 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8078) = 0LL;
    memset(
      (void *)((unsigned __int64)(v6 + 536862722) & 0xFFFFFFFFFFFFFFF8LL),
      0,
      8LL * ((((_DWORD)v6 + 2147450880 - (((_DWORD)v6 + 2147450888) & 0xFFFFFFF8) + 128) & 0xFFFFFFF8) >> 3));
    *(_QWORD *)((v4 >> 3) + 0x7FFF8084) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8090) = 0;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8098) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF80A4) = 0;
    *(_QWORD *)((v4 >> 3) + 0x7FFF80AC) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF80B8) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    __asan_stack_free_5(v4, 1504LL, v422);
  }
  return v3;
};

// Line 3007: range 000000001499A7A4-000000001499A81C
int __cdecl VintageActivity::marketFinishStorePlay(proto::VintageMarketFinishStorePlayReq const&,proto::VintageMarketFinishStorePlayRsp &)::{lambda(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)#1}::operator()(
        const VintageActivity::marketFinishStorePlay::<lambda(uint32_t, const std::vector<data::VintageMarketEffectExcelConfig>&)> *const __closure,
        uint32_t store_id,
        const std::vector<data::VintageMarketEffectExcelConfig> *effect_vec)
{
  VintageActivity *this; // rax

  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  this = __closure->__this;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__base_buff_attr_pair_vec >> 3) + 0x7FFF8000) )
    this = (VintageActivity *)__asan_report_load8(&__closure->__base_buff_attr_pair_vec);
  return VintageActivity::doEffectOnActuAttr(this, store_id, effect_vec, __closure->__base_buff_attr_pair_vec);
};

// Line 3026: range 000000001499A81E-000000001499A896
int __cdecl VintageActivity::marketFinishStorePlay(proto::VintageMarketFinishStorePlayReq const&,proto::VintageMarketFinishStorePlayRsp &)::{lambda(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)#2}::operator()(
        const VintageActivity::marketFinishStorePlay::<lambda(uint32_t, const std::vector<data::VintageMarketEffectExcelConfig>&)>_0 *const __closure,
        uint32_t store_id,
        const std::vector<data::VintageMarketEffectExcelConfig> *effect_vec)
{
  VintageActivity *this; // rax

  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  this = __closure->__this;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__base_buff_aim_attr_pair_vec >> 3) + 0x7FFF8000) )
    this = (VintageActivity *)__asan_report_load8(&__closure->__base_buff_aim_attr_pair_vec);
  return VintageActivity::doEffectOnAimAttr(this, store_id, effect_vec, __closure->__base_buff_aim_attr_pair_vec);
};

// Line 3091: range 000000001499A898-000000001499A9A0
int __cdecl VintageActivity::marketFinishStorePlay(proto::VintageMarketFinishStorePlayReq const&,proto::VintageMarketFinishStorePlayRsp &)::{lambda(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)#3}::operator()(
        const VintageActivity::marketFinishStorePlay::<lambda(uint32_t, const std::vector<data::VintageMarketEffectExcelConfig>&)>_1 *const __closure,
        uint32_t store_id,
        const std::vector<data::VintageMarketEffectExcelConfig> *effect_vec)
{
  VintageActivity *this; // rax
  uint32_t *display_return_coin_b; // rdi
  uint32_t *return_coin_b; // r9
  std::vector<unsigned int> *cost_vec; // r8

  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  this = __closure->__this;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__display_return_coin_b >> 3) + 0x7FFF8000) )
    this = (VintageActivity *)__asan_report_load8(&__closure->__display_return_coin_b);
  display_return_coin_b = __closure->__display_return_coin_b;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__return_coin_b >> 3) + 0x7FFF8000) )
  {
    display_return_coin_b = (uint32_t *)&__closure->__return_coin_b;
    this = (VintageActivity *)__asan_report_load8(&__closure->__return_coin_b);
  }
  return_coin_b = __closure->__return_coin_b;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__cost_vec >> 3) + 0x7FFF8000) )
  {
    display_return_coin_b = (uint32_t *)&__closure->__cost_vec;
    this = (VintageActivity *)__asan_report_load8(&__closure->__cost_vec);
  }
  cost_vec = __closure->__cost_vec;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__finish_aim_attr_vec >> 3) + 0x7FFF8000) )
  {
    display_return_coin_b = (uint32_t *)&__closure->__finish_aim_attr_vec;
    this = (VintageActivity *)__asan_report_load8(&__closure->__finish_aim_attr_vec);
  }
  return VintageActivity::doEffectOnReturnCoinB(
           this,
           store_id,
           effect_vec,
           __closure->__finish_aim_attr_vec,
           cost_vec,
           return_coin_b,
           display_return_coin_b);
};

// Line 3105: range 000000001499A9A2-000000001499AA7A
int __cdecl VintageActivity::marketFinishStorePlay(proto::VintageMarketFinishStorePlayReq const&,proto::VintageMarketFinishStorePlayRsp &)::{lambda(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)#4}::operator()(
        const VintageActivity::marketFinishStorePlay::<lambda(uint32_t, const std::vector<data::VintageMarketEffectExcelConfig>&)>_2 *const __closure,
        uint32_t store_id,
        const std::vector<data::VintageMarketEffectExcelConfig> *effect_vec)
{
  VintageActivity *this; // rax
  float *income_factor; // r8
  uint32_t *fix_income; // rdi

  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  this = __closure->__this;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__income_factor >> 3) + 0x7FFF8000) )
    this = (VintageActivity *)__asan_report_load8(&__closure->__income_factor);
  income_factor = __closure->__income_factor;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__fix_income >> 3) + 0x7FFF8000) )
    this = (VintageActivity *)__asan_report_load8(&__closure->__fix_income);
  fix_income = __closure->__fix_income;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__finish_aim_attr_vec >> 3) + 0x7FFF8000) )
  {
    fix_income = (uint32_t *)&__closure->__finish_aim_attr_vec;
    this = (VintageActivity *)__asan_report_load8(&__closure->__finish_aim_attr_vec);
  }
  return VintageActivity::doEffectOnIncome(
           this,
           store_id,
           effect_vec,
           __closure->__finish_aim_attr_vec,
           fix_income,
           income_factor);
};

// Line 3334: range 000000001499FC90-00000000149A042C
__int64 __fastcall VintageActivity::calcStoreEffect(
        VintageActivity *const this,
        uint32_t store_id,
        uint32_t help_skill_id,
        const std::vector<unsigned int> *skill_vec,
        std::function<int(unsigned int,const std::vector<data::VintageMarketEffectExcelConfig>&)> *p_func)
{
  unsigned __int64 v5; // rbx
  __int64 v6; // rax
  _DWORD *v7; // r12
  common::milog::MiLogStream *v8; // rax
  __int64 result; // rax
  data::VintageMarketEffectExcelConfig *i; // r13
  void (__fastcall **vptr_VintageMarketEffectExcelConfig)(data::VintageMarketEffectExcelConfig *); // rax
  __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >::reference v12; // rax
  _DWORD *v13; // rdx
  common::milog::MiLogStream *v14; // rax
  const ActivityVintageMarketExcelConfigMgr *v15; // rcx
  common::milog::MiLogStream *v16; // rax
  std::initializer_list<data::VintageMarketEffectExcelConfig> __l; // [rsp+0h] [rbp-1A0h]
  std::allocator<data::VintageMarketEffectExcelConfig> __a; // [rsp+33h] [rbp-16Dh] BYREF
  int32_t ret; // [rsp+34h] [rbp-16Ch]
  std::vector<unsigned int>::const_iterator __for_begin; // [rsp+38h] [rbp-168h] BYREF
  std::vector<unsigned int>::const_iterator __for_end; // [rsp+40h] [rbp-160h] BYREF
  const ActivityVintageMarketExcelConfigMgr *config_mgr; // [rsp+48h] [rbp-158h]
  const data::VintageMarketHelpSkillExcelConfig *config_ptr; // [rsp+50h] [rbp-150h]
  const std::vector<unsigned int> *__for_range; // [rsp+58h] [rbp-148h]
  std::unordered_map<unsigned int,unsigned int> *__for_range_0; // [rsp+60h] [rbp-140h]
  const std::pair<unsigned int const,unsigned int> *v29; // [rsp+68h] [rbp-138h]
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *env_id; // [rsp+70h] [rbp-130h]
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *round; // [rsp+78h] [rbp-128h]
  const data::VintageMarketEnvEventExcelConfig *config_ptr_1; // [rsp+80h] [rbp-120h]
  const data::VintageMarketSkillExcelConfig *config_ptr_0; // [rsp+88h] [rbp-118h]
  std::shared_ptr<Config> v34; // [rsp+90h] [rbp-110h] BYREF
  std::vector<data::VintageMarketEffectExcelConfig> __args_1; // [rsp+A0h] [rbp-100h] BYREF
  common::milog::MiLogStream v36; // [rsp+C0h] [rbp-E0h] BYREF
  data::VintageMarketEffectExcelConfig v37; // [rsp+E0h] [rbp-C0h] BYREF
  char v38[144]; // [rsp+110h] [rbp-90h] BYREF

  v5 = (unsigned __int64)v38;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_1(96LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "2 48 4 13 skill_id:3351 64 4 18 help_skill_id:3333";
  *(_QWORD *)(v5 + 16) = VintageActivity::calcStoreEffect;
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -234556943;
  v7[536862722] = -202116348;
  *(_DWORD *)(v5 + 64) = help_skill_id;
  ret = 0;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v34);
  config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v34)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
  std::shared_ptr<Config>::~shared_ptr(&v34);
  if ( !*(_DWORD *)(v5 + 64) )
    goto LABEL_16;
  config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketHelpSkillExcelConfig(
                 config_mgr,
                 *(_DWORD *)(v5 + 64));
  if ( !config_ptr )
  {
    common::milog::MiLogStream::create(
      &v36,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "calcStoreEffect",
      3342);
    v8 = common::milog::MiLogStream::operator<<<char [71],(char *[71])0>(
           &v36,
           (const char (*)[71])"[Vintage] findVintageMarketHelpSkillExcelConfig failed, help_skill_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v5 + 64));
    common::milog::MiLogStream::~MiLogStream(&v36);
    result = 0xFFFFFFFFLL;
    goto LABEL_35;
  }
  data::VintageMarketEffectExcelConfig::VintageMarketEffectExcelConfig(&v37, &config_ptr->effect);
  __l._M_array = &v37;
  __l._M_len = 1LL;
  std::allocator<data::VintageMarketEffectExcelConfig>::allocator(&__a);
  std::vector<data::VintageMarketEffectExcelConfig>::vector(&__args_1, __l, &__a);
  ret = std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::operator()(
          p_func,
          store_id,
          &__args_1);
  std::vector<data::VintageMarketEffectExcelConfig>::~vector(&__args_1);
  std::allocator<data::VintageMarketEffectExcelConfig>::~allocator(&__a);
  for ( i = (data::VintageMarketEffectExcelConfig *)v38; i != &v37; (*vptr_VintageMarketEffectExcelConfig)(i) )
  {
    if ( *(_BYTE *)(((unsigned __int64)--i >> 3) + 0x7FFF8000) )
      __asan_report_load8(i);
    vptr_VintageMarketEffectExcelConfig = (void (__fastcall **)(data::VintageMarketEffectExcelConfig *))i->_vptr_VintageMarketEffectExcelConfig;
    if ( *(_BYTE *)(((unsigned __int64)i->_vptr_VintageMarketEffectExcelConfig >> 3) + 0x7FFF8000) )
      vptr_VintageMarketEffectExcelConfig = (void (__fastcall **)(data::VintageMarketEffectExcelConfig *))__asan_report_load8(i->_vptr_VintageMarketEffectExcelConfig);
  }
  if ( ret )
  {
    result = (unsigned int)ret;
  }
  else
  {
LABEL_16:
    __for_range = skill_vec;
    __for_begin._M_current = std::vector<unsigned int>::begin(skill_vec)._M_current;
    __for_end._M_current = std::vector<unsigned int>::end(__for_range)._M_current;
    while ( __gnu_cxx::operator!=<unsigned int const*,std::vector<unsigned int>>(&__for_begin, &__for_end) )
    {
      v12 = __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator*(&__for_begin);
      v13 = v12;
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v12 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v12);
      }
      *(_DWORD *)(v5 + 48) = *v13;
      config_ptr_0 = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketSkillExcelConfig(
                       config_mgr,
                       *(_DWORD *)(v5 + 48));
      if ( !config_ptr_0 )
      {
        common::milog::MiLogStream::create(
          &v36,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "calcStoreEffect",
          3356);
        v14 = common::milog::MiLogStream::operator<<<char [62],(char *[62])0>(
                &v36,
                (const char (*)[62])"[Vintage] findVintageMarketSkillExcelConfig failed, skill_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v5 + 48));
        common::milog::MiLogStream::~MiLogStream(&v36);
        result = 0xFFFFFFFFLL;
        goto LABEL_35;
      }
      ret = std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::operator()(
              p_func,
              store_id,
              &config_ptr_0->effect_list);
      if ( ret )
      {
        result = (unsigned int)ret;
        goto LABEL_35;
      }
      __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator++(&__for_begin);
    }
    __for_range_0 = &this->env_to_round_map_;
    __for_begin._M_current = (const unsigned int *)std::unordered_map<unsigned int,unsigned int>::begin(&this->env_to_round_map_)._M_cur;
    __for_end._M_current = (const unsigned int *)std::unordered_map<unsigned int,unsigned int>::end(__for_range_0)._M_cur;
    while ( std::__detail::operator!=<std::pair<unsigned int const,unsigned int>,false>(
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)&__for_begin,
              (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)&__for_end) )
    {
      v29 = std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator*((const std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)&__for_begin);
      env_id = std::get<0ul,unsigned int const,unsigned int>(v29);
      round = (std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *)std::get<1ul,unsigned int const,unsigned int>(v29);
      v15 = config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)env_id >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)env_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)env_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(env_id);
      }
      config_ptr_1 = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketEnvEventExcelConfig(v15, *env_id);
      if ( !config_ptr_1 )
      {
        common::milog::MiLogStream::create(
          &v36,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "calcStoreEffect",
          3370);
        v16 = common::milog::MiLogStream::operator<<<char [63],(char *[63])0>(
                &v36,
                (const char (*)[63])"[Vintage] findVintageMarketEnvEventExcelConfig failed, env_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, env_id);
        common::milog::MiLogStream::~MiLogStream(&v36);
        result = 0xFFFFFFFFLL;
        goto LABEL_35;
      }
      ret = std::function<int ()(unsigned int,std::vector<data::VintageMarketEffectExcelConfig> const&)>::operator()(
              p_func,
              store_id,
              &config_ptr_1->effect_list);
      if ( ret )
      {
        result = (unsigned int)ret;
        goto LABEL_35;
      }
      std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator++((std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)&__for_begin);
    }
    result = (unsigned int)ret;
  }
LABEL_35:
  if ( v38 == (char *)v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 3383: range 00000000149A042E-00000000149A12D7
int32_t __cdecl VintageActivity::doEffectOnActuAttr(
        VintageActivity *const this,
        uint32_t store_id,
        const std::vector<data::VintageMarketEffectExcelConfig> *effect_vec,
        std::vector<std::pair<unsigned int,int>> *actu_attr_vec)
{
  int32_t v4; // r14d
  unsigned __int64 v5; // r12
  __int64 v6; // rax
  _DWORD *v7; // r13
  bool v8; // r15
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // r14
  data::VintageMarketEffectType type; // eax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  std::vector<unsigned int>::reference v17; // rax
  uint32_t *v18; // rdx
  std::vector<unsigned int>::reference v19; // rax
  uint32_t *v20; // rdx
  std::vector<std::pair<unsigned int,int>>::size_type v21; // r15
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  std::vector<std::pair<unsigned int,int>>::reference v25; // rax
  unsigned int *v26; // rdx
  float v27; // xmm0_4
  std::vector<std::pair<unsigned int,int>>::reference v28; // rax
  common::milog::MiLogStream *v29; // rax
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  std::vector<unsigned int>::reference v33; // rax
  _DWORD *v34; // rdx
  std::vector<unsigned int>::reference v35; // rax
  uint32_t *v36; // rdx
  std::vector<unsigned int>::reference v37; // rax
  uint32_t *v38; // rdx
  std::vector<std::pair<unsigned int,int>>::size_type v39; // r15
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // rax
  std::vector<std::pair<unsigned int,int>>::reference v43; // rax
  unsigned int *v44; // rdx
  float v45; // xmm0_4
  std::vector<std::pair<unsigned int,int>>::reference v46; // rax
  int v47; // r15d
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+37h] [rbp-119h] BYREF
  int32_t count; // [rsp+38h] [rbp-118h]
  int32_t count_0; // [rsp+3Ch] [rbp-114h]
  uint32_t attr_number_0; // [rsp+40h] [rbp-110h]
  uint32_t param_count_0; // [rsp+44h] [rbp-10Ch]
  float percent_0; // [rsp+48h] [rbp-108h]
  uint32_t attr_number; // [rsp+4Ch] [rbp-104h]
  uint32_t param_count; // [rsp+50h] [rbp-100h]
  float percent; // [rsp+54h] [rbp-FCh]
  std::vector<data::VintageMarketEffectExcelConfig>::const_iterator __for_begin; // [rsp+58h] [rbp-F8h] BYREF
  std::vector<data::VintageMarketEffectExcelConfig>::const_iterator __for_end; // [rsp+60h] [rbp-F0h] BYREF
  char *val; // [rsp+68h] [rbp-E8h] BYREF
  const std::vector<data::VintageMarketEffectExcelConfig> *__for_range; // [rsp+70h] [rbp-E0h]
  const data::VintageMarketEffectExcelConfig *effect_config; // [rsp+78h] [rbp-D8h]
  std::string sep; // [rsp+80h] [rbp-D0h] BYREF
  char v66[176]; // [rsp+A0h] [rbp-B0h] BYREF

  v5 = (unsigned __int64)v66;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_1(128LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "2 48 4 17 env_event_id:3435 64 24 12 num_vec:3386";
  *(_QWORD *)(v5 + 16) = VintageActivity::doEffectOnActuAttr;
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -234556943;
  v7[536862722] = -218103808;
  v7[536862723] = -202116109;
  __for_range = effect_vec;
  __for_begin._M_current = std::vector<data::VintageMarketEffectExcelConfig>::begin(effect_vec)._M_current;
  __for_end._M_current = std::vector<data::VintageMarketEffectExcelConfig>::end(effect_vec)._M_current;
  while ( __gnu_cxx::operator!=<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>(
            &__for_begin,
            &__for_end) )
  {
    effect_config = __gnu_cxx::__normal_iterator<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>::operator*(&__for_begin);
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v5 + 64));
    std::allocator<char>::allocator(&__a, &__for_end);
    std::string::basic_string<std::allocator<char>>(&sep, ";", &__a);
    v8 = common::tools::StringUtils::splitToList<unsigned int>(
           &effect_config->param,
           &sep,
           (std::vector<unsigned int> *)(v5 + 64),
           0) != 0;
    std::string::~string(&sep);
    std::allocator<char>::~allocator(&__a);
    if ( v8 )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&sep,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "doEffectOnActuAttr",
        3389);
      v9 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
             (common::milog::MiLogStream *const)&sep,
             (const char (*)[31])"[Vintage] splitToList falied: ");
      v10 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v9, &effect_config->param);
      v11 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v10, (const char (*)[15])", effect_type:");
      if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&effect_config->type);
      }
LABEL_54:
      val = (char *)data::enumValToStr(effect_config->type);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&val);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&sep);
      v4 = -1;
      v47 = 0;
      goto LABEL_84;
    }
    if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&effect_config->type);
    }
    type = effect_config->type;
    if ( type <= VINTAGE_MARKET_EFFECT_ADD_PERCENT_ATTR_WITH_ENV )
    {
      if ( type >= VINTAGE_MARKET_EFFECT_ADD_FIXED_ATTR_WITH_ENV )
      {
        if ( std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v5 + 64)) <= 2 )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&sep,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "doEffectOnActuAttr",
            3432);
          v29 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                  (common::milog::MiLogStream *const)&sep,
                  (const char (*)[48])"[Vintage] effect param size error, expect_size:");
          *(_DWORD *)(v5 + 48) = 3;
          v30 = common::milog::MiLogStream::operator<<<int,(int *)0>(v29, (const int *)(v5 + 48));
          v31 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v30, (const char (*)[9])", param:");
          v32 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v31, &effect_config->param);
          v11 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                  v32,
                  (const char (*)[15])", effect_type:");
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          goto LABEL_54;
        }
        v33 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v5 + 64), 0LL);
        v34 = v33;
        if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v33 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v33);
        }
        *(_DWORD *)(v5 + 48) = *v34;
        if ( common::tools::MiscUtils::isContains<std::unordered_map<unsigned int,unsigned int>,unsigned int>(
               &this->env_to_round_map_,
               (const unsigned int *)(v5 + 48)) )
        {
          v35 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v5 + 64), 1uLL);
          v36 = v35;
          if ( *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v35 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v35);
          }
          attr_number_0 = *v36;
          v37 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v5 + 64), 2uLL);
          v38 = v37;
          if ( *(_BYTE *)(((unsigned __int64)v37 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v37 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v37 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v37);
          }
          param_count_0 = *v38;
          if ( !attr_number_0
            || (v39 = attr_number_0, v39 > std::vector<std::pair<unsigned int,int>>::size(actu_attr_vec)) )
          {
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&sep,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/vintage_activity.cpp",
              "doEffectOnActuAttr",
              3444);
            v41 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                    (common::milog::MiLogStream *const)&sep,
                    (const char (*)[44])"[Vintage] effect param config error, param:");
            v42 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v41, &effect_config->param);
            v11 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                    v42,
                    (const char (*)[15])", effect_type:");
            if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&effect_config->type);
            }
            goto LABEL_54;
          }
          count_0 = 0;
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          if ( effect_config->type == VINTAGE_MARKET_EFFECT_ADD_FIXED_ATTR_WITH_ENV )
          {
            count_0 = param_count_0;
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&effect_config->type);
            }
            if ( effect_config->type == VINTAGE_MARKET_EFFECT_ADD_PERCENT_ATTR_WITH_ENV )
            {
              percent_0 = (float)(int)param_count_0 / 100.0;
              v43 = std::vector<std::pair<unsigned int,int>>::operator[](actu_attr_vec, attr_number_0 - 1);
              v44 = (unsigned int *)v43;
              if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v43 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v43);
              }
              v45 = SAFE_MULTIPLY<unsigned int,float>(*v44, percent_0);
              count_0 = (int)std::floor(v45);
            }
          }
          v46 = std::vector<std::pair<unsigned int,int>>::operator[](actu_attr_vec, attr_number_0 - 1);
          if ( *(_BYTE *)(((unsigned __int64)&v46->second >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)v46 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&v46->second >> 3) + 0x7FFF8000) )
          {
            v46 = (std::vector<std::pair<unsigned int,int>>::reference)__asan_report_load4(&v46->second);
          }
          v46->second += count_0;
        }
      }
      else
      {
        if ( type > VINTAGE_MARKET_EFFECT_ATTR_SUB_FIXED )
        {
          if ( type != VINTAGE_MARKET_EFFECT_ATTR_ADD_PERCENT )
            goto LABEL_83;
        }
        else if ( type <= VINTAGE_MARKET_EFFECT_NONE )
        {
          goto LABEL_83;
        }
        if ( std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v5 + 64)) <= 1 )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&sep,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "doEffectOnActuAttr",
            3400);
          v13 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                  (common::milog::MiLogStream *const)&sep,
                  (const char (*)[48])"[Vintage] effect param size error, expect_size:");
          *(_DWORD *)(v5 + 48) = 2;
          v14 = common::milog::MiLogStream::operator<<<int,(int *)0>(v13, (const int *)(v5 + 48));
          v15 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v14, (const char (*)[9])", param:");
          v16 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v15, &effect_config->param);
          v11 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                  v16,
                  (const char (*)[15])", effect_type:");
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          goto LABEL_54;
        }
        v17 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v5 + 64), 0LL);
        v18 = v17;
        if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v17 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v17);
        }
        attr_number = *v18;
        v19 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v5 + 64), 1uLL);
        v20 = v19;
        if ( *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v19 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v19);
        }
        param_count = *v20;
        if ( !attr_number || (v21 = attr_number, v21 > std::vector<std::pair<unsigned int,int>>::size(actu_attr_vec)) )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&sep,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "doEffectOnActuAttr",
            3407);
          v23 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  (common::milog::MiLogStream *const)&sep,
                  (const char (*)[44])"[Vintage] effect param config error, param:");
          v24 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, &effect_config->param);
          v11 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                  v24,
                  (const char (*)[15])", effect_type:");
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          goto LABEL_54;
        }
        count = 0;
        if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&effect_config->type);
        }
        if ( effect_config->type == VINTAGE_MARKET_EFFECT_ATTR_ADD_FIXED )
        {
          count = param_count;
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          if ( effect_config->type == VINTAGE_MARKET_EFFECT_ATTR_SUB_FIXED )
          {
            count = -param_count;
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&effect_config->type);
            }
            if ( effect_config->type == VINTAGE_MARKET_EFFECT_ATTR_ADD_PERCENT )
            {
              percent = (float)(int)param_count / 100.0;
              v25 = std::vector<std::pair<unsigned int,int>>::operator[](actu_attr_vec, attr_number - 1);
              v26 = (unsigned int *)v25;
              if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v25 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v25);
              }
              v27 = SAFE_MULTIPLY<unsigned int,float>(*v26, percent);
              count = (int)std::floor(v27);
            }
          }
        }
        v28 = std::vector<std::pair<unsigned int,int>>::operator[](actu_attr_vec, attr_number - 1);
        if ( *(_BYTE *)(((unsigned __int64)&v28->second >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)v28 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&v28->second >> 3) + 0x7FFF8000) )
        {
          v28 = (std::vector<std::pair<unsigned int,int>>::reference)__asan_report_load4(&v28->second);
        }
        v28->second += count;
      }
    }
LABEL_83:
    v47 = 1;
LABEL_84:
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v5 + 64));
    if ( v47 != 1 )
      goto LABEL_87;
    __gnu_cxx::__normal_iterator<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>::operator++(&__for_begin);
  }
  v4 = 0;
LABEL_87:
  result = v4;
  if ( v66 == (char *)v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3469: range 00000000149A12D8-00000000149A1B5C
int32_t __cdecl VintageActivity::doEffectOnAimAttr(
        VintageActivity *const this,
        uint32_t store_id,
        const std::vector<data::VintageMarketEffectExcelConfig> *effect_vec,
        std::vector<std::pair<unsigned int,int>> *actu_aim_vec)
{
  int32_t v4; // r14d
  unsigned __int64 v5; // rbx
  __int64 v6; // rax
  _DWORD *v7; // r13
  bool v8; // r15
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  std::vector<unsigned int>::reference v17; // rax
  _DWORD *v18; // rdx
  std::vector<unsigned int>::reference v19; // rax
  uint32_t *v20; // rdx
  std::vector<unsigned int>::reference v21; // rax
  uint32_t *v22; // rdx
  std::vector<std::pair<unsigned int,int>>::size_type v23; // r15
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  int v27; // r15d
  std::vector<std::pair<unsigned int,int>>::reference v28; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+37h] [rbp-E9h] BYREF
  int v33; // [rsp+38h] [rbp-E8h] BYREF
  int32_t count; // [rsp+3Ch] [rbp-E4h]
  uint32_t attr_number; // [rsp+40h] [rbp-E0h]
  uint32_t param_count; // [rsp+44h] [rbp-DCh]
  std::vector<data::VintageMarketEffectExcelConfig>::const_iterator __for_begin; // [rsp+48h] [rbp-D8h] BYREF
  std::vector<data::VintageMarketEffectExcelConfig>::const_iterator __for_end; // [rsp+50h] [rbp-D0h] BYREF
  char *val; // [rsp+58h] [rbp-C8h] BYREF
  const std::vector<data::VintageMarketEffectExcelConfig> *__for_range; // [rsp+60h] [rbp-C0h]
  const data::VintageMarketEffectExcelConfig *effect_config; // [rsp+68h] [rbp-B8h]
  std::string sep; // [rsp+70h] [rbp-B0h] BYREF
  char v43[144]; // [rsp+90h] [rbp-90h] BYREF

  v5 = (unsigned __int64)v43;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_1(96LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "1 32 24 12 num_vec:3472";
  *(_QWORD *)(v5 + 16) = VintageActivity::doEffectOnAimAttr;
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -218103808;
  v7[536862722] = -202116109;
  __for_range = effect_vec;
  __for_begin._M_current = std::vector<data::VintageMarketEffectExcelConfig>::begin(effect_vec)._M_current;
  __for_end._M_current = std::vector<data::VintageMarketEffectExcelConfig>::end(effect_vec)._M_current;
  while ( __gnu_cxx::operator!=<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>(
            &__for_begin,
            &__for_end) )
  {
    effect_config = __gnu_cxx::__normal_iterator<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>::operator*(&__for_begin);
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v5 + 32));
    std::allocator<char>::allocator(&__a, &__for_end);
    std::string::basic_string<std::allocator<char>>(&sep, ";", &__a);
    v8 = common::tools::StringUtils::splitToList<unsigned int>(
           &effect_config->param,
           &sep,
           (std::vector<unsigned int> *)(v5 + 32),
           0) != 0;
    std::string::~string(&sep);
    std::allocator<char>::~allocator(&__a);
    if ( v8 )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&sep,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "doEffectOnAimAttr",
        3475);
      v9 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
             (common::milog::MiLogStream *const)&sep,
             (const char (*)[31])"[Vintage] splitToList falied: ");
      v10 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v9, &effect_config->param);
      v11 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v10, (const char (*)[15])", effect_type:");
      if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&effect_config->type);
      }
LABEL_31:
      val = (char *)data::enumValToStr(effect_config->type);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&val);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&sep);
      v4 = -1;
      v27 = 0;
      goto LABEL_44;
    }
    if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&effect_config->type);
    }
    if ( (unsigned int)(effect_config->type - 3) <= 1 )
    {
      if ( std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v5 + 32)) <= 2 )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&sep,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "doEffectOnAimAttr",
          3485);
        v12 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                (common::milog::MiLogStream *const)&sep,
                (const char (*)[16])"[CONFIG_ERROR] ");
        v13 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                v12,
                (const char (*)[48])"[Vintage] effect param size error, expect_size:");
        v33 = 3;
        v14 = common::milog::MiLogStream::operator<<<int,(int *)0>(v13, &v33);
        v15 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v14, (const char (*)[9])", param:");
        v16 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v15, &effect_config->param);
        v11 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v16, (const char (*)[15])", effect_type:");
        if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&effect_config->type);
        }
        goto LABEL_31;
      }
      v17 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v5 + 32), 0LL);
      v18 = v17;
      if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v17 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v17);
      }
      if ( store_id == *v18 )
      {
        v19 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v5 + 32), 1uLL);
        v20 = v19;
        if ( *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v19 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v19);
        }
        attr_number = *v20;
        v21 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v5 + 32), 2uLL);
        v22 = v21;
        if ( *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v21 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v21);
        }
        param_count = *v22;
        if ( !attr_number || (v23 = attr_number, v23 > std::vector<std::pair<unsigned int,int>>::size(actu_aim_vec)) )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&sep,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "doEffectOnAimAttr",
            3496);
          v25 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  (common::milog::MiLogStream *const)&sep,
                  (const char (*)[44])"[Vintage] effect param config error, param:");
          v26 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &effect_config->param);
          v11 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                  v26,
                  (const char (*)[15])", effect_type:");
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          goto LABEL_31;
        }
        count = 0;
        if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&effect_config->type);
        }
        if ( effect_config->type == VINTAGE_MARKET_EFFECT_AIM_ATTR_ADD_FIXED )
        {
          count = param_count;
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          if ( effect_config->type == VINTAGE_MARKET_EFFECT_AIM_ATTR_SUB_FIXED )
            count = -param_count;
        }
        v28 = std::vector<std::pair<unsigned int,int>>::operator[](actu_aim_vec, attr_number - 1);
        if ( *(_BYTE *)(((unsigned __int64)&v28->second >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)v28 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&v28->second >> 3) + 0x7FFF8000) )
        {
          v28 = (std::vector<std::pair<unsigned int,int>>::reference)__asan_report_load4(&v28->second);
        }
        v28->second += count;
      }
    }
    v27 = 1;
LABEL_44:
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v5 + 32));
    if ( v27 != 1 )
      goto LABEL_47;
    __gnu_cxx::__normal_iterator<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>::operator++(&__for_begin);
  }
  v4 = 0;
LABEL_47:
  result = v4;
  if ( v43 == (char *)v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 3519: range 00000000149A1B5E-00000000149A30AB
int32_t __cdecl VintageActivity::doEffectOnIncome(
        VintageActivity *const this,
        uint32_t store_id,
        const std::vector<data::VintageMarketEffectExcelConfig> *effect_vec,
        const std::vector<unsigned int> *finish_aim_attr_vec,
        uint32_t *fix_income,
        float *income_factor)
{
  int32_t v6; // r14d
  unsigned __int64 v7; // r12
  __int64 v8; // rax
  _DWORD *v9; // r13
  bool v10; // r15
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  data::VintageMarketEffectType type; // eax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  std::vector<unsigned int>::reference v19; // rax
  _DWORD *v20; // rdx
  std::vector<unsigned int>::reference v21; // rax
  unsigned int *v22; // rdx
  unsigned int v23; // ecx
  uint32_t v24; // ecx
  char v25; // dl
  __int64 v26; // rsi
  __int64 v27; // rdx
  std::vector<unsigned int>::reference v28; // rax
  int *v29; // rdx
  __int64 v30; // rsi
  __m128i v31; // xmm0
  int v32; // ecx
  char v33; // dl
  __int64 v34; // rdx
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // rax
  std::vector<unsigned int>::reference v39; // rax
  int *v40; // rdx
  __int64 v41; // rsi
  __m128i v42; // xmm0
  int v43; // ecx
  char v44; // dl
  __int64 v45; // rdx
  common::milog::MiLogStream *v46; // rax
  common::milog::MiLogStream *v47; // rax
  common::milog::MiLogStream *v48; // rax
  common::milog::MiLogStream *v49; // rax
  std::vector<unsigned int>::reference v50; // rax
  uint32_t *v51; // rdx
  uint32_t ActivityCoin; // eax
  std::vector<unsigned int>::reference v53; // rax
  unsigned int *v54; // rdx
  unsigned int v55; // ecx
  uint32_t v56; // ecx
  char v57; // dl
  __int64 v58; // rsi
  __int64 v59; // rdx
  std::vector<unsigned int>::reference v60; // rax
  int *v61; // rdx
  __int64 v62; // rsi
  __m128i v63; // xmm0
  int v64; // ecx
  char v65; // dl
  __int64 v66; // rdx
  std::vector<unsigned int>::reference v67; // rax
  int *v68; // rdx
  __int64 v69; // rsi
  __m128i v70; // xmm0
  int v71; // ecx
  char v72; // dl
  __int64 v73; // rdx
  common::milog::MiLogStream *v74; // rax
  common::milog::MiLogStream *v75; // rax
  common::milog::MiLogStream *v76; // rax
  common::milog::MiLogStream *v77; // rax
  std::vector<unsigned int>::reference v78; // rax
  _DWORD *v79; // rdx
  std::vector<unsigned int>::reference v80; // rax
  _DWORD *v81; // rdx
  char v82; // al
  common::milog::MiLogStream *v83; // rax
  common::milog::MiLogStream *v84; // rax
  std::vector<unsigned int>::reference v85; // rax
  _DWORD *v86; // rdx
  std::vector<unsigned int>::reference v87; // rax
  int *v88; // rdx
  __int64 v89; // rsi
  __m128i v90; // xmm0
  int v91; // ecx
  char v92; // dl
  __int64 v93; // rdx
  int v94; // r15d
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+4Eh] [rbp-112h] BYREF
  bool is_finish_reward_cond; // [rsp+4Fh] [rbp-111h]
  float percent_3; // [rsp+50h] [rbp-110h]
  uint32_t cond_income; // [rsp+54h] [rbp-10Ch]
  float percent_2; // [rsp+58h] [rbp-108h]
  float percent_1; // [rsp+5Ch] [rbp-104h]
  float percent_0; // [rsp+60h] [rbp-100h]
  float percent; // [rsp+64h] [rbp-FCh]
  std::vector<data::VintageMarketEffectExcelConfig>::const_iterator __for_begin; // [rsp+68h] [rbp-F8h] BYREF
  std::vector<data::VintageMarketEffectExcelConfig>::const_iterator __for_end; // [rsp+70h] [rbp-F0h] BYREF
  char *val; // [rsp+78h] [rbp-E8h] BYREF
  const std::vector<data::VintageMarketEffectExcelConfig> *__for_range; // [rsp+80h] [rbp-E0h]
  const data::VintageMarketEffectExcelConfig *effect_config; // [rsp+88h] [rbp-D8h]
  std::string sep; // [rsp+90h] [rbp-D0h] BYREF
  char v114[176]; // [rsp+B0h] [rbp-B0h] BYREF

  v7 = (unsigned __int64)v114;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v8 = __asan_stack_malloc_1(128LL);
    if ( v8 )
      v7 = v8;
  }
  *(_QWORD *)v7 = 1102416563LL;
  *(_QWORD *)(v7 + 8) = "2 48 4 15 attr_index:3610 64 24 12 num_vec:3523";
  *(_QWORD *)(v7 + 16) = VintageActivity::doEffectOnIncome;
  v9 = (_DWORD *)(v7 >> 3);
  v9[536862720] = -235802127;
  v9[536862721] = -234556943;
  v9[536862722] = -218103808;
  v9[536862723] = -202116109;
  is_finish_reward_cond = std::vector<unsigned int>::size(finish_aim_attr_vec) == 3;
  __for_range = effect_vec;
  __for_begin._M_current = std::vector<data::VintageMarketEffectExcelConfig>::begin(effect_vec)._M_current;
  __for_end._M_current = std::vector<data::VintageMarketEffectExcelConfig>::end(effect_vec)._M_current;
  while ( __gnu_cxx::operator!=<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>(
            &__for_begin,
            &__for_end) )
  {
    effect_config = __gnu_cxx::__normal_iterator<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>::operator*(&__for_begin);
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v7 + 64));
    std::allocator<char>::allocator(&__a, &__for_end);
    std::string::basic_string<std::allocator<char>>(&sep, ";", &__a);
    v10 = common::tools::StringUtils::splitToList<unsigned int>(
            &effect_config->param,
            &sep,
            (std::vector<unsigned int> *)(v7 + 64),
            0) != 0;
    std::string::~string(&sep);
    std::allocator<char>::~allocator(&__a);
    if ( v10 )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&sep,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "doEffectOnIncome",
        3526);
      v11 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
              (common::milog::MiLogStream *const)&sep,
              (const char (*)[31])"[Vintage] splitToList falied: ");
      v12 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v11, &effect_config->param);
      v13 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v12, (const char (*)[15])", effect_type:");
      if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&effect_config->type);
      }
LABEL_96:
      val = (char *)data::enumValToStr(effect_config->type);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&val);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&sep);
      v6 = -1;
      v94 = 0;
      goto LABEL_120;
    }
    if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&effect_config->type);
    }
    type = effect_config->type;
    if ( type == VINTAGE_MARKET_EFFECT_PERCENT_INCOME_WHEN_ATTR_GE_AIM )
    {
      if ( std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v7 + 64)) <= 1 )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&sep,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "doEffectOnIncome",
          3602);
        v74 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                (common::milog::MiLogStream *const)&sep,
                (const char (*)[48])"[Vintage] effect param size error, expect_size:");
        *(_DWORD *)(v7 + 48) = 2;
        v75 = common::milog::MiLogStream::operator<<<int,(int *)0>(v74, (const int *)(v7 + 48));
        v76 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v75, (const char (*)[9])", param:");
        v77 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v76, &effect_config->param);
        v13 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v77, (const char (*)[15])", effect_type:");
        if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&effect_config->type);
        }
        goto LABEL_96;
      }
      v78 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 0LL);
      v79 = v78;
      if ( *(_BYTE *)(((unsigned __int64)v78 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v78 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v78 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v78);
      }
      if ( !*v79 )
        goto LABEL_103;
      v80 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 0LL);
      v81 = v80;
      if ( *(_BYTE *)(((unsigned __int64)v80 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v80 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v80 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v80);
      }
      if ( *v81 <= 3u )
        v82 = 0;
      else
LABEL_103:
        v82 = 1;
      if ( v82 )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&sep,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "doEffectOnIncome",
          3607);
        v83 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                (common::milog::MiLogStream *const)&sep,
                (const char (*)[44])"[Vintage] effect param config error, param:");
        v84 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v83, &effect_config->param);
        v13 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v84, (const char (*)[15])", effect_type:");
        if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&effect_config->type);
        }
        goto LABEL_96;
      }
      v85 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 0LL);
      v86 = v85;
      if ( *(_BYTE *)(((unsigned __int64)v85 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v85 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v85 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v85);
      }
      *(_DWORD *)(v7 + 48) = *v86 - 1;
      if ( common::tools::MiscUtils::isContains<unsigned int>(finish_aim_attr_vec, (const unsigned int *)(v7 + 48)) )
      {
        v87 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 1uLL);
        v88 = (int *)v87;
        if ( *(_BYTE *)(((unsigned __int64)v87 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v87 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v87 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v87);
        }
        percent_3 = (float)*v88 / 100.0;
        v89 = ((unsigned __int8)income_factor & 7u) + 3;
        if ( *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)income_factor & 7) + 3) >= *(_BYTE *)(((unsigned __int64)income_factor >> 3)
                                                                          + 0x7FFF8000) )
        {
          __asan_report_load4(income_factor);
        }
        v90 = _mm_cvtsi32_si128(*(_DWORD *)income_factor);
        *(float *)v90.m128i_i32 = SAFE_ADD<float,float>(*(float *)v90.m128i_i32, percent_3);
        v91 = _mm_cvtsi128_si32(v90);
        v92 = *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000);
        LOBYTE(v89) = v92 != 0;
        v93 = (v92 != 0) & (unsigned __int8)((char)(((unsigned __int8)income_factor & 7) + 3) >= v92);
        if ( (_BYTE)v93 )
          __asan_report_store4(income_factor, v89, v93);
        *(_DWORD *)income_factor = v91;
      }
    }
    else if ( type <= VINTAGE_MARKET_EFFECT_PERCENT_INCOME_BY_TOTAL_INCOME )
    {
      if ( type >= VINTAGE_MARKET_EFFECT_FIXED_INCOME_BY_TOTAL_INCOME )
      {
        if ( std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v7 + 64)) <= 2 )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&sep,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "doEffectOnIncome",
            3575);
          v46 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                  (common::milog::MiLogStream *const)&sep,
                  (const char (*)[48])"[Vintage] effect param size error, expect_size:");
          *(_DWORD *)(v7 + 48) = 3;
          v47 = common::milog::MiLogStream::operator<<<int,(int *)0>(v46, (const int *)(v7 + 48));
          v48 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v47, (const char (*)[9])", param:");
          v49 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v48, &effect_config->param);
          v13 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                  v49,
                  (const char (*)[15])", effect_type:");
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          goto LABEL_96;
        }
        v50 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 0LL);
        v51 = v50;
        if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v50 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v50);
        }
        cond_income = *v51;
        ActivityCoin = VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A);
        if ( cond_income <= ActivityCoin )
        {
          v67 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 2uLL);
          v68 = (int *)v67;
          if ( *(_BYTE *)(((unsigned __int64)v67 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v67 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v67 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v67);
          }
          percent_2 = (float)*v68 / 100.0;
          v69 = ((unsigned __int8)income_factor & 7u) + 3;
          if ( *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)income_factor & 7) + 3) >= *(_BYTE *)(((unsigned __int64)income_factor >> 3)
                                                                            + 0x7FFF8000) )
          {
            __asan_report_load4(income_factor);
          }
          v70 = _mm_cvtsi32_si128(*(_DWORD *)income_factor);
          *(float *)v70.m128i_i32 = SAFE_ADD<float,float>(*(float *)v70.m128i_i32, percent_2);
          v71 = _mm_cvtsi128_si32(v70);
          v72 = *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000);
          LOBYTE(v69) = v72 != 0;
          v73 = (v72 != 0) & (unsigned __int8)((char)(((unsigned __int8)income_factor & 7) + 3) >= v72);
          if ( (_BYTE)v73 )
            __asan_report_store4(income_factor, v69, v73);
          *(_DWORD *)income_factor = v71;
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          if ( effect_config->type == VINTAGE_MARKET_EFFECT_FIXED_INCOME_BY_TOTAL_INCOME )
          {
            v53 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 1uLL);
            v54 = v53;
            if ( *(_BYTE *)(((unsigned __int64)v53 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v53 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v53 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v53);
            }
            v55 = *v54;
            if ( *(_BYTE *)(((unsigned __int64)fix_income >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)fix_income & 7) + 3) >= *(_BYTE *)(((unsigned __int64)fix_income >> 3)
                                                                           + 0x7FFF8000) )
            {
              __asan_report_load4(fix_income);
            }
            v58 = v55;
            v56 = SAFE_ADD<unsigned int,unsigned int>(*fix_income, v55);
            v57 = *(_BYTE *)(((unsigned __int64)fix_income >> 3) + 0x7FFF8000);
            LOBYTE(v58) = v57 != 0;
            v59 = (v57 != 0) & (unsigned __int8)((char)(((unsigned __int8)fix_income & 7) + 3) >= v57);
            if ( (_BYTE)v59 )
              __asan_report_store4(fix_income, v58, v59);
            *fix_income = v56;
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&effect_config->type);
            }
            if ( effect_config->type == VINTAGE_MARKET_EFFECT_PERCENT_INCOME_BY_TOTAL_INCOME )
            {
              v60 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 1uLL);
              v61 = (int *)v60;
              if ( *(_BYTE *)(((unsigned __int64)v60 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v60 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v60 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v60);
              }
              percent_1 = (float)*v61 / 100.0;
              v62 = ((unsigned __int8)income_factor & 7u) + 3;
              if ( *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)income_factor & 7) + 3) >= *(_BYTE *)(((unsigned __int64)income_factor >> 3)
                                                                                + 0x7FFF8000) )
              {
                __asan_report_load4(income_factor);
              }
              v63 = _mm_cvtsi32_si128(*(_DWORD *)income_factor);
              *(float *)v63.m128i_i32 = SAFE_ADD<float,float>(*(float *)v63.m128i_i32, percent_1);
              v64 = _mm_cvtsi128_si32(v63);
              v65 = *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000);
              LOBYTE(v62) = v65 != 0;
              v66 = (v65 != 0) & (unsigned __int8)((char)(((unsigned __int8)income_factor & 7) + 3) >= v65);
              if ( (_BYTE)v66 )
                __asan_report_store4(income_factor, v62, v66);
              *(_DWORD *)income_factor = v64;
            }
          }
        }
      }
      else if ( type > VINTAGE_MARKET_EFFECT_PERCENT_INCOME_WITH_ENV )
      {
        if ( type == VINTAGE_MARKET_EFFECT_REWARD_FACTOR )
        {
          if ( !std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v7 + 64)) )
          {
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&sep,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/vintage_activity.cpp",
              "doEffectOnIncome",
              3559);
            v35 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                    (common::milog::MiLogStream *const)&sep,
                    (const char (*)[48])"[Vintage] effect param size error, expect_size:");
            *(_DWORD *)(v7 + 48) = 2;
            v36 = common::milog::MiLogStream::operator<<<int,(int *)0>(v35, (const int *)(v7 + 48));
            v37 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v36, (const char (*)[9])", param:");
            v38 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v37, &effect_config->param);
            v13 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                    v38,
                    (const char (*)[15])", effect_type:");
            if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&effect_config->type);
            }
            goto LABEL_96;
          }
          if ( is_finish_reward_cond )
          {
            v39 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 0LL);
            v40 = (int *)v39;
            if ( *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v39 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v39);
            }
            percent_0 = (float)*v40 / 100.0;
            v41 = ((unsigned __int8)income_factor & 7u) + 3;
            if ( *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)income_factor & 7) + 3) >= *(_BYTE *)(((unsigned __int64)income_factor >> 3)
                                                                              + 0x7FFF8000) )
            {
              __asan_report_load4(income_factor);
            }
            v42 = _mm_cvtsi32_si128(*(_DWORD *)income_factor);
            *(float *)v42.m128i_i32 = SAFE_ADD<float,float>(*(float *)v42.m128i_i32, percent_0);
            v43 = _mm_cvtsi128_si32(v42);
            v44 = *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000);
            LOBYTE(v41) = v44 != 0;
            v45 = (v44 != 0) & (unsigned __int8)((char)(((unsigned __int8)income_factor & 7) + 3) >= v44);
            if ( (_BYTE)v45 )
              __asan_report_store4(income_factor, v41, v45);
            *(_DWORD *)income_factor = v43;
          }
        }
      }
      else if ( type >= VINTAGE_MARKET_EFFECT_FIXED_INCOME_WITH_ENV )
      {
        if ( std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v7 + 64)) <= 1 )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&sep,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "doEffectOnIncome",
            3536);
          v15 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                  (common::milog::MiLogStream *const)&sep,
                  (const char (*)[48])"[Vintage] effect param size error, expect_size:");
          *(_DWORD *)(v7 + 48) = 2;
          v16 = common::milog::MiLogStream::operator<<<int,(int *)0>(v15, (const int *)(v7 + 48));
          v17 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v16, (const char (*)[9])", param:");
          v18 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v17, &effect_config->param);
          v13 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                  v18,
                  (const char (*)[15])", effect_type:");
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          goto LABEL_96;
        }
        v19 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 0LL);
        v20 = v19;
        if ( *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v19 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v19);
        }
        *(_DWORD *)(v7 + 48) = *v20;
        if ( common::tools::MiscUtils::isContains<std::unordered_map<unsigned int,unsigned int>,unsigned int>(
               &this->env_to_round_map_,
               (const unsigned int *)(v7 + 48)) )
        {
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          if ( effect_config->type == VINTAGE_MARKET_EFFECT_FIXED_INCOME_WITH_ENV )
          {
            v21 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 1uLL);
            v22 = v21;
            if ( *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v21 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v21);
            }
            v23 = *v22;
            if ( *(_BYTE *)(((unsigned __int64)fix_income >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)fix_income & 7) + 3) >= *(_BYTE *)(((unsigned __int64)fix_income >> 3)
                                                                           + 0x7FFF8000) )
            {
              __asan_report_load4(fix_income);
            }
            v26 = v23;
            v24 = SAFE_ADD<unsigned int,unsigned int>(*fix_income, v23);
            v25 = *(_BYTE *)(((unsigned __int64)fix_income >> 3) + 0x7FFF8000);
            LOBYTE(v26) = v25 != 0;
            v27 = (v25 != 0) & (unsigned __int8)((char)(((unsigned __int8)fix_income & 7) + 3) >= v25);
            if ( (_BYTE)v27 )
              __asan_report_store4(fix_income, v26, v27);
            *fix_income = v24;
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&effect_config->type);
            }
            if ( effect_config->type == VINTAGE_MARKET_EFFECT_PERCENT_INCOME_WITH_ENV )
            {
              v28 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v7 + 64), 1uLL);
              v29 = (int *)v28;
              if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v28 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v28);
              }
              percent = (float)*v29 / 100.0;
              v30 = ((unsigned __int8)income_factor & 7u) + 3;
              if ( *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)income_factor & 7) + 3) >= *(_BYTE *)(((unsigned __int64)income_factor >> 3)
                                                                                + 0x7FFF8000) )
              {
                __asan_report_load4(income_factor);
              }
              v31 = _mm_cvtsi32_si128(*(_DWORD *)income_factor);
              *(float *)v31.m128i_i32 = SAFE_ADD<float,float>(*(float *)v31.m128i_i32, percent);
              v32 = _mm_cvtsi128_si32(v31);
              v33 = *(_BYTE *)(((unsigned __int64)income_factor >> 3) + 0x7FFF8000);
              LOBYTE(v30) = v33 != 0;
              v34 = (v33 != 0) & (unsigned __int8)((char)(((unsigned __int8)income_factor & 7) + 3) >= v33);
              if ( (_BYTE)v34 )
                __asan_report_store4(income_factor, v30, v34);
              *(_DWORD *)income_factor = v32;
            }
          }
        }
      }
    }
    v94 = 1;
LABEL_120:
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v7 + 64));
    if ( v94 != 1 )
      goto LABEL_123;
    __gnu_cxx::__normal_iterator<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>::operator++(&__for_begin);
  }
  v6 = 0;
LABEL_123:
  result = v6;
  if ( v114 == (char *)v7 )
  {
    *(_QWORD *)((v7 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v7 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v7 = 1172321806LL;
    *(_QWORD *)((v7 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v7 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3630: range 00000000149A30AC-00000000149A4042
__int64 __fastcall VintageActivity::doEffectOnReturnCoinB(
        VintageActivity *const this,
        uint32_t store_id,
        const std::vector<data::VintageMarketEffectExcelConfig> *effect_vec,
        const std::vector<unsigned int> *finish_aim_attr_vec,
        const std::vector<unsigned int> *attr_cost_vec,
        uint32_t *return_coin_b,
        uint32_t *display_return_coin_b)
{
  unsigned int v7; // r14d
  unsigned __int64 v8; // r13
  __int64 v9; // rax
  _DWORD *v10; // r12
  bool v11; // r15
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // r14
  int v15; // r15d
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // r14
  std::vector<unsigned int>::reference v21; // rax
  _DWORD *v22; // rdx
  std::vector<unsigned int>::reference v23; // rax
  _DWORD *v24; // rdx
  char v25; // al
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  std::vector<unsigned int>::reference v28; // rax
  _DWORD *v29; // rdx
  std::vector<unsigned int>::reference v30; // rax
  _DWORD *v31; // rdx
  char v32; // al
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rax
  std::vector<unsigned int>::reference v35; // rax
  _DWORD *v36; // rdx
  std::vector<unsigned int>::size_type v37; // r15
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // rax
  common::milog::MiLogStream *v40; // rax
  std::vector<unsigned int>::reference v41; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v42; // rax
  unsigned int *v43; // rdx
  unsigned int v44; // ecx
  SelectType v45; // ecx
  char v46; // dl
  __int64 v47; // rsi
  __int64 v48; // rdx
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v49; // rax
  unsigned int *v50; // rdx
  unsigned int v51; // ecx
  SelectType v52; // ecx
  char v53; // dl
  __int64 v54; // rsi
  __int64 v55; // rdx
  common::milog::MiLogStream *v56; // rax
  common::milog::MiLogStream *v57; // rax
  common::milog::MiLogStream *v58; // rax
  common::milog::MiLogStream *v59; // rax
  common::milog::MiLogStream *v60; // r15
  const unsigned int *v61; // rax
  std::vector<unsigned int>::reference v62; // rax
  int *v63; // rdx
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v64; // rax
  int *v65; // rdx
  unsigned int v66; // ecx
  SelectType v67; // ecx
  char v68; // dl
  __int64 v69; // rsi
  __int64 v70; // rdx
  common::milog::MiLogStream *v71; // rax
  common::milog::MiLogStream *v72; // rax
  common::milog::MiLogStream *v73; // rax
  common::milog::MiLogStream *v74; // rax
  common::milog::MiLogStream *v75; // rax
  __int64 result; // rax
  std::allocator<char> __a; // [rsp+43h] [rbp-11Dh] BYREF
  float return_prob; // [rsp+44h] [rbp-11Ch]
  std::vector<data::VintageMarketEffectExcelConfig>::const_iterator __for_begin; // [rsp+48h] [rbp-118h] BYREF
  std::vector<data::VintageMarketEffectExcelConfig>::const_iterator __for_end; // [rsp+50h] [rbp-110h] BYREF
  char *val; // [rsp+58h] [rbp-108h] BYREF
  const std::vector<data::VintageMarketEffectExcelConfig> *__for_range; // [rsp+60h] [rbp-100h]
  const data::VintageMarketEffectExcelConfig *effect_config; // [rsp+68h] [rbp-F8h]
  std::string sep; // [rsp+70h] [rbp-F0h] BYREF
  char v89[208]; // [rsp+90h] [rbp-D0h] BYREF

  v8 = (unsigned __int64)v89;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v9 = __asan_stack_malloc_2(160LL);
    if ( v9 )
      v8 = v9;
  }
  *(_QWORD *)v8 = 1102416563LL;
  *(_QWORD *)(v8 + 8) = "4 48 4 15 attr_index:3658 64 4 20 single_return_b:3678 80 4 13 store_id:3628 96 24 12 num_vec:3633";
  *(_QWORD *)(v8 + 16) = VintageActivity::doEffectOnReturnCoinB;
  v10 = (_DWORD *)(v8 >> 3);
  v10[536862720] = -235802127;
  v10[536862721] = -234556943;
  v10[536862722] = -234556924;
  v10[536862723] = -218103808;
  v10[536862724] = -202116109;
  *(_DWORD *)(v8 + 80) = store_id;
  __for_range = effect_vec;
  __for_begin._M_current = std::vector<data::VintageMarketEffectExcelConfig>::begin(effect_vec)._M_current;
  __for_end._M_current = std::vector<data::VintageMarketEffectExcelConfig>::end(effect_vec)._M_current;
  while ( __gnu_cxx::operator!=<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>(
            &__for_begin,
            &__for_end) )
  {
    effect_config = __gnu_cxx::__normal_iterator<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>::operator*(&__for_begin);
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v8 + 96));
    std::allocator<char>::allocator(&__a, &__for_end);
    std::string::basic_string<std::allocator<char>>(&sep, ";", &__a);
    v11 = common::tools::StringUtils::splitToList<unsigned int>(
            &effect_config->param,
            &sep,
            (std::vector<unsigned int> *)(v8 + 96),
            0) != 0;
    std::string::~string(&sep);
    std::allocator<char>::~allocator(&__a);
    if ( v11 )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&sep,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "doEffectOnReturnCoinB",
        3636);
      v12 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
              (common::milog::MiLogStream *const)&sep,
              (const char (*)[31])"[Vintage] splitToList falied: ");
      v13 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v12, &effect_config->param);
      v14 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v13, (const char (*)[15])", effect_type:");
      if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&effect_config->type);
      }
      val = (char *)data::enumValToStr(effect_config->type);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v14, (const char *const *)&val);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&sep);
      v7 = -1;
      v15 = 0;
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&effect_config->type);
      }
      if ( effect_config->type == VINTAGE_MARKET_EFFECT_PROB_RETURN_COST_WHEN_ATTR_GE_AIM )
      {
        if ( std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v8 + 96)) <= 2 )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&sep,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "doEffectOnReturnCoinB",
            3645);
          v16 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                  (common::milog::MiLogStream *const)&sep,
                  (const char (*)[48])"[Vintage] effect param size error, expect_size:");
          *(_DWORD *)(v8 + 64) = 3;
          v17 = common::milog::MiLogStream::operator<<<int,(int *)0>(v16, (const int *)(v8 + 64));
          v18 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v17, (const char (*)[9])", param:");
          v19 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, &effect_config->param);
          v20 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                  v19,
                  (const char (*)[15])", effect_type:");
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          goto LABEL_40;
        }
        v21 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v8 + 96), 0LL);
        v22 = v21;
        if ( *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v21 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v21);
        }
        if ( !*v22 )
          goto LABEL_23;
        v23 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v8 + 96), 0LL);
        v24 = v23;
        if ( *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v23 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v23);
        }
        if ( *v24 <= 3u )
          v25 = 0;
        else
LABEL_23:
          v25 = 1;
        if ( v25 )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&sep,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "doEffectOnReturnCoinB",
            3650);
          v26 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  (common::milog::MiLogStream *const)&sep,
                  (const char (*)[44])"[Vintage] effect param config error, param:");
          v27 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v26, &effect_config->param);
          v20 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                  v27,
                  (const char (*)[15])", effect_type:");
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
          goto LABEL_40;
        }
        v28 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v8 + 96), 1uLL);
        v29 = v28;
        if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v28 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v28);
        }
        if ( *v29 > 0x64u )
          goto LABEL_35;
        v30 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v8 + 96), 2uLL);
        v31 = v30;
        if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v30 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v30);
        }
        if ( *v31 <= 0x64u )
          v32 = 0;
        else
LABEL_35:
          v32 = 1;
        if ( v32 )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&sep,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "doEffectOnReturnCoinB",
            3655);
          v33 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  (common::milog::MiLogStream *const)&sep,
                  (const char (*)[44])"[Vintage] effect param config error, param:");
          v34 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v33, &effect_config->param);
          v20 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(
                  v34,
                  (const char (*)[15])", effect_type:");
          if ( *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&effect_config->type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&effect_config->type);
          }
LABEL_40:
          val = (char *)data::enumValToStr(effect_config->type);
          common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v20, (const char *const *)&val);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&sep);
          v7 = -1;
LABEL_71:
          v15 = 0;
          goto LABEL_73;
        }
        v35 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v8 + 96), 0LL);
        v36 = v35;
        if ( *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v35 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v35);
        }
        *(_DWORD *)(v8 + 48) = *v36 - 1;
        if ( common::tools::MiscUtils::isContains<unsigned int>(finish_aim_attr_vec, (const unsigned int *)(v8 + 48)) )
        {
          v37 = *(unsigned int *)(v8 + 48);
          if ( v37 >= std::vector<unsigned int>::size(attr_cost_vec) )
          {
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&sep,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/vintage_activity.cpp",
              "doEffectOnReturnCoinB",
              3666);
            v38 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                    (common::milog::MiLogStream *const)&sep,
                    (const char (*)[52])"[Vintage] find attr_index failed ,in attr_cost_vec:");
            v39 = common::milog::MiLogStream::operator<<<unsigned int>(v38, attr_cost_vec);
            v40 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                    v39,
                    (const char (*)[14])", attr_index:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v40, (const unsigned int *)(v8 + 48));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&sep);
            v7 = -1;
            goto LABEL_71;
          }
          v41 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v8 + 96), 2uLL);
          if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v41 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v41);
          }
          if ( common::tools::RandomUtils::randomTestProbability(100.0) )
          {
            v42 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](attr_cost_vec, *(unsigned int *)(v8 + 48));
            v43 = v42;
            if ( *(_BYTE *)(((unsigned __int64)v42 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v42 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v42 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v42);
            }
            v44 = *v43;
            if ( *(_BYTE *)(((unsigned __int64)return_coin_b >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)return_coin_b & 7) + 3) >= *(_BYTE *)(((unsigned __int64)return_coin_b >> 3)
                                                                              + 0x7FFF8000) )
            {
              __asan_report_load4(return_coin_b);
            }
            v47 = v44;
            v45 = SAFE_ADD<unsigned int,unsigned int>(*return_coin_b, v44);
            v46 = *(_BYTE *)(((unsigned __int64)return_coin_b >> 3) + 0x7FFF8000);
            LOBYTE(v47) = v46 != 0;
            v48 = (v46 != 0) & (unsigned __int8)((char)(((unsigned __int8)return_coin_b & 7) + 3) >= v46);
            if ( (_BYTE)v48 )
              __asan_report_store4(return_coin_b, v47, v48);
            *return_coin_b = v45;
            v49 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](attr_cost_vec, *(unsigned int *)(v8 + 48));
            v50 = v49;
            if ( *(_BYTE *)(((unsigned __int64)v49 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v49 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v49 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v49);
            }
            v51 = *v50;
            if ( *(_BYTE *)(((unsigned __int64)display_return_coin_b >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)display_return_coin_b & 7) + 3) >= *(_BYTE *)(((unsigned __int64)display_return_coin_b >> 3)
                                                                                      + 0x7FFF8000) )
            {
              __asan_report_load4(display_return_coin_b);
            }
            v54 = v51;
            v52 = SAFE_ADD<unsigned int,unsigned int>(*display_return_coin_b, v51);
            v53 = *(_BYTE *)(((unsigned __int64)display_return_coin_b >> 3) + 0x7FFF8000);
            LOBYTE(v54) = v53 != 0;
            v55 = (v53 != 0) & (unsigned __int8)((char)(((unsigned __int8)display_return_coin_b & 7) + 3) >= v53);
            if ( (_BYTE)v55 )
              __asan_report_store4(display_return_coin_b, v54, v55);
            *display_return_coin_b = v52;
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&sep,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/vintage_activity.cpp",
              "doEffectOnReturnCoinB",
              3673);
            v56 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                    (common::milog::MiLogStream *const)&sep,
                    (const char (*)[42])"[Vintage] return all attr_cost, store_id:");
            v57 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v56,
                    (const unsigned int *)(v8 + 80));
            v58 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                    v57,
                    (const char (*)[14])", attr_index:");
            v59 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v58,
                    (const unsigned int *)(v8 + 48));
            v60 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                    v59,
                    (const char (*)[17])", return_coin_b:");
            v61 = std::vector<unsigned int>::operator[](attr_cost_vec, *(unsigned int *)(v8 + 48));
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v60, v61);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&sep);
          }
          else
          {
            v62 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v8 + 96), 1uLL);
            v63 = (int *)v62;
            if ( *(_BYTE *)(((unsigned __int64)v62 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v62 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v62 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v62);
            }
            return_prob = (float)*v63 / 100.0;
            v64 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](attr_cost_vec, *(unsigned int *)(v8 + 48));
            v65 = (int *)v64;
            if ( *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v64 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v64);
            }
            *(_DWORD *)(v8 + 64) = (int)(float)((float)*v65 * return_prob);
            v66 = *(_DWORD *)(v8 + 64);
            if ( *(_BYTE *)(((unsigned __int64)return_coin_b >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)return_coin_b & 7) + 3) >= *(_BYTE *)(((unsigned __int64)return_coin_b >> 3)
                                                                              + 0x7FFF8000) )
            {
              __asan_report_load4(return_coin_b);
            }
            v69 = v66;
            v67 = SAFE_ADD<unsigned int,unsigned int>(*return_coin_b, v66);
            v68 = *(_BYTE *)(((unsigned __int64)return_coin_b >> 3) + 0x7FFF8000);
            LOBYTE(v69) = v68 != 0;
            v70 = (v68 != 0) & (unsigned __int8)((char)(((unsigned __int8)return_coin_b & 7) + 3) >= v68);
            if ( (_BYTE)v70 )
              __asan_report_store4(return_coin_b, v69, v70);
            *return_coin_b = v67;
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&sep,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/vintage_activity.cpp",
              "doEffectOnReturnCoinB",
              3680);
            v71 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    (common::milog::MiLogStream *const)&sep,
                    (const char (*)[43])"[Vintage] return part attr_cost, store_id:");
            v72 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v71,
                    (const unsigned int *)(v8 + 80));
            v73 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(
                    v72,
                    (const char (*)[14])", attr_index:");
            v74 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v73,
                    (const unsigned int *)(v8 + 48));
            v75 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                    v74,
                    (const char (*)[17])", return_coin_b:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v75, (const unsigned int *)(v8 + 64));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&sep);
          }
        }
      }
      v15 = 1;
    }
LABEL_73:
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v8 + 96));
    if ( v15 != 1 )
      goto LABEL_76;
    __gnu_cxx::__normal_iterator<data::VintageMarketEffectExcelConfig const*,std::vector<data::VintageMarketEffectExcelConfig>>::operator++(&__for_begin);
  }
  v7 = 0;
LABEL_76:
  result = v7;
  if ( v89 == (char *)v8 )
  {
    *(_QWORD *)((v8 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v8 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v8 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v8 = 1172321806LL;
    *(_QWORD *)((v8 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v8 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v8 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 3693: range 00000000149A4044-00000000149A480D
void __cdecl VintageActivity::updateEnvEventData(
        VintageActivity *const this,
        std::vector<unsigned int> *trigger_env_event_vec)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,std::set<unsigned int>> *p_round_env_event_map; // rcx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  bool v7; // r14
  std::_Rb_tree_const_iterator<unsigned int>::reference v8; // rax
  _DWORD *v9; // rdx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  unsigned int v14; // ecx
  unsigned int *v15; // rcx
  unsigned int *v16; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>,bool> v17; // rax
  common::milog::MiLogStream *v18; // rax
  std::unordered_map<unsigned int,std::set<unsigned int>>::key_type __x; // [rsp+1Ch] [rbp-E4h] BYREF
  std::set<unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-E0h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+28h] [rbp-D8h] BYREF
  const std::set<unsigned int> *__for_range; // [rsp+30h] [rbp-D0h]
  const data::VintageMarketEnvEventExcelConfig *env_config_ptr; // [rsp+38h] [rbp-C8h]
  std::shared_ptr<Config> v24; // [rsp+40h] [rbp-C0h] BYREF
  common::milog::MiLogStream v25; // [rsp+50h] [rbp-B0h] BYREF
  char v26[144]; // [rsp+70h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 11 env_id:3711 64 8 9 iter:3704";
  *(_QWORD *)(v2 + 16) = VintageActivity::updateEnvEventData;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -202116352;
  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->store_round_);
  }
  if ( this->store_round_ )
  {
    common::tools::MiscUtils::erase_if<unsigned int,unsigned int,VintageActivity::updateEnvEventData(std::vector<unsigned int> &)::{lambda(unsigned int &)#1}>(
      &this->env_to_round_map_,
      (VintageActivity::updateEnvEventData::<lambda(auto:23&)>)this);
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v24);
    p_round_env_event_map = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v24)->design_config.txt_config_mgr.activity_vintage_market_config_mgr.round_env_event_map;
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    __x = this->store_round_ - 1;
    *(std::unordered_map<unsigned int,std::set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::set<unsigned int>>::find(
                                                                                              p_round_env_event_map,
                                                                                              &__x);
    std::shared_ptr<Config>::~shared_ptr(&v24);
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v24);
    v6 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v24);
    __for_end._M_node = (std::_Rb_tree_const_iterator<unsigned int>::_Base_ptr)std::unordered_map<unsigned int,std::set<unsigned int>>::end(&v6->design_config.txt_config_mgr.activity_vintage_market_config_mgr.round_env_event_map)._M_cur;
    v7 = std::__detail::operator==<std::pair<unsigned int const,std::set<unsigned int>>,false>(
           (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<unsigned int> >,false> *)(v2 + 64),
           (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<unsigned int> >,false> *)&__for_end);
    std::shared_ptr<Config>::~shared_ptr(&v24);
    if ( !v7 )
    {
      __for_range = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<unsigned int> >,false,false> *const)(v2 + 64))->second;
      __for_begin._M_node = std::set<unsigned int>::begin(__for_range)._M_node;
      __for_end._M_node = std::set<unsigned int>::end(__for_range)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v8 = std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
        v9 = v8;
        if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v8 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v8);
        }
        *(_DWORD *)(v2 + 48) = *v9;
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v24);
        v10 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v24);
        env_config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketEnvEventExcelConfig(
                           &v10->design_config.txt_config_mgr.activity_vintage_market_config_mgr,
                           *(_DWORD *)(v2 + 48));
        std::shared_ptr<Config>::~shared_ptr(&v24);
        if ( env_config_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&env_config_ptr->duration >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)env_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&env_config_ptr->duration >> 3)
                                                                          + 0x7FFF8000) )
          {
            __asan_report_load4(&env_config_ptr->duration);
          }
          if ( env_config_ptr->duration )
          {
            if ( common::tools::MiscUtils::isContains<std::unordered_map<unsigned int,unsigned int>,unsigned int>(
                   &this->env_to_round_map_,
                   (const unsigned int *)(v2 + 48)) )
            {
              common::milog::MiLogStream::create(
                &v25,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/vintage_activity.cpp",
                "updateEnvEventData",
                3726);
              v13 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                      &v25,
                      (const char (*)[39])"[Vintage] duplicate env event, env_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v13,
                (const unsigned int *)(v2 + 48));
              common::milog::MiLogStream::~MiLogStream(&v25);
            }
            else
            {
              if ( *(_BYTE *)(((unsigned __int64)&env_config_ptr->duration >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)env_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&env_config_ptr->duration >> 3)
                                                                              + 0x7FFF8000) )
              {
                __asan_report_load4(&env_config_ptr->duration);
              }
              v14 = env_config_ptr->duration - 1;
              if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4(&this->store_round_);
              }
              __x = SAFE_ADD<unsigned int,unsigned int>(this->store_round_, v14);
              v17 = std::unordered_map<unsigned int,unsigned int>::emplace<unsigned int &,unsigned int>(
                      &this->env_to_round_map_,
                      (unsigned int *)(v2 + 48),
                      &__x,
                      v15,
                      v16);
              if ( !v17.second )
              {
                common::milog::MiLogStream::create(
                  &v25,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/vintage_activity.cpp",
                  "updateEnvEventData",
                  3731);
                v18 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                        &v25,
                        (const char (*)[39])"[Vintage] duplicate env event, env_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v18,
                  (const unsigned int *)(v2 + 48));
                common::milog::MiLogStream::~MiLogStream(&v25);
              }
              else
              {
                std::vector<unsigned int>::push_back(
                  trigger_env_event_vec,
                  (const std::vector<unsigned int>::value_type *)(v2 + 48));
              }
            }
          }
          else
          {
            common::milog::MiLogStream::create(
              &v25,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/vintage_activity.cpp",
              "updateEnvEventData",
              3721);
            v12 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                    &v25,
                    (const char (*)[46])"[Vintage] env event duration 0 error, env_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)(v2 + 48));
            common::milog::MiLogStream::~MiLogStream(&v25);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v25,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "updateEnvEventData",
            3716);
          v11 = common::milog::MiLogStream::operator<<<char [63],(char *[63])0>(
                  &v25,
                  (const char (*)[63])"[Vintage] findVintageMarketEnvEventExcelConfig failed, env_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v25);
        }
        std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
      }
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v25,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "updateEnvEventData",
      3696);
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
      &v25,
      (const char (*)[26])"[Vintage] cur round error");
    common::milog::MiLogStream::~MiLogStream(&v25);
  }
  if ( v26 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 3699: range 00000000149C9CBC-00000000149C9D77
bool __cdecl VintageActivity::updateEnvEventData::_lambda_auto_23___::operator()_std::pair_unsigned_int_const_unsigned_int___(
        const VintageActivity::updateEnvEventData::<lambda(auto:23&)> *const __closure,
        std::pair<unsigned int const,unsigned int> *p)
{
  unsigned int second; // esi
  VintageActivity *this; // rax
  char v4; // dl

  if ( *(_BYTE *)(((unsigned __int64)&p->second >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)p + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&p->second >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&p->second);
  }
  second = p->second;
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  this = __closure->__this;
  v4 = *(_BYTE *)(((unsigned __int64)&__closure->__this->store_round_ >> 3) + 0x7FFF8000);
  if ( v4 != 0 && v4 <= 3 )
    this = (VintageActivity *)__asan_report_load4(&__closure->__this->store_round_);
  return second < this->store_round_;
};

// Line 3739: range 00000000149A480E-00000000149A4FEE
void __cdecl VintageActivity::updateNpcEventData(
        VintageActivity *const this,
        std::vector<unsigned int> *trigger_npc_event_vec)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::unordered_map<unsigned int,std::set<unsigned int>> *p_round_npc_event_map; // rcx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  bool v7; // r14
  std::_Rb_tree_const_iterator<unsigned int>::reference v8; // rax
  _DWORD *v9; // rdx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  unsigned int v14; // ecx
  unsigned int *v15; // rcx
  std::pair<unsigned int,bool> *v16; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>,bool> v17; // rax
  common::milog::MiLogStream *v18; // rax
  bool v19; // [rsp+13h] [rbp-EDh] BYREF
  std::unordered_map<unsigned int,std::set<unsigned int>>::key_type __x; // [rsp+14h] [rbp-ECh] BYREF
  std::set<unsigned int>::iterator __for_begin; // [rsp+18h] [rbp-E8h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+20h] [rbp-E0h] BYREF
  const std::set<unsigned int> *__for_range; // [rsp+28h] [rbp-D8h]
  const data::VintageMarketNpcEventExcelConfig *npc_event_config_ptr; // [rsp+30h] [rbp-D0h]
  std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<unsigned int> >,false> __y; // [rsp+38h] [rbp-C8h] BYREF
  std::shared_ptr<Config> v26; // [rsp+40h] [rbp-C0h] BYREF
  common::milog::MiLogStream v27; // [rsp+50h] [rbp-B0h] BYREF
  char v28[144]; // [rsp+70h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v28;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 17 npc_event_id:3750 64 8 9 iter:3745";
  *(_QWORD *)(v2 + 16) = VintageActivity::updateNpcEventData;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -202116352;
  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->store_round_);
  }
  if ( this->store_round_ )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v26);
    p_round_npc_event_map = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v26)->design_config.txt_config_mgr.activity_vintage_market_config_mgr.round_npc_event_map;
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    __x = this->store_round_ - 1;
    *(std::unordered_map<unsigned int,std::set<unsigned int>>::const_iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::set<unsigned int>>::find(
                                                                                              p_round_npc_event_map,
                                                                                              &__x);
    std::shared_ptr<Config>::~shared_ptr(&v26);
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v26);
    v6 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v26);
    __y._M_cur = std::unordered_map<unsigned int,std::set<unsigned int>>::end(&v6->design_config.txt_config_mgr.activity_vintage_market_config_mgr.round_npc_event_map)._M_cur;
    v7 = std::__detail::operator==<std::pair<unsigned int const,std::set<unsigned int>>,false>(
           (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<unsigned int> >,false> *)(v2 + 64),
           &__y);
    std::shared_ptr<Config>::~shared_ptr(&v26);
    if ( !v7 )
    {
      __for_range = &std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<unsigned int>>,false,false>::operator->((const std::__detail::_Node_const_iterator<std::pair<unsigned int const,std::set<unsigned int> >,false,false> *const)(v2 + 64))->second;
      __for_begin._M_node = std::set<unsigned int>::begin(__for_range)._M_node;
      __for_end._M_node = std::set<unsigned int>::end(__for_range)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v8 = std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
        v9 = v8;
        if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v8 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v8);
        }
        *(_DWORD *)(v2 + 48) = *v9;
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v26);
        v10 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v26);
        npc_event_config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketNpcEventExcelConfig(
                                 &v10->design_config.txt_config_mgr.activity_vintage_market_config_mgr,
                                 *(_DWORD *)(v2 + 48));
        std::shared_ptr<Config>::~shared_ptr(&v26);
        if ( npc_event_config_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&npc_event_config_ptr->duration >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)npc_event_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&npc_event_config_ptr->duration >> 3)
                                                                                + 0x7FFF8000) )
          {
            __asan_report_load4(&npc_event_config_ptr->duration);
          }
          if ( npc_event_config_ptr->duration )
          {
            if ( common::tools::MiscUtils::isContains<std::unordered_map<unsigned int,std::pair<unsigned int,bool>>,unsigned int>(
                   &this->npc_to_round_finish_map_,
                   (const unsigned int *)(v2 + 48)) )
            {
              common::milog::MiLogStream::create(
                &v27,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/vintage_activity.cpp",
                "updateNpcEventData",
                3765);
              v13 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                      &v27,
                      (const char (*)[45])"[Vintage] duplicate npc event, npc_event_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v13,
                (const unsigned int *)(v2 + 48));
              common::milog::MiLogStream::~MiLogStream(&v27);
            }
            else
            {
              v19 = 0;
              if ( *(_BYTE *)(((unsigned __int64)&npc_event_config_ptr->duration >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)npc_event_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&npc_event_config_ptr->duration >> 3)
                                                                                    + 0x7FFF8000) )
              {
                __asan_report_load4(&npc_event_config_ptr->duration);
              }
              v14 = npc_event_config_ptr->duration - 1;
              if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4(&this->store_round_);
              }
              __x = SAFE_ADD<unsigned int,unsigned int>(this->store_round_, v14);
              __y._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::set<unsigned int> >,false>::__node_type *)std::make_pair<unsigned int,bool>(&__x, &v19);
              v17 = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::emplace<unsigned int &,std::pair<unsigned int,bool>>(
                      &this->npc_to_round_finish_map_,
                      (unsigned int *)(v2 + 48),
                      (std::pair<unsigned int,bool> *)&__y,
                      v15,
                      v16);
              if ( !v17.second )
              {
                common::milog::MiLogStream::create(
                  &v27,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/vintage_activity.cpp",
                  "updateNpcEventData",
                  3770);
                v18 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                        &v27,
                        (const char (*)[39])"[Vintage] duplicate env event, env_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v18,
                  (const unsigned int *)(v2 + 48));
                common::milog::MiLogStream::~MiLogStream(&v27);
              }
              else
              {
                std::vector<unsigned int>::push_back(
                  trigger_npc_event_vec,
                  (const std::vector<unsigned int>::value_type *)(v2 + 48));
              }
            }
          }
          else
          {
            common::milog::MiLogStream::create(
              &v27,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/vintage_activity.cpp",
              "updateNpcEventData",
              3760);
            v12 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
                    &v27,
                    (const char (*)[52])"[Vintage] npc event duration 0 error, npc_event_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)(v2 + 48));
            common::milog::MiLogStream::~MiLogStream(&v27);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v27,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "updateNpcEventData",
            3755);
          v11 = common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(
                  &v27,
                  (const char (*)[69])"[Vintage] findVintageMarketNpcEventExcelConfig failed, npc_event_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v2 + 48));
          common::milog::MiLogStream::~MiLogStream(&v27);
        }
        std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
      }
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v27,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "updateNpcEventData",
      3742);
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
      &v27,
      (const char (*)[26])"[Vintage] cur round error");
    common::milog::MiLogStream::~MiLogStream(&v27);
  }
  if ( v28 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 3778: range 00000000149A4FF0-00000000149A5B3A
int32_t __cdecl VintageActivity::marketStoreUnlockSlot(
        VintageActivity *const this,
        const proto::VintageMarketStoreUnlockSlotReq *req,
        proto::VintageMarketStoreUnlockSlotRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r14d
  PlayerBasicComp *BasicComp; // rax
  common::milog::MiLogStream *v8; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  bool v11; // r14
  common::milog::MiLogStream *v12; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v13; // rax
  std::vector<unsigned int>::size_type slot_count; // r14
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v19; // rax
  std::vector<unsigned int> *p_slot_cost_vec; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v21; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v22; // rax
  uint32_t *v23; // rdx
  PlayerItemComp *ItemComp; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  PlayerItemComp *v28; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v29; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v30; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v31; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v32; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v33; // r14
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer v34; // rax
  Player *player; // r14
  int32_t result; // eax
  std::string v37; // [rsp+0h] [rbp-1A0h]
  proto::VintageMarketStoreUnlockSlotRsp *rsp_0a; // [rsp+8h] [rbp-198h]
  const proto::VintageMarketStoreUnlockSlotReq *const reqa; // [rsp+10h] [rbp-190h]
  VintageActivity *thisa; // [rsp+18h] [rbp-188h]
  int32_t ret; // [rsp+20h] [rbp-180h]
  int32_t reta; // [rsp+20h] [rbp-180h]
  int32_t retb; // [rsp+20h] [rbp-180h]
  uint32_t cost; // [rsp+24h] [rbp-17Ch]
  std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self __y; // [rsp+28h] [rbp-178h] BYREF
  std::shared_ptr<google::protobuf::Message> p_body_ptr; // [rsp+30h] [rbp-170h] BYREF
  std::shared_ptr<google::protobuf::Message> v47; // [rsp+40h] [rbp-160h] BYREF
  std::string v48; // [rsp+50h] [rbp-150h] BYREF
  char v49[304]; // [rsp+70h] [rbp-130h] BYREF

  *(&v37._anon_0._M_allocated_capacity + 1) = (std::string::size_type)this;
  v37._anon_0._M_allocated_capacity = (std::string::size_type)req;
  v37._M_string_length = (std::string::size_type)rsp_0;
  v3 = (unsigned __int64)v49;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(256LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "7 32 1 23 log_context_holder:3784 48 4 7 id:3785 64 8 15 store_iter:3786 96 8 16 config_iter:379"
                        "2 128 16 19 sub_item_param:3805 160 16 12 log_ptr:3823 192 24 11 reason:3804";
  *(_QWORD *)(v3 + 16) = VintageActivity::marketStoreUnlockSlot;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = -218959360;
  v5[536862723] = -218959360;
  v5[536862724] = -219021312;
  v5[536862725] = -219021312;
  v5[536862726] = -218103808;
  v5[536862727] = -202116109;
  ret = VintageActivity::checkCanPlayMarketStoreContent(this);
  if ( ret )
  {
    v6 = ret;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    BasicComp = Player::getBasicComp(this->player_);
    PlayerBasicComp::getNextTransNo[abi:cxx11](&v48, BasicComp);
    StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v3 + 32), 0xE70u, v37);
    std::string::~string(&v48);
    *(_DWORD *)(v3 + 48) = proto::VintageMarketStoreUnlockSlotReq::store_id(reqa);
    *(std::map<unsigned int,VintageMarketStoreData>::iterator *)(v3 + 64) = std::map<unsigned int,VintageMarketStoreData>::find(
                                                                              &thisa->store_map_,
                                                                              (const std::map<unsigned int,VintageMarketStoreData>::key_type *)(v3 + 48));
    __y._M_node = std::map<unsigned int,VintageMarketStoreData>::end(&thisa->store_map_)._M_node;
    if ( std::operator==(
           (const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Self *)(v3 + 64),
           &__y) )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&v48,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "marketStoreUnlockSlot",
        3789);
      v8 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
             (common::milog::MiLogStream *const)&v48,
             (const char (*)[44])"[Vintage] find open store failed, store_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v3 + 48));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v48);
      v6 = -1;
    }
    else
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v47);
      v9 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v47);
      *(std::map<unsigned int,ActivityVintageMarketStoreConfig>::const_iterator *)(v3 + 96) = std::map<unsigned int,ActivityVintageMarketStoreConfig>::find(
                                                                                                &v9->design_config.txt_config_mgr.activity_vintage_market_config_mgr.store_config_map,
                                                                                                (const std::map<unsigned int,ActivityVintageMarketStoreConfig>::key_type *)(v3 + 48));
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v47);
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v47);
      v10 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v47);
      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::_Base_ptr)std::map<unsigned int,ActivityVintageMarketStoreConfig>::end(&v10->design_config.txt_config_mgr.activity_vintage_market_config_mgr.store_config_map)._M_node;
      v11 = std::operator==(
              (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)(v3 + 96),
              (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)&__y);
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v47);
      if ( v11 )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&v48,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "marketStoreUnlockSlot",
          3795);
        v12 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                (common::milog::MiLogStream *const)&v48,
                (const char (*)[46])"[Vintage] find store config failed, store_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)(v3 + 48));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v48);
        v6 = -1;
      }
      else
      {
        v13 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v3 + 64));
        if ( *(_BYTE *)(((unsigned __int64)&v13->second.slot_count >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&v13->second.slot_count >> 3) + 0x7FFF8000) <= 3 )
        {
          v13 = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer)__asan_report_load4(&v13->second.slot_count);
        }
        slot_count = v13->second.slot_count;
        v15 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v3 + 96));
        if ( slot_count < std::vector<unsigned int>::size(&v15->second.slot_cost_vec) )
        {
          p_slot_cost_vec = &std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v3 + 96))->second.slot_cost_vec;
          v21 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v3 + 64));
          if ( *(_BYTE *)(((unsigned __int64)&v21->second.slot_count >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&v21->second.slot_count >> 3) + 0x7FFF8000) <= 3 )
          {
            v21 = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer)__asan_report_load4(&v21->second.slot_count);
          }
          v22 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](p_slot_cost_vec, v21->second.slot_count);
          v23 = v22;
          if ( *(_BYTE *)(((unsigned __int64)v22 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v22 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v22 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v22);
          }
          cost = *v23;
          ActionReason::ActionReason(
            (ActionReason *const)(v3 + 192),
            ACTION_REASON_VINTAGE_STORE_UNLOCK_SLOT,
            ITEM_LIMIT_ACTIVITY_VINTAGE);
          *(_QWORD *)(v3 + 128) = 0LL;
          *(_QWORD *)(v3 + 136) = 0LL;
          *(_DWORD *)(v3 + 128) = 150;
          *(_DWORD *)(v3 + 132) = cost;
          if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&thisa->player_);
          ItemComp = Player::getItemComp(thisa->player_);
          reta = PlayerItemComp::checkSubItem(ItemComp, (const ItemParam *)(v3 + 128));
          if ( reta )
          {
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&v48,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/vintage_activity.cpp",
              "marketStoreUnlockSlot",
              3809);
            v25 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                    (common::milog::MiLogStream *const)&v48,
                    (const char (*)[40])"[Vintage] checkSubItem failed, item_id:");
            v26 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v25,
                    (const unsigned int *)(v3 + 128));
            v27 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v26, (const char (*)[9])", count:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v27,
              (const unsigned int *)(v3 + 132));
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v48);
            v6 = reta;
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&thisa->player_);
            v28 = Player::getItemComp(thisa->player_);
            SubItemReason::SubItemReason((SubItemReason *const)&__y, (const ActionReason *)(v3 + 192));
            retb = PlayerItemComp::subItem(v28, (const ItemParam *)(v3 + 128), (const SubItemReason *)&__y);
            if ( retb )
            {
              common::milog::MiLogStream::create(
                (common::milog::MiLogStream *)&v48,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/vintage_activity.cpp",
                "marketStoreUnlockSlot",
                3815);
              common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
                (common::milog::MiLogStream *const)&v48,
                (const char (*)[25])"[Vintage] subItem failed");
              common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v48);
              v6 = retb;
            }
            else
            {
              v29 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v3 + 64));
              if ( *(_BYTE *)(((unsigned __int64)&v29->second.slot_count >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&v29->second.slot_count >> 3) + 0x7FFF8000) <= 3 )
              {
                v29 = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer)__asan_report_load4(&v29->second.slot_count);
              }
              ++v29->second.slot_count;
              v30 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v3 + 64));
              if ( *(_BYTE *)(((unsigned __int64)&v30->second.slot_count >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&v30->second.slot_count >> 3) + 0x7FFF8000) <= 3 )
              {
                v30 = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer)__asan_report_load4(&v30->second.slot_count);
              }
              proto::VintageMarketStoreUnlockSlotRsp::set_slot_count(rsp_0a, v30->second.slot_count);
              BaseActivity::notifyClientData((BaseActivity *const)thisa, 0);
              common::tools::perf::make_shared<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock>();
              v31 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
              if ( *(_BYTE *)(((unsigned __int64)&thisa->store_round_ >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&thisa->store_round_ >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4(&thisa->store_round_);
              }
              proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock::set_round(v31, thisa->store_round_);
              v32 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
              proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock::set_shop_id(v32, *(_DWORD *)(v3 + 48));
              v33 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
              v34 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v3 + 64));
              if ( *(_BYTE *)(((unsigned __int64)&v34->second.slot_count >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&v34->second.slot_count >> 3) + 0x7FFF8000) <= 3 )
              {
                v34 = (std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >::pointer)__asan_report_load4(&v34->second.slot_count);
              }
              proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock::set_slot_count(v33, v34->second.slot_count);
              if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&thisa->player_);
              player = thisa->player_;
              std::shared_ptr<google::protobuf::Message>::shared_ptr(&v47, 0LL);
              std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock,void>(
                &p_body_ptr,
                (const std::shared_ptr<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock> *)(v3 + 160));
              Player::printStatLog(player, &p_body_ptr, &v47, 0xEu);
              std::shared_ptr<google::protobuf::Message>::~shared_ptr(&p_body_ptr);
              std::shared_ptr<google::protobuf::Message>::~shared_ptr(&v47);
              v6 = 0;
              std::shared_ptr<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyVintageMarketStrategySlotUnlock> *const)(v3 + 160));
            }
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&v48,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/player/activity/vintage_activity.cpp",
            "marketStoreUnlockSlot",
            3800);
          v16 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                  (common::milog::MiLogStream *const)&v48,
                  (const char (*)[49])"[Vintage] cur store slot_count is max, store_id:");
          v17 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v16,
                  (const unsigned int *)(v3 + 48));
          v18 = common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(
                  v17,
                  (const char (*)[18])", cur slot_count:");
          v19 = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> > *const)(v3 + 64));
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &v19->second.slot_count);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v48);
          v6 = -1;
        }
      }
    }
    StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v3 + 32));
  }
  result = v6;
  if ( v49 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3832: range 00000000149A5B3C-00000000149A5D77
void __cdecl VintageActivity::openStoreByGm(VintageActivity *const this, const std::set<unsigned int> *store_set)
{
  std::set<unsigned int> *v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  unsigned int *v5; // rax
  uint32_t *v6; // rdx
  std::set<unsigned int>::iterator __for_begin; // [rsp+18h] [rbp-B8h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+20h] [rbp-B0h] BYREF
  std::set<unsigned int> *__for_range; // [rsp+28h] [rbp-A8h]
  char v10[160]; // [rsp+30h] [rbp-A0h] BYREF

  v2 = (std::set<unsigned int> *)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = (std::set<unsigned int> *)v3;
  }
  *(_QWORD *)v2->_M_t._M_impl.gap0 = 1102416563LL;
  *(_QWORD *)&v2->_M_t._M_impl._M_header._M_color = "1 48 48 19 open_store_set:3833";
  v2->_M_t._M_impl._M_header._M_parent = (std::_Rb_tree_node_base::_Base_ptr)VintageActivity::openStoreByGm;
  v4 = (_DWORD *)((unsigned __int64)v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862723] = -202116109;
  std::set<unsigned int>::set(v2 + 1);
  if ( std::set<unsigned int>::empty(store_set) )
    std::set<unsigned int>::operator=(v2 + 1, &ActivityVintageMarketExcelConfigMgr::STORE_ID_SET);
  else
    std::set<unsigned int>::operator=(v2 + 1, store_set);
  __for_range = v2 + 1;
  __for_begin._M_node = std::set<unsigned int>::begin(v2 + 1)._M_node;
  __for_end._M_node = std::set<unsigned int>::end(v2 + 1)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v5 = (unsigned int *)std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
    v6 = v5;
    if ( *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v5 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v5);
    }
    VintageActivity::internalOpenStore(this, *v6);
    std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
  }
  std::set<unsigned int>::~set(v2 + 1);
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v2->_M_t._M_impl.gap0 = 1172321806LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 3850: range 00000000149A5D78-00000000149A6011
void __cdecl VintageActivity::openStoreContentByGm(
        VintageActivity *const this,
        const std::set<unsigned int> *store_set)
{
  __int64 v2; // rsi
  __int64 v3; // rdx
  __int64 v4; // rsi
  __int64 v5; // rdx
  __int64 v6; // rsi
  __int64 v7; // rdx
  __int64 v8; // rsi
  __int64 v9; // rdx
  common::milog::MiLogStream v10; // [rsp+10h] [rbp-30h] BYREF

  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->store_round_);
  }
  if ( !this->store_round_ )
  {
    VintageActivity::updateStoreRound(this);
    VintageActivity::initStoreHelpSkill(this);
  }
  VintageActivity::openStoreByGm(this, store_set);
  v2 = ((_BYTE)this + 105) & 7;
  v3 = (*(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v2 >= *(_BYTE *)(((unsigned __int64)&this->is_store_content_interrupt_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v3 )
    __asan_report_store1(&this->is_store_content_interrupt_, v2, v3);
  this->is_store_content_interrupt_ = 0;
  v4 = (((_BYTE)this - 84) & 7u) + 3;
  v5 = (*(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this - 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v5 )
    __asan_report_store4(&this->next_can_use_help_round_, v4, v5);
  this->next_can_use_help_round_ = 0;
  if ( *(char *)(((unsigned __int64)&this->is_market_content_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_market_content_open_, v4, &this->is_market_content_open_);
  this->is_market_content_open_ = 1;
  v6 = ((_BYTE)this - 15) & 7;
  v7 = (*(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v6 >= *(_BYTE *)(((unsigned __int64)&this->is_market_content_finish_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v7 )
    __asan_report_store1(&this->is_market_content_finish_, v6, v7);
  this->is_market_content_finish_ = 1;
  if ( *(char *)(((unsigned __int64)&this->is_strategy_module_open_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_store1(&this->is_strategy_module_open_, v6, &this->is_strategy_module_open_);
  this->is_strategy_module_open_ = 1;
  v8 = ((_BYTE)this - 87) & 7;
  v9 = (*(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v8 >= *(_BYTE *)(((unsigned __int64)&this->is_help_module_open_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v9 )
    __asan_report_store1(&this->is_help_module_open_, v8, v9);
  this->is_help_module_open_ = 1;
  BaseActivity::notifyClientData((BaseActivity *const)this, 0);
  common::milog::MiLogStream::create(
    &v10,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/vintage_activity.cpp",
    "openStoreContentByGm",
    3865);
  common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
    &v10,
    (const char (*)[35])"[Vintage] open store content by gm");
  common::milog::MiLogStream::~MiLogStream(&v10);
};

// Line 3869: range 00000000149A6012-00000000149A6B5E
int32_t __cdecl VintageActivity::perfectFinishStorePlayByGm(VintageActivity *const this)
{
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // rbx
  int32_t v4; // r14d
  uint32_t store_round; // ecx
  common::milog::MiLogStream *v6; // rax
  std::__detail::_Node_iterator_base<unsigned int,false>::__node_type *M_cur; // r14
  std::unordered_set<unsigned int>::iterator v8; // rax
  unsigned int *M_current; // r14
  std::vector<unsigned int>::iterator v10; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  bool v13; // r14
  common::milog::MiLogStream *v14; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v15; // rax
  __int64 v16; // rsi
  std::vector<unsigned int>::size_type v17; // r14
  std::vector<unsigned int>::size_type v18; // r14
  std::vector<unsigned int>::reference v20; // rax
  unsigned int *v21; // rdx
  unsigned int v22; // r14d
  std::vector<unsigned int>::reference v23; // rax
  unsigned int *v24; // rdx
  std::vector<unsigned int>::reference v25; // rax
  int *v26; // rdx
  int v27; // r14d
  std::vector<unsigned int>::reference v28; // rax
  _DWORD *v29; // rdx
  std::vector<unsigned int>::reference v30; // rax
  google::protobuf::uint32 *v31; // rdx
  int32_t result; // eax
  std::allocator<unsigned int> __a; // [rsp+1Fh] [rbp-2A1h] BYREF
  uint32_t idx; // [rsp+20h] [rbp-2A0h]
  uint32_t idx_0; // [rsp+24h] [rbp-29Ch]
  std::map<unsigned int,VintageMarketStoreData>::iterator __for_begin; // [rsp+28h] [rbp-298h] BYREF
  std::map<unsigned int,VintageMarketStoreData>::iterator __for_end; // [rsp+30h] [rbp-290h] BYREF
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self __y; // [rsp+38h] [rbp-288h] BYREF
  const ActivityVintageMarketExcelConfigMgr *config_mgr; // [rsp+40h] [rbp-280h]
  std::map<unsigned int,VintageMarketStoreData> *__for_range; // [rsp+48h] [rbp-278h]
  std::pair<unsigned int const,VintageMarketStoreData> *__in; // [rsp+50h] [rbp-270h]
  std::tuple_element<0,std::pair<unsigned int const,VintageMarketStoreData> >::type *store_id; // [rsp+58h] [rbp-268h]
  std::tuple_element<1,std::pair<unsigned int const,VintageMarketStoreData> >::type *store_data; // [rsp+60h] [rbp-260h]
  proto::VintageMarketStoreOpInfo *op_info; // [rsp+68h] [rbp-258h]
  std::shared_ptr<Config> v45; // [rsp+70h] [rbp-250h] BYREF
  std::shared_ptr<Config> v46; // [rsp+80h] [rbp-240h] BYREF
  common::milog::MiLogStream v47; // [rsp+90h] [rbp-230h] BYREF
  char v48[528]; // [rsp+B0h] [rbp-210h] BYREF

  v1 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_3(480LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "4 48 8 16 config_iter:3891 80 24 14 skill_vec:3884 144 48 8 req:3881 224 184 8 rsp:3882";
  *(_QWORD *)(v1 + 16) = VintageActivity::perfectFinishStorePlayByGm;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = 61937;
  v3[536862721] = -234881024;
  v3[536862722] = 62194;
  v3[536862723] = -218959360;
  v3[536862724] = 62194;
  v3[536862726] = -218959118;
  v3[536862732] = -218103808;
  v3[536862733] = -202116109;
  v3[536862734] = -202116109;
  if ( std::map<unsigned int,VintageMarketStoreData>::empty(&this->store_map_) )
  {
    common::milog::MiLogStream::create(
      &v47,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "perfectFinishStorePlayByGm",
      3872);
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      &v47,
      (const char (*)[29])"[Vintage] have no open store");
    common::milog::MiLogStream::~MiLogStream(&v47);
    v4 = -1;
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v46);
    config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v46)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
    std::shared_ptr<Config>::~shared_ptr(&v46);
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    if ( !this->store_round_ )
      goto LABEL_12;
    store_round = this->store_round_;
    if ( *(_BYTE *)(((unsigned __int64)&config_mgr->max_round >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&config_mgr->max_round >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&config_mgr->max_round);
    }
    if ( store_round <= config_mgr->max_round )
    {
      proto::VintageMarketFinishStorePlayReq::VintageMarketFinishStorePlayReq((proto::VintageMarketFinishStorePlayReq *const)(v1 + 144));
      proto::VintageMarketFinishStorePlayRsp::VintageMarketFinishStorePlayRsp((proto::VintageMarketFinishStorePlayRsp *const)(v1 + 224));
      if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->store_round_);
      }
      proto::VintageMarketFinishStorePlayReq::set_store_round(
        (proto::VintageMarketFinishStorePlayReq *const)(v1 + 144),
        this->store_round_);
      std::allocator<unsigned int>::allocator(&__a);
      M_cur = std::unordered_set<unsigned int>::end(&this->unlock_skill_set_)._M_cur;
      v8._M_cur = std::unordered_set<unsigned int>::begin(&this->unlock_skill_set_)._M_cur;
      std::vector<unsigned int>::vector<std::__detail::_Node_iterator<unsigned int,true,false>,void>(
        (std::vector<unsigned int> *const)(v1 + 80),
        v8,
        (std::__detail::_Node_iterator<unsigned int,true,false>)M_cur,
        &__a);
      std::allocator<unsigned int>::~allocator(&__a);
      M_current = std::vector<unsigned int>::end((std::vector<unsigned int> *const)(v1 + 80))._M_current;
      v10._M_current = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v1 + 80))._M_current;
      std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>>(
        v10,
        (__gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >)M_current);
      __for_range = &this->store_map_;
      __for_begin._M_node = std::map<unsigned int,VintageMarketStoreData>::begin(&this->store_map_)._M_node;
      __for_end._M_node = std::map<unsigned int,VintageMarketStoreData>::end(__for_range)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        __in = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator*(&__for_begin);
        store_id = std::get<0ul,unsigned int const,VintageMarketStoreData>(__in);
        store_data = std::get<1ul,unsigned int const,VintageMarketStoreData>(__in);
        op_info = proto::VintageMarketFinishStorePlayReq::add_store_op_list((proto::VintageMarketFinishStorePlayReq *const)(v1 + 144));
        if ( *(_BYTE *)(((unsigned __int64)store_id >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)store_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)store_id >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(store_id);
        }
        proto::VintageMarketStoreOpInfo::set_store_id(op_info, *store_id);
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v45);
        v11 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v45);
        *(std::map<unsigned int,ActivityVintageMarketStoreConfig>::const_iterator *)(v1 + 48) = std::map<unsigned int,ActivityVintageMarketStoreConfig>::find(
                                                                                                  &v11->design_config.txt_config_mgr.activity_vintage_market_config_mgr.store_config_map,
                                                                                                  store_id);
        std::shared_ptr<Config>::~shared_ptr(&v45);
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v46);
        v12 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v46);
        __y._M_node = std::map<unsigned int,ActivityVintageMarketStoreConfig>::end(&v12->design_config.txt_config_mgr.activity_vintage_market_config_mgr.store_config_map)._M_node;
        v13 = std::operator==(
                (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)(v1 + 48),
                &__y);
        std::shared_ptr<Config>::~shared_ptr(&v46);
        if ( v13 )
        {
          common::milog::MiLogStream::create(
            &v47,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/vintage_activity.cpp",
            "perfectFinishStorePlayByGm",
            3894);
          v14 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                  &v47,
                  (const char (*)[46])"[Vintage] find store config failed, store_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, store_id);
          common::milog::MiLogStream::~MiLogStream(&v47);
          v4 = -1;
          goto LABEL_51;
        }
        v15 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v1 + 48));
        v16 = (unsigned int)std::vector<unsigned int>::size(&v15->second.slot_cost_vec);
        if ( *(_BYTE *)(((unsigned __int64)&store_data->slot_count >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&store_data->slot_count >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_store4(&store_data->slot_count, v16, &store_data->slot_count);
        }
        store_data->slot_count = v16;
        for ( idx = 0; ; ++idx )
        {
          v17 = idx;
          if ( v17 >= std::vector<unsigned int>::size(&store_data->aim_attr_vec) )
            break;
          v18 = idx;
          if ( v18 >= std::vector<unsigned int>::size(&store_data->attr_vec) )
            break;
          v20 = std::vector<unsigned int>::operator[](&store_data->aim_attr_vec, idx);
          v21 = v20;
          if ( *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v20 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v20);
          }
          v22 = *v21;
          v23 = std::vector<unsigned int>::operator[](&store_data->attr_vec, idx);
          v24 = v23;
          if ( *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v23 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v23);
          }
          if ( v22 <= *v24 )
          {
            proto::VintageMarketStoreOpInfo::add_add_attr_list(op_info, 0);
          }
          else
          {
            v25 = std::vector<unsigned int>::operator[](&store_data->aim_attr_vec, idx);
            v26 = (int *)v25;
            if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v25 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v25);
            }
            v27 = *v26;
            v28 = std::vector<unsigned int>::operator[](&store_data->attr_vec, idx);
            v29 = v28;
            if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v28 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v28);
            }
            proto::VintageMarketStoreOpInfo::add_add_attr_list(op_info, v27 - *v29);
          }
        }
        for ( idx_0 = 0; ; ++idx_0 )
        {
          if ( *(_BYTE *)(((unsigned __int64)&store_data->slot_count >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&store_data->slot_count >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&store_data->slot_count);
          }
          if ( idx_0 >= store_data->slot_count
            || std::vector<unsigned int>::empty((const std::vector<unsigned int> *const)(v1 + 80)) )
          {
            break;
          }
          v30 = std::vector<unsigned int>::back((std::vector<unsigned int> *const)(v1 + 80));
          v31 = v30;
          if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v30 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v30);
          }
          proto::VintageMarketStoreOpInfo::add_strategy_list(op_info, *v31);
          std::vector<unsigned int>::pop_back((std::vector<unsigned int> *const)(v1 + 80));
        }
        std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator++(&__for_begin);
      }
      v4 = VintageActivity::marketFinishStorePlay(
             this,
             (const proto::VintageMarketFinishStorePlayReq *)(v1 + 144),
             (proto::VintageMarketFinishStorePlayRsp *)(v1 + 224));
LABEL_51:
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v1 + 80));
      proto::VintageMarketFinishStorePlayRsp::~VintageMarketFinishStorePlayRsp((proto::VintageMarketFinishStorePlayRsp *const)(v1 + 224));
      proto::VintageMarketFinishStorePlayReq::~VintageMarketFinishStorePlayReq((proto::VintageMarketFinishStorePlayReq *const)(v1 + 144));
    }
    else
    {
LABEL_12:
      common::milog::MiLogStream::create(
        &v47,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "perfectFinishStorePlayByGm",
        3878);
      v6 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v47,
             (const char (*)[36])"[Vintage] round state error, round:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &this->store_round_);
      common::milog::MiLogStream::~MiLogStream(&v47);
      v4 = -1;
    }
  }
  result = v4;
  if ( v48 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8010) = 0;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8018) = 0;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8038) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8038) = -168430091;
  }
  return result;
};

// Line 3924: range 00000000149A6B60-00000000149A73C7
__int64 __fastcall VintageActivity::finishBargainByGm(VintageActivity *const this, uint32_t bargain_id)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  common::milog::MiLogStream *v7; // rax
  __int64 result; // rax
  common::milog::MiLogStream *v9; // rax
  std::vector<unsigned int>::const_reference v10; // rax
  _DWORD *v11; // rdx
  common::milog::MiLogStream *v12; // rax
  PlayerItemComp *ItemComp; // rax
  PlayerItemComp *v14; // rax
  unsigned int *v15; // rcx
  std::pair<unsigned int,bool> *v16; // r8
  std::pair<std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false,false>,bool> v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rax
  bool v22; // [rsp+17h] [rbp-129h] BYREF
  const data::VintageMarketBargainExcelConfig *vintage_bargain_config_ptr; // [rsp+18h] [rbp-128h]
  const data::BargainExcelConfig *bargain_config_ptr; // [rsp+20h] [rbp-120h]
  std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> __y; // [rsp+28h] [rbp-118h] BYREF
  common::milog::MiLogStream v26; // [rsp+30h] [rbp-110h] BYREF
  char v27[240]; // [rsp+50h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v27;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 10 price:3937 48 4 15 bargain_id:3923 64 8 17 bargain_iter:3938 96 16 19 add_item_param:3"
                        "946 128 24 11 reason:3945";
  *(_QWORD *)(v2 + 16) = VintageActivity::finishBargainByGm;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -219021312;
  v4[536862724] = -218103808;
  v4[536862725] = -202116109;
  *(_DWORD *)(v2 + 48) = bargain_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v2 + 96));
  v5 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96));
  vintage_bargain_config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketBargainExcelConfig(
                                 &v5->design_config.txt_config_mgr.activity_vintage_market_config_mgr,
                                 *(_DWORD *)(v2 + 48));
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 96));
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v2 + 96));
  v6 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96));
  bargain_config_ptr = data::BargainExcelConfigMgrBase::findBargainExcelConfig(
                         &v6->design_config.txt_config_mgr.bargain_excel_config_mgr,
                         *(_DWORD *)(v2 + 48));
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 96));
  if ( vintage_bargain_config_ptr && bargain_config_ptr )
  {
    if ( std::vector<unsigned int>::size(&bargain_config_ptr->expected_value) )
    {
      v10 = std::vector<unsigned int>::back(&bargain_config_ptr->expected_value);
      v11 = v10;
      if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v10 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v10);
      }
      *(_DWORD *)(v2 + 32) = *v11;
      *(std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::iterator *)(v2 + 64) = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::find(
                                                                                                &this->bargain_price_map_,
                                                                                                (const std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::key_type *)(v2 + 48));
      __y._M_cur = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::end(&this->bargain_price_map_)._M_cur;
      if ( std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,bool>>,false>(
             (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false> *)(v2 + 64),
             &__y) )
      {
        common::milog::MiLogStream::create(
          &v26,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "finishBargainByGm",
          3941);
        v12 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                &v26,
                (const char (*)[37])"[Vintage] already finish bargain_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)(v2 + 48));
        common::milog::MiLogStream::~MiLogStream(&v26);
        result = 0xFFFFFFFFLL;
      }
      else
      {
        ActionReason::ActionReason(
          (ActionReason *const)(v2 + 128),
          ACTION_REASON_VINTAGE_MARKET_BARGAIN,
          ITEM_LIMIT_ACTIVITY_VINTAGE);
        *(_QWORD *)(v2 + 96) = 0LL;
        *(_QWORD *)(v2 + 104) = 0LL;
        *(_DWORD *)(v2 + 96) = 148;
        *(_DWORD *)(v2 + 100) = *(_DWORD *)(v2 + 32);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        ItemComp = Player::getItemComp(this->player_);
        if ( PlayerItemComp::checkAddItem(ItemComp, (const ItemParam *)(v2 + 96), (const ActionReason *)(v2 + 128)) )
        {
          common::milog::MiLogStream::create(
            &v26,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "finishBargainByGm",
            3949);
          common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
            &v26,
            (const char (*)[30])"[Vintage] checkAddItem failed");
          common::milog::MiLogStream::~MiLogStream(&v26);
          result = 0xFFFFFFFFLL;
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          v14 = Player::getItemComp(this->player_);
          if ( PlayerItemComp::addItem(v14, (const ItemParam *)(v2 + 96), (const ActionReason *)(v2 + 128), 0LL) )
          {
            common::milog::MiLogStream::create(
              &v26,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/vintage_activity.cpp",
              "finishBargainByGm",
              3954);
            common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
              &v26,
              (const char (*)[25])"[Vintage] addItem failed");
            common::milog::MiLogStream::~MiLogStream(&v26);
          }
          v22 = 1;
          __y._M_cur = (std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,bool> >,false>::__node_type *)std::make_pair<unsigned int &,bool>((unsigned int *)(v2 + 32), &v22);
          v17 = std::unordered_map<unsigned int,std::pair<unsigned int,bool>>::emplace<unsigned int &,std::pair<unsigned int,bool>>(
                  &this->bargain_price_map_,
                  (unsigned int *)(v2 + 48),
                  (std::pair<unsigned int,bool> *)&__y,
                  v15,
                  v16);
          if ( !v17.second )
          {
            common::milog::MiLogStream::create(
              &v26,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/vintage_activity.cpp",
              "finishBargainByGm",
              3958);
            v18 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                    &v26,
                    (const char (*)[48])"[Vintage] duplicate bargain finish, bargain_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, (const unsigned int *)(v2 + 48));
            common::milog::MiLogStream::~MiLogStream(&v26);
          }
          BaseActivity::updateAllConds((BaseActivity *const)this);
          BaseActivity::notifyClientData((BaseActivity *const)this, 0);
          BaseActivity::notifyActivityCoinInfo((BaseActivity *const)this);
          common::milog::MiLogStream::create(
            &v26,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/player/activity/vintage_activity.cpp",
            "finishBargainByGm",
            3963);
          v19 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                  &v26,
                  (const char (*)[45])"[Vintage] bargain task finished, bargain_id:");
          v20 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v19,
                  (const unsigned int *)(v2 + 48));
          v21 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  v20,
                  (const char (*)[16])", add_coin_num:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, (const unsigned int *)(v2 + 32));
          common::milog::MiLogStream::~MiLogStream(&v26);
          result = 0LL;
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v26,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "finishBargainByGm",
        3934);
      v9 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
             &v26,
             (const char (*)[37])"[Vintage] config failed, bargain_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v2 + 48));
      common::milog::MiLogStream::~MiLogStream(&v26);
      result = 0xFFFFFFFFLL;
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v26,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "finishBargainByGm",
      3929);
    v7 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
           &v26,
           (const char (*)[42])"[Vintage] find config failed, bargain_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 48));
    common::milog::MiLogStream::~MiLogStream(&v26);
    result = 0xFFFFFFFFLL;
  }
  if ( v27 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3968: range 00000000149A73C8-00000000149A7461
void __cdecl VintageActivity::clearStoreContentByGm(VintageActivity *const this)
{
  common::milog::MiLogStream v1; // [rsp+10h] [rbp-30h] BYREF

  VintageActivity::clearMarketStoreData(this);
  BaseActivity::notifyClientData((BaseActivity *const)this, 0);
  common::milog::MiLogStream::create(
    &v1,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/vintage_activity.cpp",
    "clearStoreContentByGm",
    3971);
  common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
    &v1,
    (const char (*)[36])"[Vintage] close store content by gm");
  common::milog::MiLogStream::~MiLogStream(&v1);
};

// Line 3975: range 00000000149A7462-00000000149A7DA3
__int64 __fastcall VintageActivity::internalOpenStore(VintageActivity *const this, uint32_t store_id)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  common::milog::MiLogStream *v7; // rax
  unsigned int v8; // r14d
  common::milog::MiLogStream *v9; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v10; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v11; // rax
  PlayerItemComp *ItemComp; // rax
  char v13; // al
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v14; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v15; // rax
  VintageMarketStoreData *v16; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData> >,bool> v17; // rax
  common::milog::MiLogStream *v18; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer v19; // rax
  PlayerItemComp *v20; // rax
  char v21; // al
  common::milog::MiLogStream *v22; // rax
  __int64 result; // rax
  bool v24; // [rsp+13h] [rbp-1FDh]
  std::less<unsigned int> __comp; // [rsp+22h] [rbp-1EEh] BYREF
  std::allocator<unsigned int> __a; // [rsp+23h] [rbp-1EDh] BYREF
  std::initializer_list<unsigned int> __l; // [rsp+24h] [rbp-1ECh] BYREF
  std::set<unsigned int> store_set; // [rsp+50h] [rbp-1C0h] BYREF
  char v29[400]; // [rsp+80h] [rbp-190h] BYREF

  v2 = (unsigned __int64)v29;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 48 4 13 store_id:3974 64 8 9 iter:3976 96 16 19 add_item_param:3989 128 24 11 reason:3988 192 128 9 data:3997";
  *(_QWORD *)(v2 + 16) = VintageActivity::internalOpenStore;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -219021312;
  v4[536862724] = -234881024;
  v4[536862725] = -218959118;
  v4[536862730] = -202116109;
  *(_DWORD *)(v2 + 48) = store_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v2 + 96));
  v5 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96));
  *(std::map<unsigned int,ActivityVintageMarketStoreConfig>::const_iterator *)(v2 + 64) = std::map<unsigned int,ActivityVintageMarketStoreConfig>::find(
                                                                                            &v5->design_config.txt_config_mgr.activity_vintage_market_config_mgr.store_config_map,
                                                                                            (const std::map<unsigned int,ActivityVintageMarketStoreConfig>::key_type *)(v2 + 48));
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 96));
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v2 + 96));
  v6 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96));
  *(std::map<unsigned int,ActivityVintageMarketStoreConfig>::const_iterator *)((char *)&__l._M_array + 4) = std::map<unsigned int,ActivityVintageMarketStoreConfig>::end(&v6->design_config.txt_config_mgr.activity_vintage_market_config_mgr.store_config_map);
  v24 = std::operator==(
          (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)(v2 + 64),
          (const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::_Self *)((char *)&__l._M_array + 4));
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 96));
  if ( v24 )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)((char *)&__l._M_len + 4),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "internalOpenStore",
      3979);
    v7 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
           (common::milog::MiLogStream *const)((char *)&__l._M_len + 4),
           (const char (*)[40])"[Vintage] find store config failed, id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)((char *)&__l._M_len + 4));
    v8 = -1;
  }
  else if ( common::tools::MiscUtils::isContains<std::map<unsigned int,VintageMarketStoreData>,unsigned int>(
              &this->store_map_,
              (const unsigned int *)(v2 + 48)) )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)((char *)&__l._M_len + 4),
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "internalOpenStore",
      3984);
    v9 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           (common::milog::MiLogStream *const)((char *)&__l._M_len + 4),
           (const char (*)[43])"[Vintage] store is already open, store_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v2 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)((char *)&__l._M_len + 4));
    v8 = -1;
  }
  else
  {
    ActionReason::ActionReason(
      (ActionReason *const)(v2 + 128),
      ACTION_REASON_VINTAGE_OPEN_STORE,
      ITEM_LIMIT_ACTIVITY_VINTAGE);
    *(_QWORD *)(v2 + 96) = 0LL;
    *(_QWORD *)(v2 + 104) = 0LL;
    *(_DWORD *)(v2 + 96) = 149;
    v10 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v2 + 64));
    if ( *(_BYTE *)(((unsigned __int64)&v10->second.default_coin_b_num >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&v10->second.default_coin_b_num >> 3) + 0x7FFF8000) <= 3 )
    {
      v10 = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer)__asan_report_load4(&v10->second.default_coin_b_num);
    }
    *(_DWORD *)(v2 + 100) = v10->second.default_coin_b_num;
    v11 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v2 + 64));
    if ( *(_BYTE *)(((unsigned __int64)&v11->second.default_coin_b_num >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&v11->second.default_coin_b_num >> 3) + 0x7FFF8000) <= 3 )
    {
      v11 = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer)__asan_report_load4(&v11->second.default_coin_b_num);
    }
    if ( !v11->second.default_coin_b_num )
      goto LABEL_17;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    ItemComp = Player::getItemComp(this->player_);
    if ( PlayerItemComp::checkAddItem(ItemComp, (const ItemParam *)(v2 + 96), (const ActionReason *)(v2 + 128)) )
      v13 = 1;
    else
LABEL_17:
      v13 = 0;
    if ( v13 )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)((char *)&__l._M_len + 4),
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "internalOpenStore",
        3993);
      common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
        (common::milog::MiLogStream *const)((char *)&__l._M_len + 4),
        (const char (*)[30])"[Vintage] checkAddItem failed");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)((char *)&__l._M_len + 4));
      v8 = -1;
    }
    else
    {
      VintageMarketStoreData::VintageMarketStoreData((VintageMarketStoreData *const)(v2 + 192));
      v14 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v2 + 64));
      std::vector<unsigned int>::operator=((std::vector<unsigned int> *const)(v2 + 192), &v14->second.default_attr_vec);
      v15 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v2 + 64));
      std::vector<unsigned int>::operator=((std::vector<unsigned int> *const)(v2 + 216), &v15->second.default_attr_vec);
      v17 = std::map<unsigned int,VintageMarketStoreData>::emplace<unsigned int &,VintageMarketStoreData&>(
              &this->store_map_,
              (unsigned int *)(v2 + 48),
              (VintageMarketStoreData *)(v2 + 192),
              (unsigned int *)&this->store_map_,
              v16);
      if ( !v17.second )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)((char *)&__l._M_len + 4),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "internalOpenStore",
          4002);
        v18 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                (common::milog::MiLogStream *const)((char *)&__l._M_len + 4),
                (const char (*)[36])"[Vintage] duplicate open store, id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, (const unsigned int *)(v2 + 48));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)((char *)&__l._M_len + 4));
        v8 = -1;
      }
      else
      {
        LODWORD(__l._M_array) = *(_DWORD *)(v2 + 48);
        std::allocator<unsigned int>::allocator(&__a);
        std::set<unsigned int>::set(
          &store_set,
          (std::initializer_list<unsigned int>)__PAIR128__(1LL, &__l),
          &__comp,
          &__a);
        VintageActivity::calcStoreRoundAimAttr(this, &store_set);
        std::set<unsigned int>::~set(&store_set);
        std::allocator<unsigned int>::~allocator(&__a);
        v19 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig>>::operator->((const std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> > *const)(v2 + 64));
        if ( *(_BYTE *)(((unsigned __int64)&v19->second.default_coin_b_num >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&v19->second.default_coin_b_num >> 3) + 0x7FFF8000) <= 3 )
        {
          v19 = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,ActivityVintageMarketStoreConfig> >::pointer)__asan_report_load4(&v19->second.default_coin_b_num);
        }
        if ( !v19->second.default_coin_b_num )
          goto LABEL_29;
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        v20 = Player::getItemComp(this->player_);
        if ( PlayerItemComp::addItem(v20, (const ItemParam *)(v2 + 96), (const ActionReason *)(v2 + 128), 0LL) )
          v21 = 1;
        else
LABEL_29:
          v21 = 0;
        if ( v21 )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)((char *)&__l._M_len + 4),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "internalOpenStore",
            4011);
          common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
            (common::milog::MiLogStream *const)((char *)&__l._M_len + 4),
            (const char (*)[25])"[Vintage] addItem failed");
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)((char *)&__l._M_len + 4));
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)((char *)&__l._M_len + 4),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/vintage_activity.cpp",
          "internalOpenStore",
          4014);
        v22 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                (common::milog::MiLogStream *const)((char *)&__l._M_len + 4),
                (const char (*)[46])"[Vintage] internalOpenStore finish, store_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, (const unsigned int *)(v2 + 48));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)((char *)&__l._M_len + 4));
        v8 = 0;
      }
      VintageMarketStoreData::~VintageMarketStoreData((VintageMarketStoreData *const)(v2 + 192));
    }
  }
  result = v8;
  if ( v29 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 4019: range 00000000149A7DA4-00000000149A8142
int32_t __cdecl VintageActivity::marketStoreChooseStrategy(
        VintageActivity *const this,
        const proto::VintageMarketStoreChooseStrategyReq *req,
        proto::VintageMarketStoreChooseStrategyRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // rbx
  int32_t v6; // r14d
  const google::protobuf::RepeatedPtrField<proto::VintageMarketStoreOpInfo> *v7; // rcx
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::pointer v8; // rax
  common::milog::MiLogStream *v9; // rax
  int32_t result; // eax
  int32_t ret; // [rsp+24h] [rbp-12Ch]
  int32_t reta; // [rsp+24h] [rbp-12Ch]
  std::map<unsigned int,VintageMarketStoreData>::iterator __for_begin; // [rsp+28h] [rbp-128h] BYREF
  std::map<unsigned int,VintageMarketStoreData>::iterator __for_end; // [rsp+30h] [rbp-120h] BYREF
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self __y; // [rsp+38h] [rbp-118h] BYREF
  std::map<unsigned int,VintageMarketStoreData> *__for_range; // [rsp+40h] [rbp-110h]
  std::pair<unsigned int const,VintageMarketStoreData> *__in; // [rsp+48h] [rbp-108h]
  std::tuple_element<0,std::pair<unsigned int const,VintageMarketStoreData> >::type *store_id; // [rsp+50h] [rbp-100h]
  std::tuple_element<1,std::pair<unsigned int const,VintageMarketStoreData> >::type *store_data; // [rsp+58h] [rbp-F8h]
  common::milog::MiLogStream v20; // [rsp+60h] [rbp-F0h] BYREF
  char v21[208]; // [rsp+80h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 8 9 iter:4035 80 48 27 store_chosen_skill_map:4026";
  *(_QWORD *)(v3 + 16) = VintageActivity::marketStoreChooseStrategy;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61937;
  v5[536862721] = -234881024;
  v5[536862722] = 62194;
  v5[536862724] = -202116109;
  ret = VintageActivity::checkCanPlayMarketStoreContent(this);
  if ( ret )
  {
    v6 = ret;
  }
  else
  {
    std::map<unsigned int,std::vector<unsigned int>>::map((std::map<unsigned int,std::vector<unsigned int>> *const)(v3 + 80));
    v7 = proto::VintageMarketStoreChooseStrategyReq::store_op_list(req);
    reta = VintageActivity::checkAndRewriteStoreOperationOnStrategy(
             this,
             v7,
             (std::map<unsigned int,std::vector<unsigned int>> *)(v3 + 80));
    if ( reta )
    {
      v6 = reta;
    }
    else
    {
      __for_range = &this->store_map_;
      __for_begin._M_node = std::map<unsigned int,VintageMarketStoreData>::begin(&this->store_map_)._M_node;
      __for_end._M_node = std::map<unsigned int,VintageMarketStoreData>::end(&this->store_map_)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        __in = std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator*(&__for_begin);
        store_id = std::get<0ul,unsigned int const,VintageMarketStoreData>(__in);
        store_data = std::get<1ul,unsigned int const,VintageMarketStoreData>(__in);
        *(std::map<unsigned int,std::vector<unsigned int>>::iterator *)(v3 + 48) = std::map<unsigned int,std::vector<unsigned int>>::find(
                                                                                     (std::map<unsigned int,std::vector<unsigned int>> *const)(v3 + 80),
                                                                                     store_id);
        __y._M_node = std::map<unsigned int,std::vector<unsigned int>>::end((std::map<unsigned int,std::vector<unsigned int>> *const)(v3 + 80))._M_node;
        if ( std::operator!=(
               (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > >::_Self *)(v3 + 48),
               &__y) )
        {
          v8 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,std::vector<unsigned int> > > *const)(v3 + 48));
          std::vector<unsigned int>::operator=(&store_data->chosen_skill_vec, &v8->second);
        }
        else
        {
          common::milog::MiLogStream::create(
            &v20,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/vintage_activity.cpp",
            "marketStoreChooseStrategy",
            4043);
          v9 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
                 &v20,
                 (const char (*)[65])"[Vintage] store_chosen_skill_map find store_id failed, store_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, store_id);
          common::milog::MiLogStream::~MiLogStream(&v20);
          std::vector<unsigned int>::clear(&store_data->chosen_skill_vec);
        }
        std::_Rb_tree_iterator<std::pair<unsigned int const,VintageMarketStoreData>>::operator++(&__for_begin);
      }
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      v6 = 0;
    }
    std::map<unsigned int,std::vector<unsigned int>>::~map((std::map<unsigned int,std::vector<unsigned int>> *const)(v3 + 80));
  }
  result = v6;
  if ( v21 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 4053: range 00000000149A8144-00000000149A8530
int32_t __cdecl VintageActivity::marketStoreViewStrategy(
        VintageActivity *const this,
        const proto::VintageMarketStoreViewStrategyReq *req,
        proto::VintageMarketStoreViewStrategyRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r14d
  const google::protobuf::RepeatedField<unsigned int> *v7; // rax
  std::set<unsigned int>::size_type v8; // r14
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  std::_Rb_tree_const_iterator<unsigned int>::_Base_ptr M_node; // r14
  std::set<unsigned int>::iterator v14; // rax
  common::milog::MiLogStream *v15; // rax
  std::_Rb_tree_const_iterator<unsigned int>::_Base_ptr v16; // r15
  std::set<unsigned int>::iterator v17; // rax
  int32_t result; // eax
  int val; // [rsp+28h] [rbp-F8h] BYREF
  int32_t ret; // [rsp+2Ch] [rbp-F4h]
  common::milog::MiLogStream v21; // [rsp+30h] [rbp-F0h] BYREF
  char v22[208]; // [rsp+50h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 8 9 pred:4066 80 48 13 view_set:4059";
  *(_QWORD *)(v3 + 16) = VintageActivity::marketStoreViewStrategy;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61937;
  v5[536862721] = -234881024;
  v5[536862722] = 62194;
  v5[536862724] = -202116109;
  ret = VintageActivity::checkCanPlayMarketStoreContent(this);
  if ( ret )
  {
    v6 = ret;
  }
  else
  {
    std::set<unsigned int>::set((std::set<unsigned int> *const)(v3 + 80));
    v7 = proto::VintageMarketStoreViewStrategyReq::strategy_list(req);
    common::tools::MiscUtils::setFromRepeated<std::set<unsigned int>,unsigned int>(
      (std::set<unsigned int> *)(v3 + 80),
      v7);
    if ( std::set<unsigned int>::empty((const std::set<unsigned int> *const)(v3 + 80))
      || (v8 = std::set<unsigned int>::size((const std::set<unsigned int> *const)(v3 + 80)),
          v8 != proto::VintageMarketStoreViewStrategyReq::strategy_list_size(req)) )
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "marketStoreViewStrategy",
        4063);
      v10 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
              &v21,
              (const char (*)[46])"[Vintage] view_set size error, view_set_size:");
      *(_QWORD *)(v3 + 48) = std::set<unsigned int>::size((const std::set<unsigned int> *const)(v3 + 80));
      v11 = common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
              v10,
              (const unsigned __int64 *)(v3 + 48));
      v12 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(v11, (const char (*)[17])", req_list_size:");
      val = proto::VintageMarketStoreViewStrategyReq::strategy_list_size(req);
      common::milog::MiLogStream::operator<<<int,(int *)0>(v12, &val);
      common::milog::MiLogStream::~MiLogStream(&v21);
      v6 = -1;
    }
    else
    {
      *(_QWORD *)(v3 + 48) = this;
      M_node = std::set<unsigned int>::end((const std::set<unsigned int> *const)(v3 + 80))._M_node;
      v14._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v3 + 80))._M_node;
      if ( std::any_of<std::_Rb_tree_const_iterator<unsigned int>,VintageActivity::marketStoreViewStrategy(proto::VintageMarketStoreViewStrategyReq const&,proto::VintageMarketStoreViewStrategyRsp &)::{lambda(std::_Rb_tree_const_iterator<unsigned int> &)#1}>(
             v14,
             (std::_Rb_tree_const_iterator<unsigned int>)M_node,
             *(VintageActivity::marketStoreViewStrategy::<lambda(auto:24&)> *)(v3 + 48)) )
      {
        common::milog::MiLogStream::create(
          &v21,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "marketStoreViewStrategy",
          4069);
        v15 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                &v21,
                (const char (*)[47])"[Vintage] strategy_id is not unlock, view_set:");
        common::milog::MiLogStream::operator<<<unsigned int>(v15, (const std::set<unsigned int> *)(v3 + 80));
        common::milog::MiLogStream::~MiLogStream(&v21);
        v6 = -1;
      }
      else
      {
        v16 = std::set<unsigned int>::end((const std::set<unsigned int> *const)(v3 + 80))._M_node;
        v17._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v3 + 80))._M_node;
        std::unordered_set<unsigned int>::insert<std::_Rb_tree_const_iterator<unsigned int>>(
          &this->viewed_skill_set_,
          v17,
          (std::_Rb_tree_const_iterator<unsigned int>)v16);
        BaseActivity::notifyClientData((BaseActivity *const)this, 0);
        v6 = 0;
      }
    }
    std::set<unsigned int>::~set((std::set<unsigned int> *const)(v3 + 80));
  }
  result = v6;
  if ( v22 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 4066: range 00000000149DA00E-00000000149DA060
bool __cdecl VintageActivity::marketStoreViewStrategy::_lambda_auto_24___::operator()_unsigned_int_const_(
        const VintageActivity::marketStoreViewStrategy::<lambda(auto:24&)> *const __closure,
        const unsigned int *p)
{
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  return !common::tools::MiscUtils::isContains<std::unordered_set<unsigned int>,unsigned int>(
            &__closure->__this->unlock_skill_set_,
            p);
};

// Line 4078: range 00000000149A8532-00000000149A8708
void __cdecl VintageActivity::unlockStoreSkillByGm(VintageActivity *const this)
{
  std::set<unsigned int> *v1; // rbx
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::_Rb_tree_const_iterator<unsigned int>::_Base_ptr M_node; // r15
  std::set<unsigned int>::iterator v5; // rax
  ActivityVintageMarketExcelConfigMgr *config_mgr; // [rsp+18h] [rbp-C8h]
  std::shared_ptr<Config> v7; // [rsp+20h] [rbp-C0h] BYREF
  char v8[176]; // [rsp+30h] [rbp-B0h] BYREF

  v1 = (std::set<unsigned int> *)v8;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_1(128LL);
    if ( v2 )
      v1 = (std::set<unsigned int> *)v2;
  }
  *(_QWORD *)v1->_M_t._M_impl.gap0 = 1102416563LL;
  *(_QWORD *)&v1->_M_t._M_impl._M_header._M_color = "1 48 48 14 skill_set:4080";
  v1->_M_t._M_impl._M_header._M_parent = (std::_Rb_tree_node_base::_Base_ptr)VintageActivity::unlockStoreSkillByGm;
  v3 = (_DWORD *)((unsigned __int64)v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = 61937;
  v3[536862723] = -202116109;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v7);
  config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v7)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
  std::shared_ptr<Config>::~shared_ptr(&v7);
  common::tools::MiscUtils::getAllMapKeysSet<std::unordered_map<unsigned int,data::VintageMarketSkillExcelConfig>>(
    v1 + 1,
    &config_mgr->vintage_market_skill_excel_config_map);
  M_node = std::set<unsigned int>::end(v1 + 1)._M_node;
  v5._M_node = std::set<unsigned int>::begin(v1 + 1)._M_node;
  std::unordered_set<unsigned int>::insert<std::_Rb_tree_const_iterator<unsigned int>>(
    &this->unlock_skill_set_,
    v5,
    (std::_Rb_tree_const_iterator<unsigned int>)M_node);
  BaseActivity::notifyClientData((BaseActivity *const)this, 0);
  std::set<unsigned int>::~set(v1 + 1);
  if ( v8 == (char *)v1 )
  {
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v1->_M_t._M_impl.gap0 = 1172321806LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)(((unsigned __int64)v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 4086: range 00000000149A870A-00000000149A8B59
__int64 __fastcall VintageActivity::checkUseHelpModule(
        VintageActivity *const this,
        uint32_t uid,
        uint32_t help_skill_id)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r12
  PlayerSocialComp *SocialComp; // rax
  common::milog::MiLogStream *v7; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v9; // rax
  __int64 result; // rax
  uint32_t store_round; // ecx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  const data::VintageMarketHelpSkillExcelConfig *config_ptr; // [rsp+18h] [rbp-B8h]
  std::shared_ptr<Config> v17; // [rsp+20h] [rbp-B0h] BYREF
  common::milog::MiLogStream v18; // [rsp+30h] [rbp-A0h] BYREF
  char v19[128]; // [rsp+50h] [rbp-80h] BYREF

  v3 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 8 uid:4085 64 4 18 help_skill_id:4085";
  *(_QWORD *)(v3 + 16) = VintageActivity::checkUseHelpModule;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202116348;
  *(_DWORD *)(v3 + 48) = uid;
  *(_DWORD *)(v3 + 64) = help_skill_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  SocialComp = Player::getSocialComp(this->player_);
  if ( !PlayerSocialComp::isPlayerFriend(SocialComp, *(_DWORD *)(v3 + 48)) )
  {
    common::milog::MiLogStream::create(
      &v18,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "checkUseHelpModule",
      4090);
    v7 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
           &v18,
           (const char (*)[37])"[Vintage] player is not friend, uid:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream(&v18);
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v17);
  v8 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v17);
  config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketHelpSkillExcelConfig(
                 &v8->design_config.txt_config_mgr.activity_vintage_market_config_mgr,
                 *(_DWORD *)(v3 + 64));
  std::shared_ptr<Config>::~shared_ptr(&v17);
  if ( config_ptr )
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    store_round = this->store_round_;
    if ( *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this - 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3)
                                                          + 0x7FFF8000) )
    {
      __asan_report_load4(&this->next_can_use_help_round_);
    }
    if ( store_round >= this->next_can_use_help_round_ )
    {
      result = 0LL;
    }
    else
    {
      common::milog::MiLogStream::create(
        &v18,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "checkUseHelpModule",
        4101);
      v12 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
              &v18,
              (const char (*)[35])"[Vintage] help in cd, store_round:");
      v13 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &this->store_round_);
      v14 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              v13,
              (const char (*)[27])", next_can_use_help_round:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &this->next_can_use_help_round_);
      common::milog::MiLogStream::~MiLogStream(&v18);
      result = 0xFFFFFFFFLL;
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v18,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "checkUseHelpModule",
      4096);
    v9 = common::milog::MiLogStream::operator<<<char [66],(char *[66])0>(
           &v18,
           (const char (*)[66])"[Vintage] findVintageMarketHelpSkillExcelConfig failed, skill_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v3 + 64));
    common::milog::MiLogStream::~MiLogStream(&v18);
    result = 0xFFFFFFFFLL;
  }
  if ( v19 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 4108: range 00000000149A8B5A-00000000149A8DCC
void __cdecl VintageActivity::initStoreHelpSkill(VintageActivity *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  _DWORD *v3; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v4; // rax
  std::vector<unsigned int>::reference v5; // rax
  uint32_t *v6; // rdx
  std::shared_ptr<Config> v7; // [rsp+10h] [rbp-C0h] BYREF
  common::milog::MiLogStream v8; // [rsp+20h] [rbp-B0h] BYREF
  char v9[144]; // [rsp+40h] [rbp-90h] BYREF

  v1 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_1(96LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 24 21 select_skill_vec:4109";
  *(_QWORD *)(v1 + 16) = VintageActivity::initStoreHelpSkill;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -218103808;
  v3[536862722] = -202116109;
  std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v1 + 32));
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v7);
  v4 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v7);
  common::tools::RandomUtils::randomSelect<unsigned int>(
    &v4->design_config.txt_config_mgr.activity_vintage_market_config_mgr.help_skill_vec,
    (std::vector<unsigned int> *)(v1 + 32),
    1u);
  std::shared_ptr<Config>::~shared_ptr(&v7);
  if ( std::vector<unsigned int>::empty((const std::vector<unsigned int> *const)(v1 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v8,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/vintage_activity.cpp",
      "initStoreHelpSkill",
      4113);
    common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
      &v8,
      (const char (*)[30])"[Vintage] randomSelect failed");
    common::milog::MiLogStream::~MiLogStream(&v8);
  }
  else
  {
    v5 = std::vector<unsigned int>::operator[]((std::vector<unsigned int> *const)(v1 + 32), 0LL);
    v6 = v5;
    if ( *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v5 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v5);
    }
    VintageActivity::setStoreHelpSkill(this, *v6);
  }
  std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v1 + 32));
  if ( v9 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 4120: range 00000000149A8DCE-00000000149A8F62
void __fastcall VintageActivity::setStoreHelpSkill(VintageActivity *const this, __int64 skill_id)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  uint32_t v5; // ecx
  char v6; // dl
  __int64 v7; // rdx
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream v9; // [rsp+10h] [rbp-80h] BYREF
  char v10[96]; // [rsp+30h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 4 13 skill_id:4119";
  *(_QWORD *)(v2 + 16) = VintageActivity::setStoreHelpSkill;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202116348;
  *(_DWORD *)(v2 + 32) = skill_id;
  v5 = *(_DWORD *)(v2 + 32);
  v6 = *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000);
  LOBYTE(skill_id) = v6 != 0;
  v7 = (v6 != 0) & (unsigned __int8)((char)((((_BYTE)this - 76) & 7) + 3) >= v6);
  if ( (_BYTE)v7 )
    __asan_report_store4(&this->help_skill_id_, skill_id, v7);
  this->help_skill_id_ = v5;
  common::milog::MiLogStream::create(
    &v9,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/vintage_activity.cpp",
    "setStoreHelpSkill",
    4122);
  v8 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
         &v9,
         (const char (*)[44])"[Vintage] setStoreHelpSkill succ, skill_id:");
  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v2 + 32));
  common::milog::MiLogStream::~MiLogStream(&v9);
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 4126: range 00000000149A8F64-00000000149A908B
void __cdecl VintageActivity::fillActivitySocialData(
        VintageActivity *const this,
        proto::ActivitySocialData *social_data)
{
  google::protobuf::Map<unsigned int,unsigned int> *v2; // rax
  uint32_t *p_help_skill_id; // rsi
  unsigned int *v4; // rax
  _DWORD *v5; // rdx
  char v6; // cl
  proto::ActivityGiveSocialData *activity_give_social_data; // [rsp+18h] [rbp-8h]

  if ( *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 76) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->help_skill_id_);
  }
  if ( this->help_skill_id_ )
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->schedule_id_);
    }
    proto::ActivitySocialData::set_schedule_id(social_data, this->schedule_id_);
    activity_give_social_data = proto::ActivitySocialData::mutable_activity_give_social_data(social_data);
    v2 = proto::ActivityGiveSocialData::mutable_wish_gift_num_map(activity_give_social_data);
    p_help_skill_id = &this->help_skill_id_;
    v4 = google::protobuf::Map<unsigned int,unsigned int>::operator[](v2, &this->help_skill_id_);
    v5 = v4;
    v6 = *(_BYTE *)(((unsigned __int64)v4 >> 3) + 0x7FFF8000);
    if ( v6 != 0 && (char)(((unsigned __int8)v4 & 7) + 3) >= v6 )
    {
      LOBYTE(p_help_skill_id) = v6 != 0;
      __asan_report_store4(v4, p_help_skill_id, v4);
    }
    *v5 = 0;
  }
};

// Line 4137: range 00000000149A908C-00000000149A946A
int32_t __cdecl VintageActivity::setGiftWish(
        VintageActivity *const this,
        const google::protobuf::Map<unsigned int,unsigned int> *gift_num_map)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  int32_t result; // eax
  common::milog::MiLogStream *v6; // r13
  google::protobuf::Map<unsigned int,unsigned int>::const_pointer v7; // rax
  _DWORD *v8; // rdx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v10; // rax
  unsigned __int64 val; // [rsp+10h] [rbp-C0h] BYREF
  const data::VintageMarketHelpSkillExcelConfig *config_ptr; // [rsp+18h] [rbp-B8h]
  std::shared_ptr<Config> v13; // [rsp+20h] [rbp-B0h] BYREF
  google::protobuf::Map<unsigned int,unsigned int>::const_iterator v14; // [rsp+30h] [rbp-A0h] BYREF
  common::milog::MiLogStream v15; // [rsp+50h] [rbp-80h] BYREF
  char v16[96]; // [rsp+70h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 4 13 skill_id:4148";
  *(_QWORD *)(v2 + 16) = VintageActivity::setGiftWish;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202116348;
  if ( *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this - 76) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->help_skill_id_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->help_skill_id_);
  }
  if ( this->help_skill_id_ )
  {
    if ( google::protobuf::Map<unsigned int,unsigned int>::size(gift_num_map) == 1 )
    {
      google::protobuf::Map<unsigned int,unsigned int>::begin(&v14, gift_num_map);
      v7 = google::protobuf::Map<unsigned int,unsigned int>::const_iterator::operator->(&v14);
      v8 = v7;
      if ( *(_BYTE *)(((unsigned __int64)v7 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v7 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v7 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v7);
      }
      *(_DWORD *)(v2 + 32) = *v8;
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v13);
      v9 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v13);
      config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketHelpSkillExcelConfig(
                     &v9->design_config.txt_config_mgr.activity_vintage_market_config_mgr,
                     *(_DWORD *)(v2 + 32));
      std::shared_ptr<Config>::~shared_ptr(&v13);
      if ( config_ptr )
      {
        VintageActivity::setStoreHelpSkill(this, *(unsigned int *)(v2 + 32));
        BaseActivity::notifyClientData((BaseActivity *const)this, 0);
        result = 0;
      }
      else
      {
        common::milog::MiLogStream::create(
          &v15,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "setGiftWish",
          4152);
        v10 = common::milog::MiLogStream::operator<<<char [66],(char *[66])0>(
                &v15,
                (const char (*)[66])"[Vintage] findVintageMarketHelpSkillExcelConfig failed, skill_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v2 + 32));
        common::milog::MiLogStream::~MiLogStream(&v15);
        result = -1;
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v15,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "setGiftWish",
        4145);
      v6 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v15,
             (const char (*)[36])"[Vintage] setGiftWish failed, size:");
      val = google::protobuf::Map<unsigned int,unsigned int>::size(gift_num_map);
      common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v6, &val);
      common::milog::MiLogStream::~MiLogStream(&v15);
      result = -1;
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "setGiftWish",
      4140);
    common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
      &v15,
      (const char (*)[42])"[Vintage] help skill is not inited, error");
    common::milog::MiLogStream::~MiLogStream(&v15);
    result = -1;
  }
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4161: range 00000000149A946C-00000000149A9546
std::set<unsigned int> *__cdecl VintageActivity::getRecvGiftUids(
        std::set<unsigned int> *retstr,
        const VintageActivity *const this)
{
  std::map<unsigned int,std::pair<unsigned int,unsigned int>>::const_iterator __for_begin; // [rsp+10h] [rbp-40h] BYREF
  std::map<unsigned int,std::pair<unsigned int,unsigned int>>::const_iterator __for_end; // [rsp+18h] [rbp-38h] BYREF
  const std::map<unsigned int,std::pair<unsigned int,unsigned int>> *__for_range; // [rsp+20h] [rbp-30h]
  const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > *v6; // [rsp+28h] [rbp-28h]
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *id; // [rsp+30h] [rbp-20h]
  std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *res_pair; // [rsp+38h] [rbp-18h]

  std::set<unsigned int>::set(retstr);
  __for_range = &this->dividend_info_map_;
  __for_begin._M_node = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::begin(&this->dividend_info_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&this->dividend_info_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v6 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator*(&__for_begin);
    id = std::get<0ul,unsigned int const,std::pair<unsigned int,unsigned int>>(v6);
    res_pair = (std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *)std::get<1ul,unsigned int const,std::pair<unsigned int,unsigned int>>(v6);
    std::set<unsigned int>::insert(retstr, (const std::set<unsigned int>::value_type *)res_pair);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator++(&__for_begin);
  }
  return retstr;
};

// Line 4171: range 00000000149A9548-00000000149A9B36
void __cdecl VintageActivity::onServerGetFriendBriefRsp(
        VintageActivity *const this,
        const proto::ServerGetFriendBriefRsp *server_rsp)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  unsigned int first; // r14d
  const proto::ProfilePicture *v6; // rax
  google::protobuf::uint32 v7; // eax
  const proto::ProfilePicture *v8; // rax
  google::protobuf::uint32 v9; // eax
  const std::string *v10; // rax
  PlayerSocialComp *SocialComp; // rcx
  const std::string *v12; // rax
  unsigned int second; // r14d
  google::protobuf::Map<unsigned int,unsigned int> *v14; // rax
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *v15; // rsi
  unsigned int *v16; // rax
  unsigned int *v17; // rdx
  char v18; // cl
  google::protobuf::int32 v19; // eax
  std::map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator __for_begin; // [rsp+10h] [rbp-110h] BYREF
  std::map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator __for_end; // [rsp+18h] [rbp-108h] BYREF
  google::protobuf::RepeatedPtrField<proto::FriendBrief>::const_iterator __for_begin_0; // [rsp+20h] [rbp-100h] BYREF
  google::protobuf::RepeatedPtrField<proto::FriendBrief>::const_iterator __for_end_0; // [rsp+28h] [rbp-F8h] BYREF
  std::map<unsigned int,std::pair<unsigned int,unsigned int>> *__for_range; // [rsp+30h] [rbp-F0h]
  const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > *v26; // [rsp+38h] [rbp-E8h]
  std::tuple_element<0,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *id; // [rsp+40h] [rbp-E0h]
  std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *res_pair; // [rsp+48h] [rbp-D8h]
  const google::protobuf::RepeatedPtrField<proto::FriendBrief> *__for_range_0; // [rsp+50h] [rbp-D0h]
  const proto::FriendBrief *friend_brief; // [rsp+58h] [rbp-C8h]
  proto::ActivityRecvGiftData *record; // [rsp+60h] [rbp-C0h]
  proto::ProfilePicture *profile_picture_proto; // [rsp+68h] [rbp-B8h]
  char v33[176]; // [rsp+70h] [rbp-B0h] BYREF

  v2 = (unsigned __int64)v33;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 56 8 rsp:4172";
  *(_QWORD *)(v2 + 16) = VintageActivity::onServerGetFriendBriefRsp;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862722] = -218103808;
  v4[536862723] = -202116109;
  proto::ActivityGetRecvGiftListRsp::ActivityGetRecvGiftListRsp((proto::ActivityGetRecvGiftListRsp *const)(v2 + 32));
  if ( !proto::ServerGetFriendBriefRsp::retcode(server_rsp) )
  {
    __for_range = &this->dividend_info_map_;
    __for_begin._M_node = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::begin(&this->dividend_info_map_)._M_node;
    __for_end._M_node = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&this->dividend_info_map_)._M_node;
    while ( std::operator!=(&__for_begin, &__for_end) )
    {
      v26 = std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator*(&__for_begin);
      id = std::get<0ul,unsigned int const,std::pair<unsigned int,unsigned int>>(v26);
      res_pair = (std::tuple_element<1,const std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::type *)std::get<1ul,unsigned int const,std::pair<unsigned int,unsigned int>>(v26);
      __for_range_0 = proto::ServerGetFriendBriefRsp::friend_brief_list(server_rsp);
      __for_begin_0.it_ = google::protobuf::RepeatedPtrField<proto::FriendBrief>::begin(__for_range_0).it_;
      __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::FriendBrief>::end(__for_range_0).it_;
      while ( google::protobuf::internal::RepeatedPtrIterator<proto::FriendBrief const>::operator!=(
                &__for_begin_0,
                &__for_end_0) )
      {
        friend_brief = google::protobuf::internal::RepeatedPtrIterator<proto::FriendBrief const>::operator*(&__for_begin_0);
        if ( *(_BYTE *)(((unsigned __int64)res_pair >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)res_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)res_pair >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(res_pair);
        }
        first = res_pair->first;
        if ( first == proto::FriendBrief::uid(friend_brief) )
        {
          record = proto::ActivityGetRecvGiftListRsp::add_recv_gift_list((proto::ActivityGetRecvGiftListRsp *const)(v2 + 32));
          if ( *(_BYTE *)(((unsigned __int64)res_pair >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)res_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)res_pair >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(res_pair);
          }
          proto::ActivityRecvGiftData::set_uid(record, res_pair->first);
          profile_picture_proto = proto::ActivityRecvGiftData::mutable_profile_picture(record);
          v6 = proto::FriendBrief::profile_picture(friend_brief);
          v7 = proto::ProfilePicture::avatar_id(v6);
          proto::ProfilePicture::set_avatar_id(profile_picture_proto, v7);
          v8 = proto::FriendBrief::profile_picture(friend_brief);
          v9 = proto::ProfilePicture::costume_id(v8);
          proto::ProfilePicture::set_costume_id(profile_picture_proto, v9);
          v10 = proto::FriendBrief::nickname[abi:cxx11](friend_brief);
          proto::ActivityRecvGiftData::set_nickname(record, v10);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          SocialComp = Player::getSocialComp(this->player_);
          if ( *(_BYTE *)(((unsigned __int64)res_pair >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)res_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)res_pair >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(res_pair);
          }
          v12 = PlayerSocialComp::findFriendRemarkName[abi:cxx11](SocialComp, res_pair->first);
          proto::ActivityRecvGiftData::set_remark_name(record, v12);
          if ( *(_BYTE *)(((unsigned __int64)&res_pair->second >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)res_pair + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&res_pair->second >> 3)
                                                                   + 0x7FFF8000) )
          {
            __asan_report_load4(&res_pair->second);
          }
          second = res_pair->second;
          v14 = proto::ActivityRecvGiftData::mutable_gift_num_map(record);
          v15 = id;
          v16 = google::protobuf::Map<unsigned int,unsigned int>::operator[](v14, id);
          v17 = v16;
          v18 = *(_BYTE *)(((unsigned __int64)v16 >> 3) + 0x7FFF8000);
          if ( v18 != 0 && (char)(((unsigned __int8)v16 & 7) + 3) >= v18 )
          {
            LOBYTE(v15) = v18 != 0;
            __asan_report_store4(v16, v15, v16);
          }
          *v17 = second;
          break;
        }
        google::protobuf::internal::RepeatedPtrIterator<proto::FriendBrief const>::operator++(&__for_begin_0);
      }
      std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>>::operator++(&__for_begin);
    }
  }
  v19 = proto::ServerGetFriendBriefRsp::retcode(server_rsp);
  proto::ActivityGetRecvGiftListRsp::set_retcode((proto::ActivityGetRecvGiftListRsp *const)(v2 + 32), v19);
  if ( *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->schedule_id_);
  }
  proto::ActivityGetRecvGiftListRsp::set_schedule_id(
    (proto::ActivityGetRecvGiftListRsp *const)(v2 + 32),
    this->schedule_id_);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 32));
  proto::ActivityGetRecvGiftListRsp::~ActivityGetRecvGiftListRsp((proto::ActivityGetRecvGiftListRsp *const)(v2 + 32));
  if ( v33 == (char *)v2 )
  {
    *(_DWORD *)((v2 >> 3) + 0x7FFF8000) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 4206: range 00000000149A9B38-00000000149AA021
void __fastcall VintageActivity::sendDividendByOfflineOp(VintageActivity *const this, uint32_t uid)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  PlayerSocialComp *SocialComp; // rax
  common::milog::MiLogStream *v6; // rax
  ActivityVintageMarketExcelConfigMgr *p_activity_vintage_market_config_mgr; // rcx
  common::milog::MiLogStream *v8; // rax
  uint32_t v9; // eax
  PlayerOfflineOpComp *OfflineOpComp; // rax
  const data::VintageMarketConstValueExcelConfig *config_ptr; // [rsp+18h] [rbp-E8h]
  proto::OfflineOpBin *offline_op_bin; // [rsp+20h] [rbp-E0h]
  proto::OfflineOpVintageActivityDividend *dividend_op; // [rsp+28h] [rbp-D8h]
  std::shared_ptr<Config> v14; // [rsp+30h] [rbp-D0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-C0h] BYREF
  char v16[160]; // [rsp+60h] [rbp-A0h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 4 8 uid:4205 48 40 20 offline_op_data:4218";
  *(_QWORD *)(v2 + 16) = VintageActivity::sendDividendByOfflineOp;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61956;
  v4[536862722] = -218103808;
  v4[536862723] = -202116109;
  *(_DWORD *)(v2 + 32) = uid;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  SocialComp = Player::getSocialComp(this->player_);
  if ( !PlayerSocialComp::isPlayerFriend(SocialComp, *(_DWORD *)(v2 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "sendDividendByOfflineOp",
      4209);
    v6 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
           &v15,
           (const char (*)[37])"[Vintage] player is not friend, uid:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, (const unsigned int *)(v2 + 32));
    common::milog::MiLogStream::~MiLogStream(&v15);
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v14);
    p_activity_vintage_market_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v14)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->activity_id_);
    }
    config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketConstValueExcelConfig(
                   p_activity_vintage_market_config_mgr,
                   this->activity_id_);
    std::shared_ptr<Config>::~shared_ptr(&v14);
    if ( config_ptr )
    {
      proto::OfflineOpData::OfflineOpData((proto::OfflineOpData *const)(v2 + 48));
      if ( *(_BYTE *)(((unsigned __int64)&config_ptr->help_reward_count_limit >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)config_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&config_ptr->help_reward_count_limit >> 3)
                                                                  + 0x7FFF8000) )
      {
        __asan_report_load4(&config_ptr->help_reward_count_limit);
      }
      proto::OfflineOpData::set_max_length((proto::OfflineOpData *const)(v2 + 48), config_ptr->help_reward_count_limit);
      offline_op_bin = proto::OfflineOpData::mutable_bin((proto::OfflineOpData *const)(v2 + 48));
      dividend_op = proto::OfflineOpBin::mutable_vintage_dividend_op(offline_op_bin);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      v9 = Player::getUid(this->player_);
      proto::OfflineOpVintageActivityDividend::set_uid(dividend_op, v9);
      if ( *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->schedule_id_);
      }
      proto::OfflineOpVintageActivityDividend::set_schedule_id(dividend_op, this->schedule_id_);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      OfflineOpComp = Player::getOfflineOpComp(this->player_);
      PlayerOfflineOpComp::sendOfflineOp(
        OfflineOpComp,
        *(_DWORD *)(v2 + 32),
        OFFLINE_OP_VINTAGE_ACTIVITY_DIVIDEND,
        (proto::OfflineOpData *)(v2 + 48));
      proto::OfflineOpData::~OfflineOpData((proto::OfflineOpData *const)(v2 + 48));
    }
    else
    {
      common::milog::MiLogStream::create(
        &v15,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "sendDividendByOfflineOp",
        4215);
      v8 = common::milog::MiLogStream::operator<<<char [70],(char *[70])0>(
             &v15,
             (const char (*)[70])"[Vintage] findVintageMarketConstValueExcelConfig failed, activity_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &this->activity_id_);
      common::milog::MiLogStream::~MiLogStream(&v15);
    }
  }
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 4228: range 00000000149AA022-00000000149AA413
__int64 __fastcall VintageActivity::quickDividendByGm(VintageActivity *const this, uint32_t uid, uint32_t count)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  PlayerSocialComp *SocialComp; // rax
  common::milog::MiLogStream *v7; // rax
  __int64 result; // rax
  ActivityVintageMarketExcelConfigMgr *p_activity_vintage_market_config_mgr; // rcx
  common::milog::MiLogStream *v10; // rax
  uint32_t index; // [rsp+14h] [rbp-9Ch]
  const data::VintageMarketConstValueExcelConfig *config_ptr; // [rsp+18h] [rbp-98h]
  std::shared_ptr<Config> v14; // [rsp+20h] [rbp-90h] BYREF
  common::milog::MiLogStream v15; // [rsp+30h] [rbp-80h] BYREF
  char v16[96]; // [rsp+50h] [rbp-60h] BYREF

  v3 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 4 8 uid:4227";
  *(_QWORD *)(v3 + 16) = VintageActivity::quickDividendByGm;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202116348;
  *(_DWORD *)(v3 + 32) = uid;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  SocialComp = Player::getSocialComp(this->player_);
  if ( !PlayerSocialComp::isPlayerFriend(SocialComp, *(_DWORD *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "quickDividendByGm",
      4231);
    v7 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
           &v15,
           (const char (*)[37])"[Vintage] player is not friend, uid:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v3 + 32));
    common::milog::MiLogStream::~MiLogStream(&v15);
    result = 0xFFFFFFFFLL;
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v14);
    p_activity_vintage_market_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v14)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->activity_id_);
    }
    config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketConstValueExcelConfig(
                   p_activity_vintage_market_config_mgr,
                   this->activity_id_);
    std::shared_ptr<Config>::~shared_ptr(&v14);
    if ( config_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&config_ptr->help_reward_count_limit >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)config_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&config_ptr->help_reward_count_limit >> 3)
                                                                  + 0x7FFF8000) )
      {
        __asan_report_load4(&config_ptr->help_reward_count_limit);
      }
      if ( count <= config_ptr->help_reward_count_limit )
      {
        for ( index = 0; index < count; ++index )
          VintageActivity::sendDividendByOfflineOp(this, *(_DWORD *)(v3 + 32));
        result = 0LL;
      }
      else
      {
        common::milog::MiLogStream::create(
          &v15,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/vintage_activity.cpp",
          "quickDividendByGm",
          4242);
        common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
          &v15,
          (const char (*)[35])"[Vintage] dividend count too large");
        common::milog::MiLogStream::~MiLogStream(&v15);
        result = 0xFFFFFFFFLL;
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v15,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/vintage_activity.cpp",
        "quickDividendByGm",
        4237);
      v10 = common::milog::MiLogStream::operator<<<char [70],(char *[70])0>(
              &v15,
              (const char (*)[70])"[Vintage] findVintageMarketConstValueExcelConfig failed, activity_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &this->activity_id_);
      common::milog::MiLogStream::~MiLogStream(&v15);
      result = 0xFFFFFFFFLL;
    }
  }
  if ( v16 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4253: range 00000000149AA6A0-00000000149AAA6B
void __cdecl VintageActivity::registerOfflineOp(VintageActivity *const this)
{
  unsigned __int64 v1; // r12
  __int64 v2; // rax
  _DWORD *v3; // r13
  PlayerOfflineOpComp *OfflineOpComp; // r14
  PlayerOfflineOpComp *v5; // r14
  proto::OfflineOpType op_type; // [rsp+1Ch] [rbp-C4h] BYREF
  std::enable_shared_from_this<BaseActivity> v7; // [rsp+20h] [rbp-C0h] BYREF
  std::function<void(const proto::SendOfflineOpRsp&)> p_func; // [rsp+30h] [rbp-B0h] BYREF
  char v9[144]; // [rsp+50h] [rbp-90h] BYREF

  v1 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_1(96LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "2 32 16 10 s_ptr:4256 64 16 10 w_ptr:4256";
  *(_QWORD *)(v1 + 16) = VintageActivity::registerOfflineOp;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -219021312;
  v3[536862722] = -202178560;
  std::enable_shared_from_this<BaseActivity>::shared_from_this(&v7);
  std::dynamic_pointer_cast<VintageActivity,BaseActivity>((const std::shared_ptr<BaseActivity> *)(v1 + 32));
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)&v7);
  std::weak_ptr<VintageActivity>::weak_ptr<VintageActivity,void>(
    (std::weak_ptr<VintageActivity> *const)(v1 + 64),
    (const std::shared_ptr<VintageActivity> *)(v1 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  OfflineOpComp = Player::getOfflineOpComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v7,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  std::function<void ()(proto::SendOfflineOpRsp const&)>::function<VintageActivity::registerOfflineOp(void)::{lambda(proto::SendOfflineOpRsp const&)#1},void,void>(
    &p_func,
    (VintageActivity::registerOfflineOp::<lambda(const proto::SendOfflineOpRsp&)> *)&v7);
  op_type = OFFLINE_OP_VINTAGE_ACTIVITY_DIVIDEND;
  PlayerOfflineOpComp::registerSendRspCallBack(OfflineOpComp, &op_type, &p_func);
  std::function<void ()(proto::SendOfflineOpRsp const&)>::~function(&p_func);
  VintageActivity::registerOfflineOp(void)::{lambda(proto::SendOfflineOpRsp const&)#1}::~SendOfflineOpRsp((VintageActivity::registerOfflineOp::<lambda(const proto::SendOfflineOpRsp&)> *const)&v7);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)(v1 + 64));
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v1 + 32));
  std::enable_shared_from_this<BaseActivity>::shared_from_this(&v7);
  std::dynamic_pointer_cast<VintageActivity,BaseActivity>((const std::shared_ptr<BaseActivity> *)(v1 + 32));
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)&v7);
  std::weak_ptr<VintageActivity>::weak_ptr<VintageActivity,void>(
    (std::weak_ptr<VintageActivity> *const)(v1 + 64),
    (const std::shared_ptr<VintageActivity> *)(v1 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  v5 = Player::getOfflineOpComp(this->player_);
  std::weak_ptr<VintageActivity>::weak_ptr(
    (std::weak_ptr<VintageActivity> *const)&v7,
    (const std::weak_ptr<VintageActivity> *)(v1 + 64));
  std::function<void ()(proto::OfflineOpBin const&)>::function<VintageActivity::registerOfflineOp(void)::{lambda(proto::OfflineOpBin const&)#2},void,void>(
    (std::function<void(const proto::OfflineOpBin&)> *const)&p_func,
    (VintageActivity::registerOfflineOp::<lambda(const proto::OfflineOpBin&)> *)&v7);
  op_type = OFFLINE_OP_VINTAGE_ACTIVITY_DIVIDEND;
  PlayerOfflineOpComp::registerExecOfflineOp(v5, &op_type, (PlayerOfflineOpComp::ExecFunc *)&p_func);
  std::function<void ()(proto::OfflineOpBin const&)>::~function((std::function<void(const proto::OfflineOpBin&)> *const)&p_func);
  VintageActivity::registerOfflineOp(void)::{lambda(proto::OfflineOpBin const&)#2}::~OfflineOpBin((VintageActivity::registerOfflineOp::<lambda(const proto::OfflineOpBin&)> *const)&v7);
  std::weak_ptr<VintageActivity>::~weak_ptr((std::weak_ptr<VintageActivity> *const)(v1 + 64));
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v1 + 32));
  if ( v9 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 4255: range 00000000149D55E8-00000000149D560D
void __cdecl VintageActivity::registerOfflineOp(void)::{lambda(proto::SendOfflineOpRsp const&)#1}::SendOfflineOpRsp(
        VintageActivity::registerOfflineOp::<lambda(const proto::SendOfflineOpRsp&)> *const this,
        VintageActivity::registerOfflineOp::<lambda(const proto::SendOfflineOpRsp&)> *a2)
{
  std::weak_ptr<VintageActivity>::weak_ptr(&this->__w_ptr, &a2->__w_ptr);
};

// Line 4255: range 00000000149D56D8-00000000149D56FD
void __cdecl VintageActivity::registerOfflineOp(void)::{lambda(proto::SendOfflineOpRsp const&)#1}::SendOfflineOpRsp(
        VintageActivity::registerOfflineOp::<lambda(const proto::SendOfflineOpRsp&)> *const this,
        const VintageActivity::registerOfflineOp::<lambda(const proto::SendOfflineOpRsp&)> *a2)
{
  std::weak_ptr<VintageActivity>::weak_ptr(&this->__w_ptr, &a2->__w_ptr);
};

// Line 4255: range 00000000149AA414-00000000149AA53C
void __cdecl VintageActivity::registerOfflineOp(void)::{lambda(proto::SendOfflineOpRsp const&)#1}::operator()(
        const VintageActivity::registerOfflineOp::<lambda(const proto::SendOfflineOpRsp&)> *const __closure,
        const proto::SendOfflineOpRsp *rsp_0)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  VintageActivity *v5; // rdx
  char v6[96]; // [rsp+10h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 10 s_ptr:4255";
  *(_QWORD *)(v2 + 16) = VintageActivity::registerOfflineOp(void)::{lambda(proto::SendOfflineOpRsp const&)#1}::operator();
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  std::weak_ptr<VintageActivity>::lock((const std::weak_ptr<VintageActivity> *const)(v2 + 32));
  if ( std::operator!=<VintageActivity>((const std::shared_ptr<VintageActivity> *)(v2 + 32), 0LL) )
  {
    v5 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    VintageActivity::onSendOfflineOpRsp(v5, rsp_0);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v2 + 32));
  if ( v6 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 4255: range 00000000149AA53E-00000000149AA558
void __cdecl VintageActivity::registerOfflineOp(void)::{lambda(proto::SendOfflineOpRsp const&)#1}::~SendOfflineOpRsp(
        VintageActivity::registerOfflineOp::<lambda(const proto::SendOfflineOpRsp&)> *const this)
{
  std::weak_ptr<VintageActivity>::~weak_ptr(&this->__w_ptr);
};

// Line 4256: range 00000000149D57F0-00000000149D5815
void __cdecl VintageActivity::registerOfflineOp(void)::{lambda(proto::OfflineOpBin const&)#2}::OfflineOpBin(
        VintageActivity::registerOfflineOp::<lambda(const proto::OfflineOpBin&)> *const this,
        VintageActivity::registerOfflineOp::<lambda(const proto::OfflineOpBin&)> *a2)
{
  std::weak_ptr<VintageActivity>::weak_ptr(&this->__w_ptr, &a2->__w_ptr);
};

// Line 4256: range 00000000149D58E0-00000000149D5905
void __cdecl VintageActivity::registerOfflineOp(void)::{lambda(proto::OfflineOpBin const&)#2}::OfflineOpBin(
        VintageActivity::registerOfflineOp::<lambda(const proto::OfflineOpBin&)> *const this,
        const VintageActivity::registerOfflineOp::<lambda(const proto::OfflineOpBin&)> *a2)
{
  std::weak_ptr<VintageActivity>::weak_ptr(&this->__w_ptr, &a2->__w_ptr);
};

// Line 4256: range 00000000149AA55A-00000000149AA682
void __cdecl VintageActivity::registerOfflineOp(void)::{lambda(proto::OfflineOpBin const&)#2}::operator()(
        const VintageActivity::registerOfflineOp::<lambda(const proto::OfflineOpBin&)> *const __closure,
        const proto::OfflineOpBin *bin)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  VintageActivity *v5; // rdx
  char v6[96]; // [rsp+10h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v6;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 10 s_ptr:4256";
  *(_QWORD *)(v2 + 16) = VintageActivity::registerOfflineOp(void)::{lambda(proto::OfflineOpBin const&)#2}::operator();
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  std::weak_ptr<VintageActivity>::lock((const std::weak_ptr<VintageActivity> *const)(v2 + 32));
  if ( std::operator!=<VintageActivity>((const std::shared_ptr<VintageActivity> *)(v2 + 32), 0LL) )
  {
    v5 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    VintageActivity::onOfflineOpExec(v5, bin);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v2 + 32));
  if ( v6 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 4256: range 00000000149AA684-00000000149AA69E
void __cdecl VintageActivity::registerOfflineOp(void)::{lambda(proto::OfflineOpBin const&)#2}::~OfflineOpBin(
        VintageActivity::registerOfflineOp::<lambda(const proto::OfflineOpBin&)> *const this)
{
  std::weak_ptr<VintageActivity>::~weak_ptr(&this->__w_ptr);
};

// Line 4260: range 00000000149AAA6C-00000000149AAB36
void __cdecl VintageActivity::onSendOfflineOpRsp(VintageActivity *const this, const proto::SendOfflineOpRsp *rsp_0)
{
  common::milog::MiLogStream v2; // [rsp+10h] [rbp-50h] BYREF
  std::string val; // [rsp+30h] [rbp-30h] BYREF

  if ( proto::SendOfflineOpRsp::retcode(rsp_0) )
  {
    common::milog::MiLogStream::create(
      &v2,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "onSendOfflineOpRsp",
      4263);
    google::protobuf::Message::ShortDebugString[abi:cxx11](&val, &rsp_0->google::protobuf::Message);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(&v2, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v2);
  }
};

// Line 4268: range 00000000149AAB38-00000000149ABBA8
void __cdecl VintageActivity::onOfflineOpExec(VintageActivity *const this, const proto::OfflineOpBin *bin)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  char v5; // al
  common::milog::MiLogStream *v6; // r14
  uint32_t schedule_id; // r14d
  common::milog::MiLogStream *v8; // r14
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  common::milog::MiLogStream *v13; // rax
  ActivityVintageMarketExcelConfigMgr *p_activity_vintage_market_config_mgr; // rcx
  common::milog::MiLogStream *v15; // rax
  uint32_t dividend_reward_count; // ecx
  PlayerItemComp *ItemComp; // rax
  PlayerItemComp *v18; // rax
  uint32_t v19; // ecx
  char v20; // dl
  __int64 v21; // rsi
  __int64 v22; // rdx
  google::protobuf::uint32 v23; // eax
  google::protobuf::uint32 v24; // eax
  __int64 v25; // rsi
  __int64 v26; // rdx
  char v27; // al
  std::pair<unsigned int,unsigned int> *v28; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >,bool> v29; // rax
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // r14
  common::milog::MiLogStream *v37; // rax
  unsigned int v38; // [rsp+1Ch] [rbp-164h] BYREF
  unsigned int val; // [rsp+20h] [rbp-160h] BYREF
  uint32_t prev_coin_a_num; // [rsp+24h] [rbp-15Ch]
  uint32_t prev_coin_c_num; // [rsp+28h] [rbp-158h]
  uint32_t count; // [rsp+2Ch] [rbp-154h]
  uint32_t cur_coin_a_num; // [rsp+30h] [rbp-150h]
  uint32_t cur_coin_c_num; // [rsp+34h] [rbp-14Ch]
  const proto::OfflineOpVintageActivityDividend *dividend_op; // [rsp+38h] [rbp-148h]
  const data::VintageMarketConstValueExcelConfig *config_ptr; // [rsp+40h] [rbp-140h]
  std::pair<unsigned int,unsigned int> M_node; // [rsp+48h] [rbp-138h] BYREF
  char v48[304]; // [rsp+50h] [rbp-130h] BYREF

  v2 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(256LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "6 32 4 8 res:4292 48 4 15 size_count:4338 64 8 9 iter:4341 96 16 19 add_item_param:4308 128 24 1"
                        "1 reason:4307 192 32 20 dividend_notify:4325";
  *(_QWORD *)(v2 + 16) = VintageActivity::onOfflineOpExec;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862722] = -218959360;
  v4[536862723] = -219021312;
  v4[536862724] = -234881024;
  v4[536862725] = -218959118;
  v4[536862727] = -202116109;
  if ( BaseActivity::isSettled((const BaseActivity *const)this) )
    goto LABEL_8;
  if ( *(char *)(((unsigned __int64)&this->is_content_closed_ >> 3) + 0x7FFF8000) < 0 )
    __asan_report_load1(&this->is_content_closed_);
  if ( this->is_content_closed_ )
LABEL_8:
    v5 = 1;
  else
    v5 = 0;
  if ( v5 )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 192),
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/vintage_activity.cpp",
      "onOfflineOpExec",
      4271);
    v6 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           (common::milog::MiLogStream *const)(v2 + 192),
           (const char (*)[43])"[Vintage] activity content is closed, uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
  }
  else
  {
    dividend_op = proto::OfflineOpBin::vintage_dividend_op(bin);
    if ( *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->schedule_id_ >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->schedule_id_);
    }
    schedule_id = this->schedule_id_;
    if ( schedule_id == proto::OfflineOpVintageActivityDividend::schedule_id(dividend_op) )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->dividend_id_);
      }
      val = SAFE_ADD<unsigned int,int>(this->dividend_id_, 1);
      if ( common::tools::MiscUtils::isContains<std::map<unsigned int,std::pair<unsigned int,unsigned int>>,unsigned int>(
             &this->dividend_info_map_,
             &val) )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 192),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "onOfflineOpExec",
          4283);
        v13 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
                (common::milog::MiLogStream *const)(v2 + 192),
                (const char (*)[50])"[Vintage] next dividend_id is exist, dividend_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &this->dividend_id_);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
        goto LABEL_80;
      }
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)(v2 + 96));
      p_activity_vintage_market_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96))->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->activity_id_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->activity_id_);
      }
      config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketConstValueExcelConfig(
                     p_activity_vintage_market_config_mgr,
                     this->activity_id_);
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 96));
      if ( !config_ptr )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 192),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "onOfflineOpExec",
          4289);
        v15 = common::milog::MiLogStream::operator<<<char [70],(char *[70])0>(
                (common::milog::MiLogStream *const)(v2 + 192),
                (const char (*)[70])"[Vintage] findVintageMarketConstValueExcelConfig failed, activity_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &this->activity_id_);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
        goto LABEL_80;
      }
      *(_DWORD *)(v2 + 32) = 0;
      if ( *(char *)(((unsigned __int64)&this->is_store_content_finish_ >> 3) + 0x7FFF8000) < 0 )
        __asan_report_load1(&this->is_store_content_finish_);
      if ( this->is_store_content_finish_ )
      {
        *(_DWORD *)(v2 + 32) = 2;
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)this - 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3)
                                                              + 0x7FFF8000) )
        {
          __asan_report_load4(&this->dividend_reward_count_);
        }
        dividend_reward_count = this->dividend_reward_count_;
        if ( *(_BYTE *)(((unsigned __int64)&config_ptr->help_reward_count_limit >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)config_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&config_ptr->help_reward_count_limit >> 3)
                                                                    + 0x7FFF8000) )
        {
          __asan_report_load4(&config_ptr->help_reward_count_limit);
        }
        if ( dividend_reward_count < config_ptr->help_reward_count_limit )
        {
          prev_coin_a_num = VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A);
          prev_coin_c_num = VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C);
          if ( *(_BYTE *)(((unsigned __int64)&config_ptr->help_reward >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&config_ptr->help_reward >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&config_ptr->help_reward);
          }
          count = config_ptr->help_reward;
          ActionReason::ActionReason(
            (ActionReason *const)(v2 + 128),
            ACTION_REASON_VINTAGE_STORE_DIVIDEND,
            ITEM_LIMIT_ACTIVITY_VINTAGE);
          *(_QWORD *)(v2 + 96) = 0LL;
          *(_QWORD *)(v2 + 104) = 0LL;
          *(_DWORD *)(v2 + 96) = 148;
          *(_DWORD *)(v2 + 100) = count;
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          ItemComp = Player::getItemComp(this->player_);
          if ( PlayerItemComp::checkAddItem(ItemComp, (const ItemParam *)(v2 + 96), (const ActionReason *)(v2 + 128)) )
          {
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 192),
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/vintage_activity.cpp",
              "onOfflineOpExec",
              4311);
            common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
              (common::milog::MiLogStream *const)(v2 + 192),
              (const char (*)[30])"[Vintage] checkAddItem failed");
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
            goto LABEL_80;
          }
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          v18 = Player::getItemComp(this->player_);
          if ( PlayerItemComp::addItem(v18, (const ItemParam *)(v2 + 96), (const ActionReason *)(v2 + 128), 0LL) )
          {
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)(v2 + 192),
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/vintage_activity.cpp",
              "onOfflineOpExec",
              4316);
            common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
              (common::milog::MiLogStream *const)(v2 + 192),
              (const char (*)[25])"[Vintage] addItem failed");
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
            goto LABEL_80;
          }
          *(_DWORD *)(v2 + 32) = 3;
          if ( *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)this - 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3)
                                                                + 0x7FFF8000) )
          {
            __asan_report_load4(&this->dividend_reward_count_);
          }
          v21 = 1LL;
          v19 = SAFE_ADD<unsigned int,int>(this->dividend_reward_count_, 1);
          v20 = *(_BYTE *)(((unsigned __int64)&this->dividend_reward_count_ >> 3) + 0x7FFF8000);
          LOBYTE(v21) = v20 != 0;
          v22 = (v20 != 0) & (unsigned __int8)((char)((((_BYTE)this - 20) & 7) + 3) >= v20);
          if ( (_BYTE)v22 )
            __asan_report_store4(&this->dividend_reward_count_, v21, v22);
          this->dividend_reward_count_ = v19;
          cur_coin_a_num = VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A);
          cur_coin_c_num = VintageActivity::getActivityCoin(this, ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C);
          proto::VintageMarketDividendFinishNotify::VintageMarketDividendFinishNotify((proto::VintageMarketDividendFinishNotify *const)(v2 + 192));
          if ( cur_coin_a_num <= prev_coin_a_num )
            v23 = 0;
          else
            v23 = cur_coin_a_num - prev_coin_a_num;
          proto::VintageMarketDividendFinishNotify::set_coin_a(
            (proto::VintageMarketDividendFinishNotify *const)(v2 + 192),
            v23);
          if ( cur_coin_c_num <= prev_coin_c_num )
            v24 = 0;
          else
            v24 = cur_coin_c_num - prev_coin_c_num;
          proto::VintageMarketDividendFinishNotify::set_coin_c(
            (proto::VintageMarketDividendFinishNotify *const)(v2 + 192),
            v24);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 192));
          proto::VintageMarketDividendFinishNotify::~VintageMarketDividendFinishNotify((proto::VintageMarketDividendFinishNotify *const)(v2 + 192));
        }
        else
        {
          *(_DWORD *)(v2 + 32) = 1;
        }
      }
      if ( *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->dividend_id_);
      }
      v25 = 1LL;
      v26 = SAFE_ADD<unsigned int,int>(this->dividend_id_, 1);
      v27 = *(_BYTE *)(((unsigned __int64)&this->dividend_id_ >> 3) + 0x7FFF8000);
      if ( v27 != 0 && v27 <= 3 )
      {
        LOBYTE(v25) = v27 != 0;
        __asan_report_store4(&this->dividend_id_, v25, v26);
      }
      this->dividend_id_ = v26;
      val = proto::OfflineOpVintageActivityDividend::uid(dividend_op);
      M_node = std::make_pair<unsigned int,unsigned int &>(&val, (unsigned int *)(v2 + 32));
      v29 = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int &,std::pair<unsigned int,unsigned int>>(
              &this->dividend_info_map_,
              &this->dividend_id_,
              &M_node,
              &this->dividend_id_,
              v28);
      if ( !v29.second )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 192),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/vintage_activity.cpp",
          "onOfflineOpExec",
          4334);
        v30 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
                (common::milog::MiLogStream *const)(v2 + 192),
                (const char (*)[34])"[Vintage] duplicaite dividend_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v30, &this->dividend_id_);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
        goto LABEL_80;
      }
      *(_DWORD *)(v2 + 48) = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::size(&this->dividend_info_map_);
      if ( *(_BYTE *)(((unsigned __int64)&config_ptr->help_display_count_limit >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&config_ptr->help_display_count_limit >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&config_ptr->help_display_count_limit);
      }
      if ( config_ptr->help_display_count_limit < *(_DWORD *)(v2 + 48) )
      {
        *(std::map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 64) = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::begin(&this->dividend_info_map_);
        while ( 1 )
        {
          M_node = (std::pair<unsigned int,unsigned int>)std::map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&this->dividend_info_map_)._M_node;
          if ( !std::operator!=(
                  (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::_Self *)(v2 + 64),
                  (const std::_Rb_tree_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> > >::_Self *)&M_node) )
            break;
          if ( *(_BYTE *)(((unsigned __int64)&config_ptr->help_display_count_limit >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&config_ptr->help_display_count_limit >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&config_ptr->help_display_count_limit);
          }
          if ( config_ptr->help_display_count_limit == *(_DWORD *)(v2 + 48) )
            break;
          *(std::map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 64) = std::map<unsigned int,std::pair<unsigned int,unsigned int>>::erase[abi:cxx11](
                                                                                                  &this->dividend_info_map_,
                                                                                                  *(std::map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 64));
          --*(_DWORD *)(v2 + 48);
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v2 + 192),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/vintage_activity.cpp",
          "onOfflineOpExec",
          4350);
        v31 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
                (common::milog::MiLogStream *const)(v2 + 192),
                (const char (*)[26])"[Vintage] now size_count:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v31, (const unsigned int *)(v2 + 48));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
      }
      BaseActivity::sendHaveRecvGiftNotify((BaseActivity *const)this);
      BaseActivity::updateAllConds((BaseActivity *const)this);
      BaseActivity::notifyClientData((BaseActivity *const)this, 0);
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 192),
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "onOfflineOpExec",
        4356);
      v32 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
              (common::milog::MiLogStream *const)(v2 + 192),
              (const char (*)[23])"[Vintage] dividend_id:");
      v33 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v32, &this->dividend_id_);
      v34 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v33, (const char (*)[16])", dividend_res:");
      v35 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v34, (const unsigned int *)(v2 + 32));
      v36 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v35, (const char (*)[14])", source_uid:");
      v38 = proto::OfflineOpVintageActivityDividend::uid(dividend_op);
      v37 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v36, &v38);
      v12 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v37, (const char (*)[7])", uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
    }
    else
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 192),
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/vintage_activity.cpp",
        "onOfflineOpExec",
        4277);
      v8 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
             (common::milog::MiLogStream *const)(v2 + 192),
             (const char (*)[52])"[Vintage] old offline message. messege schedule_id:");
      v38 = proto::OfflineOpVintageActivityDividend::schedule_id(dividend_op);
      v9 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &v38);
      v10 = common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(v9, (const char (*)[18])" now schedule_id:");
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &this->schedule_id_);
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
    }
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 192));
  }
LABEL_80:
  if ( v48 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 4360: range 00000000149ABBAA-00000000149ABE03
int32_t __cdecl VintageActivity::simulateCalcRoundAimAttrByGm(VintageActivity *const this)
{
  uint32_t store_round; // ebx
  TxtConfigMgr *p_txt_config_mgr; // rax
  bool v3; // bl
  common::milog::MiLogStream *v5; // rax
  std::vector<unsigned int>::value_type __x; // [rsp+1Ch] [rbp-74h] BYREF
  std::shared_ptr<Config> v7; // [rsp+20h] [rbp-70h] BYREF
  common::milog::MiLogStream v8; // [rsp+30h] [rbp-60h] BYREF
  std::set<unsigned int> store_set; // [rsp+50h] [rbp-40h] BYREF

  if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->store_round_);
  }
  store_round = this->store_round_;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v7);
  p_txt_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v7)->design_config.txt_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&p_txt_config_mgr->activity_vintage_market_config_mgr.max_round >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&p_txt_config_mgr->activity_vintage_market_config_mgr.max_round >> 3) + 0x7FFF8000) <= 3 )
  {
    p_txt_config_mgr = (TxtConfigMgr *)__asan_report_load4(&p_txt_config_mgr->activity_vintage_market_config_mgr.max_round);
  }
  v3 = store_round < p_txt_config_mgr->activity_vintage_market_config_mgr.max_round;
  std::shared_ptr<Config>::~shared_ptr(&v7);
  if ( v3 )
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    ++this->store_round_;
    __x = 0;
    std::vector<unsigned int>::push_back(&this->store_round_income_vec_, &__x);
    common::tools::MiscUtils::getAllMapKeysSet<std::map<unsigned int,VintageMarketStoreData>>(
      &store_set,
      &this->store_map_);
    VintageActivity::calcStoreRoundAimAttr(this, &store_set);
    std::set<unsigned int>::~set(&store_set);
    BaseActivity::notifyClientData((BaseActivity *const)this, 0);
    return 0;
  }
  else
  {
    common::milog::MiLogStream::create(
      &v8,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/vintage_activity.cpp",
      "simulateCalcRoundAimAttrByGm",
      4371);
    v5 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           &v8,
           (const char (*)[43])"[Vintage] store round is max, store_round:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, &this->store_round_);
    common::milog::MiLogStream::~MiLogStream(&v8);
    return -1;
  }
};

// Line 4377: range 00000000149ABE04-00000000149ABE6E
void __cdecl VintageActivity::refreshHelpCdByGm(VintageActivity *const this)
{
  __int64 v1; // rdx

  v1 = (*(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this - 84) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->next_can_use_help_round_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v1 )
    __asan_report_store4(&this->next_can_use_help_round_, (((_BYTE)this - 84) & 7u) + 3, v1);
  this->next_can_use_help_round_ = 0;
  BaseActivity::notifyClientData((BaseActivity *const)this, 0);
};

// Line 4383: range 00000000149ABE70-00000000149AC326
int32_t __cdecl VintageActivity::triggerEnvEventByGm(
        VintageActivity *const this,
        const std::set<unsigned int> *env_event_set)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  std::_Rb_tree_const_iterator<unsigned int>::reference v5; // rax
  _DWORD *v6; // rdx
  const unsigned int *v7; // r8
  common::milog::MiLogStream *v8; // rax
  int32_t v9; // r14d
  uint32_t store_round; // ecx
  uint32_t v11; // r14d
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *v12; // rsi
  std::unordered_map<unsigned int,unsigned int>::mapped_type *v13; // rax
  uint32_t *v14; // rdx
  char v15; // cl
  int32_t result; // eax
  std::set<unsigned int>::iterator __for_begin; // [rsp+18h] [rbp-128h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+20h] [rbp-120h] BYREF
  const ActivityVintageMarketExcelConfigMgr *config_mgr; // [rsp+28h] [rbp-118h]
  const std::set<unsigned int> *__for_range; // [rsp+30h] [rbp-110h]
  std::map<unsigned int,unsigned int> *__for_range_0; // [rsp+38h] [rbp-108h]
  const std::pair<unsigned int const,unsigned int> *v22; // [rsp+40h] [rbp-100h]
  std::tuple_element<0,const std::pair<unsigned int const,unsigned int> >::type *id; // [rsp+48h] [rbp-F8h]
  std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *duration; // [rsp+50h] [rbp-F0h]
  const data::VintageMarketEnvEventExcelConfig *config_ptr; // [rsp+58h] [rbp-E8h]
  std::shared_ptr<Config> v26; // [rsp+60h] [rbp-E0h] BYREF
  common::milog::MiLogStream v27; // [rsp+70h] [rbp-D0h] BYREF
  char v28[176]; // [rsp+90h] [rbp-B0h] BYREF

  v2 = (unsigned __int64)v28;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 4 17 env_event_id:4386 48 48 18 env_event_map:4384";
  *(_QWORD *)(v2 + 16) = VintageActivity::triggerEnvEventByGm;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61956;
  v4[536862723] = -202116109;
  std::map<unsigned int,unsigned int>::map((std::map<unsigned int,unsigned int> *const)(v2 + 48));
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v26);
  config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v26)->design_config.txt_config_mgr.activity_vintage_market_config_mgr;
  std::shared_ptr<Config>::~shared_ptr(&v26);
  __for_range = env_event_set;
  __for_begin._M_node = std::set<unsigned int>::begin(env_event_set)._M_node;
  __for_end._M_node = std::set<unsigned int>::end(env_event_set)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v5 = std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
    v6 = v5;
    if ( *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v5 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v5);
    }
    *(_DWORD *)(v2 + 32) = *v6;
    config_ptr = data::ActivityVintageMarketExcelConfigMgrBase::findVintageMarketEnvEventExcelConfig(
                   config_mgr,
                   *(_DWORD *)(v2 + 32));
    if ( !config_ptr )
    {
      common::milog::MiLogStream::create(
        &v27,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/vintage_activity.cpp",
        "triggerEnvEventByGm",
        4391);
      v8 = common::milog::MiLogStream::operator<<<char [59],(char *[59])0>(
             &v27,
             (const char (*)[59])"[Vintage] findVintageMarketEnvEventExcelConfig failed, id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v2 + 32));
      common::milog::MiLogStream::~MiLogStream(&v27);
      v9 = -1;
      goto LABEL_21;
    }
    std::map<unsigned int,unsigned int>::emplace<unsigned int &,unsigned int const&>(
      (std::map<unsigned int,unsigned int> *const)(v2 + 48),
      (unsigned int *)(v2 + 32),
      &config_ptr->duration,
      (unsigned int *)(v2 + 32),
      v7);
    std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
  }
  __for_range_0 = (std::map<unsigned int,unsigned int> *)(v2 + 48);
  __for_begin._M_node = std::map<unsigned int,unsigned int>::begin((std::map<unsigned int,unsigned int> *const)(v2 + 48))._M_node;
  __for_end._M_node = std::map<unsigned int,unsigned int>::end(__for_range_0)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_begin,
            (const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_end) )
  {
    v22 = std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> > *const)&__for_begin);
    id = std::get<0ul,unsigned int const,unsigned int>(v22);
    duration = (std::tuple_element<1,const std::pair<unsigned int const,unsigned int> >::type *)std::get<1ul,unsigned int const,unsigned int>(v22);
    if ( *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->store_round_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->store_round_);
    }
    store_round = this->store_round_;
    if ( *(_BYTE *)(((unsigned __int64)duration >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)duration & 7) + 3) >= *(_BYTE *)(((unsigned __int64)duration >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(duration);
    }
    v11 = store_round + *duration;
    v12 = id;
    v13 = std::unordered_map<unsigned int,unsigned int>::operator[](&this->env_to_round_map_, id);
    v14 = v13;
    v15 = *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000);
    if ( v15 != 0 && (char)(((unsigned __int8)v13 & 7) + 3) >= v15 )
    {
      LOBYTE(v12) = v15 != 0;
      __asan_report_store4(v13, v12, v13);
    }
    *v14 = v11;
    std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> > *const)&__for_begin);
  }
  BaseActivity::notifyClientData((BaseActivity *const)this, 0);
  v9 = 0;
LABEL_21:
  std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v2 + 48));
  result = v9;
  if ( v28 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4405: range 00000000149AC328-00000000149AC359
void __cdecl VintageActivity::clearEnvEventByGm(VintageActivity *const this)
{
  std::unordered_map<unsigned int,unsigned int>::clear(&this->env_to_round_map_);
  BaseActivity::notifyClientData((BaseActivity *const)this, 0);
};

// Line 4412: range 00000000149AC35A-00000000149AC6AA
void __cdecl VintageActivity::logCoinChange(
        VintageActivity *const this,
        uint32_t coin_id,
        uint32_t reason,
        int32_t change_num,
        uint32_t cur_num)
{
  unsigned __int64 v5; // r12
  __int64 v6; // rax
  _DWORD *v7; // r13
  PlayerBasicComp *BasicComp; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // r14
  google::protobuf::uint32 v10; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v14; // rax
  Player *player; // r14
  std::string v16; // [rsp+0h] [rbp-F0h]
  google::protobuf::uint32 cur_numa; // [rsp+8h] [rbp-E8h]
  google::protobuf::int32 change_numa; // [rsp+Ch] [rbp-E4h]
  google::protobuf::uint32 reasona; // [rsp+10h] [rbp-E0h]
  google::protobuf::uint32 coin_ida; // [rsp+14h] [rbp-DCh]
  VintageActivity *thisa; // [rsp+18h] [rbp-D8h]
  std::shared_ptr<google::protobuf::Message> p_body_ptr; // [rsp+20h] [rbp-D0h] BYREF
  std::shared_ptr<google::protobuf::Message> p_body_ext_ptr; // [rsp+30h] [rbp-C0h] BYREF
  std::string v24; // [rsp+40h] [rbp-B0h] BYREF
  char v25[144]; // [rsp+60h] [rbp-90h] BYREF

  *(&v16._anon_0._M_allocated_capacity + 1) = (std::string::size_type)this;
  HIDWORD(v16._anon_0._M_allocated_capacity) = coin_id;
  *(_DWORD *)v16._anon_0._M_local_buf = reason;
  HIDWORD(v16._M_string_length) = change_num;
  LODWORD(v16._M_string_length) = cur_num;
  v5 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_1(96LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "2 48 1 23 log_context_holder:4413 64 16 12 log_ptr:4414";
  *(_QWORD *)(v5 + 16) = VintageActivity::logCoinChange;
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -234753551;
  v7[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  BasicComp = Player::getBasicComp(this->player_);
  PlayerBasicComp::getNextTransNo[abi:cxx11](&v24, BasicComp);
  StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v5 + 48), 0xE6Du, v16);
  std::string::~string(&v24);
  common::tools::perf::make_shared<proto_log::PlayerLogBodyVintageMarketCoinChange>();
  v9 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v5 + 64));
  v10 = std::map<unsigned int,VintageMarketStoreData>::size(&thisa->store_map_);
  proto_log::PlayerLogBodyVintageMarketCoinChange::set_shop_count(v9, v10);
  v11 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v5 + 64));
  proto_log::PlayerLogBodyVintageMarketCoinChange::set_coin_id(v11, coin_ida);
  v12 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v5 + 64));
  proto_log::PlayerLogBodyVintageMarketCoinChange::set_reason(v12, reasona);
  v13 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v5 + 64));
  proto_log::PlayerLogBodyVintageMarketCoinChange::set_change_num(v13, change_numa);
  v14 = std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyVintageMarketCoinChange,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v5 + 64));
  proto_log::PlayerLogBodyVintageMarketCoinChange::set_cur_num(v14, cur_numa);
  if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&thisa->player_);
  player = thisa->player_;
  std::shared_ptr<google::protobuf::Message>::shared_ptr(&p_body_ext_ptr, 0LL);
  std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyVintageMarketCoinChange,void>(
    &p_body_ptr,
    (const std::shared_ptr<proto_log::PlayerLogBodyVintageMarketCoinChange> *)(v5 + 64));
  Player::printStatLog(player, &p_body_ptr, &p_body_ext_ptr, 0xEu);
  std::shared_ptr<google::protobuf::Message>::~shared_ptr(&p_body_ptr);
  std::shared_ptr<google::protobuf::Message>::~shared_ptr(&p_body_ext_ptr);
  std::shared_ptr<proto_log::PlayerLogBodyVintageMarketCoinChange>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyVintageMarketCoinChange> *const)(v5 + 64));
  StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v5 + 48));
  if ( v25 == (char *)v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = -168430091;
  }
};
