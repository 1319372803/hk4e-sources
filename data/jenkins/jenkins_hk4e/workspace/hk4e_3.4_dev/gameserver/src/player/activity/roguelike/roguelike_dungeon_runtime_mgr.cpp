// File: /data/jenkins/jenkins_hk4e/workspace/hk4e_3.4_dev/gameserver/src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp

// Line 48: range 0000000015924CEA-0000000015924FE3
std::string *__cdecl RogueCell::getDesc[abi:cxx11](std::string *retstr, const RogueCell *const this)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r13
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v5; // rcx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v6; // rcx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v7; // rcx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // rcx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // rax
  char v11[96]; // [rsp+10h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 7 ostr:49";
  *(_QWORD *)(v2 + 16) = RogueCell::getDesc[abi:cxx11];
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v2 + 32));
  v5 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
         (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v2 + 32),
         "[dungeon_id:");
  if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->dungeon_id);
  }
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v5, this->dungeon_id);
  v6 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
         (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v2 + 32),
         ", cell_id:");
  if ( *(_BYTE *)(((unsigned __int64)&this->cell_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cell_id >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->cell_id);
  }
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v6, this->cell_id);
  v7 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
         (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v2 + 32),
         ", type:");
  if ( *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->type);
  }
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v7, this->type);
  v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
         (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v2 + 32),
         ", state:");
  if ( *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->state);
  }
  v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, this->state);
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, "]");
  if ( *(char *)(((unsigned __int64)retstr >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)((((unsigned __int64)&retstr->_anon_0._M_allocated_capacity + 15) >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)retstr + 31) & 7) >= *(_BYTE *)((((unsigned __int64)&retstr->_anon_0._M_allocated_capacity + 15) >> 3)
                                                        + 0x7FFF8000) )
  {
    __asan_report_store_n(retstr, 32LL);
  }
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::str[abi:cxx11](
    retstr,
    (common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v2 + 32));
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::~StringStream((common::tools::StringStream<common::tools::FixedBuffer<4096> > *const)(v2 + 32));
  if ( v11 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return retstr;
};

// Line 58: range 0000000015924FE4-0000000015925348
int32_t __cdecl RogueCell::toBin(const RogueCell *const this, proto::RogueCellBin *cell_bin)
{
  std::tuple_element<1,const std::pair<const data::RogueMonsterPoolDifficultyType,unsigned int> >::type *v2; // rax
  std::tuple_element<1,const std::pair<const data::RogueMonsterPoolDifficultyType,unsigned int> >::type v3; // ebx
  google::protobuf::Map<unsigned int,unsigned int>::key_type *p_key; // rsi
  unsigned int *v5; // rax
  std::tuple_element<1,const std::pair<const data::RogueMonsterPoolDifficultyType,unsigned int> >::type *v6; // rdx
  char v7; // cl
  uint32_t *v8; // rax
  uint32_t *v9; // rdx
  google::protobuf::Map<unsigned int,unsigned int>::key_type key; // [rsp+18h] [rbp-58h] BYREF
  uint32_t point_id; // [rsp+1Ch] [rbp-54h]
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::const_iterator __for_begin; // [rsp+20h] [rbp-50h] BYREF
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::const_iterator __for_end; // [rsp+28h] [rbp-48h] BYREF
  google::protobuf::Map<unsigned int,unsigned int> *diff_map; // [rsp+30h] [rbp-40h]
  const std::map<data::RogueMonsterPoolDifficultyType,unsigned int> *__for_range; // [rsp+38h] [rbp-38h]
  const std::vector<int> *__for_range_0; // [rsp+40h] [rbp-30h]
  const std::pair<const data::RogueMonsterPoolDifficultyType,unsigned int> *v19; // [rsp+48h] [rbp-28h]
  std::tuple_element<0,const std::pair<const data::RogueMonsterPoolDifficultyType,unsigned int> >::type *diff; // [rsp+50h] [rbp-20h]
  std::tuple_element<1,const std::pair<const data::RogueMonsterPoolDifficultyType,unsigned int> >::type *pool_id; // [rsp+58h] [rbp-18h]

  if ( *(_BYTE *)(((unsigned __int64)&this->cell_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cell_id >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->cell_id);
  }
  proto::RogueCellBin::set_cell_id(cell_bin, this->cell_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->state);
  }
  proto::RogueCellBin::set_state(cell_bin, this->state);
  if ( *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->type);
  }
  proto::RogueCellBin::set_type(cell_bin, this->type);
  if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->dungeon_id);
  }
  proto::RogueCellBin::set_dungeon_id(cell_bin, this->dungeon_id);
  diff_map = proto::RogueCellBin::mutable_diff_monster_pool_map(cell_bin);
  __for_range = &this->diff_montser_pool_map;
  __for_begin._M_node = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::begin(&this->diff_montser_pool_map)._M_node;
  __for_end._M_node = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::end(&this->diff_montser_pool_map)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v19 = std::_Rb_tree_const_iterator<std::pair<data::RogueMonsterPoolDifficultyType const,unsigned int>>::operator*(&__for_begin);
    diff = std::get<0ul,data::RogueMonsterPoolDifficultyType const,unsigned int>(v19);
    v2 = (std::tuple_element<1,const std::pair<const data::RogueMonsterPoolDifficultyType,unsigned int> >::type *)std::get<1ul,data::RogueMonsterPoolDifficultyType const,unsigned int>(v19);
    pool_id = v2;
    if ( *(_BYTE *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v2 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v2 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v2);
    }
    v3 = *pool_id;
    if ( *(_BYTE *)(((unsigned __int64)diff >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)diff & 7) + 3) >= *(_BYTE *)(((unsigned __int64)diff >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(diff);
    }
    key = *diff;
    p_key = &key;
    v5 = google::protobuf::Map<unsigned int,unsigned int>::operator[](diff_map, &key);
    v6 = v5;
    v7 = *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000);
    if ( v7 != 0 && (char)(((unsigned __int8)v5 & 7) + 3) >= v7 )
    {
      LOBYTE(p_key) = v7 != 0;
      __asan_report_store4(v5, p_key, v5);
    }
    *v6 = v3;
    std::_Rb_tree_const_iterator<std::pair<data::RogueMonsterPoolDifficultyType const,unsigned int>>::operator++(&__for_begin);
  }
  __for_range_0 = &this->guard_gadget_group_point_vec;
  __for_begin._M_node = (std::_Rb_tree_const_iterator<std::pair<const data::RogueMonsterPoolDifficultyType,unsigned int> >::_Base_ptr)std::vector<int>::begin(&this->guard_gadget_group_point_vec)._M_current;
  __for_end._M_node = (std::_Rb_tree_const_iterator<std::pair<const data::RogueMonsterPoolDifficultyType,unsigned int> >::_Base_ptr)std::vector<int>::end(__for_range_0)._M_current;
  while ( __gnu_cxx::operator!=<int const*,std::vector<int>>(
            (const __gnu_cxx::__normal_iterator<int const*,std::vector<int> > *)&__for_begin,
            (const __gnu_cxx::__normal_iterator<int const*,std::vector<int> > *)&__for_end) )
  {
    v8 = (uint32_t *)__gnu_cxx::__normal_iterator<int const*,std::vector<int>>::operator*((const __gnu_cxx::__normal_iterator<int const*,std::vector<int> > *const)&__for_begin);
    v9 = v8;
    if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v8 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v8);
    }
    point_id = *v9;
    proto::RogueCellBin::add_guard_point_config_id_list(cell_bin, point_id);
    __gnu_cxx::__normal_iterator<int const*,std::vector<int>>::operator++((__gnu_cxx::__normal_iterator<int const*,std::vector<int> > *const)&__for_begin);
  }
  return 0;
};

// Line 76: range 000000001592534A-00000000159256D1
int32_t __cdecl RogueCell::fromBin(RogueCell *const this, const proto::RogueCellBin *cell_bin)
{
  __int64 v2; // rdx
  char v3; // al
  __int64 v4; // rsi
  google::protobuf::uint32 v5; // ecx
  char v6; // dl
  __int64 v7; // rdx
  uint32_t v8; // ecx
  char v9; // dl
  __int64 v10; // rdx
  unsigned __int64 v11; // rax
  unsigned int v12; // ebx
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int> *p_diff_montser_pool_map; // rcx
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::key_type *p_k; // rsi
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::mapped_type *v15; // rax
  unsigned int *v16; // rdx
  char v17; // cl
  const proto::RogueCellBin *cell_bina; // [rsp+0h] [rbp-90h]
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::key_type __k; // [rsp+10h] [rbp-80h] BYREF
  uint32_t point_id; // [rsp+14h] [rbp-7Ch]
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_begin_0; // [rsp+18h] [rbp-78h]
  const google::protobuf::Map<unsigned int,unsigned int> *__for_range; // [rsp+20h] [rbp-70h]
  const google::protobuf::RepeatedField<unsigned int> *__for_range_0; // [rsp+28h] [rbp-68h]
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_end_0; // [rsp+30h] [rbp-60h]
  const unsigned int *p_diff; // [rsp+38h] [rbp-58h]
  google::protobuf::Map<unsigned int,unsigned int>::const_iterator __for_begin; // [rsp+40h] [rbp-50h] BYREF
  google::protobuf::Map<unsigned int,unsigned int>::const_iterator __for_end; // [rsp+60h] [rbp-30h] BYREF

  cell_bina = cell_bin;
  v2 = proto::RogueCellBin::cell_id(cell_bin);
  v3 = *(_BYTE *)(((unsigned __int64)&this->cell_id >> 3) + 0x7FFF8000);
  if ( v3 != 0 && v3 <= 3 )
  {
    LOBYTE(cell_bin) = v3 != 0;
    __asan_report_store4(&this->cell_id, cell_bin, v2);
  }
  this->cell_id = v2;
  v4 = proto::RogueCellBin::state(cell_bina);
  if ( *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->state, v4, &this->state);
  }
  this->state = v4;
  v5 = proto::RogueCellBin::type(cell_bina);
  v6 = *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000);
  LOBYTE(v4) = v6 != 0;
  v7 = (v6 != 0) & (unsigned __int8)((char)((((_BYTE)this + 20) & 7) + 3) >= v6);
  if ( (_BYTE)v7 )
    __asan_report_store4(&this->type, v4, v7);
  this->type = v5;
  v8 = proto::RogueCellBin::dungeon_id(cell_bina);
  v9 = *(_BYTE *)(((unsigned __int64)&this->dungeon_id >> 3) + 0x7FFF8000);
  LOBYTE(v4) = v9 != 0;
  v10 = (v9 != 0) & (unsigned __int8)((char)((((_BYTE)this + 12) & 7) + 3) >= v9);
  if ( (_BYTE)v10 )
    __asan_report_store4(&this->dungeon_id, v4, v10);
  this->dungeon_id = v8;
  __for_range = proto::RogueCellBin::diff_monster_pool_map(cell_bina);
  google::protobuf::Map<unsigned int,unsigned int>::begin(&__for_begin, __for_range);
  google::protobuf::Map<unsigned int,unsigned int>::end(&__for_end, __for_range);
  while ( google::protobuf::operator!=(&__for_begin, &__for_end) )
  {
    p_diff = (const unsigned int *)google::protobuf::Map<unsigned int,unsigned int>::const_iterator::operator*(&__for_begin);
    v11 = (unsigned __int64)(p_diff + 1);
    if ( *(_BYTE *)((v11 >> 3) + 0x7FFF8000) != 0 && (char)((v11 & 7) + 3) >= *(_BYTE *)((v11 >> 3) + 0x7FFF8000) )
      __asan_report_load4(v11);
    v12 = p_diff[1];
    p_diff_montser_pool_map = &this->diff_montser_pool_map;
    if ( *(_BYTE *)(((unsigned __int64)p_diff >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)p_diff & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_diff >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(p_diff);
    }
    __k = *p_diff;
    p_k = &__k;
    v15 = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::operator[](p_diff_montser_pool_map, &__k);
    v16 = v15;
    v17 = *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000);
    if ( v17 != 0 && (char)(((unsigned __int8)v15 & 7) + 3) >= v17 )
    {
      LOBYTE(p_k) = v17 != 0;
      __asan_report_store4(v15, p_k, v15);
    }
    *v16 = v12;
    google::protobuf::Map<unsigned int,unsigned int>::const_iterator::operator++(&__for_begin);
  }
  std::vector<int>::clear(&this->guard_gadget_group_point_vec);
  __for_range_0 = proto::RogueCellBin::guard_point_config_id_list(cell_bina);
  __for_begin_0 = google::protobuf::RepeatedField<unsigned int>::begin(__for_range_0);
  __for_end_0 = google::protobuf::RepeatedField<unsigned int>::end(__for_range_0);
  while ( __for_begin_0 != __for_end_0 )
  {
    if ( *(_BYTE *)(((unsigned __int64)__for_begin_0 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)__for_begin_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__for_begin_0 >> 3)
                                                                      + 0x7FFF8000) )
    {
      __asan_report_load4(__for_begin_0);
    }
    point_id = *__for_begin_0;
    __k = point_id;
    std::vector<int>::push_back(&this->guard_gadget_group_point_vec, (std::vector<int>::value_type *)&__k);
    ++__for_begin_0;
  }
  return 0;
};

// Line 94: range 00000000159256D2-0000000015925A11
void __cdecl RogueCell::clearDoorEntity(RogueCell *const this)
{
  unsigned __int64 v1; // r12
  __int64 v2; // rax
  _DWORD *v3; // r13
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v4; // rax
  unsigned __int64 v5; // rax
  unsigned __int64 v6; // rdx
  common::milog::MiLogStream *v7; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  unsigned int val; // [rsp+14h] [rbp-BCh] BYREF
  std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,std::weak_ptr<Gadget> > >::_Self __y; // [rsp+18h] [rbp-B8h] BYREF
  common::milog::MiLogStream v11; // [rsp+20h] [rbp-B0h] BYREF
  char v12[144]; // [rsp+40h] [rbp-90h] BYREF

  v1 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_1(96LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "2 32 8 7 iter:95 64 16 13 gadget_ptr:97";
  *(_QWORD *)(v1 + 16) = RogueCell::clearDoorEntity;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -218959360;
  v3[536862722] = -202178560;
  *(std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::iterator *)(v1 + 32) = std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::begin(&this->door_entity_map);
  while ( 1 )
  {
    __y._M_node = std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::end(&this->door_entity_map)._M_node;
    if ( !std::operator!=(
            (const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,std::weak_ptr<Gadget> > >::_Self *)(v1 + 32),
            &__y) )
      break;
    std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,std::weak_ptr<Gadget>>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,std::weak_ptr<Gadget> > > *const)(v1 + 32));
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v1 + 64));
    if ( std::operator!=<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v1 + 64)) )
    {
      v4 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 64));
      if ( Entity::isOnScene((const Entity *const)v4) )
      {
        v5 = (unsigned __int64)std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 64));
        if ( *(_BYTE *)((v5 >> 3) + 0x7FFF8000) )
          v5 = __asan_report_load8(v5);
        v6 = *(_QWORD *)v5 + 128LL;
        if ( *(_BYTE *)((v6 >> 3) + 0x7FFF8000) )
          v5 = __asan_report_load8(*(_QWORD *)v5 + 128LL);
        (*(void (__fastcall **)(unsigned __int64, VisionContext *))v6)(v5, &VisionContext::miss_context);
      }
      else
      {
        common::milog::MiLogStream::create(
          &v11,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "clearDoorEntity",
          107);
        v7 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
               &v11,
               (const char (*)[45])"[ROGUE] gadget_ptr not on scene. gadget id: ");
        v8 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 64));
        val = Gadget::getGadgetId(v8);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &val);
        common::milog::MiLogStream::~MiLogStream(&v11);
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v11,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "clearDoorEntity",
        112);
      common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
        &v11,
        (const char (*)[30])"[ROGUE] gadget_ptr is nullptr");
      common::milog::MiLogStream::~MiLogStream(&v11);
    }
    *(std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::iterator *)(v1 + 32) = std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::erase[abi:cxx11](
                                                                                         &this->door_entity_map,
                                                                                         *(std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::iterator *)(v1 + 32));
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v1 + 64));
  }
  if ( v12 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 119: range 0000000015925A12-0000000015925E07
void __cdecl RogueCell::clearGadgetEntity(RogueCell *const this)
{
  unsigned __int64 v1; // r12
  __int64 v2; // rax
  unsigned __int64 v3; // r13
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v4; // rax
  unsigned __int64 v5; // rax
  unsigned __int64 v6; // rdx
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  unsigned __int64 v8; // rax
  unsigned __int64 v9; // rdx
  std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::iterator __for_begin; // [rsp+10h] [rbp-B0h] BYREF
  std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::iterator __for_end; // [rsp+18h] [rbp-A8h] BYREF
  std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>> *__for_range; // [rsp+20h] [rbp-A0h]
  std::vector<std::weak_ptr<Gadget>> *__for_range_0; // [rsp+28h] [rbp-98h]
  std::weak_ptr<Gadget> *gadget_wtr_0; // [rsp+30h] [rbp-90h]
  std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > *__in; // [rsp+38h] [rbp-88h]
  std::tuple_element<0,std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::type *_; // [rsp+40h] [rbp-80h]
  std::tuple_element<1,std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::type *gadget_wtr; // [rsp+48h] [rbp-78h]
  char v18[112]; // [rsp+50h] [rbp-70h] BYREF

  v1 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 16 14 gadget_ptr:136";
  *(_QWORD *)(v1 + 16) = RogueCell::clearGadgetEntity;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202178560;
  __for_range = &this->operator_gadget_map;
  __for_begin._M_node = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::begin(&this->operator_gadget_map)._M_node;
  __for_end._M_node = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::end(&this->operator_gadget_map)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    __in = std::_Rb_tree_iterator<std::pair<data::RogueCreateGadgetType const,std::weak_ptr<Gadget>>>::operator*(&__for_begin);
    _ = std::get<0ul,data::RogueCreateGadgetType const,std::weak_ptr<Gadget>>(__in);
    gadget_wtr = std::get<1ul,data::RogueCreateGadgetType const,std::weak_ptr<Gadget>>(__in);
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v1 + 32));
    if ( !std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v1 + 32)) )
    {
      v4 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
      if ( Entity::isOnScene((const Entity *const)v4) )
      {
        v5 = (unsigned __int64)std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
        if ( *(_BYTE *)((v5 >> 3) + 0x7FFF8000) )
          v5 = __asan_report_load8(v5);
        v6 = *(_QWORD *)v5 + 128LL;
        if ( *(_BYTE *)((v6 >> 3) + 0x7FFF8000) )
          v5 = __asan_report_load8(*(_QWORD *)v5 + 128LL);
        (*(void (__fastcall **)(unsigned __int64, VisionContext *))v6)(v5, &VisionContext::miss_context);
      }
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v1 + 32));
    std::_Rb_tree_iterator<std::pair<data::RogueCreateGadgetType const,std::weak_ptr<Gadget>>>::operator++(&__for_begin);
  }
  std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::clear(&this->operator_gadget_map);
  __for_range_0 = &this->guard_gadget_wtr_vec;
  __for_begin._M_node = (std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::_Base_ptr)std::vector<std::weak_ptr<Gadget>>::begin(&this->guard_gadget_wtr_vec)._M_current;
  __for_end._M_node = (std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::_Base_ptr)std::vector<std::weak_ptr<Gadget>>::end(__for_range_0)._M_current;
  while ( __gnu_cxx::operator!=<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>(
            (const __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget>*,std::vector<std::weak_ptr<Gadget>> > *)&__for_begin,
            (const __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget>*,std::vector<std::weak_ptr<Gadget>> > *)&__for_end) )
  {
    gadget_wtr_0 = __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>::operator*((const __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget>*,std::vector<std::weak_ptr<Gadget>> > *const)&__for_begin);
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v1 + 32));
    if ( !std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v1 + 32)) )
    {
      v7 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
      if ( Entity::isOnScene((const Entity *const)v7) )
      {
        v8 = (unsigned __int64)std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
        if ( *(_BYTE *)((v8 >> 3) + 0x7FFF8000) )
          v8 = __asan_report_load8(v8);
        v9 = *(_QWORD *)v8 + 128LL;
        if ( *(_BYTE *)((v9 >> 3) + 0x7FFF8000) )
          v8 = __asan_report_load8(*(_QWORD *)v8 + 128LL);
        (*(void (__fastcall **)(unsigned __int64, VisionContext *))v9)(v8, &VisionContext::miss_context);
      }
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v1 + 32));
    __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>::operator++((__gnu_cxx::__normal_iterator<std::weak_ptr<Gadget>*,std::vector<std::weak_ptr<Gadget>> > *const)&__for_begin);
  }
  std::vector<std::weak_ptr<Gadget>>::clear(&this->guard_gadget_wtr_vec);
  if ( v18 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 151: range 0000000015925E08-0000000015926053
void __cdecl RogueCell::clearGuardEntity(RogueCell *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r13
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v4; // rax
  unsigned __int64 v5; // rax
  unsigned __int64 v6; // rdx
  std::vector<std::weak_ptr<Gadget>>::iterator __for_begin; // [rsp+10h] [rbp-90h] BYREF
  std::vector<std::weak_ptr<Gadget>>::iterator __for_end; // [rsp+18h] [rbp-88h] BYREF
  std::vector<std::weak_ptr<Gadget>> *__for_range; // [rsp+20h] [rbp-80h]
  std::weak_ptr<Gadget> *gadget_wtr; // [rsp+28h] [rbp-78h]
  char v11[112]; // [rsp+30h] [rbp-70h] BYREF

  v1 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 16 14 gadget_ptr:154";
  *(_QWORD *)(v1 + 16) = RogueCell::clearGuardEntity;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202178560;
  __for_range = &this->guard_gadget_wtr_vec;
  __for_begin._M_current = std::vector<std::weak_ptr<Gadget>>::begin(&this->guard_gadget_wtr_vec)._M_current;
  __for_end._M_current = std::vector<std::weak_ptr<Gadget>>::end(&this->guard_gadget_wtr_vec)._M_current;
  while ( __gnu_cxx::operator!=<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>(&__for_begin, &__for_end) )
  {
    gadget_wtr = __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>::operator*(&__for_begin);
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v1 + 32));
    if ( !std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v1 + 32)) )
    {
      v4 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
      if ( Entity::isOnScene((const Entity *const)v4) )
      {
        v5 = (unsigned __int64)std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
        if ( *(_BYTE *)((v5 >> 3) + 0x7FFF8000) )
          v5 = __asan_report_load8(v5);
        v6 = *(_QWORD *)v5 + 128LL;
        if ( *(_BYTE *)((v6 >> 3) + 0x7FFF8000) )
          v5 = __asan_report_load8(*(_QWORD *)v5 + 128LL);
        (*(void (__fastcall **)(unsigned __int64, VisionContext *))v6)(v5, &VisionContext::miss_context);
      }
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v1 + 32));
    __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>::operator++(&__for_begin);
  }
  std::vector<std::weak_ptr<Gadget>>::clear(&this->guard_gadget_wtr_vec);
  std::unordered_map<unsigned int,int>::clear(&this->guard_entity_id_2_point_id_map);
  if ( v11 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 170: range 0000000015926054-00000000159262CC
__int64 __fastcall RogueCell::setOperatorState(
        RogueCell *const this,
        data::RogueCreateGadgetType gadget_type,
        data::RogueGadgetStateType state_type)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  unsigned int v6; // r14d
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  Gadget *v8; // rax
  __int64 result; // rax
  uint32_t gadget_state; // [rsp+14h] [rbp-CCh]
  std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::_Self __y; // [rsp+18h] [rbp-C8h] BYREF
  std::shared_ptr<Config> v13; // [rsp+20h] [rbp-C0h] BYREF
  char v14[176]; // [rsp+30h] [rbp-B0h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 4 15 gadget_type:169 64 8 11 op_iter:171 96 16 14 gadget_ptr:176";
  *(_QWORD *)(v3 + 16) = RogueCell::setOperatorState;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -218959360;
  v5[536862723] = -202178560;
  *(_DWORD *)(v3 + 48) = gadget_type;
  *(std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::iterator *)(v3 + 64) = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::find(
                                                                                          &this->operator_gadget_map,
                                                                                          (const std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::key_type *)(v3 + 48));
  __y._M_node = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::end(&this->operator_gadget_map)._M_node;
  if ( std::operator==(
         (const std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::_Self *)(v3 + 64),
         &__y) )
  {
    v6 = -1;
  }
  else
  {
    std::_Rb_tree_iterator<std::pair<data::RogueCreateGadgetType const,std::weak_ptr<Gadget>>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > > *const)(v3 + 64));
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v3 + 96));
    if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v3 + 96)) )
    {
      v6 = -1;
    }
    else
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v13);
      v7 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v13);
      gadget_state = ActivityRogueExcelConfigMgr::findGadgetStateByStateType(
                       &v7->design_config.txt_config_mgr.activity_rogue_config_mgr,
                       *(data::RogueCreateGadgetType *)(v3 + 48),
                       state_type);
      std::shared_ptr<Config>::~shared_ptr(&v13);
      v8 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
      Gadget::setState(v8, gadget_state, 0, 1);
      v6 = 0;
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v3 + 96));
  }
  result = v6;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 187: range 00000000159262CE-0000000015926507
void __cdecl RogueCell::toClient(const RogueCell *const this, proto::RogueCellInfo *cell_info)
{
  const ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  uint32_t cell_id; // ecx
  google::protobuf::uint32 CellConfigIdByDungeonIdAndCellId; // edx
  std::shared_ptr<Config> v6[2]; // [rsp+10h] [rbp-20h] BYREF

  if ( *(_BYTE *)(((unsigned __int64)&this->cell_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cell_id >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->cell_id);
  }
  proto::RogueCellInfo::set_cell_id(cell_info, this->cell_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->dungeon_id);
  }
  proto::RogueCellInfo::set_dungeon_id(cell_info, this->dungeon_id);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)v6);
  p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)v6)->design_config.txt_config_mgr.activity_rogue_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&this->cell_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cell_id >> 3) + 0x7FFF8000) <= 3 )
  {
    p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&this->cell_id;
    __asan_report_load4(&this->cell_id);
  }
  cell_id = this->cell_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id >> 3) + 0x7FFF8000) )
  {
    p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&this->dungeon_id;
    __asan_report_load4(&this->dungeon_id);
  }
  CellConfigIdByDungeonIdAndCellId = ActivityRogueExcelConfigMgr::findCellConfigIdByDungeonIdAndCellId(
                                       p_activity_rogue_config_mgr,
                                       this->dungeon_id,
                                       cell_id);
  proto::RogueCellInfo::set_cell_config_id(cell_info, CellConfigIdByDungeonIdAndCellId);
  std::shared_ptr<Config>::~shared_ptr(v6);
  if ( *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->state);
  }
  proto::RogueCellInfo::set_state(cell_info, this->state);
  if ( *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->type);
  }
  proto::RogueCellInfo::set_cell_type(cell_info, this->type);
};

// Line 196: range 0000000015926508-000000001592676B
int32_t __cdecl RogueCell::closeAllDoors(RogueCell *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r13
  Gadget *v4; // r14
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  uint32_t GadgetStateByStateType; // eax
  int32_t result; // eax
  std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::iterator __for_begin; // [rsp+10h] [rbp-B0h] BYREF
  std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::iterator __for_end; // [rsp+18h] [rbp-A8h] BYREF
  std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>> *__for_range; // [rsp+20h] [rbp-A0h]
  std::pair<const data::RogueGadgetDirType,std::weak_ptr<Gadget> > *__in; // [rsp+28h] [rbp-98h]
  std::tuple_element<0,std::pair<const data::RogueGadgetDirType,std::weak_ptr<Gadget> > >::type *_; // [rsp+30h] [rbp-90h]
  std::tuple_element<1,std::pair<const data::RogueGadgetDirType,std::weak_ptr<Gadget> > >::type *gadget_wtr; // [rsp+38h] [rbp-88h]
  std::shared_ptr<Config> v14; // [rsp+40h] [rbp-80h] BYREF
  char v15[112]; // [rsp+50h] [rbp-70h] BYREF

  v1 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 16 14 gadget_ptr:199";
  *(_QWORD *)(v1 + 16) = RogueCell::closeAllDoors;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202178560;
  __for_range = &this->door_entity_map;
  __for_begin._M_node = std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::begin(&this->door_entity_map)._M_node;
  __for_end._M_node = std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::end(&this->door_entity_map)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    __in = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,std::weak_ptr<Gadget>>>::operator*(&__for_begin);
    _ = std::get<0ul,data::RogueGadgetDirType const,std::weak_ptr<Gadget>>(__in);
    gadget_wtr = std::get<1ul,data::RogueGadgetDirType const,std::weak_ptr<Gadget>>(__in);
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v1 + 32));
    if ( !std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v1 + 32)) )
    {
      v4 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v14);
      v5 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v14);
      GadgetStateByStateType = ActivityRogueExcelConfigMgr::findGadgetStateByStateType(
                                 &v5->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                 ROGUE_GADGET_TYPE_DOOR,
                                 ROGUE_GADGET_STATE_DOOR_CLOSE);
      Gadget::setState(v4, GadgetStateByStateType, 0, 1);
      std::shared_ptr<Config>::~shared_ptr(&v14);
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v1 + 32));
    std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,std::weak_ptr<Gadget>>>::operator++(&__for_begin);
  }
  result = 0;
  if ( v15 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 210: range 000000001592676C-00000000159269D0
__int64 __fastcall RogueCell::openDoor(RogueCell *const this, data::RogueGadgetDirType dir)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  unsigned int v5; // r14d
  Gadget *v6; // r14
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  uint32_t GadgetStateByStateType; // eax
  __int64 result; // rax
  std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,std::weak_ptr<Gadget> > >::_Self __y; // [rsp+18h] [rbp-C8h] BYREF
  std::shared_ptr<Config> v11; // [rsp+20h] [rbp-C0h] BYREF
  char v12[176]; // [rsp+30h] [rbp-B0h] BYREF

  v2 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 7 dir:209 64 8 12 dir_iter:211 96 16 14 gadget_ptr:216";
  *(_QWORD *)(v2 + 16) = RogueCell::openDoor;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862723] = -202178560;
  *(_DWORD *)(v2 + 48) = dir;
  *(std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::iterator *)(v2 + 64) = std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::find(
                                                                                       &this->door_entity_map,
                                                                                       (const std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::key_type *)(v2 + 48));
  __y._M_node = std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::end(&this->door_entity_map)._M_node;
  if ( std::operator==(
         (const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,std::weak_ptr<Gadget> > >::_Self *)(v2 + 64),
         &__y) )
  {
    v5 = -1;
  }
  else
  {
    std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,std::weak_ptr<Gadget>>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,std::weak_ptr<Gadget> > > *const)(v2 + 64));
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v2 + 96));
    if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v2 + 96)) )
    {
      v5 = -1;
    }
    else
    {
      v6 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96));
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v11);
      v7 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v11);
      GadgetStateByStateType = ActivityRogueExcelConfigMgr::findGadgetStateByStateType(
                                 &v7->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                 ROGUE_GADGET_TYPE_DOOR,
                                 ROGUE_GADGET_STATE_DOOR_OPEN);
      Gadget::setState(v6, GadgetStateByStateType, 0, 1);
      std::shared_ptr<Config>::~shared_ptr(&v11);
      v5 = 0;
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v2 + 96));
  }
  result = v5;
  if ( v12 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 226: range 00000000159269D2-0000000015926B48
bool __cdecl RogueCell::isCellPassed(RogueCell *const this)
{
  data::RogueCellType type; // eax

  if ( *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->type);
  }
  type = this->type;
  if ( type != ROGUE_CELL_TYPE_CHEST )
  {
    if ( type <= ROGUE_CELL_TYPE_CHEST )
    {
      if ( type <= ROGUE_CELL_TYPE_NORMAL )
      {
        if ( type < ROGUE_CELL_TYPE_ELITE )
          goto LABEL_19;
        goto LABEL_9;
      }
      if ( type == ROGUE_CELL_TYPE_BOSS )
      {
LABEL_9:
        if ( *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&this->state);
        }
        return this->state == ROGUE_CELL_FINISH;
      }
    }
LABEL_19:
    if ( *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->state);
    }
    return this->state == ROGUE_CELL_SUCCESS || this->state == ROGUE_CELL_FINISH;
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->state);
  }
  return this->state == ROGUE_CELL_TAKEN_CHEST || this->state == ROGUE_CELL_FINISH || this->state == ROGUE_CELL_SUCCESS;
};

// Line 242: range 0000000015926B4A-0000000015926BA0
int32_t __cdecl RogueTeam::toBin(const RogueTeam *const this, proto::RogueTeamBin *team_bin)
{
  google::protobuf::RepeatedField<long unsigned int> *v2; // rdx
  google::protobuf::RepeatedField<long unsigned int> *v3; // rax

  v2 = proto::RogueTeamBin::mutable_onstage_avatar_guid_list(team_bin);
  common::tools::MiscUtils::vectorToRepeated<unsigned long,unsigned long>(&this->onstage_mirror_avatar_guid_vec, v2);
  v3 = proto::RogueTeamBin::mutable_backstage_avatar_guid_list(team_bin);
  common::tools::MiscUtils::vectorToRepeated<unsigned long,unsigned long>(&this->backstage_mirror_avatar_guid_vec, v3);
  return 0;
};

// Line 249: range 0000000015926BA2-0000000015926BF8
int32_t __cdecl RogueTeam::fromBin(RogueTeam *const this, const proto::RogueTeamBin *team_bin)
{
  const google::protobuf::RepeatedField<long unsigned int> *v2; // rax
  const google::protobuf::RepeatedField<long unsigned int> *v3; // rax

  v2 = proto::RogueTeamBin::onstage_avatar_guid_list(team_bin);
  common::tools::MiscUtils::repeatedToVector<unsigned long,unsigned long>(v2, &this->onstage_mirror_avatar_guid_vec);
  v3 = proto::RogueTeamBin::backstage_avatar_guid_list(team_bin);
  common::tools::MiscUtils::repeatedToVector<unsigned long,unsigned long>(v3, &this->backstage_mirror_avatar_guid_vec);
  return 0;
};

// Line 256: range 0000000015926BFA-0000000015926D94
int32_t __cdecl RogueTeam::recallAllAvatars(RogueTeam *const this, Player *player)
{
  PlayerAvatarComp *AvatarComp; // rdx
  PlayerAvatarComp *v4; // rax
  common::milog::MiLogStream v7; // [rsp+10h] [rbp-30h] BYREF

  if ( !std::vector<unsigned long>::empty(&this->onstage_mirror_avatar_guid_vec) )
  {
    AvatarComp = Player::getAvatarComp(player);
    if ( PlayerAvatarComp::delInformalAvatarBatchAndReplaceByAvatarTeam(
           AvatarComp,
           &this->onstage_mirror_avatar_guid_vec) )
    {
      common::milog::MiLogStream::create(
        &v7,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "recallAllAvatars",
        259);
      common::milog::MiLogStream::operator<<<char [60],(char *[60])0>(
        &v7,
        (const char (*)[60])"[ROGUE] delInformalAvatarBatchAndReplaceByAvatarTeam failed");
      common::milog::MiLogStream::~MiLogStream(&v7);
    }
  }
  if ( !std::vector<unsigned long>::empty(&this->backstage_mirror_avatar_guid_vec) )
  {
    v4 = Player::getAvatarComp(player);
    if ( PlayerAvatarComp::delInformalAvatarBatchAndReplaceByAvatarTeam(v4, &this->backstage_mirror_avatar_guid_vec) )
    {
      common::milog::MiLogStream::create(
        &v7,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "recallAllAvatars",
        263);
      common::milog::MiLogStream::operator<<<char [60],(char *[60])0>(
        &v7,
        (const char (*)[60])"[ROGUE] delInformalAvatarBatchAndReplaceByAvatarTeam failed");
      common::milog::MiLogStream::~MiLogStream(&v7);
    }
  }
  std::vector<unsigned long>::clear(&this->onstage_mirror_avatar_guid_vec);
  std::vector<unsigned long>::clear(&this->backstage_mirror_avatar_guid_vec);
  return 0;
};

// Line 271: range 0000000015926D96-0000000015926F74
bool __cdecl RogueTeam::isAllOnstageAvatarsDead(RogueTeam *const this, Player *player)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  uint64_t *v5; // rax
  PlayerAvatarComp *AvatarComp; // rax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  bool result; // al
  char is_all_dead; // [rsp+1Fh] [rbp-81h]
  std::vector<long unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-80h] BYREF
  std::vector<long unsigned int>::iterator __for_end; // [rsp+28h] [rbp-78h] BYREF
  std::vector<long unsigned int> *__for_range; // [rsp+30h] [rbp-70h]
  uint64_t guid; // [rsp+38h] [rbp-68h]
  char v14[96]; // [rsp+40h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 14 avatar_ptr:275";
  *(_QWORD *)(v2 + 16) = RogueTeam::isAllOnstageAvatarsDead;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  is_all_dead = 1;
  __for_range = &this->onstage_mirror_avatar_guid_vec;
  __for_begin._M_current = std::vector<unsigned long>::begin(&this->onstage_mirror_avatar_guid_vec)._M_current;
  __for_end._M_current = std::vector<unsigned long>::end(&this->onstage_mirror_avatar_guid_vec)._M_current;
  while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__for_begin, &__for_end) )
  {
    v5 = __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
    if ( *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) )
      v5 = (uint64_t *)__asan_report_load8(v5);
    guid = *v5;
    AvatarComp = Player::getAvatarComp(player);
    PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v2 + 32), (uint64_t)AvatarComp);
    if ( std::operator!=<Avatar>(0LL, (const std::shared_ptr<Avatar> *)(v2 + 32)) )
    {
      v7 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
      is_all_dead = ((unsigned __int8)is_all_dead & (Creature::getLifeState(v7) == LIFE_DEAD)) != 0;
    }
    std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v2 + 32));
    __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
  }
  result = is_all_dead;
  if ( v14 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 285: range 0000000015926F76-0000000015927C6F
int32_t __cdecl RogueLikeDungeonRuntimeMgr::toBin(
        const RogueLikeDungeonRuntimeMgr *const this,
        proto::RogueDungeonBin *dungeon_bin)
{
  proto::VectorBin *player_pos; // rax
  proto::VectorBin *player_rot; // rax
  proto::RogueTeamBin *v4; // rax
  unsigned int *v5; // rax
  google::protobuf::uint32 *v6; // rdx
  std::map<unsigned int,RogueCell>::const_iterator __for_begin; // [rsp+20h] [rbp-140h] BYREF
  std::map<unsigned int,RogueCell>::const_iterator __for_end; // [rsp+28h] [rbp-138h] BYREF
  google::protobuf::Map<unsigned int,proto::RogueCellBin> *bin_map; // [rsp+30h] [rbp-130h]
  const std::map<unsigned int,RogueCell> *__for_range; // [rsp+38h] [rbp-128h]
  const std::set<std::pair<unsigned int,unsigned int>> *__for_range_0; // [rsp+40h] [rbp-120h]
  const std::unordered_set<unsigned int> *__for_range_1; // [rsp+48h] [rbp-118h]
  const std::map<std::pair<unsigned int,unsigned int>,unsigned int> *__for_range_2; // [rsp+50h] [rbp-110h]
  const std::map<std::pair<unsigned int,unsigned int>,unsigned int> *__for_range_3; // [rsp+58h] [rbp-108h]
  const std::map<std::pair<unsigned int,unsigned int>,unsigned int> *__for_range_4; // [rsp+60h] [rbp-100h]
  const std::map<std::pair<unsigned int,unsigned int>,unsigned int> *__for_range_5; // [rsp+68h] [rbp-F8h]
  const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> *v18; // [rsp+70h] [rbp-F0h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *group_pair_2; // [rsp+78h] [rbp-E8h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *gadget_id_2; // [rsp+80h] [rbp-E0h]
  proto::RogueGadgetPointBin *gadget_point_2; // [rsp+88h] [rbp-D8h]
  proto::Uint32PairBin *group_pair_bin_2; // [rsp+90h] [rbp-D0h]
  const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> *v23; // [rsp+98h] [rbp-C8h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *group_pair_1; // [rsp+A0h] [rbp-C0h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *gadget_id_1; // [rsp+A8h] [rbp-B8h]
  proto::RogueGadgetPointBin *gadget_point_1; // [rsp+B0h] [rbp-B0h]
  proto::Uint32PairBin *group_pair_bin_1; // [rsp+B8h] [rbp-A8h]
  const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> *v28; // [rsp+C0h] [rbp-A0h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *group_pair_0; // [rsp+C8h] [rbp-98h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *gadget_id_0; // [rsp+D0h] [rbp-90h]
  proto::RogueGadgetPointBin *gadget_point_0; // [rsp+D8h] [rbp-88h]
  proto::Uint32PairBin *group_pair_bin_0; // [rsp+E0h] [rbp-80h]
  const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> *v33; // [rsp+E8h] [rbp-78h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *group_pair; // [rsp+F0h] [rbp-70h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *gadget_id; // [rsp+F8h] [rbp-68h]
  proto::RogueGadgetPointBin *gadget_point; // [rsp+100h] [rbp-60h]
  proto::Uint32PairBin *group_pair_bin; // [rsp+108h] [rbp-58h]
  const std::pair<unsigned int,unsigned int> *v38; // [rsp+110h] [rbp-50h]
  std::tuple_element<0,const std::pair<unsigned int,unsigned int> >::type *group_id; // [rsp+118h] [rbp-48h]
  std::tuple_element<1,const std::pair<unsigned int,unsigned int> >::type *config_id; // [rsp+120h] [rbp-40h]
  proto::Uint32PairBin *bin_pair; // [rsp+128h] [rbp-38h]
  const std::pair<unsigned int const,RogueCell> *v42; // [rsp+130h] [rbp-30h]
  std::tuple_element<0,const std::pair<unsigned int const,RogueCell> >::type *cell_id; // [rsp+138h] [rbp-28h]
  std::tuple_element<1,const std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+140h] [rbp-20h]
  proto::RogueCellBin *bin_cell; // [rsp+148h] [rbp-18h]

  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  proto::RogueDungeonBin::set_is_valid(dungeon_bin, this->is_valid_);
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->stage_id_);
  }
  proto::RogueDungeonBin::set_stage_id(dungeon_bin, this->stage_id_);
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->cur_level_);
  }
  proto::RogueDungeonBin::set_cur_level_index(dungeon_bin, this->cur_level_);
  player_pos = proto::RogueDungeonBin::mutable_last_player_pos(dungeon_bin);
  Vector3::toBin(&this->last_player_pos_, player_pos);
  player_rot = proto::RogueDungeonBin::mutable_last_player_rot(dungeon_bin);
  Vector3::toBin(&this->last_player_pos_, player_rot);
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->cur_cell_id_);
  }
  proto::RogueDungeonBin::set_cur_cell_id(dungeon_bin, this->cur_cell_id_);
  v4 = proto::RogueDungeonBin::mutable_team_bin(dungeon_bin);
  RogueTeam::toBin(&this->rogue_team_, v4);
  if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->dungeon_weight_config_id_);
  }
  proto::RogueDungeonBin::set_dungeon_weight_config_id(dungeon_bin, this->dungeon_weight_config_id_);
  if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->dungeon_id_);
  }
  proto::RogueDungeonBin::set_dungeon_id(dungeon_bin, this->dungeon_id_);
  bin_map = proto::RogueDungeonBin::mutable_rogue_cell_bin_map(dungeon_bin);
  __for_range = &this->rogue_cell_map_;
  __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v42 = std::_Rb_tree_const_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
    cell_id = std::get<0ul,unsigned int const,RogueCell>(v42);
    cell = (std::tuple_element<1,const std::pair<unsigned int const,RogueCell> >::type *)std::get<1ul,unsigned int const,RogueCell>(v42);
    bin_cell = google::protobuf::Map<unsigned int,proto::RogueCellBin>::operator[](bin_map, cell_id);
    RogueCell::toBin(cell, bin_cell);
    std::_Rb_tree_const_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
  }
  __for_range_0 = &this->blast_bucket_set_;
  __for_begin._M_node = std::set<std::pair<unsigned int,unsigned int>>::begin(&this->blast_bucket_set_)._M_node;
  __for_end._M_node = std::set<std::pair<unsigned int,unsigned int>>::end(__for_range_0)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> >::_Self *)&__for_begin,
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> >::_Self *)&__for_end) )
  {
    v38 = std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> > *const)&__for_begin);
    group_id = (std::tuple_element<0,const std::pair<unsigned int,unsigned int> >::type *)std::get<0ul,unsigned int,unsigned int>(v38);
    config_id = (std::tuple_element<1,const std::pair<unsigned int,unsigned int> >::type *)std::get<1ul,unsigned int,unsigned int>(v38);
    bin_pair = proto::RogueDungeonBin::add_blast_bucket_list(dungeon_bin);
    if ( *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)group_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(group_id);
    }
    proto::Uint32PairBin::set_key(bin_pair, *group_id);
    if ( *(_BYTE *)(((unsigned __int64)config_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)config_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)config_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(config_id);
    }
    proto::Uint32PairBin::set_value(bin_pair, *config_id);
    std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> > *const)&__for_begin);
  }
  __for_range_1 = &this->explored_cell_set_;
  __for_begin._M_node = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,RogueCell> >::_Base_ptr)std::unordered_set<unsigned int>::begin(&this->explored_cell_set_)._M_cur;
  __for_end._M_node = (std::_Rb_tree_const_iterator<std::pair<unsigned int const,RogueCell> >::_Base_ptr)std::unordered_set<unsigned int>::end(__for_range_1)._M_cur;
  while ( std::__detail::operator!=<unsigned int,false>(
            (const std::__detail::_Node_iterator_base<unsigned int,false> *)&__for_begin,
            (const std::__detail::_Node_iterator_base<unsigned int,false> *)&__for_end) )
  {
    v5 = (unsigned int *)std::__detail::_Node_const_iterator<unsigned int,true,false>::operator*((const std::__detail::_Node_const_iterator<unsigned int,true,false> *const)&__for_begin);
    v6 = v5;
    if ( *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v5 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v5);
    }
    proto::RogueDungeonBin::add_explored_cell_list(dungeon_bin, *v6);
    std::__detail::_Node_const_iterator<unsigned int,true,false>::operator++((std::__detail::_Node_const_iterator<unsigned int,true,false> *const)&__for_begin);
  }
  __for_range_2 = &this->brakeage_group_pair_gadget_id_map_;
  __for_begin._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::begin(&this->brakeage_group_pair_gadget_id_map_)._M_node;
  __for_end._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::end(__for_range_2)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Self *)&__for_begin,
            (const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Self *)&__for_end) )
  {
    v33 = std::_Rb_tree_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator*((const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> > *const)&__for_begin);
    group_pair = std::get<0ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v33);
    gadget_id = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v33);
    gadget_point = proto::RogueDungeonBin::add_brakeage_group_gadget_bin_list(dungeon_bin);
    group_pair_bin = proto::RogueGadgetPointBin::mutable_group_point_pair(gadget_point);
    if ( *(_BYTE *)(((unsigned __int64)group_pair >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)group_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_pair >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(group_pair);
    }
    proto::Uint32PairBin::set_key(group_pair_bin, group_pair->first);
    if ( *(_BYTE *)(((unsigned __int64)&group_pair->second >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)group_pair + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_pair->second >> 3)
                                                               + 0x7FFF8000) )
    {
      __asan_report_load4(&group_pair->second);
    }
    proto::Uint32PairBin::set_value(group_pair_bin, group_pair->second);
    if ( *(_BYTE *)(((unsigned __int64)gadget_id >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)gadget_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)gadget_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(gadget_id);
    }
    proto::RogueGadgetPointBin::set_gadget_id(gadget_point, *gadget_id);
    std::_Rb_tree_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator++((std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> > *const)&__for_begin);
  }
  __for_range_3 = &this->trap_group_pair_gadget_id_map_;
  __for_begin._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::begin(&this->trap_group_pair_gadget_id_map_)._M_node;
  __for_end._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::end(__for_range_3)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Self *)&__for_begin,
            (const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Self *)&__for_end) )
  {
    v28 = std::_Rb_tree_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator*((const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> > *const)&__for_begin);
    group_pair_0 = std::get<0ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v28);
    gadget_id_0 = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v28);
    gadget_point_0 = proto::RogueDungeonBin::add_trap_group_gadget_bin_list(dungeon_bin);
    group_pair_bin_0 = proto::RogueGadgetPointBin::mutable_group_point_pair(gadget_point_0);
    if ( *(_BYTE *)(((unsigned __int64)group_pair_0 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)group_pair_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_pair_0 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(group_pair_0);
    }
    proto::Uint32PairBin::set_key(group_pair_bin_0, group_pair_0->first);
    if ( *(_BYTE *)(((unsigned __int64)&group_pair_0->second >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)group_pair_0 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_pair_0->second >> 3)
                                                                 + 0x7FFF8000) )
    {
      __asan_report_load4(&group_pair_0->second);
    }
    proto::Uint32PairBin::set_value(group_pair_bin_0, group_pair_0->second);
    if ( *(_BYTE *)(((unsigned __int64)gadget_id_0 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)gadget_id_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)gadget_id_0 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(gadget_id_0);
    }
    proto::RogueGadgetPointBin::set_gadget_id(gadget_point_0, *gadget_id_0);
    std::_Rb_tree_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator++((std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> > *const)&__for_begin);
  }
  __for_range_4 = &this->byobu_group_pair_gadget_id_map_;
  __for_begin._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::begin(&this->byobu_group_pair_gadget_id_map_)._M_node;
  __for_end._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::end(__for_range_4)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Self *)&__for_begin,
            (const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Self *)&__for_end) )
  {
    v23 = std::_Rb_tree_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator*((const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> > *const)&__for_begin);
    group_pair_1 = std::get<0ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v23);
    gadget_id_1 = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v23);
    gadget_point_1 = proto::RogueDungeonBin::add_byobu_group_gadget_bin_list(dungeon_bin);
    group_pair_bin_1 = proto::RogueGadgetPointBin::mutable_group_point_pair(gadget_point_1);
    if ( *(_BYTE *)(((unsigned __int64)group_pair_1 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)group_pair_1 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_pair_1 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(group_pair_1);
    }
    proto::Uint32PairBin::set_key(group_pair_bin_1, group_pair_1->first);
    if ( *(_BYTE *)(((unsigned __int64)&group_pair_1->second >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)group_pair_1 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_pair_1->second >> 3)
                                                                 + 0x7FFF8000) )
    {
      __asan_report_load4(&group_pair_1->second);
    }
    proto::Uint32PairBin::set_value(group_pair_bin_1, group_pair_1->second);
    if ( *(_BYTE *)(((unsigned __int64)gadget_id_1 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)gadget_id_1 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)gadget_id_1 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(gadget_id_1);
    }
    proto::RogueGadgetPointBin::set_gadget_id(gadget_point_1, *gadget_id_1);
    std::_Rb_tree_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator++((std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> > *const)&__for_begin);
  }
  __for_range_5 = &this->ball_group_pair_gadget_id_map_;
  __for_begin._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::begin(&this->ball_group_pair_gadget_id_map_)._M_node;
  __for_end._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::end(__for_range_5)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Self *)&__for_begin,
            (const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Self *)&__for_end) )
  {
    v18 = std::_Rb_tree_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator*((const std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> > *const)&__for_begin);
    group_pair_2 = std::get<0ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v18);
    gadget_id_2 = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v18);
    gadget_point_2 = proto::RogueDungeonBin::add_ball_group_gadget_bin_list(dungeon_bin);
    group_pair_bin_2 = proto::RogueGadgetPointBin::mutable_group_point_pair(gadget_point_2);
    if ( *(_BYTE *)(((unsigned __int64)group_pair_2 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)group_pair_2 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_pair_2 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(group_pair_2);
    }
    proto::Uint32PairBin::set_key(group_pair_bin_2, group_pair_2->first);
    if ( *(_BYTE *)(((unsigned __int64)&group_pair_2->second >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)group_pair_2 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_pair_2->second >> 3)
                                                                 + 0x7FFF8000) )
    {
      __asan_report_load4(&group_pair_2->second);
    }
    proto::Uint32PairBin::set_value(group_pair_bin_2, group_pair_2->second);
    if ( *(_BYTE *)(((unsigned __int64)gadget_id_2 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)gadget_id_2 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)gadget_id_2 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(gadget_id_2);
    }
    proto::RogueGadgetPointBin::set_gadget_id(gadget_point_2, *gadget_id_2);
    std::_Rb_tree_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator++((std::_Rb_tree_const_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> > *const)&__for_begin);
  }
  return 0;
};

// Line 353: range 0000000015927C70-0000000015928C00
int32_t __cdecl RogueLikeDungeonRuntimeMgr::fromBin(
        RogueLikeDungeonRuntimeMgr *const this,
        const proto::RogueDungeonBin *dungeon_bin)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  bool is_valid; // cl
  char v6; // dl
  __int64 v7; // rdx
  __int64 v8; // rdx
  char v9; // al
  __int64 v10; // rdx
  char v11; // al
  const proto::VectorBin *player_pos; // rax
  const proto::VectorBin *player_rot; // rsi
  __int64 v14; // rdx
  char v15; // al
  __int64 v16; // rdx
  char v17; // al
  uint32_t v18; // ecx
  char v19; // dl
  __int64 v20; // rdx
  RogueCell *v21; // rax
  const proto::RogueTeamBin *v22; // rax
  const proto::Uint32PairBin *v23; // rax
  const proto::Uint32PairBin *v24; // rax
  std::pair<unsigned int,unsigned int> *v25; // rcx
  unsigned int *v26; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >,bool> v27; // rax
  common::milog::MiLogStream *v28; // rax
  const proto::Uint32PairBin *v29; // rax
  const proto::Uint32PairBin *v30; // rax
  std::pair<unsigned int,unsigned int> *v31; // rcx
  unsigned int *v32; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >,bool> v33; // rax
  common::milog::MiLogStream *v34; // rax
  const proto::Uint32PairBin *v35; // rax
  const proto::Uint32PairBin *v36; // rax
  std::pair<unsigned int,unsigned int> *v37; // rcx
  unsigned int *v38; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >,bool> v39; // rax
  common::milog::MiLogStream *v40; // rax
  const proto::Uint32PairBin *v41; // rax
  const proto::Uint32PairBin *v42; // rax
  std::pair<unsigned int,unsigned int> *v43; // rcx
  unsigned int *v44; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >,bool> v45; // rax
  common::milog::MiLogStream *v46; // rax
  int32_t result; // eax
  const proto::RogueDungeonBin *dungeon_bina; // [rsp+0h] [rbp-310h]
  unsigned int __x; // [rsp+1Ch] [rbp-2F4h] BYREF
  google::protobuf::RepeatedPtrField<proto::Uint32PairBin>::const_iterator __for_begin_0; // [rsp+20h] [rbp-2F0h] BYREF
  google::protobuf::RepeatedPtrField<proto::Uint32PairBin>::const_iterator __for_end_0; // [rsp+28h] [rbp-2E8h] BYREF
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_begin_1; // [rsp+30h] [rbp-2E0h]
  const google::protobuf::Map<unsigned int,proto::RogueCellBin> *__for_range; // [rsp+38h] [rbp-2D8h]
  const google::protobuf::RepeatedPtrField<proto::Uint32PairBin> *__for_range_0; // [rsp+40h] [rbp-2D0h]
  const google::protobuf::RepeatedField<unsigned int> *__for_range_1; // [rsp+48h] [rbp-2C8h]
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_end_1; // [rsp+50h] [rbp-2C0h]
  const google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin> *__for_range_2; // [rsp+58h] [rbp-2B8h]
  const google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin> *__for_range_3; // [rsp+60h] [rbp-2B0h]
  const google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin> *__for_range_4; // [rsp+68h] [rbp-2A8h]
  const google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin> *__for_range_5; // [rsp+70h] [rbp-2A0h]
  const proto::RogueGadgetPointBin *gadget_group_bin_2; // [rsp+78h] [rbp-298h]
  const proto::RogueGadgetPointBin *gadget_group_bin_1; // [rsp+80h] [rbp-290h]
  const proto::RogueGadgetPointBin *gadget_group_bin_0; // [rsp+88h] [rbp-288h]
  const proto::RogueGadgetPointBin *gadget_group_bin; // [rsp+90h] [rbp-280h]
  const proto::Uint32PairBin *group_pair; // [rsp+98h] [rbp-278h]
  const unsigned int *p_cell_id; // [rsp+A0h] [rbp-270h]
  std::unordered_set<unsigned int> *cell_id_set; // [rsp+A8h] [rbp-268h]
  Vector3 v68; // [rsp+B4h] [rbp-25Ch] BYREF
  google::protobuf::Map<unsigned int,proto::RogueCellBin>::const_iterator __for_begin; // [rsp+C0h] [rbp-250h] BYREF
  google::protobuf::Map<unsigned int,proto::RogueCellBin>::const_iterator __for_end; // [rsp+E0h] [rbp-230h] BYREF
  common::milog::MiLogStream v71; // [rsp+100h] [rbp-210h] BYREF
  char v72[496]; // [rsp+120h] [rbp-1F0h] BYREF

  dungeon_bina = dungeon_bin;
  v2 = (unsigned __int64)v72;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(448LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 4 11 cell_id:380 64 8 14 group_pair:415 96 280 8 cell:366";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::fromBin;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -218959360;
  v4[536862731] = -218103808;
  v4[536862732] = -202116109;
  v4[536862733] = -202116109;
  is_valid = proto::RogueDungeonBin::is_valid(dungeon_bin);
  v6 = *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000);
  LOBYTE(dungeon_bin) = v6 != 0;
  v7 = (v6 != 0) & (unsigned __int8)((((unsigned __int8)this + 76) & 7) >= v6);
  if ( (_BYTE)v7 )
    __asan_report_store1(&this->is_valid_, dungeon_bin, v7);
  this->is_valid_ = is_valid;
  v8 = proto::RogueDungeonBin::stage_id(dungeon_bina);
  v9 = *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000);
  if ( v9 != 0 && v9 <= 3 )
  {
    LOBYTE(dungeon_bin) = v9 != 0;
    __asan_report_store4(&this->stage_id_, dungeon_bin, v8);
  }
  this->stage_id_ = v8;
  v10 = proto::RogueDungeonBin::cur_level_index(dungeon_bina);
  v11 = *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000);
  if ( v11 != 0 && v11 <= 3 )
  {
    LOBYTE(dungeon_bin) = v11 != 0;
    __asan_report_store4(&this->cur_level_, dungeon_bin, v10);
  }
  this->cur_level_ = v10;
  player_pos = proto::RogueDungeonBin::last_player_pos(dungeon_bina);
  Vector3::Vector3(&v68, player_pos);
  if ( (((unsigned __int8)this + 52) & 7) >= *(_BYTE *)(((unsigned __int64)&this->last_player_pos_ >> 3) + 0x7FFF8000)
    && *(_BYTE *)(((unsigned __int64)&this->last_player_pos_ >> 3) + 0x7FFF8000) != 0
    || *(_BYTE *)((((unsigned __int64)&this->last_player_pos_.z + 3) >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 63) & 7) >= *(_BYTE *)((((unsigned __int64)&this->last_player_pos_.z + 3) >> 3)
                                                      + 0x7FFF8000) )
  {
    __asan_report_store_n(&this->last_player_pos_, 12LL);
  }
  this->last_player_pos_ = v68;
  player_rot = proto::RogueDungeonBin::last_player_rot(dungeon_bina);
  Vector3::Vector3(&v68, player_rot);
  if ( *(char *)(((unsigned __int64)&this->last_player_rot_ >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)((((unsigned __int64)&this->last_player_rot_.z + 3) >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 75) & 7) >= *(_BYTE *)((((unsigned __int64)&this->last_player_rot_.z + 3) >> 3)
                                                      + 0x7FFF8000) )
  {
    player_rot = (const proto::VectorBin *)12;
    __asan_report_store_n(&this->last_player_rot_, 12LL);
  }
  this->last_player_rot_ = v68;
  v14 = proto::RogueDungeonBin::cur_cell_id(dungeon_bina);
  v15 = *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000);
  if ( v15 != 0 && v15 <= 3 )
  {
    LOBYTE(player_rot) = v15 != 0;
    __asan_report_store4(&this->cur_cell_id_, player_rot, v14);
  }
  this->cur_cell_id_ = v14;
  v16 = proto::RogueDungeonBin::dungeon_weight_config_id(dungeon_bina);
  v17 = *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000);
  if ( v17 != 0 && v17 <= 3 )
  {
    LOBYTE(player_rot) = v17 != 0;
    __asan_report_store4(&this->dungeon_weight_config_id_, player_rot, v16);
  }
  this->dungeon_weight_config_id_ = v16;
  v18 = proto::RogueDungeonBin::dungeon_id(dungeon_bina);
  v19 = *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000);
  LOBYTE(player_rot) = v19 != 0;
  v20 = (v19 != 0) & (unsigned __int8)((char)((((_BYTE)this + 44) & 7) + 3) >= v19);
  if ( (_BYTE)v20 )
    __asan_report_store4(&this->dungeon_id_, player_rot, v20);
  this->dungeon_id_ = v18;
  std::map<data::RogueCellType,std::unordered_set<unsigned int>>::clear(&this->cell_type_to_cell_id_map_);
  std::map<unsigned int,RogueCell>::clear(&this->rogue_cell_map_);
  __for_range = proto::RogueDungeonBin::rogue_cell_bin_map(dungeon_bina);
  google::protobuf::Map<unsigned int,proto::RogueCellBin>::begin(&__for_begin, __for_range);
  google::protobuf::Map<unsigned int,proto::RogueCellBin>::end(&__for_end, __for_range);
  while ( google::protobuf::operator!=(&__for_begin, &__for_end) )
  {
    p_cell_id = (const unsigned int *)google::protobuf::Map<unsigned int,proto::RogueCellBin>::const_iterator::operator*(&__for_begin);
    RogueCell::RogueCell((RogueCell *const)(v2 + 96));
    RogueCell::fromBin((RogueCell *const)(v2 + 96), (const proto::RogueCellBin *)(p_cell_id + 2));
    v21 = std::map<unsigned int,RogueCell>::operator[](&this->rogue_cell_map_, p_cell_id);
    RogueCell::operator=(v21, (const RogueCell *)(v2 + 96));
    cell_id_set = std::map<data::RogueCellType,std::unordered_set<unsigned int>>::operator[](
                    &this->cell_type_to_cell_id_map_,
                    (const std::map<data::RogueCellType,std::unordered_set<unsigned int>>::key_type *)(v2 + 116));
    std::unordered_set<unsigned int>::insert(cell_id_set, p_cell_id);
    RogueCell::~RogueCell((RogueCell *const)(v2 + 96));
    google::protobuf::Map<unsigned int,proto::RogueCellBin>::const_iterator::operator++(&__for_begin);
  }
  std::set<std::pair<unsigned int,unsigned int>>::clear(&this->blast_bucket_set_);
  __for_range_0 = proto::RogueDungeonBin::blast_bucket_list(dungeon_bina);
  __for_begin_0.it_ = google::protobuf::RepeatedPtrField<proto::Uint32PairBin>::begin(__for_range_0).it_;
  __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::Uint32PairBin>::end(__for_range_0).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::Uint32PairBin const>::operator!=(
            &__for_begin_0,
            &__for_end_0) )
  {
    group_pair = google::protobuf::internal::RepeatedPtrIterator<proto::Uint32PairBin const>::operator*(&__for_begin_0);
    *(_DWORD *)(v2 + 48) = proto::Uint32PairBin::value(group_pair);
    __x = proto::Uint32PairBin::key(group_pair);
    *(std::pair<unsigned int,unsigned int> *)(v2 + 64) = std::make_pair<unsigned int,unsigned int>(
                                                           &__x,
                                                           (unsigned int *)(v2 + 48));
    std::set<std::pair<unsigned int,unsigned int>>::insert(
      &this->blast_bucket_set_,
      (std::set<std::pair<unsigned int,unsigned int>>::value_type *)(v2 + 64));
    google::protobuf::internal::RepeatedPtrIterator<proto::Uint32PairBin const>::operator++(&__for_begin_0);
  }
  v22 = proto::RogueDungeonBin::team_bin(dungeon_bina);
  RogueTeam::fromBin(&this->rogue_team_, v22);
  std::unordered_set<unsigned int>::clear(&this->explored_cell_set_);
  __for_range_1 = proto::RogueDungeonBin::explored_cell_list(dungeon_bina);
  __for_begin_1 = google::protobuf::RepeatedField<unsigned int>::begin(__for_range_1);
  __for_end_1 = google::protobuf::RepeatedField<unsigned int>::end(__for_range_1);
  while ( __for_begin_1 != __for_end_1 )
  {
    if ( *(_BYTE *)(((unsigned __int64)__for_begin_1 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)__for_begin_1 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__for_begin_1 >> 3)
                                                                      + 0x7FFF8000) )
    {
      __asan_report_load4(__for_begin_1);
    }
    *(_DWORD *)(v2 + 48) = *__for_begin_1;
    std::unordered_set<unsigned int>::insert(
      &this->explored_cell_set_,
      (const std::unordered_set<unsigned int>::value_type *)(v2 + 48));
    ++__for_begin_1;
  }
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->brakeage_group_pair_gadget_id_map_);
  __for_range_2 = proto::RogueDungeonBin::brakeage_group_gadget_bin_list(dungeon_bina);
  __for_begin_0.it_ = google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin>::begin(__for_range_2).it_;
  __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin>::end(__for_range_2).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator!=(
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0,
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin>::iterator *)&__for_end_0) )
  {
    gadget_group_bin = google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0);
    v23 = proto::RogueGadgetPointBin::group_point_pair(gadget_group_bin);
    *(_DWORD *)(v2 + 48) = proto::Uint32PairBin::value(v23);
    v24 = proto::RogueGadgetPointBin::group_point_pair(gadget_group_bin);
    __x = proto::Uint32PairBin::key(v24);
    *(std::pair<unsigned int,unsigned int> *)(v2 + 64) = std::make_pair<unsigned int,unsigned int>(
                                                           &__x,
                                                           (unsigned int *)(v2 + 48));
    *(_DWORD *)(v2 + 48) = proto::RogueGadgetPointBin::gadget_id(gadget_group_bin);
    v27 = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int>(
            &this->brakeage_group_pair_gadget_id_map_,
            (std::pair<unsigned int,unsigned int> *)(v2 + 64),
            (unsigned int *)(v2 + 48),
            v25,
            v26);
    if ( !v27.second )
    {
      common::milog::MiLogStream::create(
        &v71,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "fromBin",
        391);
      v28 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
              &v71,
              (const char (*)[31])"[ROGUE] duplicated group_pair:");
      common::milog::MiLogStream::operator<<<unsigned int,unsigned int>(
        v28,
        (const std::pair<unsigned int,unsigned int> *)(v2 + 64));
      common::milog::MiLogStream::~MiLogStream(&v71);
    }
    google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0);
  }
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->trap_group_pair_gadget_id_map_);
  __for_range_3 = proto::RogueDungeonBin::trap_group_gadget_bin_list(dungeon_bina);
  __for_begin_0.it_ = google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin>::begin(__for_range_3).it_;
  __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin>::end(__for_range_3).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator!=(
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0,
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin>::iterator *)&__for_end_0) )
  {
    gadget_group_bin_0 = google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0);
    v29 = proto::RogueGadgetPointBin::group_point_pair(gadget_group_bin_0);
    *(_DWORD *)(v2 + 48) = proto::Uint32PairBin::value(v29);
    v30 = proto::RogueGadgetPointBin::group_point_pair(gadget_group_bin_0);
    __x = proto::Uint32PairBin::key(v30);
    *(std::pair<unsigned int,unsigned int> *)(v2 + 64) = std::make_pair<unsigned int,unsigned int>(
                                                           &__x,
                                                           (unsigned int *)(v2 + 48));
    *(_DWORD *)(v2 + 48) = proto::RogueGadgetPointBin::gadget_id(gadget_group_bin_0);
    v33 = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int>(
            &this->trap_group_pair_gadget_id_map_,
            (std::pair<unsigned int,unsigned int> *)(v2 + 64),
            (unsigned int *)(v2 + 48),
            v31,
            v32);
    if ( !v33.second )
    {
      common::milog::MiLogStream::create(
        &v71,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "fromBin",
        400);
      v34 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
              &v71,
              (const char (*)[31])"[ROGUE] duplicated group_pair:");
      common::milog::MiLogStream::operator<<<unsigned int,unsigned int>(
        v34,
        (const std::pair<unsigned int,unsigned int> *)(v2 + 64));
      common::milog::MiLogStream::~MiLogStream(&v71);
    }
    google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0);
  }
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->byobu_group_pair_gadget_id_map_);
  __for_range_4 = proto::RogueDungeonBin::byobu_group_gadget_bin_list(dungeon_bina);
  __for_begin_0.it_ = google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin>::begin(__for_range_4).it_;
  __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin>::end(__for_range_4).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator!=(
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0,
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin>::iterator *)&__for_end_0) )
  {
    gadget_group_bin_1 = google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0);
    v35 = proto::RogueGadgetPointBin::group_point_pair(gadget_group_bin_1);
    *(_DWORD *)(v2 + 48) = proto::Uint32PairBin::value(v35);
    v36 = proto::RogueGadgetPointBin::group_point_pair(gadget_group_bin_1);
    __x = proto::Uint32PairBin::key(v36);
    *(std::pair<unsigned int,unsigned int> *)(v2 + 64) = std::make_pair<unsigned int,unsigned int>(
                                                           &__x,
                                                           (unsigned int *)(v2 + 48));
    *(_DWORD *)(v2 + 48) = proto::RogueGadgetPointBin::gadget_id(gadget_group_bin_1);
    v39 = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int>(
            &this->byobu_group_pair_gadget_id_map_,
            (std::pair<unsigned int,unsigned int> *)(v2 + 64),
            (unsigned int *)(v2 + 48),
            v37,
            v38);
    if ( !v39.second )
    {
      common::milog::MiLogStream::create(
        &v71,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "fromBin",
        409);
      v40 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
              &v71,
              (const char (*)[31])"[ROGUE] duplicated group_pair:");
      common::milog::MiLogStream::operator<<<unsigned int,unsigned int>(
        v40,
        (const std::pair<unsigned int,unsigned int> *)(v2 + 64));
      common::milog::MiLogStream::~MiLogStream(&v71);
    }
    google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0);
  }
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->ball_group_pair_gadget_id_map_);
  __for_range_5 = proto::RogueDungeonBin::ball_group_gadget_bin_list(dungeon_bina);
  __for_begin_0.it_ = google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin>::begin(__for_range_5).it_;
  __for_end_0.it_ = google::protobuf::RepeatedPtrField<proto::RogueGadgetPointBin>::end(__for_range_5).it_;
  while ( google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator!=(
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0,
            (const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin>::iterator *)&__for_end_0) )
  {
    gadget_group_bin_2 = google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator*((const google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0);
    v41 = proto::RogueGadgetPointBin::group_point_pair(gadget_group_bin_2);
    *(_DWORD *)(v2 + 48) = proto::Uint32PairBin::value(v41);
    v42 = proto::RogueGadgetPointBin::group_point_pair(gadget_group_bin_2);
    __x = proto::Uint32PairBin::key(v42);
    *(std::pair<unsigned int,unsigned int> *)(v2 + 64) = std::make_pair<unsigned int,unsigned int>(
                                                           &__x,
                                                           (unsigned int *)(v2 + 48));
    *(_DWORD *)(v2 + 48) = proto::RogueGadgetPointBin::gadget_id(gadget_group_bin_2);
    v45 = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int>(
            &this->byobu_group_pair_gadget_id_map_,
            (std::pair<unsigned int,unsigned int> *)(v2 + 64),
            (unsigned int *)(v2 + 48),
            v43,
            v44);
    if ( !v45.second )
    {
      common::milog::MiLogStream::create(
        &v71,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "fromBin",
        418);
      v46 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
              &v71,
              (const char (*)[31])"[ROGUE] duplicated group_pair:");
      common::milog::MiLogStream::operator<<<unsigned int,unsigned int>(
        v46,
        (const std::pair<unsigned int,unsigned int> *)(v2 + 64));
      common::milog::MiLogStream::~MiLogStream(&v71);
    }
    google::protobuf::internal::RepeatedPtrIterator<proto::RogueGadgetPointBin const>::operator++((google::protobuf::internal::RepeatedPtrIterator<const proto::RogueGadgetPointBin> *const)&__for_begin_0);
  }
  result = 0;
  if ( v72 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF802C) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8034) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 425: range 0000000015928CF6-000000001592A3E2
__int64 __fastcall RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t stage_id,
        const std::vector<long unsigned int> *onstage_avatar_id_vec,
        const std::vector<long unsigned int> *backstage_avatar_id_vec)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  unsigned int v7; // r14d
  __int64 v8; // rsi
  common::milog::MiLogStream *v9; // rax
  const ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  bool v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  common::milog::MiLogStream *v16; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  PlayerAvatarComp *AvatarComp; // rax
  common::milog::MiLogStream *v23; // rax
  PlayerAvatarComp *v24; // rax
  common::milog::MiLogStream *v25; // rax
  GameserverService *v26; // rax
  uint32_t v27; // r14d
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v28; // rax
  common::milog::MiLogStream *v30; // r14
  bool v31; // r14
  common::milog::MiLogStream *v32; // rax
  bool v33; // r14
  common::milog::MiLogStream *v34; // rax
  uint32_t v35; // r14d
  common::milog::MiLogStream *v36; // rax
  DungeonScene *v37; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  uint32_t SceneId; // esi
  PlayerDungeonComp *DungeonComp; // r14
  PlayerSceneComp *SceneComp; // rax
  uint32_t CurSceneId; // r15d
  std::shared_ptr<Player> *v43; // rsi
  bool v44; // r14
  uint32_t v45; // ecx
  char v46; // dl
  __int64 v47; // rdx
  uint32_t v48; // ecx
  char v49; // al
  __int64 v50; // rsi
  __int64 v51; // rdx
  uint32_t v52; // ecx
  char v53; // al
  DungeonScene *v54; // r14
  DungeonScene *v55; // r14
  ReviseLevelGrowExcelConfigMgr *p_revise_level_grow_config_mgr; // r14
  uint32_t InitWorldLevel; // ecx
  DungeonScene *v58; // rax
  DungeonScene *v59; // rax
  __int64 result; // rax
  unsigned int val; // [rsp+30h] [rbp-190h] BYREF
  uint32_t revise_level; // [rsp+34h] [rbp-18Ch]
  const data::RoguelikeDungeonWeightExcelConfig *dungeon_weight_config_ptr; // [rsp+40h] [rbp-180h]
  const data::RogueStageExcelConfig *stage_config_ptr; // [rsp+48h] [rbp-178h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+50h] [rbp-170h]
  DungeonSceneTeam *dungeon_scene_team; // [rsp+58h] [rbp-168h]
  std::shared_ptr<Player> v71; // [rsp+60h] [rbp-160h] BYREF
  common::milog::MiLogStream v72; // [rsp+70h] [rbp-150h] BYREF
  char v73[304]; // [rsp+90h] [rbp-130h] BYREF

  v4 = (unsigned __int64)v73;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_2(256LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "7 48 4 14 dungeon_id:443 64 4 28 dungeon_weight_config_id:444 80 4 7 ret:468 96 4 12 stage_id:42"
                        "4 112 12 19 dungeon_context:543 144 16 21 dungeon_scene_ptr:499 176 40 25 dungeon_data_commiter:464";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -234556924;
  v6[536862723] = 61956;
  v6[536862723] = 0x4000000;
  v6[536862724] = 62194;
  v6[536862725] = 62194;
  v6[536862726] = -218103808;
  v6[536862727] = -202116109;
  *(_DWORD *)(v4 + 96) = stage_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v72,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "enterInitDungeonLevel",
      428);
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
      &v72,
      (const char (*)[26])"[ROGUE] HAS VALID RECORD!");
    common::milog::MiLogStream::~MiLogStream(&v72);
    v7 = -1;
  }
  else
  {
    RogueLikeDungeonRuntimeMgr::clearAll(this);
    if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->activity_);
    v8 = *(unsigned int *)(v4 + 96);
    if ( RoguelikeDungeonActivity::findStage(this->activity_, v8) )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_store4(&this->cur_level_, v8, &this->cur_level_);
      }
      this->cur_level_ = 1;
      *(_DWORD *)(v4 + 48) = 0;
      *(_DWORD *)(v4 + 64) = 0;
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v71);
      p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v71)->design_config.txt_config_mgr.activity_rogue_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
      {
        p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&this->cur_level_;
        __asan_report_load4(&this->cur_level_);
      }
      v11 = ActivityRogueExcelConfigMgr::randomDungeonIdByStageAndLevel(
              p_activity_rogue_config_mgr,
              *(_DWORD *)(v4 + 96),
              this->cur_level_,
              (uint32_t *)(v4 + 48),
              (uint32_t *)(v4 + 64)) != 0;
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v71);
      if ( v11 )
      {
        common::milog::MiLogStream::create(
          &v72,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "enterInitDungeonLevel",
          447);
        v12 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
                &v72,
                (const char (*)[58])"[ROGUE]  randomDungeonIdByStageAndLevel failed, stage_id:");
        v13 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v12,
                (const unsigned int *)(v4 + 96));
        v14 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v13, (const char (*)[12])", level_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &this->cur_level_);
        common::milog::MiLogStream::~MiLogStream(&v72);
        v7 = -1;
      }
      else
      {
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v71);
        v15 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v71);
        dungeon_weight_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRoguelikeDungeonWeightExcelConfig(
                                      &v15->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                      *(_DWORD *)(v4 + 64));
        std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v71);
        if ( dungeon_weight_config_ptr )
        {
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)&v71);
          v17 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v71);
          stage_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueStageExcelConfig(
                               &v17->design_config.txt_config_mgr.activity_rogue_config_mgr,
                               *(_DWORD *)(v4 + 96));
          std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v71);
          if ( stage_config_ptr )
          {
            common::milog::MiLogStream::create(
              &v72,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "enterInitDungeonLevel",
              463);
            v19 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
                    &v72,
                    (const char (*)[27])"[ROGUE] random dungeon_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, (const unsigned int *)(v4 + 48));
            common::milog::MiLogStream::~MiLogStream(&v72);
            std::function<void ()(void)>::function<RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel(unsigned int,std::vector<unsigned long> const&,std::vector<unsigned long> const&)::{lambda(void)#1},void,void>(
              (std::function<void()> *const)&v72,
              (RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel::<lambda()>)this);
            common::tools::ScopedCommitter::ScopedCommitter(
              (common::tools::ScopedCommitter *const)(v4 + 176),
              (std::function<void()> *)&v72);
            std::function<void ()(void)>::~function((std::function<void()> *const)&v72);
            *(_DWORD *)(v4 + 80) = RogueLikeDungeonRuntimeMgr::checkEnterDungeon(this, *(_DWORD *)(v4 + 48));
            if ( *(_DWORD *)(v4 + 80) )
            {
              common::milog::MiLogStream::create(
                &v72,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "enterInitDungeonLevel",
                471);
              v20 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                      &v72,
                      (const char (*)[46])"[ROGUE] checkEnterDungeon failed, dungeon_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v20,
                (const unsigned int *)(v4 + 48));
              common::milog::MiLogStream::~MiLogStream(&v72);
              v7 = *(_DWORD *)(v4 + 80);
            }
            else if ( !std::vector<unsigned long>::empty(&this->rogue_team_.backstage_mirror_avatar_guid_vec)
                   || !std::vector<unsigned long>::empty(&this->rogue_team_.onstage_mirror_avatar_guid_vec) )
            {
              common::milog::MiLogStream::create(
                &v72,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "enterInitDungeonLevel",
                478);
              common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                &v72,
                (const char (*)[41])"[ROGUE] runtime avatar team is not empty");
              common::milog::MiLogStream::~MiLogStream(&v72);
              v7 = -1;
            }
            else
            {
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->player_);
              AvatarComp = Player::getAvatarComp(this->player_);
              *(_DWORD *)(v4 + 80) = PlayerAvatarComp::addMirrorAvatars(
                                       AvatarComp,
                                       onstage_avatar_id_vec,
                                       &this->rogue_team_.onstage_mirror_avatar_guid_vec,
                                       AVATAR_SNAPSHOT_TYPE_NONE);
              if ( *(_DWORD *)(v4 + 80) )
              {
                common::milog::MiLogStream::create(
                  &v72,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "enterInitDungeonLevel",
                  485);
                v23 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                        &v72,
                        (const char (*)[38])"[ROGUE] addMirrorAvatars failed, ret=");
                common::milog::MiLogStream::operator<<<int,(int *)0>(v23, (const int *)(v4 + 80));
                common::milog::MiLogStream::~MiLogStream(&v72);
                v7 = *(_DWORD *)(v4 + 80);
              }
              else
              {
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->player_);
                v24 = Player::getAvatarComp(this->player_);
                *(_DWORD *)(v4 + 80) = PlayerAvatarComp::addMirrorAvatars(
                                         v24,
                                         backstage_avatar_id_vec,
                                         &this->rogue_team_.backstage_mirror_avatar_guid_vec,
                                         AVATAR_SNAPSHOT_TYPE_NONE);
                if ( *(_DWORD *)(v4 + 80) )
                {
                  common::milog::MiLogStream::create(
                    &v72,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "enterInitDungeonLevel",
                    492);
                  v25 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                          &v72,
                          (const char (*)[38])"[ROGUE] addMirrorAvatars failed, ret=");
                  common::milog::MiLogStream::operator<<<int,(int *)0>(v25, (const int *)(v4 + 80));
                  common::milog::MiLogStream::~MiLogStream(&v72);
                  v7 = *(_DWORD *)(v4 + 80);
                }
                else
                {
                  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->activity_);
                  misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
                  RoguelikeMiscMgr::initRoguelikeDungeonMiscData(misc_mgr);
                  v26 = ServiceBox::findService<GameserverService>();
                  v27 = (unsigned int)GameserverService::getGameThreadLocal(v26) + 568;
                  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->player_);
                  toThisPtr<Player>((Player *)&v71);
                  DungeonMgr::createDungeon((DungeonMgr *const)(v4 + 144), v27, (PlayerPtr *)*(unsigned int *)(v4 + 48));
                  std::shared_ptr<Player>::~shared_ptr(&v71);
                  if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v4 + 144))
                    || (v28 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 144)),
                        DungeonScene::getDungeonId(v28) != *(_DWORD *)(v4 + 48)) )
                  {
                    common::milog::MiLogStream::create(
                      &v72,
                      &common::milog::MiLogDefault::default_log_obj_,
                      3u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "enterInitDungeonLevel",
                      502);
                    v30 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                            &v72,
                            (const char (*)[42])"[ROGUE] player enter dungeon failed, uid:");
                    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                      __asan_report_load8(&this->player_);
                    val = Player::getUid(this->player_);
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v30, &val);
                    common::milog::MiLogStream::~MiLogStream(&v72);
                    v7 = -1;
                  }
                  else
                  {
                    std::shared_ptr<DungeonScene>::shared_ptr(
                      (std::shared_ptr<DungeonScene> *const)&v71,
                      (const std::shared_ptr<DungeonScene> *)(v4 + 144));
                    v31 = RogueLikeDungeonRuntimeMgr::constructDungeon(
                            this,
                            *(_DWORD *)(v4 + 64),
                            *(_DWORD *)(v4 + 48),
                            (DungeonScenePtr *)&v71) != 0;
                    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v71);
                    if ( v31 )
                    {
                      common::milog::MiLogStream::create(
                        &v72,
                        &common::milog::MiLogDefault::default_log_obj_,
                        3u,
                        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                        "enterInitDungeonLevel",
                        509);
                      v32 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                              &v72,
                              (const char (*)[45])"[ROGUE] constructDungeon failed, dungeon_id:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v32,
                        (const unsigned int *)(v4 + 48));
                      common::milog::MiLogStream::~MiLogStream(&v72);
                      v7 = -1;
                    }
                    else
                    {
                      std::shared_ptr<DungeonScene>::shared_ptr(
                        (std::shared_ptr<DungeonScene> *const)&v71,
                        (const std::shared_ptr<DungeonScene> *)(v4 + 144));
                      v33 = RogueLikeDungeonRuntimeMgr::buildDungeon(
                              this,
                              *(_DWORD *)(v4 + 64),
                              (DungeonScenePtr *)&v71) != 0;
                      std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v71);
                      if ( v33 )
                      {
                        common::milog::MiLogStream::create(
                          &v72,
                          &common::milog::MiLogDefault::default_log_obj_,
                          3u,
                          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                          "enterInitDungeonLevel",
                          516);
                        v34 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                                &v72,
                                (const char (*)[41])"[ROGUE] buildDungeon failed, dungeon_id:");
                        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v34,
                          (const unsigned int *)(v4 + 48));
                        common::milog::MiLogStream::~MiLogStream(&v72);
                        v7 = -1;
                      }
                      else
                      {
                        v35 = *(_DWORD *)(v4 + 64);
                        std::shared_ptr<DungeonScene>::shared_ptr(
                          (std::shared_ptr<DungeonScene> *const)&v71,
                          (const std::shared_ptr<DungeonScene> *)(v4 + 144));
                        LOBYTE(v35) = RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(
                                        this,
                                        (DungeonScenePtr *)&v71,
                                        v35) != 0;
                        std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v71);
                        if ( (_BYTE)v35 )
                        {
                          common::milog::MiLogStream::create(
                            &v72,
                            &common::milog::MiLogDefault::default_log_obj_,
                            3u,
                            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                            "enterInitDungeonLevel",
                            523);
                          v36 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                                  &v72,
                                  (const char (*)[49])"[ROGUE] initDungeonBrakeages failed, dungeon_id:");
                          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v36,
                            (const unsigned int *)(v4 + 48));
                          common::milog::MiLogStream::~MiLogStream(&v72);
                          v7 = -1;
                        }
                        else
                        {
                          v37 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 144));
                          dungeon_scene_team = DungeonScene::getDungeonSceneTeam(v37);
                          v38 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 144));
                          SceneId = Scene::getSceneId((const Scene *const)v38);
                          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                            __asan_report_load8(&this->player_);
                          DungeonSceneTeam::initSceneTeam(dungeon_scene_team, this->player_, SceneId);
                          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                            __asan_report_load8(&this->player_);
                          DungeonComp = Player::getDungeonComp(this->player_);
                          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                            __asan_report_load8(&this->player_);
                          SceneComp = Player::getSceneComp(this->player_);
                          CurSceneId = PlayerSceneComp::getCurSceneId(SceneComp);
                          std::shared_ptr<DungeonScene>::shared_ptr(
                            (std::shared_ptr<DungeonScene> *const)&v71,
                            (const std::shared_ptr<DungeonScene> *)(v4 + 144));
                          v43 = &v71;
                          v44 = PlayerDungeonComp::enterDungeon(DungeonComp, (DungeonScenePtr *)&v71, CurSceneId, 0) != 0;
                          std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v71);
                          if ( v44 )
                          {
                            common::milog::MiLogStream::create(
                              &v72,
                              &common::milog::MiLogDefault::default_log_obj_,
                              3u,
                              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                              "enterInitDungeonLevel",
                              531);
                            common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                              &v72,
                              (const char (*)[28])"[ROGUE] enterDungeon failed");
                            common::milog::MiLogStream::~MiLogStream(&v72);
                            v7 = -1;
                          }
                          else
                          {
                            v45 = *(_DWORD *)(v4 + 48);
                            v46 = *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000);
                            LOBYTE(v43) = v46 != 0;
                            v47 = (v46 != 0) & (unsigned __int8)((char)((((_BYTE)this + 44) & 7) + 3) >= v46);
                            if ( (_BYTE)v47 )
                              __asan_report_store4(&this->dungeon_id_, v43, v47);
                            this->dungeon_id_ = v45;
                            v48 = *(_DWORD *)(v4 + 96);
                            v49 = *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000);
                            if ( v49 != 0 && v49 <= 3 )
                            {
                              LOBYTE(v43) = v49 != 0;
                              __asan_report_store4(&this->stage_id_, v43, &this->stage_id_);
                            }
                            this->stage_id_ = v48;
                            v50 = ((_BYTE)this + 76) & 7;
                            v51 = (*(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v50 >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000));
                            if ( (_BYTE)v51 )
                              __asan_report_store1(&this->is_valid_, v50, v51);
                            this->is_valid_ = 1;
                            if ( *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
                              && *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
                            {
                              __asan_report_store4(&this->cur_cell_id_, v50, &this->cur_cell_id_);
                            }
                            this->cur_cell_id_ = 0;
                            v52 = *(_DWORD *)(v4 + 64);
                            v53 = *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000);
                            if ( v53 != 0 && v53 <= 3 )
                            {
                              LOBYTE(v50) = v53 != 0;
                              __asan_report_store4(
                                &this->dungeon_weight_config_id_,
                                v50,
                                &this->dungeon_weight_config_id_);
                            }
                            this->dungeon_weight_config_id_ = v52;
                            std::weak_ptr<DungeonScene>::operator=<DungeonScene>(
                              &this->next_dungeon_scene_wtr_,
                              (const std::shared_ptr<DungeonScene> *)(v4 + 144));
                            *(_DWORD *)(v4 + 112) = 0;
                            *(_DWORD *)(v4 + 116) = 0;
                            *(_DWORD *)(v4 + 120) = 0;
                            if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                              __asan_report_load8(&this->activity_);
                            *(_DWORD *)(v4 + 112) = BaseActivity::getActivityId(this->activity_);
                            if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
                              && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
                            {
                              __asan_report_load4(&this->stage_id_);
                            }
                            *(_DWORD *)(v4 + 116) = this->stage_id_;
                            if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
                              && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
                            {
                              __asan_report_load4(&this->cur_level_);
                            }
                            *(_DWORD *)(v4 + 120) = this->cur_level_;
                            v54 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 144));
                            std::function<void ()(Player &,DungeonScene &,proto::DungeonSettleNotify &)>::function<RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel(unsigned int,std::vector<unsigned long> const&,std::vector<unsigned long> const&)::{lambda(Player &,DungeonScene &,proto::DungeonSettleNotify &)#2},void,void>(
                              (std::function<void(Player&,DungeonScene&,proto::DungeonSettleNotify&)> *const)&v72,
                              (RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel::<lambda(Player&, DungeonScene&, proto::DungeonSettleNotify&)>)this);
                            DungeonScene::registerDungeonSettleCallback(v54, (DungeonSettleCallback *)&v72);
                            std::function<void ()(Player &,DungeonScene &,proto::DungeonSettleNotify &)>::~function((std::function<void(Player&,DungeonScene&,proto::DungeonSettleNotify&)> *const)&v72);
                            v55 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 144));
                            std::function<void ()(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)>::function<RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel(unsigned int,std::vector<unsigned long> const&,std::vector<unsigned long> const&)::{lambda(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)#3},void,void>(
                              (std::function<void(Player&,DungeonScene&,Challenge&,proto::DungeonChallengeFinishNotify&)> *const)&v72,
                              (RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel::<lambda(Player&, DungeonScene&, Challenge&, proto::DungeonChallengeFinishNotify&)>)this);
                            DungeonScene::registerChallengeSettleCallback(v55, (ChallengeSettleCallback *)&v72);
                            std::function<void ()(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)>::~function((std::function<void(Player&,DungeonScene&,Challenge&,proto::DungeonChallengeFinishNotify&)> *const)&v72);
                            ServiceBox::findService<GameserverService>();
                            GameserverService::getConfig((GameserverService *const)&v71);
                            p_revise_level_grow_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v71)->design_config.txt_config_mgr.revise_level_grow_config_mgr;
                            if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                              __asan_report_load8(&this->activity_);
                            InitWorldLevel = RoguelikeDungeonActivity::getInitWorldLevel(this->activity_);
                            if ( *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3) + 0x7FFF8000) != 0
                              && (char)((((_BYTE)stage_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3)
                                                                                              + 0x7FFF8000) )
                            {
                              __asan_report_load4(&stage_config_ptr->revise_level_id);
                            }
                            revise_level = ReviseLevelGrowExcelConfigMgr::findReviseLevel(
                                             p_revise_level_grow_config_mgr,
                                             stage_config_ptr->revise_level_id,
                                             InitWorldLevel);
                            std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v71);
                            v58 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 144));
                            DungeonScene::setReviseLevel(v58, revise_level);
                            v59 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 144));
                            DungeonScene::setDungeonExtraData<RogueDungeonContext>(
                              v59,
                              (const RogueDungeonContext *)(v4 + 112));
                            common::tools::ScopedCommitter::commit((common::tools::ScopedCommitter *const)(v4 + 176));
                            v7 = 0;
                          }
                        }
                      }
                    }
                  }
                  std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v4 + 144));
                }
              }
            }
            common::tools::ScopedCommitter::~ScopedCommitter((common::tools::ScopedCommitter *const)(v4 + 176));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v72,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "enterInitDungeonLevel",
              459);
            v18 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                    &v72,
                    (const char (*)[47])"[ROGUE] stage_config_ptr is nullptr, stage_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, (const unsigned int *)(v4 + 96));
            common::milog::MiLogStream::~MiLogStream(&v72);
            v7 = -1;
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v72,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "enterInitDungeonLevel",
            453);
          v16 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
                  &v72,
                  (const char (*)[72])"[ROGUE] dungeon_weight_config_ptr is nullptr, dungeon_weight_config_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, (const unsigned int *)(v4 + 64));
          common::milog::MiLogStream::~MiLogStream(&v72);
          v7 = -1;
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v72,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "enterInitDungeonLevel",
        435);
      v9 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
             &v72,
             (const char (*)[40])"[ROGUE] rogue stage not open, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v4 + 96));
      common::milog::MiLogStream::~MiLogStream(&v72);
      v7 = -1;
    }
  }
  result = v7;
  if ( v73 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 464: range 0000000015928C02-0000000015928C45
void __cdecl RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel(unsigned int,std::vector<unsigned long> const&,std::vector<unsigned long> const&)::{lambda(void)#1}::operator()(
        const RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel::<lambda()> *const __closure)
{
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  RogueLikeDungeonRuntimeMgr::revertDungeonInitData(__closure->__this, 1);
};

// Line 548: range 0000000015928C46-0000000015928C9B
void __cdecl RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel(unsigned int,std::vector<unsigned long> const&,std::vector<unsigned long> const&)::{lambda(Player &,DungeonScene &,proto::DungeonSettleNotify &)#2}::operator()(
        const RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel::<lambda(Player&, DungeonScene&, proto::DungeonSettleNotify&)> *const __closure,
        Player *player,
        DungeonScene *dungeon_scene,
        proto::DungeonSettleNotify *notify)
{
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  RogueLikeDungeonRuntimeMgr::onDungeonSettle(__closure->__this, dungeon_scene, notify);
};

// Line 552: range 0000000015928C9C-0000000015928CF5
void __cdecl RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel(unsigned int,std::vector<unsigned long> const&,std::vector<unsigned long> const&)::{lambda(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)#3}::operator()(
        const RogueLikeDungeonRuntimeMgr::enterInitDungeonLevel::<lambda(Player&, DungeonScene&, Challenge&, proto::DungeonChallengeFinishNotify&)> *const __closure,
        Player *player,
        DungeonScene *dungeon_scene,
        Challenge *challenge,
        proto::DungeonChallengeFinishNotify *notify)
{
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  RogueLikeDungeonRuntimeMgr::onChallengeSettle(__closure->__this, dungeon_scene, challenge);
};

// Line 564: range 000000001592A4D4-000000001592BAF9
__int64 __fastcall RogueLikeDungeonRuntimeMgr::resumeRogueDungeon(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t stage_id)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // rax
  unsigned int v6; // r14d
  common::milog::MiLogStream *v7; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  RogueTeam *p_rogue_team; // rdx
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rcx
  common::milog::MiLogStream *v13; // rax
  GameserverService *v14; // rax
  DungeonMgr *p_dungeon_mgr; // r14
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rax
  uint32_t DungeonId; // ecx
  char v18; // al
  common::milog::MiLogStream *v19; // r14
  data::RogueCellType *p_type; // rax
  bool v21; // r14
  common::milog::MiLogStream *v22; // rax
  bool v23; // r14
  common::milog::MiLogStream *v24; // rax
  unsigned __int64 v25; // rax
  unsigned __int64 v26; // rdx
  DungeonScene *v27; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v28; // rax
  uint32_t SceneId; // esi
  PlayerDungeonComp *DungeonComp; // r14
  PlayerSceneComp *SceneComp; // rax
  uint32_t CurSceneId; // r15d
  bool v33; // r14
  DungeonScene *v34; // r14
  DungeonScene *v35; // r14
  ReviseLevelGrowExcelConfigMgr *p_revise_level_grow_config_mgr; // r14
  uint32_t InitWorldLevel; // ecx
  DungeonScene *v38; // rax
  DungeonScene *v39; // rax
  __int64 result; // rax
  unsigned int val; // [rsp+38h] [rbp-1C8h] BYREF
  uint32_t revise_level; // [rsp+3Ch] [rbp-1C4h]
  std::map<unsigned int,RogueCell>::iterator __for_begin; // [rsp+40h] [rbp-1C0h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+48h] [rbp-1B8h] BYREF
  const data::RogueStageExcelConfig *stage_config_ptr; // [rsp+50h] [rbp-1B0h]
  const data::RoguelikeDungeonWeightExcelConfig *dungeon_weight_config_ptr; // [rsp+58h] [rbp-1A8h]
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+60h] [rbp-1A0h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+68h] [rbp-198h]
  std::tuple_element<0,std::pair<Vector3,Vector3> >::type *pos; // [rsp+70h] [rbp-190h]
  std::tuple_element<1,std::pair<Vector3,Vector3> >::type *rot; // [rsp+78h] [rbp-188h]
  DungeonSceneTeam *dungeon_scene_team; // [rsp+80h] [rbp-180h]
  std::pair<unsigned int const,RogueCell> *__in; // [rsp+88h] [rbp-178h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *_; // [rsp+90h] [rbp-170h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+98h] [rbp-168h]
  std::shared_ptr<Player> v55; // [rsp+A0h] [rbp-160h] BYREF
  std::pair<Vector3,Vector3> v56; // [rsp+B0h] [rbp-150h] BYREF
  common::milog::MiLogStream v57; // [rsp+D0h] [rbp-130h] BYREF
  char v58[272]; // [rsp+F0h] [rbp-110h] BYREF

  v2 = (unsigned __int64)v58;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(224LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 48 4 7 ret:587 64 4 12 stage_id:563 80 12 19 dungeon_context:672 112 16 21 dungeon_scene_ptr:6"
                        "05 144 40 25 dungeon_data_commiter:612";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::resumeRogueDungeon;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = 61956;
  v4[536862722] = 0x4000000;
  v4[536862723] = 62194;
  v4[536862724] = 62194;
  v4[536862725] = -218103808;
  v4[536862726] = -202116109;
  *(_DWORD *)(v2 + 64) = stage_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v57,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "resumeRogueDungeon",
      567);
    v5 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
           &v57,
           (const char (*)[35])"[ROGUE] no valid record, stage_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, (const unsigned int *)(v2 + 64));
    common::milog::MiLogStream::~MiLogStream(&v57);
    v6 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->stage_id_);
    }
    if ( this->stage_id_ == *(_DWORD *)(v2 + 64) )
    {
      if ( std::vector<unsigned long>::empty(&this->rogue_team_.onstage_mirror_avatar_guid_vec) )
      {
        common::milog::MiLogStream::create(
          &v57,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "resumeRogueDungeon",
          577);
        common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
          &v57,
          (const char (*)[32])"[ROGUE] no valid onstage avatar");
        common::milog::MiLogStream::~MiLogStream(&v57);
        v6 = -1;
      }
      else
      {
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v55);
        v8 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v55);
        stage_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueStageExcelConfig(
                             &v8->design_config.txt_config_mgr.activity_rogue_config_mgr,
                             *(_DWORD *)(v2 + 64));
        std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v55);
        if ( stage_config_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3)
                                                                + 0x7FFF8000) )
          {
            __asan_report_load4(&this->dungeon_id_);
          }
          *(_DWORD *)(v2 + 48) = RogueLikeDungeonRuntimeMgr::checkEnterDungeon(this, this->dungeon_id_);
          if ( *(_DWORD *)(v2 + 48) )
          {
            common::milog::MiLogStream::create(
              &v57,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "resumeRogueDungeon",
              590);
            v10 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                    &v57,
                    (const char (*)[39])"[ROGUE] checkEnterDungeon failed, ret:");
            common::milog::MiLogStream::operator<<<int,(int *)0>(v10, (const int *)(v2 + 48));
            common::milog::MiLogStream::~MiLogStream(&v57);
            v6 = *(_DWORD *)(v2 + 48);
          }
          else
          {
            p_rogue_team = &this->rogue_team_;
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->player_);
            if ( RogueTeam::isAllOnstageAvatarsDead(p_rogue_team, this->player_) )
            {
              v6 = 10051;
            }
            else
            {
              ServiceBox::findService<GameserverService>();
              GameserverService::getConfig((GameserverService *const)&v55);
              p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v55)->design_config.txt_config_mgr.activity_rogue_config_mgr;
              if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4(&this->dungeon_weight_config_id_);
              }
              dungeon_weight_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRoguelikeDungeonWeightExcelConfig(
                                            p_activity_rogue_config_mgr,
                                            this->dungeon_weight_config_id_);
              std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v55);
              if ( dungeon_weight_config_ptr )
              {
                v14 = ServiceBox::findService<GameserverService>();
                p_dungeon_mgr = &GameserverService::getGameThreadLocal(v14)->dungeon_mgr;
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->player_);
                toThisPtr<Player>((Player *)&v55);
                if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
                  && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3)
                                                                      + 0x7FFF8000) )
                {
                  __asan_report_load4(&this->dungeon_id_);
                }
                DungeonMgr::createDungeon(
                  (DungeonMgr *const)(v2 + 112),
                  (uint32_t)p_dungeon_mgr,
                  (PlayerPtr *)this->dungeon_id_);
                std::shared_ptr<Player>::~shared_ptr(&v55);
                if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v2 + 112)) )
                  goto LABEL_36;
                v16 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 112));
                DungeonId = DungeonScene::getDungeonId(v16);
                if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
                  && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3)
                                                                      + 0x7FFF8000) )
                {
                  __asan_report_load4(&this->dungeon_id_);
                }
                if ( DungeonId == this->dungeon_id_ )
                  v18 = 0;
                else
LABEL_36:
                  v18 = 1;
                if ( v18 )
                {
                  common::milog::MiLogStream::create(
                    &v57,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "resumeRogueDungeon",
                    608);
                  v19 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                          &v57,
                          (const char (*)[42])"[ROGUE] player enter dungeon failed, uid:");
                  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->player_);
                  val = Player::getUid(this->player_);
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, &val);
                  common::milog::MiLogStream::~MiLogStream(&v57);
                  v6 = -1;
                }
                else
                {
                  std::function<void ()(void)>::function<RogueLikeDungeonRuntimeMgr::resumeRogueDungeon(unsigned int)::{lambda(void)#1},void,void>(
                    (std::function<void()> *const)&v57,
                    (RogueLikeDungeonRuntimeMgr::resumeRogueDungeon::<lambda()>)this);
                  common::tools::ScopedCommitter::ScopedCommitter(
                    (common::tools::ScopedCommitter *const)(v2 + 144),
                    (std::function<void()> *)&v57);
                  std::function<void ()(void)>::~function((std::function<void()> *const)&v57);
                  __for_range = &this->rogue_cell_map_;
                  __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
                  __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
                  while ( std::operator!=(&__for_begin, &__for_end) )
                  {
                    __in = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
                    _ = std::get<0ul,unsigned int const,RogueCell>(__in);
                    cell = std::get<1ul,unsigned int const,RogueCell>(__in);
                    p_type = &cell->type;
                    if ( *(_BYTE *)(((unsigned __int64)p_type >> 3) + 0x7FFF8000) != 0
                      && (char)(((unsigned __int8)p_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_type >> 3)
                                                                               + 0x7FFF8000) )
                    {
                      __asan_report_load4(p_type);
                    }
                    if ( cell->type == ROGUE_CELL_TYPE_ELITE
                      || cell->type == ROGUE_CELL_TYPE_NORMAL
                      || cell->type == ROGUE_CELL_TYPE_BOSS )
                    {
                      if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
                        && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
                      {
                        __asan_report_load4(&cell->state);
                      }
                      if ( cell->state == ROGUE_CELL_BATTLE )
                        cell->state = ROGUE_CELL_NONE;
                    }
                    std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
                  }
                  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->activity_);
                  misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
                  if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
                  {
                    __asan_report_load4(&this->cur_level_);
                  }
                  RoguelikeMiscMgr::recoverRoguelikeDungeonMiscData(misc_mgr, this->cur_level_);
                  std::shared_ptr<DungeonScene>::shared_ptr(
                    (std::shared_ptr<DungeonScene> *const)&v55,
                    (const std::shared_ptr<DungeonScene> *)(v2 + 112));
                  if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) <= 3 )
                  {
                    __asan_report_load4(&this->dungeon_weight_config_id_);
                  }
                  v21 = RogueLikeDungeonRuntimeMgr::buildDungeon(
                          this,
                          this->dungeon_weight_config_id_,
                          (DungeonScenePtr *)&v55) != 0;
                  std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v55);
                  if ( v21 )
                  {
                    common::milog::MiLogStream::create(
                      &v57,
                      &common::milog::MiLogDefault::default_log_obj_,
                      3u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "resumeRogueDungeon",
                      633);
                    v22 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                            &v57,
                            (const char (*)[41])"[ROGUE] buildDungeon failed, dungeon_id:");
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &this->dungeon_id_);
                    common::milog::MiLogStream::~MiLogStream(&v57);
                    v6 = -1;
                  }
                  else
                  {
                    std::shared_ptr<DungeonScene>::shared_ptr(
                      (std::shared_ptr<DungeonScene> *const)&v55,
                      (const std::shared_ptr<DungeonScene> *)(v2 + 112));
                    v23 = RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(this, (DungeonScenePtr *)&v55) != 0;
                    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v55);
                    if ( v23 )
                    {
                      common::milog::MiLogStream::create(
                        &v57,
                        &common::milog::MiLogDefault::default_log_obj_,
                        3u,
                        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                        "resumeRogueDungeon",
                        639);
                      v24 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                              &v57,
                              (const char (*)[41])"[ROGUE] buildDungeon failed, dungeon_id:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v24, &this->dungeon_id_);
                      common::milog::MiLogStream::~MiLogStream(&v57);
                      v6 = -1;
                    }
                    else
                    {
                      if ( Vector3::isZero(&this->last_player_pos_) )
                      {
                        v25 = (unsigned __int64)std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 112));
                        if ( *(_BYTE *)((v25 >> 3) + 0x7FFF8000) )
                          v25 = __asan_report_load8(v25);
                        v26 = *(_QWORD *)v25 + 136LL;
                        if ( *(_BYTE *)((v26 >> 3) + 0x7FFF8000) )
                          v25 = __asan_report_load8(*(_QWORD *)v25 + 136LL);
                        (*(void (__fastcall **)(std::pair<Vector3,Vector3> *, unsigned __int64))v26)(&v56, v25);
                        pos = std::get<0ul,Vector3,Vector3>(&v56);
                        rot = std::get<1ul,Vector3,Vector3>(&v56);
                        if ( (((unsigned __int8)this + 52) & 7) >= *(_BYTE *)(((unsigned __int64)&this->last_player_pos_ >> 3)
                                                                            + 0x7FFF8000)
                          && *(_BYTE *)(((unsigned __int64)&this->last_player_pos_ >> 3) + 0x7FFF8000) != 0
                          || *(_BYTE *)((((unsigned __int64)&this->last_player_pos_.z + 3) >> 3) + 0x7FFF8000) != 0
                          && (((unsigned __int8)this + 63) & 7) >= *(_BYTE *)((((unsigned __int64)&this->last_player_pos_.z
                                                                              + 3) >> 3)
                                                                            + 0x7FFF8000) )
                        {
                          __asan_report_store_n(&this->last_player_pos_, 12LL);
                        }
                        if ( ((unsigned __int8)pos & 7) >= *(_BYTE *)(((unsigned __int64)pos >> 3) + 0x7FFF8000)
                          && *(_BYTE *)(((unsigned __int64)pos >> 3) + 0x7FFF8000) != 0
                          || *(_BYTE *)((((unsigned __int64)&pos->z + 3) >> 3) + 0x7FFF8000) != 0
                          && (((unsigned __int8)pos + 11) & 7) >= *(_BYTE *)((((unsigned __int64)&pos->z + 3) >> 3)
                                                                           + 0x7FFF8000) )
                        {
                          __asan_report_load_n(pos, 12LL);
                        }
                        this->last_player_pos_ = *pos;
                        if ( *(char *)(((unsigned __int64)&this->last_player_rot_ >> 3) + 0x7FFF8000) < 0
                          || *(_BYTE *)((((unsigned __int64)&this->last_player_rot_.z + 3) >> 3) + 0x7FFF8000) != 0
                          && (((unsigned __int8)this + 75) & 7) >= *(_BYTE *)((((unsigned __int64)&this->last_player_rot_.z
                                                                              + 3) >> 3)
                                                                            + 0x7FFF8000) )
                        {
                          __asan_report_store_n(&this->last_player_rot_, 12LL);
                        }
                        if ( ((unsigned __int8)rot & 7) >= *(_BYTE *)(((unsigned __int64)rot >> 3) + 0x7FFF8000)
                          && *(_BYTE *)(((unsigned __int64)rot >> 3) + 0x7FFF8000) != 0
                          || *(_BYTE *)((((unsigned __int64)&rot->z + 3) >> 3) + 0x7FFF8000) != 0
                          && (((unsigned __int8)rot + 11) & 7) >= *(_BYTE *)((((unsigned __int64)&rot->z + 3) >> 3)
                                                                           + 0x7FFF8000) )
                        {
                          __asan_report_load_n(rot, 12LL);
                        }
                        this->last_player_rot_ = *rot;
                      }
                      v27 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 112));
                      dungeon_scene_team = DungeonScene::getDungeonSceneTeam(v27);
                      v28 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 112));
                      SceneId = Scene::getSceneId((const Scene *const)v28);
                      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                        __asan_report_load8(&this->player_);
                      DungeonSceneTeam::initSceneTeam(dungeon_scene_team, this->player_, SceneId);
                      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                        __asan_report_load8(&this->player_);
                      DungeonComp = Player::getDungeonComp(this->player_);
                      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                        __asan_report_load8(&this->player_);
                      SceneComp = Player::getSceneComp(this->player_);
                      CurSceneId = PlayerSceneComp::getCurSceneId(SceneComp);
                      std::shared_ptr<DungeonScene>::shared_ptr(
                        (std::shared_ptr<DungeonScene> *const)&v55,
                        (const std::shared_ptr<DungeonScene> *)(v2 + 112));
                      v33 = PlayerDungeonComp::enterDungeon(
                              DungeonComp,
                              (DungeonScenePtr *)&v55,
                              CurSceneId,
                              0,
                              &this->last_player_pos_,
                              &this->last_player_rot_) != 0;
                      std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v55);
                      if ( v33 )
                      {
                        common::milog::MiLogStream::create(
                          &v57,
                          &common::milog::MiLogDefault::default_log_obj_,
                          3u,
                          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                          "resumeRogueDungeon",
                          656);
                        common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                          &v57,
                          (const char (*)[28])"[ROGUE] enterDungeon failed");
                        common::milog::MiLogStream::~MiLogStream(&v57);
                        v6 = -1;
                      }
                      else
                      {
                        std::weak_ptr<DungeonScene>::operator=<DungeonScene>(
                          &this->next_dungeon_scene_wtr_,
                          (const std::shared_ptr<DungeonScene> *)(v2 + 112));
                        v34 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 112));
                        std::function<void ()(Player &,DungeonScene &,proto::DungeonSettleNotify &)>::function<RogueLikeDungeonRuntimeMgr::resumeRogueDungeon(unsigned int)::{lambda(Player &,DungeonScene &,proto::DungeonSettleNotify &)#2},void,void>(
                          (std::function<void(Player&,DungeonScene&,proto::DungeonSettleNotify&)> *const)&v57,
                          (RogueLikeDungeonRuntimeMgr::resumeRogueDungeon::<lambda(Player&, DungeonScene&, proto::DungeonSettleNotify&)>)this);
                        DungeonScene::registerDungeonSettleCallback(v34, (DungeonSettleCallback *)&v57);
                        std::function<void ()(Player &,DungeonScene &,proto::DungeonSettleNotify &)>::~function((std::function<void(Player&,DungeonScene&,proto::DungeonSettleNotify&)> *const)&v57);
                        v35 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 112));
                        std::function<void ()(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)>::function<RogueLikeDungeonRuntimeMgr::resumeRogueDungeon(unsigned int)::{lambda(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)#3},void,void>(
                          (std::function<void(Player&,DungeonScene&,Challenge&,proto::DungeonChallengeFinishNotify&)> *const)&v57,
                          (RogueLikeDungeonRuntimeMgr::resumeRogueDungeon::<lambda(Player&, DungeonScene&, Challenge&, proto::DungeonChallengeFinishNotify&)>)this);
                        DungeonScene::registerChallengeSettleCallback(v35, (ChallengeSettleCallback *)&v57);
                        std::function<void ()(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)>::~function((std::function<void(Player&,DungeonScene&,Challenge&,proto::DungeonChallengeFinishNotify&)> *const)&v57);
                        ServiceBox::findService<GameserverService>();
                        GameserverService::getConfig((GameserverService *const)&v55);
                        p_revise_level_grow_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v55)->design_config.txt_config_mgr.revise_level_grow_config_mgr;
                        if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                          __asan_report_load8(&this->activity_);
                        InitWorldLevel = RoguelikeDungeonActivity::getInitWorldLevel(this->activity_);
                        if ( *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3) + 0x7FFF8000) != 0
                          && (char)((((_BYTE)stage_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3)
                                                                                          + 0x7FFF8000) )
                        {
                          __asan_report_load4(&stage_config_ptr->revise_level_id);
                        }
                        revise_level = ReviseLevelGrowExcelConfigMgr::findReviseLevel(
                                         p_revise_level_grow_config_mgr,
                                         stage_config_ptr->revise_level_id,
                                         InitWorldLevel);
                        std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v55);
                        v38 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 112));
                        DungeonScene::setReviseLevel(v38, revise_level);
                        *(_DWORD *)(v2 + 80) = 0;
                        *(_DWORD *)(v2 + 84) = 0;
                        *(_DWORD *)(v2 + 88) = 0;
                        if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                          __asan_report_load8(&this->activity_);
                        *(_DWORD *)(v2 + 80) = BaseActivity::getActivityId(this->activity_);
                        if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
                          && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
                        {
                          __asan_report_load4(&this->stage_id_);
                        }
                        *(_DWORD *)(v2 + 84) = this->stage_id_;
                        if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
                          && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
                        {
                          __asan_report_load4(&this->cur_level_);
                        }
                        *(_DWORD *)(v2 + 88) = this->cur_level_;
                        v39 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 112));
                        DungeonScene::setDungeonExtraData<RogueDungeonContext>(
                          v39,
                          (const RogueDungeonContext *)(v2 + 80));
                        common::tools::ScopedCommitter::commit((common::tools::ScopedCommitter *const)(v2 + 144));
                        v6 = 0;
                      }
                    }
                  }
                  common::tools::ScopedCommitter::~ScopedCommitter((common::tools::ScopedCommitter *const)(v2 + 144));
                }
                std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 112));
              }
              else
              {
                common::milog::MiLogStream::create(
                  &v57,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "resumeRogueDungeon",
                  601);
                v13 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
                        &v57,
                        (const char (*)[72])"[ROGUE] dungeon_weight_config_ptr is nullptr, dungeon_weight_config_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v13,
                  &this->dungeon_weight_config_id_);
                common::milog::MiLogStream::~MiLogStream(&v57);
                v6 = -1;
              }
            }
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v57,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "resumeRogueDungeon",
            583);
          v9 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                 &v57,
                 (const char (*)[47])"[ROGUE] stage_config_ptr is nullptr, stage_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v2 + 64));
          common::milog::MiLogStream::~MiLogStream(&v57);
          v6 = -1;
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v57,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "resumeRogueDungeon",
        572);
      v7 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
             &v57,
             (const char (*)[40])"[ROGUE] stage_id not matched, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v2 + 64));
      common::milog::MiLogStream::~MiLogStream(&v57);
      v6 = -1;
    }
  }
  result = v6;
  if ( v58 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 612: range 000000001592A3E4-000000001592A422
void __cdecl RogueLikeDungeonRuntimeMgr::resumeRogueDungeon(unsigned int)::{lambda(void)#1}::operator()(
        const RogueLikeDungeonRuntimeMgr::resumeRogueDungeon::<lambda()> *const __closure)
{
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  RogueLikeDungeonRuntimeMgr::revertDungeonRuntimeData(__closure->__this);
};

// Line 661: range 000000001592A424-000000001592A479
void __cdecl RogueLikeDungeonRuntimeMgr::resumeRogueDungeon(unsigned int)::{lambda(Player &,DungeonScene &,proto::DungeonSettleNotify &)#2}::operator()(
        const RogueLikeDungeonRuntimeMgr::resumeRogueDungeon::<lambda(Player&, DungeonScene&, proto::DungeonSettleNotify&)> *const __closure,
        Player *player,
        DungeonScene *dungeon_scene,
        proto::DungeonSettleNotify *notify)
{
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  RogueLikeDungeonRuntimeMgr::onDungeonSettle(__closure->__this, dungeon_scene, notify);
};

// Line 665: range 000000001592A47A-000000001592A4D3
void __cdecl RogueLikeDungeonRuntimeMgr::resumeRogueDungeon(unsigned int)::{lambda(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)#3}::operator()(
        const RogueLikeDungeonRuntimeMgr::resumeRogueDungeon::<lambda(Player&, DungeonScene&, Challenge&, proto::DungeonChallengeFinishNotify&)> *const __closure,
        Player *player,
        DungeonScene *dungeon_scene,
        Challenge *challenge,
        proto::DungeonChallengeFinishNotify *notify)
{
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  RogueLikeDungeonRuntimeMgr::onChallengeSettle(__closure->__this, dungeon_scene, challenge);
};

// Line 683: range 000000001592BBAA-000000001592CDDF
__int64 __fastcall RogueLikeDungeonRuntimeMgr::enterDungeonLevel(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t stage_id,
        uint32_t level_id,
        bool is_resume)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  const ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  unsigned int v12; // r14d
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  common::milog::MiLogStream *v14; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  GameserverService *v19; // rax
  uint32_t v20; // r14d
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v23; // r14
  bool v24; // r14
  common::milog::MiLogStream *v25; // rax
  bool v26; // r14
  common::milog::MiLogStream *v27; // rax
  uint32_t v28; // r14d
  common::milog::MiLogStream *v29; // rax
  DungeonScene *v30; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v31; // rax
  uint32_t SceneId; // esi
  PlayerDungeonComp *DungeonComp; // r14
  PlayerSceneComp *SceneComp; // rax
  uint32_t CurSceneId; // r15d
  std::shared_ptr<Player> *v36; // rsi
  bool v37; // r14
  uint32_t v38; // ecx
  char v39; // dl
  __int64 v40; // rdx
  uint32_t v41; // ecx
  char v42; // al
  __int64 v43; // rsi
  __int64 v44; // rdx
  uint32_t v45; // ecx
  char v46; // al
  DungeonScene *v47; // r14
  DungeonScene *v48; // r14
  ReviseLevelGrowExcelConfigMgr *p_revise_level_grow_config_mgr; // r14
  uint32_t InitWorldLevel; // ecx
  DungeonScene *v51; // rax
  DungeonScene *v52; // rax
  __int64 result; // rax
  unsigned int val; // [rsp+24h] [rbp-12Ch] BYREF
  int32_t ret; // [rsp+28h] [rbp-128h]
  uint32_t revise_level; // [rsp+2Ch] [rbp-124h]
  const data::RoguelikeDungeonWeightExcelConfig *dungeon_weight_config_ptr; // [rsp+30h] [rbp-120h]
  const data::RogueStageExcelConfig *stage_config_ptr; // [rsp+38h] [rbp-118h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+40h] [rbp-110h]
  DungeonSceneTeam *dungeon_scene_team; // [rsp+48h] [rbp-108h]
  std::shared_ptr<Player> v64; // [rsp+50h] [rbp-100h] BYREF
  common::milog::MiLogStream v65; // [rsp+60h] [rbp-F0h] BYREF
  char v66[208]; // [rsp+80h] [rbp-D0h] BYREF

  v4 = (unsigned __int64)v66;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_2(160LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "5 48 4 14 dungeon_id:690 64 4 28 dungeon_weight_config_id:691 80 4 12 stage_id:682 96 12 19 dung"
                        "eon_context:768 128 16 21 dungeon_scene_ptr:728";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::enterDungeonLevel;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -234556924;
  v6[536862723] = -219020288;
  v6[536862724] = -202178560;
  *(_DWORD *)(v4 + 80) = stage_id;
  common::milog::MiLogStream::create(
    &v65,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
    "enterDungeonLevel",
    685);
  common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
    &v65,
    (const char (*)[47])"[ROGUE] revert init data when enter next level");
  common::milog::MiLogStream::~MiLogStream(&v65);
  RogueLikeDungeonRuntimeMgr::revertDungeonInitData(this, 0);
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->cur_level_, 0LL, &this->cur_level_);
  }
  this->cur_level_ = level_id;
  *(_DWORD *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 64) = 0;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v64);
  p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v64)->design_config.txt_config_mgr.activity_rogue_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
  {
    p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&this->cur_level_;
    __asan_report_load4(&this->cur_level_);
  }
  v8 = ActivityRogueExcelConfigMgr::randomDungeonIdByStageAndLevel(
         p_activity_rogue_config_mgr,
         *(_DWORD *)(v4 + 80),
         this->cur_level_,
         (uint32_t *)(v4 + 48),
         (uint32_t *)(v4 + 64)) != 0;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v64);
  if ( v8 )
  {
    common::milog::MiLogStream::create(
      &v65,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "enterDungeonLevel",
      694);
    v9 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
           &v65,
           (const char (*)[58])"[ROGUE]  randomDungeonIdByStageAndLevel failed, stage_id:");
    v10 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v4 + 80));
    v11 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v10, (const char (*)[12])", level_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &this->cur_level_);
    common::milog::MiLogStream::~MiLogStream(&v65);
    v12 = -1;
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v64);
    v13 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v64);
    dungeon_weight_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRoguelikeDungeonWeightExcelConfig(
                                  &v13->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                  *(_DWORD *)(v4 + 64));
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v64);
    if ( dungeon_weight_config_ptr )
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v64);
      v15 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v64);
      stage_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueStageExcelConfig(
                           &v15->design_config.txt_config_mgr.activity_rogue_config_mgr,
                           *(_DWORD *)(v4 + 80));
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v64);
      if ( stage_config_ptr )
      {
        common::milog::MiLogStream::create(
          &v65,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "enterDungeonLevel",
          710);
        v17 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
                &v65,
                (const char (*)[27])"[ROGUE] random dungeon_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v4 + 48));
        common::milog::MiLogStream::~MiLogStream(&v65);
        ret = RogueLikeDungeonRuntimeMgr::checkEnterDungeon(this, *(_DWORD *)(v4 + 48));
        if ( ret )
        {
          common::milog::MiLogStream::create(
            &v65,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "enterDungeonLevel",
            714);
          v18 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                  &v65,
                  (const char (*)[46])"[ROGUE] checkEnterDungeon failed, dungeon_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, (const unsigned int *)(v4 + 48));
          common::milog::MiLogStream::~MiLogStream(&v65);
          v12 = ret;
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->activity_);
          misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
          if ( !is_resume )
            RoguelikeMiscMgr::initNextLevelRoguelikeDungeonMiscData(misc_mgr, level_id);
          else
            RoguelikeMiscMgr::recoverRoguelikeDungeonMiscData(misc_mgr, level_id);
          v19 = ServiceBox::findService<GameserverService>();
          v20 = (unsigned int)GameserverService::getGameThreadLocal(v19) + 568;
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          toThisPtr<Player>((Player *)&v64);
          DungeonMgr::createDungeon((DungeonMgr *const)(v4 + 128), v20, (PlayerPtr *)*(unsigned int *)(v4 + 48));
          std::shared_ptr<Player>::~shared_ptr(&v64);
          if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v4 + 128))
            || (v21 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128)),
                DungeonScene::getDungeonId(v21) != *(_DWORD *)(v4 + 48)) )
          {
            common::milog::MiLogStream::create(
              &v65,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "enterDungeonLevel",
              731);
            v23 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                    &v65,
                    (const char (*)[42])"[ROGUE] player enter dungeon failed, uid:");
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->player_);
            val = Player::getUid(this->player_);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v23, &val);
            common::milog::MiLogStream::~MiLogStream(&v65);
            v12 = -1;
          }
          else
          {
            std::shared_ptr<DungeonScene>::shared_ptr(
              (std::shared_ptr<DungeonScene> *const)&v64,
              (const std::shared_ptr<DungeonScene> *)(v4 + 128));
            v24 = RogueLikeDungeonRuntimeMgr::constructDungeon(
                    this,
                    *(_DWORD *)(v4 + 64),
                    *(_DWORD *)(v4 + 48),
                    (DungeonScenePtr *)&v64) != 0;
            std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v64);
            if ( v24 )
            {
              common::milog::MiLogStream::create(
                &v65,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "enterDungeonLevel",
                737);
              v25 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                      &v65,
                      (const char (*)[45])"[ROGUE] constructDungeon failed, dungeon_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v25,
                (const unsigned int *)(v4 + 48));
              common::milog::MiLogStream::~MiLogStream(&v65);
              v12 = -1;
            }
            else
            {
              std::shared_ptr<DungeonScene>::shared_ptr(
                (std::shared_ptr<DungeonScene> *const)&v64,
                (const std::shared_ptr<DungeonScene> *)(v4 + 128));
              v26 = RogueLikeDungeonRuntimeMgr::buildDungeon(this, *(_DWORD *)(v4 + 64), (DungeonScenePtr *)&v64) != 0;
              std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v64);
              if ( v26 )
              {
                common::milog::MiLogStream::create(
                  &v65,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "enterDungeonLevel",
                  743);
                v27 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                        &v65,
                        (const char (*)[41])"[ROGUE] buildDungeon failed, dungeon_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v27,
                  (const unsigned int *)(v4 + 48));
                common::milog::MiLogStream::~MiLogStream(&v65);
                v12 = -1;
              }
              else
              {
                v28 = *(_DWORD *)(v4 + 64);
                std::shared_ptr<DungeonScene>::shared_ptr(
                  (std::shared_ptr<DungeonScene> *const)&v64,
                  (const std::shared_ptr<DungeonScene> *)(v4 + 128));
                LOBYTE(v28) = RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(this, (DungeonScenePtr *)&v64, v28) != 0;
                std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v64);
                if ( (_BYTE)v28 )
                {
                  common::milog::MiLogStream::create(
                    &v65,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "enterDungeonLevel",
                    749);
                  v29 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                          &v65,
                          (const char (*)[49])"[ROGUE] initDungeonBrakeages failed, dungeon_id:");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v29,
                    (const unsigned int *)(v4 + 48));
                  common::milog::MiLogStream::~MiLogStream(&v65);
                  v12 = -1;
                }
                else
                {
                  v30 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128));
                  dungeon_scene_team = DungeonScene::getDungeonSceneTeam(v30);
                  v31 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128));
                  SceneId = Scene::getSceneId((const Scene *const)v31);
                  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->player_);
                  DungeonSceneTeam::initSceneTeam(dungeon_scene_team, this->player_, SceneId);
                  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->player_);
                  DungeonComp = Player::getDungeonComp(this->player_);
                  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->player_);
                  SceneComp = Player::getSceneComp(this->player_);
                  CurSceneId = PlayerSceneComp::getCurSceneId(SceneComp);
                  std::shared_ptr<DungeonScene>::shared_ptr(
                    (std::shared_ptr<DungeonScene> *const)&v64,
                    (const std::shared_ptr<DungeonScene> *)(v4 + 128));
                  v36 = &v64;
                  v37 = PlayerDungeonComp::enterDungeon(DungeonComp, (DungeonScenePtr *)&v64, CurSceneId, 0) != 0;
                  std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v64);
                  if ( v37 )
                  {
                    common::milog::MiLogStream::create(
                      &v65,
                      &common::milog::MiLogDefault::default_log_obj_,
                      3u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "enterDungeonLevel",
                      756);
                    common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                      &v65,
                      (const char (*)[28])"[ROGUE] enterDungeon failed");
                    common::milog::MiLogStream::~MiLogStream(&v65);
                    v12 = -1;
                  }
                  else
                  {
                    v38 = *(_DWORD *)(v4 + 48);
                    v39 = *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000);
                    LOBYTE(v36) = v39 != 0;
                    v40 = (v39 != 0) & (unsigned __int8)((char)((((_BYTE)this + 44) & 7) + 3) >= v39);
                    if ( (_BYTE)v40 )
                      __asan_report_store4(&this->dungeon_id_, v36, v40);
                    this->dungeon_id_ = v38;
                    v41 = *(_DWORD *)(v4 + 80);
                    v42 = *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000);
                    if ( v42 != 0 && v42 <= 3 )
                    {
                      LOBYTE(v36) = v42 != 0;
                      __asan_report_store4(&this->stage_id_, v36, &this->stage_id_);
                    }
                    this->stage_id_ = v41;
                    v43 = ((_BYTE)this + 76) & 7;
                    v44 = (*(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v43 >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000));
                    if ( (_BYTE)v44 )
                      __asan_report_store1(&this->is_valid_, v43, v44);
                    this->is_valid_ = 0;
                    if ( *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_store4(&this->cur_cell_id_, v43, &this->cur_cell_id_);
                    }
                    this->cur_cell_id_ = 0;
                    v45 = *(_DWORD *)(v4 + 64);
                    v46 = *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000);
                    if ( v46 != 0 && v46 <= 3 )
                    {
                      LOBYTE(v43) = v46 != 0;
                      __asan_report_store4(&this->dungeon_weight_config_id_, v43, &this->dungeon_weight_config_id_);
                    }
                    this->dungeon_weight_config_id_ = v45;
                    std::weak_ptr<DungeonScene>::operator=<DungeonScene>(
                      &this->next_dungeon_scene_wtr_,
                      (const std::shared_ptr<DungeonScene> *)(v4 + 128));
                    *(_DWORD *)(v4 + 96) = 0;
                    *(_DWORD *)(v4 + 100) = 0;
                    *(_DWORD *)(v4 + 104) = 0;
                    if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                      __asan_report_load8(&this->activity_);
                    *(_DWORD *)(v4 + 96) = BaseActivity::getActivityId(this->activity_);
                    if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_load4(&this->stage_id_);
                    }
                    *(_DWORD *)(v4 + 100) = this->stage_id_;
                    if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_load4(&this->cur_level_);
                    }
                    *(_DWORD *)(v4 + 104) = this->cur_level_;
                    v47 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128));
                    std::function<void ()(Player &,DungeonScene &,proto::DungeonSettleNotify &)>::function<RogueLikeDungeonRuntimeMgr::enterDungeonLevel(unsigned int,unsigned int,bool)::{lambda(Player &,DungeonScene &,proto::DungeonSettleNotify &)#1},void,void>(
                      (std::function<void(Player&,DungeonScene&,proto::DungeonSettleNotify&)> *const)&v65,
                      (RogueLikeDungeonRuntimeMgr::enterDungeonLevel::<lambda(Player&, DungeonScene&, proto::DungeonSettleNotify&)>)this);
                    DungeonScene::registerDungeonSettleCallback(v47, (DungeonSettleCallback *)&v65);
                    std::function<void ()(Player &,DungeonScene &,proto::DungeonSettleNotify &)>::~function((std::function<void(Player&,DungeonScene&,proto::DungeonSettleNotify&)> *const)&v65);
                    v48 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128));
                    std::function<void ()(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)>::function<RogueLikeDungeonRuntimeMgr::enterDungeonLevel(unsigned int,unsigned int,bool)::{lambda(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)#2},void,void>(
                      (std::function<void(Player&,DungeonScene&,Challenge&,proto::DungeonChallengeFinishNotify&)> *const)&v65,
                      (RogueLikeDungeonRuntimeMgr::enterDungeonLevel::<lambda(Player&, DungeonScene&, Challenge&, proto::DungeonChallengeFinishNotify&)>)this);
                    DungeonScene::registerChallengeSettleCallback(v48, (ChallengeSettleCallback *)&v65);
                    std::function<void ()(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)>::~function((std::function<void(Player&,DungeonScene&,Challenge&,proto::DungeonChallengeFinishNotify&)> *const)&v65);
                    ServiceBox::findService<GameserverService>();
                    GameserverService::getConfig((GameserverService *const)&v64);
                    p_revise_level_grow_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v64)->design_config.txt_config_mgr.revise_level_grow_config_mgr;
                    if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                      __asan_report_load8(&this->activity_);
                    InitWorldLevel = RoguelikeDungeonActivity::getInitWorldLevel(this->activity_);
                    if ( *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3) + 0x7FFF8000) != 0
                      && (char)((((_BYTE)stage_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3)
                                                                                      + 0x7FFF8000) )
                    {
                      __asan_report_load4(&stage_config_ptr->revise_level_id);
                    }
                    revise_level = ReviseLevelGrowExcelConfigMgr::findReviseLevel(
                                     p_revise_level_grow_config_mgr,
                                     stage_config_ptr->revise_level_id,
                                     InitWorldLevel);
                    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v64);
                    v51 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128));
                    DungeonScene::setReviseLevel(v51, revise_level);
                    v52 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128));
                    DungeonScene::setDungeonExtraData<RogueDungeonContext>(v52, (const RogueDungeonContext *)(v4 + 96));
                    v12 = 0;
                  }
                }
              }
            }
          }
          std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v4 + 128));
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v65,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "enterDungeonLevel",
          706);
        v16 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                &v65,
                (const char (*)[47])"[ROGUE] stage_config_ptr is nullptr, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, (const unsigned int *)(v4 + 80));
        common::milog::MiLogStream::~MiLogStream(&v65);
        v12 = -1;
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v65,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "enterDungeonLevel",
        700);
      v14 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
              &v65,
              (const char (*)[72])"[ROGUE] dungeon_weight_config_ptr is nullptr, dungeon_weight_config_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v4 + 64));
      common::milog::MiLogStream::~MiLogStream(&v65);
      v12 = -1;
    }
  }
  result = v12;
  if ( v66 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 773: range 000000001592BAFA-000000001592BB4F
void __cdecl RogueLikeDungeonRuntimeMgr::enterDungeonLevel(unsigned int,unsigned int,bool)::{lambda(Player &,DungeonScene &,proto::DungeonSettleNotify &)#1}::operator()(
        const RogueLikeDungeonRuntimeMgr::enterDungeonLevel::<lambda(Player&, DungeonScene&, proto::DungeonSettleNotify&)> *const __closure,
        Player *player,
        DungeonScene *dungeon_scene,
        proto::DungeonSettleNotify *notify)
{
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  RogueLikeDungeonRuntimeMgr::onDungeonSettle(__closure->__this, dungeon_scene, notify);
};

// Line 777: range 000000001592BB50-000000001592BBA9
void __cdecl RogueLikeDungeonRuntimeMgr::enterDungeonLevel(unsigned int,unsigned int,bool)::{lambda(Player &,DungeonScene &,Challenge &,proto::DungeonChallengeFinishNotify &)#2}::operator()(
        const RogueLikeDungeonRuntimeMgr::enterDungeonLevel::<lambda(Player&, DungeonScene&, Challenge&, proto::DungeonChallengeFinishNotify&)> *const __closure,
        Player *player,
        DungeonScene *dungeon_scene,
        Challenge *challenge,
        proto::DungeonChallengeFinishNotify *notify)
{
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  RogueLikeDungeonRuntimeMgr::onChallengeSettle(__closure->__this, dungeon_scene, challenge);
};

// Line 788: range 000000001592D3A4-000000001592EF80
int32_t __cdecl RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(
        RogueLikeDungeonRuntimeMgr *const this,
        DungeonScenePtr *p_dungeon_scene_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rcx
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // r14d
  ActivityRogueExcelConfigMgr *v8; // rcx
  common::milog::MiLogStream *v9; // rax
  ReviseLevelGrowExcelConfigMgr *p_revise_level_grow_config_mgr; // r14
  uint32_t InitWorldLevel; // ecx
  LuaConfigMgr *p_lua_config_mgr; // rcx
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  Vector3 *p_pos; // rcx
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v18; // rax
  unsigned int *v19; // rcx
  const std::pair<unsigned int,unsigned int> *v20; // r8
  std::weak_ptr<Gadget> *v21; // rax
  LuaConfigMgr *v22; // rcx
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  Vector3 *v27; // rcx
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v28; // rax
  unsigned int *v29; // rcx
  const std::pair<unsigned int,unsigned int> *v30; // r8
  std::weak_ptr<Gadget> *v31; // rax
  LuaConfigMgr *v32; // rcx
  common::milog::MiLogStream *v33; // rax
  common::milog::MiLogStream *v34; // rax
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rax
  Vector3 *v37; // rcx
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  unsigned int *v39; // rcx
  const std::pair<unsigned int,unsigned int> *v40; // r8
  std::weak_ptr<Gadget> *v41; // rax
  LuaConfigMgr *v42; // rcx
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  common::milog::MiLogStream *v45; // rax
  common::milog::MiLogStream *v46; // rax
  Vector3 *v47; // rcx
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v48; // rax
  unsigned int *v49; // rcx
  const std::pair<unsigned int,unsigned int> *v50; // r8
  std::weak_ptr<Gadget> *v51; // rax
  LuaConfigMgr *v52; // rcx
  common::milog::MiLogStream *v53; // rax
  common::milog::MiLogStream *v54; // rax
  common::milog::MiLogStream *v55; // rax
  common::milog::MiLogStream *v56; // rax
  Vector3 *v57; // rcx
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v58; // rax
  unsigned int *v59; // rcx
  const std::pair<unsigned int,unsigned int> *v60; // r8
  std::weak_ptr<Gadget> *v61; // rax
  int32_t result; // eax
  unsigned int EntityId; // [rsp+18h] [rbp-208h] BYREF
  uint32_t revise_level; // [rsp+1Ch] [rbp-204h]
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-200h] BYREF
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::iterator __for_end; // [rsp+28h] [rbp-1F8h] BYREF
  const data::RoguelikeDungeonWeightExcelConfig *dungeon_weight_config_ptr; // [rsp+30h] [rbp-1F0h]
  const data::RogueStageExcelConfig *stage_config_ptr; // [rsp+38h] [rbp-1E8h]
  std::map<std::pair<unsigned int,unsigned int>,unsigned int> *__for_range; // [rsp+40h] [rbp-1E0h]
  std::set<std::pair<unsigned int,unsigned int>> *__for_range_0; // [rsp+48h] [rbp-1D8h]
  std::map<std::pair<unsigned int,unsigned int>,unsigned int> *__for_range_1; // [rsp+50h] [rbp-1D0h]
  std::map<std::pair<unsigned int,unsigned int>,unsigned int> *__for_range_2; // [rsp+58h] [rbp-1C8h]
  std::map<std::pair<unsigned int,unsigned int>,unsigned int> *__for_range_3; // [rsp+60h] [rbp-1C0h]
  const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> *v74; // [rsp+68h] [rbp-1B8h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *group_point_pair_3; // [rsp+70h] [rbp-1B0h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *gadget_id_2; // [rsp+78h] [rbp-1A8h]
  const GroupScriptConfig *group_config_ptr_3; // [rsp+80h] [rbp-1A0h]
  const PointScriptConfig *point_config_ptr_3; // [rsp+88h] [rbp-198h]
  const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> *v79; // [rsp+90h] [rbp-190h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *group_point_pair_2; // [rsp+98h] [rbp-188h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *gadget_id_1; // [rsp+A0h] [rbp-180h]
  const GroupScriptConfig *group_config_ptr_2; // [rsp+A8h] [rbp-178h]
  const PointScriptConfig *point_config_ptr_2; // [rsp+B0h] [rbp-170h]
  const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> *v84; // [rsp+B8h] [rbp-168h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *group_point_pair_1; // [rsp+C0h] [rbp-160h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *gadget_id_0; // [rsp+C8h] [rbp-158h]
  const GroupScriptConfig *group_config_ptr_1; // [rsp+D0h] [rbp-150h]
  const PointScriptConfig *point_config_ptr_1; // [rsp+D8h] [rbp-148h]
  const std::pair<unsigned int,unsigned int> *group_point_pair_0; // [rsp+E0h] [rbp-140h]
  const GroupScriptConfig *group_config_ptr_0; // [rsp+E8h] [rbp-138h]
  const PointScriptConfig *point_config_ptr_0; // [rsp+F0h] [rbp-130h]
  const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> *v92; // [rsp+F8h] [rbp-128h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *group_point_pair; // [rsp+100h] [rbp-120h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *gadget_id; // [rsp+108h] [rbp-118h]
  const GroupScriptConfig *group_config_ptr; // [rsp+110h] [rbp-110h]
  const PointScriptConfig *point_config_ptr; // [rsp+118h] [rbp-108h]
  std::shared_ptr<Config> v97; // [rsp+120h] [rbp-100h] BYREF
  common::milog::MiLogStream v98; // [rsp+130h] [rbp-F0h] BYREF
  common::milog::MiLogStream v99; // [rsp+150h] [rbp-D0h] BYREF
  char v100[176]; // [rsp+170h] [rbp-B0h] BYREF

  v2 = (unsigned __int64)v100;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 14 gadget_ptr:947 64 24 31 create_brakeable_gadget_fuc:802";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -218103808;
  v4[536862723] = -202116109;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v2 + 32));
  p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32))->design_config.txt_config_mgr.activity_rogue_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->dungeon_weight_config_id_);
  }
  dungeon_weight_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRoguelikeDungeonWeightExcelConfig(
                                p_activity_rogue_config_mgr,
                                this->dungeon_weight_config_id_);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 32));
  if ( dungeon_weight_config_ptr )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 32));
    v8 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32))->design_config.txt_config_mgr.activity_rogue_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->stage >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)dungeon_weight_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->stage >> 3)
                                                                               + 0x7FFF8000) )
    {
      __asan_report_load4(&dungeon_weight_config_ptr->stage);
    }
    stage_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueStageExcelConfig(
                         v8,
                         dungeon_weight_config_ptr->stage);
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 32));
    if ( stage_config_ptr )
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)(v2 + 32));
      p_revise_level_grow_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32))->design_config.txt_config_mgr.revise_level_grow_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->activity_);
      InitWorldLevel = RoguelikeDungeonActivity::getInitWorldLevel(this->activity_);
      if ( *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)stage_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3)
                                                                        + 0x7FFF8000) )
      {
        __asan_report_load4(&stage_config_ptr->revise_level_id);
      }
      revise_level = ReviseLevelGrowExcelConfigMgr::findReviseLevel(
                       p_revise_level_grow_config_mgr,
                       stage_config_ptr->revise_level_id,
                       InitWorldLevel);
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 32));
      std::shared_ptr<DungeonScene>::shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 64), p_dungeon_scene_ptr);
      *(_DWORD *)(v2 + 80) = revise_level;
      __for_range = &this->brakeage_group_pair_gadget_id_map_;
      __for_begin._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::begin(&this->brakeage_group_pair_gadget_id_map_)._M_node;
      __for_end._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::end(&this->brakeage_group_pair_gadget_id_map_)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v92 = std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator*(&__for_begin);
        group_point_pair = std::get<0ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v92);
        gadget_id = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v92);
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v97);
        p_lua_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v97)->design_config.lua_config_mgr;
        if ( *(_BYTE *)(((unsigned __int64)group_point_pair >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)group_point_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_point_pair >> 3)
                                                                             + 0x7FFF8000) )
        {
          __asan_report_load4(group_point_pair);
        }
        group_config_ptr = LuaConfigMgr::findGroupScriptConfig(p_lua_config_mgr, group_point_pair->first);
        std::shared_ptr<Config>::~shared_ptr(&v97);
        if ( group_config_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&group_point_pair->second >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)group_point_pair + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_point_pair->second >> 3)
                                                                           + 0x7FFF8000) )
          {
            __asan_report_load4(&group_point_pair->second);
          }
          point_config_ptr = GroupScriptConfig::findPointConfig(group_config_ptr, group_point_pair->second);
          if ( point_config_ptr )
          {
            p_pos = &point_config_ptr->pos;
            if ( *(_BYTE *)(((unsigned __int64)gadget_id >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)gadget_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)gadget_id >> 3)
                                                                          + 0x7FFF8000) )
            {
              __asan_report_load4(gadget_id);
            }
            RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(std::shared_ptr<DungeonScene>)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
              (const RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v2 + 32),
              v2 + 64,
              (const Vector3 *)*gadget_id,
              p_pos);
            if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v2 + 32)) )
            {
              common::milog::MiLogStream::create(
                &v99,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "recoverDungeonBrakeages",
                850);
              common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v99,
                (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
              common::milog::MiLogStream::~MiLogStream(&v99);
            }
            else
            {
              v18 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
              EntityId = Entity::getEntityId((const Entity *const)v18);
              std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int> const&>(
                &this->brakeages_entity_id_2_group_pair_map_,
                &EntityId,
                group_point_pair,
                v19,
                v20);
              v21 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                      &this->brakeages_group_pair_map_,
                      group_point_pair);
              std::weak_ptr<Gadget>::operator=<Gadget>(v21, (const std::shared_ptr<Gadget> *)(v2 + 32));
            }
            std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v2 + 32));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v99,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "recoverDungeonBrakeages",
              844);
            v14 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    &v99,
                    (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
            v15 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v14,
                    (const unsigned int *)group_point_pair);
            v16 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                    v15,
                    (const char (*)[12])" config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, &group_point_pair->second);
            common::milog::MiLogStream::~MiLogStream(&v99);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v98,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "recoverDungeonBrakeages",
            838);
          v13 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                  &v98,
                  (const char (*)[49])"[ROGUE] group script config not found, group_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
            v13,
            (const unsigned int *)group_point_pair);
          common::milog::MiLogStream::~MiLogStream(&v98);
        }
        std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator++(&__for_begin);
      }
      __for_range_0 = &this->blast_bucket_set_;
      __for_begin._M_node = (std::_Rb_tree_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Base_ptr)std::set<std::pair<unsigned int,unsigned int>>::begin(&this->blast_bucket_set_)._M_node;
      __for_end._M_node = (std::_Rb_tree_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Base_ptr)std::set<std::pair<unsigned int,unsigned int>>::end(__for_range_0)._M_node;
      while ( std::operator!=(
                (const std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> >::_Self *)&__for_begin,
                (const std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> >::_Self *)&__for_end) )
      {
        group_point_pair_0 = std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> > *const)&__for_begin);
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v97);
        v22 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v97)->design_config.lua_config_mgr;
        if ( *(_BYTE *)(((unsigned __int64)group_point_pair_0 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)group_point_pair_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_point_pair_0 >> 3)
                                                                               + 0x7FFF8000) )
        {
          __asan_report_load4(group_point_pair_0);
        }
        group_config_ptr_0 = LuaConfigMgr::findGroupScriptConfig(v22, group_point_pair_0->first);
        std::shared_ptr<Config>::~shared_ptr(&v97);
        if ( group_config_ptr_0 )
        {
          if ( *(_BYTE *)(((unsigned __int64)&group_point_pair_0->second >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)group_point_pair_0 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_point_pair_0->second >> 3)
                                                                             + 0x7FFF8000) )
          {
            __asan_report_load4(&group_point_pair_0->second);
          }
          point_config_ptr_0 = GroupScriptConfig::findPointConfig(group_config_ptr_0, group_point_pair_0->second);
          if ( point_config_ptr_0 )
          {
            v27 = &point_config_ptr_0->pos;
            if ( *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->blast_bucket_gadget_id >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->blast_bucket_gadget_id >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&dungeon_weight_config_ptr->blast_bucket_gadget_id);
            }
            RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(std::shared_ptr<DungeonScene>)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
              (const RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v2 + 32),
              v2 + 64,
              (const Vector3 *)dungeon_weight_config_ptr->blast_bucket_gadget_id,
              v27);
            if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v2 + 32)) )
            {
              common::milog::MiLogStream::create(
                &v99,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "recoverDungeonBrakeages",
                875);
              common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v99,
                (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
              common::milog::MiLogStream::~MiLogStream(&v99);
            }
            else
            {
              v28 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
              EntityId = Entity::getEntityId((const Entity *const)v28);
              std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int> const&>(
                &this->blast_bucket_entity_id_2_group_pair_map_,
                &EntityId,
                group_point_pair_0,
                v29,
                v30);
              v31 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                      &this->blast_bucket_group_pair_map_,
                      group_point_pair_0);
              std::weak_ptr<Gadget>::operator=<Gadget>(v31, (const std::shared_ptr<Gadget> *)(v2 + 32));
            }
            std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v2 + 32));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v99,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "recoverDungeonBrakeages",
              869);
            v24 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    &v99,
                    (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
            v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v24,
                    (const unsigned int *)group_point_pair_0);
            v26 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                    v25,
                    (const char (*)[12])" config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v26, &group_point_pair_0->second);
            common::milog::MiLogStream::~MiLogStream(&v99);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v98,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "recoverDungeonBrakeages",
            863);
          v23 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                  &v98,
                  (const char (*)[49])"[ROGUE] group script config not found, group_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
            v23,
            (const unsigned int *)group_point_pair_0);
          common::milog::MiLogStream::~MiLogStream(&v98);
        }
        std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> > *const)&__for_begin);
      }
      __for_range_1 = &this->trap_group_pair_gadget_id_map_;
      __for_begin._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::begin(&this->trap_group_pair_gadget_id_map_)._M_node;
      __for_end._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::end(__for_range_1)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v84 = std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator*(&__for_begin);
        group_point_pair_1 = std::get<0ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v84);
        gadget_id_0 = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v84);
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v97);
        v32 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v97)->design_config.lua_config_mgr;
        if ( *(_BYTE *)(((unsigned __int64)group_point_pair_1 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)group_point_pair_1 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_point_pair_1 >> 3)
                                                                               + 0x7FFF8000) )
        {
          __asan_report_load4(group_point_pair_1);
        }
        group_config_ptr_1 = LuaConfigMgr::findGroupScriptConfig(v32, group_point_pair_1->first);
        std::shared_ptr<Config>::~shared_ptr(&v97);
        if ( group_config_ptr_1 )
        {
          if ( *(_BYTE *)(((unsigned __int64)&group_point_pair_1->second >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)group_point_pair_1 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_point_pair_1->second >> 3)
                                                                             + 0x7FFF8000) )
          {
            __asan_report_load4(&group_point_pair_1->second);
          }
          point_config_ptr_1 = GroupScriptConfig::findPointConfig(group_config_ptr_1, group_point_pair_1->second);
          if ( point_config_ptr_1 )
          {
            v37 = &point_config_ptr_1->pos;
            if ( *(_BYTE *)(((unsigned __int64)gadget_id_0 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)gadget_id_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)gadget_id_0 >> 3)
                                                                            + 0x7FFF8000) )
            {
              __asan_report_load4(gadget_id_0);
            }
            RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(std::shared_ptr<DungeonScene>)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
              (const RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v2 + 32),
              v2 + 64,
              (const Vector3 *)*gadget_id_0,
              v37);
            if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v2 + 32)) )
            {
              common::milog::MiLogStream::create(
                &v99,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "recoverDungeonBrakeages",
                900);
              common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v99,
                (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
              common::milog::MiLogStream::~MiLogStream(&v99);
            }
            else
            {
              v38 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
              EntityId = Entity::getEntityId((const Entity *const)v38);
              std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int> const&>(
                &this->trap_entity_id_2_group_pair_map_,
                &EntityId,
                group_point_pair_1,
                v39,
                v40);
              v41 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                      &this->trap_group_pair_map_,
                      group_point_pair_1);
              std::weak_ptr<Gadget>::operator=<Gadget>(v41, (const std::shared_ptr<Gadget> *)(v2 + 32));
            }
            std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v2 + 32));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v99,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "recoverDungeonBrakeages",
              894);
            v34 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    &v99,
                    (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
            v35 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v34,
                    (const unsigned int *)group_point_pair_1);
            v36 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                    v35,
                    (const char (*)[12])" config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v36, &group_point_pair_1->second);
            common::milog::MiLogStream::~MiLogStream(&v99);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v98,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "recoverDungeonBrakeages",
            888);
          v33 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                  &v98,
                  (const char (*)[49])"[ROGUE] group script config not found, group_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
            v33,
            (const unsigned int *)group_point_pair_1);
          common::milog::MiLogStream::~MiLogStream(&v98);
        }
        std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator++(&__for_begin);
      }
      __for_range_2 = &this->byobu_group_pair_gadget_id_map_;
      __for_begin._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::begin(&this->byobu_group_pair_gadget_id_map_)._M_node;
      __for_end._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::end(__for_range_2)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v79 = std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator*(&__for_begin);
        group_point_pair_2 = std::get<0ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v79);
        gadget_id_1 = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v79);
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v97);
        v42 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v97)->design_config.lua_config_mgr;
        if ( *(_BYTE *)(((unsigned __int64)group_point_pair_2 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)group_point_pair_2 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_point_pair_2 >> 3)
                                                                               + 0x7FFF8000) )
        {
          __asan_report_load4(group_point_pair_2);
        }
        group_config_ptr_2 = LuaConfigMgr::findGroupScriptConfig(v42, group_point_pair_2->first);
        std::shared_ptr<Config>::~shared_ptr(&v97);
        if ( group_config_ptr_2 )
        {
          if ( *(_BYTE *)(((unsigned __int64)&group_point_pair_2->second >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)group_point_pair_2 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_point_pair_2->second >> 3)
                                                                             + 0x7FFF8000) )
          {
            __asan_report_load4(&group_point_pair_2->second);
          }
          point_config_ptr_2 = GroupScriptConfig::findPointConfig(group_config_ptr_2, group_point_pair_2->second);
          if ( point_config_ptr_2 )
          {
            v47 = &point_config_ptr_2->pos;
            if ( *(_BYTE *)(((unsigned __int64)gadget_id_1 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)gadget_id_1 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)gadget_id_1 >> 3)
                                                                            + 0x7FFF8000) )
            {
              __asan_report_load4(gadget_id_1);
            }
            RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(std::shared_ptr<DungeonScene>)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
              (const RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v2 + 32),
              v2 + 64,
              (const Vector3 *)*gadget_id_1,
              v47);
            if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v2 + 32)) )
            {
              common::milog::MiLogStream::create(
                &v99,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "recoverDungeonBrakeages",
                925);
              common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v99,
                (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
              common::milog::MiLogStream::~MiLogStream(&v99);
            }
            else
            {
              v48 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
              EntityId = Entity::getEntityId((const Entity *const)v48);
              std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int> const&>(
                &this->byobu_entity_id_2_group_pair_map_,
                &EntityId,
                group_point_pair_2,
                v49,
                v50);
              v51 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                      &this->byobu_group_pair_map_,
                      group_point_pair_2);
              std::weak_ptr<Gadget>::operator=<Gadget>(v51, (const std::shared_ptr<Gadget> *)(v2 + 32));
            }
            std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v2 + 32));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v99,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "recoverDungeonBrakeages",
              919);
            v44 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    &v99,
                    (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
            v45 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v44,
                    (const unsigned int *)group_point_pair_2);
            v46 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                    v45,
                    (const char (*)[12])" config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v46, &group_point_pair_2->second);
            common::milog::MiLogStream::~MiLogStream(&v99);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v98,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "recoverDungeonBrakeages",
            913);
          v43 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                  &v98,
                  (const char (*)[49])"[ROGUE] group script config not found, group_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
            v43,
            (const unsigned int *)group_point_pair_2);
          common::milog::MiLogStream::~MiLogStream(&v98);
        }
        std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator++(&__for_begin);
      }
      __for_range_3 = &this->ball_group_pair_gadget_id_map_;
      __for_begin._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::begin(&this->ball_group_pair_gadget_id_map_)._M_node;
      __for_end._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::end(__for_range_3)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v74 = std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator*(&__for_begin);
        group_point_pair_3 = std::get<0ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v74);
        gadget_id_2 = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v74);
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v97);
        v52 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v97)->design_config.lua_config_mgr;
        if ( *(_BYTE *)(((unsigned __int64)group_point_pair_3 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)group_point_pair_3 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)group_point_pair_3 >> 3)
                                                                               + 0x7FFF8000) )
        {
          __asan_report_load4(group_point_pair_3);
        }
        group_config_ptr_3 = LuaConfigMgr::findGroupScriptConfig(v52, group_point_pair_3->first);
        std::shared_ptr<Config>::~shared_ptr(&v97);
        if ( group_config_ptr_3 )
        {
          if ( *(_BYTE *)(((unsigned __int64)&group_point_pair_3->second >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)group_point_pair_3 + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&group_point_pair_3->second >> 3)
                                                                             + 0x7FFF8000) )
          {
            __asan_report_load4(&group_point_pair_3->second);
          }
          point_config_ptr_3 = GroupScriptConfig::findPointConfig(group_config_ptr_3, group_point_pair_3->second);
          if ( point_config_ptr_3 )
          {
            v57 = &point_config_ptr_3->pos;
            if ( *(_BYTE *)(((unsigned __int64)gadget_id_2 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)gadget_id_2 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)gadget_id_2 >> 3)
                                                                            + 0x7FFF8000) )
            {
              __asan_report_load4(gadget_id_2);
            }
            RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(std::shared_ptr<DungeonScene>)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
              (const RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v2 + 32),
              v2 + 64,
              (const Vector3 *)*gadget_id_2,
              v57);
            if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v2 + 32)) )
            {
              common::milog::MiLogStream::create(
                &v99,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "recoverDungeonBrakeages",
                950);
              common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v99,
                (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
              common::milog::MiLogStream::~MiLogStream(&v99);
            }
            else
            {
              v58 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
              EntityId = Entity::getEntityId((const Entity *const)v58);
              std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int> const&>(
                &this->ball_entity_id_2_group_pair_map_,
                &EntityId,
                group_point_pair_3,
                v59,
                v60);
              v61 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                      &this->ball_group_pair_map_,
                      group_point_pair_3);
              std::weak_ptr<Gadget>::operator=<Gadget>(v61, (const std::shared_ptr<Gadget> *)(v2 + 32));
            }
            std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v2 + 32));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v99,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "recoverDungeonBrakeages",
              944);
            v54 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    &v99,
                    (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
            v55 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v54,
                    (const unsigned int *)group_point_pair_3);
            v56 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                    v55,
                    (const char (*)[12])" config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v56, &group_point_pair_3->second);
            common::milog::MiLogStream::~MiLogStream(&v99);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v98,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "recoverDungeonBrakeages",
            938);
          v53 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                  &v98,
                  (const char (*)[49])"[ROGUE] group script config not found, group_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
            v53,
            (const unsigned int *)group_point_pair_3);
          common::milog::MiLogStream::~MiLogStream(&v98);
        }
        std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator++(&__for_begin);
      }
      v7 = 0;
      RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(std::shared_ptr<DungeonScene>)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::~Vector3((RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v2 + 64));
    }
    else
    {
      common::milog::MiLogStream::create(
        &v99,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "recoverDungeonBrakeages",
        798);
      v9 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
             &v99,
             (const char (*)[47])"[ROGUE] stage_config_ptr is nullptr, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &dungeon_weight_config_ptr->stage);
      common::milog::MiLogStream::~MiLogStream(&v99);
      v7 = -1;
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v99,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "recoverDungeonBrakeages",
      792);
    v6 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
           &v99,
           (const char (*)[72])"[ROGUE] dungeon_weight_config_ptr is nullptr, dungeon_weight_config_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &this->dungeon_weight_config_id_);
    common::milog::MiLogStream::~MiLogStream(&v99);
    v7 = -1;
  }
  result = v7;
  if ( v100 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 802: range 000000001592CDE0-000000001592D386
std::shared_ptr<Gadget> *__fastcall RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(std::shared_ptr<DungeonScene>)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
        std::shared_ptr<Gadget> *__closure,
        __int64 gadget_id,
        const Vector3 *pos,
        unsigned __int64 rot,
        unsigned __int64 a5)
{
  unsigned __int64 v5; // r13
  __int64 v6; // rax
  _DWORD *v7; // r12
  Scene *v8; // rax
  common::milog::MiLogStream *v9; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // r14
  unsigned __int64 v12; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  common::milog::MiLogStream *v14; // rax
  __int64 (__fastcall *v16)(std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, VisionContext *); // [rsp+0h] [rbp-4A0h]
  int v19; // [rsp+1Ch] [rbp-484h]
  common::milog::MiLogStream v20; // [rsp+30h] [rbp-470h] BYREF
  char v21[1104]; // [rsp+50h] [rbp-450h] BYREF

  v19 = (int)pos;
  v5 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_5(1056LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "4 48 4 7 ret:823 64 4 13 gadget_id:802 80 16 14 gadget_ptr:816 112 816 16 gadget_param:808";
  *(_QWORD *)(v5 + 16) = RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(std::shared_ptr<DungeonScene>)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator();
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -234556943;
  v7[536862722] = 61956;
  v7[536862723] = 62194;
  v7[536862749] = -202116109;
  v7[536862750] = -202116109;
  v7[536862751] = -202116109;
  v7[536862752] = -202116109;
  *(_DWORD *)(v5 + 64) = v19;
  if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)gadget_id, 0LL) )
  {
    std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
  }
  else
  {
    GadgetParam::GadgetParam((GadgetParam *const)(v5 + 112));
    *(_DWORD *)(v5 + 112) = *(_DWORD *)(v5 + 64);
    v8 = (Scene *)std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)gadget_id);
    *(_DWORD *)(v5 + 120) = Scene::genNewEntityId(v8, PROT_ENTITY_GADGET);
    if ( (char)(rot & 7) >= *(_BYTE *)((rot >> 3) + 0x7FFF8000) && *(_BYTE *)((rot >> 3) + 0x7FFF8000) != 0
      || *(_BYTE *)(((rot + 11) >> 3) + 0x7FFF8000) != 0
      && (char)((rot + 11) & 7) >= *(_BYTE *)(((rot + 11) >> 3) + 0x7FFF8000) )
    {
      __asan_report_load_n(rot, 12LL);
    }
    *(_QWORD *)(v5 + 124) = *(_QWORD *)rot;
    *(_DWORD *)(v5 + 132) = *(_DWORD *)(rot + 8);
    if ( (char)(a5 & 7) >= *(_BYTE *)((a5 >> 3) + 0x7FFF8000) && *(_BYTE *)((a5 >> 3) + 0x7FFF8000) != 0
      || *(_BYTE *)(((a5 + 11) >> 3) + 0x7FFF8000) != 0
      && (char)((a5 + 11) & 7) >= *(_BYTE *)(((a5 + 11) >> 3) + 0x7FFF8000) )
    {
      __asan_report_load_n(a5, 12LL);
    }
    *(_QWORD *)(v5 + 136) = *(_QWORD *)a5;
    *(_DWORD *)(v5 + 144) = *(_DWORD *)(a5 + 8);
    if ( *(_BYTE *)(((unsigned __int64)(gadget_id + 16) >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)(gadget_id + 16) >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(gadget_id + 16);
    }
    *(_DWORD *)(v5 + 148) = *(_DWORD *)(gadget_id + 16) + 1;
    *(_DWORD *)(v5 + 204) = 0;
    *(_DWORD *)(v5 + 164) = 0;
    EntityMgr::createGadget((const GadgetParam *)(v5 + 80));
    if ( std::operator==<Gadget>((const std::shared_ptr<Gadget> *)(v5 + 80), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v20,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "operator()",
        819);
      v9 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
             &v20,
             (const char (*)[46])"[ROGUE] gadget_ptr create failed. gadget_id: ");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v5 + 64));
      common::milog::MiLogStream::~MiLogStream(&v20);
      std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
    }
    else
    {
      v10 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v5 + 80));
      v11 = v10;
      if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
        __asan_report_load8(v10);
      v12 = *(_QWORD *)v11->baseclass_0 + 56LL;
      if ( *(_BYTE *)((v12 >> 3) + 0x7FFF8000) )
        v12 = __asan_report_load8(*(_QWORD *)v11->baseclass_0 + 56LL);
      v16 = *(__int64 (__fastcall **)(std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, VisionContext *))v12;
      v13 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)gadget_id);
      *(_DWORD *)(v5 + 48) = v16(v11, v13, &VisionContext::meet_context);
      if ( *(_DWORD *)(v5 + 48) )
      {
        common::milog::MiLogStream::create(
          &v20,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "operator()",
          826);
        v14 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v20,
                (const char (*)[43])"[ROGUE] gadget_ptr enterScene failed, ret:");
        common::milog::MiLogStream::operator<<<int,(int *)0>(v14, (const int *)(v5 + 48));
        common::milog::MiLogStream::~MiLogStream(&v20);
        std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
      }
      else
      {
        std::shared_ptr<Gadget>::shared_ptr(__closure, (std::shared_ptr<Gadget> *)(v5 + 80));
      }
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v5 + 80));
    GadgetParam::~GadgetParam((GadgetParam *const)(v5 + 112));
  }
  if ( v21 == (char *)v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8074) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF807C) = 0LL;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    __asan_stack_free_5(v5, 1056LL, v21);
  }
  return __closure;
};

// Line 802: range 000000001592D388-000000001592D3A2
void __cdecl RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages(std::shared_ptr<DungeonScene>)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::~Vector3(
        RogueLikeDungeonRuntimeMgr::recoverDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const this)
{
  std::shared_ptr<DungeonScene>::~shared_ptr(&this->__dungeon_scene_ptr);
};

// Line 960: range 000000001592F546-0000000015932AFD
__int64 __fastcall RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(
        RogueLikeDungeonRuntimeMgr *const this,
        DungeonScenePtr *p_dungeon_scene_ptr,
        uint32_t dungeon_weight_config_id)
{
  unsigned int v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v8; // rax
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rcx
  common::milog::MiLogStream *v10; // rax
  ActivityRogueExcelConfigMgr *v11; // r15
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  uint32_t DungeonId; // eax
  common::milog::MiLogStream *v14; // r14
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  ReviseLevelGrowExcelConfigMgr *p_revise_level_grow_config_mgr; // r15
  uint32_t InitWorldLevel; // ecx
  RoguelikeMiscMgr *RoguelikeMiscMgr; // rax
  common::milog::MiLogStream *v19; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v20; // rax
  unsigned int *v21; // rdx
  unsigned int v22; // r15d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v23; // rax
  unsigned int *v24; // rdx
  uint32_t v25; // eax
  LuaConfigMgr *p_lua_config_mgr; // rcx
  common::milog::MiLogStream *v27; // rax
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v28; // rax
  _DWORD *v29; // rdx
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  Vector3 *p_pos; // rcx
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  unsigned int *v35; // rcx
  std::pair<unsigned int,unsigned int> *v36; // r8
  std::weak_ptr<Gadget> *v37; // rax
  common::milog::MiLogStream *v38; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v39; // rax
  unsigned int *v40; // rdx
  unsigned int v41; // r15d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v42; // rax
  unsigned int *v43; // rdx
  const unsigned int *v44; // rax
  _DWORD *v45; // rdx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v46; // rax
  common::milog::MiLogStream *v47; // rax
  ActivityRogueExcelConfigMgr *v48; // r15
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v49; // rax
  uint32_t v50; // eax
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v51; // rax
  _DWORD *v52; // rdx
  common::milog::MiLogStream *v53; // rax
  common::milog::MiLogStream *v54; // rax
  common::milog::MiLogStream *v55; // rax
  int v56; // r15d
  unsigned int *v57; // r8
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v58; // rax
  unsigned int *v59; // rcx
  std::pair<unsigned int,unsigned int> *v60; // r8
  std::weak_ptr<Gadget> *v61; // rax
  common::milog::MiLogStream *v62; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v63; // rax
  unsigned int *v64; // rdx
  unsigned int v65; // r15d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v66; // rax
  unsigned int *v67; // rdx
  uint32_t v68; // eax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v69; // rax
  common::milog::MiLogStream *v70; // rax
  ActivityRogueExcelConfigMgr *v71; // r15
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v72; // rax
  uint32_t v73; // eax
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v74; // rax
  _DWORD *v75; // rdx
  common::milog::MiLogStream *v76; // rax
  common::milog::MiLogStream *v77; // rax
  common::milog::MiLogStream *v78; // rax
  int v79; // r15d
  unsigned int *v80; // r8
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v81; // rax
  unsigned int *v82; // rcx
  std::pair<unsigned int,unsigned int> *v83; // r8
  std::weak_ptr<Gadget> *v84; // rax
  common::milog::MiLogStream *v85; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v86; // rax
  unsigned int *v87; // rdx
  unsigned int v88; // r15d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v89; // rax
  unsigned int *v90; // rdx
  uint32_t v91; // eax
  LuaConfigMgr *v92; // rcx
  common::milog::MiLogStream *v93; // rax
  int v94; // r15d
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v95; // rax
  _DWORD *v96; // rdx
  common::milog::MiLogStream *v97; // rax
  common::milog::MiLogStream *v98; // rax
  common::milog::MiLogStream *v99; // rax
  std::vector<unsigned int>::size_type v100; // r15
  common::milog::MiLogStream *v101; // rax
  std::vector<unsigned int>::const_reference v102; // rax
  _DWORD *v103; // rdx
  unsigned int *v104; // r8
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v105; // rax
  unsigned int *v106; // rcx
  std::pair<unsigned int,unsigned int> *v107; // r8
  std::weak_ptr<Gadget> *v108; // rax
  common::milog::MiLogStream *v109; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v110; // rax
  unsigned int *v111; // rdx
  unsigned int v112; // r14d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v113; // rax
  unsigned int *v114; // rdx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v115; // rax
  common::milog::MiLogStream *v116; // rax
  std::vector<unsigned int>::size_type v117; // r14
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v118; // rax
  _DWORD *v119; // rdx
  std::vector<unsigned int>::size_type v120; // r14
  std::vector<unsigned int>::size_type v121; // r14
  common::milog::MiLogStream *v123; // rax
  std::vector<unsigned int>::reference v124; // rax
  _DWORD *v125; // rdx
  std::vector<unsigned int>::reference v126; // rax
  _DWORD *v127; // rdx
  common::milog::MiLogStream *v128; // rax
  common::milog::MiLogStream *v129; // rax
  common::milog::MiLogStream *v130; // rax
  common::milog::MiLogStream *v131; // rax
  common::milog::MiLogStream *v132; // rax
  common::milog::MiLogStream *v133; // rax
  std::vector<unsigned int>::const_reference v134; // rax
  _DWORD *v135; // rdx
  std::vector<unsigned int>::const_reference v136; // rax
  _DWORD *v137; // rdx
  unsigned int *v138; // r8
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v139; // rax
  unsigned int *v140; // rcx
  std::pair<unsigned int,unsigned int> *v141; // r8
  std::weak_ptr<Gadget> *v142; // rax
  unsigned int *v143; // r8
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v144; // rax
  unsigned int *v145; // rcx
  std::pair<unsigned int,unsigned int> *v146; // r8
  std::weak_ptr<Gadget> *v147; // rax
  __int64 result; // rax
  uint32_t gadget_idx; // [rsp+28h] [rbp-3D8h]
  uint32_t revise_level; // [rsp+2Ch] [rbp-3D4h]
  uint32_t blast_num; // [rsp+30h] [rbp-3D0h]
  uint32_t ball_num; // [rsp+34h] [rbp-3CCh]
  uint32_t breakages_num; // [rsp+38h] [rbp-3C8h]
  unsigned int byobu_num; // [rsp+3Ch] [rbp-3C4h]
  std::vector<unsigned int>::iterator __for_begin_0; // [rsp+40h] [rbp-3C0h] BYREF
  std::vector<unsigned int>::iterator __for_end; // [rsp+48h] [rbp-3B8h] BYREF
  const data::RoguelikeDungeonWeightExcelConfig *dungeon_weight_config_ptr; // [rsp+50h] [rbp-3B0h]
  const data::RogueStageExcelConfig *stage_config_ptr; // [rsp+58h] [rbp-3A8h]
  const data::RogueGadgetWeightExcelConfig *gadget_weight_config_ptr; // [rsp+60h] [rbp-3A0h]
  const RoguelikeEfffectCellParam *effect_param; // [rsp+68h] [rbp-398h]
  const GroupScriptConfig *blast_bucket_group_config_ptr; // [rsp+70h] [rbp-390h]
  std::vector<unsigned int> *__for_range; // [rsp+78h] [rbp-388h]
  const PointScriptConfig *point_config_ptr; // [rsp+80h] [rbp-380h]
  const GroupScriptConfig *trap_group_config_ptr; // [rsp+88h] [rbp-378h]
  std::vector<unsigned int> *__for_range_0; // [rsp+90h] [rbp-370h]
  const PointScriptConfig *point_config_ptr_0; // [rsp+98h] [rbp-368h]
  const GroupScriptConfig *ball_group_config_ptr; // [rsp+A0h] [rbp-360h]
  std::vector<unsigned int> *__for_range_1; // [rsp+A8h] [rbp-358h]
  const PointScriptConfig *point_config_ptr_1; // [rsp+B0h] [rbp-350h]
  const GroupScriptConfig *breakages_group_config_ptr; // [rsp+B8h] [rbp-348h]
  std::vector<unsigned int> *__for_range_2; // [rsp+C0h] [rbp-340h]
  const PointScriptConfig *point_config_ptr_2; // [rsp+C8h] [rbp-338h]
  const GroupScriptConfig *byobu_group_config_ptr; // [rsp+D0h] [rbp-330h]
  std::vector<unsigned int> *__for_range_3; // [rsp+D8h] [rbp-328h]
  const PointScriptConfig *left_point_config_ptr; // [rsp+E0h] [rbp-320h]
  const PointScriptConfig *right_point_config_ptr; // [rsp+E8h] [rbp-318h]
  common::milog::MiLogStream v178; // [rsp+F0h] [rbp-310h] BYREF
  common::milog::MiLogStream v179; // [rsp+110h] [rbp-2F0h] BYREF
  common::milog::MiLogStream v180; // [rsp+130h] [rbp-2D0h] BYREF
  char v181[688]; // [rsp+150h] [rbp-2B0h] BYREF

  v4 = (unsigned __int64)v181;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_4(640LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "18 32 4 13 trap_num:1064 48 4 13 group_id:1219 64 4 13 even_idx:1243 80 4 24 left_byobu_point_id"
                        ":1250 96 4 25 right_byobu_point_id:1251 112 4 19 left_gadget_id:1264 128 4 20 right_gadget_id:12"
                        "65 144 4 6 i:1229 160 4 28 dungeon_weight_config_id:959 176 8 22 group_config_pair:1272 208 8 22"
                        " group_config_pair:1051 240 16 15 gadget_ptr:1266 272 16 15 gadget_ptr:1045 304 24 31 create_bra"
                        "keable_gadget_fuc:986 368 24 30 byobu_point_config_id_vec:1226 432 24 19 byobu_temp_vec:1228 496"
                        " 24 24 random_even_idx_vec:1236 560 48 15 weight_map:1128";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::initDungeonBrakeages;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556924;
  v6[536862722] = -234556924;
  v6[536862723] = -234556924;
  v6[536862724] = -234556924;
  v6[536862725] = 61956;
  v6[536862725] = -234881024;
  v6[536862726] = 62194;
  v6[536862726] = -234881024;
  v6[536862727] = 62194;
  v6[536862728] = 62194;
  v6[536862729] = 62194;
  v6[536862730] = -218959360;
  v6[536862731] = 62194;
  v6[536862732] = -218959360;
  v6[536862733] = 62194;
  v6[536862734] = -218959360;
  v6[536862735] = 62194;
  v6[536862736] = -218959360;
  v6[536862737] = 62194;
  v6[536862739] = -202116109;
  *(_DWORD *)(v4 + 160) = dungeon_weight_config_id;
  if ( std::operator==<DungeonScene>(p_dungeon_scene_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v180,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "initDungeonBrakeages",
      963);
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
      &v180,
      (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v180);
    v3 = -1;
    goto LABEL_178;
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v4 + 272));
  v7 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272));
  dungeon_weight_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRoguelikeDungeonWeightExcelConfig(
                                &v7->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                *(_DWORD *)(v4 + 160));
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
  if ( !dungeon_weight_config_ptr )
  {
    common::milog::MiLogStream::create(
      &v180,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "initDungeonBrakeages",
      969);
    v8 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
           &v180,
           (const char (*)[72])"[ROGUE] dungeon_weight_config_ptr is nullptr, dungeon_weight_config_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v4 + 160));
    common::milog::MiLogStream::~MiLogStream(&v180);
    v3 = -1;
    goto LABEL_178;
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v4 + 272));
  p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272))->design_config.txt_config_mgr.activity_rogue_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->stage >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)dungeon_weight_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->stage >> 3)
                                                                             + 0x7FFF8000) )
  {
    __asan_report_load4(&dungeon_weight_config_ptr->stage);
  }
  stage_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueStageExcelConfig(
                       p_activity_rogue_config_mgr,
                       dungeon_weight_config_ptr->stage);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
  if ( !stage_config_ptr )
  {
    common::milog::MiLogStream::create(
      &v180,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "initDungeonBrakeages",
      975);
    v10 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
            &v180,
            (const char (*)[47])"[ROGUE] stage_config_ptr is nullptr, stage_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &dungeon_weight_config_ptr->stage);
    common::milog::MiLogStream::~MiLogStream(&v180);
    v3 = -1;
    goto LABEL_178;
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v4 + 272));
  v11 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272))->design_config.txt_config_mgr.activity_rogue_config_mgr;
  v12 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_dungeon_scene_ptr);
  DungeonId = DungeonScene::getDungeonId(v12);
  gadget_weight_config_ptr = ActivityRogueExcelConfigMgr::findGadgetWeightConfigByDungeonId(v11, DungeonId);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
  if ( !gadget_weight_config_ptr )
  {
    common::milog::MiLogStream::create(
      &v180,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "initDungeonBrakeages",
      982);
    v14 = common::milog::MiLogStream::operator<<<char [60],(char *[60])0>(
            &v180,
            (const char (*)[60])"[ROGUE] RogueGadgetWeightExcelConfig not found, dungeon_id:");
    v15 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_dungeon_scene_ptr);
    *(_DWORD *)(v4 + 144) = DungeonScene::getDungeonId(v15);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v4 + 144));
    common::milog::MiLogStream::~MiLogStream(&v180);
    v3 = -1;
    goto LABEL_178;
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v4 + 272));
  p_revise_level_grow_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272))->design_config.txt_config_mgr.revise_level_grow_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  InitWorldLevel = RoguelikeDungeonActivity::getInitWorldLevel(this->activity_);
  if ( *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)stage_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3)
                                                                    + 0x7FFF8000) )
  {
    __asan_report_load4(&stage_config_ptr->revise_level_id);
  }
  revise_level = ReviseLevelGrowExcelConfigMgr::findReviseLevel(
                   p_revise_level_grow_config_mgr,
                   stage_config_ptr->revise_level_id,
                   InitWorldLevel);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
  std::shared_ptr<DungeonScene>::shared_ptr((std::shared_ptr<DungeonScene> *const)(v4 + 304), p_dungeon_scene_ptr);
  *(_DWORD *)(v4 + 320) = revise_level;
  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  RoguelikeMiscMgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
  effect_param = RoguelikeMiscMgr::getRoguelikeEfffectCellParam(RoguelikeMiscMgr);
  if ( std::vector<unsigned int>::size(&dungeon_weight_config_ptr->blast_bucket_count_range) == 2 )
  {
    v20 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                &dungeon_weight_config_ptr->blast_bucket_count_range,
                                                                                                1uLL);
    v21 = v20;
    if ( *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v20 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v20);
    }
    v22 = *v21;
    v23 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                &dungeon_weight_config_ptr->blast_bucket_count_range,
                                                                                                0LL);
    v24 = v23;
    if ( *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v23 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v23);
    }
    v25 = common::tools::RandomUtils::rand<unsigned int>(*v24, v22);
    blast_num = RoguelikeEfffectCellParam::findGadgetReviseNum(effect_param, ROGUE_GADGET_TYPE_BLAST, v25);
    if ( blast_num )
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)(v4 + 272));
      p_lua_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272))->design_config.lua_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->blast_bucket_group_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->blast_bucket_group_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&dungeon_weight_config_ptr->blast_bucket_group_id);
      }
      blast_bucket_group_config_ptr = LuaConfigMgr::findGroupScriptConfig(
                                        p_lua_config_mgr,
                                        dungeon_weight_config_ptr->blast_bucket_group_id);
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
      if ( !blast_bucket_group_config_ptr )
      {
        common::milog::MiLogStream::create(
          &v180,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "initDungeonBrakeages",
          1031);
        v27 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
                &v180,
                (const char (*)[50])"[ROGUE] cannot find blast bucket group, group_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
          v27,
          &dungeon_weight_config_ptr->blast_bucket_group_id);
        common::milog::MiLogStream::~MiLogStream(&v180);
        v3 = -1;
        goto LABEL_177;
      }
      common::tools::MiscUtils::getAllMapKeys<std::unordered_map<unsigned int,PointScriptConfig>>(
        (std::vector<unsigned int> *)(v4 + 432),
        &blast_bucket_group_config_ptr->point_config_map);
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 496));
      common::tools::RandomUtils::randomSelect<unsigned int>(
        (const std::vector<unsigned int> *)(v4 + 432),
        (std::vector<unsigned int> *)(v4 + 496),
        blast_num);
      __for_range = (std::vector<unsigned int> *)(v4 + 496);
      __for_end._M_current = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v4 + 496))._M_current;
      *(std::vector<unsigned int>::iterator *)(v4 + 176) = std::vector<unsigned int>::end((std::vector<unsigned int> *const)(v4 + 496));
      while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(
                &__for_end,
                (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v4 + 176)) )
      {
        v28 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*(&__for_end);
        v29 = v28;
        if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v28 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v28);
        }
        *(_DWORD *)(v4 + 128) = *v29;
        point_config_ptr = GroupScriptConfig::findPointConfig(blast_bucket_group_config_ptr, *(_DWORD *)(v4 + 128));
        if ( point_config_ptr )
        {
          p_pos = &point_config_ptr->pos;
          if ( *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->blast_bucket_gadget_id >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->blast_bucket_gadget_id >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&dungeon_weight_config_ptr->blast_bucket_gadget_id);
          }
          RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
            (const RogueLikeDungeonRuntimeMgr::initDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v4 + 272),
            v4 + 304,
            (const Vector3 *)dungeon_weight_config_ptr->blast_bucket_gadget_id,
            p_pos);
          if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 272)) )
          {
            common::milog::MiLogStream::create(
              &v180,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "initDungeonBrakeages",
              1048);
            common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
              &v180,
              (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
            common::milog::MiLogStream::~MiLogStream(&v180);
          }
          else
          {
            *(std::pair<unsigned int,unsigned int> *)(v4 + 208) = std::make_pair<unsigned int const&,unsigned int &>(
                                                                    &dungeon_weight_config_ptr->blast_bucket_group_id,
                                                                    (unsigned int *)(v4 + 128));
            std::set<std::pair<unsigned int,unsigned int>>::insert(
              &this->blast_bucket_set_,
              (const std::set<std::pair<unsigned int,unsigned int>>::value_type *)(v4 + 208));
            v34 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272));
            *(_DWORD *)(v4 + 144) = Entity::getEntityId((const Entity *const)v34);
            std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int>&>(
              &this->blast_bucket_entity_id_2_group_pair_map_,
              (unsigned int *)(v4 + 144),
              (std::pair<unsigned int,unsigned int> *)(v4 + 208),
              v35,
              v36);
            v37 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                    &this->blast_bucket_group_pair_map_,
                    (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v4 + 208));
            std::weak_ptr<Gadget>::operator=<Gadget>(v37, (const std::shared_ptr<Gadget> *)(v4 + 272));
          }
          std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 272));
        }
        else
        {
          common::milog::MiLogStream::create(
            &v180,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "initDungeonBrakeages",
            1042);
          v30 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                  &v180,
                  (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
          v31 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v30,
                  &dungeon_weight_config_ptr->blast_bucket_group_id);
          v32 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v31, (const char (*)[12])" config_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v32, (const unsigned int *)(v4 + 128));
          common::milog::MiLogStream::~MiLogStream(&v180);
        }
        __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++(&__for_end);
      }
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 496));
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 432));
    }
    if ( std::vector<unsigned int>::size(&gadget_weight_config_ptr->trap_num_range) == 2 )
    {
      v39 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                  &gadget_weight_config_ptr->trap_num_range,
                                                                                                  1uLL);
      v40 = v39;
      if ( *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v39 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v39);
      }
      v41 = *v40;
      v42 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                  &gadget_weight_config_ptr->trap_num_range,
                                                                                                  0LL);
      v43 = v42;
      if ( *(_BYTE *)(((unsigned __int64)v42 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v42 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v42 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v42);
      }
      *(_DWORD *)(v4 + 32) = common::tools::RandomUtils::rand<unsigned int>(*v43, v41);
      *(_DWORD *)(v4 + 32) = RoguelikeEfffectCellParam::findGadgetReviseNum(
                               effect_param,
                               ROGUE_GADGET_TYPE_TRAP,
                               *(_DWORD *)(v4 + 32));
      v44 = std::min<unsigned int>((const unsigned int *)(v4 + 32), &effect_param->expected_max_trap_count);
      v45 = v44;
      if ( *(_BYTE *)(((unsigned __int64)v44 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v44 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v44 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v44);
      }
      *(_DWORD *)(v4 + 32) = *v45;
      if ( *(_DWORD *)(v4 + 32) )
      {
        if ( *(_BYTE *)(((unsigned __int64)&gadget_weight_config_ptr->trap_group_id >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&gadget_weight_config_ptr->trap_group_id >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&gadget_weight_config_ptr->trap_group_id);
        }
        *(_DWORD *)(v4 + 96) = gadget_weight_config_ptr->trap_group_id;
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)(v4 + 272));
        v46 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272));
        trap_group_config_ptr = LuaConfigMgr::findGroupScriptConfig(
                                  &v46->design_config.lua_config_mgr,
                                  *(_DWORD *)(v4 + 96));
        std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
        if ( !trap_group_config_ptr )
        {
          common::milog::MiLogStream::create(
            &v180,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "initDungeonBrakeages",
            1073);
          v47 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                  &v180,
                  (const char (*)[42])"[ROGUE] cannot find trap group, group_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v47, (const unsigned int *)(v4 + 96));
          common::milog::MiLogStream::~MiLogStream(&v180);
          v3 = -1;
          goto LABEL_177;
        }
        common::tools::MiscUtils::getAllMapKeys<std::unordered_map<unsigned int,PointScriptConfig>>(
          (std::vector<unsigned int> *)(v4 + 432),
          &trap_group_config_ptr->point_config_map);
        std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 496));
        common::tools::RandomUtils::randomSelect<unsigned int>(
          (const std::vector<unsigned int> *)(v4 + 432),
          (std::vector<unsigned int> *)(v4 + 496),
          *(_DWORD *)(v4 + 32));
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)(v4 + 272));
        v48 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272))->design_config.txt_config_mgr.activity_rogue_config_mgr;
        v49 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_dungeon_scene_ptr);
        v50 = DungeonScene::getDungeonId(v49);
        ActivityRogueExcelConfigMgr::findTrapWeightMapByDungeonId(
          (std::map<unsigned int,unsigned int> *)(v4 + 560),
          v48,
          v50);
        std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
        __for_range_0 = (std::vector<unsigned int> *)(v4 + 496);
        __for_end._M_current = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v4 + 496))._M_current;
        *(std::vector<unsigned int>::iterator *)(v4 + 176) = std::vector<unsigned int>::end(__for_range_0);
        while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(
                  &__for_end,
                  (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v4 + 176)) )
        {
          v51 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*(&__for_end);
          v52 = v51;
          if ( *(_BYTE *)(((unsigned __int64)v51 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v51 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v51 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v51);
          }
          *(_DWORD *)(v4 + 112) = *v52;
          point_config_ptr_0 = GroupScriptConfig::findPointConfig(trap_group_config_ptr, *(_DWORD *)(v4 + 112));
          if ( point_config_ptr_0 )
          {
            *(_DWORD *)(v4 + 128) = 0;
            if ( common::tools::RandomUtils::weightSelectOne<unsigned int,unsigned int>(
                   (const std::map<unsigned int,unsigned int> *)(v4 + 560),
                   (unsigned int *)(v4 + 128),
                   0) )
            {
              common::milog::MiLogStream::create(
                &v180,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "initDungeonBrakeages",
                1091);
              common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                &v180,
                (const char (*)[31])"[ROGUE] weightSelectOne failed");
              common::milog::MiLogStream::~MiLogStream(&v180);
              v3 = -1;
              v56 = 0;
              goto LABEL_72;
            }
            RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
              (const RogueLikeDungeonRuntimeMgr::initDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v4 + 272),
              v4 + 304,
              (const Vector3 *)*(unsigned int *)(v4 + 128),
              &point_config_ptr_0->pos);
            if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 272)) )
            {
              common::milog::MiLogStream::create(
                &v180,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "initDungeonBrakeages",
                1097);
              common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v180,
                (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
              common::milog::MiLogStream::~MiLogStream(&v180);
            }
            else
            {
              *(std::pair<unsigned int,unsigned int> *)(v4 + 208) = std::make_pair<unsigned int &,unsigned int &>(
                                                                      (unsigned int *)(v4 + 96),
                                                                      (unsigned int *)(v4 + 112));
              std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int &>(
                &this->trap_group_pair_gadget_id_map_,
                (std::pair<unsigned int,unsigned int> *)(v4 + 208),
                (unsigned int *)(v4 + 128),
                (std::pair<unsigned int,unsigned int> *)&this->trap_group_pair_gadget_id_map_,
                v57);
              v58 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272));
              *(_DWORD *)(v4 + 144) = Entity::getEntityId((const Entity *const)v58);
              std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int>&>(
                &this->trap_entity_id_2_group_pair_map_,
                (unsigned int *)(v4 + 144),
                (std::pair<unsigned int,unsigned int> *)(v4 + 208),
                v59,
                v60);
              v61 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                      &this->trap_group_pair_map_,
                      (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v4 + 208));
              std::weak_ptr<Gadget>::operator=<Gadget>(v61, (const std::shared_ptr<Gadget> *)(v4 + 272));
            }
            std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 272));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v179,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "initDungeonBrakeages",
              1085);
            v53 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    &v179,
                    (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
            v54 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v53,
                    (const unsigned int *)(v4 + 96));
            v55 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                    v54,
                    (const char (*)[12])" config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v55,
              (const unsigned int *)(v4 + 112));
            common::milog::MiLogStream::~MiLogStream(&v179);
          }
          __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++(&__for_end);
        }
        v56 = 1;
LABEL_72:
        std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v4 + 560));
        std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 496));
        std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 432));
        if ( v56 != 1 )
          goto LABEL_177;
      }
      if ( std::vector<unsigned int>::size(&gadget_weight_config_ptr->ball_num_range) == 2 )
      {
        v63 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                    &gadget_weight_config_ptr->ball_num_range,
                                                                                                    1uLL);
        v64 = v63;
        if ( *(_BYTE *)(((unsigned __int64)v63 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v63 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v63 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v63);
        }
        v65 = *v64;
        v66 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                    &gadget_weight_config_ptr->ball_num_range,
                                                                                                    0LL);
        v67 = v66;
        if ( *(_BYTE *)(((unsigned __int64)v66 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v66 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v66 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v66);
        }
        v68 = common::tools::RandomUtils::rand<unsigned int>(*v67, v65);
        ball_num = RoguelikeEfffectCellParam::findGadgetReviseNum(effect_param, ROGUE_GADGET_TYPE_BALL, v68);
        if ( ball_num )
        {
          if ( *(_BYTE *)(((unsigned __int64)&gadget_weight_config_ptr->ball_group_id >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&gadget_weight_config_ptr->ball_group_id >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&gadget_weight_config_ptr->ball_group_id);
          }
          *(_DWORD *)(v4 + 96) = gadget_weight_config_ptr->ball_group_id;
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)(v4 + 272));
          v69 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272));
          ball_group_config_ptr = LuaConfigMgr::findGroupScriptConfig(
                                    &v69->design_config.lua_config_mgr,
                                    *(_DWORD *)(v4 + 96));
          std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
          if ( !ball_group_config_ptr )
          {
            common::milog::MiLogStream::create(
              &v180,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "initDungeonBrakeages",
              1122);
            v70 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                    &v180,
                    (const char (*)[42])"[ROGUE] cannot find trap group, group_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v70, (const unsigned int *)(v4 + 96));
            common::milog::MiLogStream::~MiLogStream(&v180);
            v3 = -1;
            goto LABEL_177;
          }
          common::tools::MiscUtils::getAllMapKeys<std::unordered_map<unsigned int,PointScriptConfig>>(
            (std::vector<unsigned int> *)(v4 + 432),
            &ball_group_config_ptr->point_config_map);
          std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 496));
          common::tools::RandomUtils::randomSelect<unsigned int>(
            (const std::vector<unsigned int> *)(v4 + 432),
            (std::vector<unsigned int> *)(v4 + 496),
            ball_num);
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)(v4 + 272));
          v71 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272))->design_config.txt_config_mgr.activity_rogue_config_mgr;
          v72 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_dungeon_scene_ptr);
          v73 = DungeonScene::getDungeonId(v72);
          ActivityRogueExcelConfigMgr::findBallWeightMapByDungeonId(
            (std::map<unsigned int,unsigned int> *)(v4 + 560),
            v71,
            v73);
          std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
          __for_range_1 = (std::vector<unsigned int> *)(v4 + 496);
          __for_end._M_current = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v4 + 496))._M_current;
          *(std::vector<unsigned int>::iterator *)(v4 + 176) = std::vector<unsigned int>::end(__for_range_1);
          while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(
                    &__for_end,
                    (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v4 + 176)) )
          {
            v74 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*(&__for_end);
            v75 = v74;
            if ( *(_BYTE *)(((unsigned __int64)v74 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v74 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v74 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v74);
            }
            *(_DWORD *)(v4 + 112) = *v75;
            point_config_ptr_1 = GroupScriptConfig::findPointConfig(ball_group_config_ptr, *(_DWORD *)(v4 + 112));
            if ( point_config_ptr_1 )
            {
              *(_DWORD *)(v4 + 128) = 0;
              if ( common::tools::RandomUtils::weightSelectOne<unsigned int,unsigned int>(
                     (const std::map<unsigned int,unsigned int> *)(v4 + 560),
                     (unsigned int *)(v4 + 128),
                     0) )
              {
                common::milog::MiLogStream::create(
                  &v180,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "initDungeonBrakeages",
                  1140);
                common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                  &v180,
                  (const char (*)[31])"[ROGUE] weightSelectOne failed");
                common::milog::MiLogStream::~MiLogStream(&v180);
                v3 = -1;
                v79 = 0;
                goto LABEL_98;
              }
              RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
                (const RogueLikeDungeonRuntimeMgr::initDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v4 + 272),
                v4 + 304,
                (const Vector3 *)*(unsigned int *)(v4 + 128),
                &point_config_ptr_1->pos);
              if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 272)) )
              {
                common::milog::MiLogStream::create(
                  &v180,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "initDungeonBrakeages",
                  1146);
                common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                  &v180,
                  (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
                common::milog::MiLogStream::~MiLogStream(&v180);
              }
              else
              {
                *(std::pair<unsigned int,unsigned int> *)(v4 + 208) = std::make_pair<unsigned int &,unsigned int &>(
                                                                        (unsigned int *)(v4 + 96),
                                                                        (unsigned int *)(v4 + 112));
                std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int &>(
                  &this->ball_group_pair_gadget_id_map_,
                  (std::pair<unsigned int,unsigned int> *)(v4 + 208),
                  (unsigned int *)(v4 + 128),
                  (std::pair<unsigned int,unsigned int> *)&this->ball_group_pair_gadget_id_map_,
                  v80);
                v81 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272));
                *(_DWORD *)(v4 + 144) = Entity::getEntityId((const Entity *const)v81);
                std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int>&>(
                  &this->ball_entity_id_2_group_pair_map_,
                  (unsigned int *)(v4 + 144),
                  (std::pair<unsigned int,unsigned int> *)(v4 + 208),
                  v82,
                  v83);
                v84 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                        &this->ball_group_pair_map_,
                        (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v4 + 208));
                std::weak_ptr<Gadget>::operator=<Gadget>(v84, (const std::shared_ptr<Gadget> *)(v4 + 272));
              }
              std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 272));
            }
            else
            {
              common::milog::MiLogStream::create(
                &v179,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "initDungeonBrakeages",
                1134);
              v76 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                      &v179,
                      (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
              v77 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v76,
                      (const unsigned int *)(v4 + 96));
              v78 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                      v77,
                      (const char (*)[12])" config_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v78,
                (const unsigned int *)(v4 + 112));
              common::milog::MiLogStream::~MiLogStream(&v179);
            }
            __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++(&__for_end);
          }
          v79 = 1;
LABEL_98:
          std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v4 + 560));
          std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 496));
          std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 432));
          if ( v79 != 1 )
            goto LABEL_177;
        }
        if ( std::vector<unsigned int>::size(&dungeon_weight_config_ptr->breakages_count_range) == 2 )
        {
          v86 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&dungeon_weight_config_ptr->breakages_count_range, 1uLL);
          v87 = v86;
          if ( *(_BYTE *)(((unsigned __int64)v86 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v86 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v86 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v86);
          }
          v88 = *v87;
          v89 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&dungeon_weight_config_ptr->breakages_count_range, 0LL);
          v90 = v89;
          if ( *(_BYTE *)(((unsigned __int64)v89 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v89 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v89 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v89);
          }
          v91 = common::tools::RandomUtils::rand<unsigned int>(*v90, v88);
          breakages_num = RoguelikeEfffectCellParam::findGadgetReviseNum(effect_param, ROGUE_GADGET_TYPE_BREAKAGES, v91);
          if ( breakages_num )
          {
            ServiceBox::findService<GameserverService>();
            GameserverService::getConfig((GameserverService *const)(v4 + 272));
            v92 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272))->design_config.lua_config_mgr;
            if ( *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->breakages_group_id >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->breakages_group_id >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&dungeon_weight_config_ptr->breakages_group_id);
            }
            breakages_group_config_ptr = LuaConfigMgr::findGroupScriptConfig(
                                           v92,
                                           dungeon_weight_config_ptr->breakages_group_id);
            std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
            if ( !breakages_group_config_ptr )
            {
              common::milog::MiLogStream::create(
                &v180,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "initDungeonBrakeages",
                1170);
              v93 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                      &v180,
                      (const char (*)[47])"[ROGUE] cannot find breakages group, group_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v93,
                &dungeon_weight_config_ptr->breakages_group_id);
              common::milog::MiLogStream::~MiLogStream(&v180);
              v3 = -1;
              goto LABEL_177;
            }
            common::tools::MiscUtils::getAllMapKeys<std::unordered_map<unsigned int,PointScriptConfig>>(
              (std::vector<unsigned int> *)(v4 + 432),
              &breakages_group_config_ptr->point_config_map);
            std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 496));
            common::tools::RandomUtils::randomSelect<unsigned int>(
              (const std::vector<unsigned int> *)(v4 + 432),
              (std::vector<unsigned int> *)(v4 + 496),
              breakages_num);
            gadget_idx = 0;
            if ( std::vector<unsigned int>::size(&dungeon_weight_config_ptr->breakages_gadget_id_list) )
            {
              __for_range_2 = (std::vector<unsigned int> *)(v4 + 496);
              __for_end._M_current = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v4 + 496))._M_current;
              *(std::vector<unsigned int>::iterator *)(v4 + 176) = std::vector<unsigned int>::end(__for_range_2);
              while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(
                        &__for_end,
                        (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v4 + 176)) )
              {
                v95 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*(&__for_end);
                v96 = v95;
                if ( *(_BYTE *)(((unsigned __int64)v95 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v95 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v95 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v95);
                }
                *(_DWORD *)(v4 + 96) = *v96;
                point_config_ptr_2 = GroupScriptConfig::findPointConfig(
                                       breakages_group_config_ptr,
                                       *(_DWORD *)(v4 + 96));
                if ( point_config_ptr_2 )
                {
                  *(_DWORD *)(v4 + 112) = gadget_idx
                                        % std::vector<unsigned int>::size(&dungeon_weight_config_ptr->breakages_gadget_id_list);
                  v100 = *(unsigned int *)(v4 + 112);
                  if ( v100 < std::vector<unsigned int>::size(&dungeon_weight_config_ptr->breakages_gadget_id_list) )
                  {
                    v102 = std::vector<unsigned int>::operator[](
                             &dungeon_weight_config_ptr->breakages_gadget_id_list,
                             *(unsigned int *)(v4 + 112));
                    v103 = v102;
                    if ( *(_BYTE *)(((unsigned __int64)v102 >> 3) + 0x7FFF8000) != 0
                      && (char)(((unsigned __int8)v102 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v102 >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_load4(v102);
                    }
                    *(_DWORD *)(v4 + 128) = *v103;
                    RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
                      (const RogueLikeDungeonRuntimeMgr::initDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v4 + 272),
                      v4 + 304,
                      (const Vector3 *)*(unsigned int *)(v4 + 128),
                      &point_config_ptr_2->pos);
                    if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 272)) )
                    {
                      common::milog::MiLogStream::create(
                        &v180,
                        &common::milog::MiLogDefault::default_log_obj_,
                        3u,
                        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                        "initDungeonBrakeages",
                        1200);
                      common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                        &v180,
                        (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
                      common::milog::MiLogStream::~MiLogStream(&v180);
                    }
                    else
                    {
                      *(std::pair<unsigned int,unsigned int> *)(v4 + 208) = std::make_pair<unsigned int const&,unsigned int &>(
                                                                              &dungeon_weight_config_ptr->breakages_group_id,
                                                                              (unsigned int *)(v4 + 96));
                      std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int &>(
                        &this->brakeage_group_pair_gadget_id_map_,
                        (std::pair<unsigned int,unsigned int> *)(v4 + 208),
                        (unsigned int *)(v4 + 128),
                        (std::pair<unsigned int,unsigned int> *)&this->brakeage_group_pair_gadget_id_map_,
                        v104);
                      v105 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272));
                      *(_DWORD *)(v4 + 144) = Entity::getEntityId((const Entity *const)v105);
                      std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int>&>(
                        &this->brakeages_entity_id_2_group_pair_map_,
                        (unsigned int *)(v4 + 144),
                        (std::pair<unsigned int,unsigned int> *)(v4 + 208),
                        v106,
                        v107);
                      v108 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                               &this->brakeages_group_pair_map_,
                               (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v4 + 208));
                      std::weak_ptr<Gadget>::operator=<Gadget>(v108, (const std::shared_ptr<Gadget> *)(v4 + 272));
                      ++gadget_idx;
                    }
                    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 272));
                  }
                  else
                  {
                    common::milog::MiLogStream::create(
                      &v180,
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "initDungeonBrakeages",
                      1193);
                    v101 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                             &v180,
                             (const char (*)[41])"[ROGUE] real_idx OUT OF RANGE, real_idx:");
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v101,
                      (const unsigned int *)(v4 + 112));
                    common::milog::MiLogStream::~MiLogStream(&v180);
                  }
                }
                else
                {
                  common::milog::MiLogStream::create(
                    &v179,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "initDungeonBrakeages",
                    1187);
                  v97 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                          &v179,
                          (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
                  v98 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v97,
                          &dungeon_weight_config_ptr->breakages_group_id);
                  v99 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                          v98,
                          (const char (*)[12])" config_id:");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v99,
                    (const unsigned int *)(v4 + 96));
                  common::milog::MiLogStream::~MiLogStream(&v179);
                }
                __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++(&__for_end);
              }
              v94 = 1;
            }
            else
            {
              common::milog::MiLogStream::create(
                &v180,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "initDungeonBrakeages",
                1179);
              common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v180,
                (const char (*)[43])"[ROGUE] breakages_gadget_id_list size is 0");
              common::milog::MiLogStream::~MiLogStream(&v180);
              v3 = -1;
              v94 = 0;
            }
            std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 496));
            std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 432));
            if ( v94 != 1 )
              goto LABEL_177;
          }
          if ( std::vector<unsigned int>::size(&dungeon_weight_config_ptr->byobu_count_range) == 2 )
          {
            v110 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&dungeon_weight_config_ptr->byobu_count_range, 1uLL);
            v111 = v110;
            if ( *(_BYTE *)(((unsigned __int64)v110 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v110 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v110 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v110);
            }
            v112 = *v111;
            v113 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&dungeon_weight_config_ptr->byobu_count_range, 0LL);
            v114 = v113;
            if ( *(_BYTE *)(((unsigned __int64)v113 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v113 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v113 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v113);
            }
            byobu_num = common::tools::RandomUtils::rand<unsigned int>(*v114, v112);
            if ( *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->byobu_group_id >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->byobu_group_id >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&dungeon_weight_config_ptr->byobu_group_id);
            }
            *(_DWORD *)(v4 + 48) = dungeon_weight_config_ptr->byobu_group_id;
            ServiceBox::findService<GameserverService>();
            GameserverService::getConfig((GameserverService *const)(v4 + 272));
            v115 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 272));
            byobu_group_config_ptr = LuaConfigMgr::findGroupScriptConfig(
                                       &v115->design_config.lua_config_mgr,
                                       *(_DWORD *)(v4 + 48));
            std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 272));
            if ( byobu_group_config_ptr )
            {
              common::tools::MiscUtils::getAllMapKeys<std::unordered_map<unsigned int,PointScriptConfig>>(
                (std::vector<unsigned int> *)(v4 + 368),
                &byobu_group_config_ptr->point_config_map);
              std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 432));
              for ( *(_DWORD *)(v4 + 144) = 0; ; ++*(_DWORD *)(v4 + 144) )
              {
                v117 = *(unsigned int *)(v4 + 144);
                if ( v117 >= std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 368)) )
                  break;
                if ( (*(_DWORD *)(v4 + 144) & 1) == 0 )
                  std::vector<unsigned int>::push_back(
                    (std::vector<unsigned int> *const)(v4 + 432),
                    (const std::vector<unsigned int>::value_type *)(v4 + 144));
              }
              std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v4 + 496));
              common::tools::RandomUtils::randomSelect<unsigned int>(
                (const std::vector<unsigned int> *)(v4 + 432),
                (std::vector<unsigned int> *)(v4 + 496),
                byobu_num);
              if ( std::vector<unsigned int>::size(&dungeon_weight_config_ptr->byobu_gadget_list) == 2 )
              {
                __for_range_3 = (std::vector<unsigned int> *)(v4 + 496);
                __for_begin_0._M_current = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v4 + 496))._M_current;
                __for_end._M_current = std::vector<unsigned int>::end(__for_range_3)._M_current;
                while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(&__for_begin_0, &__for_end) )
                {
                  v118 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*(&__for_begin_0);
                  v119 = v118;
                  if ( *(_BYTE *)(((unsigned __int64)v118 >> 3) + 0x7FFF8000) != 0
                    && (char)(((unsigned __int8)v118 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v118 >> 3) + 0x7FFF8000) )
                  {
                    __asan_report_load4(v118);
                  }
                  *(_DWORD *)(v4 + 64) = *v119;
                  v120 = *(unsigned int *)(v4 + 64);
                  if ( v120 >= std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 368))
                    || (v121 = (unsigned int)(*(_DWORD *)(v4 + 64) + 1),
                        v121 >= std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v4 + 368))) )
                  {
                    common::milog::MiLogStream::create(
                      &v178,
                      &common::milog::MiLogDefault::default_log_obj_,
                      3u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "initDungeonBrakeages",
                      1247);
                    v123 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                             &v178,
                             (const char (*)[41])"[ROGUE] even idx out of range, even_idx:");
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v123,
                      (const unsigned int *)(v4 + 64));
                    common::milog::MiLogStream::~MiLogStream(&v178);
                  }
                  else
                  {
                    v124 = std::vector<unsigned int>::operator[](
                             (std::vector<unsigned int> *const)(v4 + 368),
                             *(unsigned int *)(v4 + 64));
                    v125 = v124;
                    if ( *(_BYTE *)(((unsigned __int64)v124 >> 3) + 0x7FFF8000) != 0
                      && (char)(((unsigned __int8)v124 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v124 >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_load4(v124);
                    }
                    *(_DWORD *)(v4 + 80) = *v125;
                    v126 = std::vector<unsigned int>::operator[](
                             (std::vector<unsigned int> *const)(v4 + 368),
                             (unsigned int)(*(_DWORD *)(v4 + 64) + 1));
                    v127 = v126;
                    if ( *(_BYTE *)(((unsigned __int64)v126 >> 3) + 0x7FFF8000) != 0
                      && (char)(((unsigned __int8)v126 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v126 >> 3) + 0x7FFF8000) )
                    {
                      __asan_report_load4(v126);
                    }
                    *(_DWORD *)(v4 + 96) = *v127;
                    left_point_config_ptr = GroupScriptConfig::findPointConfig(
                                              byobu_group_config_ptr,
                                              *(_DWORD *)(v4 + 80));
                    if ( left_point_config_ptr )
                    {
                      right_point_config_ptr = GroupScriptConfig::findPointConfig(
                                                 byobu_group_config_ptr,
                                                 *(_DWORD *)(v4 + 96));
                      if ( right_point_config_ptr )
                      {
                        v134 = std::vector<unsigned int>::operator[](&dungeon_weight_config_ptr->byobu_gadget_list, 0LL);
                        v135 = v134;
                        if ( *(_BYTE *)(((unsigned __int64)v134 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v134 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v134 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v134);
                        }
                        *(_DWORD *)(v4 + 112) = *v135;
                        v136 = std::vector<unsigned int>::operator[](
                                 &dungeon_weight_config_ptr->byobu_gadget_list,
                                 1uLL);
                        v137 = v136;
                        if ( *(_BYTE *)(((unsigned __int64)v136 >> 3) + 0x7FFF8000) != 0
                          && (char)(((unsigned __int8)v136 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v136 >> 3)
                                                                                 + 0x7FFF8000) )
                        {
                          __asan_report_load4(v136);
                        }
                        *(_DWORD *)(v4 + 128) = *v137;
                        RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
                          (const RogueLikeDungeonRuntimeMgr::initDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v4 + 240),
                          v4 + 304,
                          (const Vector3 *)*(unsigned int *)(v4 + 112),
                          &left_point_config_ptr->pos);
                        if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 240)) )
                        {
                          common::milog::MiLogStream::create(
                            &v180,
                            &common::milog::MiLogDefault::default_log_obj_,
                            3u,
                            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                            "initDungeonBrakeages",
                            1269);
                          common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                            &v180,
                            (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
                          common::milog::MiLogStream::~MiLogStream(&v180);
                        }
                        else
                        {
                          *(std::pair<unsigned int,unsigned int> *)(v4 + 176) = std::make_pair<unsigned int &,unsigned int &>(
                                                                                  (unsigned int *)(v4 + 48),
                                                                                  (unsigned int *)(v4 + 80));
                          std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int &>(
                            &this->byobu_group_pair_gadget_id_map_,
                            (std::pair<unsigned int,unsigned int> *)(v4 + 176),
                            (unsigned int *)(v4 + 112),
                            (std::pair<unsigned int,unsigned int> *)&this->byobu_group_pair_gadget_id_map_,
                            v138);
                          v139 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 240));
                          *(_DWORD *)(v4 + 144) = Entity::getEntityId((const Entity *const)v139);
                          std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int>&>(
                            &this->byobu_entity_id_2_group_pair_map_,
                            (unsigned int *)(v4 + 144),
                            (std::pair<unsigned int,unsigned int> *)(v4 + 176),
                            v140,
                            v141);
                          v142 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                                   &this->byobu_group_pair_map_,
                                   (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v4 + 176));
                          std::weak_ptr<Gadget>::operator=<Gadget>(v142, (const std::shared_ptr<Gadget> *)(v4 + 240));
                          RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
                            (const RogueLikeDungeonRuntimeMgr::initDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v4 + 272),
                            v4 + 304,
                            (const Vector3 *)*(unsigned int *)(v4 + 128),
                            &right_point_config_ptr->pos);
                          std::shared_ptr<Gadget>::operator=(
                            (std::shared_ptr<Gadget> *const)(v4 + 240),
                            (std::shared_ptr<Gadget> *)(v4 + 272));
                          std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 272));
                          if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 240)) )
                          {
                            common::milog::MiLogStream::create(
                              &v180,
                              &common::milog::MiLogDefault::default_log_obj_,
                              3u,
                              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                              "initDungeonBrakeages",
                              1280);
                            common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                              &v180,
                              (const char (*)[43])"[ROGUE] create_brakeable_gadget_fuc failed");
                            common::milog::MiLogStream::~MiLogStream(&v180);
                          }
                          else
                          {
                            *(std::pair<unsigned int,unsigned int> *)(v4 + 208) = std::make_pair<unsigned int &,unsigned int &>(
                                                                                    (unsigned int *)(v4 + 48),
                                                                                    (unsigned int *)(v4 + 96));
                            std::pair<unsigned int,unsigned int>::operator=(
                              (std::pair<unsigned int,unsigned int> *const)(v4 + 176),
                              (std::conditional<true,std::pair<unsigned int,unsigned int>&&,std::__nonesuch_no_braces&&>::type)(v4 + 208));
                            std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int &>(
                              &this->byobu_group_pair_gadget_id_map_,
                              (std::pair<unsigned int,unsigned int> *)(v4 + 176),
                              (unsigned int *)(v4 + 128),
                              (std::pair<unsigned int,unsigned int> *)&this->byobu_group_pair_gadget_id_map_,
                              v143);
                            v144 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 240));
                            *(_DWORD *)(v4 + 144) = Entity::getEntityId((const Entity *const)v144);
                            std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int>&>(
                              &this->byobu_entity_id_2_group_pair_map_,
                              (unsigned int *)(v4 + 144),
                              (std::pair<unsigned int,unsigned int> *)(v4 + 176),
                              v145,
                              v146);
                            v147 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                                     &this->byobu_group_pair_map_,
                                     (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v4 + 176));
                            std::weak_ptr<Gadget>::operator=<Gadget>(v147, (const std::shared_ptr<Gadget> *)(v4 + 240));
                          }
                        }
                        std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 240));
                      }
                      else
                      {
                        common::milog::MiLogStream::create(
                          &v180,
                          &common::milog::MiLogDefault::default_log_obj_,
                          3u,
                          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                          "initDungeonBrakeages",
                          1261);
                        v131 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                                 &v180,
                                 (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
                        v132 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                 v131,
                                 (const unsigned int *)(v4 + 48));
                        v133 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                 v132,
                                 (const char (*)[12])" config_id:");
                        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v133,
                          (const unsigned int *)(v4 + 96));
                        common::milog::MiLogStream::~MiLogStream(&v180);
                      }
                    }
                    else
                    {
                      common::milog::MiLogStream::create(
                        &v179,
                        &common::milog::MiLogDefault::default_log_obj_,
                        3u,
                        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                        "initDungeonBrakeages",
                        1255);
                      v128 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                               &v179,
                               (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
                      v129 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                               v128,
                               (const unsigned int *)(v4 + 48));
                      v130 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                               v129,
                               (const char (*)[12])" config_id:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v130,
                        (const unsigned int *)(v4 + 80));
                      common::milog::MiLogStream::~MiLogStream(&v179);
                    }
                  }
                  __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++(&__for_begin_0);
                }
                v3 = 0;
              }
              else
              {
                common::milog::MiLogStream::create(
                  &v180,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "initDungeonBrakeages",
                  1240);
                common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                  &v180,
                  (const char (*)[43])"[ROGUE] byobu gadget list size should be 2");
                common::milog::MiLogStream::~MiLogStream(&v180);
                v3 = -1;
              }
              std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 496));
              std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 432));
              std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v4 + 368));
            }
            else
            {
              common::milog::MiLogStream::create(
                &v180,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "initDungeonBrakeages",
                1223);
              v116 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                       &v180,
                       (const char (*)[43])"[ROGUE] cannot find byobu group, group_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v116,
                (const unsigned int *)(v4 + 48));
              common::milog::MiLogStream::~MiLogStream(&v180);
              v3 = -1;
            }
          }
          else
          {
            common::milog::MiLogStream::create(
              &v180,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "initDungeonBrakeages",
              1215);
            v109 = common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(
                     &v180,
                     (const char (*)[69])"[ROGUE] byobu_count_range range incorrect, dungeon_weight_config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v109,
              (const unsigned int *)(v4 + 160));
            common::milog::MiLogStream::~MiLogStream(&v180);
            v3 = -1;
          }
          goto LABEL_177;
        }
        common::milog::MiLogStream::create(
          &v180,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "initDungeonBrakeages",
          1160);
        v85 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
                &v180,
                (const char (*)[67])"[ROGUE] breakages_count range incorrect, dungeon_weight_config_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v85, (const unsigned int *)(v4 + 160));
        common::milog::MiLogStream::~MiLogStream(&v180);
        v3 = -1;
      }
      else
      {
        common::milog::MiLogStream::create(
          &v180,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "initDungeonBrakeages",
          1111);
        v62 = common::milog::MiLogStream::operator<<<char [61],(char *[61])0>(
                &v180,
                (const char (*)[61])"[ROGUE]  ball_num_range incorrect, dungeon_weight_config_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v62, &gadget_weight_config_ptr->id);
        common::milog::MiLogStream::~MiLogStream(&v180);
        v3 = -1;
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v180,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "initDungeonBrakeages",
        1061);
      v38 = common::milog::MiLogStream::operator<<<char [61],(char *[61])0>(
              &v180,
              (const char (*)[61])"[ROGUE]  trap_num_range incorrect, dungeon_weight_config_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v38, &gadget_weight_config_ptr->id);
      common::milog::MiLogStream::~MiLogStream(&v180);
      v3 = -1;
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v180,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "initDungeonBrakeages",
      1021);
    v19 = common::milog::MiLogStream::operator<<<char [64],(char *[64])0>(
            &v180,
            (const char (*)[64])"[ROGUE] blast_bucket range incorrect, dungeon_weight_config_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, (const unsigned int *)(v4 + 160));
    common::milog::MiLogStream::~MiLogStream(&v180);
    v3 = -1;
  }
LABEL_177:
  RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::~Vector3((RogueLikeDungeonRuntimeMgr::initDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const)(v4 + 304));
LABEL_178:
  result = v3;
  if ( v181 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF804C) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 986: range 000000001592EF82-000000001592F528
std::shared_ptr<Gadget> *__fastcall RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator()(
        std::shared_ptr<Gadget> *__closure,
        __int64 gadget_id,
        const Vector3 *pos,
        unsigned __int64 rot,
        unsigned __int64 a5)
{
  unsigned __int64 v5; // r13
  __int64 v6; // rax
  _DWORD *v7; // r12
  Scene *v8; // rax
  common::milog::MiLogStream *v9; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // r14
  unsigned __int64 v12; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  common::milog::MiLogStream *v14; // rax
  __int64 (__fastcall *v16)(std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, VisionContext *); // [rsp+0h] [rbp-4A0h]
  int v19; // [rsp+1Ch] [rbp-484h]
  common::milog::MiLogStream v20; // [rsp+30h] [rbp-470h] BYREF
  char v21[1104]; // [rsp+50h] [rbp-450h] BYREF

  v19 = (int)pos;
  v5 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_5(1056LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "4 48 4 8 ret:1007 64 4 13 gadget_id:986 80 16 15 gadget_ptr:1000 112 816 16 gadget_param:992";
  *(_QWORD *)(v5 + 16) = RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::operator();
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -234556943;
  v7[536862722] = 61956;
  v7[536862723] = 62194;
  v7[536862749] = -202116109;
  v7[536862750] = -202116109;
  v7[536862751] = -202116109;
  v7[536862752] = -202116109;
  *(_DWORD *)(v5 + 64) = v19;
  if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)gadget_id, 0LL) )
  {
    std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
  }
  else
  {
    GadgetParam::GadgetParam((GadgetParam *const)(v5 + 112));
    *(_DWORD *)(v5 + 112) = *(_DWORD *)(v5 + 64);
    v8 = (Scene *)std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)gadget_id);
    *(_DWORD *)(v5 + 120) = Scene::genNewEntityId(v8, PROT_ENTITY_GADGET);
    if ( (char)(rot & 7) >= *(_BYTE *)((rot >> 3) + 0x7FFF8000) && *(_BYTE *)((rot >> 3) + 0x7FFF8000) != 0
      || *(_BYTE *)(((rot + 11) >> 3) + 0x7FFF8000) != 0
      && (char)((rot + 11) & 7) >= *(_BYTE *)(((rot + 11) >> 3) + 0x7FFF8000) )
    {
      __asan_report_load_n(rot, 12LL);
    }
    *(_QWORD *)(v5 + 124) = *(_QWORD *)rot;
    *(_DWORD *)(v5 + 132) = *(_DWORD *)(rot + 8);
    if ( (char)(a5 & 7) >= *(_BYTE *)((a5 >> 3) + 0x7FFF8000) && *(_BYTE *)((a5 >> 3) + 0x7FFF8000) != 0
      || *(_BYTE *)(((a5 + 11) >> 3) + 0x7FFF8000) != 0
      && (char)((a5 + 11) & 7) >= *(_BYTE *)(((a5 + 11) >> 3) + 0x7FFF8000) )
    {
      __asan_report_load_n(a5, 12LL);
    }
    *(_QWORD *)(v5 + 136) = *(_QWORD *)a5;
    *(_DWORD *)(v5 + 144) = *(_DWORD *)(a5 + 8);
    if ( *(_BYTE *)(((unsigned __int64)(gadget_id + 16) >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)(gadget_id + 16) >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(gadget_id + 16);
    }
    *(_DWORD *)(v5 + 148) = *(_DWORD *)(gadget_id + 16) + 1;
    *(_DWORD *)(v5 + 204) = 0;
    *(_DWORD *)(v5 + 164) = 0;
    EntityMgr::createGadget((const GadgetParam *)(v5 + 80));
    if ( std::operator==<Gadget>((const std::shared_ptr<Gadget> *)(v5 + 80), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v20,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "operator()",
        1003);
      v9 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
             &v20,
             (const char (*)[46])"[ROGUE] gadget_ptr create failed. gadget_id: ");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v5 + 64));
      common::milog::MiLogStream::~MiLogStream(&v20);
      std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
    }
    else
    {
      v10 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v5 + 80));
      v11 = v10;
      if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
        __asan_report_load8(v10);
      v12 = *(_QWORD *)v11->baseclass_0 + 56LL;
      if ( *(_BYTE *)((v12 >> 3) + 0x7FFF8000) )
        v12 = __asan_report_load8(*(_QWORD *)v11->baseclass_0 + 56LL);
      v16 = *(__int64 (__fastcall **)(std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, VisionContext *))v12;
      v13 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)gadget_id);
      *(_DWORD *)(v5 + 48) = v16(v11, v13, &VisionContext::meet_context);
      if ( *(_DWORD *)(v5 + 48) )
      {
        common::milog::MiLogStream::create(
          &v20,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "operator()",
          1010);
        v14 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                &v20,
                (const char (*)[43])"[ROGUE] gadget_ptr enterScene failed, ret:");
        common::milog::MiLogStream::operator<<<int,(int *)0>(v14, (const int *)(v5 + 48));
        common::milog::MiLogStream::~MiLogStream(&v20);
        std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
      }
      else
      {
        std::shared_ptr<Gadget>::shared_ptr(__closure, (std::shared_ptr<Gadget> *)(v5 + 80));
      }
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v5 + 80));
    GadgetParam::~GadgetParam((GadgetParam *const)(v5 + 112));
  }
  if ( v21 == (char *)v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8074) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF807C) = 0LL;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    __asan_stack_free_5(v5, 1056LL, v21);
  }
  return __closure;
};

// Line 986: range 000000001592F52A-000000001592F544
void __cdecl RogueLikeDungeonRuntimeMgr::initDungeonBrakeages(std::shared_ptr<DungeonScene>,unsigned int)::{lambda(unsigned int,Vector3 const&,Vector3 const&)#1}::~Vector3(
        RogueLikeDungeonRuntimeMgr::initDungeonBrakeages::<lambda(uint32_t, const Vector3&, const Vector3&)> *const this)
{
  std::shared_ptr<DungeonScene>::~shared_ptr(&this->__dungeon_scene_ptr);
};

// Line 1292: range 0000000015932BF8-0000000015935FDB
__int64 __fastcall RogueLikeDungeonRuntimeMgr::constructDungeon(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t dungeon_weight_id,
        uint32_t dungeon_id,
        DungeonScenePtr *p_dungeon_scene_ptr)
{
  unsigned int v4; // r14d
  unsigned __int64 v5; // r13
  __int64 v6; // rax
  _DWORD *v7; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  std::_Rb_tree_const_iterator<unsigned int>::reference v12; // rax
  _DWORD *v13; // rdx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  data::RogueCellType special_type; // ecx
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rax
  unsigned __int64 v22; // rax
  const RoguelikeEfffectCellParam *RoguelikeEfffectCellParam; // rax
  data::RogueCellType *p_type; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v29; // rax
  int v30; // r15d
  std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::pointer v31; // rdx
  unsigned int *p_second; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v33; // rax
  bool v34; // r15
  int v35; // eax
  std::vector<data::RogueGadgetDirType>::size_type v36; // r15
  common::milog::MiLogStream *v37; // rax
  int v38; // r15d
  const std::map<data::RogueGadgetDirType,unsigned int>::key_type *v39; // rax
  std::map<data::RogueGadgetDirType,unsigned int>::mapped_type *v40; // rax
  _DWORD *v41; // rdx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v42; // rax
  bool v43; // r15
  common::milog::MiLogStream *v44; // rax
  common::milog::MiLogStream *v45; // rax
  common::milog::MiLogStream *v46; // rax
  common::milog::MiLogStream *v47; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v48; // rax
  unsigned __int64 v49; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v50; // rax
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v51; // rax
  _DWORD *v52; // rdx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v53; // rax
  common::milog::MiLogStream *v54; // rax
  const unsigned int *M_current; // r14
  std::vector<unsigned int>::const_iterator v56; // rax
  unsigned int *v57; // rax
  uint32_t *v58; // rdx
  common::milog::MiLogStream *v59; // rax
  common::milog::MiLogStream *v60; // rax
  common::milog::MiLogStream *v61; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v62; // rax
  unsigned int *v63; // rdx
  unsigned int v64; // r14d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v65; // rax
  unsigned int *v66; // rdx
  const unsigned int *v67; // rax
  uint32_t *v68; // rax
  uint32_t *v69; // rdx
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v70; // rax
  unsigned int *v71; // rdx
  unsigned int v72; // r14d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v73; // rax
  unsigned int *v74; // rdx
  std::_Rb_tree_const_iterator<unsigned int>::reference v75; // rax
  _DWORD *v76; // rdx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v77; // rax
  unsigned __int64 v78; // rax
  std::_Rb_tree_const_iterator<unsigned int>::reference v79; // rax
  _DWORD *v80; // rdx
  const ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  uint32_t CellWeightByDungeonIdAndCellId; // r14d
  char *v83; // rsi
  std::map<unsigned int,unsigned int>::mapped_type *v84; // rax
  uint32_t *v85; // rdx
  char v86; // cl
  common::milog::MiLogStream *v87; // rax
  common::milog::MiLogStream *v88; // rax
  common::milog::MiLogStream *v89; // rax
  common::milog::MiLogStream *v90; // rax
  common::milog::MiLogStream *v91; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v92; // rax
  unsigned __int64 v93; // rax
  std::map<data::RogueCellType,unsigned int>::mapped_type *v94; // rax
  _DWORD *v95; // rdx
  int v96; // r14d
  std::map<data::RogueCellType,unsigned int>::mapped_type *v97; // rax
  _DWORD *v98; // rdx
  std::_Rb_tree_const_iterator<unsigned int>::_Base_ptr M_node; // r14
  std::set<unsigned int>::iterator v100; // rax
  uint32_t *v101; // rax
  uint32_t *v102; // rdx
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v103; // rax
  _DWORD *v104; // rdx
  common::milog::MiLogStream *v105; // rax
  std::_Rb_tree_const_iterator<unsigned int>::reference v106; // rax
  _DWORD *v107; // rdx
  common::milog::MiLogStream *v108; // rax
  common::milog::MiLogStream *v109; // rax
  common::milog::MiLogStream *v110; // rax
  common::milog::MiLogStream *v111; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v112; // rax
  unsigned int *v113; // rdx
  unsigned int v114; // r14d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v115; // rax
  unsigned int *v116; // rdx
  data::RogueCellType *v117; // rax
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v118; // rax
  _DWORD *v119; // rdx
  common::milog::MiLogStream *v120; // rax
  const ActivityRogueExcelConfigMgr *p_dungeon_id; // rdi
  uint32_t v122; // ecx
  common::milog::MiLogStream *v123; // rax
  common::milog::MiLogStream *v124; // rax
  common::milog::MiLogStream *v125; // rax
  LuaConfigMgr *p_lua_config_mgr; // rcx
  common::milog::MiLogStream *v127; // rax
  common::milog::MiLogStream *v129; // rax
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v130; // rax
  uint32_t *v131; // rdx
  std::vector<int> *p_guard_gadget_group_point_vec; // rdx
  __int64 result; // rax
  std::allocator<unsigned int> __a; // [rsp+25h] [rbp-51Bh] BYREF
  bool is_handle_spring_before_boss; // [rsp+26h] [rbp-51Ah]
  bool is_handle_expected_at_least_store; // [rsp+27h] [rbp-519h]
  uint32_t select_num; // [rsp+28h] [rbp-518h]
  uint32_t i; // [rsp+2Ch] [rbp-514h]
  uint32_t total_guard_count; // [rsp+30h] [rbp-510h]
  uint32_t cell_id; // [rsp+34h] [rbp-50Ch]
  uint32_t select_num_0; // [rsp+38h] [rbp-508h]
  uint32_t point_config_id; // [rsp+3Ch] [rbp-504h]
  uint32_t low; // [rsp+40h] [rbp-500h]
  uint32_t high; // [rsp+44h] [rbp-4FCh]
  std::vector<unsigned int>::iterator __for_begin; // [rsp+48h] [rbp-4F8h] BYREF
  std::vector<unsigned int>::iterator __for_end_0; // [rsp+50h] [rbp-4F0h] BYREF
  std::vector<data::RogueSequenceCellConfig>::const_iterator __for_begin_0; // [rsp+58h] [rbp-4E8h] BYREF
  std::vector<data::RogueSequenceCellConfig>::const_iterator __for_end_1; // [rsp+60h] [rbp-4E0h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+68h] [rbp-4D8h] BYREF
  const data::RoguelikeDungeonWeightExcelConfig *dungeon_weight_config_ptr; // [rsp+70h] [rbp-4D0h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+78h] [rbp-4C8h]
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+80h] [rbp-4C0h]
  std::pair<unsigned int const,RogueCell> *__in; // [rsp+88h] [rbp-4B8h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *_; // [rsp+90h] [rbp-4B0h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+98h] [rbp-4A8h]
  const data::RogueDungeonCellExcelConfig *boss_cell_config_ptr; // [rsp+A0h] [rbp-4A0h]
  std::vector<unsigned int> *__for_range_0; // [rsp+A8h] [rbp-498h]
  std::vector<unsigned int> *__for_range_4; // [rsp+B0h] [rbp-490h]
  std::set<unsigned int> *__for_range_5; // [rsp+B8h] [rbp-488h]
  std::map<unsigned int,RogueCell> *__for_range_6; // [rsp+C0h] [rbp-480h]
  std::vector<unsigned int> *__for_range_7; // [rsp+C8h] [rbp-478h]
  RogueCell *cell_ptr; // [rsp+D0h] [rbp-470h]
  RogueCell *cell_1; // [rsp+D8h] [rbp-468h]
  const data::RogueDungeonCellExcelConfig *cell_config_ptr_0; // [rsp+E0h] [rbp-460h]
  const GroupScriptConfig *group_script_config_ptr; // [rsp+E8h] [rbp-458h]
  const std::vector<unsigned int> *tag_point_vec_ptr; // [rsp+F0h] [rbp-450h]
  std::pair<unsigned int const,RogueCell> *v169; // [rsp+F8h] [rbp-448h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *cell_id_0; // [rsp+100h] [rbp-440h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell_0; // [rsp+108h] [rbp-438h]
  const data::RogueSequenceExcelConfig *sequence_config_ptr; // [rsp+110h] [rbp-430h]
  const std::vector<data::RogueSequenceCellConfig> *__for_range_1; // [rsp+118h] [rbp-428h]
  const data::RogueSequenceCellConfig *seq_cell_config; // [rsp+120h] [rbp-420h]
  std::set<unsigned int> *__for_range_3; // [rsp+128h] [rbp-418h]
  std::set<unsigned int> *__for_range_2; // [rsp+130h] [rbp-410h]
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+138h] [rbp-408h]
  std::shared_ptr<Config> v178; // [rsp+140h] [rbp-400h] BYREF
  common::milog::MiLogStream v179; // [rsp+150h] [rbp-3F0h] BYREF
  common::milog::MiLogStream v180; // [rsp+170h] [rbp-3D0h] BYREF
  char v181[944]; // [rsp+190h] [rbp-3B0h] BYREF

  v5 = (unsigned __int64)v181;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_4(896LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "17 48 4 17 boss_cell_id:1343 64 4 23 sequence_config_id:1408 80 4 12 cell_id:1572 96 4 19 cell_c"
                        "onfig_id:1311 112 4 22 dungeon_weight_id:1291 128 4 15 dungeon_id:1291 144 8 9 iter:1309 176 16 "
                        "15 erase_pred:1418 208 24 17 sequence_vec:1403 272 24 23 challenge_cell_vec:1562 336 24 28 selec"
                        "ted_guard_cell_vec:1570 400 48 31 dungeon_cell_config_id_set:1305 480 48 26 diff_monster_pool_ma"
                        "p:1306 560 48 29 assigned_cell_type_count:1307 640 48 19 cell_group_set:1416 720 48 20 cell_weig"
                        "ht_map:1487 800 64 22 effect_cell_param:1339";
  *(_QWORD *)(v5 + 16) = RogueLikeDungeonRuntimeMgr::constructDungeon;
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -234556943;
  v7[536862722] = -234556924;
  v7[536862723] = -234556924;
  v7[536862724] = 61956;
  v7[536862724] = -234881024;
  v7[536862725] = 62194;
  v7[536862726] = 62194;
  v7[536862727] = -218959360;
  v7[536862728] = 62194;
  v7[536862729] = -218959360;
  v7[536862730] = 62194;
  v7[536862731] = -218959360;
  v7[536862732] = 62194;
  v7[536862734] = -218959118;
  v7[536862736] = -219021312;
  v7[536862737] = 62194;
  v7[536862739] = -218959118;
  v7[536862741] = -219021312;
  v7[536862742] = 62194;
  v7[536862744] = -218959118;
  v7[536862747] = -202116109;
  *(_DWORD *)(v5 + 112) = dungeon_weight_id;
  *(_DWORD *)(v5 + 128) = dungeon_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v178);
  v8 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
  dungeon_weight_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRoguelikeDungeonWeightExcelConfig(
                                &v8->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                *(_DWORD *)(v5 + 112));
  std::shared_ptr<Config>::~shared_ptr(&v178);
  if ( !dungeon_weight_config_ptr )
  {
    common::milog::MiLogStream::create(
      &v180,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "constructDungeon",
      1296);
    v9 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
           &v180,
           (const char (*)[65])"[ROGUE] dungeon_weight_config_ptr is nullptr, dungeon_weight_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v5 + 112));
    common::milog::MiLogStream::~MiLogStream(&v180);
    v4 = -1;
    goto LABEL_216;
  }
  std::map<unsigned int,RogueCell>::clear(&this->rogue_cell_map_);
  std::map<data::RogueCellType,std::unordered_set<unsigned int>>::clear(&this->cell_type_to_cell_id_map_);
  common::milog::MiLogStream::create(
    &v180,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
    "constructDungeon",
    1304);
  v10 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
          &v180,
          (const char (*)[48])"[ROGUE] start constructing dungeon, dungeon_id:");
  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v5 + 128));
  common::milog::MiLogStream::~MiLogStream(&v180);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v178);
  v11 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
  ActivityRogueExcelConfigMgr::findDungeonCellSet(
    (std::set<unsigned int> *)(v5 + 400),
    &v11->design_config.txt_config_mgr.activity_rogue_config_mgr,
    *(_DWORD *)(v5 + 128));
  std::shared_ptr<Config>::~shared_ptr(&v178);
  std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::map((std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *const)(v5 + 480));
  std::map<data::RogueCellType,unsigned int>::map((std::map<data::RogueCellType,unsigned int> *const)(v5 + 560));
  *(std::set<unsigned int>::iterator *)(v5 + 144) = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v5 + 400));
  while ( 1 )
  {
    __for_end._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Base_ptr)std::set<unsigned int>::end((const std::set<unsigned int> *const)(v5 + 400))._M_node;
    if ( !std::operator!=(
            (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v5 + 144),
            (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)&__for_end) )
      break;
    v12 = std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144));
    v13 = v12;
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v12 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(v12);
    }
    *(_DWORD *)(v5 + 96) = *v13;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v178);
    v14 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
    cell_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueDungeonCellExcelConfig(
                        &v14->design_config.txt_config_mgr.activity_rogue_config_mgr,
                        *(_DWORD *)(v5 + 96));
    std::shared_ptr<Config>::~shared_ptr(&v178);
    if ( cell_config_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->special_type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->special_type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&cell_config_ptr->special_type);
      }
      if ( cell_config_ptr->special_type )
      {
        special_type = cell_config_ptr->special_type;
        if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&cell_config_ptr->cell_id);
        }
        if ( RogueLikeDungeonRuntimeMgr::assignCell(
               this,
               *(_DWORD *)(v5 + 128),
               cell_config_ptr->cell_id,
               special_type,
               (std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *)(v5 + 480)) )
        {
          common::milog::MiLogStream::create(
            &v180,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "constructDungeon",
            1324);
          v19 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                  &v180,
                  (const char (*)[39])"[ROGUE] assignCell failed, dungeon_id:");
          v20 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v19,
                  (const unsigned int *)(v5 + 128));
          v21 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v20, (const char (*)[10])" cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, &cell_config_ptr->cell_id);
          common::milog::MiLogStream::~MiLogStream(&v180);
          std::_Rb_tree_const_iterator<unsigned int>::operator++(
            (std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144),
            0);
        }
        else
        {
          *(std::set<unsigned int>::iterator *)(v5 + 144) = std::set<unsigned int>::erase[abi:cxx11](
                                                              (std::set<unsigned int> *const)(v5 + 400),
                                                              *(std::set<unsigned int>::const_iterator *)(v5 + 144));
          v22 = (unsigned __int64)std::map<data::RogueCellType,unsigned int>::operator[](
                                    (std::map<data::RogueCellType,unsigned int> *const)(v5 + 560),
                                    &cell_config_ptr->special_type);
          if ( *(_BYTE *)((v22 >> 3) + 0x7FFF8000) != 0 && (char)((v22 & 7) + 3) >= *(_BYTE *)((v22 >> 3) + 0x7FFF8000) )
            v22 = __asan_report_load4(v22);
          ++*(_DWORD *)v22;
        }
      }
      else
      {
        std::_Rb_tree_const_iterator<unsigned int>::operator++(
          (std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144),
          0);
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v179,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "constructDungeon",
        1315);
      v15 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
              &v179,
              (const char (*)[48])"[ROGUE] cell_config_ptr is nullptr, dungeon_id:");
      v16 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v15,
              (const unsigned int *)(v5 + 128));
      v17 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v16, (const char (*)[10])" cell_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, (const unsigned int *)(v5 + 96));
      common::milog::MiLogStream::~MiLogStream(&v179);
      std::_Rb_tree_const_iterator<unsigned int>::operator++(
        (std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144),
        0);
    }
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
  RoguelikeEfffectCellParam = RoguelikeMiscMgr::getRoguelikeEfffectCellParam(misc_mgr);
  RoguelikeEfffectCellParam::RoguelikeEfffectCellParam(
    (RoguelikeEfffectCellParam *const)(v5 + 800),
    RoguelikeEfffectCellParam);
  if ( !*(_BYTE *)(v5 + 856) )
    goto LABEL_62;
  common::milog::MiLogStream::create(
    &v180,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
    "constructDungeon",
    1342);
  common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
    &v180,
    (const char (*)[46])"[ROGUE] spring should appear before boss cell");
  common::milog::MiLogStream::~MiLogStream(&v180);
  *(_DWORD *)(v5 + 48) = 0;
  __for_range = &this->rogue_cell_map_;
  *(std::map<unsigned int,RogueCell>::iterator *)(v5 + 144) = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_);
  __for_end._M_node = std::map<unsigned int,RogueCell>::end(__for_range)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Self *)(v5 + 144),
            &__for_end) )
  {
    __in = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> > *const)(v5 + 144));
    _ = std::get<0ul,unsigned int const,RogueCell>(__in);
    cell = std::get<1ul,unsigned int const,RogueCell>(__in);
    p_type = &cell->type;
    if ( *(_BYTE *)(((unsigned __int64)p_type >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)p_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(p_type);
    }
    if ( cell->type == ROGUE_CELL_TYPE_BOSS )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&cell->cell_id);
      }
      *(_DWORD *)(v5 + 48) = cell->cell_id;
      break;
    }
    std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> > *const)(v5 + 144));
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v178);
  v25 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
  boss_cell_config_ptr = ActivityRogueExcelConfigMgr::findDungeonCellConfigByDungeonIdAndCellId(
                           &v25->design_config.txt_config_mgr.activity_rogue_config_mgr,
                           *(_DWORD *)(v5 + 128),
                           *(_DWORD *)(v5 + 48));
  std::shared_ptr<Config>::~shared_ptr(&v178);
  if ( boss_cell_config_ptr )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v178);
    v29 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
    ActivityRogueExcelConfigMgr::findCellAjdMap(
      (RogueCellAdjMap *)(v5 + 720),
      &v29->design_config.txt_config_mgr.activity_rogue_config_mgr,
      *(_DWORD *)(v5 + 128),
      *(_DWORD *)(v5 + 48));
    std::shared_ptr<Config>::~shared_ptr(&v178);
    if ( std::map<data::RogueGadgetDirType,unsigned int>::size((const std::map<data::RogueGadgetDirType,unsigned int> *const)(v5 + 720)) )
    {
      *(std::map<data::RogueGadgetDirType,unsigned int>::iterator *)(v5 + 144) = std::map<data::RogueGadgetDirType,unsigned int>::begin((std::map<data::RogueGadgetDirType,unsigned int> *const)(v5 + 720));
      while ( 1 )
      {
        __for_end._M_node = std::map<data::RogueGadgetDirType,unsigned int>::end((std::map<data::RogueGadgetDirType,unsigned int> *const)(v5 + 720))._M_node;
        if ( !std::operator!=(
                (const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::_Self *)(v5 + 144),
                (const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::_Self *)&__for_end) )
          break;
        v31 = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> > *const)(v5 + 144));
        p_second = &v31->second;
        if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(p_second);
        }
        cell_id = v31->second;
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v178);
        v33 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
        *(_DWORD *)(v5 + 96) = ActivityRogueExcelConfigMgr::findCellConfigIdByDungeonIdAndCellId(
                                 &v33->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                 *(_DWORD *)(v5 + 128),
                                 cell_id);
        v34 = !common::tools::MiscUtils::isContains<std::set<unsigned int>,unsigned int>(
                 (std::set<unsigned int> *)(v5 + 400),
                 (const unsigned int *)(v5 + 96));
        std::shared_ptr<Config>::~shared_ptr(&v178);
        if ( v34 )
          *(std::map<data::RogueGadgetDirType,unsigned int>::iterator *)(v5 + 144) = std::map<data::RogueGadgetDirType,unsigned int>::erase[abi:cxx11](
                                                                                       (std::map<data::RogueGadgetDirType,unsigned int> *const)(v5 + 720),
                                                                                       *(std::map<data::RogueGadgetDirType,unsigned int>::iterator *)(v5 + 144));
        else
          std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator++(
            (std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> > *const)(v5 + 144),
            0);
      }
      if ( std::map<data::RogueGadgetDirType,unsigned int>::empty((const std::map<data::RogueGadgetDirType,unsigned int> *const)(v5 + 720)) )
        goto LABEL_60;
      common::tools::MiscUtils::getAllMapKeys<std::map<data::RogueGadgetDirType,unsigned int>>(
        (std::vector<data::RogueGadgetDirType> *)(v5 + 336),
        (const std::map<data::RogueGadgetDirType,unsigned int> *)(v5 + 720));
      v35 = std::vector<data::RogueGadgetDirType>::size((const std::vector<data::RogueGadgetDirType> *const)(v5 + 336));
      *(_DWORD *)(v5 + 64) = common::tools::RandomUtils::rand<unsigned int>(0, v35 - 1);
      v36 = *(unsigned int *)(v5 + 64);
      if ( v36 < std::vector<data::RogueGadgetDirType>::size((const std::vector<data::RogueGadgetDirType> *const)(v5 + 336)) )
      {
        v39 = std::vector<data::RogueGadgetDirType>::operator[](
                (std::vector<data::RogueGadgetDirType> *const)(v5 + 336),
                *(unsigned int *)(v5 + 64));
        v40 = std::map<data::RogueGadgetDirType,unsigned int>::operator[](
                (std::map<data::RogueGadgetDirType,unsigned int> *const)(v5 + 720),
                v39);
        v41 = v40;
        if ( *(_BYTE *)(((unsigned __int64)v40 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v40 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v40 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v40);
        }
        *(_DWORD *)(v5 + 80) = *v41;
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v178);
        v42 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
        v43 = ActivityRogueExcelConfigMgr::findDungeonCellConfigByDungeonIdAndCellId(
                &v42->design_config.txt_config_mgr.activity_rogue_config_mgr,
                *(_DWORD *)(v5 + 128),
                *(_DWORD *)(v5 + 80)) == 0LL;
        std::shared_ptr<Config>::~shared_ptr(&v178);
        if ( v43 )
        {
          common::milog::MiLogStream::create(
            &v180,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "constructDungeon",
            1389);
          v44 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                  &v180,
                  (const char (*)[41])"[ROGUE] adj cell not found, adj_cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v44, (const unsigned int *)(v5 + 80));
          common::milog::MiLogStream::~MiLogStream(&v180);
          v4 = -1;
          v38 = 0;
        }
        else if ( RogueLikeDungeonRuntimeMgr::assignCell(
                    this,
                    *(_DWORD *)(v5 + 128),
                    *(_DWORD *)(v5 + 80),
                    ROGUE_CELL_TYPE_SPRING,
                    (std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *)(v5 + 480)) )
        {
          common::milog::MiLogStream::create(
            &v180,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "constructDungeon",
            1394);
          v45 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                  &v180,
                  (const char (*)[39])"[ROGUE] assignCell failed, dungeon_id:");
          v46 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v45,
                  (const unsigned int *)(v5 + 128));
          v47 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v46, (const char (*)[10])" cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v47, (const unsigned int *)(v5 + 80));
          common::milog::MiLogStream::~MiLogStream(&v180);
          v4 = -1;
          v38 = 0;
        }
        else
        {
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)&v178);
          v48 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
          *(_DWORD *)(v5 + 96) = ActivityRogueExcelConfigMgr::findCellConfigIdByDungeonIdAndCellId(
                                   &v48->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                   *(_DWORD *)(v5 + 128),
                                   *(_DWORD *)(v5 + 80));
          std::set<unsigned int>::erase(
            (std::set<unsigned int> *const)(v5 + 400),
            (const std::set<unsigned int>::key_type *)(v5 + 96));
          std::shared_ptr<Config>::~shared_ptr(&v178);
          *(_DWORD *)(v5 + 96) = 5;
          v49 = (unsigned __int64)std::map<data::RogueCellType,unsigned int>::operator[](
                                    (std::map<data::RogueCellType,unsigned int> *const)(v5 + 560),
                                    (std::map<data::RogueCellType,unsigned int>::key_type *)(v5 + 96));
          if ( *(_BYTE *)((v49 >> 3) + 0x7FFF8000) != 0 && (char)((v49 & 7) + 3) >= *(_BYTE *)((v49 >> 3) + 0x7FFF8000) )
            v49 = __asan_report_load4(v49);
          ++*(_DWORD *)v49;
          v38 = 1;
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v180,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "constructDungeon",
          1383);
        v37 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                &v180,
                (const char (*)[28])"[ROGUE] rand exceed!, rand:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v37, (const unsigned int *)(v5 + 64));
        common::milog::MiLogStream::~MiLogStream(&v180);
        v4 = -1;
        v38 = 0;
      }
      std::vector<data::RogueGadgetDirType>::~vector((std::vector<data::RogueGadgetDirType> *const)(v5 + 336));
      if ( v38 == 1 )
LABEL_60:
        v30 = 1;
      else
        v30 = 0;
    }
    else
    {
      common::milog::MiLogStream::create(
        &v180,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "constructDungeon",
        1361);
      common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
        &v180,
        (const char (*)[38])"[ROGUE] boss cell must have adj cell!");
      common::milog::MiLogStream::~MiLogStream(&v180);
      v4 = -1;
      v30 = 0;
    }
    std::map<data::RogueGadgetDirType,unsigned int>::~map((std::map<data::RogueGadgetDirType,unsigned int> *const)(v5 + 720));
    if ( v30 != 1 )
      goto LABEL_215;
LABEL_62:
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v178);
    v50 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
    ActivityRogueExcelConfigMgr::findDungeonSequenceVec(
      (std::vector<unsigned int> *)(v5 + 208),
      &v50->design_config.txt_config_mgr.activity_rogue_config_mgr,
      *(_DWORD *)(v5 + 128));
    std::shared_ptr<Config>::~shared_ptr(&v178);
    is_handle_spring_before_boss = 0;
    is_handle_expected_at_least_store = 0;
    __for_range_0 = (std::vector<unsigned int> *)(v5 + 208);
    __for_begin._M_current = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v5 + 208))._M_current;
    __for_end_0._M_current = std::vector<unsigned int>::end(__for_range_0)._M_current;
    while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(&__for_begin, &__for_end_0) )
    {
      v51 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*(&__for_begin);
      v52 = v51;
      if ( *(_BYTE *)(((unsigned __int64)v51 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v51 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v51 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v51);
      }
      *(_DWORD *)(v5 + 64) = *v52;
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v178);
      v53 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
      sequence_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueSequenceExcelConfig(
                              &v53->design_config.txt_config_mgr.activity_rogue_config_mgr,
                              *(_DWORD *)(v5 + 64));
      std::shared_ptr<Config>::~shared_ptr(&v178);
      if ( sequence_config_ptr )
      {
        M_current = std::vector<unsigned int>::end(&sequence_config_ptr->cell_list)._M_current;
        v56._M_current = std::vector<unsigned int>::begin(&sequence_config_ptr->cell_list)._M_current;
        std::set<unsigned int>::set<__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>>(
          (std::set<unsigned int> *const)(v5 + 640),
          v56,
          (__gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >)M_current);
        *(_DWORD *)(v5 + 176) = *(_DWORD *)(v5 + 128);
        *(_QWORD *)(v5 + 184) = v5 + 400;
        *(std::set<unsigned int>::iterator *)(v5 + 144) = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v5 + 640));
        while ( 1 )
        {
          __for_end._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Base_ptr)std::set<unsigned int>::end((const std::set<unsigned int> *const)(v5 + 640))._M_node;
          if ( !std::operator!=(
                  (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v5 + 144),
                  (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)&__for_end) )
            break;
          v57 = (unsigned int *)std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144));
          v58 = v57;
          if ( *(_BYTE *)(((unsigned __int64)v57 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v57 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v57 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v57);
          }
          if ( RogueLikeDungeonRuntimeMgr::constructDungeon(unsigned int,unsigned int,std::shared_ptr<DungeonScene>)::{lambda(unsigned int)#1}::operator()(
                 (const RogueLikeDungeonRuntimeMgr::constructDungeon::<lambda(uint32_t)> *const)(v5 + 176),
                 *v58) )
          {
            *(std::set<unsigned int>::iterator *)(v5 + 144) = std::set<unsigned int>::erase[abi:cxx11](
                                                                (std::set<unsigned int> *const)(v5 + 640),
                                                                *(std::set<unsigned int>::const_iterator *)(v5 + 144));
          }
          else
          {
            std::_Rb_tree_const_iterator<unsigned int>::operator++(
              (std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144),
              0);
          }
        }
        __for_range_1 = &sequence_config_ptr->cell_seq_list;
        __for_begin_0._M_current = std::vector<data::RogueSequenceCellConfig>::begin(&sequence_config_ptr->cell_seq_list)._M_current;
        __for_end_1._M_current = std::vector<data::RogueSequenceCellConfig>::end(__for_range_1)._M_current;
        while ( __gnu_cxx::operator!=<data::RogueSequenceCellConfig const*,std::vector<data::RogueSequenceCellConfig>>(
                  &__for_begin_0,
                  &__for_end_1) )
        {
          seq_cell_config = __gnu_cxx::__normal_iterator<data::RogueSequenceCellConfig const*,std::vector<data::RogueSequenceCellConfig>>::operator*(&__for_begin_0);
          if ( std::set<unsigned int>::empty((const std::set<unsigned int> *const)(v5 + 640)) )
          {
            common::milog::MiLogStream::create(
              &v180,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "constructDungeon",
              1436);
            v59 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                    &v180,
                    (const char (*)[21])"[ROGUE] sequence_id:");
            v60 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v59,
                    (const unsigned int *)(v5 + 64));
            common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(
              v60,
              (const char (*)[18])" has no more cell");
            common::milog::MiLogStream::~MiLogStream(&v180);
            break;
          }
          if ( std::vector<unsigned int>::size(&seq_cell_config->range) == 2 )
          {
            select_num = 0;
            if ( !*(_BYTE *)(v5 + 856) )
              goto LABEL_221;
            if ( *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&seq_cell_config->type);
            }
            if ( seq_cell_config->type == ROGUE_CELL_TYPE_SPRING && !is_handle_spring_before_boss )
            {
              v62 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&seq_cell_config->range, 1uLL);
              v63 = v62;
              if ( *(_BYTE *)(((unsigned __int64)v62 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v62 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v62 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v62);
              }
              v64 = *v63;
              v65 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&seq_cell_config->range, 0LL);
              v66 = v65;
              if ( *(_BYTE *)(((unsigned __int64)v65 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v65 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v65 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v65);
              }
              select_num = common::tools::RandomUtils::rand<unsigned int>(*v66, v64);
              if ( select_num )
              {
                --select_num;
                is_handle_spring_before_boss = 1;
              }
            }
            else
            {
              if ( !*(_DWORD *)(v5 + 852) )
                goto LABEL_100;
LABEL_221:
              if ( *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4(&seq_cell_config->type);
              }
              if ( seq_cell_config->type == ROGUE_CELL_TYPE_STORE && !is_handle_expected_at_least_store )
              {
                low = *(_DWORD *)(v5 + 852);
                v67 = std::vector<unsigned int>::operator[](&seq_cell_config->range, 1uLL);
                v68 = (uint32_t *)std::max<unsigned int>(v67, (const unsigned int *)(v5 + 852));
                v69 = v68;
                if ( *(_BYTE *)(((unsigned __int64)v68 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v68 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v68 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v68);
                }
                high = *v69;
                select_num = common::tools::RandomUtils::rand<unsigned int>(low, high);
                is_handle_expected_at_least_store = 1;
              }
              else
              {
LABEL_100:
                v70 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&seq_cell_config->range, 1uLL);
                v71 = v70;
                if ( *(_BYTE *)(((unsigned __int64)v70 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v70 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v70 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v70);
                }
                v72 = *v71;
                v73 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&seq_cell_config->range, 0LL);
                v74 = v73;
                if ( *(_BYTE *)(((unsigned __int64)v73 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v73 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v73 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v73);
                }
                select_num = common::tools::RandomUtils::rand<unsigned int>(*v74, v72);
              }
            }
            if ( select_num < std::set<unsigned int>::size((const std::set<unsigned int> *const)(v5 + 640)) )
            {
              std::map<unsigned int,unsigned int>::map((std::map<unsigned int,unsigned int> *const)(v5 + 720));
              __for_range_3 = (std::set<unsigned int> *)(v5 + 640);
              *(std::set<unsigned int>::iterator *)(v5 + 144) = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v5 + 640));
              __for_end._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Base_ptr)std::set<unsigned int>::end(__for_range_3)._M_node;
              while ( std::operator!=(
                        (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v5 + 144),
                        (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)&__for_end) )
              {
                v79 = std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144));
                v80 = v79;
                if ( *(_BYTE *)(((unsigned __int64)v79 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v79 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v79 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v79);
                }
                *(_DWORD *)(v5 + 96) = *v80;
                ServiceBox::findService<GameserverService>();
                GameserverService::getConfig((GameserverService *const)&v178);
                p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178)->design_config.txt_config_mgr.activity_rogue_config_mgr;
                if ( *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) != 0
                  && *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) <= 3 )
                {
                  p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&seq_cell_config->type;
                  __asan_report_load4(&seq_cell_config->type);
                }
                CellWeightByDungeonIdAndCellId = ActivityRogueExcelConfigMgr::findCellWeightByDungeonIdAndCellId(
                                                   p_activity_rogue_config_mgr,
                                                   *(_DWORD *)(v5 + 128),
                                                   *(_DWORD *)(v5 + 96),
                                                   seq_cell_config->type);
                v83 = (char *)(v5 + 96);
                v84 = std::map<unsigned int,unsigned int>::operator[](
                        (std::map<unsigned int,unsigned int> *const)(v5 + 720),
                        (const std::map<unsigned int,unsigned int>::key_type *)(v5 + 96));
                v85 = v84;
                v86 = *(_BYTE *)(((unsigned __int64)v84 >> 3) + 0x7FFF8000);
                if ( v86 != 0 && (char)(((unsigned __int8)v84 & 7) + 3) >= v86 )
                {
                  LOBYTE(v83) = v86 != 0;
                  __asan_report_store4(v84, v83, v84);
                }
                *v85 = CellWeightByDungeonIdAndCellId;
                std::shared_ptr<Config>::~shared_ptr(&v178);
                std::_Rb_tree_const_iterator<unsigned int>::operator++((std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144));
              }
              for ( i = 0; i < select_num; ++i )
              {
                *(_DWORD *)(v5 + 80) = 0;
                if ( common::tools::RandomUtils::weightSelectOne<unsigned int,unsigned int>(
                       (const std::map<unsigned int,unsigned int> *)(v5 + 720),
                       (unsigned int *)(v5 + 80),
                       0) )
                {
                  common::milog::MiLogStream::create(
                    &v180,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "constructDungeon",
                    1498);
                  common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                    &v180,
                    (const char (*)[31])"[ROGUE] weightSelectOne failed");
                  common::milog::MiLogStream::~MiLogStream(&v180);
                }
                else
                {
                  if ( *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) <= 3 )
                  {
                    __asan_report_load4(&seq_cell_config->type);
                  }
                  if ( RogueLikeDungeonRuntimeMgr::assignCell(
                         this,
                         *(_DWORD *)(v5 + 128),
                         *(_DWORD *)(v5 + 80),
                         seq_cell_config->type,
                         (std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *)(v5 + 480)) )
                  {
                    common::milog::MiLogStream::create(
                      &v180,
                      &common::milog::MiLogDefault::default_log_obj_,
                      3u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "constructDungeon",
                      1504);
                    v87 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                            &v180,
                            (const char (*)[39])"[ROGUE] assignCell failed, dungeon_id:");
                    v88 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v87,
                            (const unsigned int *)(v5 + 128));
                    v89 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(
                            v88,
                            (const char (*)[10])" cell_id:");
                    v90 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                            v89,
                            (const unsigned int *)(v5 + 80));
                    v91 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                            v90,
                            (const char (*)[16])" assigned type:");
                    common::milog::MiLogStream::operator<<<data::RogueCellType,(data::RogueCellType*)0>(
                      v91,
                      &seq_cell_config->type);
                    common::milog::MiLogStream::~MiLogStream(&v180);
                  }
                  else
                  {
                    std::map<unsigned int,unsigned int>::erase(
                      (std::map<unsigned int,unsigned int> *const)(v5 + 720),
                      (const std::map<unsigned int,unsigned int>::key_type *)(v5 + 80));
                    std::set<unsigned int>::erase(
                      (std::set<unsigned int> *const)(v5 + 640),
                      (const std::set<unsigned int>::key_type *)(v5 + 80));
                    ServiceBox::findService<GameserverService>();
                    GameserverService::getConfig((GameserverService *const)&v178);
                    v92 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
                    *(_DWORD *)(v5 + 96) = ActivityRogueExcelConfigMgr::findCellConfigIdByDungeonIdAndCellId(
                                             &v92->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                             *(_DWORD *)(v5 + 128),
                                             *(_DWORD *)(v5 + 80));
                    std::set<unsigned int>::erase(
                      (std::set<unsigned int> *const)(v5 + 400),
                      (const std::set<unsigned int>::key_type *)(v5 + 96));
                    std::shared_ptr<Config>::~shared_ptr(&v178);
                    v93 = (unsigned __int64)std::map<data::RogueCellType,unsigned int>::operator[](
                                              (std::map<data::RogueCellType,unsigned int> *const)(v5 + 560),
                                              &seq_cell_config->type);
                    if ( *(_BYTE *)((v93 >> 3) + 0x7FFF8000) != 0
                      && (char)((v93 & 7) + 3) >= *(_BYTE *)((v93 >> 3) + 0x7FFF8000) )
                    {
                      v93 = __asan_report_load4(v93);
                    }
                    ++*(_DWORD *)v93;
                  }
                }
              }
              std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v5 + 720));
            }
            else
            {
              std::set<unsigned int>::set(
                (std::set<unsigned int> *const)(v5 + 720),
                (const std::set<unsigned int> *)(v5 + 640));
              __for_range_2 = (std::set<unsigned int> *)(v5 + 720);
              *(std::set<unsigned int>::iterator *)(v5 + 144) = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v5 + 720));
              __for_end._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Base_ptr)std::set<unsigned int>::end(__for_range_2)._M_node;
              while ( std::operator!=(
                        (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v5 + 144),
                        (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)&__for_end) )
              {
                v75 = std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144));
                v76 = v75;
                if ( *(_BYTE *)(((unsigned __int64)v75 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v75 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v75 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v75);
                }
                *(_DWORD *)(v5 + 80) = *v76;
                if ( *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) != 0
                  && *(_BYTE *)(((unsigned __int64)&seq_cell_config->type >> 3) + 0x7FFF8000) <= 3 )
                {
                  __asan_report_load4(&seq_cell_config->type);
                }
                if ( RogueLikeDungeonRuntimeMgr::assignCell(
                       this,
                       *(_DWORD *)(v5 + 128),
                       *(_DWORD *)(v5 + 80),
                       seq_cell_config->type,
                       (std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *)(v5 + 480)) )
                {
                  common::milog::MiLogStream::create(
                    &v180,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "constructDungeon",
                    1476);
                  common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
                    &v180,
                    (const char (*)[26])"[ROGUE] assignCell failed");
                  common::milog::MiLogStream::~MiLogStream(&v180);
                }
                else
                {
                  std::set<unsigned int>::erase(
                    (std::set<unsigned int> *const)(v5 + 640),
                    (const std::set<unsigned int>::key_type *)(v5 + 80));
                  ServiceBox::findService<GameserverService>();
                  GameserverService::getConfig((GameserverService *const)&v178);
                  v77 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178);
                  *(_DWORD *)(v5 + 96) = ActivityRogueExcelConfigMgr::findCellConfigIdByDungeonIdAndCellId(
                                           &v77->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                           *(_DWORD *)(v5 + 128),
                                           *(_DWORD *)(v5 + 80));
                  std::set<unsigned int>::erase(
                    (std::set<unsigned int> *const)(v5 + 400),
                    (const std::set<unsigned int>::key_type *)(v5 + 96));
                  std::shared_ptr<Config>::~shared_ptr(&v178);
                  v78 = (unsigned __int64)std::map<data::RogueCellType,unsigned int>::operator[](
                                            (std::map<data::RogueCellType,unsigned int> *const)(v5 + 560),
                                            &seq_cell_config->type);
                  if ( *(_BYTE *)((v78 >> 3) + 0x7FFF8000) != 0
                    && (char)((v78 & 7) + 3) >= *(_BYTE *)((v78 >> 3) + 0x7FFF8000) )
                  {
                    v78 = __asan_report_load4(v78);
                  }
                  ++*(_DWORD *)v78;
                }
                std::_Rb_tree_const_iterator<unsigned int>::operator++((std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144));
              }
              std::set<unsigned int>::~set((std::set<unsigned int> *const)(v5 + 720));
            }
          }
          else
          {
            common::milog::MiLogStream::create(
              &v180,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "constructDungeon",
              1441);
            v61 = common::milog::MiLogStream::operator<<<char [66],(char *[66])0>(
                    &v180,
                    (const char (*)[66])"[ROGUE] sequence cell num ranage should be 2, sequence_config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v61, (const unsigned int *)(v5 + 64));
            common::milog::MiLogStream::~MiLogStream(&v180);
          }
          __gnu_cxx::__normal_iterator<data::RogueSequenceCellConfig const*,std::vector<data::RogueSequenceCellConfig>>::operator++(&__for_begin_0);
        }
        std::set<unsigned int>::~set((std::set<unsigned int> *const)(v5 + 640));
      }
      else
      {
        common::milog::MiLogStream::create(
          &v180,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "constructDungeon",
          1413);
        v54 = common::milog::MiLogStream::operator<<<char [60],(char *[60])0>(
                &v180,
                (const char (*)[60])"[ROGUE] sequence_config_ptr is nullptr, sequence_config_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v54, (const unsigned int *)(v5 + 64));
        common::milog::MiLogStream::~MiLogStream(&v180);
      }
      __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++(&__for_begin);
    }
    if ( !std::set<unsigned int>::empty((const std::set<unsigned int> *const)(v5 + 400)) )
    {
      *(_DWORD *)(v5 + 96) = 2;
      v94 = std::map<data::RogueCellType,unsigned int>::operator[](
              (std::map<data::RogueCellType,unsigned int> *const)(v5 + 560),
              (std::map<data::RogueCellType,unsigned int>::key_type *)(v5 + 96));
      v95 = v94;
      if ( *(_BYTE *)(((unsigned __int64)v94 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v94 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v94 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v94);
      }
      if ( *v95 < *(_DWORD *)(v5 + 852) )
      {
        v96 = *(_DWORD *)(v5 + 852);
        *(_DWORD *)(v5 + 96) = 2;
        v97 = std::map<data::RogueCellType,unsigned int>::operator[](
                (std::map<data::RogueCellType,unsigned int> *const)(v5 + 560),
                (std::map<data::RogueCellType,unsigned int>::key_type *)(v5 + 96));
        v98 = v97;
        if ( *(_BYTE *)(((unsigned __int64)v97 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v97 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v97 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v97);
        }
        *(_DWORD *)(v5 + 80) = v96 - *v98;
        std::allocator<unsigned int>::allocator(&__a);
        M_node = std::set<unsigned int>::end((const std::set<unsigned int> *const)(v5 + 400))._M_node;
        v100._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v5 + 400))._M_node;
        std::vector<unsigned int>::vector<std::_Rb_tree_const_iterator<unsigned int>,void>(
          (std::vector<unsigned int> *const)(v5 + 272),
          v100,
          (std::_Rb_tree_const_iterator<unsigned int>)M_node,
          &__a);
        std::allocator<unsigned int>::~allocator(&__a);
        *(_DWORD *)(v5 + 96) = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v5 + 272));
        v101 = (uint32_t *)std::min<unsigned int>((const unsigned int *)(v5 + 80), (const unsigned int *)(v5 + 96));
        v102 = v101;
        if ( *(_BYTE *)(((unsigned __int64)v101 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v101 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v101 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v101);
        }
        select_num_0 = *v102;
        std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v5 + 336));
        common::tools::RandomUtils::randomSelect<unsigned int>(
          (const std::vector<unsigned int> *)(v5 + 272),
          (std::vector<unsigned int> *)(v5 + 336),
          select_num_0);
        __for_range_4 = (std::vector<unsigned int> *)(v5 + 336);
        *(std::vector<unsigned int>::iterator *)(v5 + 144) = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v5 + 336));
        __for_end._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Base_ptr)std::vector<unsigned int>::end(__for_range_4)._M_current;
        while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(
                  (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v5 + 144),
                  (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)&__for_end) )
        {
          v103 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*((const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v5 + 144));
          v104 = v103;
          if ( *(_BYTE *)(((unsigned __int64)v103 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v103 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v103 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v103);
          }
          *(_DWORD *)(v5 + 96) = *v104;
          if ( RogueLikeDungeonRuntimeMgr::assignCell(
                 this,
                 *(_DWORD *)(v5 + 96),
                 ROGUE_CELL_TYPE_STORE,
                 (std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *)(v5 + 480)) )
          {
            common::milog::MiLogStream::create(
              &v180,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "constructDungeon",
              1532);
            v105 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                     &v180,
                     (const char (*)[45])"[ROGUE] assignCell failed, selected_cell_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v105,
              (const unsigned int *)(v5 + 96));
            common::milog::MiLogStream::~MiLogStream(&v180);
          }
          else
          {
            std::set<unsigned int>::erase(
              (std::set<unsigned int> *const)(v5 + 400),
              (const std::set<unsigned int>::key_type *)(v5 + 96));
          }
          __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++((__gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v5 + 144));
        }
        std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v5 + 336));
        std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v5 + 272));
      }
      __for_range_5 = (std::set<unsigned int> *)(v5 + 400);
      *(std::set<unsigned int>::iterator *)(v5 + 144) = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v5 + 400));
      __for_end._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Base_ptr)std::set<unsigned int>::end(__for_range_5)._M_node;
      while ( std::operator!=(
                (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)(v5 + 144),
                (const std::_Rb_tree_const_iterator<unsigned int>::_Self *)&__for_end) )
      {
        v106 = std::_Rb_tree_const_iterator<unsigned int>::operator*((const std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144));
        v107 = v106;
        if ( *(_BYTE *)(((unsigned __int64)v106 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v106 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v106 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v106);
        }
        *(_DWORD *)(v5 + 80) = *v107;
        if ( RogueLikeDungeonRuntimeMgr::assignCell(
               this,
               *(_DWORD *)(v5 + 80),
               ROGUE_CELL_TYPE_NORMAL,
               (std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *)(v5 + 480)) )
        {
          common::milog::MiLogStream::create(
            &v180,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "constructDungeon",
            1542);
          v108 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                   &v180,
                   (const char (*)[43])"[ROGUE] assignCell failed, cell_config_id:");
          v109 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                   v108,
                   (const unsigned int *)(v5 + 80));
          v110 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                   v109,
                   (const char (*)[16])" assigned type:");
          *(_DWORD *)(v5 + 96) = 4;
          common::milog::MiLogStream::operator<<<data::RogueCellType,(data::RogueCellType*)0>(
            v110,
            (const data::RogueCellType *)(v5 + 96));
          common::milog::MiLogStream::~MiLogStream(&v180);
        }
        std::_Rb_tree_const_iterator<unsigned int>::operator++((std::_Rb_tree_const_iterator<unsigned int> *const)(v5 + 144));
      }
      std::set<unsigned int>::clear((std::set<unsigned int> *const)(v5 + 400));
    }
    total_guard_count = 0;
    if ( !std::vector<unsigned int>::empty(&dungeon_weight_config_ptr->guard_count_range) )
    {
      if ( std::vector<unsigned int>::size(&dungeon_weight_config_ptr->guard_count_range) != 2 )
      {
        common::milog::MiLogStream::create(
          &v180,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "constructDungeon",
          1555);
        v111 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
                 &v180,
                 (const char (*)[67])"[ROGUE] breakages_count range incorrect, dungeon_weight_config_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v111, (const unsigned int *)(v5 + 112));
        common::milog::MiLogStream::~MiLogStream(&v180);
        v4 = -1;
LABEL_214:
        std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v5 + 208));
        goto LABEL_215;
      }
      v112 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                   &dungeon_weight_config_ptr->guard_count_range,
                                                                                                   1uLL);
      v113 = v112;
      if ( *(_BYTE *)(((unsigned __int64)v112 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v112 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v112 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v112);
      }
      v114 = *v113;
      v115 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](
                                                                                                   &dungeon_weight_config_ptr->guard_count_range,
                                                                                                   0LL);
      v116 = v115;
      if ( *(_BYTE *)(((unsigned __int64)v115 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v115 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v115 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v115);
      }
      total_guard_count = common::tools::RandomUtils::rand<unsigned int>(*v116, v114);
    }
    if ( total_guard_count )
    {
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v5 + 272));
      __for_range_6 = &this->rogue_cell_map_;
      *(std::map<unsigned int,RogueCell>::iterator *)(v5 + 144) = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_);
      __for_end._M_node = std::map<unsigned int,RogueCell>::end(__for_range_6)._M_node;
      while ( std::operator!=(
                (const std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Self *)(v5 + 144),
                &__for_end) )
      {
        v169 = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> > *const)(v5 + 144));
        cell_id_0 = std::get<0ul,unsigned int const,RogueCell>(v169);
        cell_0 = std::get<1ul,unsigned int const,RogueCell>(v169);
        v117 = &cell_0->type;
        if ( *(_BYTE *)(((unsigned __int64)v117 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v117 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v117 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v117);
        }
        if ( cell_0->type == ROGUE_CELL_TYPE_ELITE || cell_0->type == ROGUE_CELL_TYPE_NORMAL )
          std::vector<unsigned int>::push_back((std::vector<unsigned int> *const)(v5 + 272), cell_id_0);
        std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> > *const)(v5 + 144));
      }
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v5 + 336));
      common::tools::RandomUtils::randomSelect<unsigned int>(
        (const std::vector<unsigned int> *)(v5 + 272),
        (std::vector<unsigned int> *)(v5 + 336),
        total_guard_count);
      __for_range_7 = (std::vector<unsigned int> *)(v5 + 336);
      *(std::vector<unsigned int>::iterator *)(v5 + 144) = std::vector<unsigned int>::begin((std::vector<unsigned int> *const)(v5 + 336));
      __for_end._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Base_ptr)std::vector<unsigned int>::end(__for_range_7)._M_current;
      while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(
                (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)(v5 + 144),
                (const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *)&__for_end) )
      {
        v118 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*((const __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v5 + 144));
        v119 = v118;
        if ( *(_BYTE *)(((unsigned __int64)v118 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v118 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v118 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v118);
        }
        *(_DWORD *)(v5 + 80) = *v119;
        cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v5 + 80));
        if ( cell_ptr )
        {
          cell_1 = cell_ptr;
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)&v178);
          p_dungeon_id = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178)->design_config.txt_config_mgr.activity_rogue_config_mgr;
          v122 = *(_DWORD *)(v5 + 80);
          if ( *(_BYTE *)(((unsigned __int64)&cell_1->dungeon_id >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)cell_1 + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_1->dungeon_id >> 3)
                                                                  + 0x7FFF8000) )
          {
            p_dungeon_id = (const ActivityRogueExcelConfigMgr *)&cell_1->dungeon_id;
            __asan_report_load4(&cell_1->dungeon_id);
          }
          cell_config_ptr_0 = ActivityRogueExcelConfigMgr::findDungeonCellConfigByDungeonIdAndCellId(
                                p_dungeon_id,
                                cell_1->dungeon_id,
                                v122);
          std::shared_ptr<Config>::~shared_ptr(&v178);
          if ( cell_config_ptr_0 )
          {
            ServiceBox::findService<GameserverService>();
            GameserverService::getConfig((GameserverService *const)&v178);
            p_lua_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v178)->design_config.lua_config_mgr;
            if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr_0->group_id >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&cell_config_ptr_0->group_id >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&cell_config_ptr_0->group_id);
            }
            group_script_config_ptr = LuaConfigMgr::findGroupScriptConfig(p_lua_config_mgr, cell_config_ptr_0->group_id);
            std::shared_ptr<Config>::~shared_ptr(&v178);
            if ( group_script_config_ptr )
            {
              if ( *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->guard_point_tag >> 3) + 0x7FFF8000) )
                __asan_report_load8(&dungeon_weight_config_ptr->guard_point_tag);
              tag_point_vec_ptr = GroupScriptConfig::findPointVecByTag(
                                    group_script_config_ptr,
                                    dungeon_weight_config_ptr->guard_point_tag);
              if ( !tag_point_vec_ptr || !std::vector<unsigned int>::size(tag_point_vec_ptr) )
              {
                common::milog::MiLogStream::create(
                  &v180,
                  &common::milog::MiLogDefault::default_log_obj_,
                  1u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "constructDungeon",
                  1596);
                v129 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                         &v180,
                         (const char (*)[40])"[ROGUE] group tag point not found, tag:");
                common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                  v129,
                  &dungeon_weight_config_ptr->guard_point_tag);
                common::milog::MiLogStream::~MiLogStream(&v180);
              }
              else
              {
                v130 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::at(tag_point_vec_ptr, 0LL);
                v131 = v130;
                if ( *(_BYTE *)(((unsigned __int64)v130 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v130 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v130 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v130);
                }
                point_config_id = *v131;
                p_guard_gadget_group_point_vec = &cell_1->guard_gadget_group_point_vec;
                *(_DWORD *)(v5 + 96) = point_config_id;
                std::vector<int>::push_back(p_guard_gadget_group_point_vec, (std::vector<int>::value_type *)(v5 + 96));
              }
            }
            else
            {
              common::milog::MiLogStream::create(
                &v180,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "constructDungeon",
                1590);
              v127 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                       &v180,
                       (const char (*)[53])"[ROGUE] group_script_config_ptr not found, group_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v127, &cell_config_ptr_0->group_id);
              common::milog::MiLogStream::~MiLogStream(&v180);
            }
          }
          else
          {
            common::milog::MiLogStream::create(
              &v180,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "constructDungeon",
              1584);
            v123 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                     &v180,
                     (const char (*)[43])"[ROGUE] cell config not found, dungeon_id:");
            v124 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v123, &cell_1->dungeon_id);
            v125 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(
                     v124,
                     (const char (*)[10])" cell_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              v125,
              (const unsigned int *)(v5 + 80));
            common::milog::MiLogStream::~MiLogStream(&v180);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v180,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "constructDungeon",
            1577);
          v120 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                   &v180,
                   (const char (*)[38])"[ROGUE] cell_ptr is nullptr, cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v120, (const unsigned int *)(v5 + 80));
          common::milog::MiLogStream::~MiLogStream(&v180);
        }
        __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++((__gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> > *const)(v5 + 144));
      }
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v5 + 336));
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v5 + 272));
    }
    v4 = 0;
    goto LABEL_214;
  }
  common::milog::MiLogStream::create(
    &v180,
    &common::milog::MiLogDefault::default_log_obj_,
    4u,
    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
    "constructDungeon",
    1355);
  v26 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
          &v180,
          (const char (*)[48])"[ROGUE] boss cell config not found, dungeon_id:");
  v27 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v26, (const unsigned int *)(v5 + 128));
  v28 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v27, (const char (*)[15])" boss_cell_id:");
  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v28, (const unsigned int *)(v5 + 48));
  common::milog::MiLogStream::~MiLogStream(&v180);
  v4 = -1;
LABEL_215:
  RoguelikeEfffectCellParam::~RoguelikeEfffectCellParam((RoguelikeEfffectCellParam *const)(v5 + 800));
  std::map<data::RogueCellType,unsigned int>::~map((std::map<data::RogueCellType,unsigned int> *const)(v5 + 560));
  std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::~map((std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *const)(v5 + 480));
  std::set<unsigned int>::~set((std::set<unsigned int> *const)(v5 + 400));
LABEL_216:
  result = v4;
  if ( v181 == (char *)v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8028) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8030) = 0;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8038) = 0;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8040) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF804C) = 0;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8054) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8060) = 0;
    *(_DWORD *)((v5 >> 3) + 0x7FFF806C) = 0;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8048) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8050) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8058) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8060) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8068) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1418: range 0000000015932AFE-0000000015932BF7
bool __cdecl RogueLikeDungeonRuntimeMgr::constructDungeon(unsigned int,unsigned int,std::shared_ptr<DungeonScene>)::{lambda(unsigned int)#1}::operator()(
        const RogueLikeDungeonRuntimeMgr::constructDungeon::<lambda(uint32_t)> *const __closure,
        uint32_t cell_id)
{
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rcx
  bool v3; // bl
  unsigned int value; // [rsp+1Ch] [rbp-24h] BYREF
  std::shared_ptr<Config> v6[2]; // [rsp+20h] [rbp-20h] BYREF

  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)v6);
  p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)v6)->design_config.txt_config_mgr.activity_rogue_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(__closure);
  }
  value = ActivityRogueExcelConfigMgr::findCellConfigIdByDungeonIdAndCellId(
            p_activity_rogue_config_mgr,
            __closure->__dungeon_id,
            cell_id);
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__dungeon_cell_config_id_set >> 3) + 0x7FFF8000) )
    __asan_report_load8(&__closure->__dungeon_cell_config_id_set);
  v3 = !common::tools::MiscUtils::isContains<std::set<unsigned int>,unsigned int>(
          __closure->__dungeon_cell_config_id_set,
          &value);
  std::shared_ptr<Config>::~shared_ptr(v6);
  return v3;
};

// Line 1609: range 0000000015935FDC-00000000159361EF
int32_t __cdecl RogueLikeDungeonRuntimeMgr::buildDungeon(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t dungeon_weight_id,
        DungeonScenePtr *p_dungeon_scene_ptr)
{
  bool v4; // bl
  common::milog::MiLogStream *v5; // rax
  std::map<unsigned int,RogueCell>::iterator __for_begin; // [rsp+20h] [rbp-70h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+28h] [rbp-68h] BYREF
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+30h] [rbp-60h]
  std::pair<unsigned int const,RogueCell> *__in; // [rsp+38h] [rbp-58h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *cell_id; // [rsp+40h] [rbp-50h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+48h] [rbp-48h]
  std::shared_ptr<DungeonScene> v13; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v14; // [rsp+60h] [rbp-30h] BYREF

  if ( std::operator==<DungeonScene>(0LL, p_dungeon_scene_ptr) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "buildDungeon",
      1612);
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
      &v14,
      (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v14);
    return -1;
  }
  else
  {
    __for_range = &this->rogue_cell_map_;
    __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
    __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
    while ( std::operator!=(&__for_begin, &__for_end) )
    {
      __in = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
      cell_id = std::get<0ul,unsigned int const,RogueCell>(__in);
      cell = std::get<1ul,unsigned int const,RogueCell>(__in);
      std::shared_ptr<DungeonScene>::shared_ptr(&v13, p_dungeon_scene_ptr);
      v4 = RogueLikeDungeonRuntimeMgr::buildCellEntities(this, dungeon_weight_id, &v13, cell) != 0;
      std::shared_ptr<DungeonScene>::~shared_ptr(&v13);
      if ( v4 )
      {
        common::milog::MiLogStream::create(
          &v14,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "buildDungeon",
          1619);
        v5 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
               &v14,
               (const char (*)[41])"[ROGUE] buildCellEntities fail, cell_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, cell_id);
        common::milog::MiLogStream::~MiLogStream(&v14);
      }
      std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
    }
    return 0;
  }
};

// Line 1627: range 00000000159361F0-0000000015936B71
__int64 __fastcall RogueLikeDungeonRuntimeMgr::assignCell(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t dungeon_id,
        uint32_t cell_id,
        data::RogueCellType cell_type,
        std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *monster_map)
{
  unsigned __int64 v5; // r13
  __int64 v6; // rax
  _DWORD *v7; // r12
  common::milog::MiLogStream *v8; // rax
  unsigned int v9; // r14d
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // r14
  std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::mapped_type *v11; // rax
  int v12; // r14d
  std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::key_type *p_k; // rsi
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::mapped_type *v14; // rax
  _DWORD *v15; // rdx
  char v16; // cl
  std::unordered_set<unsigned int> *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  ActivityRogueExcelConfigMgr *v21; // r14
  std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::mapped_type *v22; // rax
  int v23; // r14d
  std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::key_type *v24; // rsi
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::mapped_type *v25; // rax
  _DWORD *v26; // rdx
  char v27; // cl
  std::unordered_set<unsigned int> *v28; // rax
  ActivityRogueExcelConfigMgr *v29; // r14
  std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::mapped_type *v30; // rax
  int v31; // r14d
  std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::key_type *v32; // rsi
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::mapped_type *v33; // rax
  _DWORD *v34; // rdx
  char v35; // cl
  std::unordered_set<unsigned int> *v36; // rax
  RogueCell *v37; // rax
  unsigned int *v38; // rcx
  RogueCell *v39; // r8
  std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >,bool> v40; // rax
  common::milog::MiLogStream *v41; // rax
  __int64 result; // rax
  std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::key_type __k; // [rsp+24h] [rbp-22Ch] BYREF
  std::unordered_set<unsigned int> *cell_id_set; // [rsp+28h] [rbp-228h]
  std::shared_ptr<Config> v48; // [rsp+30h] [rbp-220h] BYREF
  common::milog::MiLogStream v49; // [rsp+40h] [rbp-210h] BYREF
  char v50[496]; // [rsp+60h] [rbp-1F0h] BYREF

  v5 = (unsigned __int64)v50;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v6 = __asan_stack_malloc_3(448LL);
    if ( v6 )
      v5 = v6;
  }
  *(_QWORD *)v5 = 1102416563LL;
  *(_QWORD *)(v5 + 8) = "5 32 4 12 pool_id:1652 48 4 15 dungeon_id:1626 64 4 12 cell_id:1626 80 4 14 cell_type:1626 96 280 9 cell:1633";
  *(_QWORD *)(v5 + 16) = RogueLikeDungeonRuntimeMgr::assignCell;
  v7 = (_DWORD *)(v5 >> 3);
  v7[536862720] = -235802127;
  v7[536862721] = -234556924;
  v7[536862722] = -234556924;
  v7[536862731] = -218103808;
  v7[536862732] = -202116109;
  v7[536862733] = -202116109;
  *(_DWORD *)(v5 + 48) = dungeon_id;
  *(_DWORD *)(v5 + 64) = cell_id;
  *(_DWORD *)(v5 + 80) = cell_type;
  if ( RogueLikeDungeonRuntimeMgr::isCellAssigned(this, *(_DWORD *)(v5 + 48), *(_DWORD *)(v5 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v49,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "assignCell",
      1630);
    v8 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
           &v49,
           (const char (*)[44])"[ROGUE] cell has already assigned, cell_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v5 + 64));
    common::milog::MiLogStream::~MiLogStream(&v49);
    v9 = -1;
  }
  else
  {
    RogueCell::RogueCell((RogueCell *const)(v5 + 96));
    *(_DWORD *)(v5 + 104) = *(_DWORD *)(v5 + 64);
    *(_DWORD *)(v5 + 108) = *(_DWORD *)(v5 + 48);
    *(_DWORD *)(v5 + 116) = *(_DWORD *)(v5 + 80);
    if ( *(_DWORD *)(v5 + 80) == 4 )
    {
      *(_DWORD *)(v5 + 32) = 0;
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v48);
      p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v48)->design_config.txt_config_mgr.activity_rogue_config_mgr;
      __k = ROGUE_MONSTER_DIFFICULTY_NORMAL;
      v11 = std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::operator[](
              monster_map,
              &__k);
      LOBYTE(p_activity_rogue_config_mgr) = ActivityRogueExcelConfigMgr::randomMontserPool(
                                              p_activity_rogue_config_mgr,
                                              *(_DWORD *)(v5 + 48),
                                              ROGUE_MONSTER_DIFFICULTY_NORMAL,
                                              (uint32_t *)(v5 + 32),
                                              v11) == 0;
      std::shared_ptr<Config>::~shared_ptr(&v48);
      if ( (_BYTE)p_activity_rogue_config_mgr )
      {
        v12 = *(_DWORD *)(v5 + 32);
        __k = ROGUE_MONSTER_DIFFICULTY_NORMAL;
        p_k = &__k;
        v14 = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::operator[](
                (std::map<data::RogueMonsterPoolDifficultyType,unsigned int> *const)(v5 + 240),
                &__k);
        v15 = v14;
        v16 = *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000);
        if ( v16 != 0 && (char)(((unsigned __int8)v14 & 7) + 3) >= v16 )
        {
          LOBYTE(p_k) = v16 != 0;
          __asan_report_store4(v14, p_k, v14);
        }
        *v15 = v12;
        __k = ROGUE_MONSTER_DIFFICULTY_NORMAL;
        v17 = std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::operator[](
                monster_map,
                &__k);
        std::unordered_set<unsigned int>::insert(v17, (const std::unordered_set<unsigned int>::value_type *)(v5 + 32));
      }
      else
      {
        common::milog::MiLogStream::create(
          &v49,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "assignCell",
          1647);
        v18 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                &v49,
                (const char (*)[45])"[ROGUE] randomMontserPool failed dungeon_id:");
        v19 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v18,
                (const unsigned int *)(v5 + 48));
        v20 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v19, (const char (*)[7])" diff:");
        __k = ROGUE_MONSTER_DIFFICULTY_NORMAL;
        common::milog::MiLogStream::operator<<<data::RogueMonsterPoolDifficultyType,(data::RogueMonsterPoolDifficultyType*)0>(
          v20,
          &__k);
        common::milog::MiLogStream::~MiLogStream(&v49);
      }
    }
    else if ( *(_DWORD *)(v5 + 80) == 3 )
    {
      *(_DWORD *)(v5 + 32) = 0;
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v48);
      v21 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v48)->design_config.txt_config_mgr.activity_rogue_config_mgr;
      __k = ROGUE_MONSTER_DIFFICULTY_ELITE_EASY;
      v22 = std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::operator[](
              monster_map,
              &__k);
      LOBYTE(v21) = ActivityRogueExcelConfigMgr::randomMontserPool(
                      v21,
                      *(_DWORD *)(v5 + 48),
                      ROGUE_MONSTER_DIFFICULTY_ELITE_EASY,
                      (uint32_t *)(v5 + 32),
                      v22) == 0;
      std::shared_ptr<Config>::~shared_ptr(&v48);
      if ( (_BYTE)v21 )
      {
        v23 = *(_DWORD *)(v5 + 32);
        __k = ROGUE_MONSTER_DIFFICULTY_ELITE_EASY;
        v24 = &__k;
        v25 = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::operator[](
                (std::map<data::RogueMonsterPoolDifficultyType,unsigned int> *const)(v5 + 240),
                &__k);
        v26 = v25;
        v27 = *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000);
        if ( v27 != 0 && (char)(((unsigned __int8)v25 & 7) + 3) >= v27 )
        {
          LOBYTE(v24) = v27 != 0;
          __asan_report_store4(v25, v24, v25);
        }
        *v26 = v23;
        __k = ROGUE_MONSTER_DIFFICULTY_ELITE_EASY;
        v28 = std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::operator[](
                monster_map,
                &__k);
        std::unordered_set<unsigned int>::insert(v28, (const std::unordered_set<unsigned int>::value_type *)(v5 + 32));
      }
      else
      {
        common::milog::MiLogStream::create(
          &v49,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "assignCell",
          1660);
        common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
          &v49,
          (const char (*)[33])"[ROGUE] randomMontserPool failed");
        common::milog::MiLogStream::~MiLogStream(&v49);
      }
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v48);
      v29 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v48)->design_config.txt_config_mgr.activity_rogue_config_mgr;
      __k = ROGUE_MONSTER_DIFFICULTY_ELITE_HARD;
      v30 = std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::operator[](
              monster_map,
              &__k);
      LOBYTE(v29) = ActivityRogueExcelConfigMgr::randomMontserPool(
                      v29,
                      *(_DWORD *)(v5 + 48),
                      ROGUE_MONSTER_DIFFICULTY_ELITE_HARD,
                      (uint32_t *)(v5 + 32),
                      v30) == 0;
      std::shared_ptr<Config>::~shared_ptr(&v48);
      if ( (_BYTE)v29 )
      {
        v31 = *(_DWORD *)(v5 + 32);
        __k = ROGUE_MONSTER_DIFFICULTY_ELITE_HARD;
        v32 = &__k;
        v33 = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::operator[](
                (std::map<data::RogueMonsterPoolDifficultyType,unsigned int> *const)(v5 + 240),
                &__k);
        v34 = v33;
        v35 = *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000);
        if ( v35 != 0 && (char)(((unsigned __int8)v33 & 7) + 3) >= v35 )
        {
          LOBYTE(v32) = v35 != 0;
          __asan_report_store4(v33, v32, v33);
        }
        *v34 = v31;
        __k = ROGUE_MONSTER_DIFFICULTY_ELITE_HARD;
        v36 = std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>>::operator[](
                monster_map,
                &__k);
        std::unordered_set<unsigned int>::insert(v36, (const std::unordered_set<unsigned int>::value_type *)(v5 + 32));
      }
      else
      {
        common::milog::MiLogStream::create(
          &v49,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "assignCell",
          1669);
        common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
          &v49,
          (const char (*)[33])"[ROGUE] randomMontserPool failed");
        common::milog::MiLogStream::~MiLogStream(&v49);
      }
    }
    v37 = std::move<RogueCell &>((RogueCell *)(v5 + 96));
    v40 = std::map<unsigned int,RogueCell>::emplace<unsigned int &,RogueCell>(
            &this->rogue_cell_map_,
            (unsigned int *)(v5 + 64),
            v37,
            v38,
            v39);
    if ( !v40.second )
    {
      common::milog::MiLogStream::create(
        &v49,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "assignCell",
        1674);
      v41 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
              &v49,
              (const char (*)[34])"[ROGUE] duplicated cell, cell_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v41, (const unsigned int *)(v5 + 64));
      common::milog::MiLogStream::~MiLogStream(&v49);
      v9 = -1;
    }
    else
    {
      cell_id_set = std::map<data::RogueCellType,std::unordered_set<unsigned int>>::operator[](
                      &this->cell_type_to_cell_id_map_,
                      (const std::map<data::RogueCellType,std::unordered_set<unsigned int>>::key_type *)(v5 + 80));
      std::unordered_set<unsigned int>::insert(
        cell_id_set,
        (const std::unordered_set<unsigned int>::value_type *)(v5 + 64));
      v9 = 0;
    }
    RogueCell::~RogueCell((RogueCell *const)(v5 + 96));
  }
  result = v9;
  if ( v50 == (char *)v5 )
  {
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v5 >> 3) + 0x7FFF802C) = 0LL;
    *(_DWORD *)((v5 >> 3) + 0x7FFF8034) = 0;
  }
  else
  {
    *(_QWORD *)v5 = 1172321806LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v5 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1683: range 0000000015936B72-0000000015936DFE
__int64 __fastcall RogueLikeDungeonRuntimeMgr::assignCell(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t cell_config_id,
        data::RogueCellType cell_type,
        std::map<data::RogueMonsterPoolDifficultyType,std::unordered_set<unsigned int>> *monster_map)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v8; // rax
  __int64 result; // rax
  uint32_t cell_id; // edi
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+28h] [rbp-98h]
  std::shared_ptr<Config> v15; // [rsp+30h] [rbp-90h] BYREF
  common::milog::MiLogStream v16; // [rsp+40h] [rbp-80h] BYREF
  char v17[96]; // [rsp+60h] [rbp-60h] BYREF

  v4 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 19 cell_config_id:1682";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::assignCell;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  *(_DWORD *)(v4 + 32) = cell_config_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v15);
  v7 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v15);
  cell_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueDungeonCellExcelConfig(
                      &v7->design_config.txt_config_mgr.activity_rogue_config_mgr,
                      *(_DWORD *)(v4 + 32));
  std::shared_ptr<Config>::~shared_ptr(&v15);
  if ( cell_config_ptr )
  {
    if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&cell_config_ptr->cell_id);
    }
    cell_id = cell_config_ptr->cell_id;
    if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->dungeon_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_config_ptr->dungeon_id >> 3)
                                                                     + 0x7FFF8000) )
    {
      cell_id = (_DWORD)cell_config_ptr + 12;
      __asan_report_load4(&cell_config_ptr->dungeon_id);
    }
    result = RogueLikeDungeonRuntimeMgr::assignCell(this, cell_config_ptr->dungeon_id, cell_id, cell_type, monster_map);
  }
  else
  {
    common::milog::MiLogStream::create(
      &v16,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "assignCell",
      1687);
    v8 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
           &v16,
           (const char (*)[52])"[ROGUE] cell_config_ptr is nullptr, cell_config_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v4 + 32));
    common::milog::MiLogStream::~MiLogStream(&v16);
    result = 0xFFFFFFFFLL;
  }
  if ( v17 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1694: range 0000000015936E00-00000000159374D8
void __cdecl RogueLikeDungeonRuntimeMgr::onLeaveSceneEvent(
        RogueLikeDungeonRuntimeMgr *const this,
        const LeaveSceneEvent *event)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  RoguelikeDungeonActivity *activity; // rdx
  RogueStageData *stage_ptr; // [rsp+10h] [rbp-110h]
  RoguelikeMiscMgr *misc_mgr_1; // [rsp+18h] [rbp-108h]
  RoguelikeMiscMgr *misc_mgr_0; // [rsp+20h] [rbp-100h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+28h] [rbp-F8h]
  common::milog::MiLogStream v10; // [rsp+30h] [rbp-F0h] BYREF
  char v11[208]; // [rsp+50h] [rbp-D0h] BYREF

  v2 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(160LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 32 16 14 scene_ptr:1695 64 16 26 cur_dungeon_scene_ptr:1701 96 16 22 rogue_dungeon_ptr:1707 12"
                        "8 16 27 next_dungeon_scene_ptr:1723";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::onLeaveSceneEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -219021312;
  v4[536862723] = -219021312;
  v4[536862724] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v2 + 32));
  if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v2 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onLeaveSceneEvent",
      1698);
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      &v10,
      (const char (*)[29])"[ROGUE] scene_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v10);
  }
  else
  {
    std::dynamic_pointer_cast<DungeonScene,Scene>((const std::shared_ptr<Scene> *)(v2 + 64));
    if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v2 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v10,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "onLeaveSceneEvent",
        1704);
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
        &v10,
        (const char (*)[33])"[ROGUE] cur scene is not dungeon");
      common::milog::MiLogStream::~MiLogStream(&v10);
    }
    else
    {
      std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v2 + 96));
      if ( std::operator!=<DungeonScene,DungeonScene>(
             (const std::shared_ptr<DungeonScene> *)(v2 + 96),
             (const std::shared_ptr<DungeonScene> *)(v2 + 64)) )
      {
        common::milog::MiLogStream::create(
          &v10,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "onLeaveSceneEvent",
          1710);
        common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(
          &v10,
          (const char (*)[24])"[ROGUE] scene not match");
        common::milog::MiLogStream::~MiLogStream(&v10);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->activity_);
        activity = this->activity_;
        if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&this->stage_id_);
        }
        stage_ptr = RoguelikeDungeonActivity::findStage(activity, this->stage_id_);
        if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
        {
          __asan_report_load1(&this->is_valid_);
        }
        if ( this->is_valid_ )
        {
          if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->activity_);
          misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
          RoguelikeMiscMgr::saveRoguelikeDungeonMiscData(misc_mgr);
          RogueLikeDungeonRuntimeMgr::clearWhenTempLeave(this);
          if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->activity_);
          BaseActivity::notifyClientData(this->activity_, 0);
        }
        else
        {
          std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v2 + 128));
          if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v2 + 128)) )
            RogueLikeDungeonRuntimeMgr::clearWhenLeaveScene(this);
          if ( stage_ptr )
          {
            if ( *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3) + 0x7FFF8000) != 0
              && (((unsigned __int8)stage_ptr + 25) & 7) >= *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3)
                                                                     + 0x7FFF8000) )
            {
              __asan_report_load1(&stage_ptr->is_entering_next_level);
            }
            if ( stage_ptr->is_entering_next_level )
            {
              if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v2 + 128), 0LL) )
              {
                if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->activity_);
                misc_mgr_0 = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
                RoguelikeMiscMgr::saveRoguelikeDungeonMiscData(misc_mgr_0);
              }
            }
            else
            {
              if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->activity_);
              misc_mgr_1 = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
              RoguelikeMiscMgr::clearRoguelikeDungeonMiscData(misc_mgr_1);
            }
          }
          std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 128));
        }
        std::__weak_ptr<DungeonScene,(__gnu_cxx::_Lock_policy)2>::reset(&this->dungeon_scene_wtr_);
      }
      std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 96));
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 64));
  }
  std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v2 + 32));
  if ( v11 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = -168430091;
  }
};

// Line 1750: range 00000000159374DA-00000000159378B1
void __cdecl RogueLikeDungeonRuntimeMgr::clearWhenLeaveScene(RogueLikeDungeonRuntimeMgr *const this)
{
  __int64 v1; // rsi
  __int64 v2; // rdx
  RoguelikeDungeonActivity *activity; // rdx
  Player *player; // rsi
  RogueTeam *p_rogue_team; // rdx
  __int64 v6; // rsi
  __int64 v7; // rdx
  std::map<unsigned int,RogueCell>::iterator __for_begin; // [rsp+18h] [rbp-38h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+20h] [rbp-30h] BYREF
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+28h] [rbp-28h]
  RogueStageData *stage_ptr; // [rsp+30h] [rbp-20h]
  std::pair<unsigned int const,RogueCell> *__in; // [rsp+38h] [rbp-18h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *_; // [rsp+40h] [rbp-10h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+48h] [rbp-8h]

  v1 = ((_BYTE)this + 76) & 7;
  v2 = (*(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v1 >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v2 )
    __asan_report_store1(&this->is_valid_, v1, v2);
  this->is_valid_ = 0;
  __for_range = &this->rogue_cell_map_;
  __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    __in = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
    _ = std::get<0ul,unsigned int const,RogueCell>(__in);
    cell = std::get<1ul,unsigned int const,RogueCell>(__in);
    RogueCell::clearDoorEntity(cell);
    RogueCell::clearGadgetEntity(cell);
    RogueCell::clearGuardEntity(cell);
    std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
  }
  std::map<unsigned int,RogueCell>::clear(&this->rogue_cell_map_);
  std::map<data::RogueCellType,std::unordered_set<unsigned int>>::clear(&this->cell_type_to_cell_id_map_);
  RogueLikeDungeonRuntimeMgr::clearOneOffEntities(this);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->brakeage_group_pair_gadget_id_map_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->trap_group_pair_gadget_id_map_);
  std::set<std::pair<unsigned int,unsigned int>>::clear(&this->blast_bucket_set_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->byobu_group_pair_gadget_id_map_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->ball_group_pair_gadget_id_map_);
  std::unordered_set<unsigned int>::clear(&this->explored_cell_set_);
  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  activity = this->activity_;
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->stage_id_);
  }
  stage_ptr = RoguelikeDungeonActivity::findStage(activity, this->stage_id_);
  if ( !stage_ptr )
    goto LABEL_14;
  player = (Player *)(((_BYTE)stage_ptr + 25) & 7);
  if ( *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3) + 0x7FFF8000) != 0
    && (char)player >= *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&stage_ptr->is_entering_next_level);
  }
  if ( !stage_ptr->is_entering_next_level )
  {
LABEL_14:
    p_rogue_team = &this->rogue_team_;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    player = this->player_;
    RogueTeam::recallAllAvatars(p_rogue_team, player);
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->stage_id_, player, &this->stage_id_);
  }
  this->stage_id_ = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->cur_level_, player, &this->cur_level_);
  }
  this->cur_level_ = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->dungeon_weight_config_id_, player, &this->dungeon_weight_config_id_);
  }
  this->dungeon_weight_config_id_ = 0;
  v6 = (((_BYTE)this + 44) & 7u) + 3;
  v7 = (*(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v7 )
    __asan_report_store4(&this->dungeon_id_, v6, v7);
  this->dungeon_id_ = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->cur_cell_id_, v6, &this->cur_cell_id_);
  }
  this->cur_cell_id_ = 0;
};

// Line 1781: range 00000000159378B2-00000000159389DB
void __cdecl RogueLikeDungeonRuntimeMgr::onPostEnterSceneEvent(
        RogueLikeDungeonRuntimeMgr *const this,
        const PostEnterSceneEvent *event)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  RoguelikeDungeonActivity *activity; // rdx
  common::milog::MiLogStream *v9; // rax
  PlayerEventComp *EventComp; // r14
  __int64 v12; // rsi
  __int64 v13; // rdx
  __int64 v14; // rsi
  __int64 v15; // rdx
  const ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  uint32_t cell_id; // ecx
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  uint32_t v21; // esi
  common::milog::MiLogStream *v22; // rax
  char *v23; // rsi
  unsigned __int64 v24; // rax
  char v25; // dl
  __int64 v26; // rdx
  uint32_t v27; // r14d
  std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v28; // rdx
  char v29; // cl
  __int64 v30; // rsi
  data::RogueCellType type; // r14d
  __int64 v32; // rax
  char v33; // dl
  __int64 v34; // rdx
  common::milog::MiLogStream *v35; // r14
  std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v36; // rax
  Group *v37; // rax
  PlayerEventComp *v38; // r14
  unsigned int val; // [rsp+14h] [rbp-1ACh] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_begin; // [rsp+18h] [rbp-1A8h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+20h] [rbp-1A0h] BYREF
  RogueStageData *stage_ptr; // [rsp+28h] [rbp-198h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+30h] [rbp-190h]
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+38h] [rbp-188h]
  std::pair<unsigned int const,RogueCell> *__in; // [rsp+40h] [rbp-180h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *_; // [rsp+48h] [rbp-178h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+50h] [rbp-170h]
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+58h] [rbp-168h]
  std::shared_ptr<Config> v50; // [rsp+60h] [rbp-160h] BYREF
  common::milog::MiLogStream v51; // [rsp+70h] [rbp-150h] BYREF
  char v52[304]; // [rsp+90h] [rbp-130h] BYREF

  v2 = (unsigned __int64)v52;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(256LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "7 32 16 18 cur_scene_ptr:1782 64 16 26 cur_dungeon_scene_ptr:1787 96 16 16 context_opt:1793 128 "
                        "16 22 dungeon_scene_ptr:1814 160 16 27 next_dungeon_scene_ptr:1825 192 16 14 group_ptr:1849 224 "
                        "16 14 event_ptr:1855";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::onPostEnterSceneEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -219021312;
  v4[536862723] = -219021312;
  v4[536862724] = -219021312;
  v4[536862725] = -219021312;
  v4[536862726] = -219021312;
  v4[536862727] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v2 + 32));
  if ( !std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v2 + 32)) )
  {
    std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    toPtr<DungeonScene,Scene>((Scene *)(v2 + 64));
    if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v2 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v51,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "onPostEnterSceneEvent",
        1790);
      v5 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
             &v51,
             (const char (*)[48])"[ROGUE] cur scene is not dungeon, cur_scene_id:");
      v6 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
      val = Scene::getSceneId(v6);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, &val);
      common::milog::MiLogStream::~MiLogStream(&v51);
    }
    else
    {
      v7 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      *(std::optional<RogueDungeonContext> *)(v2 + 96) = DungeonScene::getDungeonExtraData<RogueDungeonContext>(v7);
      if ( !std::optional<RogueDungeonContext>::has_value((const std::optional<RogueDungeonContext> *const)(v2 + 96)) )
      {
        common::milog::MiLogStream::create(
          &v51,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "onPostEnterSceneEvent",
          1796);
        common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
          &v51,
          (const char (*)[31])"[ROGUE] dungeon has no context");
        common::milog::MiLogStream::~MiLogStream(&v51);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->activity_);
        activity = this->activity_;
        if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&this->stage_id_);
        }
        stage_ptr = RoguelikeDungeonActivity::findStage(activity, this->stage_id_);
        if ( stage_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
            && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
          {
            __asan_report_load1(&this->is_valid_);
          }
          if ( this->is_valid_ )
            goto LABEL_80;
          if ( *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3) + 0x7FFF8000) != 0
            && (((unsigned __int8)stage_ptr + 25) & 7) >= *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3)
                                                                   + 0x7FFF8000) )
          {
            __asan_report_load1(&stage_ptr->is_entering_next_level);
          }
          if ( !stage_ptr->is_entering_next_level )
          {
            common::milog::MiLogStream::create(
              &v51,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "onPostEnterSceneEvent",
              1808);
            common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
              &v51,
              (const char (*)[27])"[ROGUE] is_valid_ is false");
            common::milog::MiLogStream::~MiLogStream(&v51);
          }
          else
          {
LABEL_80:
            if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->activity_);
            misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
            std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v2 + 128));
            if ( std::operator!=<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v2 + 128))
              && std::operator==<DungeonScene,DungeonScene>(
                   (const std::shared_ptr<DungeonScene> *)(v2 + 128),
                   (const std::shared_ptr<DungeonScene> *)(v2 + 64)) )
            {
              common::milog::MiLogStream::create(
                &v51,
                &common::milog::MiLogDefault::default_log_obj_,
                1u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "onPostEnterSceneEvent",
                1817);
              common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(
                &v51,
                (const char (*)[24])"[ROGUE] reenter dungeon");
              common::milog::MiLogStream::~MiLogStream(&v51);
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->player_);
              EventComp = Player::getEventComp(this->player_);
              common::tools::perf::make_shared<PostEnterRogueDungeonEvent,unsigned int &,unsigned int &>(
                (unsigned int *)(v2 + 192),
                &this->dungeon_id_,
                &this->stage_id_,
                &this->dungeon_id_);
              std::shared_ptr<BaseEvent>::shared_ptr<PostEnterRogueDungeonEvent,void>(
                (std::shared_ptr<BaseEvent> *const)(v2 + 224),
                (std::shared_ptr<PostEnterRogueDungeonEvent> *)(v2 + 192));
              PlayerEventComp::notifyEvent(EventComp, (BaseEventPtr *)(v2 + 224));
              std::shared_ptr<BaseEvent>::~shared_ptr((std::shared_ptr<BaseEvent> *const)(v2 + 224));
              std::shared_ptr<PostEnterRogueDungeonEvent>::~shared_ptr((std::shared_ptr<PostEnterRogueDungeonEvent> *const)(v2 + 192));
              RogueLikeDungeonRuntimeMgr::notifyAllData(this);
              RoguelikeMiscMgr::setIsPostEnterRoguelikeDungeon(misc_mgr, 1);
            }
            else
            {
              std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v2 + 160));
              if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v2 + 160), 0LL) )
              {
                common::milog::MiLogStream::create(
                  &v51,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "onPostEnterSceneEvent",
                  1828);
                common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                  &v51,
                  (const char (*)[31])"[ROGUE] dungeon inst not match");
                common::milog::MiLogStream::~MiLogStream(&v51);
              }
              else if ( std::operator!=<DungeonScene,DungeonScene>(
                          (const std::shared_ptr<DungeonScene> *)(v2 + 160),
                          (const std::shared_ptr<DungeonScene> *)(v2 + 64)) )
              {
                common::milog::MiLogStream::create(
                  &v51,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "onPostEnterSceneEvent",
                  1833);
                common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                  &v51,
                  (const char (*)[31])"[ROGUE] dungeon inst not match");
                common::milog::MiLogStream::~MiLogStream(&v51);
              }
              else
              {
                v12 = ((_BYTE)stage_ptr + 25) & 7;
                v13 = (*(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v12 >= *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3) + 0x7FFF8000));
                if ( (_BYTE)v13 )
                  __asan_report_store1(&stage_ptr->is_entering_next_level, v12, v13);
                stage_ptr->is_entering_next_level = 0;
                std::__weak_ptr<DungeonScene,(__gnu_cxx::_Lock_policy)2>::reset(&this->next_dungeon_scene_wtr_);
                std::weak_ptr<DungeonScene>::operator=<DungeonScene>(
                  &this->dungeon_scene_wtr_,
                  (const std::shared_ptr<DungeonScene> *)(v2 + 64));
                v14 = ((_BYTE)this + 76) & 7;
                v15 = (*(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v14 >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000));
                if ( (_BYTE)v15 )
                  __asan_report_store1(&this->is_valid_, v14, v15);
                this->is_valid_ = 1;
                __for_range = &this->rogue_cell_map_;
                __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
                __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
                while ( std::operator!=(&__for_begin, &__for_end) )
                {
                  __in = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
                  _ = std::get<0ul,unsigned int const,RogueCell>(__in);
                  cell = std::get<1ul,unsigned int const,RogueCell>(__in);
                  ServiceBox::findService<GameserverService>();
                  GameserverService::getConfig((GameserverService *const)&v50);
                  p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v50)->design_config.txt_config_mgr.activity_rogue_config_mgr;
                  if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
                  {
                    p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell->cell_id;
                    __asan_report_load4(&cell->cell_id);
                  }
                  cell_id = cell->cell_id;
                  if ( *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) != 0
                    && (char)((((_BYTE)cell + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3)
                                                                        + 0x7FFF8000) )
                  {
                    p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell->dungeon_id;
                    __asan_report_load4(&cell->dungeon_id);
                  }
                  cell_config_ptr = ActivityRogueExcelConfigMgr::findDungeonCellConfigByDungeonIdAndCellId(
                                      p_activity_rogue_config_mgr,
                                      cell->dungeon_id,
                                      cell_id);
                  std::shared_ptr<Config>::~shared_ptr(&v50);
                  if ( cell_config_ptr )
                  {
                    v21 = (unsigned int)std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
                    if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_load4(&cell_config_ptr->group_id);
                    }
                    Scene::findGroup((Scene *const)(v2 + 192), v21);
                    if ( std::operator==<Group>(0LL, (const std::shared_ptr<Group> *)(v2 + 192)) )
                    {
                      common::milog::MiLogStream::create(
                        &v51,
                        &common::milog::MiLogDefault::default_log_obj_,
                        3u,
                        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                        "onPostEnterSceneEvent",
                        1852);
                      v22 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                              &v51,
                              (const char (*)[36])"[ROGUE] findGroup failed, group_id:");
                      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v22,
                        &cell_config_ptr->group_id);
                      common::milog::MiLogStream::~MiLogStream(&v51);
                    }
                    else
                    {
                      common::tools::perf::make_shared<Event>();
                      v23 = (char *)(v2 + 224);
                      if ( std::operator!=<Event>(0LL, (const std::shared_ptr<Event> *)(v2 + 224)) )
                      {
                        v24 = (unsigned __int64)std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 224));
                        v25 = *(_BYTE *)((v24 >> 3) + 0x7FFF8000);
                        LOBYTE(v23) = v25 != 0;
                        v26 = (v25 != 0) & (unsigned __int8)(v25 <= 3);
                        if ( (_BYTE)v26 )
                          v24 = __asan_report_store4(v24, v23, v26);
                        *(_DWORD *)v24 = 91;
                        if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
                          && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
                        {
                          __asan_report_load4(&cell->cell_id);
                        }
                        v27 = cell->cell_id;
                        v28 = std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 224));
                        v29 = *(_BYTE *)(((unsigned __int64)&v28->param1 >> 3) + 0x7FFF8000);
                        if ( v29 != 0 && (char)((((_BYTE)v28 + 44) & 7) + 3) >= v29 )
                        {
                          LOBYTE(v23) = v29 != 0;
                          __asan_report_store4(&v28->param1, v23, v28);
                        }
                        v28->param1 = v27;
                        v30 = (((_BYTE)cell + 20) & 7u) + 3;
                        if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
                          && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3)
                                                                              + 0x7FFF8000) )
                        {
                          __asan_report_load4(&cell->type);
                        }
                        type = cell->type;
                        v32 = (__int64)std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 224));
                        v33 = *(_BYTE *)(((unsigned __int64)(v32 + 48) >> 3) + 0x7FFF8000);
                        LOBYTE(v30) = v33 != 0;
                        v34 = (v33 != 0) & (unsigned __int8)(v33 <= 3);
                        if ( (_BYTE)v34 )
                          v32 = __asan_report_store4(v32 + 48, v30, v34);
                        *(_DWORD *)(v32 + 48) = type;
                        common::milog::MiLogStream::create(
                          &v51,
                          &common::milog::MiLogDefault::default_log_obj_,
                          1u,
                          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                          "onPostEnterSceneEvent",
                          1861);
                        v35 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                                &v51,
                                (const char (*)[29])"[ROGUE] handEvent, group_id:");
                        v36 = std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 192));
                        val = Group::getGroupId(v36);
                        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v35, &val);
                        common::milog::MiLogStream::~MiLogStream(&v51);
                        v37 = std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 192));
                        Group::handleEvent(v37, (EventPtr *)(v2 + 224));
                      }
                      std::shared_ptr<Event>::~shared_ptr((std::shared_ptr<Event> *const)(v2 + 224));
                    }
                    std::shared_ptr<Group>::~shared_ptr((std::shared_ptr<Group> *const)(v2 + 192));
                  }
                  else
                  {
                    common::milog::MiLogStream::create(
                      &v51,
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "onPostEnterSceneEvent",
                      1846);
                    v18 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                            &v51,
                            (const char (*)[43])"[ROGUE] cell config not found, dungeon_id:");
                    v19 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &cell->dungeon_id);
                    v20 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(
                            v19,
                            (const char (*)[10])" cell_id:");
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v20, &cell->cell_id);
                    common::milog::MiLogStream::~MiLogStream(&v51);
                  }
                  std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
                }
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->player_);
                v38 = Player::getEventComp(this->player_);
                common::tools::perf::make_shared<PostEnterRogueDungeonEvent,unsigned int &,unsigned int &>(
                  (unsigned int *)(v2 + 192),
                  &this->dungeon_id_,
                  &this->stage_id_,
                  &this->dungeon_id_);
                std::shared_ptr<BaseEvent>::shared_ptr<PostEnterRogueDungeonEvent,void>(
                  (std::shared_ptr<BaseEvent> *const)(v2 + 224),
                  (std::shared_ptr<PostEnterRogueDungeonEvent> *)(v2 + 192));
                PlayerEventComp::notifyEvent(v38, (BaseEventPtr *)(v2 + 224));
                std::shared_ptr<BaseEvent>::~shared_ptr((std::shared_ptr<BaseEvent> *const)(v2 + 224));
                std::shared_ptr<PostEnterRogueDungeonEvent>::~shared_ptr((std::shared_ptr<PostEnterRogueDungeonEvent> *const)(v2 + 192));
                RogueLikeDungeonRuntimeMgr::notifyAllData(this);
                RoguelikeMiscMgr::setIsPostEnterRoguelikeDungeon(misc_mgr, 1);
              }
              std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 160));
            }
            std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 128));
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v51,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "onPostEnterSceneEvent",
            1802);
          v9 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                 &v51,
                 (const char (*)[40])"[ROGUE] stage_ptr is nullptr, stage_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &this->stage_id_);
          common::milog::MiLogStream::~MiLogStream(&v51);
        }
      }
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 64));
  }
  std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v2 + 32));
  if ( v52 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1873: range 00000000159389DC-000000001593A1BD
void __cdecl RogueLikeDungeonRuntimeMgr::onGadgetDieEvent(
        RogueLikeDungeonRuntimeMgr *const this,
        const GadgetDieEvent *event)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  RoguelikeDungeonActivity *activity; // rdx
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // r14
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v8; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v9; // rdx
  std::pair<unsigned int,unsigned int> *p_second; // rax
  char *v11; // rsi
  std::map<data::RogueCreateGadgetType,unsigned int>::mapped_type *v12; // rax
  _DWORD *v13; // rdx
  char v14; // cl
  PlayerWatcherComp *WatcherComp; // rdi
  uint32_t dungeon_id; // ecx
  uint32_t cur_level; // edx
  common::milog::MiLogStream *v18; // r14
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v19; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v20; // rdx
  std::pair<unsigned int,unsigned int> *v21; // rax
  char *v22; // rsi
  std::map<data::RogueCreateGadgetType,unsigned int>::mapped_type *v23; // rax
  _DWORD *v24; // rdx
  char v25; // cl
  common::milog::MiLogStream *v26; // r14
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v27; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v28; // rdx
  std::pair<unsigned int,unsigned int> *v29; // rax
  common::milog::MiLogStream *v30; // r14
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v31; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v32; // rdx
  std::pair<unsigned int,unsigned int> *v33; // rax
  char *v34; // rsi
  std::map<data::RogueCreateGadgetType,unsigned int>::mapped_type *v35; // rax
  _DWORD *v36; // rdx
  char v37; // cl
  common::milog::MiLogStream *v38; // r14
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v39; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false>::pointer v40; // rdx
  std::pair<unsigned int,unsigned int> *v41; // rax
  char *v42; // rsi
  std::map<data::RogueCreateGadgetType,unsigned int>::mapped_type *v43; // rax
  _DWORD *v44; // rdx
  char v45; // cl
  std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v46; // rdx
  unsigned int *v47; // rax
  common::milog::MiLogStream *v48; // r14
  std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::pointer v49; // rax
  common::milog::MiLogStream *v50; // rax
  std::__detail::_Node_iterator<std::pair<unsigned int const,int>,false,false>::pointer v51; // rdx
  int *v52; // rax
  int *M_current; // r14
  std::vector<int>::iterator v54; // rax
  common::milog::MiLogStream *v55; // rax
  __gnu_cxx::__normal_iterator<int*,std::vector<int> > v57; // [rsp+10h] [rbp-200h] BYREF
  __gnu_cxx::__normal_iterator<int*,std::vector<int> > __i; // [rsp+18h] [rbp-1F8h] BYREF
  __gnu_cxx::__normal_iterator<int const*,std::vector<int> > __first; // [rsp+20h] [rbp-1F0h] BYREF
  RogueStageData *stage_ptr; // [rsp+28h] [rbp-1E8h]
  RogueCell *cell_ptr; // [rsp+30h] [rbp-1E0h]
  std::vector<int> *guard_gadget_group_point_vec; // [rsp+38h] [rbp-1D8h]
  common::milog::MiLogStream v63; // [rsp+40h] [rbp-1D0h] BYREF
  char v64[432]; // [rsp+60h] [rbp-1B0h] BYREF

  v2 = (unsigned __int64)v64;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(384LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "10 32 4 13 point_id:1964 48 8 22 blast_bucket_iter:1885 80 8 19 brakeages_iter:1899 112 8 14 tra"
                        "p_iter:1912 144 8 15 byobu_iter:1923 176 8 14 ball_iter:1936 208 8 15 guard_iter:1949 240 8 21 g"
                        "uard_point_iter:1958 272 8 21 group_point_pair:1940 304 48 21 gadget_count_map:1886";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::onGadgetDieEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61956;
  v4[536862721] = -234881024;
  v4[536862722] = 62194;
  v4[536862722] = -234881024;
  v4[536862723] = 62194;
  v4[536862723] = -234881024;
  v4[536862724] = 62194;
  v4[536862724] = -234881024;
  v4[536862725] = 62194;
  v4[536862725] = -234881024;
  v4[536862726] = 62194;
  v4[536862726] = -234881024;
  v4[536862727] = 62194;
  v4[536862727] = -234881024;
  v4[536862728] = 62194;
  v4[536862728] = -234881024;
  v4[536862729] = 62194;
  v4[536862731] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v63,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onGadgetDieEvent",
      1876);
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      &v63,
      (const char (*)[29])"[ROGUE] runtime is not valid");
    common::milog::MiLogStream::~MiLogStream(&v63);
    goto LABEL_85;
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  activity = this->activity_;
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->stage_id_);
  }
  stage_ptr = RoguelikeDungeonActivity::findStage(activity, this->stage_id_);
  if ( !stage_ptr )
  {
    common::milog::MiLogStream::create(
      &v63,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onGadgetDieEvent",
      1882);
    v6 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
           &v63,
           (const char (*)[35])"[ROGUE] stage not found, stage_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &this->stage_id_);
    common::milog::MiLogStream::~MiLogStream(&v63);
    goto LABEL_85;
  }
  *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 48) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::find(
                                                                                                    &this->blast_bucket_entity_id_2_group_pair_map_,
                                                                                                    &event->entity_id);
  std::map<data::RogueCreateGadgetType,unsigned int>::map((std::map<data::RogueCreateGadgetType,unsigned int> *const)(v2 + 304));
  *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 272) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&this->blast_bucket_entity_id_2_group_pair_map_);
  if ( std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false>(
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 48),
         (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 272)) )
  {
    common::milog::MiLogStream::create(
      &v63,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onGadgetDieEvent",
      1889);
    v7 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
           &v63,
           (const char (*)[45])"[ROGUE] blast bucket die, point_config_pair:");
    v8 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 48));
    common::milog::MiLogStream::operator<<<unsigned int,unsigned int>(v7, &v8->second);
    common::milog::MiLogStream::~MiLogStream(&v63);
    v9 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 48));
    p_second = &v9->second;
    if ( ((unsigned __int8)p_second & 7) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000)
      && *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
      || *(_BYTE *)((((unsigned __int64)&p_second->second + 3) >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)p_second + 7) & 7) >= *(_BYTE *)((((unsigned __int64)&p_second->second + 3) >> 3)
                                                           + 0x7FFF8000) )
    {
      __asan_report_load_n(p_second, 8LL);
    }
    *(std::pair<unsigned int,unsigned int> *)(v2 + 272) = v9->second;
    std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::erase(
      &this->blast_bucket_entity_id_2_group_pair_map_,
      *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 48));
    std::set<std::pair<unsigned int,unsigned int>>::erase(
      &this->blast_bucket_set_,
      (const std::set<std::pair<unsigned int,unsigned int>>::key_type *)(v2 + 272));
    std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::erase(
      &this->blast_bucket_group_pair_map_,
      (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v2 + 272));
    *(_DWORD *)(v2 + 32) = 8;
    v11 = (char *)(v2 + 32);
    v12 = std::map<data::RogueCreateGadgetType,unsigned int>::operator[](
            (std::map<data::RogueCreateGadgetType,unsigned int> *const)(v2 + 304),
            (std::map<data::RogueCreateGadgetType,unsigned int>::key_type *)(v2 + 32));
    v13 = v12;
    v14 = *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000);
    if ( v14 != 0 && (char)(((unsigned __int8)v12 & 7) + 3) >= v14 )
    {
      LOBYTE(v11) = v14 != 0;
      __asan_report_store4(v12, v11, v12);
    }
    *v13 = 1;
    RogueStageData::onGadgetDie(stage_ptr, ROGUE_GADGET_TYPE_BLAST);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    WatcherComp = Player::getWatcherComp(this->player_);
    if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) )
    {
      WatcherComp = (PlayerWatcherComp *)&this->dungeon_id_;
      __asan_report_load4(&this->dungeon_id_);
    }
    dungeon_id = this->dungeon_id_;
    if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
    {
      WatcherComp = (PlayerWatcherComp *)&this->cur_level_;
      __asan_report_load4(&this->cur_level_);
    }
    cur_level = this->cur_level_;
    if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
    {
      WatcherComp = (PlayerWatcherComp *)&this->stage_id_;
      __asan_report_load4(&this->stage_id_);
    }
  }
  else
  {
    *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 80) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::find(&this->brakeages_entity_id_2_group_pair_map_, &event->entity_id);
    *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 272) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&this->brakeages_entity_id_2_group_pair_map_);
    if ( std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false>(
           (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 80),
           (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 272)) )
    {
      common::milog::MiLogStream::create(
        &v63,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "onGadgetDieEvent",
        1902);
      v18 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
              &v63,
              (const char (*)[42])"[ROGUE] brakeages die, point_config_pair:");
      v19 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 80));
      common::milog::MiLogStream::operator<<<unsigned int,unsigned int>(v18, &v19->second);
      common::milog::MiLogStream::~MiLogStream(&v63);
      v20 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 80));
      v21 = &v20->second;
      if ( ((unsigned __int8)v21 & 7) >= *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000)
        && *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) != 0
        || *(_BYTE *)((((unsigned __int64)&v21->second + 3) >> 3) + 0x7FFF8000) != 0
        && (((unsigned __int8)v21 + 7) & 7) >= *(_BYTE *)((((unsigned __int64)&v21->second + 3) >> 3) + 0x7FFF8000) )
      {
        __asan_report_load_n(v21, 8LL);
      }
      *(std::pair<unsigned int,unsigned int> *)(v2 + 272) = v20->second;
      std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::erase(
        &this->brakeages_entity_id_2_group_pair_map_,
        *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 80));
      std::map<std::pair<unsigned int,unsigned int>,unsigned int>::erase(
        &this->brakeage_group_pair_gadget_id_map_,
        (const std::map<std::pair<unsigned int,unsigned int>,unsigned int>::key_type *)(v2 + 272));
      std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::erase(
        &this->brakeages_group_pair_map_,
        (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v2 + 272));
      *(_DWORD *)(v2 + 32) = 10;
      v22 = (char *)(v2 + 32);
      v23 = std::map<data::RogueCreateGadgetType,unsigned int>::operator[](
              (std::map<data::RogueCreateGadgetType,unsigned int> *const)(v2 + 304),
              (std::map<data::RogueCreateGadgetType,unsigned int>::key_type *)(v2 + 32));
      v24 = v23;
      v25 = *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000);
      if ( v25 != 0 && (char)(((unsigned __int8)v23 & 7) + 3) >= v25 )
      {
        LOBYTE(v22) = v25 != 0;
        __asan_report_store4(v23, v22, v23);
      }
      *v24 = 1;
      RogueStageData::onGadgetDie(stage_ptr, ROGUE_GADGET_TYPE_BREAKAGES);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      WatcherComp = Player::getWatcherComp(this->player_);
      if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) )
      {
        WatcherComp = (PlayerWatcherComp *)&this->dungeon_id_;
        __asan_report_load4(&this->dungeon_id_);
      }
      dungeon_id = this->dungeon_id_;
      if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
      {
        WatcherComp = (PlayerWatcherComp *)&this->cur_level_;
        __asan_report_load4(&this->cur_level_);
      }
      cur_level = this->cur_level_;
      if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
      {
        WatcherComp = (PlayerWatcherComp *)&this->stage_id_;
        __asan_report_load4(&this->stage_id_);
      }
    }
    else
    {
      *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 112) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::find(&this->trap_entity_id_2_group_pair_map_, &event->entity_id);
      *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 272) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&this->trap_entity_id_2_group_pair_map_);
      if ( std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false>(
             (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 112),
             (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 272)) )
      {
        common::milog::MiLogStream::create(
          &v63,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "onGadgetDieEvent",
          1915);
        v26 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                &v63,
                (const char (*)[37])"[ROGUE] trap die, point_config_pair:");
        v27 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 112));
        common::milog::MiLogStream::operator<<<unsigned int,unsigned int>(v26, &v27->second);
        common::milog::MiLogStream::~MiLogStream(&v63);
        v28 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 112));
        v29 = &v28->second;
        if ( ((unsigned __int8)v29 & 7) >= *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000)
          && *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) != 0
          || *(_BYTE *)((((unsigned __int64)&v29->second + 3) >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)v29 + 7) & 7) >= *(_BYTE *)((((unsigned __int64)&v29->second + 3) >> 3) + 0x7FFF8000) )
        {
          __asan_report_load_n(v29, 8LL);
        }
        *(std::pair<unsigned int,unsigned int> *)(v2 + 272) = v28->second;
        std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::erase(
          &this->trap_entity_id_2_group_pair_map_,
          *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 112));
        std::map<std::pair<unsigned int,unsigned int>,unsigned int>::erase(
          &this->trap_group_pair_gadget_id_map_,
          (const std::map<std::pair<unsigned int,unsigned int>,unsigned int>::key_type *)(v2 + 272));
        std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::erase(
          &this->trap_group_pair_map_,
          (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v2 + 272));
        RogueStageData::onGadgetDie(stage_ptr, ROGUE_GADGET_TYPE_TRAP);
        goto LABEL_84;
      }
      *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 144) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::find(&this->byobu_entity_id_2_group_pair_map_, &event->entity_id);
      *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 272) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&this->byobu_entity_id_2_group_pair_map_);
      if ( std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false>(
             (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 144),
             (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 272)) )
      {
        common::milog::MiLogStream::create(
          &v63,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "onGadgetDieEvent",
          1926);
        v30 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                &v63,
                (const char (*)[38])"[ROGUE] byobu die, point_config_pair:");
        v31 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 144));
        common::milog::MiLogStream::operator<<<unsigned int,unsigned int>(v30, &v31->second);
        common::milog::MiLogStream::~MiLogStream(&v63);
        v32 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 144));
        v33 = &v32->second;
        if ( ((unsigned __int8)v33 & 7) >= *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000)
          && *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) != 0
          || *(_BYTE *)((((unsigned __int64)&v33->second + 3) >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)v33 + 7) & 7) >= *(_BYTE *)((((unsigned __int64)&v33->second + 3) >> 3) + 0x7FFF8000) )
        {
          __asan_report_load_n(v33, 8LL);
        }
        *(std::pair<unsigned int,unsigned int> *)(v2 + 272) = v32->second;
        std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::erase(
          &this->byobu_entity_id_2_group_pair_map_,
          *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 144));
        std::map<std::pair<unsigned int,unsigned int>,unsigned int>::erase(
          &this->byobu_group_pair_gadget_id_map_,
          (const std::map<std::pair<unsigned int,unsigned int>,unsigned int>::key_type *)(v2 + 272));
        std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::erase(
          &this->byobu_group_pair_map_,
          (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v2 + 272));
        *(_DWORD *)(v2 + 32) = 10;
        v34 = (char *)(v2 + 32);
        v35 = std::map<data::RogueCreateGadgetType,unsigned int>::operator[](
                (std::map<data::RogueCreateGadgetType,unsigned int> *const)(v2 + 304),
                (std::map<data::RogueCreateGadgetType,unsigned int>::key_type *)(v2 + 32));
        v36 = v35;
        v37 = *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000);
        if ( v37 != 0 && (char)(((unsigned __int8)v35 & 7) + 3) >= v37 )
        {
          LOBYTE(v34) = v37 != 0;
          __asan_report_store4(v35, v34, v35);
        }
        *v36 = 1;
        RogueStageData::onGadgetDie(stage_ptr, ROGUE_GADGET_TYPE_BREAKAGES);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        WatcherComp = Player::getWatcherComp(this->player_);
        if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) )
        {
          WatcherComp = (PlayerWatcherComp *)&this->dungeon_id_;
          __asan_report_load4(&this->dungeon_id_);
        }
        dungeon_id = this->dungeon_id_;
        if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
        {
          WatcherComp = (PlayerWatcherComp *)&this->cur_level_;
          __asan_report_load4(&this->cur_level_);
        }
        cur_level = this->cur_level_;
        if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
        {
          WatcherComp = (PlayerWatcherComp *)&this->stage_id_;
          __asan_report_load4(&this->stage_id_);
        }
      }
      else
      {
        *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 176) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::find(&this->ball_entity_id_2_group_pair_map_, &event->entity_id);
        *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 272) = std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::end(&this->ball_entity_id_2_group_pair_map_);
        if ( !std::__detail::operator!=<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false>(
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 176),
                (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false> *)(v2 + 272)) )
        {
          *(std::unordered_map<unsigned int,unsigned int>::iterator *)(v2 + 208) = std::unordered_map<unsigned int,unsigned int>::find(
                                                                                     &this->guard_entity_id_2_cell_id_map_,
                                                                                     &event->entity_id);
          *(std::unordered_map<unsigned int,unsigned int>::iterator *)(v2 + 272) = std::unordered_map<unsigned int,unsigned int>::end(&this->guard_entity_id_2_cell_id_map_);
          if ( std::__detail::operator!=<std::pair<unsigned int const,unsigned int>,false>(
                 (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v2 + 208),
                 (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,unsigned int>,false> *)(v2 + 272)) )
          {
            v46 = std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 208));
            v47 = &v46->second;
            if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v47 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v47);
            }
            cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, v46->second);
            if ( cell_ptr )
            {
              *(std::unordered_map<unsigned int,int>::iterator *)(v2 + 240) = std::unordered_map<unsigned int,int>::find(
                                                                                &cell_ptr->guard_entity_id_2_point_id_map,
                                                                                &event->entity_id);
              *(std::unordered_map<unsigned int,int>::iterator *)(v2 + 272) = std::unordered_map<unsigned int,int>::end(&cell_ptr->guard_entity_id_2_point_id_map);
              if ( std::__detail::operator==<std::pair<unsigned int const,int>,false>(
                     (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,int>,false> *)(v2 + 240),
                     (const std::__detail::_Node_iterator_base<std::pair<unsigned int const,int>,false> *)(v2 + 272)) )
              {
                common::milog::MiLogStream::create(
                  &v63,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "onGadgetDieEvent",
                  1961);
                v50 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                        &v63,
                        (const char (*)[40])"[ROGUE] guard point not found, cell_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v50, &cell_ptr->cell_id);
                common::milog::MiLogStream::~MiLogStream(&v63);
              }
              else
              {
                v51 = std::__detail::_Node_iterator<std::pair<unsigned int const,int>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,int>,false,false> *const)(v2 + 240));
                v52 = &v51->second;
                if ( *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v52 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v52);
                }
                *(_DWORD *)(v2 + 32) = v51->second;
                guard_gadget_group_point_vec = &cell_ptr->guard_gadget_group_point_vec;
                __i._M_current = std::vector<int>::end(&cell_ptr->guard_gadget_group_point_vec)._M_current;
                __gnu_cxx::__normal_iterator<int const*,std::vector<int>>::__normal_iterator<int *>(
                  (__gnu_cxx::__normal_iterator<int const*,std::vector<int> > *const)(v2 + 272),
                  &__i);
                M_current = std::vector<int>::end(guard_gadget_group_point_vec)._M_current;
                v54._M_current = std::vector<int>::begin(guard_gadget_group_point_vec)._M_current;
                v57._M_current = std::remove<__gnu_cxx::__normal_iterator<int *,std::vector<int>>,int>(
                                   v54,
                                   (__gnu_cxx::__normal_iterator<int*,std::vector<int> >)M_current,
                                   (const int *)(v2 + 32))._M_current;
                __gnu_cxx::__normal_iterator<int const*,std::vector<int>>::__normal_iterator<int *>(&__first, &v57);
                std::vector<int>::erase(
                  guard_gadget_group_point_vec,
                  __first,
                  *(std::vector<int>::const_iterator *)(v2 + 272));
                std::unordered_map<unsigned int,int>::erase(
                  &cell_ptr->guard_entity_id_2_point_id_map,
                  *(std::unordered_map<unsigned int,int>::iterator *)(v2 + 240));
                std::unordered_map<unsigned int,unsigned int>::erase(
                  &this->guard_entity_id_2_cell_id_map_,
                  *(std::unordered_map<unsigned int,unsigned int>::iterator *)(v2 + 208));
                common::milog::MiLogStream::create(
                  &v63,
                  &common::milog::MiLogDefault::default_log_obj_,
                  1u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "onGadgetDieEvent",
                  1970);
                v55 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                        &v63,
                        (const char (*)[28])"[ROGUE] guard die, cell_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v55, &cell_ptr->cell_id);
                common::milog::MiLogStream::~MiLogStream(&v63);
              }
            }
            else
            {
              common::milog::MiLogStream::create(
                &v63,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "onGadgetDieEvent",
                1955);
              v48 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                      &v63,
                      (const char (*)[39])"[ROGUE] guard cell not found, cell_id:");
              v49 = std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,unsigned int>,false,false> *const)(v2 + 208));
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v48, &v49->second);
              common::milog::MiLogStream::~MiLogStream(&v63);
            }
          }
          goto LABEL_84;
        }
        common::milog::MiLogStream::create(
          &v63,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "onGadgetDieEvent",
          1939);
        v38 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                &v63,
                (const char (*)[37])"[ROGUE] ball die, point_config_pair:");
        v39 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 176));
        common::milog::MiLogStream::operator<<<unsigned int,unsigned int>(v38, &v39->second);
        common::milog::MiLogStream::~MiLogStream(&v63);
        v40 = std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int>>,false,false>::operator->((const std::__detail::_Node_iterator<std::pair<unsigned int const,std::pair<unsigned int,unsigned int> >,false,false> *const)(v2 + 176));
        v41 = &v40->second;
        if ( ((unsigned __int8)v41 & 7) >= *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000)
          && *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) != 0
          || *(_BYTE *)((((unsigned __int64)&v41->second + 3) >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)v41 + 7) & 7) >= *(_BYTE *)((((unsigned __int64)&v41->second + 3) >> 3) + 0x7FFF8000) )
        {
          __asan_report_load_n(v41, 8LL);
        }
        *(std::pair<unsigned int,unsigned int> *)(v2 + 272) = v40->second;
        std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::erase(
          &this->ball_entity_id_2_group_pair_map_,
          *(std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::iterator *)(v2 + 176));
        std::map<std::pair<unsigned int,unsigned int>,unsigned int>::erase(
          &this->ball_group_pair_gadget_id_map_,
          (const std::map<std::pair<unsigned int,unsigned int>,unsigned int>::key_type *)(v2 + 272));
        std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::erase(
          &this->ball_group_pair_map_,
          (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v2 + 272));
        *(_DWORD *)(v2 + 32) = 11;
        v42 = (char *)(v2 + 32);
        v43 = std::map<data::RogueCreateGadgetType,unsigned int>::operator[](
                (std::map<data::RogueCreateGadgetType,unsigned int> *const)(v2 + 304),
                (std::map<data::RogueCreateGadgetType,unsigned int>::key_type *)(v2 + 32));
        v44 = v43;
        v45 = *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000);
        if ( v45 != 0 && (char)(((unsigned __int8)v43 & 7) + 3) >= v45 )
        {
          LOBYTE(v42) = v45 != 0;
          __asan_report_store4(v43, v42, v43);
        }
        *v44 = 1;
        RogueStageData::onGadgetDie(stage_ptr, ROGUE_GADGET_TYPE_BALL);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        WatcherComp = Player::getWatcherComp(this->player_);
        if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) )
        {
          WatcherComp = (PlayerWatcherComp *)&this->dungeon_id_;
          __asan_report_load4(&this->dungeon_id_);
        }
        dungeon_id = this->dungeon_id_;
        if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
        {
          WatcherComp = (PlayerWatcherComp *)&this->cur_level_;
          __asan_report_load4(&this->cur_level_);
        }
        cur_level = this->cur_level_;
        if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
        {
          WatcherComp = (PlayerWatcherComp *)&this->stage_id_;
          __asan_report_load4(&this->stage_id_);
        }
      }
    }
  }
  PlayerWatcherComp::triggerRogueGadgetDie(
    WatcherComp,
    this->stage_id_,
    cur_level,
    dungeon_id,
    (const std::map<data::RogueCreateGadgetType,unsigned int> *)(v2 + 304),
    0);
LABEL_84:
  std::map<data::RogueCreateGadgetType,unsigned int>::~map((std::map<data::RogueCreateGadgetType,unsigned int> *const)(v2 + 304));
LABEL_85:
  if ( v64 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF802C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1976: range 000000001593A1BE-000000001593A331
int32_t __cdecl RogueLikeDungeonRuntimeMgr::clearWhenTempLeave(RogueLikeDungeonRuntimeMgr *const this)
{
  std::map<unsigned int,RogueCell>::iterator __for_begin; // [rsp+10h] [rbp-30h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+18h] [rbp-28h] BYREF
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+20h] [rbp-20h]
  std::pair<unsigned int const,RogueCell> *__in; // [rsp+28h] [rbp-18h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *_; // [rsp+30h] [rbp-10h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+38h] [rbp-8h]

  __for_range = &this->rogue_cell_map_;
  __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    __in = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
    _ = std::get<0ul,unsigned int const,RogueCell>(__in);
    cell = std::get<1ul,unsigned int const,RogueCell>(__in);
    RogueCell::clearDoorEntity(cell);
    RogueCell::clearGadgetEntity(cell);
    RogueCell::clearGuardEntity(cell);
    if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&cell->type);
    }
    if ( cell->type == ROGUE_CELL_TYPE_ELITE
      || cell->type == ROGUE_CELL_TYPE_NORMAL
      || cell->type == ROGUE_CELL_TYPE_BOSS )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&cell->state);
      }
      if ( cell->state == ROGUE_CELL_BATTLE )
        cell->state = ROGUE_CELL_NONE;
    }
    std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
  }
  RogueLikeDungeonRuntimeMgr::clearOneOffEntities(this);
  return 0;
};

// Line 1996: range 000000001593A55E-000000001593A75B
void __cdecl RogueLikeDungeonRuntimeMgr::clearOneOffEntities(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r13
  char v4[96]; // [rsp+10h] [rbp-60h] BYREF

  v1 = (unsigned __int64)v4;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 1 22 clear_entity_func:1997";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::clearOneOffEntities;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202116351;
  RogueLikeDungeonRuntimeMgr::clearOneOffEntities(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator()(
    (const RogueLikeDungeonRuntimeMgr::clearOneOffEntities::<lambda(const GroupPairEntityMap&)> *const)(v1 + 32),
    &this->blast_bucket_group_pair_map_);
  RogueLikeDungeonRuntimeMgr::clearOneOffEntities(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator()(
    (const RogueLikeDungeonRuntimeMgr::clearOneOffEntities::<lambda(const GroupPairEntityMap&)> *const)(v1 + 32),
    &this->brakeages_group_pair_map_);
  RogueLikeDungeonRuntimeMgr::clearOneOffEntities(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator()(
    (const RogueLikeDungeonRuntimeMgr::clearOneOffEntities::<lambda(const GroupPairEntityMap&)> *const)(v1 + 32),
    &this->trap_group_pair_map_);
  RogueLikeDungeonRuntimeMgr::clearOneOffEntities(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator()(
    (const RogueLikeDungeonRuntimeMgr::clearOneOffEntities::<lambda(const GroupPairEntityMap&)> *const)(v1 + 32),
    &this->byobu_group_pair_map_);
  RogueLikeDungeonRuntimeMgr::clearOneOffEntities(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator()(
    (const RogueLikeDungeonRuntimeMgr::clearOneOffEntities::<lambda(const GroupPairEntityMap&)> *const)(v1 + 32),
    &this->ball_group_pair_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->blast_bucket_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->blast_bucket_group_pair_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->brakeages_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->brakeages_group_pair_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->trap_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->trap_group_pair_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->byobu_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->byobu_group_pair_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->ball_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->ball_group_pair_map_);
  std::unordered_map<unsigned int,unsigned int>::clear(&this->guard_entity_id_2_cell_id_map_);
  if ( v4 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 1997: range 000000001593A332-000000001593A55D
void __cdecl RogueLikeDungeonRuntimeMgr::clearOneOffEntities(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator()(
        const RogueLikeDungeonRuntimeMgr::clearOneOffEntities::<lambda(const GroupPairEntityMap&)> *const __closure,
        const RogueLikeDungeonRuntimeMgr::GroupPairEntityMap *group_map)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r13
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  unsigned __int64 v6; // rax
  unsigned __int64 v7; // rdx
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::const_iterator __for_begin; // [rsp+10h] [rbp-90h] BYREF
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::const_iterator __for_end; // [rsp+18h] [rbp-88h] BYREF
  const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > > *__for_range; // [rsp+20h] [rbp-80h]
  const std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > *v11; // [rsp+28h] [rbp-78h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > >::type *_; // [rsp+30h] [rbp-70h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > >::type *gadget_wtr; // [rsp+38h] [rbp-68h]
  char v14[96]; // [rsp+40h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 15 gadget_ptr:2001";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::clearOneOffEntities(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator();
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  __for_range = group_map;
  __for_begin._M_cur = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::begin(group_map)._M_cur;
  __for_end._M_cur = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::end(group_map)._M_cur;
  while ( std::__detail::operator!=<std::pair<std::pair const<unsigned int,unsigned int>,std::weak_ptr<Gadget>>,true>(
            &__for_begin,
            &__for_end) )
  {
    v11 = std::__detail::_Node_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,std::weak_ptr<Gadget>>,false,true>::operator*(&__for_begin);
    _ = std::get<0ul,std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>(v11);
    gadget_wtr = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>(v11);
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v2 + 32));
    if ( std::operator!=<Gadget>((const std::shared_ptr<Gadget> *)(v2 + 32), 0LL) )
    {
      v5 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
      if ( Entity::isOnScene((const Entity *const)v5) )
      {
        v6 = (unsigned __int64)std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
        if ( *(_BYTE *)((v6 >> 3) + 0x7FFF8000) )
          v6 = __asan_report_load8(v6);
        v7 = *(_QWORD *)v6 + 128LL;
        if ( *(_BYTE *)((v7 >> 3) + 0x7FFF8000) )
          v6 = __asan_report_load8(*(_QWORD *)v6 + 128LL);
        (*(void (__fastcall **)(unsigned __int64, VisionContext *))v7)(v6, &VisionContext::miss_context);
      }
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v2 + 32));
    std::__detail::_Node_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,std::weak_ptr<Gadget>>,false,true>::operator++(&__for_begin);
  }
  if ( v14 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 2031: range 000000001593B130-000000001593D64B
__int64 __fastcall RogueLikeDungeonRuntimeMgr::buildCellEntities(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t dungeon_weight_id,
        DungeonScenePtr *p_dungeon_scene_ptr,
        RogueCell *cell)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  const ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  uint32_t cell_id; // ecx
  common::milog::MiLogStream *v9; // rax
  unsigned int v10; // r14d
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  common::milog::MiLogStream *v12; // rax
  ActivityRogueExcelConfigMgr *v13; // rcx
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  ReviseLevelGrowExcelConfigMgr *p_revise_level_grow_config_mgr; // r14
  uint32_t InitWorldLevel; // ecx
  ActivityRogueExcelConfigMgr *v18; // rsi
  uint32_t v19; // ecx
  const std::map<data::RogueGadgetDirType,std::pair<std::string,std::string >> *v20; // rax
  const ActivityRogueExcelConfigMgr *p_door_offset; // rdi
  std::tuple_element<0,const std::pair<const data::RogueGadgetDirType,std::pair<std::string,std::string > > >::type v22; // ecx
  float v23; // xmm1_4
  ActivityRogueExcelConfigMgr *v24; // rcx
  float GadgetRotByDir; // xmm0_4
  common::milog::MiLogStream *v26; // rax
  std::weak_ptr<Gadget> *v27; // rax
  std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::pointer v28; // rdx
  unsigned int *p_second; // rax
  common::milog::MiLogStream *v30; // r14
  std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::pointer v31; // rax
  data::RogueCellType type; // eax
  data::RogueGadgetStateType v33; // eax
  common::milog::MiLogStream *v34; // rax
  std::weak_ptr<Gadget> *v35; // rax
  proto::RogueCellState state; // ecx
  data::RogueCellType v37; // eax
  common::milog::MiLogStream *v38; // rax
  std::weak_ptr<Gadget> *v39; // rax
  common::milog::MiLogStream *v40; // rax
  std::weak_ptr<Gadget> *v41; // rax
  common::milog::MiLogStream *v42; // rcx
  common::milog::MiLogStream *v43; // rax
  std::weak_ptr<Gadget> *v44; // rax
  common::milog::MiLogStream *v45; // rax
  std::weak_ptr<Gadget> *v46; // rax
  common::milog::MiLogStream *v47; // rax
  std::weak_ptr<Gadget> *v48; // rax
  __gnu_cxx::__normal_iterator<int*,std::vector<int> >::reference v49; // rax
  _DWORD *v50; // rdx
  LuaConfigMgr *p_lua_config_mgr; // rcx
  common::milog::MiLogStream *v52; // rax
  common::milog::MiLogStream *v53; // rax
  common::milog::MiLogStream *v54; // rax
  uint32_t v55; // r14d
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v56; // rax
  data::RogueCreateGadgetType *p_val; // rsi
  std::unordered_map<unsigned int,unsigned int>::mapped_type *v58; // rax
  uint32_t *v59; // rdx
  char v60; // cl
  int v61; // r15d
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v62; // rax
  data::RogueCreateGadgetType *v63; // rsi
  std::unordered_map<unsigned int,int>::mapped_type *v64; // rax
  _DWORD *v65; // rdx
  char v66; // cl
  __int64 result; // rax
  bool is_close; // [rsp+33h] [rbp-38Dh]
  data::RogueCreateGadgetType val; // [rsp+34h] [rbp-38Ch] BYREF
  data::RogueGadgetStateType rogue_gadget_state; // [rsp+38h] [rbp-388h]
  data::RogueGadgetStateType spring_gadget_state; // [rsp+3Ch] [rbp-384h]
  uint32_t revise_level; // [rsp+40h] [rbp-380h]
  data::RogueGadgetStateType door_state; // [rsp+44h] [rbp-37Ch]
  std::map<data::RogueGadgetDirType,std::pair<std::string,std::string >>::iterator __for_begin; // [rsp+48h] [rbp-378h] BYREF
  std::map<data::RogueGadgetDirType,std::pair<std::string,std::string >>::iterator __for_end; // [rsp+50h] [rbp-370h] BYREF
  std::vector<int>::iterator __for_end_0; // [rsp+58h] [rbp-368h] BYREF
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+60h] [rbp-360h]
  const data::RoguelikeDungeonWeightExcelConfig *dungeon_weight_config_ptr; // [rsp+68h] [rbp-358h]
  const data::RogueStageExcelConfig *stage_config_ptr; // [rsp+70h] [rbp-350h]
  std::map<data::RogueGadgetDirType,std::pair<std::string,std::string >> *__for_range; // [rsp+78h] [rbp-348h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+80h] [rbp-340h]
  const RoguelikeEfffectCellParam *effect_cell_param; // [rsp+88h] [rbp-338h]
  std::vector<int> *__for_range_0; // [rsp+90h] [rbp-330h]
  const GroupScriptConfig *group_script_config_ptr; // [rsp+98h] [rbp-328h]
  const PointScriptConfig *point_config_ptr; // [rsp+A0h] [rbp-320h]
  const std::pair<const data::RogueGadgetDirType,std::pair<std::string,std::string > > *v89; // [rsp+A8h] [rbp-318h]
  std::tuple_element<0,const std::pair<const data::RogueGadgetDirType,std::pair<std::string,std::string > > >::type *dir; // [rsp+B0h] [rbp-310h]
  std::tuple_element<1,const std::pair<const data::RogueGadgetDirType,std::pair<std::string,std::string > > >::type *_; // [rsp+B8h] [rbp-308h]
  RogueCell *adj_cell_ptr; // [rsp+C0h] [rbp-300h]
  RogueCell *adj_cell; // [rsp+C8h] [rbp-2F8h]
  std::shared_ptr<Config> v94; // [rsp+D0h] [rbp-2F0h] BYREF
  std::shared_ptr<Config> v95; // [rsp+E0h] [rbp-2E0h] BYREF
  common::milog::MiLogStream v96; // [rsp+F0h] [rbp-2D0h] BYREF
  common::milog::MiLogStream v97; // [rsp+110h] [rbp-2B0h] BYREF
  char v98[656]; // [rsp+130h] [rbp-290h] BYREF

  v4 = (unsigned __int64)v98;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_4(608LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "14 48 4 19 guard_point_id:2268 64 4 22 dungeon_weight_id:2030 80 8 18 adj_cell_iter:2111 112 12 "
                        "17 operator_pos:2197 144 12 17 operator_rot:2198 176 12 8 pos:2282 208 12 8 rot:2283 240 16 15 g"
                        "adget_ptr:2116 272 16 15 gadget_ptr:2134 304 16 21 guard_gadget_ptr:2288 336 16 15 gadget_ptr:22"
                        "04 368 48 23 create_gadget_func:2059 448 48 12 adj_map:2103 528 48 16 all_dir_map:2105";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::buildCellEntities;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = 61956;
  v6[536862722] = -234881024;
  v6[536862723] = 62194;
  v6[536862723] = 0x4000000;
  v6[536862724] = 62194;
  v6[536862724] = 0x4000000;
  v6[536862725] = 62194;
  v6[536862725] = 0x4000000;
  v6[536862726] = 62194;
  v6[536862726] = 0x4000000;
  v6[536862727] = 62194;
  v6[536862728] = 62194;
  v6[536862729] = 62194;
  v6[536862730] = 62194;
  v6[536862731] = 62194;
  v6[536862733] = -218959118;
  v6[536862735] = -219021312;
  v6[536862736] = 62194;
  v6[536862738] = -202116109;
  *(_DWORD *)(v4 + 64) = dungeon_weight_id;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v4 + 336));
  p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 336))->design_config.txt_config_mgr.activity_rogue_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
  {
    p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell->cell_id;
    __asan_report_load4(&cell->cell_id);
  }
  cell_id = cell->cell_id;
  if ( *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) )
  {
    p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell->dungeon_id;
    __asan_report_load4(&cell->dungeon_id);
  }
  cell_config_ptr = ActivityRogueExcelConfigMgr::findDungeonCellConfigByDungeonIdAndCellId(
                      p_activity_rogue_config_mgr,
                      cell->dungeon_id,
                      cell_id);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 336));
  if ( !cell_config_ptr )
  {
    common::milog::MiLogStream::create(
      &v97,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "buildCellEntities",
      2035);
    v9 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
           &v97,
           (const char (*)[37])"[ROGUE] cell_config_ptr is nullptr, ");
    common::milog::MiLogStream::operator<<<RogueCell,(RogueCell*)0>(v9, cell);
    common::milog::MiLogStream::~MiLogStream(&v97);
    v10 = -1;
    goto LABEL_158;
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v4 + 336));
  v11 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 336));
  dungeon_weight_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRoguelikeDungeonWeightExcelConfig(
                                &v11->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                *(_DWORD *)(v4 + 64));
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 336));
  if ( !dungeon_weight_config_ptr )
  {
    common::milog::MiLogStream::create(
      &v97,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "buildCellEntities",
      2042);
    v12 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
            &v97,
            (const char (*)[47])"[ROGUE] dungeon_weight_config_ptr is nullptr, ");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)(v4 + 64));
    common::milog::MiLogStream::~MiLogStream(&v97);
    v10 = -1;
    goto LABEL_158;
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v4 + 336));
  v13 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 336))->design_config.txt_config_mgr.activity_rogue_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->stage >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)dungeon_weight_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&dungeon_weight_config_ptr->stage >> 3)
                                                                             + 0x7FFF8000) )
  {
    __asan_report_load4(&dungeon_weight_config_ptr->stage);
  }
  stage_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueStageExcelConfig(
                       v13,
                       dungeon_weight_config_ptr->stage);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 336));
  if ( !stage_config_ptr )
  {
    common::milog::MiLogStream::create(
      &v97,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "buildCellEntities",
      2048);
    v14 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
            &v97,
            (const char (*)[47])"[ROGUE] stage_config_ptr is nullptr, stage_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &dungeon_weight_config_ptr->stage);
    common::milog::MiLogStream::~MiLogStream(&v97);
    v10 = -1;
    goto LABEL_158;
  }
  if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&cell->type);
  }
  if ( cell->type == ROGUE_CELL_TYPE_INIT || cell->type == ROGUE_CELL_TYPE_BOSS || cell->type == ROGUE_CELL_TYPE_CHEST )
  {
    common::milog::MiLogStream::create(
      &v97,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "buildCellEntities",
      2054);
    v15 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            &v97,
            (const char (*)[53])"[ROGUE] init and boss cell will not build entities, ");
    common::milog::MiLogStream::operator<<<RogueCell,(RogueCell*)0>(v15, cell);
    common::milog::MiLogStream::~MiLogStream(&v97);
    v10 = 0;
    goto LABEL_158;
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v4 + 336));
  p_revise_level_grow_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 336))->design_config.txt_config_mgr.revise_level_grow_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  InitWorldLevel = RoguelikeDungeonActivity::getInitWorldLevel(this->activity_);
  if ( *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)stage_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3)
                                                                    + 0x7FFF8000) )
  {
    __asan_report_load4(&stage_config_ptr->revise_level_id);
  }
  revise_level = ReviseLevelGrowExcelConfigMgr::findReviseLevel(
                   p_revise_level_grow_config_mgr,
                   stage_config_ptr->revise_level_id,
                   InitWorldLevel);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 336));
  std::shared_ptr<DungeonScene>::shared_ptr((std::shared_ptr<DungeonScene> *const)(v4 + 368), p_dungeon_scene_ptr);
  *(_QWORD *)(v4 + 384) = cell_config_ptr;
  *(_DWORD *)(v4 + 392) = revise_level;
  *(_QWORD *)(v4 + 400) = cell;
  *(_QWORD *)(v4 + 408) = this;
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v4 + 336));
  v18 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 336))->design_config.txt_config_mgr.activity_rogue_config_mgr;
  if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&cell->cell_id);
  }
  v19 = cell->cell_id;
  if ( *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&cell->dungeon_id);
  }
  ActivityRogueExcelConfigMgr::findCellAjdMap((RogueCellAdjMap *)(v4 + 448), v18, cell->dungeon_id, v19);
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 336));
  v20 = data::getRogueGadgetDirTypeEnumMap[abi:cxx11]();
  std::map<data::RogueGadgetDirType,std::pair<std::string,std::string>>::map(
    (std::map<data::RogueGadgetDirType,std::pair<std::string,std::string >> *const)(v4 + 528),
    v20);
  __for_range = (std::map<data::RogueGadgetDirType,std::pair<std::string,std::string >> *)(v4 + 528);
  __for_begin._M_node = std::map<data::RogueGadgetDirType,std::pair<std::string,std::string>>::begin((std::map<data::RogueGadgetDirType,std::pair<std::string,std::string >> *const)(v4 + 528))._M_node;
  __for_end._M_node = std::map<data::RogueGadgetDirType,std::pair<std::string,std::string>>::end((std::map<data::RogueGadgetDirType,std::pair<std::string,std::string >> *const)(v4 + 528))._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v89 = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,std::pair<std::string,std::string>>>::operator*(&__for_begin);
    dir = std::get<0ul,data::RogueGadgetDirType const,std::pair<std::string,std::string>>(v89);
    _ = (std::tuple_element<1,const std::pair<const data::RogueGadgetDirType,std::pair<std::string,std::string > > >::type *)std::get<1ul,data::RogueGadgetDirType const,std::pair<std::string,std::string>>(v89);
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v94);
    p_door_offset = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v94)->design_config.txt_config_mgr.activity_rogue_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)dir >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)dir & 7) + 3) >= *(_BYTE *)(((unsigned __int64)dir >> 3) + 0x7FFF8000) )
    {
      p_door_offset = (const ActivityRogueExcelConfigMgr *)dir;
      __asan_report_load4(dir);
    }
    v22 = *dir;
    if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->door_offset >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell_config_ptr + 108) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_config_ptr->door_offset >> 3)
                                                                      + 0x7FFF8000) )
    {
      p_door_offset = (const ActivityRogueExcelConfigMgr *)&cell_config_ptr->door_offset;
      __asan_report_load4(&cell_config_ptr->door_offset);
    }
    *(Vector3 *)(v4 + 176) = ActivityRogueExcelConfigMgr::getCellDoorPosition(
                               p_door_offset,
                               &cell_config_ptr->cell_center_pos,
                               (int)cell_config_ptr->door_offset,
                               v22);
    std::shared_ptr<Config>::~shared_ptr(&v94);
    v23 = *(float *)(v4 + 180);
    if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->door_delta_y >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell_config_ptr + 116) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_config_ptr->door_delta_y >> 3)
                                                                      + 0x7FFF8000) )
    {
      __asan_report_load4(&cell_config_ptr->door_delta_y);
    }
    *(float *)(v4 + 180) = cell_config_ptr->door_delta_y + v23;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v95);
    v24 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v95)->design_config.txt_config_mgr.activity_rogue_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)dir >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)dir & 7) + 3) >= *(_BYTE *)(((unsigned __int64)dir >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(dir);
    }
    GadgetRotByDir = (float)(int)ActivityRogueExcelConfigMgr::findGadgetRotByDir(v24, *dir);
    Vector3::Vector3((Vector3 *const)(v4 + 208), 0.0, GadgetRotByDir, 0.0);
    std::shared_ptr<Config>::~shared_ptr(&v95);
    *(std::map<data::RogueGadgetDirType,unsigned int>::iterator *)(v4 + 80) = std::map<data::RogueGadgetDirType,unsigned int>::find(
                                                                                (std::map<data::RogueGadgetDirType,unsigned int> *const)(v4 + 448),
                                                                                dir);
    __for_end_0._M_current = (int *)std::map<data::RogueGadgetDirType,unsigned int>::end((std::map<data::RogueGadgetDirType,unsigned int> *const)(v4 + 448))._M_node;
    if ( std::operator==(
           (const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::_Self *)(v4 + 80),
           (const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::_Self *)&__for_end_0) )
    {
      *(float *)(v4 + 212) = *(float *)(v4 + 212) + 180.0;
      RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
        (const RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 240),
        (data::RogueCreateGadgetType)(v4 + 368),
        ROGUE_GADGET_STATE_DOOR_OPEN,
        (Vector3 *)2,
        (Vector3 *)(v4 + 176));
      if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 240)) )
      {
        common::milog::MiLogStream::create(
          &v97,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "buildCellEntities",
          2119);
        v26 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                &v97,
                (const char (*)[36])"[ROGUE] create gadget failed, type:");
        val = ROGUE_GADGET_TYPE_DOOR;
        common::milog::MiLogStream::operator<<<data::RogueCreateGadgetType,(data::RogueCreateGadgetType*)0>(v26, &val);
        common::milog::MiLogStream::~MiLogStream(&v97);
      }
      else
      {
        v27 = std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::operator[](&cell->door_entity_map, dir);
        std::weak_ptr<Gadget>::operator=<Gadget>(v27, (const std::shared_ptr<Gadget> *)(v4 + 240));
      }
      std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 240));
      goto LABEL_83;
    }
    v28 = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> > *const)(v4 + 80));
    p_second = &v28->second;
    if ( *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)p_second & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_second >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(p_second);
    }
    adj_cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, v28->second);
    if ( !adj_cell_ptr )
    {
      common::milog::MiLogStream::create(
        &v97,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "buildCellEntities",
        2129);
      v30 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
              &v97,
              (const char (*)[37])"[ROGUE] adj cell not found, cell_id:");
      v31 = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> > *const)(v4 + 80));
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v30, &v31->second);
      common::milog::MiLogStream::~MiLogStream(&v97);
      goto LABEL_83;
    }
    adj_cell = adj_cell_ptr;
    std::shared_ptr<Gadget>::shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 272), 0LL);
    if ( *(_BYTE *)(((unsigned __int64)&adj_cell->type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)adj_cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&adj_cell->type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&adj_cell->type);
    }
    if ( adj_cell->type != ROGUE_CELL_TYPE_INIT )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell->type);
      }
      type = cell->type;
      if ( type != ROGUE_CELL_TYPE_CHEST )
      {
        if ( type > ROGUE_CELL_TYPE_CHEST )
          goto LABEL_74;
        if ( type != ROGUE_CELL_TYPE_SPRING )
        {
          if ( type > ROGUE_CELL_TYPE_SPRING )
            goto LABEL_74;
          if ( type != ROGUE_CELL_TYPE_STORE )
          {
            if ( type >= ROGUE_CELL_TYPE_STORE && (unsigned int)(type - 3) <= 1 )
            {
              if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4(&cell->state);
              }
              if ( cell->state == ROGUE_CELL_BATTLE || cell->state == ROGUE_CELL_SUCCESS )
              {
                is_close = 1;
LABEL_75:
                if ( is_close )
                  v33 = ROGUE_GADGET_STATE_DOOR_CLOSE;
                else
                  v33 = ROGUE_GADGET_STATE_DOOR_OPEN;
                door_state = v33;
                RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
                  (const RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 336),
                  (data::RogueCreateGadgetType)(v4 + 368),
                  ROGUE_GADGET_STATE_DOOR_OPEN,
                  (Vector3 *)(unsigned int)v33,
                  (Vector3 *)(v4 + 176));
                std::shared_ptr<Gadget>::operator=(
                  (std::shared_ptr<Gadget> *const)(v4 + 272),
                  (std::shared_ptr<Gadget> *)(v4 + 336));
                std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 336));
                goto LABEL_79;
              }
              if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4(&cell->state);
              }
              if ( cell->state )
              {
                is_close = 0;
                goto LABEL_75;
              }
LABEL_70:
              is_close = !RogueCell::isCellFinish(adj_cell);
              goto LABEL_75;
            }
LABEL_74:
            is_close = 0;
            goto LABEL_75;
          }
        }
      }
      if ( RogueCell::isCellFinish(cell) )
      {
        is_close = 0;
        goto LABEL_75;
      }
      goto LABEL_70;
    }
    RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
      (const RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 304),
      (data::RogueCreateGadgetType)(v4 + 368),
      ROGUE_GADGET_STATE_DOOR_OPEN,
      (Vector3 *)1,
      (Vector3 *)(v4 + 176));
    std::shared_ptr<Gadget>::operator=(
      (std::shared_ptr<Gadget> *const)(v4 + 272),
      (std::shared_ptr<Gadget> *)(v4 + 304));
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 304));
LABEL_79:
    if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 272)) )
    {
      common::milog::MiLogStream::create(
        &v97,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "buildCellEntities",
        2187);
      v34 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
              &v97,
              (const char (*)[36])"[ROGUE] create gadget failed, type:");
      val = ROGUE_GADGET_TYPE_DOOR;
      common::milog::MiLogStream::operator<<<data::RogueCreateGadgetType,(data::RogueCreateGadgetType*)0>(v34, &val);
      common::milog::MiLogStream::~MiLogStream(&v97);
    }
    else
    {
      v35 = std::map<data::RogueGadgetDirType,std::weak_ptr<Gadget>>::operator[](&cell->door_entity_map, dir);
      std::weak_ptr<Gadget>::operator=<Gadget>(v35, (const std::shared_ptr<Gadget> *)(v4 + 272));
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 272));
LABEL_83:
    std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,std::pair<std::string,std::string>>>::operator++(&__for_begin);
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
  effect_cell_param = RoguelikeMiscMgr::getRoguelikeEfffectCellParam(misc_mgr);
  Vector3::Vector3((Vector3 *const)(v4 + 112), &cell_config_ptr->cell_center_pos);
  Vector3::Vector3((Vector3 *const)(v4 + 144), 0.0, 0.0, 0.0);
  if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&cell->state);
  }
  state = cell->state;
  if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&cell->type);
  }
  rogue_gadget_state = RogueLikeDungeonRuntimeMgr::getCellGadgetStateByCellState(cell->type, state);
  if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&cell->type);
  }
  v37 = cell->type;
  if ( v37 == ROGUE_CELL_TYPE_SPRING )
  {
    spring_gadget_state = rogue_gadget_state;
    common::milog::MiLogStream::create(
      &v97,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "buildCellEntities",
      2227);
    v42 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
            &v97,
            (const char (*)[23])"[ROGUE] is_ban_spring:");
    if ( *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_spring >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)effect_cell_param + 58) & 7) >= *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_spring >> 3)
                                                                     + 0x7FFF8000) )
    {
      __asan_report_load1(&effect_cell_param->is_ban_spring);
    }
    common::milog::MiLogStream::operator<<(v42, effect_cell_param->is_ban_spring);
    common::milog::MiLogStream::~MiLogStream(&v97);
    if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&cell->state);
    }
    if ( cell->state != ROGUE_CELL_FINISH )
    {
      if ( *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_spring >> 3) + 0x7FFF8000) != 0
        && (((unsigned __int8)effect_cell_param + 58) & 7) >= *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_spring >> 3)
                                                                       + 0x7FFF8000) )
      {
        __asan_report_load1(&effect_cell_param->is_ban_spring);
      }
      if ( effect_cell_param->is_ban_spring )
        spring_gadget_state = ROGUE_GADGET_STATE_OPERATOR_FORBID;
    }
    RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
      (const RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 304),
      (data::RogueCreateGadgetType)(v4 + 368),
      ROGUE_GADGET_STATE_OPERATOR_IN_CHALLENGE,
      (Vector3 *)(unsigned int)spring_gadget_state,
      (Vector3 *)(v4 + 112));
    if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 304)) )
    {
      common::milog::MiLogStream::create(
        &v97,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "buildCellEntities",
        2235);
      v43 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
              &v97,
              (const char (*)[41])"[ROGUE] create_gadget_func failed, type:");
      val = ROGUE_GADGET_TYPE_SPRING_OPERATOR_REVEAL;
      common::milog::MiLogStream::operator<<<data::RogueCreateGadgetType,(data::RogueCreateGadgetType*)0>(v43, &val);
      common::milog::MiLogStream::~MiLogStream(&v97);
    }
    else
    {
      val = ROGUE_GADGET_TYPE_SPRING_OPERATOR_REVEAL;
      v44 = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::operator[](&cell->operator_gadget_map, &val);
      std::weak_ptr<Gadget>::operator=<Gadget>(v44, (const std::shared_ptr<Gadget> *)(v4 + 304));
      RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
        (const RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 336),
        (data::RogueCreateGadgetType)(v4 + 368),
        ROGUE_GADGET_STATE_OPERATOR_AFTER_USE,
        (Vector3 *)(unsigned int)rogue_gadget_state,
        (Vector3 *)(v4 + 112));
      if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 336)) )
      {
        common::milog::MiLogStream::create(
          &v97,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "buildCellEntities",
          2242);
        v45 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                &v97,
                (const char (*)[41])"[ROGUE] create_gadget_func failed, type:");
        val = ROGUE_GADGET_TYPE_SPRING_OPERATOR_SWITCH;
        common::milog::MiLogStream::operator<<<data::RogueCreateGadgetType,(data::RogueCreateGadgetType*)0>(v45, &val);
        common::milog::MiLogStream::~MiLogStream(&v97);
      }
      else
      {
        val = ROGUE_GADGET_TYPE_SPRING_OPERATOR_SWITCH;
        v46 = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::operator[](&cell->operator_gadget_map, &val);
        std::weak_ptr<Gadget>::operator=<Gadget>(v46, (const std::shared_ptr<Gadget> *)(v4 + 336));
      }
      std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 336));
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 304));
    goto LABEL_124;
  }
  if ( v37 > ROGUE_CELL_TYPE_SPRING )
    goto LABEL_123;
  switch ( v37 )
  {
    case ROGUE_CELL_TYPE_NORMAL:
      RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
        (const RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 336),
        (data::RogueCreateGadgetType)(v4 + 368),
        ROGUE_GADGET_STATE_DOOR_CLOSE,
        (Vector3 *)(unsigned int)rogue_gadget_state,
        (Vector3 *)(v4 + 112));
      if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 336)) )
      {
        common::milog::MiLogStream::create(
          &v97,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "buildCellEntities",
          2218);
        v40 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                &v97,
                (const char (*)[41])"[ROGUE] create_gadget_func failed, type:");
        val = ROGUE_GADGET_TYPE_NORMAL_OPERATOR;
        common::milog::MiLogStream::operator<<<data::RogueCreateGadgetType,(data::RogueCreateGadgetType*)0>(v40, &val);
        common::milog::MiLogStream::~MiLogStream(&v97);
      }
      else
      {
        val = ROGUE_GADGET_TYPE_NORMAL_OPERATOR;
        v41 = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::operator[](&cell->operator_gadget_map, &val);
        std::weak_ptr<Gadget>::operator=<Gadget>(v41, (const std::shared_ptr<Gadget> *)(v4 + 336));
      }
      goto LABEL_122;
    case ROGUE_CELL_TYPE_STORE:
      RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
        (const RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 336),
        (data::RogueCreateGadgetType)(v4 + 368),
        ROGUE_GADGET_STATE_OPERATOR_FORBID,
        (Vector3 *)(unsigned int)rogue_gadget_state,
        (Vector3 *)(v4 + 112));
      if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 336)) )
      {
        common::milog::MiLogStream::create(
          &v97,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "buildCellEntities",
          2253);
        v47 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                &v97,
                (const char (*)[41])"[ROGUE] create_gadget_func failed, type:");
        val = ROGUE_GADGET_TYPE_SPRING_STORE;
        common::milog::MiLogStream::operator<<<data::RogueCreateGadgetType,(data::RogueCreateGadgetType*)0>(v47, &val);
        common::milog::MiLogStream::~MiLogStream(&v97);
      }
      else
      {
        val = ROGUE_GADGET_TYPE_SPRING_STORE;
        v48 = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::operator[](&cell->operator_gadget_map, &val);
        std::weak_ptr<Gadget>::operator=<Gadget>(v48, (const std::shared_ptr<Gadget> *)(v4 + 336));
      }
LABEL_122:
      std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 336));
      goto LABEL_124;
    case ROGUE_CELL_TYPE_ELITE:
      RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
        (const RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 336),
        (data::RogueCreateGadgetType)(v4 + 368),
        ROGUE_GADGET_STATE_OPERATOR_DEFAULT,
        (Vector3 *)(unsigned int)rogue_gadget_state,
        (Vector3 *)(v4 + 112));
      if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 336)) )
      {
        common::milog::MiLogStream::create(
          &v97,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "buildCellEntities",
          2207);
        v38 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                &v97,
                (const char (*)[41])"[ROGUE] create_gadget_func failed, type:");
        val = ROGUE_GADGET_TYPE_ELITE_OPERATOR;
        common::milog::MiLogStream::operator<<<data::RogueCreateGadgetType,(data::RogueCreateGadgetType*)0>(v38, &val);
        common::milog::MiLogStream::~MiLogStream(&v97);
      }
      else
      {
        val = ROGUE_GADGET_TYPE_ELITE_OPERATOR;
        v39 = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::operator[](&cell->operator_gadget_map, &val);
        std::weak_ptr<Gadget>::operator=<Gadget>(v39, (const std::shared_ptr<Gadget> *)(v4 + 336));
      }
      goto LABEL_122;
  }
LABEL_123:
  common::milog::MiLogStream::create(
    &v97,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
    "buildCellEntities",
    2261);
  common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
    &v97,
    (const char (*)[42])"[ROGUE] other cell cannot create operator");
  common::milog::MiLogStream::~MiLogStream(&v97);
LABEL_124:
  if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&cell->type);
  }
  if ( cell->type == ROGUE_CELL_TYPE_ELITE || cell->type == ROGUE_CELL_TYPE_NORMAL )
  {
    __for_range_0 = &cell->guard_gadget_group_point_vec;
    *(std::vector<int>::iterator *)(v4 + 80) = std::vector<int>::begin(&cell->guard_gadget_group_point_vec);
    __for_end_0._M_current = std::vector<int>::end(__for_range_0)._M_current;
    while ( __gnu_cxx::operator!=<int *,std::vector<int>>(
              (const __gnu_cxx::__normal_iterator<int*,std::vector<int> > *)(v4 + 80),
              &__for_end_0) )
    {
      v49 = __gnu_cxx::__normal_iterator<int *,std::vector<int>>::operator*((const __gnu_cxx::__normal_iterator<int*,std::vector<int> > *const)(v4 + 80));
      v50 = v49;
      if ( *(_BYTE *)(((unsigned __int64)v49 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v49 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v49 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v49);
      }
      *(_DWORD *)(v4 + 48) = *v50;
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)(v4 + 336));
      p_lua_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 336))->design_config.lua_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&cell_config_ptr->group_id);
      }
      group_script_config_ptr = LuaConfigMgr::findGroupScriptConfig(p_lua_config_mgr, cell_config_ptr->group_id);
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 336));
      if ( group_script_config_ptr )
      {
        point_config_ptr = GroupScriptConfig::findPointConfig(group_script_config_ptr, *(_DWORD *)(v4 + 48));
        if ( point_config_ptr )
        {
          if ( (((unsigned __int8)point_config_ptr + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&point_config_ptr->pos >> 3)
                                                                         + 0x7FFF8000)
            && *(_BYTE *)(((unsigned __int64)&point_config_ptr->pos >> 3) + 0x7FFF8000) != 0
            || *(_BYTE *)((((unsigned __int64)&point_config_ptr->pos.z + 3) >> 3) + 0x7FFF8000) != 0
            && (((unsigned __int8)point_config_ptr + 15) & 7) >= *(_BYTE *)((((unsigned __int64)&point_config_ptr->pos.z
                                                                            + 3) >> 3)
                                                                          + 0x7FFF8000) )
          {
            __asan_report_load_n(&point_config_ptr->pos, 12LL);
          }
          *(Vector3 *)(v4 + 176) = point_config_ptr->pos;
          if ( *(char *)(((unsigned __int64)&point_config_ptr->rot >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)((((unsigned __int64)&point_config_ptr->rot.z + 3) >> 3) + 0x7FFF8000) != 0
            && (((unsigned __int8)point_config_ptr + 27) & 7) >= *(_BYTE *)((((unsigned __int64)&point_config_ptr->rot.z
                                                                            + 3) >> 3)
                                                                          + 0x7FFF8000) )
          {
            __asan_report_load_n(&point_config_ptr->rot, 12LL);
          }
          *(Vector3 *)(v4 + 208) = point_config_ptr->rot;
          if ( *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_guardian >> 3) + 0x7FFF8000) != 0
            && (((unsigned __int8)effect_cell_param + 57) & 7) >= *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_guardian >> 3)
                                                                           + 0x7FFF8000) )
          {
            __asan_report_load1(&effect_cell_param->is_ban_guardian);
          }
          if ( effect_cell_param->is_ban_guardian )
            rogue_gadget_state = ROGUE_GADGET_STATE_OPERATOR_FORBID;
          RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
            (const RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 304),
            (data::RogueCreateGadgetType)(v4 + 368),
            (data::RogueGadgetStateType)12,
            (Vector3 *)(unsigned int)rogue_gadget_state,
            (Vector3 *)(v4 + 176));
          if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v4 + 304)) )
          {
            common::milog::MiLogStream::create(
              &v97,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "buildCellEntities",
              2291);
            v54 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                    &v97,
                    (const char (*)[41])"[ROGUE] create_gadget_func failed, type:");
            val = ROGUE_GADGET_TYPE_GUARD;
            common::milog::MiLogStream::operator<<<data::RogueCreateGadgetType,(data::RogueCreateGadgetType*)0>(
              v54,
              &val);
            common::milog::MiLogStream::~MiLogStream(&v97);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&cell->cell_id);
            }
            v55 = cell->cell_id;
            v56 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 304));
            val = Entity::getEntityId((const Entity *const)v56);
            p_val = &val;
            v58 = std::unordered_map<unsigned int,unsigned int>::operator[](
                    &this->guard_entity_id_2_cell_id_map_,
                    (std::unordered_map<unsigned int,unsigned int>::key_type *)&val);
            v59 = v58;
            v60 = *(_BYTE *)(((unsigned __int64)v58 >> 3) + 0x7FFF8000);
            if ( v60 != 0 && (char)(((unsigned __int8)v58 & 7) + 3) >= v60 )
            {
              LOBYTE(p_val) = v60 != 0;
              __asan_report_store4(v58, p_val, v58);
            }
            *v59 = v55;
            v61 = *(_DWORD *)(v4 + 48);
            v62 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 304));
            val = Entity::getEntityId((const Entity *const)v62);
            v63 = &val;
            v64 = std::unordered_map<unsigned int,int>::operator[](
                    &cell->guard_entity_id_2_point_id_map,
                    (std::unordered_map<unsigned int,int>::key_type *)&val);
            v65 = v64;
            v66 = *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000);
            if ( v66 != 0 && (char)(((unsigned __int8)v64 & 7) + 3) >= v66 )
            {
              LOBYTE(v63) = v66 != 0;
              __asan_report_store4(v64, v63, v64);
            }
            *v65 = v61;
            std::weak_ptr<Gadget>::weak_ptr<Gadget,void>(
              (std::weak_ptr<Gadget> *const)(v4 + 336),
              (const std::shared_ptr<Gadget> *)(v4 + 304));
            std::vector<std::weak_ptr<Gadget>>::push_back(
              &cell->guard_gadget_wtr_vec,
              (std::vector<std::weak_ptr<Gadget>>::value_type *)(v4 + 336));
            std::weak_ptr<Gadget>::~weak_ptr((std::weak_ptr<Gadget> *const)(v4 + 336));
          }
          std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v4 + 304));
        }
        else
        {
          common::milog::MiLogStream::create(
            &v97,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "buildCellEntities",
            2279);
          v53 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                  &v97,
                  (const char (*)[53])"[ROGUE] point_config_ptr is nullptr, guard_point_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v53, (const unsigned int *)(v4 + 48));
          common::milog::MiLogStream::~MiLogStream(&v97);
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v96,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "buildCellEntities",
          2273);
        v52 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
                &v96,
                (const char (*)[54])"[ROGUE] group_script_config_ptr is nullptr, group_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v52, &cell_config_ptr->group_id);
        common::milog::MiLogStream::~MiLogStream(&v96);
      }
      __gnu_cxx::__normal_iterator<int *,std::vector<int>>::operator++((__gnu_cxx::__normal_iterator<int*,std::vector<int> > *const)(v4 + 80));
    }
  }
  v10 = 0;
  std::map<data::RogueGadgetDirType,std::pair<std::string,std::string>>::~map((std::map<data::RogueGadgetDirType,std::pair<std::string,std::string >> *const)(v4 + 528));
  std::map<data::RogueGadgetDirType,unsigned int>::~map((std::map<data::RogueGadgetDirType,unsigned int> *const)(v4 + 448));
  RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::~Vector3((RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const)(v4 + 368));
LABEL_158:
  result = v10;
  if ( v98 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8034) = 0;
    *(_QWORD *)((v4 >> 3) + 0x7FFF803C) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8048) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8048) = -168430091;
  }
  return result;
};

// Line 2059: range 000000001593A75C-000000001593B112
std::shared_ptr<Gadget> *__fastcall RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator()(
        std::shared_ptr<Gadget> *__closure,
        __int64 gadget_type,
        data::RogueGadgetStateType state_type,
        Vector3 *pos,
        unsigned __int64 rot,
        unsigned __int64 a6)
{
  unsigned __int64 v6; // r13
  __int64 v7; // rax
  _DWORD *v8; // r12
  char v9; // al
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  common::milog::MiLogStream *v11; // rax
  Scene *v12; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  __int64 v14; // rax
  __int64 v15; // rax
  __int64 v16; // rax
  __int64 v17; // rdx
  __int64 v18; // rax
  common::milog::MiLogStream *v19; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // r14
  unsigned __int64 v22; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  __int64 (__fastcall *v26)(std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, VisionContext *); // [rsp+0h] [rbp-4B0h]
  data::RogueGadgetStateType state_typea; // [rsp+18h] [rbp-498h]
  const data::RogueGadgetExcelConfig *rogue_gadget_config_ptr; // [rsp+38h] [rbp-478h]
  common::milog::MiLogStream v32; // [rsp+40h] [rbp-470h] BYREF
  char v33[1104]; // [rsp+60h] [rbp-450h] BYREF

  state_typea = (int)pos;
  v6 = (unsigned __int64)v33;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v7 = __asan_stack_malloc_5(1056LL);
    if ( v7 )
      v6 = v7;
  }
  *(_QWORD *)v6 = 1102416563LL;
  *(_QWORD *)(v6 + 8) = "4 48 4 8 ret:2094 64 4 16 gadget_type:2059 80 16 15 gadget_ptr:2087 112 816 17 gadget_param:2071";
  *(_QWORD *)(v6 + 16) = RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::operator();
  v8 = (_DWORD *)(v6 >> 3);
  v8[536862720] = -235802127;
  v8[536862721] = -234556943;
  v8[536862722] = 61956;
  v8[536862723] = 62194;
  v8[536862749] = -202116109;
  v8[536862750] = -202116109;
  v8[536862751] = -202116109;
  v8[536862752] = -202116109;
  *(_DWORD *)(v6 + 64) = state_type;
  if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)gadget_type, 0LL) )
    goto LABEL_8;
  if ( *(_BYTE *)(((unsigned __int64)(gadget_type + 16) >> 3) + 0x7FFF8000) )
    __asan_report_load8(gadget_type + 16);
  if ( *(_QWORD *)(gadget_type + 16) )
    v9 = 0;
  else
LABEL_8:
    v9 = 1;
  if ( v9 )
  {
    std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v6 + 80));
    v10 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v6 + 80));
    rogue_gadget_config_ptr = ActivityRogueExcelConfigMgr::findGadgetConfigByType(
                                &v10->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                (data::RogueCreateGadgetType)*(_DWORD *)(v6 + 64));
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v6 + 80));
    if ( rogue_gadget_config_ptr )
    {
      GadgetParam::GadgetParam((GadgetParam *const)(v6 + 112));
      if ( *(_BYTE *)(((unsigned __int64)&rogue_gadget_config_ptr->gadget_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&rogue_gadget_config_ptr->gadget_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&rogue_gadget_config_ptr->gadget_id);
      }
      *(_DWORD *)(v6 + 112) = rogue_gadget_config_ptr->gadget_id;
      v12 = (Scene *)std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)gadget_type);
      *(_DWORD *)(v6 + 120) = Scene::genNewEntityId(v12, PROT_ENTITY_GADGET);
      if ( (char)(rot & 7) >= *(_BYTE *)((rot >> 3) + 0x7FFF8000) && *(_BYTE *)((rot >> 3) + 0x7FFF8000) != 0
        || *(_BYTE *)(((rot + 11) >> 3) + 0x7FFF8000) != 0
        && (char)((rot + 11) & 7) >= *(_BYTE *)(((rot + 11) >> 3) + 0x7FFF8000) )
      {
        __asan_report_load_n(rot, 12LL);
      }
      *(_QWORD *)(v6 + 124) = *(_QWORD *)rot;
      *(_DWORD *)(v6 + 132) = *(_DWORD *)(rot + 8);
      if ( (char)(a6 & 7) >= *(_BYTE *)((a6 >> 3) + 0x7FFF8000) && *(_BYTE *)((a6 >> 3) + 0x7FFF8000) != 0
        || *(_BYTE *)(((a6 + 11) >> 3) + 0x7FFF8000) != 0
        && (char)((a6 + 11) & 7) >= *(_BYTE *)(((a6 + 11) >> 3) + 0x7FFF8000) )
      {
        __asan_report_load_n(a6, 12LL);
      }
      *(_QWORD *)(v6 + 136) = *(_QWORD *)a6;
      *(_DWORD *)(v6 + 144) = *(_DWORD *)(a6 + 8);
      *(_DWORD *)(v6 + 204) = 0;
      if ( *(_BYTE *)(((unsigned __int64)(gadget_type + 24) >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)(gadget_type + 24) >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(gadget_type + 24);
      }
      *(_DWORD *)(v6 + 148) = *(_DWORD *)(gadget_type + 24) + 1;
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)(v6 + 80));
      v13 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v6 + 80));
      *(_DWORD *)(v6 + 164) = ActivityRogueExcelConfigMgr::findGadgetStateByStateType(
                                &v13->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                *(data::RogueCreateGadgetType *)(v6 + 64),
                                state_typea);
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v6 + 80));
      if ( RogueLikeDungeonRuntimeMgr::isRogueGadgetOperatorType(*(data::RogueCreateGadgetType *)(v6 + 64)) )
      {
        if ( *(_BYTE *)(((unsigned __int64)(gadget_type + 32) >> 3) + 0x7FFF8000) )
          __asan_report_load8(gadget_type + 32);
        v14 = *(_QWORD *)(gadget_type + 32);
        if ( *(_BYTE *)(((unsigned __int64)(v14 + 8) >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)(v14 + 8) >> 3) + 0x7FFF8000) <= 3 )
        {
          v14 = __asan_report_load4(v14 + 8);
        }
        *(_DWORD *)(v6 + 840) = *(_DWORD *)(v14 + 8);
        if ( *(_BYTE *)(((unsigned __int64)(gadget_type + 16) >> 3) + 0x7FFF8000) )
          __asan_report_load8(gadget_type + 16);
        v15 = *(_QWORD *)(gadget_type + 16);
        if ( *(_BYTE *)(((unsigned __int64)(v15 + 8) >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)(v15 + 8) >> 3) + 0x7FFF8000) <= 3 )
        {
          v15 = __asan_report_load4(v15 + 8);
        }
        *(_DWORD *)(v6 + 836) = *(_DWORD *)(v15 + 8);
        v16 = *(_QWORD *)(gadget_type + 32);
        if ( *(_BYTE *)(((unsigned __int64)(v16 + 16) >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)(v16 + 16) >> 3) + 0x7FFF8000) <= 3 )
        {
          v16 = __asan_report_load4(v16 + 16);
        }
        *(_DWORD *)(v6 + 844) = *(_DWORD *)(v16 + 16);
        v17 = *(_QWORD *)(gadget_type + 32);
        if ( *(_BYTE *)(((unsigned __int64)(v17 + 20) >> 3) + 0x7FFF8000) != 0
          && (char)(((v17 + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)(v17 + 20) >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v17 + 20);
        }
        *(_DWORD *)(v6 + 848) = *(_DWORD *)(v17 + 20);
        if ( *(_BYTE *)(((unsigned __int64)(gadget_type + 40) >> 3) + 0x7FFF8000) )
          __asan_report_load8(gadget_type + 40);
        v18 = *(_QWORD *)(gadget_type + 40);
        if ( *(_BYTE *)(((unsigned __int64)(v18 + 24) >> 3) + 0x7FFF8000) )
          v18 = __asan_report_load8(v18 + 24);
        *(_DWORD *)(v6 + 852) = Player::getUid(*(const Player *const *)(v18 + 24));
      }
      EntityMgr::createGadget((const GadgetParam *)(v6 + 80));
      if ( std::operator==<Gadget>((const std::shared_ptr<Gadget> *)(v6 + 80), 0LL) )
      {
        common::milog::MiLogStream::create(
          &v32,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "operator()",
          2090);
        v19 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                &v32,
                (const char (*)[46])"[ROGUE] gadget_ptr create failed. gadget_id: ");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, &rogue_gadget_config_ptr->gadget_id);
        common::milog::MiLogStream::~MiLogStream(&v32);
        std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
      }
      else
      {
        v20 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v6 + 80));
        v21 = v20;
        if ( *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v20);
        v22 = *(_QWORD *)v21->baseclass_0 + 56LL;
        if ( *(_BYTE *)((v22 >> 3) + 0x7FFF8000) )
          v22 = __asan_report_load8(*(_QWORD *)v21->baseclass_0 + 56LL);
        v26 = *(__int64 (__fastcall **)(std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, VisionContext *))v22;
        v23 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)gadget_type);
        *(_DWORD *)(v6 + 48) = v26(v21, v23, &VisionContext::meet_context);
        if ( *(_DWORD *)(v6 + 48) )
        {
          common::milog::MiLogStream::create(
            &v32,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "operator()",
            2097);
          v24 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                  &v32,
                  (const char (*)[43])"[ROGUE] gadget_ptr enterScene failed, ret:");
          common::milog::MiLogStream::operator<<<int,(int *)0>(v24, (const int *)(v6 + 48));
          common::milog::MiLogStream::~MiLogStream(&v32);
          std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
        }
        else
        {
          std::shared_ptr<Gadget>::shared_ptr(__closure, (std::shared_ptr<Gadget> *)(v6 + 80));
        }
      }
      std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v6 + 80));
      GadgetParam::~GadgetParam((GadgetParam *const)(v6 + 112));
    }
    else
    {
      common::milog::MiLogStream::create(
        &v32,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "operator()",
        2068);
      v11 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
              &v32,
              (const char (*)[39])"[ROGUE] gadget config not found, type:");
      common::milog::MiLogStream::operator<<<data::RogueCreateGadgetType,(data::RogueCreateGadgetType*)0>(
        v11,
        (const data::RogueCreateGadgetType *)(v6 + 64));
      common::milog::MiLogStream::~MiLogStream(&v32);
      std::shared_ptr<Gadget>::shared_ptr(__closure, 0LL);
    }
  }
  if ( v33 == (char *)v6 )
  {
    *(_QWORD *)((v6 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v6 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v6 >> 3) + 0x7FFF8074) = 0LL;
    *(_QWORD *)((v6 >> 3) + 0x7FFF807C) = 0LL;
  }
  else
  {
    *(_QWORD *)v6 = 1172321806LL;
    __asan_stack_free_5(v6, 1056LL, v33);
  }
  return __closure;
};

// Line 2059: range 000000001593B114-000000001593B12E
void __cdecl RogueLikeDungeonRuntimeMgr::buildCellEntities(unsigned int,std::shared_ptr<DungeonScene>,RogueCell &)::{lambda(data::RogueCreateGadgetType,data::RogueGadgetStateType,Vector3 &,Vector3 &)#1}::~Vector3(
        RogueLikeDungeonRuntimeMgr::buildCellEntities::<lambda(data::RogueCreateGadgetType, data::RogueGadgetStateType, Vector3&, Vector3&)> *const this)
{
  std::shared_ptr<DungeonScene>::~shared_ptr(&this->__dungeon_scene_ptr);
};

// Line 2304: range 000000001593D64C-000000001593D79F
RogueCell *__fastcall RogueLikeDungeonRuntimeMgr::findCell(RogueLikeDungeonRuntimeMgr *const this, uint32_t cell_id)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r12
  RogueCell *result; // rax
  std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Self __y; // [rsp+18h] [rbp-88h] BYREF
  char v7[128]; // [rsp+20h] [rbp-80h] BYREF

  v2 = (unsigned __int64)v7;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 12 cell_id:2303 64 8 9 iter:2305";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::findCell;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -202116352;
  *(_DWORD *)(v2 + 48) = cell_id;
  *(std::map<unsigned int,RogueCell>::iterator *)(v2 + 64) = std::map<unsigned int,RogueCell>::find(
                                                               &this->rogue_cell_map_,
                                                               (const std::map<unsigned int,RogueCell>::key_type *)(v2 + 48));
  __y._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
  if ( std::operator==((const std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Self *)(v2 + 64), &__y) )
    result = 0LL;
  else
    result = &std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator->((const std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> > *const)(v2 + 64))->second;
  if ( v7 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2314: range 000000001593D7A0-000000001593D7BF
bool __cdecl RogueLikeDungeonRuntimeMgr::isRogueGadgetOperatorType(data::RogueCreateGadgetType gadget_type)
{
  return (unsigned int)(gadget_type - 2) <= 5;
};

// Line 2331: range 000000001593D7C0-000000001593E6DE
void __cdecl RogueLikeDungeonRuntimeMgr::onDungeonSettle(
        RogueLikeDungeonRuntimeMgr *const this,
        DungeonScene *dungeon_scene,
        proto::DungeonSettleNotify *notify)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  bool v6; // r14
  uint32_t v7; // eax
  int v8; // r14d
  uint32_t *p_cur_level; // rsi
  std::map<unsigned int,unsigned int>::mapped_type *v10; // rax
  _DWORD *v11; // rdx
  char v12; // cl
  unsigned __int64 v13; // rax
  common::milog::MiLogStream *v14; // r14
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rax
  PlayerBasicComp *BasicComp; // rax
  __int64 v18; // rsi
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  unsigned __int64 Position; // rax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  unsigned __int64 Rotation; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v24; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v25; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v26; // rcx
  Player *player; // r14
  RoguelikeDungeonActivity *activity; // rdi
  uint32_t v29; // ecx
  uint32_t v30; // edx
  __int64 v31; // rsi
  __int64 v32; // rdx
  RoguelikeDungeonActivity *v33; // rdi
  uint32_t v34; // ecx
  uint32_t v35; // edx
  __int64 v36; // rsi
  __int64 v37; // rdx
  std::string v38; // [rsp+0h] [rbp-180h]
  proto::DungeonSettleNotify *const notifya; // [rsp+8h] [rbp-178h]
  RogueLikeDungeonRuntimeMgr *thisa; // [rsp+18h] [rbp-168h]
  bool is_win; // [rsp+2Bh] [rbp-155h]
  DungeonResult val; // [rsp+2Ch] [rbp-154h] BYREF
  uint32_t begin_scene_time; // [rsp+30h] [rbp-150h]
  uint32_t settle_scene_time; // [rsp+34h] [rbp-14Ch]
  std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::_Self __y; // [rsp+38h] [rbp-148h] BYREF
  RogueStageData *stage_ptr; // [rsp+40h] [rbp-140h]
  proto::RoguelikeDungeonSettleInfo *settle_info; // [rsp+48h] [rbp-138h]
  std::shared_ptr<google::protobuf::Message> p_body_ptr; // [rsp+50h] [rbp-130h] BYREF
  std::shared_ptr<DungeonScene> __a; // [rsp+60h] [rbp-120h] BYREF
  common::milog::MiLogStream v50; // [rsp+70h] [rbp-110h] BYREF
  char v51[240]; // [rsp+90h] [rbp-F0h] BYREF

  *(&v38._anon_0._M_allocated_capacity + 1) = (std::string::size_type)this;
  v38._anon_0._M_allocated_capacity = (std::string::size_type)dungeon_scene;
  v38._M_string_length = (std::string::size_type)notify;
  v3 = (unsigned __int64)v51;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "6 32 1 23 log_context_holder:2367 48 4 14 time_cost:2344 64 8 9 iter:2348 96 16 20 cur_dungeon_p"
                        "tr:2332 128 16 15 avatar_ptr:2370 160 16 12 log_ptr:2379";
  *(_QWORD *)(v3 + 16) = RogueLikeDungeonRuntimeMgr::onDungeonSettle;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = -218959360;
  v5[536862723] = -219021312;
  v5[536862724] = -219021312;
  v5[536862725] = -202178560;
  std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v3 + 96));
  if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v3 + 96)) )
  {
    common::milog::MiLogStream::create(
      &v50,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onDungeonSettle",
      2335);
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
      &v50,
      (const char (*)[37])"[ROGUE] cur dungeon scene is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v50);
  }
  toThisPtr<DungeonScene>((DungeonScene *)&__a);
  v6 = std::operator!=<DungeonScene,DungeonScene>(&__a, (const std::shared_ptr<DungeonScene> *)(v3 + 96));
  std::shared_ptr<DungeonScene>::~shared_ptr(&__a);
  if ( v6 )
  {
    common::milog::MiLogStream::create(
      &v50,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onDungeonSettle",
      2339);
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      &v50,
      (const char (*)[29])"[ROGUE] not in dungeon level");
    common::milog::MiLogStream::~MiLogStream(&v50);
  }
  else
  {
    begin_scene_time = DungeonScene::getDungeonBeginSceneTime(dungeon_scene);
    settle_scene_time = DungeonScene::getDungeonSettleSceneTime(dungeon_scene);
    if ( settle_scene_time <= begin_scene_time )
      v7 = 0;
    else
      v7 = settle_scene_time - begin_scene_time;
    *(_DWORD *)(v3 + 48) = v7;
    stage_ptr = RogueLikeDungeonRuntimeMgr::getStage(this);
    if ( stage_ptr )
    {
      *(std::map<unsigned int,unsigned int>::iterator *)(v3 + 64) = std::map<unsigned int,unsigned int>::find(
                                                                      &stage_ptr->level_time_cost_map,
                                                                      &this->cur_level_);
      __y._M_node = std::map<unsigned int,unsigned int>::end(&stage_ptr->level_time_cost_map)._M_node;
      if ( std::operator==(
             (const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)(v3 + 64),
             &__y) )
      {
        v8 = *(_DWORD *)(v3 + 48);
        p_cur_level = &this->cur_level_;
        v10 = std::map<unsigned int,unsigned int>::operator[](&stage_ptr->level_time_cost_map, &this->cur_level_);
        v11 = v10;
        v12 = *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000);
        if ( v12 != 0 && (char)(((unsigned __int8)v10 & 7) + 3) >= v12 )
        {
          LOBYTE(p_cur_level) = v12 != 0;
          __asan_report_store4(v10, p_cur_level, v10);
        }
        *v11 = v8;
      }
      else
      {
        v13 = (unsigned __int64)std::map<unsigned int,unsigned int>::operator[](
                                  &stage_ptr->level_time_cost_map,
                                  &this->cur_level_);
        if ( *(_BYTE *)((v13 >> 3) + 0x7FFF8000) != 0 && (char)((v13 & 7) + 3) >= *(_BYTE *)((v13 >> 3) + 0x7FFF8000) )
          v13 = __asan_report_load4(v13);
        *(_DWORD *)v13 += *(_DWORD *)(v3 + 48);
      }
    }
    settle_info = proto::DungeonSettleNotify::mutable_roguelike_dungeon_settle_info((proto::DungeonSettleNotify *const)v38._M_string_length);
    if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->cur_level_);
    }
    proto::RoguelikeDungeonSettleInfo::set_cur_level(settle_info, this->cur_level_);
    if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->stage_id_);
    }
    proto::RoguelikeDungeonSettleInfo::set_stage_id(settle_info, this->stage_id_);
    is_win = DungeonScene::getDungeonResult((const DungeonScene *const)v38._anon_0._M_allocated_capacity) == DUNGEON_RESULT_SUCCEED;
    common::milog::MiLogStream::create(
      &v50,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onDungeonSettle",
      2362);
    v14 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
            &v50,
            (const char (*)[38])"[ROGUE] rogue dungeon settle, result=");
    val = DungeonScene::getDungeonResult((const DungeonScene *const)v38._anon_0._M_allocated_capacity);
    v15 = common::milog::MiLogStream::operator<<<DungeonResult,(DungeonResult*)0>(v14, &val);
    v16 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v15, (const char (*)[7])" cost:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, (const unsigned int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream(&v50);
    if ( !is_win )
    {
      if ( DungeonScene::getDungeonResult((const DungeonScene *const)v38._anon_0._M_allocated_capacity) == DUNGEON_RESULT_CANCEL )
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        BasicComp = Player::getBasicComp(this->player_);
        PlayerBasicComp::getNextTransNo[abi:cxx11]((std::string *)&v50, BasicComp);
        StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v3 + 32), 0xDD9u, v38);
        std::string::~string(&v50);
        proto::DungeonSettleNotify::set_is_success(notifya, 0);
        common::milog::MiLogStream::create(
          &v50,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "onDungeonSettle",
          2369);
        common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
          &v50,
          (const char (*)[28])"[ROGUE] temp. leave dungeon");
        common::milog::MiLogStream::~MiLogStream(&v50);
        if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&thisa->player_);
        Player::getAvatarComp(thisa->player_);
        PlayerAvatarComp::getCurAvatar((const PlayerAvatarComp *const)(v3 + 128));
        v18 = 0LL;
        if ( std::operator!=<Avatar>((const std::shared_ptr<Avatar> *)(v3 + 128), 0LL) )
        {
          v19 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
          Position = (unsigned __int64)Entity::getPosition((const Entity *const)v19);
          if ( (((unsigned __int8)thisa + 52) & 7) >= *(_BYTE *)(((unsigned __int64)&thisa->last_player_pos_ >> 3)
                                                               + 0x7FFF8000)
            && *(_BYTE *)(((unsigned __int64)&thisa->last_player_pos_ >> 3) + 0x7FFF8000) != 0
            || *(_BYTE *)((((unsigned __int64)&thisa->last_player_pos_.z + 3) >> 3) + 0x7FFF8000) != 0
            && (((unsigned __int8)thisa + 63) & 7) >= *(_BYTE *)((((unsigned __int64)&thisa->last_player_pos_.z + 3) >> 3)
                                                               + 0x7FFF8000) )
          {
            Position = __asan_report_store_n(&thisa->last_player_pos_, 12LL);
          }
          if ( (char)(Position & 7) >= *(_BYTE *)((Position >> 3) + 0x7FFF8000)
            && *(_BYTE *)((Position >> 3) + 0x7FFF8000) != 0
            || *(_BYTE *)(((Position + 11) >> 3) + 0x7FFF8000) != 0
            && (char)((Position + 11) & 7) >= *(_BYTE *)(((Position + 11) >> 3) + 0x7FFF8000) )
          {
            Position = __asan_report_load_n(Position, 12LL);
          }
          *(_QWORD *)&thisa->last_player_pos_.x = *(_QWORD *)Position;
          thisa->last_player_pos_.z = *(float *)(Position + 8);
          v21 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
          Rotation = (unsigned __int64)Entity::getRotation((const Entity *const)v21);
          if ( *(char *)(((unsigned __int64)&thisa->last_player_rot_ >> 3) + 0x7FFF8000) < 0
            || *(_BYTE *)((((unsigned __int64)&thisa->last_player_rot_.z + 3) >> 3) + 0x7FFF8000) != 0
            && (((unsigned __int8)thisa + 75) & 7) >= *(_BYTE *)((((unsigned __int64)&thisa->last_player_rot_.z + 3) >> 3)
                                                               + 0x7FFF8000) )
          {
            Rotation = __asan_report_store_n(&thisa->last_player_rot_, 12LL);
          }
          v18 = ((_DWORD)Rotation + 11) & 7;
          if ( (char)(Rotation & 7) >= *(_BYTE *)((Rotation >> 3) + 0x7FFF8000)
            && *(_BYTE *)((Rotation >> 3) + 0x7FFF8000) != 0
            || *(_BYTE *)(((Rotation + 11) >> 3) + 0x7FFF8000) != 0
            && (char)((Rotation + 11) & 7) >= *(_BYTE *)(((Rotation + 11) >> 3) + 0x7FFF8000) )
          {
            v18 = 12LL;
            Rotation = __asan_report_load_n(Rotation, 12LL);
          }
          *(_QWORD *)&thisa->last_player_rot_.x = *(_QWORD *)Rotation;
          thisa->last_player_rot_.z = *(float *)(Rotation + 8);
        }
        if ( stage_ptr )
        {
          if ( *(char *)(((unsigned __int64)&stage_ptr->has_temp_leaved >> 3) + 0x7FFF8000) < 0 )
            __asan_report_store1(&stage_ptr->has_temp_leaved, v18, &stage_ptr->has_temp_leaved);
          stage_ptr->has_temp_leaved = 1;
          common::tools::perf::make_shared<proto_log::PlayerLogBodyRogueTempSave>();
          v23 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
          if ( *(_BYTE *)(((unsigned __int64)&thisa->stage_id_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&thisa->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&thisa->stage_id_);
          }
          proto_log::PlayerLogBodyRogueTempSave::set_stage_id(v23, thisa->stage_id_);
          v24 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
          proto_log::PlayerLogBodyRogueTempSave::set_rogue_transaction(v24, &stage_ptr->transaction);
          v25 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
          if ( *(_BYTE *)(((unsigned __int64)&thisa->cur_level_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&thisa->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&thisa->cur_level_);
          }
          proto_log::PlayerLogBodyRogueTempSave::set_cur_level(v25, thisa->cur_level_);
          v26 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueTempSave,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
          if ( *(_BYTE *)(((unsigned __int64)&thisa->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&thisa->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&thisa->cur_cell_id_);
          }
          proto_log::PlayerLogBodyRogueTempSave::set_cur_cell_id(v26, thisa->cur_cell_id_);
          if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&thisa->player_);
          player = thisa->player_;
          std::shared_ptr<google::protobuf::Message>::shared_ptr(
            (std::shared_ptr<google::protobuf::Message> *const)&__a,
            0LL);
          std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyRogueTempSave,void>(
            &p_body_ptr,
            (const std::shared_ptr<proto_log::PlayerLogBodyRogueTempSave> *)(v3 + 160));
          Player::printStatLog(player, &p_body_ptr, (MessagePtr *)&__a, 0xEu);
          std::shared_ptr<google::protobuf::Message>::~shared_ptr(&p_body_ptr);
          std::shared_ptr<google::protobuf::Message>::~shared_ptr((std::shared_ptr<google::protobuf::Message> *const)&__a);
          std::shared_ptr<proto_log::PlayerLogBodyRogueTempSave>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyRogueTempSave> *const)(v3 + 160));
        }
        std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v3 + 128));
        StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v3 + 32));
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->activity_);
        activity = this->activity_;
        if ( *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 48) >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 48) >> 3) + 0x7FFF8000) <= 3 )
        {
          activity = (RoguelikeDungeonActivity *)(*(&v38._anon_0._M_allocated_capacity + 1) + 48);
          __asan_report_load4(*(&v38._anon_0._M_allocated_capacity + 1) + 48);
        }
        v29 = *(_DWORD *)(*(&v38._anon_0._M_allocated_capacity + 1) + 48);
        if ( *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 44) >> 3) + 0x7FFF8000) != 0
          && (char)(((v38._anon_0._M_local_buf[8] + 44) & 7) + 3) >= *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity
                                                                                  + 1)
                                                                                + 44) >> 3)
                                                                              + 0x7FFF8000) )
        {
          activity = (RoguelikeDungeonActivity *)(*(&v38._anon_0._M_allocated_capacity + 1) + 44);
          __asan_report_load4(*(&v38._anon_0._M_allocated_capacity + 1) + 44);
        }
        v30 = *(_DWORD *)(*(&v38._anon_0._M_allocated_capacity + 1) + 44);
        if ( *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 40) >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 40) >> 3) + 0x7FFF8000) <= 3 )
        {
          activity = (RoguelikeDungeonActivity *)(*(&v38._anon_0._M_allocated_capacity + 1) + 40);
          __asan_report_load4(*(&v38._anon_0._M_allocated_capacity + 1) + 40);
        }
        RoguelikeDungeonActivity::onRogueDungeonFailed(
          activity,
          *(_DWORD *)(*(&v38._anon_0._M_allocated_capacity + 1) + 40),
          v30,
          v29,
          settle_info);
        v31 = (v38._anon_0._M_local_buf[8] + 76) & 7;
        v32 = (*(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 76) >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v31 >= *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 76) >> 3) + 0x7FFF8000));
        if ( (_BYTE)v32 )
          __asan_report_store1(*(&v38._anon_0._M_allocated_capacity + 1) + 76, v31, v32);
        *(_BYTE *)(*(&v38._anon_0._M_allocated_capacity + 1) + 76) = 0;
      }
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->activity_);
      v33 = this->activity_;
      if ( *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 48) >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 48) >> 3) + 0x7FFF8000) <= 3 )
      {
        v33 = (RoguelikeDungeonActivity *)(*(&v38._anon_0._M_allocated_capacity + 1) + 48);
        __asan_report_load4(*(&v38._anon_0._M_allocated_capacity + 1) + 48);
      }
      v34 = *(_DWORD *)(*(&v38._anon_0._M_allocated_capacity + 1) + 48);
      if ( *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 44) >> 3) + 0x7FFF8000) != 0
        && (char)(((v38._anon_0._M_local_buf[8] + 44) & 7) + 3) >= *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1)
                                                                              + 44) >> 3)
                                                                            + 0x7FFF8000) )
      {
        v33 = (RoguelikeDungeonActivity *)(*(&v38._anon_0._M_allocated_capacity + 1) + 44);
        __asan_report_load4(*(&v38._anon_0._M_allocated_capacity + 1) + 44);
      }
      v35 = *(_DWORD *)(*(&v38._anon_0._M_allocated_capacity + 1) + 44);
      if ( *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 40) >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 40) >> 3) + 0x7FFF8000) <= 3 )
      {
        v33 = (RoguelikeDungeonActivity *)(*(&v38._anon_0._M_allocated_capacity + 1) + 40);
        __asan_report_load4(*(&v38._anon_0._M_allocated_capacity + 1) + 40);
      }
      RoguelikeDungeonActivity::onRogueDungeonSuccess(
        v33,
        *(_DWORD *)(*(&v38._anon_0._M_allocated_capacity + 1) + 40),
        v35,
        v34,
        settle_info);
      v36 = (v38._anon_0._M_local_buf[8] + 76) & 7;
      v37 = (*(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 76) >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v36 >= *(_BYTE *)(((*(&v38._anon_0._M_allocated_capacity + 1) + 76) >> 3) + 0x7FFF8000));
      if ( (_BYTE)v37 )
        __asan_report_store1(*(&v38._anon_0._M_allocated_capacity + 1) + 76, v36, v37);
      *(_BYTE *)(*(&v38._anon_0._M_allocated_capacity + 1) + 76) = 0;
    }
  }
  std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 96));
  if ( v51 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 2401: range 000000001593E6E0-000000001593EA61
void __cdecl RogueLikeDungeonRuntimeMgr::clearAll(RogueLikeDungeonRuntimeMgr *const this)
{
  __int64 v1; // rsi
  __int64 v2; // rsi
  __int64 v3; // rdx
  __int64 v4; // rsi
  __int64 v5; // rdx
  RogueTeam *p_rogue_team; // rdx
  Player *player; // rsi
  RoguelikeMiscMgr *misc_mgr; // [rsp+18h] [rbp-8h]

  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
  RoguelikeMiscMgr::clearRoguelikeDungeonMiscData(misc_mgr);
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->stage_id_, v1, &this->stage_id_);
  }
  this->stage_id_ = 0;
  v2 = (((_BYTE)this + 44) & 7u) + 3;
  v3 = (*(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v3 )
    __asan_report_store4(&this->dungeon_id_, v2, v3);
  this->dungeon_id_ = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->cur_level_, v2, &this->cur_level_);
  }
  this->cur_level_ = 0;
  Vector3::reset(&this->last_player_pos_);
  Vector3::reset(&this->last_player_rot_);
  v4 = ((_BYTE)this + 76) & 7;
  v5 = (*(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v4 >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v5 )
    __asan_report_store1(&this->is_valid_, v4, v5);
  this->is_valid_ = 0;
  std::__weak_ptr<DungeonScene,(__gnu_cxx::_Lock_policy)2>::reset(&this->dungeon_scene_wtr_);
  std::__weak_ptr<DungeonScene,(__gnu_cxx::_Lock_policy)2>::reset(&this->next_dungeon_scene_wtr_);
  std::map<unsigned int,RogueCell>::clear(&this->rogue_cell_map_);
  p_rogue_team = &this->rogue_team_;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  player = this->player_;
  RogueTeam::recallAllAvatars(p_rogue_team, player);
  RogueTeam::clear(&this->rogue_team_);
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->cur_cell_id_, player, &this->cur_cell_id_);
  }
  this->cur_cell_id_ = 0;
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->brakeage_group_pair_gadget_id_map_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->trap_group_pair_gadget_id_map_);
  std::set<std::pair<unsigned int,unsigned int>>::clear(&this->blast_bucket_set_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->blast_bucket_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->blast_bucket_group_pair_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->brakeages_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->brakeages_group_pair_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->trap_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->trap_group_pair_map_);
  std::unordered_set<unsigned int>::clear(&this->explored_cell_set_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->byobu_group_pair_gadget_id_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->byobu_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->byobu_group_pair_map_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->ball_group_pair_gadget_id_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->ball_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->ball_group_pair_map_);
  std::map<data::RogueCellType,std::unordered_set<unsigned int>>::clear(&this->cell_type_to_cell_id_map_);
  std::unordered_map<unsigned int,unsigned int>::clear(&this->guard_entity_id_2_cell_id_map_);
};

// Line 2439: range 000000001593EA62-000000001593ED64
void __cdecl RogueLikeDungeonRuntimeMgr::revertDungeonInitData(
        RogueLikeDungeonRuntimeMgr *const this,
        bool is_recall_avatars)
{
  __int64 v2; // rsi
  __int64 v3; // rdx
  RogueTeam *p_rogue_team; // rdx
  __int64 v5; // rsi
  __int64 v6; // rdx
  std::map<unsigned int,RogueCell>::iterator __for_begin; // [rsp+10h] [rbp-30h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+18h] [rbp-28h] BYREF
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+20h] [rbp-20h]
  std::pair<unsigned int const,RogueCell> *__in; // [rsp+28h] [rbp-18h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *_; // [rsp+30h] [rbp-10h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+38h] [rbp-8h]

  v2 = ((_BYTE)this + 76) & 7;
  v3 = (*(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v2 >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v3 )
    __asan_report_store1(&this->is_valid_, v2, v3);
  this->is_valid_ = 0;
  __for_range = &this->rogue_cell_map_;
  __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    __in = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
    _ = std::get<0ul,unsigned int const,RogueCell>(__in);
    cell = std::get<1ul,unsigned int const,RogueCell>(__in);
    RogueCell::clearDoorEntity(cell);
    RogueCell::clearGadgetEntity(cell);
    RogueCell::clearGuardEntity(cell);
    std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
  }
  std::map<unsigned int,RogueCell>::clear(&this->rogue_cell_map_);
  std::map<data::RogueCellType,std::unordered_set<unsigned int>>::clear(&this->cell_type_to_cell_id_map_);
  RogueLikeDungeonRuntimeMgr::clearOneOffEntities(this);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->brakeage_group_pair_gadget_id_map_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->trap_group_pair_gadget_id_map_);
  std::set<std::pair<unsigned int,unsigned int>>::clear(&this->blast_bucket_set_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->byobu_group_pair_gadget_id_map_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->ball_group_pair_gadget_id_map_);
  std::unordered_map<unsigned int,unsigned int>::clear(&this->guard_entity_id_2_cell_id_map_);
  if ( is_recall_avatars )
  {
    p_rogue_team = &this->rogue_team_;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    RogueTeam::recallAllAvatars(p_rogue_team, this->player_);
  }
  v5 = (((_BYTE)this + 44) & 7u) + 3;
  v6 = (*(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v6 )
    __asan_report_store4(&this->dungeon_id_, v5, v6);
  this->dungeon_id_ = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->stage_id_, v5, &this->stage_id_);
  }
  this->stage_id_ = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->cur_cell_id_, v5, &this->cur_cell_id_);
  }
  this->cur_cell_id_ = 0;
  std::__weak_ptr<DungeonScene,(__gnu_cxx::_Lock_policy)2>::reset(&this->next_dungeon_scene_wtr_);
  std::unordered_set<unsigned int>::clear(&this->explored_cell_set_);
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&this->cur_level_, v5, &this->cur_level_);
  }
  this->cur_level_ = 0;
};

// Line 2470: range 000000001593ED66-000000001593EE75
void __cdecl RogueLikeDungeonRuntimeMgr::revertDungeonRuntimeData(RogueLikeDungeonRuntimeMgr *const this)
{
  __int64 v1; // rsi
  __int64 v2; // rdx
  std::map<unsigned int,RogueCell>::iterator __for_begin; // [rsp+10h] [rbp-30h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+18h] [rbp-28h] BYREF
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+20h] [rbp-20h]
  std::pair<unsigned int const,RogueCell> *__in; // [rsp+28h] [rbp-18h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *_; // [rsp+30h] [rbp-10h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+38h] [rbp-8h]

  v1 = ((_BYTE)this + 76) & 7;
  v2 = (*(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)v1 >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000));
  if ( (_BYTE)v2 )
    __asan_report_store1(&this->is_valid_, v1, v2);
  this->is_valid_ = 0;
  __for_range = &this->rogue_cell_map_;
  __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    __in = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
    _ = std::get<0ul,unsigned int const,RogueCell>(__in);
    cell = std::get<1ul,unsigned int const,RogueCell>(__in);
    RogueCell::clearDoorEntity(cell);
    RogueCell::clearGadgetEntity(cell);
    RogueCell::clearGuardEntity(cell);
    std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
  }
  RogueLikeDungeonRuntimeMgr::clearOneOffEntities(this);
  std::__weak_ptr<DungeonScene,(__gnu_cxx::_Lock_policy)2>::reset(&this->next_dungeon_scene_wtr_);
};

// Line 2483: range 000000001593EE76-0000000015940BCD
void __cdecl RogueLikeDungeonRuntimeMgr::onChallengeSettle(
        RogueLikeDungeonRuntimeMgr *const this,
        DungeonScene *dungeon_scene,
        Challenge *challenge)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rbx
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  RoguelikeDungeonActivity *activity; // rdx
  common::milog::MiLogStream *v13; // rax
  data::RogueCellType type; // eax
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::mapped_type *v15; // rax
  uint32_t *v16; // rdx
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::mapped_type *v17; // rax
  uint32_t *v18; // rdx
  common::milog::MiLogStream *v19; // rax
  PlayerBasicComp *BasicComp; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v24; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v25; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v26; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v27; // rcx
  uint64_t *v28; // rax
  PlayerAvatarComp *AvatarComp; // rax
  Avatar *v30; // r14
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v31; // rax
  proto_log::AvatarLog *v32; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v33; // rax
  Player *player; // r14
  bool v35; // r14
  common::milog::MiLogStream *v36; // rax
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  data::RogueMonsterPoolDifficultyType v38; // ecx
  uint32_t cur_level; // edx
  common::milog::MiLogStream *v40; // rax
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // rax
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  std::vector<unsigned int>::const_reference v45; // rax
  _DWORD *v46; // rdx
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v47; // rax
  unsigned int *v48; // rdx
  unsigned int v49; // r14d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v50; // rax
  unsigned int *v51; // rdx
  std::vector<unsigned int>::const_reference v52; // rax
  _DWORD *v53; // rdx
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v54; // rax
  unsigned int *v55; // rdx
  unsigned int v56; // r14d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v57; // rax
  unsigned int *v58; // rdx
  std::vector<unsigned int>::const_reference v59; // rax
  _DWORD *v60; // rdx
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v61; // rax
  unsigned int *v62; // rdx
  unsigned int v63; // r14d
  __gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *v64; // rax
  unsigned int *v65; // rdx
  PlayerItemComp *ItemComp; // rax
  common::milog::MiLogStream *v67; // rax
  PlayerItemComp *v68; // rax
  common::milog::MiLogStream *v69; // rax
  common::milog::MiLogStream *v70; // rax
  common::milog::MiLogStream *v71; // r14
  unsigned int v72; // ecx
  uint32_t v73; // ecx
  char v74; // dl
  __int64 v75; // rsi
  __int64 v76; // rdx
  common::milog::MiLogStream *v77; // rax
  common::milog::MiLogStream *v78; // rax
  common::milog::MiLogStream *v79; // r14
  const unsigned int *v80; // rax
  _DWORD *v81; // rdx
  unsigned int v82; // edx
  __int64 v83; // rsi
  __int64 v84; // rdx
  char v85; // al
  common::milog::MiLogStream *v86; // rax
  common::milog::MiLogStream *v87; // rax
  common::milog::MiLogStream *v88; // r14
  std::string v89; // [rsp+0h] [rbp-210h]
  Challenge *challengea; // [rsp+8h] [rbp-208h]
  RogueLikeDungeonRuntimeMgr *thisa; // [rsp+18h] [rbp-1F8h]
  unsigned int val; // [rsp+24h] [rbp-1ECh] BYREF
  uint32_t log_cell_type; // [rsp+28h] [rbp-1E8h]
  uint32_t monster_pool_id; // [rsp+2Ch] [rbp-1E4h]
  uint32_t now; // [rsp+30h] [rbp-1E0h]
  uint32_t original_coin_c_num; // [rsp+34h] [rbp-1DCh]
  std::vector<long unsigned int>::iterator __for_begin; // [rsp+38h] [rbp-1D8h] BYREF
  std::vector<long unsigned int>::iterator __for_end; // [rsp+40h] [rbp-1D0h] BYREF
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+48h] [rbp-1C8h]
  RogueCell *cell_ptr; // [rsp+50h] [rbp-1C0h]
  RogueStageData *stage_ptr; // [rsp+58h] [rbp-1B8h]
  std::vector<long unsigned int> *__for_range; // [rsp+60h] [rbp-1B0h]
  const data::RogueTokenExcelConfig *token_config_ptr; // [rsp+68h] [rbp-1A8h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+70h] [rbp-1A0h]
  uint64_t guid; // [rsp+78h] [rbp-198h]
  common::milog::MiLogStream v106; // [rsp+80h] [rbp-190h] BYREF
  char v107[368]; // [rsp+A0h] [rbp-170h] BYREF

  *(&v89._anon_0._M_allocated_capacity + 1) = (std::string::size_type)this;
  v89._anon_0._M_allocated_capacity = (std::string::size_type)dungeon_scene;
  v89._M_string_length = (std::string::size_type)challenge;
  v3 = (unsigned __int64)v107;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_3(320LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "12 32 1 23 log_context_holder:2548 48 4 13 group_id:2488 64 4 12 cell_id:2495 80 4 14 diff_type:"
                        "2509 96 4 15 coin_a_num:2584 112 4 15 coin_b_num:2585 128 4 15 coin_c_num:2586 144 4 20 left_coi"
                        "n_c_num:2659 160 16 12 log_ptr:2549 192 16 22 cur_dungeon_scene:2576 224 16 10 param:2639 256 24"
                        " 18 action_reason:2640";
  *(_QWORD *)(v3 + 16) = RogueLikeDungeonRuntimeMgr::onChallengeSettle;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556927;
  v5[536862722] = -234556924;
  v5[536862723] = -234556924;
  v5[536862724] = -234556924;
  v5[536862725] = -219021312;
  v5[536862726] = -219021312;
  v5[536862727] = -219021312;
  v5[536862728] = -218103808;
  v5[536862729] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( this->is_valid_ )
  {
    if ( *(_BYTE *)(((v89._M_string_length + 16) >> 3) + 0x7FFF8000) )
      __asan_report_load8(v89._M_string_length + 16);
    *(_DWORD *)(v3 + 48) = Group::getGroupId(*(const Group *const *)(v89._M_string_length + 16));
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v3 + 224));
    v6 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 224));
    cell_config_ptr = ActivityRogueExcelConfigMgr::findCellConfigByGroupId(
                        &v6->design_config.txt_config_mgr.activity_rogue_config_mgr,
                        *(_DWORD *)(v3 + 48));
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 224));
    if ( !cell_config_ptr )
    {
      common::milog::MiLogStream::create(
        &v106,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "onChallengeSettle",
        2492);
      v7 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
             &v106,
             (const char (*)[41])"[ROGUE] cell config not found, group_id:");
      v8 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v3 + 48));
      v9 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v8, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
      common::milog::MiLogStream::~MiLogStream(&v106);
      goto LABEL_146;
    }
    if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&cell_config_ptr->cell_id);
    }
    *(_DWORD *)(v3 + 64) = cell_config_ptr->cell_id;
    common::milog::MiLogStream::create(
      &v106,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onChallengeSettle",
      2496);
    v10 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
            &v106,
            (const char (*)[39])"[ROGUE] challenge settle with cell_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &cell_config_ptr->cell_id);
    common::milog::MiLogStream::~MiLogStream(&v106);
    cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v3 + 64));
    if ( !cell_ptr )
    {
      common::milog::MiLogStream::create(
        &v106,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "onChallengeSettle",
        2500);
      v11 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
              &v106,
              (const char (*)[33])"[ROGUE] cell not found, cell_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v3 + 64));
      common::milog::MiLogStream::~MiLogStream(&v106);
      goto LABEL_146;
    }
    if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->activity_);
    activity = this->activity_;
    if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->stage_id_);
    }
    stage_ptr = RoguelikeDungeonActivity::findStage(activity, this->stage_id_);
    if ( !stage_ptr )
    {
      common::milog::MiLogStream::create(
        &v106,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "onChallengeSettle",
        2506);
      v13 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
              &v106,
              (const char (*)[40])"[ROGUE] stage_ptr is nullptr, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &this->stage_id_);
      common::milog::MiLogStream::~MiLogStream(&v106);
      goto LABEL_146;
    }
    *(_DWORD *)(v3 + 80) = 0;
    log_cell_type = 0;
    monster_pool_id = 0;
    if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&cell_ptr->type);
    }
    type = cell_ptr->type;
    if ( type == ROGUE_CELL_TYPE_BOSS )
    {
      *(_DWORD *)(v3 + 80) = 3;
      log_cell_type = 4;
      goto LABEL_42;
    }
    if ( type <= ROGUE_CELL_TYPE_BOSS )
    {
      if ( type == ROGUE_CELL_TYPE_ELITE )
      {
        if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->select_diff_type >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&cell_ptr->select_diff_type >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&cell_ptr->select_diff_type);
        }
        *(_DWORD *)(v3 + 80) = cell_ptr->select_diff_type;
        if ( *(_DWORD *)(v3 + 80) == 1 )
          log_cell_type = 2;
        else
          log_cell_type = 3;
        v17 = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::operator[](
                &cell_ptr->diff_montser_pool_map,
                &cell_ptr->select_diff_type);
        v18 = v17;
        if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v17 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v17);
        }
        monster_pool_id = *v18;
LABEL_42:
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        BasicComp = Player::getBasicComp(this->player_);
        PlayerBasicComp::getNextTransNo[abi:cxx11]((std::string *)&v106, BasicComp);
        StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v3 + 32), 0xDD5u, v89);
        std::string::~string(&v106);
        common::tools::perf::make_shared<proto_log::PlayerLogBodyRogueBattleCellSettle>();
        v21 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
        if ( *(_BYTE *)(((unsigned __int64)&thisa->stage_id_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&thisa->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&thisa->stage_id_);
        }
        proto_log::PlayerLogBodyRogueBattleCellSettle::set_stage_id(v21, thisa->stage_id_);
        v22 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
        if ( *(_BYTE *)(((unsigned __int64)&thisa->cur_level_ >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&thisa->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&thisa->cur_level_);
        }
        proto_log::PlayerLogBodyRogueBattleCellSettle::set_level(v22, thisa->cur_level_);
        v23 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
        proto_log::PlayerLogBodyRogueBattleCellSettle::set_cell_id(v23, *(_DWORD *)(v3 + 64));
        v24 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
        proto_log::PlayerLogBodyRogueBattleCellSettle::set_rogue_transaction(v24, &stage_ptr->transaction);
        v25 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
        proto_log::PlayerLogBodyRogueBattleCellSettle::set_battle_cell_type(v25, log_cell_type);
        now = common::tools::TimeUtils::getNow();
        if ( *(_BYTE *)(((unsigned __int64)&challengea->start_time >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&challengea->start_time >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&challengea->start_time);
        }
        if ( now > challengea->start_time )
        {
          v26 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
          if ( *(_BYTE *)(((unsigned __int64)&challengea->start_time >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&challengea->start_time >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&challengea->start_time);
          }
          proto_log::PlayerLogBodyRogueBattleCellSettle::set_time_cost(v26, now - challengea->start_time);
        }
        v27 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
        if ( *(_BYTE *)(((unsigned __int64)&challengea->is_success >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)challengea + 41) & 7) >= *(_BYTE *)(((unsigned __int64)&challengea->is_success >> 3)
                                                                  + 0x7FFF8000) )
        {
          __asan_report_load1(&challengea->is_success);
        }
        proto_log::PlayerLogBodyRogueBattleCellSettle::set_result(v27, challengea->is_success);
        __for_range = &thisa->rogue_team_.onstage_mirror_avatar_guid_vec;
        __for_begin._M_current = std::vector<unsigned long>::begin(&thisa->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
        __for_end._M_current = std::vector<unsigned long>::end(__for_range)._M_current;
        while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__for_begin, &__for_end) )
        {
          v28 = __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
          if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
            v28 = (uint64_t *)__asan_report_load8(v28);
          guid = *v28;
          if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&thisa->player_);
          AvatarComp = Player::getAvatarComp(thisa->player_);
          PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v3 + 224), (uint64_t)AvatarComp);
          if ( std::operator!=<Avatar>(0LL, (const std::shared_ptr<Avatar> *)(v3 + 224)) )
          {
            v30 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 224));
            v31 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
            v32 = proto_log::PlayerLogBodyRogueBattleCellSettle::add_onstage_avatar_log_list(v31);
            Avatar::getAvatarLog(v30, v32);
          }
          std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v3 + 224));
          __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
        }
        v33 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueBattleCellSettle,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
        proto_log::PlayerLogBodyRogueBattleCellSettle::set_monster_pool_id(v33, monster_pool_id);
        if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&thisa->player_);
        player = thisa->player_;
        std::shared_ptr<google::protobuf::Message>::shared_ptr(
          (std::shared_ptr<google::protobuf::Message> *const)(v3 + 224),
          0LL);
        std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyRogueBattleCellSettle,void>(
          (std::shared_ptr<google::protobuf::Message> *const)(v3 + 192),
          (const std::shared_ptr<proto_log::PlayerLogBodyRogueBattleCellSettle> *)(v3 + 160));
        Player::printStatLog(player, (MessagePtr *)(v3 + 192), (MessagePtr *)(v3 + 224), 0xEu);
        std::shared_ptr<google::protobuf::Message>::~shared_ptr((std::shared_ptr<google::protobuf::Message> *const)(v3 + 192));
        std::shared_ptr<google::protobuf::Message>::~shared_ptr((std::shared_ptr<google::protobuf::Message> *const)(v3 + 224));
        if ( *(_BYTE *)(((unsigned __int64)&challengea->is_success >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)challengea + 41) & 7) >= *(_BYTE *)(((unsigned __int64)&challengea->is_success >> 3)
                                                                  + 0x7FFF8000) )
        {
          __asan_report_load1(&challengea->is_success);
        }
        if ( !challengea->is_success )
          goto LABEL_145;
        std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v3 + 192));
        toThisPtr<DungeonScene>((DungeonScene *)(v3 + 224));
        v35 = std::operator!=<DungeonScene,DungeonScene>(
                (const std::shared_ptr<DungeonScene> *)(v3 + 192),
                (const std::shared_ptr<DungeonScene> *)(v3 + 224));
        std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 224));
        if ( v35 )
        {
          common::milog::MiLogStream::create(
            &v106,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "onChallengeSettle",
            2579);
          common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
            &v106,
            (const char (*)[32])"[ROGUE] dungeon scene not match");
          common::milog::MiLogStream::~MiLogStream(&v106);
        }
        else
        {
          common::milog::MiLogStream::create(
            &v106,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "onChallengeSettle",
            2582);
          v36 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                  &v106,
                  (const char (*)[39])"[ROGUE] challenge settle with cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v36, (const unsigned int *)(v3 + 64));
          common::milog::MiLogStream::~MiLogStream(&v106);
          *(_DWORD *)(v3 + 96) = 0;
          *(_DWORD *)(v3 + 112) = 0;
          *(_DWORD *)(v3 + 128) = 0;
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)(v3 + 224));
          p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 224))->design_config.txt_config_mgr.activity_rogue_config_mgr;
          v38 = *(_DWORD *)(v3 + 80);
          if ( *(_BYTE *)(((unsigned __int64)&thisa->cur_level_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&thisa->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
          {
            p_activity_rogue_config_mgr = (ActivityRogueExcelConfigMgr *)&thisa->cur_level_;
            __asan_report_load4(&thisa->cur_level_);
          }
          cur_level = thisa->cur_level_;
          if ( *(_BYTE *)(((unsigned __int64)&thisa->stage_id_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&thisa->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
          {
            p_activity_rogue_config_mgr = (ActivityRogueExcelConfigMgr *)&thisa->stage_id_;
            __asan_report_load4(&thisa->stage_id_);
          }
          token_config_ptr = ActivityRogueExcelConfigMgr::findTokenConfigByStageIdAndLevel(
                               p_activity_rogue_config_mgr,
                               thisa->stage_id_,
                               cur_level,
                               v38);
          std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 224));
          if ( token_config_ptr )
          {
            if ( std::vector<unsigned int>::size(&token_config_ptr->coin_a_num) == 1 )
            {
              v45 = std::vector<unsigned int>::operator[](&token_config_ptr->coin_a_num, 0LL);
              v46 = v45;
              if ( *(_BYTE *)(((unsigned __int64)v45 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v45 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v45 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v45);
              }
              *(_DWORD *)(v3 + 96) = *v46;
            }
            else if ( std::vector<unsigned int>::size(&token_config_ptr->coin_a_num) == 2 )
            {
              v47 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&token_config_ptr->coin_a_num, 1uLL);
              v48 = v47;
              if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v47 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v47);
              }
              v49 = *v48;
              v50 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&token_config_ptr->coin_a_num, 0LL);
              v51 = v50;
              if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v50 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v50);
              }
              *(_DWORD *)(v3 + 96) = common::tools::RandomUtils::rand<unsigned int>(*v51, v49);
            }
            else
            {
              *(_DWORD *)(v3 + 96) = 0;
            }
            if ( std::vector<unsigned int>::size(&token_config_ptr->coin_b_num) == 1 )
            {
              v52 = std::vector<unsigned int>::operator[](&token_config_ptr->coin_b_num, 0LL);
              v53 = v52;
              if ( *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v52 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v52);
              }
              *(_DWORD *)(v3 + 112) = *v53;
            }
            else if ( std::vector<unsigned int>::size(&token_config_ptr->coin_b_num) == 2 )
            {
              v54 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&token_config_ptr->coin_b_num, 1uLL);
              v55 = v54;
              if ( *(_BYTE *)(((unsigned __int64)v54 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v54 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v54 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v54);
              }
              v56 = *v55;
              v57 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&token_config_ptr->coin_b_num, 0LL);
              v58 = v57;
              if ( *(_BYTE *)(((unsigned __int64)v57 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v57 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v57 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v57);
              }
              *(_DWORD *)(v3 + 112) = common::tools::RandomUtils::rand<unsigned int>(*v58, v56);
            }
            else
            {
              *(_DWORD *)(v3 + 112) = 0;
            }
            if ( std::vector<unsigned int>::size(&token_config_ptr->coin_c_num) == 1 )
            {
              v59 = std::vector<unsigned int>::operator[](&token_config_ptr->coin_c_num, 0LL);
              v60 = v59;
              if ( *(_BYTE *)(((unsigned __int64)v59 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v59 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v59 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v59);
              }
              *(_DWORD *)(v3 + 128) = *v60;
            }
            else if ( std::vector<unsigned int>::size(&token_config_ptr->coin_c_num) == 2 )
            {
              v61 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&token_config_ptr->coin_c_num, 1uLL);
              v62 = v61;
              if ( *(_BYTE *)(((unsigned __int64)v61 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v61 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v61 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v61);
              }
              v63 = *v62;
              v64 = (__gnu_cxx::__alloc_traits<std::allocator<unsigned int>,unsigned int>::value_type *)std::vector<unsigned int>::operator[](&token_config_ptr->coin_c_num, 0LL);
              v65 = v64;
              if ( *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v64 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v64);
              }
              *(_DWORD *)(v3 + 128) = common::tools::RandomUtils::rand<unsigned int>(*v65, v63);
            }
            else
            {
              *(_DWORD *)(v3 + 128) = 0;
            }
            if ( *(_DWORD *)(v3 + 96) )
            {
              if ( *(_BYTE *)(((unsigned __int64)&thisa->activity_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&thisa->activity_);
              misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(thisa->activity_);
              *(_DWORD *)(v3 + 96) = (int)((double)*(int *)(v3 + 96)
                                         * (RoguelikeMiscMgr::getResourceBonusProp(misc_mgr) + 1.0));
              *(_QWORD *)(v3 + 224) = 0LL;
              *(_QWORD *)(v3 + 232) = 0LL;
              *(_DWORD *)(v3 + 224) = 132;
              *(_DWORD *)(v3 + 228) = *(_DWORD *)(v3 + 96);
              ActionReason::ActionReason(
                (ActionReason *const)(v3 + 256),
                ACTION_REASON_ROGUE_CHALLENGE_SETTLE,
                ITEM_LIMIT_ACTIVITY_ROGUELIKE_DUNGEON);
              if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&thisa->player_);
              ItemComp = Player::getItemComp(thisa->player_);
              *(_DWORD *)(v3 + 144) = PlayerItemComp::checkAddItem(
                                        ItemComp,
                                        (const ItemParam *)(v3 + 224),
                                        (const ActionReason *)(v3 + 256));
              if ( *(_DWORD *)(v3 + 144) )
              {
                common::milog::MiLogStream::create(
                  &v106,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "onChallengeSettle",
                  2644);
                v67 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
                        &v106,
                        (const char (*)[27])"[ROGUE] checkAddItem, ret:");
                common::milog::MiLogStream::operator<<<int,(int *)0>(v67, (const int *)(v3 + 144));
                common::milog::MiLogStream::~MiLogStream(&v106);
                goto LABEL_144;
              }
              if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&thisa->player_);
              v68 = Player::getItemComp(thisa->player_);
              PlayerItemComp::addItem(v68, (const ItemParam *)(v3 + 224), (const ActionReason *)(v3 + 256), 0LL);
              common::milog::MiLogStream::create(
                &v106,
                &common::milog::MiLogDefault::default_log_obj_,
                1u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "onChallengeSettle",
                2648);
              v69 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                      &v106,
                      (const char (*)[35])"[ROGUE] challenge add coin a, num:");
              v70 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v69,
                      (const unsigned int *)(v3 + 96));
              v71 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v70, (const char (*)[6])" uid:");
              if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&thisa->player_);
              val = Player::getUid(thisa->player_);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v71, &val);
              common::milog::MiLogStream::~MiLogStream(&v106);
            }
            if ( *(_DWORD *)(v3 + 112) )
            {
              v72 = *(_DWORD *)(v3 + 112);
              if ( *(_BYTE *)(((unsigned __int64)&stage_ptr->cached_coin_b_num >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)stage_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_ptr->cached_coin_b_num >> 3)
                                                                         + 0x7FFF8000) )
              {
                __asan_report_load4(&stage_ptr->cached_coin_b_num);
              }
              v75 = v72;
              v73 = SAFE_ADD<unsigned int,unsigned int>(stage_ptr->cached_coin_b_num, v72);
              v74 = *(_BYTE *)(((unsigned __int64)&stage_ptr->cached_coin_b_num >> 3) + 0x7FFF8000);
              LOBYTE(v75) = v74 != 0;
              v76 = (v74 != 0) & (unsigned __int8)((char)((((_BYTE)stage_ptr + 28) & 7) + 3) >= v74);
              if ( (_BYTE)v76 )
                __asan_report_store4(&stage_ptr->cached_coin_b_num, v75, v76);
              stage_ptr->cached_coin_b_num = v73;
              common::milog::MiLogStream::create(
                &v106,
                &common::milog::MiLogDefault::default_log_obj_,
                1u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "onChallengeSettle",
                2654);
              v77 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                      &v106,
                      (const char (*)[35])"[ROGUE] challenge add coin b, num:");
              v78 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v77,
                      (const unsigned int *)(v3 + 112));
              v79 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v78, (const char (*)[6])" uid:");
              if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&thisa->player_);
              val = Player::getUid(thisa->player_);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v79, &val);
              common::milog::MiLogStream::~MiLogStream(&v106);
            }
            original_coin_c_num = *(_DWORD *)(v3 + 128);
            if ( *(_DWORD *)(v3 + 128) )
            {
              *(_DWORD *)(v3 + 144) = RogueStageData::getLastRemainCoinCNum(stage_ptr);
              v80 = std::min<unsigned int>((const unsigned int *)(v3 + 144), (const unsigned int *)(v3 + 128));
              v81 = v80;
              if ( *(_BYTE *)(((unsigned __int64)v80 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v80 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v80 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v80);
              }
              *(_DWORD *)(v3 + 128) = *v81;
              v82 = *(_DWORD *)(v3 + 128);
              if ( *(_BYTE *)(((unsigned __int64)&stage_ptr->cached_coin_c_num >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&stage_ptr->cached_coin_c_num >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4(&stage_ptr->cached_coin_c_num);
              }
              v83 = v82;
              v84 = SAFE_ADD<unsigned int,unsigned int>(stage_ptr->cached_coin_c_num, v82);
              v85 = *(_BYTE *)(((unsigned __int64)&stage_ptr->cached_coin_c_num >> 3) + 0x7FFF8000);
              if ( v85 != 0 && v85 <= 3 )
              {
                LOBYTE(v83) = v85 != 0;
                __asan_report_store4(&stage_ptr->cached_coin_c_num, v83, v84);
              }
              stage_ptr->cached_coin_c_num = v84;
              common::milog::MiLogStream::create(
                &v106,
                &common::milog::MiLogDefault::default_log_obj_,
                1u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "onChallengeSettle",
                2662);
              v86 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                      &v106,
                      (const char (*)[35])"[ROGUE] challenge add coin c, num:");
              v87 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v86,
                      (const unsigned int *)(v3 + 128));
              v88 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v87, (const char (*)[6])" uid:");
              if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&thisa->player_);
              val = Player::getUid(thisa->player_);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v88, &val);
              common::milog::MiLogStream::~MiLogStream(&v106);
            }
            RogueStageData::onChallengeFinish(
              stage_ptr,
              *(data::RogueMonsterPoolDifficultyType *)(v3 + 80),
              *(_DWORD *)(v3 + 112),
              original_coin_c_num);
            if ( *(_BYTE *)(((unsigned __int64)&thisa->activity_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&thisa->activity_);
            BaseActivity::notifyClientData(thisa->activity_, 0);
            goto LABEL_144;
          }
          common::milog::MiLogStream::create(
            &v106,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "onChallengeSettle",
            2591);
          v40 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                  &v106,
                  (const char (*)[48])"[ROGUE] token_config_ptr is nullptr, stage_id_:");
          v41 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v40, &thisa->stage_id_);
          v42 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v41, (const char (*)[13])" cur_level_:");
          v43 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v42, &thisa->cur_level_);
          v44 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v43, (const char (*)[7])" diff:");
          common::milog::MiLogStream::operator<<<data::RogueMonsterPoolDifficultyType,(data::RogueMonsterPoolDifficultyType*)0>(
            v44,
            (const data::RogueMonsterPoolDifficultyType *)(v3 + 80));
          common::milog::MiLogStream::~MiLogStream(&v106);
        }
LABEL_144:
        std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 192));
LABEL_145:
        std::shared_ptr<proto_log::PlayerLogBodyRogueBattleCellSettle>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyRogueBattleCellSettle> *const)(v3 + 160));
        StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v3 + 32));
        goto LABEL_146;
      }
      if ( type == ROGUE_CELL_TYPE_NORMAL )
      {
        *(_DWORD *)(v3 + 80) = 0;
        log_cell_type = 1;
        val = 0;
        v15 = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::operator[](
                &cell_ptr->diff_montser_pool_map,
                (std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::key_type *)&val);
        v16 = v15;
        if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v15 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v15);
        }
        monster_pool_id = *v16;
        goto LABEL_42;
      }
    }
    common::milog::MiLogStream::create(
      &v106,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onChallengeSettle",
      2543);
    v19 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
            &v106,
            (const char (*)[49])"[ROGUE] cell should contains challenge, cell_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, &cell_ptr->cell_id);
    common::milog::MiLogStream::~MiLogStream(&v106);
  }
LABEL_146:
  if ( v107 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 2669: range 0000000015940BCE-0000000015940D0F
data::RogueGadgetStateType __cdecl RogueLikeDungeonRuntimeMgr::getCellGadgetStateByCellState(
        data::RogueCellType cell_type,
        proto::RogueCellState cell_state)
{
  common::milog::MiLogStream *v2; // rax
  data::RogueCellType val; // [rsp+18h] [rbp-38h] BYREF
  data::RogueGadgetStateType gadget_state; // [rsp+1Ch] [rbp-34h]
  common::milog::MiLogStream v6; // [rsp+20h] [rbp-30h] BYREF

  gadget_state = ROGUE_GADGET_STATE_DOOR_OPEN;
  if ( cell_type == ROGUE_CELL_TYPE_SPRING )
    goto LABEL_13;
  if ( cell_type > ROGUE_CELL_TYPE_SPRING )
    return gadget_state;
  if ( cell_type == ROGUE_CELL_TYPE_STORE )
  {
LABEL_13:
    if ( cell_state )
    {
      if ( cell_state == ROGUE_CELL_SUCCESS )
      {
        return 5;
      }
      else if ( cell_state == ROGUE_CELL_FINISH )
      {
        return 6;
      }
      else
      {
        common::milog::MiLogStream::create(
          &v6,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "getCellGadgetStateByCellState",
          2711);
        v2 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
               &v6,
               (const char (*)[46])"[ROGUE] unsupported cell state for cell_type:");
        val = ROGUE_CELL_TYPE_SPRING;
        common::milog::MiLogStream::operator<<<data::RogueCellType,(data::RogueCellType*)0>(v2, &val);
        common::milog::MiLogStream::~MiLogStream(&v6);
      }
    }
    else
    {
      return 3;
    }
  }
  else if ( cell_type >= ROGUE_CELL_TYPE_STORE && (unsigned int)(cell_type - 3) <= 1 )
  {
    if ( cell_state )
    {
      if ( cell_state == ROGUE_CELL_BATTLE )
      {
        return 4;
      }
      else if ( cell_state == ROGUE_CELL_SUCCESS )
      {
        return 5;
      }
      else
      {
        return 6;
      }
    }
    else
    {
      return 3;
    }
  }
  return gadget_state;
};

// Line 2722: range 0000000015940D10-0000000015941661
__int64 __fastcall RogueLikeDungeonRuntimeMgr::checkEnterDungeon(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t dungeon_id)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  common::milog::MiLogStream *v5; // r14
  unsigned int v6; // r14d
  common::milog::MiLogStream *v7; // r14
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v9; // rax
  PlayerBasicComp *BasicComp; // rax
  uint32_t Level; // ecx
  PlayerMpComp *MpComp; // rax
  PlayerMpComp *v13; // rax
  char v14; // al
  common::milog::MiLogStream *v15; // rcx
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rax
  common::milog::MiLogStream *v17; // r14
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v18; // rax
  PlayerSceneComp *SceneComp; // rax
  common::milog::MiLogStream *v20; // rcx
  __int64 result; // rax
  unsigned int val; // [rsp+14h] [rbp-FCh] BYREF
  const data::DungeonExcelConfig *dungeon_config_ptr; // [rsp+18h] [rbp-F8h]
  common::milog::MiLogStream v24; // [rsp+20h] [rbp-F0h] BYREF
  char v25[208]; // [rsp+40h] [rbp-D0h] BYREF

  v2 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(160LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 48 4 15 dungeon_id:2721 64 16 18 cur_scene_ptr:2723 96 16 18 cur_world_ptr:2729 128 16 19 cur_avatar_ptr:2750";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::checkEnterDungeon;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -219021312;
  v4[536862723] = -219021312;
  v4[536862724] = -202178560;
  *(_DWORD *)(v2 + 48) = dungeon_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v2 + 64));
  if ( std::operator==<Scene>((const std::shared_ptr<Scene> *)(v2 + 64), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v24,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "checkEnterDungeon",
      2726);
    v5 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
           &v24,
           (const char (*)[25])"getCurScene failed, uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, &val);
    common::milog::MiLogStream::~MiLogStream(&v24);
    v6 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurWorld<PlayerWorld>((const PlayerSceneComp *const)(v2 + 96));
    if ( std::operator==<PlayerWorld>((const std::shared_ptr<PlayerWorld> *)(v2 + 96), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v24,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "checkEnterDungeon",
        2732);
      v7 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
             &v24,
             (const char (*)[25])"getCurWorld fails, uid: ");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &val);
      common::milog::MiLogStream::~MiLogStream(&v24);
      v6 = -1;
    }
    else
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)(v2 + 128));
      v8 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 128));
      dungeon_config_ptr = data::DungeonExcelConfigMgrBase::findDungeonExcelConfig(
                             &v8->design_config.txt_config_mgr.dungeon_config_mgr,
                             *(_DWORD *)(v2 + 48));
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 128));
      if ( dungeon_config_ptr )
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
        BasicComp = Player::getBasicComp(this->player_);
        Level = PlayerBasicComp::getLevel(BasicComp);
        if ( *(_BYTE *)(((unsigned __int64)&dungeon_config_ptr->limit_level >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)dungeon_config_ptr + 52) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&dungeon_config_ptr->limit_level >> 3)
                                                                            + 0x7FFF8000) )
        {
          __asan_report_load4(&dungeon_config_ptr->limit_level);
        }
        if ( Level >= dungeon_config_ptr->limit_level )
        {
          if ( *(_BYTE *)(((unsigned __int64)&dungeon_config_ptr->type >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)dungeon_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&dungeon_config_ptr->type >> 3)
                                                                              + 0x7FFF8000) )
          {
            __asan_report_load4(&dungeon_config_ptr->type);
          }
          if ( dungeon_config_ptr->type != DUNGEON_PLOT )
            goto LABEL_34;
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          MpComp = Player::getMpComp(this->player_);
          if ( PlayerMpComp::isInMpMode(MpComp) )
            goto LABEL_33;
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          v13 = Player::getMpComp(this->player_);
          if ( !PlayerMpComp::isAllowEnterPlayerEmpty(v13) )
LABEL_33:
            v14 = 1;
          else
LABEL_34:
            v14 = 0;
          if ( v14 )
          {
            v6 = 1118;
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8(&this->player_);
            Player::getCurAvatar((Player *const)(v2 + 128));
            if ( std::operator==<Avatar>((const std::shared_ptr<Avatar> *)(v2 + 128), 0LL) )
            {
              common::milog::MiLogStream::create(
                &v24,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "checkEnterDungeon",
                2753);
              v15 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(
                      &v24,
                      (const char (*)[19])"getCurAvatar fails");
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->player_);
              operator<<(v15, this->player_);
              common::milog::MiLogStream::~MiLogStream(&v24);
              v6 = -1;
            }
            else
            {
              v16 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 128));
              if ( Creature::getLifeState(v16) == LIFE_ALIVE )
              {
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->player_);
                SceneComp = Player::getSceneComp(this->player_);
                if ( !PlayerSceneComp::isInMyPlayerWorld(SceneComp) )
                {
                  common::milog::MiLogStream::create(
                    &v24,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "checkEnterDungeon",
                    2763);
                  v20 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                          &v24,
                          (const char (*)[37])off_258CE560);
                  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->player_);
                  operator<<(v20, this->player_);
                  common::milog::MiLogStream::~MiLogStream(&v24);
                  v6 = 1202;
                }
                else
                {
                  v6 = 0;
                }
              }
              else
              {
                common::milog::MiLogStream::create(
                  &v24,
                  &common::milog::MiLogDefault::default_log_obj_,
                  1u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "checkEnterDungeon",
                  2758);
                v17 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                        &v24,
                        (const char (*)[20])"avatar is not alive");
                v18 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 128));
                common::milog::MiLogStream::operator<<<Avatar,(Avatar*)0>(v17, v18);
                common::milog::MiLogStream::~MiLogStream(&v24);
                v6 = 102;
              }
            }
            std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v2 + 128));
          }
        }
        else
        {
          v6 = 1117;
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v24,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "checkEnterDungeon",
          2739);
        v9 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
               &v24,
               (const char (*)[42])"findDungeonExcelConfig fails, dungeon_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v2 + 48));
        common::milog::MiLogStream::~MiLogStream(&v24);
        v6 = -1;
      }
    }
    std::shared_ptr<PlayerWorld>::~shared_ptr((std::shared_ptr<PlayerWorld> *const)(v2 + 96));
  }
  std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v2 + 64));
  result = v6;
  if ( v25 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 2770: range 0000000015941662-0000000015941E8D
int32_t __cdecl RogueLikeDungeonRuntimeMgr::initEnterSceneAvatar(
        RogueLikeDungeonRuntimeMgr *const this,
        ScenePtr *p_dest_scene_ptr,
        std::vector<std::shared_ptr<Avatar>> *enter_scene_avatar_vec,
        AvatarPtr *appear_avatar_ptr)
{
  unsigned __int64 v4; // r12
  __int64 v5; // rax
  _DWORD *v6; // r13
  int32_t v7; // r14d
  DungeonScene *v8; // rax
  RoguelikeDungeonActivity *activity; // rdx
  common::milog::MiLogStream *v10; // rax
  uint64_t *v11; // rax
  PlayerAvatarComp *AvatarComp; // rax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  const std::shared_ptr<Avatar> *v15; // rdx
  int32_t result; // eax
  std::vector<long unsigned int>::iterator __for_begin; // [rsp+28h] [rbp-D8h] BYREF
  std::vector<long unsigned int>::iterator __for_end; // [rsp+30h] [rbp-D0h] BYREF
  RogueStageData *stage_ptr; // [rsp+38h] [rbp-C8h]
  std::vector<long unsigned int> *__for_range; // [rsp+40h] [rbp-C0h]
  uint64_t mirror_avatar_guid; // [rsp+48h] [rbp-B8h]
  common::milog::MiLogStream v24; // [rsp+50h] [rbp-B0h] BYREF
  char v25[144]; // [rsp+70h] [rbp-90h] BYREF

  v4 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_1(96LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "2 32 16 27 dest_dungeon_scene_ptr:2776 64 16 15 avatar_ptr:2808";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::initEnterSceneAvatar;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -219021312;
  v6[536862722] = -202178560;
  if ( std::operator==<Scene>(0LL, p_dest_scene_ptr) )
  {
    common::milog::MiLogStream::create(
      &v24,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "initEnterSceneAvatar",
      2773);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v24,
      (const char (*)[34])"[ROGUE] dest scene ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v24);
    v7 = -1;
    goto LABEL_45;
  }
  std::dynamic_pointer_cast<DungeonScene,Scene>((const std::shared_ptr<Scene> *)(v4 + 32));
  if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v4 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v24,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "initEnterSceneAvatar",
      2779);
    common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
      &v24,
      (const char (*)[42])"[ROGUE] dest_dungeon_scene_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v24);
    v7 = -1;
  }
  else
  {
    v8 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
    if ( !DungeonScene::isEnterByRoguelikeActivity(v8) )
    {
      common::milog::MiLogStream::create(
        &v24,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "initEnterSceneAvatar",
        2785);
      common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
        &v24,
        (const char (*)[28])"[ROGUE] enter wrong dungeon");
      common::milog::MiLogStream::~MiLogStream(&v24);
      v7 = -1;
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->activity_);
      activity = this->activity_;
      if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->stage_id_);
      }
      stage_ptr = RoguelikeDungeonActivity::findStage(activity, this->stage_id_);
      if ( stage_ptr )
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
        {
          __asan_report_load1(&this->is_valid_);
        }
        if ( this->is_valid_ )
          goto LABEL_23;
        if ( *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3) + 0x7FFF8000) != 0
          && (((unsigned __int8)stage_ptr + 25) & 7) >= *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3)
                                                                 + 0x7FFF8000) )
        {
          __asan_report_load1(&stage_ptr->is_entering_next_level);
        }
        if ( !stage_ptr->is_entering_next_level )
        {
          common::milog::MiLogStream::create(
            &v24,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "initEnterSceneAvatar",
            2796);
          common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
            &v24,
            (const char (*)[29])"[ROGUE] mgr record not valid");
          common::milog::MiLogStream::~MiLogStream(&v24);
          v7 = -1;
        }
        else
        {
LABEL_23:
          if ( !std::vector<unsigned long>::empty(&this->rogue_team_.onstage_mirror_avatar_guid_vec) )
          {
            __for_range = &this->rogue_team_.onstage_mirror_avatar_guid_vec;
            __for_begin._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
            __for_end._M_current = std::vector<unsigned long>::end(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
            while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__for_begin, &__for_end) )
            {
              v11 = __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
              if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
                v11 = (uint64_t *)__asan_report_load8(v11);
              mirror_avatar_guid = *v11;
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8(&this->player_);
              AvatarComp = Player::getAvatarComp(this->player_);
              PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v4 + 64), (uint64_t)AvatarComp);
              if ( std::operator!=<Avatar>(0LL, (const std::shared_ptr<Avatar> *)(v4 + 64)) )
              {
                std::vector<std::shared_ptr<Avatar>>::push_back(
                  enter_scene_avatar_vec,
                  (const std::vector<std::shared_ptr<Avatar>>::value_type *)(v4 + 64));
                if ( std::operator==<Avatar>(appear_avatar_ptr, 0LL) )
                {
                  v13 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 64));
                  if ( Creature::getLifeState(v13) == LIFE_ALIVE )
                    std::shared_ptr<Avatar>::operator=(appear_avatar_ptr, (const std::shared_ptr<Avatar> *)(v4 + 64));
                }
              }
              std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v4 + 64));
              __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
            }
            if ( std::operator==<Avatar>(appear_avatar_ptr, 0LL) )
            {
              if ( !std::vector<std::shared_ptr<Avatar>>::size(enter_scene_avatar_vec) )
              {
                common::milog::MiLogStream::create(
                  &v24,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "initEnterSceneAvatar",
                  2822);
                common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
                  &v24,
                  (const char (*)[48])"[ROGUE] enter_scene_avatar_vec size less than 1");
                common::milog::MiLogStream::~MiLogStream(&v24);
                v7 = -1;
                goto LABEL_44;
              }
              v15 = std::vector<std::shared_ptr<Avatar>>::operator[](enter_scene_avatar_vec, 0LL);
              std::shared_ptr<Avatar>::operator=(appear_avatar_ptr, v15);
            }
            v7 = 0;
            goto LABEL_44;
          }
          common::milog::MiLogStream::create(
            &v24,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "initEnterSceneAvatar",
            2802);
          common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
            &v24,
            (const char (*)[48])"[ROGUE] onstage_mirror_avatar_guid_vec is empty");
          common::milog::MiLogStream::~MiLogStream(&v24);
          v7 = -1;
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v24,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "initEnterSceneAvatar",
          2791);
        v10 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                &v24,
                (const char (*)[40])"[ROGUE] stage_ptr is nullptr, stage_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &this->stage_id_);
        common::milog::MiLogStream::~MiLogStream(&v24);
        v7 = -1;
      }
    }
  }
LABEL_44:
  std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v4 + 32));
LABEL_45:
  result = v7;
  if ( v25 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2831: range 0000000015941E8E-00000000159424BD
__int64 __fastcall RogueLikeDungeonRuntimeMgr::onClientStartEliteChallenge(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t dungeon_id,
        uint32_t cell_id,
        proto::RogueEliteCellDifficultyType diff)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  _DWORD *v6; // r12
  unsigned int v7; // r14d
  common::milog::MiLogStream *v8; // rax
  __int64 v9; // rsi
  common::milog::MiLogStream *v10; // rax
  __int64 result; // rax
  RogueCell *cell_ptr; // [rsp+28h] [rbp-B8h]
  common::milog::MiLogStream v15; // [rsp+30h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+50h] [rbp-90h] BYREF

  v4 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_1(96LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "2 48 4 12 cell_id:2830 64 16 22 dungeon_scene_ptr:2854";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::onClientStartEliteChallenge;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -202178560;
  *(_DWORD *)(v4 + 48) = cell_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onClientStartEliteChallenge",
      2834);
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      &v15,
      (const char (*)[29])"[ROGUE] dungeon is not valid");
    common::milog::MiLogStream::~MiLogStream(&v15);
    v7 = -1;
  }
  else
  {
    cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v4 + 48));
    if ( cell_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell_ptr->type);
      }
      if ( cell_ptr->type == ROGUE_CELL_TYPE_ELITE )
      {
        if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&cell_ptr->state);
        }
        if ( cell_ptr->state )
        {
          common::milog::MiLogStream::create(
            &v15,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "onClientStartEliteChallenge",
            2850);
          v8 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                 &v15,
                 (const char (*)[42])"[ROGUE] cell state should be NONE, state:");
          common::milog::MiLogStream::operator<<<proto::RogueCellState,(proto::RogueCellState*)0>(v8, &cell_ptr->state);
          common::milog::MiLogStream::~MiLogStream(&v15);
          v7 = 10041;
        }
        else
        {
          if ( diff )
            v9 = 2LL;
          else
            v9 = 1LL;
          if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->select_diff_type >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&cell_ptr->select_diff_type >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_store4(&cell_ptr->select_diff_type, v9, &cell_ptr->select_diff_type);
          }
          cell_ptr->select_diff_type = v9;
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          Player::getDungeonComp(this->player_);
          PlayerDungeonComp::getCurDungeon((PlayerDungeonComp *const)(v4 + 64));
          if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v4 + 64), 0LL) )
          {
            common::milog::MiLogStream::create(
              &v15,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "onClientStartEliteChallenge",
              2857);
            common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
              &v15,
              (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
            common::milog::MiLogStream::~MiLogStream(&v15);
            v7 = 10038;
          }
          else if ( RogueLikeDungeonRuntimeMgr::internalChangeCellState(this, cell_ptr, ROGUE_CELL_BATTLE, diff) )
          {
            common::milog::MiLogStream::create(
              &v15,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "onClientStartEliteChallenge",
              2862);
            v10 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                    &v15,
                    (const char (*)[49])"[ROGUE] internalChangeCellState failed, cell_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v4 + 48));
            common::milog::MiLogStream::~MiLogStream(&v15);
            v7 = -1;
          }
          else
          {
            v7 = 0;
          }
          std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v4 + 64));
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v15,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "onClientStartEliteChallenge",
          2845);
        common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
          &v15,
          (const char (*)[32])"[ROGUE] cell type is not normal");
        common::milog::MiLogStream::~MiLogStream(&v15);
        v7 = 10039;
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v15,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "onClientStartEliteChallenge",
        2840);
      common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
        &v15,
        (const char (*)[23])"[ROGUE] cell not found");
      common::milog::MiLogStream::~MiLogStream(&v15);
      v7 = 10039;
    }
  }
  result = v7;
  if ( v16 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2869: range 00000000159424BE-0000000015942A88
__int64 __fastcall RogueLikeDungeonRuntimeMgr::onClientStartNormalChallenge(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t dungeon_id,
        uint32_t cell_id)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r12
  unsigned int v6; // r14d
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  __int64 result; // rax
  RogueCell *cell_ptr; // [rsp+18h] [rbp-B8h]
  common::milog::MiLogStream v12; // [rsp+20h] [rbp-B0h] BYREF
  char v13[144]; // [rsp+40h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 12 cell_id:2868 64 16 22 dungeon_scene_ptr:2892";
  *(_QWORD *)(v3 + 16) = RogueLikeDungeonRuntimeMgr::onClientStartNormalChallenge;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  *(_DWORD *)(v3 + 48) = cell_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "onClientStartNormalChallenge",
      2872);
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      &v12,
      (const char (*)[29])"[ROGUE] dungeon is not valid");
    common::milog::MiLogStream::~MiLogStream(&v12);
    v6 = -1;
  }
  else
  {
    cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v3 + 48));
    if ( cell_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell_ptr->type);
      }
      if ( cell_ptr->type == ROGUE_CELL_TYPE_NORMAL )
      {
        if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&cell_ptr->state);
        }
        if ( cell_ptr->state )
        {
          common::milog::MiLogStream::create(
            &v12,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "onClientStartNormalChallenge",
            2888);
          v7 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                 &v12,
                 (const char (*)[42])"[ROGUE] cell state should be NONE, state:");
          common::milog::MiLogStream::operator<<<proto::RogueCellState,(proto::RogueCellState*)0>(v7, &cell_ptr->state);
          common::milog::MiLogStream::~MiLogStream(&v12);
          v6 = 10041;
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8(&this->player_);
          Player::getDungeonComp(this->player_);
          PlayerDungeonComp::getCurDungeon((PlayerDungeonComp *const)(v3 + 64));
          if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v3 + 64), 0LL) )
          {
            common::milog::MiLogStream::create(
              &v12,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "onClientStartNormalChallenge",
              2895);
            common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
              &v12,
              (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
            common::milog::MiLogStream::~MiLogStream(&v12);
            v6 = 10038;
          }
          else if ( RogueLikeDungeonRuntimeMgr::internalChangeCellState(this, cell_ptr, ROGUE_CELL_BATTLE) )
          {
            common::milog::MiLogStream::create(
              &v12,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "onClientStartNormalChallenge",
              2900);
            v8 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                   &v12,
                   (const char (*)[49])"[ROGUE] internalChangeCellState failed, cell_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v3 + 48));
            common::milog::MiLogStream::~MiLogStream(&v12);
            v6 = -1;
          }
          else
          {
            v6 = 0;
          }
          std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 64));
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v12,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "onClientStartNormalChallenge",
          2883);
        common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
          &v12,
          (const char (*)[32])"[ROGUE] cell type is not normal");
        common::milog::MiLogStream::~MiLogStream(&v12);
        v6 = 10039;
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v12,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "onClientStartNormalChallenge",
        2878);
      common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
        &v12,
        (const char (*)[23])"[ROGUE] cell not found");
      common::milog::MiLogStream::~MiLogStream(&v12);
      v6 = 10039;
    }
  }
  result = v6;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2907: range 0000000015942A8A-0000000015942AD5
data::RogueGadgetDirType __cdecl RogueLikeDungeonRuntimeMgr::getOppositeDir(data::RogueGadgetDirType dir)
{
  if ( dir == ROGUE_GADGET_ROT_RIGHT )
    return 2;
  if ( dir <= ROGUE_GADGET_ROT_RIGHT )
  {
    switch ( dir )
    {
      case ROGUE_GADGET_ROT_LEFT:
        return 3;
      case ROGUE_GADGET_ROT_UP:
        return 1;
      case ROGUE_GADGET_ROT_DOWN:
        return 0;
    }
  }
  return 1;
};

// Line 2925: range 0000000015942AD6-00000000159430DF
int32_t __fastcall RogueLikeDungeonRuntimeMgr::setCellStateByScript(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t group_id,
        proto::RogueCellState cell_state)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // r13
  int32_t result; // eax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r13
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  unsigned int val; // [rsp+1Ch] [rbp-A4h] BYREF
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+20h] [rbp-A0h]
  RogueCell *cell_ptr; // [rsp+28h] [rbp-98h]
  std::shared_ptr<Config> v20; // [rsp+30h] [rbp-90h] BYREF
  common::milog::MiLogStream v21; // [rsp+40h] [rbp-80h] BYREF
  char v22[96]; // [rsp+60h] [rbp-60h] BYREF

  v3 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 4 13 group_id:2924";
  *(_QWORD *)(v3 + 16) = RogueLikeDungeonRuntimeMgr::setCellStateByScript;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202116348;
  *(_DWORD *)(v3 + 32) = group_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( this->is_valid_ )
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v20);
    v9 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v20);
    cell_config_ptr = ActivityRogueExcelConfigMgr::findCellConfigByGroupId(
                        &v9->design_config.txt_config_mgr.activity_rogue_config_mgr,
                        *(_DWORD *)(v3 + 32));
    std::shared_ptr<Config>::~shared_ptr(&v20);
    if ( cell_config_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&cell_config_ptr->cell_id);
      }
      cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, cell_config_ptr->cell_id);
      if ( cell_ptr )
      {
        if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(&cell_ptr->type);
        }
        if ( cell_ptr->type != ROGUE_CELL_TYPE_INIT )
        {
          result = RogueLikeDungeonRuntimeMgr::internalChangeCellState(this, cell_ptr, cell_state);
          goto LABEL_27;
        }
        common::milog::MiLogStream::create(
          &v21,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "setCellStateByScript",
          2945);
        v15 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                &v21,
                (const char (*)[46])"[ROGUE] cell type should not be specific type");
        v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v15, (const char (*)[6])" uid:");
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
      }
      else
      {
        common::milog::MiLogStream::create(
          &v21,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "setCellStateByScript",
          2940);
        v13 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                &v21,
                (const char (*)[33])"[ROGUE] cell not found, cell_id:");
        v14 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &cell_config_ptr->cell_id);
        v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v14, (const char (*)[6])" uid:");
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->player_);
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "setCellStateByScript",
        2934);
      v10 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
              &v21,
              (const char (*)[41])"[ROGUE] cell config not found, group_id:");
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v3 + 32));
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
    }
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
    common::milog::MiLogStream::~MiLogStream(&v21);
    result = -1;
    goto LABEL_27;
  }
  common::milog::MiLogStream::create(
    &v21,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
    "setCellStateByScript",
    2928);
  v6 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
         &v21,
         (const char (*)[26])"[ROGUE] runtime not valid");
  v7 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v6, (const char (*)[6])" uid:");
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  val = Player::getUid(this->player_);
  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &val);
  common::milog::MiLogStream::~MiLogStream(&v21);
  result = -1;
LABEL_27:
  if ( v22 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2952: range 00000000159430E0-000000001594352A
int32_t __fastcall RogueLikeDungeonRuntimeMgr::setCellStateByGm(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t cell_id,
        proto::RogueCellState cell_state)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // r13
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+14h] [rbp-8Ch] BYREF
  RogueCell *cell_ptr; // [rsp+18h] [rbp-88h]
  common::milog::MiLogStream v15; // [rsp+20h] [rbp-80h] BYREF
  char v16[96]; // [rsp+40h] [rbp-60h] BYREF

  v3 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 4 12 cell_id:2951";
  *(_QWORD *)(v3 + 16) = RogueLikeDungeonRuntimeMgr::setCellStateByGm;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202116348;
  *(_DWORD *)(v3 + 32) = cell_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "setCellStateByGm",
      2955);
    v6 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
           &v15,
           (const char (*)[26])"[ROGUE] runtime not valid");
    v7 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v6, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
LABEL_19:
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &val);
    common::milog::MiLogStream::~MiLogStream(&v15);
    result = -1;
    goto LABEL_21;
  }
  cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v3 + 32));
  if ( !cell_ptr )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "setCellStateByGm",
      2961);
    v8 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
           &v15,
           (const char (*)[33])"[ROGUE] cell not found, cell_id:");
    v9 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v3 + 32));
    v7 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v9, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    goto LABEL_19;
  }
  if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&cell_ptr->type);
  }
  if ( cell_ptr->type == ROGUE_CELL_TYPE_INIT )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "setCellStateByGm",
      2966);
    v10 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
            &v15,
            (const char (*)[46])"[ROGUE] cell type should not be specific type");
    v7 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v10, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    goto LABEL_19;
  }
  result = RogueLikeDungeonRuntimeMgr::internalChangeCellState(this, cell_ptr, cell_state);
LABEL_21:
  if ( v16 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2973: range 000000001594352C-0000000015943A7A
__int64 __fastcall RogueLikeDungeonRuntimeMgr::getCellStateByScript(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t group_id,
        unsigned __int64 cell_state)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // rax
  common::milog::MiLogStream *v7; // r13
  __int64 result; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r13
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  proto::RogueCellState state; // edi
  __int64 v16; // rdx
  unsigned int val; // [rsp+2Ch] [rbp-A4h] BYREF
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+30h] [rbp-A0h]
  RogueCell *cell_ptr; // [rsp+38h] [rbp-98h]
  std::shared_ptr<Config> v21; // [rsp+40h] [rbp-90h] BYREF
  common::milog::MiLogStream v22; // [rsp+50h] [rbp-80h] BYREF
  char v23[96]; // [rsp+70h] [rbp-60h] BYREF

  v3 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 4 13 group_id:2972";
  *(_QWORD *)(v3 + 16) = RogueLikeDungeonRuntimeMgr::getCellStateByScript;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202116348;
  *(_DWORD *)(v3 + 32) = group_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v22,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "getCellStateByScript",
      2976);
    v6 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
           &v22,
           (const char (*)[26])"[ROGUE] runtime not valid");
    v7 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v6, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &val);
    common::milog::MiLogStream::~MiLogStream(&v22);
    result = 0xFFFFFFFFLL;
    goto LABEL_25;
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v21);
  v9 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v21);
  cell_config_ptr = ActivityRogueExcelConfigMgr::findCellConfigByGroupId(
                      &v9->design_config.txt_config_mgr.activity_rogue_config_mgr,
                      *(_DWORD *)(v3 + 32));
  std::shared_ptr<Config>::~shared_ptr(&v21);
  if ( !cell_config_ptr )
  {
    common::milog::MiLogStream::create(
      &v22,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "getCellStateByScript",
      2982);
    v10 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
            &v22,
            (const char (*)[41])"[ROGUE] cell config not found, group_id:");
    v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v3 + 32));
    v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
LABEL_13:
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
    common::milog::MiLogStream::~MiLogStream(&v22);
    result = 0xFFFFFFFFLL;
    goto LABEL_25;
  }
  if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&cell_config_ptr->cell_id);
  }
  cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, cell_config_ptr->cell_id);
  if ( !cell_ptr )
  {
    common::milog::MiLogStream::create(
      &v22,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "getCellStateByScript",
      2988);
    v13 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
            &v22,
            (const char (*)[33])"[ROGUE] cell not found, cell_id:");
    v14 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &cell_config_ptr->cell_id);
    v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v14, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    goto LABEL_13;
  }
  if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&cell_ptr->state);
  }
  state = cell_ptr->state;
  v16 = (*(_BYTE *)((cell_state >> 3) + 0x7FFF8000) != 0) & (unsigned __int8)((char)((cell_state & 7) + 3) >= *(_BYTE *)((cell_state >> 3) + 0x7FFF8000));
  if ( (_BYTE)v16 )
  {
    state = (int)cell_state;
    __asan_report_store4(cell_state, (unsigned int)(cell_state & 7) + 3, v16);
  }
  *(_DWORD *)cell_state = state;
  result = 0LL;
LABEL_25:
  if ( v23 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2996: range 0000000015943A7C-00000000159441DA
int32_t __cdecl RogueLikeDungeonRuntimeMgr::internalChangeCellState(
        RogueLikeDungeonRuntimeMgr *const this,
        RogueCell *cell,
        proto::RogueCellState target_state)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  int32_t v6; // r14d
  const ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  uint32_t cell_id; // ecx
  common::milog::MiLogStream *v9; // rax
  char *v10; // rsi
  unsigned __int64 v11; // rax
  char v12; // dl
  __int64 v13; // rdx
  std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v14; // rdx
  char v15; // cl
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::key_type *p_k; // rsi
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::mapped_type *v17; // rax
  int *v18; // rdx
  int v19; // r14d
  __int64 v20; // rax
  char v21; // dl
  __int64 v22; // rdx
  uint32_t v23; // esi
  common::milog::MiLogStream *v24; // r14
  std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v25; // rax
  Group *v26; // rax
  int32_t result; // eax
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::key_type __k; // [rsp+24h] [rbp-DCh] BYREF
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+28h] [rbp-D8h]
  common::milog::MiLogStream v33; // [rsp+30h] [rbp-D0h] BYREF
  char v34[176]; // [rsp+50h] [rbp-B0h] BYREF

  v3 = (unsigned __int64)v34;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 16 22 dungeon_scene_ptr:3002 64 16 14 event_ptr:3014 96 16 14 group_ptr:3023";
  *(_QWORD *)(v3 + 16) = RogueLikeDungeonRuntimeMgr::internalChangeCellState;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -219021312;
  v5[536862723] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&cell->state);
  }
  if ( target_state == cell->state )
  {
    common::milog::MiLogStream::create(
      &v33,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "internalChangeCellState",
      2999);
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
      &v33,
      (const char (*)[41])"[ROGUE] state is same, no need to change");
    common::milog::MiLogStream::~MiLogStream(&v33);
    v6 = 0;
  }
  else
  {
    std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v3 + 32));
    if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v3 + 32)) )
    {
      common::milog::MiLogStream::create(
        &v33,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "internalChangeCellState",
        3005);
      common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
        &v33,
        (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
      common::milog::MiLogStream::~MiLogStream(&v33);
      v6 = -1;
    }
    else
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)(v3 + 96));
      p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96))->design_config.txt_config_mgr.activity_rogue_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
      {
        p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell->cell_id;
        __asan_report_load4(&cell->cell_id);
      }
      cell_id = cell->cell_id;
      if ( *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) )
      {
        p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell->dungeon_id;
        __asan_report_load4(&cell->dungeon_id);
      }
      cell_config_ptr = ActivityRogueExcelConfigMgr::findDungeonCellConfigByDungeonIdAndCellId(
                          p_activity_rogue_config_mgr,
                          cell->dungeon_id,
                          cell_id);
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 96));
      if ( cell_config_ptr )
      {
        common::tools::perf::make_shared<Event>();
        v10 = (char *)(v3 + 64);
        if ( std::operator!=<Event>(0LL, (const std::shared_ptr<Event> *)(v3 + 64)) )
        {
          v11 = (unsigned __int64)std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
          v12 = *(_BYTE *)((v11 >> 3) + 0x7FFF8000);
          LOBYTE(v10) = v12 != 0;
          v13 = (v12 != 0) & (unsigned __int8)(v12 <= 3);
          if ( (_BYTE)v13 )
            v11 = __asan_report_store4(v11, v10, v13);
          *(_DWORD *)v11 = 90;
          v14 = std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
          v15 = *(_BYTE *)(((unsigned __int64)&v14->param1 >> 3) + 0x7FFF8000);
          if ( v15 != 0 && (char)((((_BYTE)v14 + 44) & 7) + 3) >= v15 )
          {
            LOBYTE(v10) = v15 != 0;
            __asan_report_store4(&v14->param1, v10, v14);
          }
          v14->param1 = target_state;
          if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(&cell->type);
          }
          if ( cell->type == ROGUE_CELL_TYPE_NORMAL )
          {
            __k = ROGUE_MONSTER_DIFFICULTY_NORMAL;
            p_k = &__k;
            v17 = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::operator[](
                    &cell->diff_montser_pool_map,
                    &__k);
            v18 = (int *)v17;
            if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v17 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(v17);
            }
            v19 = *v18;
            v20 = (__int64)std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
            v21 = *(_BYTE *)(((unsigned __int64)(v20 + 48) >> 3) + 0x7FFF8000);
            LOBYTE(p_k) = v21 != 0;
            v22 = (v21 != 0) & (unsigned __int8)(v21 <= 3);
            if ( (_BYTE)v22 )
              v20 = __asan_report_store4(v20 + 48, p_k, v22);
            *(_DWORD *)(v20 + 48) = v19;
          }
          v23 = (unsigned int)std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
          if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&cell_config_ptr->group_id);
          }
          Scene::findGroup((Scene *const)(v3 + 96), v23);
          if ( std::operator!=<Group>(0LL, (const std::shared_ptr<Group> *)(v3 + 96)) )
          {
            common::milog::MiLogStream::create(
              &v33,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "internalChangeCellState",
              3026);
            v24 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                    &v33,
                    (const char (*)[29])"[ROGUE] handEvent, group_id:");
            v25 = std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
            __k = Group::getGroupId(v25);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v24, (const unsigned int *)&__k);
            common::milog::MiLogStream::~MiLogStream(&v33);
            v26 = std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
            Group::handleEvent(v26, (EventPtr *)(v3 + 64));
          }
          std::shared_ptr<Group>::~shared_ptr((std::shared_ptr<Group> *const)(v3 + 96));
        }
        v6 = RogueLikeDungeonRuntimeMgr::afterChangeCellState(this, cell, target_state);
        std::shared_ptr<Event>::~shared_ptr((std::shared_ptr<Event> *const)(v3 + 64));
      }
      else
      {
        common::milog::MiLogStream::create(
          &v33,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "internalChangeCellState",
          3011);
        v9 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
               &v33,
               (const char (*)[44])"[ROGUE] cell config ptr not found, cell_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &cell->cell_id);
        common::milog::MiLogStream::~MiLogStream(&v33);
        v6 = -1;
      }
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 32));
  }
  result = v6;
  if ( v34 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3035: range 00000000159441DC-0000000015945D8A
int32_t __cdecl RogueLikeDungeonRuntimeMgr::afterChangeCellState(
        RogueLikeDungeonRuntimeMgr *const this,
        RogueCell *cell,
        proto::RogueCellState target_state)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // rax
  int32_t v7; // r14d
  ActivityRogueExcelConfigMgr *v8; // rsi
  uint32_t v9; // ecx
  common::milog::MiLogStream *v10; // rax
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rsi
  uint32_t v12; // ecx
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  ActivityRogueExcelConfigMgr *v15; // rsi
  uint32_t v16; // ecx
  std::tuple_element<1,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *v17; // rax
  common::milog::MiLogStream *v18; // rax
  char v19; // al
  ActivityRogueExcelConfigMgr *v20; // rsi
  uint32_t v21; // ecx
  std::tuple_element<1,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *v22; // rax
  common::milog::MiLogStream *v23; // rax
  char v24; // al
  data::RogueCellType type; // eax
  common::milog::MiLogStream *v26; // rcx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v27; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v28; // rax
  Gadget *v29; // rax
  proto::RogueCellInfo *v30; // rdx
  int32_t result; // eax
  bool is_connected; // [rsp+2Bh] [rbp-215h]
  data::RogueGadgetStateType revive_gadget_state; // [rsp+2Ch] [rbp-214h]
  uint32_t gadget_state; // [rsp+30h] [rbp-210h]
  data::RogueGadgetDirType opposite_dir_0; // [rsp+34h] [rbp-20Ch]
  data::RogueGadgetDirType opposite_dir; // [rsp+38h] [rbp-208h]
  data::RogueGadgetStateType rogue_gadget_state; // [rsp+3Ch] [rbp-204h]
  std::map<data::RogueGadgetDirType,unsigned int>::iterator __for_begin; // [rsp+40h] [rbp-200h] BYREF
  std::map<data::RogueGadgetDirType,unsigned int>::iterator __for_end; // [rsp+48h] [rbp-1F8h] BYREF
  std::map<data::RogueGadgetDirType,unsigned int> *__for_range_2; // [rsp+50h] [rbp-1F0h]
  std::pair<const data::RogueGadgetDirType,unsigned int> *v43; // [rsp+58h] [rbp-1E8h]
  std::tuple_element<0,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *dir_2; // [rsp+60h] [rbp-1E0h]
  std::tuple_element<1,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *cell_id_2; // [rsp+68h] [rbp-1D8h]
  RogueCell *adj_cell_ptr_2; // [rsp+70h] [rbp-1D0h]
  RogueCell *adj_cell_0; // [rsp+78h] [rbp-1C8h]
  std::map<data::RogueGadgetDirType,unsigned int> *__for_range_1; // [rsp+80h] [rbp-1C0h]
  std::pair<const data::RogueGadgetDirType,unsigned int> *v49; // [rsp+88h] [rbp-1B8h]
  std::tuple_element<0,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *dir_1; // [rsp+90h] [rbp-1B0h]
  std::tuple_element<1,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *cell_id_1; // [rsp+98h] [rbp-1A8h]
  RogueCell *adj_cell_ptr_1; // [rsp+A0h] [rbp-1A0h]
  RogueCell *adj_cell; // [rsp+A8h] [rbp-198h]
  std::map<data::RogueGadgetDirType,unsigned int> *__for_range_0; // [rsp+B0h] [rbp-190h]
  std::pair<const data::RogueGadgetDirType,unsigned int> *v55; // [rsp+B8h] [rbp-188h]
  std::tuple_element<0,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *dir_0; // [rsp+C0h] [rbp-180h]
  std::tuple_element<1,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *cell_id_0; // [rsp+C8h] [rbp-178h]
  RogueCell *adj_cell_ptr_0; // [rsp+D0h] [rbp-170h]
  std::map<data::RogueGadgetDirType,unsigned int> *__for_range; // [rsp+D8h] [rbp-168h]
  std::pair<const data::RogueGadgetDirType,unsigned int> *__in; // [rsp+E0h] [rbp-160h]
  std::tuple_element<0,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *dir; // [rsp+E8h] [rbp-158h]
  std::tuple_element<1,std::pair<const data::RogueGadgetDirType,unsigned int> >::type *cell_id; // [rsp+F0h] [rbp-150h]
  RogueCell *adj_cell_ptr; // [rsp+F8h] [rbp-148h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+100h] [rbp-140h]
  const RoguelikeEfffectCellParam *effect_cell_param; // [rsp+108h] [rbp-138h]
  std::vector<std::weak_ptr<Gadget>> *__for_range_3; // [rsp+110h] [rbp-130h]
  std::weak_ptr<Gadget> *guard_gadget_wtr; // [rsp+118h] [rbp-128h]
  std::shared_ptr<Config> v68; // [rsp+120h] [rbp-120h] BYREF
  char v69[272]; // [rsp+130h] [rbp-110h] BYREF

  v3 = (unsigned __int64)v69;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(224LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 16 21 guard_gadget_ptr:3205 80 32 11 notify:3219 144 48 12 adj_map:3147";
  *(_QWORD *)(v3 + 16) = RogueLikeDungeonRuntimeMgr::afterChangeCellState;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61937;
  v5[536862722] = 62194;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862726] = -202116109;
  if ( target_state == ROGUE_CELL_BATTLE )
  {
    if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&cell->type);
    }
    if ( cell->type != ROGUE_CELL_TYPE_ELITE && cell->type != ROGUE_CELL_TYPE_NORMAL )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell->type);
      }
      if ( cell->type != ROGUE_CELL_TYPE_BOSS )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 80),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "afterChangeCellState",
          3054);
        common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
          (common::milog::MiLogStream *const)(v3 + 80),
          (const char (*)[46])"[ROGUE] only combat cell can change to BATTLE");
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
        v7 = -1;
        goto LABEL_156;
      }
      is_connected = RogueLikeDungeonRuntimeMgr::isAllCellFinishedBeforeBoss(this);
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 80),
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "afterChangeCellState",
        3047);
      v6 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
             (common::milog::MiLogStream *const)(v3 + 80),
             (const char (*)[33])"[ROGUE] boss cell, is_connected:");
      common::milog::MiLogStream::operator<<(v6, is_connected);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
      goto LABEL_118;
    }
    goto LABEL_9;
  }
  if ( target_state != ROGUE_CELL_SUCCESS )
  {
    if ( target_state == ROGUE_CELL_FINISH )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell->type);
      }
      if ( cell->type == ROGUE_CELL_TYPE_BOSS )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 80),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "afterChangeCellState",
          3092);
        common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
          (common::milog::MiLogStream *const)(v3 + 80),
          (const char (*)[37])"[ROGUE] boss cell changes to success");
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
        goto LABEL_118;
      }
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v68);
      p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v68)->design_config.txt_config_mgr.activity_rogue_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&cell->cell_id);
      }
      v12 = cell->cell_id;
      if ( *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell->dungeon_id);
      }
      ActivityRogueExcelConfigMgr::findCellAjdMap(
        (RogueCellAdjMap *)(v3 + 144),
        p_activity_rogue_config_mgr,
        cell->dungeon_id,
        v12);
      std::shared_ptr<Config>::~shared_ptr(&v68);
      __for_range_0 = (std::map<data::RogueGadgetDirType,unsigned int> *)(v3 + 144);
      __for_begin._M_node = std::map<data::RogueGadgetDirType,unsigned int>::begin((std::map<data::RogueGadgetDirType,unsigned int> *const)(v3 + 144))._M_node;
      __for_end._M_node = std::map<data::RogueGadgetDirType,unsigned int>::end((std::map<data::RogueGadgetDirType,unsigned int> *const)(v3 + 144))._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v55 = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator*(&__for_begin);
        dir_0 = std::get<0ul,data::RogueGadgetDirType const,unsigned int>(v55);
        cell_id_0 = std::get<1ul,data::RogueGadgetDirType const,unsigned int>(v55);
        if ( *(_BYTE *)(((unsigned __int64)dir_0 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)dir_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)dir_0 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(dir_0);
        }
        RogueCell::openDoor(cell, *dir_0);
        if ( *(_BYTE *)(((unsigned __int64)cell_id_0 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)cell_id_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)cell_id_0 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(cell_id_0);
        }
        adj_cell_ptr_0 = RogueLikeDungeonRuntimeMgr::findCell(this, *cell_id_0);
        if ( adj_cell_ptr_0 )
        {
          if ( *(_BYTE *)(((unsigned __int64)dir_0 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)dir_0 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)dir_0 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(dir_0);
          }
          opposite_dir_0 = RogueLikeDungeonRuntimeMgr::getOppositeDir(*dir_0);
          RogueCell::openDoor(adj_cell_ptr_0, opposite_dir_0);
        }
        else
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 80),
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "afterChangeCellState",
            3106);
          v13 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                  (common::milog::MiLogStream *const)(v3 + 80),
                  (const char (*)[39])"[ROGUE] adj cell not existed, cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, cell_id_0);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
        }
        std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator++(&__for_begin);
      }
    }
    else if ( target_state == ROGUE_CELL_TAKEN_CHEST )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell->type);
      }
      if ( cell->type != ROGUE_CELL_TYPE_CHEST )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 80),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "afterChangeCellState",
          3120);
        v14 = common::milog::MiLogStream::operator<<<char [59],(char *[59])0>(
                (common::milog::MiLogStream *const)(v3 + 80),
                (const char (*)[59])"[ROGUE] only chest cell can change to this state, cell_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &cell->cell_id);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
        v7 = -1;
        goto LABEL_156;
      }
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v68);
      v15 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v68)->design_config.txt_config_mgr.activity_rogue_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&cell->cell_id);
      }
      v16 = cell->cell_id;
      if ( *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell->dungeon_id);
      }
      ActivityRogueExcelConfigMgr::findCellAjdMap((RogueCellAdjMap *)(v3 + 144), v15, cell->dungeon_id, v16);
      std::shared_ptr<Config>::~shared_ptr(&v68);
      __for_range_1 = (std::map<data::RogueGadgetDirType,unsigned int> *)(v3 + 144);
      __for_begin._M_node = std::map<data::RogueGadgetDirType,unsigned int>::begin((std::map<data::RogueGadgetDirType,unsigned int> *const)(v3 + 144))._M_node;
      __for_end._M_node = std::map<data::RogueGadgetDirType,unsigned int>::end((std::map<data::RogueGadgetDirType,unsigned int> *const)(v3 + 144))._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v49 = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator*(&__for_begin);
        dir_1 = std::get<0ul,data::RogueGadgetDirType const,unsigned int>(v49);
        v17 = std::get<1ul,data::RogueGadgetDirType const,unsigned int>(v49);
        cell_id_1 = v17;
        if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v17 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v17);
        }
        adj_cell_ptr_1 = RogueLikeDungeonRuntimeMgr::findCell(this, *cell_id_1);
        if ( adj_cell_ptr_1 )
        {
          adj_cell = adj_cell_ptr_1;
          if ( RogueCell::isCellFinish(adj_cell_ptr_1) )
            goto LABEL_83;
          if ( *(_BYTE *)(((unsigned __int64)&adj_cell->type >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)adj_cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&adj_cell->type >> 3)
                                                                    + 0x7FFF8000) )
          {
            __asan_report_load4(&adj_cell->type);
          }
          if ( adj_cell->type == ROGUE_CELL_TYPE_INIT )
LABEL_83:
            v19 = 1;
          else
            v19 = 0;
          if ( v19 )
          {
            if ( *(_BYTE *)(((unsigned __int64)dir_1 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)dir_1 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)dir_1 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(dir_1);
            }
            RogueCell::openDoor(cell, *dir_1);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 80),
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "afterChangeCellState",
            3129);
          v18 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                  (common::milog::MiLogStream *const)(v3 + 80),
                  (const char (*)[37])"[ROGUE] adj cell not found, cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, cell_id_1);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
        }
        std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator++(&__for_begin);
      }
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell->type);
      }
      if ( cell->type == ROGUE_CELL_TYPE_BOSS || cell->type == ROGUE_CELL_TYPE_CHEST )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 80),
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "afterChangeCellState",
          3143);
        common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
          (common::milog::MiLogStream *const)(v3 + 80),
          (const char (*)[34])"[ROGUE] boss cell changes to none");
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
        goto LABEL_118;
      }
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v68);
      v20 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v68)->design_config.txt_config_mgr.activity_rogue_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&cell->cell_id);
      }
      v21 = cell->cell_id;
      if ( *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)cell + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&cell->dungeon_id);
      }
      ActivityRogueExcelConfigMgr::findCellAjdMap((RogueCellAdjMap *)(v3 + 144), v20, cell->dungeon_id, v21);
      std::shared_ptr<Config>::~shared_ptr(&v68);
      __for_range_2 = (std::map<data::RogueGadgetDirType,unsigned int> *)(v3 + 144);
      __for_begin._M_node = std::map<data::RogueGadgetDirType,unsigned int>::begin((std::map<data::RogueGadgetDirType,unsigned int> *const)(v3 + 144))._M_node;
      __for_end._M_node = std::map<data::RogueGadgetDirType,unsigned int>::end((std::map<data::RogueGadgetDirType,unsigned int> *const)(v3 + 144))._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v43 = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator*(&__for_begin);
        dir_2 = std::get<0ul,data::RogueGadgetDirType const,unsigned int>(v43);
        v22 = std::get<1ul,data::RogueGadgetDirType const,unsigned int>(v43);
        cell_id_2 = v22;
        if ( *(_BYTE *)(((unsigned __int64)v22 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v22 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v22 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v22);
        }
        adj_cell_ptr_2 = RogueLikeDungeonRuntimeMgr::findCell(this, *cell_id_2);
        if ( adj_cell_ptr_2 )
        {
          adj_cell_0 = adj_cell_ptr_2;
          if ( RogueCell::isCellFinish(adj_cell_ptr_2) )
            goto LABEL_110;
          if ( *(_BYTE *)(((unsigned __int64)&adj_cell_0->type >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)adj_cell_0 + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&adj_cell_0->type >> 3)
                                                                      + 0x7FFF8000) )
          {
            __asan_report_load4(&adj_cell_0->type);
          }
          if ( adj_cell_0->type == ROGUE_CELL_TYPE_INIT )
LABEL_110:
            v24 = 1;
          else
            v24 = 0;
          if ( v24 )
          {
            if ( *(_BYTE *)(((unsigned __int64)dir_2 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)dir_2 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)dir_2 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4(dir_2);
            }
            RogueCell::openDoor(cell, *dir_2);
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)(v3 + 80),
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "afterChangeCellState",
            3153);
          v23 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                  (common::milog::MiLogStream *const)(v3 + 80),
                  (const char (*)[37])"[ROGUE] adj cell not found, cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v23, cell_id_2);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
        }
        std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator++(&__for_begin);
      }
    }
    goto LABEL_117;
  }
  if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&cell->type);
  }
  if ( cell->type != ROGUE_CELL_TYPE_ELITE && cell->type != ROGUE_CELL_TYPE_NORMAL )
  {
    if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&cell->type);
    }
    if ( cell->type == ROGUE_CELL_TYPE_BOSS )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v3 + 80),
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "afterChangeCellState",
        3066);
      common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
        (common::milog::MiLogStream *const)(v3 + 80),
        (const char (*)[37])"[ROGUE] boss cell changes to success");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
      goto LABEL_118;
    }
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v68);
    v8 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v68)->design_config.txt_config_mgr.activity_rogue_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&cell->cell_id);
    }
    v9 = cell->cell_id;
    if ( *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&cell->dungeon_id);
    }
    ActivityRogueExcelConfigMgr::findCellAjdMap((RogueCellAdjMap *)(v3 + 144), v8, cell->dungeon_id, v9);
    std::shared_ptr<Config>::~shared_ptr(&v68);
    __for_range = (std::map<data::RogueGadgetDirType,unsigned int> *)(v3 + 144);
    __for_begin._M_node = std::map<data::RogueGadgetDirType,unsigned int>::begin((std::map<data::RogueGadgetDirType,unsigned int> *const)(v3 + 144))._M_node;
    __for_end._M_node = std::map<data::RogueGadgetDirType,unsigned int>::end((std::map<data::RogueGadgetDirType,unsigned int> *const)(v3 + 144))._M_node;
    while ( std::operator!=(&__for_begin, &__for_end) )
    {
      __in = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator*(&__for_begin);
      dir = std::get<0ul,data::RogueGadgetDirType const,unsigned int>(__in);
      cell_id = std::get<1ul,data::RogueGadgetDirType const,unsigned int>(__in);
      if ( *(_BYTE *)(((unsigned __int64)dir >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)dir & 7) + 3) >= *(_BYTE *)(((unsigned __int64)dir >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(dir);
      }
      RogueCell::openDoor(cell, *dir);
      if ( *(_BYTE *)(((unsigned __int64)cell_id >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)cell_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)cell_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(cell_id);
      }
      adj_cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *cell_id);
      if ( adj_cell_ptr )
      {
        if ( *(_BYTE *)(((unsigned __int64)dir >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)dir & 7) + 3) >= *(_BYTE *)(((unsigned __int64)dir >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(dir);
        }
        opposite_dir = RogueLikeDungeonRuntimeMgr::getOppositeDir(*dir);
        RogueCell::openDoor(adj_cell_ptr, opposite_dir);
      }
      else
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)(v3 + 80),
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "afterChangeCellState",
          3080);
        v10 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
                (common::milog::MiLogStream *const)(v3 + 80),
                (const char (*)[39])"[ROGUE] adj cell not existed, cell_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, cell_id);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
      }
      std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator++(&__for_begin);
    }
LABEL_117:
    std::map<data::RogueGadgetDirType,unsigned int>::~map((std::map<data::RogueGadgetDirType,unsigned int> *const)(v3 + 144));
    goto LABEL_118;
  }
LABEL_9:
  RogueCell::closeAllDoors(cell);
LABEL_118:
  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
  effect_cell_param = RoguelikeMiscMgr::getRoguelikeEfffectCellParam(misc_mgr);
  if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&cell->type);
  }
  rogue_gadget_state = RogueLikeDungeonRuntimeMgr::getCellGadgetStateByCellState(cell->type, target_state);
  if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&cell->type);
  }
  type = cell->type;
  if ( type == ROGUE_CELL_TYPE_SPRING )
  {
    revive_gadget_state = rogue_gadget_state;
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v3 + 80),
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "afterChangeCellState",
      3185);
    v26 = common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
            (common::milog::MiLogStream *const)(v3 + 80),
            (const char (*)[23])"[ROGUE] is_ban_spring:");
    if ( *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_spring >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)effect_cell_param + 58) & 7) >= *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_spring >> 3)
                                                                     + 0x7FFF8000) )
    {
      __asan_report_load1(&effect_cell_param->is_ban_spring);
    }
    common::milog::MiLogStream::operator<<(v26, effect_cell_param->is_ban_spring);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v3 + 80));
    if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&cell->state);
    }
    if ( cell->state != ROGUE_CELL_FINISH )
    {
      if ( *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_spring >> 3) + 0x7FFF8000) != 0
        && (((unsigned __int8)effect_cell_param + 58) & 7) >= *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_spring >> 3)
                                                                       + 0x7FFF8000) )
      {
        __asan_report_load1(&effect_cell_param->is_ban_spring);
      }
      if ( effect_cell_param->is_ban_spring )
        revive_gadget_state = ROGUE_GADGET_STATE_OPERATOR_FORBID;
    }
    RogueCell::setOperatorState(cell, ROGUE_GADGET_TYPE_SPRING_OPERATOR_REVEAL, revive_gadget_state);
  }
  else if ( type <= ROGUE_CELL_TYPE_SPRING )
  {
    switch ( type )
    {
      case ROGUE_CELL_TYPE_NORMAL:
        RogueCell::setOperatorState(cell, ROGUE_GADGET_TYPE_NORMAL_OPERATOR, rogue_gadget_state);
        break;
      case ROGUE_CELL_TYPE_STORE:
        RogueCell::setOperatorState(cell, ROGUE_GADGET_TYPE_SPRING_STORE, rogue_gadget_state);
        break;
      case ROGUE_CELL_TYPE_ELITE:
        RogueCell::setOperatorState(cell, ROGUE_GADGET_TYPE_ELITE_OPERATOR, rogue_gadget_state);
        break;
    }
  }
  __for_range_3 = &cell->guard_gadget_wtr_vec;
  __for_begin._M_node = (std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::_Base_ptr)std::vector<std::weak_ptr<Gadget>>::begin(&cell->guard_gadget_wtr_vec)._M_current;
  __for_end._M_node = (std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::_Base_ptr)std::vector<std::weak_ptr<Gadget>>::end(__for_range_3)._M_current;
  while ( __gnu_cxx::operator!=<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>(
            (const __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget>*,std::vector<std::weak_ptr<Gadget>> > *)&__for_begin,
            (const __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget>*,std::vector<std::weak_ptr<Gadget>> > *)&__for_end) )
  {
    guard_gadget_wtr = __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>::operator*((const __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget>*,std::vector<std::weak_ptr<Gadget>> > *const)&__for_begin);
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v3 + 48));
    if ( !std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v3 + 48)) )
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v68);
      v27 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v68);
      gadget_state = ActivityRogueExcelConfigMgr::findGadgetStateByStateType(
                       &v27->design_config.txt_config_mgr.activity_rogue_config_mgr,
                       ROGUE_GADGET_TYPE_GUARD,
                       rogue_gadget_state);
      std::shared_ptr<Config>::~shared_ptr(&v68);
      if ( *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_guardian >> 3) + 0x7FFF8000) != 0
        && (((unsigned __int8)effect_cell_param + 57) & 7) >= *(_BYTE *)(((unsigned __int64)&effect_cell_param->is_ban_guardian >> 3)
                                                                       + 0x7FFF8000) )
      {
        __asan_report_load1(&effect_cell_param->is_ban_guardian);
      }
      if ( effect_cell_param->is_ban_guardian )
      {
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v68);
        v28 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v68);
        gadget_state = ActivityRogueExcelConfigMgr::findGadgetStateByStateType(
                         &v28->design_config.txt_config_mgr.activity_rogue_config_mgr,
                         ROGUE_GADGET_TYPE_GUARD,
                         ROGUE_GADGET_STATE_OPERATOR_FORBID);
        std::shared_ptr<Config>::~shared_ptr(&v68);
      }
      v29 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
      Gadget::setState(v29, gadget_state, 0, 1);
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v3 + 48));
    __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>::operator++((__gnu_cxx::__normal_iterator<std::weak_ptr<Gadget>*,std::vector<std::weak_ptr<Gadget>> > *const)&__for_begin);
  }
  if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_store4(&cell->state, &__for_end, &cell->state);
  }
  cell->state = target_state;
  proto::RogueCellUpdateNotify::RogueCellUpdateNotify((proto::RogueCellUpdateNotify *const)(v3 + 80));
  v30 = proto::RogueCellUpdateNotify::mutable_cell_info((proto::RogueCellUpdateNotify *const)(v3 + 80));
  RogueCell::toClient(cell, v30);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  Player::sendProto(this->player_, (const google::protobuf::Message *)(v3 + 80));
  v7 = 0;
  proto::RogueCellUpdateNotify::~RogueCellUpdateNotify((proto::RogueCellUpdateNotify *const)(v3 + 80));
LABEL_156:
  result = v7;
  if ( v69 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 3226: range 0000000015945D8C-00000000159465F5
int32_t __cdecl RogueLikeDungeonRuntimeMgr::internalChangeCellState(
        RogueLikeDungeonRuntimeMgr *const this,
        RogueCell *cell,
        proto::RogueCellState target_state,
        proto::RogueEliteCellDifficultyType diff)
{
  unsigned __int64 v4; // r12
  __int64 v5; // rax
  _DWORD *v6; // r13
  int32_t v7; // r14d
  const ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  uint32_t cell_id; // ecx
  common::milog::MiLogStream *v10; // rax
  char *v11; // rsi
  unsigned __int64 v12; // rax
  char v13; // dl
  __int64 v14; // rdx
  std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rdx
  char v16; // cl
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::key_type *p_k; // rsi
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::mapped_type *v18; // rax
  uint32_t *v19; // rdx
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::mapped_type *v20; // rax
  uint32_t *v21; // rdx
  uint32_t v22; // r14d
  __int64 v23; // rax
  char v24; // dl
  __int64 v25; // rdx
  uint32_t v26; // esi
  common::milog::MiLogStream *v27; // r14
  std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v28; // rax
  Group *v29; // rax
  int32_t result; // eax
  std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::key_type __k; // [rsp+20h] [rbp-E0h] BYREF
  uint32_t pool_id; // [rsp+24h] [rbp-DCh]
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+28h] [rbp-D8h]
  common::milog::MiLogStream v38; // [rsp+30h] [rbp-D0h] BYREF
  char v39[176]; // [rsp+50h] [rbp-B0h] BYREF

  v4 = (unsigned __int64)v39;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_1(128LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "3 32 16 22 dungeon_scene_ptr:3237 64 16 14 event_ptr:3249 96 16 14 group_ptr:3264";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::internalChangeCellState;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -219021312;
  v6[536862722] = -219021312;
  v6[536862723] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&cell->state);
  }
  if ( target_state == cell->state )
  {
    common::milog::MiLogStream::create(
      &v38,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "internalChangeCellState",
      3229);
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
      &v38,
      (const char (*)[41])"[ROGUE] state is same, no need to change");
    common::milog::MiLogStream::~MiLogStream(&v38);
    v7 = 0;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&cell->type);
    }
    if ( cell->type == ROGUE_CELL_TYPE_ELITE )
    {
      std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v4 + 32));
      if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v4 + 32)) )
      {
        common::milog::MiLogStream::create(
          &v38,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "internalChangeCellState",
          3240);
        common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
          &v38,
          (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
        common::milog::MiLogStream::~MiLogStream(&v38);
        v7 = -1;
      }
      else
      {
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)(v4 + 96));
        p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96))->design_config.txt_config_mgr.activity_rogue_config_mgr;
        if ( *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&cell->cell_id >> 3) + 0x7FFF8000) <= 3 )
        {
          p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell->cell_id;
          __asan_report_load4(&cell->cell_id);
        }
        cell_id = cell->cell_id;
        if ( *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)cell + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell->dungeon_id >> 3) + 0x7FFF8000) )
        {
          p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell->dungeon_id;
          __asan_report_load4(&cell->dungeon_id);
        }
        cell_config_ptr = ActivityRogueExcelConfigMgr::findDungeonCellConfigByDungeonIdAndCellId(
                            p_activity_rogue_config_mgr,
                            cell->dungeon_id,
                            cell_id);
        std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v4 + 96));
        if ( cell_config_ptr )
        {
          common::tools::perf::make_shared<Event>();
          v11 = (char *)(v4 + 64);
          if ( std::operator!=<Event>(0LL, (const std::shared_ptr<Event> *)(v4 + 64)) )
          {
            v12 = (unsigned __int64)std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 64));
            v13 = *(_BYTE *)((v12 >> 3) + 0x7FFF8000);
            LOBYTE(v11) = v13 != 0;
            v14 = (v13 != 0) & (unsigned __int8)(v13 <= 3);
            if ( (_BYTE)v14 )
              v12 = __asan_report_store4(v12, v11, v14);
            *(_DWORD *)v12 = 90;
            v15 = std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 64));
            v16 = *(_BYTE *)(((unsigned __int64)&v15->param1 >> 3) + 0x7FFF8000);
            if ( v16 != 0 && (char)((((_BYTE)v15 + 44) & 7) + 3) >= v16 )
            {
              LOBYTE(v11) = v16 != 0;
              __asan_report_store4(&v15->param1, v11, v15);
            }
            v15->param1 = target_state;
            pool_id = 0;
            if ( diff )
            {
              __k = ROGUE_MONSTER_DIFFICULTY_ELITE_HARD;
              p_k = &__k;
              v20 = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::operator[](
                      &cell->diff_montser_pool_map,
                      &__k);
              v21 = v20;
              if ( *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v20 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v20);
              }
              pool_id = *v21;
            }
            else
            {
              __k = ROGUE_MONSTER_DIFFICULTY_ELITE_EASY;
              p_k = &__k;
              v18 = std::map<data::RogueMonsterPoolDifficultyType,unsigned int>::operator[](
                      &cell->diff_montser_pool_map,
                      &__k);
              v19 = v18;
              if ( *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v18 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v18);
              }
              pool_id = *v19;
            }
            v22 = pool_id;
            v23 = (__int64)std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 64));
            v24 = *(_BYTE *)(((unsigned __int64)(v23 + 48) >> 3) + 0x7FFF8000);
            LOBYTE(p_k) = v24 != 0;
            v25 = (v24 != 0) & (unsigned __int8)(v24 <= 3);
            if ( (_BYTE)v25 )
              v23 = __asan_report_store4(v23 + 48, p_k, v25);
            *(_DWORD *)(v23 + 48) = v22;
            v26 = (unsigned int)std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
            if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&cell_config_ptr->group_id);
            }
            Scene::findGroup((Scene *const)(v4 + 96), v26);
            if ( std::operator!=<Group>(0LL, (const std::shared_ptr<Group> *)(v4 + 96)) )
            {
              common::milog::MiLogStream::create(
                &v38,
                &common::milog::MiLogDefault::default_log_obj_,
                1u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "internalChangeCellState",
                3267);
              v27 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                      &v38,
                      (const char (*)[29])"[ROGUE] handEvent, group_id:");
              v28 = std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
              __k = Group::getGroupId(v28);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v27, (const unsigned int *)&__k);
              common::milog::MiLogStream::~MiLogStream(&v38);
              v29 = std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
              Group::handleEvent(v29, (EventPtr *)(v4 + 64));
            }
            std::shared_ptr<Group>::~shared_ptr((std::shared_ptr<Group> *const)(v4 + 96));
          }
          v7 = RogueLikeDungeonRuntimeMgr::afterChangeCellState(this, cell, target_state);
          std::shared_ptr<Event>::~shared_ptr((std::shared_ptr<Event> *const)(v4 + 64));
        }
        else
        {
          common::milog::MiLogStream::create(
            &v38,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "internalChangeCellState",
            3246);
          v10 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  &v38,
                  (const char (*)[44])"[ROGUE] cell config ptr not found, cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &cell->cell_id);
          common::milog::MiLogStream::~MiLogStream(&v38);
          v7 = -1;
        }
      }
      std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v4 + 32));
    }
    else
    {
      common::milog::MiLogStream::create(
        &v38,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "internalChangeCellState",
        3234);
      common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
        &v38,
        (const char (*)[47])"[ROGUE] this function can only called by ELITE");
      common::milog::MiLogStream::~MiLogStream(&v38);
      v7 = -1;
    }
  }
  result = v7;
  if ( v39 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3276: range 00000000159465F6-000000001594670A
bool __cdecl RogueLikeDungeonRuntimeMgr::isPlayerInDungeon(
        RogueLikeDungeonRuntimeMgr *const this,
        DungeonScenePtr *p_dungeon_scene_ptr)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  bool v5; // r14
  bool result; // al
  char v7[112]; // [rsp+10h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v7;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 22 rogue_dungeon_ptr:3277";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::isPlayerInDungeon;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v2 + 32));
  v5 = !std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v2 + 32), 0LL)
    && std::operator==<DungeonScene,DungeonScene>((const std::shared_ptr<DungeonScene> *)(v2 + 32), p_dungeon_scene_ptr);
  std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 32));
  result = v5;
  if ( v7 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3286: range 000000001594670C-0000000015946C41
int32_t __cdecl RogueLikeDungeonRuntimeMgr::giveUp(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // r12
  __int64 v2; // rax
  _DWORD *v3; // r13
  int32_t v4; // r14d
  RogueTeam *p_rogue_team; // rdx
  bool isPlayerInDungeon; // r14
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  DungeonScene *v8; // rax
  int32_t result; // eax
  std::shared_ptr<Scene> __r; // [rsp+10h] [rbp-C0h] BYREF
  common::milog::MiLogStream v11; // [rsp+20h] [rbp-B0h] BYREF
  char v12[144]; // [rsp+40h] [rbp-90h] BYREF

  v1 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_1(96LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "2 32 16 18 cur_scene_ptr:3292 64 16 22 dungeon_scene_ptr:3298";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::giveUp;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -219021312;
  v3[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v11,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "giveUp",
      3289);
    common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(&v11, (const char (*)[21])"[ROGUE] is not valid");
    common::milog::MiLogStream::~MiLogStream(&v11);
    v4 = -1;
    goto LABEL_25;
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v1 + 32));
  if ( !std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v1 + 32)) )
  {
    std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v1 + 64));
    if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v1 + 64)) )
    {
      p_rogue_team = &this->rogue_team_;
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      RogueTeam::recallAllAvatars(p_rogue_team, this->player_);
      if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->activity_);
      BaseActivity::notifyClientData(this->activity_, 0);
      RogueLikeDungeonRuntimeMgr::clearOneOffEntities(this);
      RogueLikeDungeonRuntimeMgr::clearAll(this);
      common::milog::MiLogStream::create(
        &v11,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "giveUp",
        3306);
      common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
        &v11,
        (const char (*)[37])"[ROGUE] client giveup clear all data");
      common::milog::MiLogStream::~MiLogStream(&v11);
      v4 = 0;
      goto LABEL_23;
    }
    std::dynamic_pointer_cast<DungeonScene,Scene>(&__r);
    isPlayerInDungeon = RogueLikeDungeonRuntimeMgr::isPlayerInDungeon(this, (DungeonScenePtr *)&__r);
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&__r);
    if ( isPlayerInDungeon )
    {
      v7 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 64));
      if ( DungeonScene::getDungeonResult(v7) )
      {
        common::milog::MiLogStream::create(
          &v11,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "giveUp",
          3321);
        common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
          &v11,
          (const char (*)[32])"[ROGUE] dungeon already settled");
        common::milog::MiLogStream::~MiLogStream(&v11);
        v4 = 0;
LABEL_23:
        std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v1 + 64));
        goto LABEL_24;
      }
      v8 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 64));
      DungeonScene::settle(v8, DUNGEON_RESULT_FAIL);
    }
    v4 = 0;
    goto LABEL_23;
  }
  common::milog::MiLogStream::create(
    &v11,
    &common::milog::MiLogDefault::default_log_obj_,
    3u,
    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
    "giveUp",
    3295);
  common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
    &v11,
    (const char (*)[29])"[ROGUE] cur scene is nullptr");
  common::milog::MiLogStream::~MiLogStream(&v11);
  v4 = -1;
LABEL_24:
  std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v1 + 32));
LABEL_25:
  result = v4;
  if ( v12 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 3330: range 00000000159470BE-0000000015947B04
__int64 __fastcall RogueLikeDungeonRuntimeMgr::healOnstageAvatars(
        RogueLikeDungeonRuntimeMgr *const this,
        uint32_t dungeon_id,
        uint32_t cell_id,
        __m128i a4)
{
  unsigned __int64 v4; // r12
  __int64 v5; // rax
  _DWORD *v6; // r13
  unsigned int v7; // r14d
  common::milog::MiLogStream *v8; // rax
  bool *p_is_ban_spring; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  common::milog::MiLogStream *v14; // rax
  PlayerBasicComp *BasicComp; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v18; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rcx
  Player *player; // r14
  __int64 result; // rax
  std::string v22; // [rsp+0h] [rbp-130h]
  RogueLikeDungeonRuntimeMgr *thisa; // [rsp+8h] [rbp-128h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+20h] [rbp-110h]
  const RoguelikeEfffectCellParam *effect_cell_param; // [rsp+28h] [rbp-108h]
  RogueCell *cell_ptr; // [rsp+30h] [rbp-100h]
  RogueStageData *stage_ptr; // [rsp+38h] [rbp-F8h]
  std::shared_ptr<google::protobuf::Message> p_body_ptr; // [rsp+40h] [rbp-F0h] BYREF
  std::shared_ptr<google::protobuf::Message> v29; // [rsp+50h] [rbp-E0h] BYREF
  common::milog::MiLogStream v30; // [rsp+60h] [rbp-D0h] BYREF
  char v31[176]; // [rsp+80h] [rbp-B0h] BYREF

  v22._M_string_length = (std::string::size_type)this;
  v22._M_dataplus._M_p = (std::string::pointer)__PAIR64__(dungeon_id, cell_id);
  v4 = (unsigned __int64)v31;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_1(128LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "4 32 1 11 holder:3401 48 4 12 cell_id:3329 64 16 19 change_hp_func:3365 96 16 12 log_ptr:3402";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::healOnstageAvatars;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556927;
  v6[536862722] = -219021312;
  v6[536862723] = -202178560;
  *(_DWORD *)(v4 + 48) = v22._M_dataplus._M_p;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v30,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "healOnstageAvatars",
      3333);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v30, (const char (*)[24])"[ROGUE] is_valid_ false");
    common::milog::MiLogStream::~MiLogStream(&v30);
    v7 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->dungeon_id_);
    }
    if ( dungeon_id == this->dungeon_id_ )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->activity_);
      misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
      effect_cell_param = RoguelikeMiscMgr::getRoguelikeEfffectCellParam(misc_mgr);
      p_is_ban_spring = &effect_cell_param->is_ban_spring;
      if ( *(_BYTE *)(((unsigned __int64)p_is_ban_spring >> 3) + 0x7FFF8000) != 0
        && ((unsigned __int8)p_is_ban_spring & 7) >= *(_BYTE *)(((unsigned __int64)p_is_ban_spring >> 3) + 0x7FFF8000) )
      {
        __asan_report_load1(p_is_ban_spring);
      }
      if ( effect_cell_param->is_ban_spring )
      {
        v7 = 10049;
      }
      else
      {
        cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v4 + 48));
        if ( cell_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3)
                                                                    + 0x7FFF8000) )
          {
            __asan_report_load4(&cell_ptr->type);
          }
          if ( cell_ptr->type == ROGUE_CELL_TYPE_SPRING )
          {
            if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&cell_ptr->state);
            }
            if ( cell_ptr->state == ROGUE_CELL_FINISH )
            {
              common::milog::MiLogStream::create(
                &v30,
                &common::milog::MiLogDefault::default_log_obj_,
                1u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "healOnstageAvatars",
                3360);
              v12 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                      &v30,
                      (const char (*)[53])"[ROGUE] cell is finish cannot heal avatars, cell_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v12,
                (const unsigned int *)(v4 + 48));
              common::milog::MiLogStream::~MiLogStream(&v30);
              v7 = -1;
            }
            else
            {
              ServiceBox::findService<GameserverService>();
              GameserverService::getConfig((GameserverService *const)&v29);
              v13 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v29);
              *(float *)a4.m128i_i32 = ConstValueExcelConfigMgr::getRogueRecoverCellHpRatio(&v13->design_config.txt_config_mgr.const_value_config_mgr);
              *((_DWORD *)&v22._anon_0._M_allocated_capacity + 3) = _mm_cvtsi128_si32(a4);
              std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v29);
              *(_QWORD *)(v4 + 64) = this;
              *(_DWORD *)(v4 + 72) = *((_DWORD *)&v22._anon_0._M_allocated_capacity + 3);
              RogueLikeDungeonRuntimeMgr::healOnstageAvatars(unsigned int,unsigned int)::{lambda(std::vector<unsigned long> const&)#1}::operator()(
                (const RogueLikeDungeonRuntimeMgr::healOnstageAvatars::<lambda(const std::vector<long unsigned int>&)> *const)(v4 + 64),
                &this->rogue_team_.onstage_mirror_avatar_guid_vec);
              RogueLikeDungeonRuntimeMgr::healOnstageAvatars(unsigned int,unsigned int)::{lambda(std::vector<unsigned long> const&)#1}::operator()(
                (const RogueLikeDungeonRuntimeMgr::healOnstageAvatars::<lambda(const std::vector<long unsigned int>&)> *const)(v4 + 64),
                &this->rogue_team_.backstage_mirror_avatar_guid_vec);
              RogueLikeDungeonRuntimeMgr::internalChangeCellState(this, cell_ptr, ROGUE_CELL_FINISH);
              stage_ptr = RogueLikeDungeonRuntimeMgr::getStage(this);
              if ( stage_ptr )
              {
                if ( *(char *)(((unsigned __int64)&stage_ptr->is_used_spring >> 3) + 0x7FFF8000) < 0 )
                  __asan_report_store1(&stage_ptr->is_used_spring, cell_ptr, &stage_ptr->is_used_spring);
                stage_ptr->is_used_spring = 1;
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->player_);
                BasicComp = Player::getBasicComp(this->player_);
                PlayerBasicComp::getNextTransNo[abi:cxx11]((std::string *)&v30, BasicComp);
                StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v4 + 32), 0xDD7u, v22);
                std::string::~string(&v30);
                common::tools::perf::make_shared<proto_log::PlayerLogBodyRogueHeal>();
                v16 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
                if ( *(_BYTE *)(((unsigned __int64)&thisa->stage_id_ >> 3) + 0x7FFF8000) != 0
                  && *(_BYTE *)(((unsigned __int64)&thisa->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
                {
                  __asan_report_load4(&thisa->stage_id_);
                }
                proto_log::PlayerLogBodyRogueHeal::set_stage_id(v16, thisa->stage_id_);
                v17 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
                proto_log::PlayerLogBodyRogueHeal::set_cell_id(v17, *(_DWORD *)(v4 + 48));
                v18 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
                proto_log::PlayerLogBodyRogueHeal::set_rogue_transaction(v18, &stage_ptr->transaction);
                v19 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueHeal,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
                if ( *(_BYTE *)(((unsigned __int64)&thisa->cur_level_ >> 3) + 0x7FFF8000) != 0
                  && *(_BYTE *)(((unsigned __int64)&thisa->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
                {
                  __asan_report_load4(&thisa->cur_level_);
                }
                proto_log::PlayerLogBodyRogueHeal::set_level(v19, thisa->cur_level_);
                if ( *(_BYTE *)(((unsigned __int64)&thisa->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&thisa->player_);
                player = thisa->player_;
                std::shared_ptr<google::protobuf::Message>::shared_ptr(&v29, 0LL);
                std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyRogueHeal,void>(
                  &p_body_ptr,
                  (const std::shared_ptr<proto_log::PlayerLogBodyRogueHeal> *)(v4 + 96));
                Player::printStatLog(player, &p_body_ptr, &v29, 0xEu);
                std::shared_ptr<google::protobuf::Message>::~shared_ptr(&p_body_ptr);
                std::shared_ptr<google::protobuf::Message>::~shared_ptr(&v29);
                v7 = 0;
                std::shared_ptr<proto_log::PlayerLogBodyRogueHeal>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyRogueHeal> *const)(v4 + 96));
                StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v4 + 32));
              }
              else
              {
                common::milog::MiLogStream::create(
                  &v30,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "healOnstageAvatars",
                  3396);
                v14 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                        &v30,
                        (const char (*)[35])"[ROGUE] stage not found, stage_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &this->stage_id_);
                common::milog::MiLogStream::~MiLogStream(&v30);
                v7 = -1;
              }
            }
          }
          else
          {
            common::milog::MiLogStream::create(
              &v30,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "healOnstageAvatars",
              3355);
            v11 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                    &v30,
                    (const char (*)[38])"[ROGUE] cell is not spring!, cell_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v4 + 48));
            common::milog::MiLogStream::~MiLogStream(&v30);
            v7 = -1;
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v30,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "healOnstageAvatars",
            3350);
          v10 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                  &v30,
                  (const char (*)[33])"[ROGUE] cell not found, cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v4 + 48));
          common::milog::MiLogStream::~MiLogStream(&v30);
          v7 = -1;
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v30,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "healOnstageAvatars",
        3338);
      v8 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
             &v30,
             (const char (*)[43])"[ROGUE] dungeon_id not match, dungeon_id_:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &this->dungeon_id_);
      common::milog::MiLogStream::~MiLogStream(&v30);
      v7 = -1;
    }
  }
  result = v7;
  if ( v31 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3365: range 0000000015946C42-00000000159470BD
void __cdecl RogueLikeDungeonRuntimeMgr::healOnstageAvatars(unsigned int,unsigned int)::{lambda(std::vector<unsigned long> const&)#1}::operator()(
        const RogueLikeDungeonRuntimeMgr::healOnstageAvatars::<lambda(const std::vector<long unsigned int>&)> *const __closure,
        const std::vector<long unsigned int> *guid_vec)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  RogueLikeDungeonRuntimeMgr *this; // rax
  unsigned __int64 v6; // rax
  RogueLikeDungeonRuntimeMgr *v7; // rax
  PlayerAvatarComp *AvatarComp; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  Avatar *v12; // rax
  Creature *p_heal_percent; // rdi
  std::vector<long unsigned int>::const_iterator __for_begin; // [rsp+10h] [rbp-D0h] BYREF
  std::vector<long unsigned int>::const_iterator __for_end; // [rsp+18h] [rbp-C8h] BYREF
  RoguelikeMiscMgr *misc_mgr; // [rsp+20h] [rbp-C0h]
  const std::vector<long unsigned int> *__for_range; // [rsp+28h] [rbp-B8h]
  common::milog::MiLogStream v19; // [rsp+30h] [rbp-B0h] BYREF
  char v20[144]; // [rsp+50h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 17 onstage_guid:3368 64 16 15 avatar_ptr:3370";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::healOnstageAvatars(unsigned int,unsigned int)::{lambda(std::vector<unsigned long> const&)#1}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  this = __closure->__this;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__this->activity_ >> 3) + 0x7FFF8000) )
    this = (RogueLikeDungeonRuntimeMgr *)__asan_report_load8(&__closure->__this->activity_);
  misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
  __for_range = guid_vec;
  __for_begin._M_current = std::vector<unsigned long>::begin(guid_vec)._M_current;
  __for_end._M_current = std::vector<unsigned long>::end(guid_vec)._M_current;
  while ( __gnu_cxx::operator!=<unsigned long const*,std::vector<unsigned long>>(&__for_begin, &__for_end) )
  {
    v6 = (unsigned __int64)__gnu_cxx::__normal_iterator<unsigned long const*,std::vector<unsigned long>>::operator*(&__for_begin);
    if ( *(_BYTE *)((v6 >> 3) + 0x7FFF8000) )
      v6 = __asan_report_load8(v6);
    *(_QWORD *)(v2 + 32) = *(_QWORD *)v6;
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8(__closure);
    v7 = __closure->__this;
    if ( *(_BYTE *)(((unsigned __int64)&__closure->__this->player_ >> 3) + 0x7FFF8000) )
      v7 = (RogueLikeDungeonRuntimeMgr *)__asan_report_load8(&__closure->__this->player_);
    AvatarComp = Player::getAvatarComp(v7->player_);
    PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v2 + 64), (uint64_t)AvatarComp);
    if ( std::operator==<Avatar>(0LL, (const std::shared_ptr<Avatar> *)(v2 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v19,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "operator()",
        3373);
      v9 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
             &v19,
             (const char (*)[37])"[ROGUE] avatar_ptr is nullptr, guid:");
      common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v9, (const unsigned __int64 *)(v2 + 32));
      common::milog::MiLogStream::~MiLogStream(&v19);
    }
    else if ( RoguelikeMiscMgr::isAvatarBanHeal(misc_mgr, *(_QWORD *)(v2 + 32)) )
    {
      common::milog::MiLogStream::create(
        &v19,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "operator()",
        3378);
      v10 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
              &v19,
              (const char (*)[38])"[ROGUE] avatar heal has banned, guid:");
      common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v10, (const unsigned __int64 *)(v2 + 32));
      common::milog::MiLogStream::~MiLogStream(&v19);
    }
    else
    {
      v11 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      if ( Creature::getLifeState(v11) == LIFE_DEAD )
      {
        v12 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
        Avatar::setLifeAlive(v12, 0x6Fu, 0LL, 1);
      }
      p_heal_percent = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&__closure->__heal_percent >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&__closure->__heal_percent >> 3) + 0x7FFF8000) <= 3 )
      {
        p_heal_percent = (Creature *)&__closure->__heal_percent;
        __asan_report_load4(&__closure->__heal_percent);
      }
      Creature::changeCurHpPercent(p_heal_percent, __closure->__heal_percent, CHANGE_HP_ADD_ROUGUELIKE_SPRING, 1);
    }
    std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v2 + 64));
    __gnu_cxx::__normal_iterator<unsigned long const*,std::vector<unsigned long>>::operator++(&__for_begin);
  }
  if ( v20 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 3412: range 0000000015947BFA-0000000015949490
int32_t __cdecl RogueLikeDungeonRuntimeMgr::switchAvatar(
        RogueLikeDungeonRuntimeMgr *const this,
        const proto::RogueSwitchAvatarReq *req,
        proto::RogueSwitchAvatarRsp *rsp_0)
{
  int32_t v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  PlayerBasicComp *BasicComp; // rax
  google::protobuf::uint32 v8; // ecx
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  const google::protobuf::RepeatedField<long unsigned int> *v12; // rax
  common::milog::MiLogStream *v14; // r14
  unsigned __int64 *M_current; // r15
  std::vector<long unsigned int>::iterator v16; // rax
  common::milog::MiLogStream *v17; // r14
  unsigned __int64 v18; // rax
  unsigned __int64 *v19; // r15
  std::vector<long unsigned int>::iterator v20; // rax
  unsigned __int64 *v21; // r15
  std::vector<long unsigned int>::iterator v22; // rax
  common::milog::MiLogStream *v23; // rax
  PlayerAvatarComp *AvatarComp; // rax
  common::milog::MiLogStream *v25; // rax
  int v26; // r15d
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v27; // rax
  common::milog::MiLogStream *v28; // rax
  std::pair<std::__detail::_Node_iterator<long unsigned int,true,false>,bool> v29; // rax
  common::milog::MiLogStream *v30; // rax
  unsigned __int64 v31; // rax
  unsigned __int64 *v32; // r14
  std::vector<long unsigned int>::iterator v33; // rax
  PlayerAvatarComp *v34; // r14
  uint64_t v35; // rax
  unsigned __int64 *v36; // r15
  std::vector<long unsigned int>::iterator v37; // rax
  unsigned __int64 v38; // rax
  google::protobuf::uint32 v39; // edx
  google::protobuf::uint64 v40; // rdx
  google::protobuf::RepeatedField<long unsigned int> *v41; // r14
  const google::protobuf::RepeatedField<long unsigned int> *v42; // rax
  google::protobuf::RepeatedField<long unsigned int> *v43; // rax
  common::milog::MiLogStream *v44; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v45; // rcx
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v46; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v47; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v48; // rcx
  uint64_t *v49; // rax
  PlayerAvatarComp *v50; // rax
  Avatar *v51; // r14
  std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v52; // rax
  proto_log::AvatarLog *v53; // rax
  Player *player; // r14
  int32_t result; // eax
  std::string v56; // [rsp+0h] [rbp-360h]
  std::vector<long unsigned int>::iterator __for_begin; // [rsp+30h] [rbp-330h] BYREF
  std::set<long unsigned int>::iterator __for_end; // [rsp+38h] [rbp-328h] BYREF
  RogueCell *cell_ptr; // [rsp+40h] [rbp-320h]
  std::vector<long unsigned int> *__for_range; // [rsp+48h] [rbp-318h]
  std::vector<long unsigned int> *__for_range_0; // [rsp+50h] [rbp-310h]
  std::set<long unsigned int> *__for_range_1; // [rsp+58h] [rbp-308h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+60h] [rbp-300h]
  RogueStageData *stage_ptr; // [rsp+68h] [rbp-2F8h]
  std::set<long unsigned int> *__for_range_2; // [rsp+70h] [rbp-2F0h]
  uint64_t guid; // [rsp+78h] [rbp-2E8h]
  std::shared_ptr<google::protobuf::Message> p_body_ptr; // [rsp+80h] [rbp-2E0h] BYREF
  common::milog::MiLogStream v68; // [rsp+90h] [rbp-2D0h] BYREF
  common::milog::MiLogStream v69; // [rsp+B0h] [rbp-2B0h] BYREF
  char v70[656]; // [rsp+D0h] [rbp-290h] BYREF

  *(&v56._anon_0._M_allocated_capacity + 1) = (std::string::size_type)rsp_0;
  v4 = (unsigned __int64)v70;
  v56._M_string_length = (std::string::size_type)v70;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_4(608LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "13 32 1 11 holder:3418 48 4 12 cell_id:3431 64 8 17 onstage_guid:3460 96 8 17 onstage_guid:3492 "
                        "128 8 9 guid:3512 160 8 19 backstage_iter:3465 192 16 14 scene_ptr:3420 224 16 12 log_ptr:3535 2"
                        "56 16 15 avatar_ptr:3471 288 24 35 switch_onstage_avatar_guid_vec:3444 352 48 34 backstage_to_on"
                        "stage_guid_set:3458 432 48 29 onstage_to_back_guid_set:3491 512 56 20 switch_guid_set:3459";
  *(_QWORD *)(v4 + 16) = RogueLikeDungeonRuntimeMgr::switchAvatar;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556927;
  v6[536862722] = -218959360;
  v6[536862723] = -218959360;
  v6[536862724] = -218959360;
  v6[536862725] = -218959360;
  v6[536862726] = -219021312;
  v6[536862727] = -219021312;
  v6[536862728] = -219021312;
  v6[536862729] = -234881024;
  v6[536862730] = -218959118;
  v6[536862732] = -219021312;
  v6[536862733] = 62194;
  v6[536862735] = -218959118;
  v6[536862737] = -218103808;
  v6[536862738] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v69,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "switchAvatar",
      3415);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v69, (const char (*)[24])"[ROGUE] is_valid_ false");
    common::milog::MiLogStream::~MiLogStream(&v69);
    v3 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    BasicComp = Player::getBasicComp(this->player_);
    PlayerBasicComp::getNextTransNo[abi:cxx11]((std::string *)&v69, BasicComp);
    StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v4 + 32), 0xDD6u, v56);
    std::string::~string(&v69);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v4 + 192));
    if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v4 + 192)) )
    {
      common::milog::MiLogStream::create(
        &v69,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "switchAvatar",
        3423);
      common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
        &v69,
        (const char (*)[26])"[ROGUE] cur scene is null");
      common::milog::MiLogStream::~MiLogStream(&v69);
      v3 = -1;
    }
    else
    {
      v8 = proto::RogueSwitchAvatarReq::dungeon_id(req);
      if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->dungeon_id_);
      }
      if ( v8 == this->dungeon_id_ )
      {
        *(_DWORD *)(v4 + 48) = proto::RogueSwitchAvatarReq::cell_id(req);
        cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v4 + 48));
        if ( cell_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3)
                                                                    + 0x7FFF8000) )
          {
            __asan_report_load4(&cell_ptr->type);
          }
          if ( cell_ptr->type == ROGUE_CELL_TYPE_SPRING )
          {
            std::vector<unsigned long>::vector((std::vector<long unsigned int> *const)(v4 + 288));
            v12 = proto::RogueSwitchAvatarReq::onstage_avatar_guid_list(req);
            common::tools::MiscUtils::repeatedToVector<unsigned long,unsigned long>(
              v12,
              (std::vector<long unsigned int> *)(v4 + 288));
            if ( std::vector<unsigned long>::size((const std::vector<long unsigned int> *const)(v4 + 288)) > 4
              || !std::vector<unsigned long>::size((const std::vector<long unsigned int> *const)(v4 + 288)) )
            {
              common::milog::MiLogStream::create(
                &v69,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "switchAvatar",
                3448);
              v14 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                      &v69,
                      (const char (*)[35])"[ROGUE] team size incorrect, size:");
              __for_end._M_node = (std::_Rb_tree_const_iterator<long unsigned int>::_Base_ptr)std::vector<unsigned long>::size((const std::vector<long unsigned int> *const)(v4 + 288));
              common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                v14,
                (const unsigned __int64 *)&__for_end);
              common::milog::MiLogStream::~MiLogStream(&v69);
              v3 = -1;
            }
            else
            {
              *(_QWORD *)(v4 + 160) = proto::RogueSwitchAvatarReq::cur_avatar_guid(req);
              M_current = std::vector<unsigned long>::end((std::vector<long unsigned int> *const)(v4 + 288))._M_current;
              v16._M_current = std::vector<unsigned long>::begin((std::vector<long unsigned int> *const)(v4 + 288))._M_current;
              __for_end._M_node = (std::_Rb_tree_const_iterator<long unsigned int>::_Base_ptr)std::find<__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>,unsigned long>(
                                                                                                v16,
                                                                                                (__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> >)M_current,
                                                                                                (const unsigned __int64 *)(v4 + 160))._M_current;
              *(std::vector<long unsigned int>::iterator *)(v4 + 128) = std::vector<unsigned long>::end((std::vector<long unsigned int> *const)(v4 + 288));
              if ( __gnu_cxx::operator==<unsigned long *,std::vector<unsigned long>>(
                     (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 128),
                     (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)&__for_end) )
              {
                common::milog::MiLogStream::create(
                  &v69,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "switchAvatar",
                  3454);
                v17 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                        &v69,
                        (const char (*)[49])"[ROGUE] cur avatar not in team, cur_avatar_guid:");
                __for_end._M_node = (std::_Rb_tree_const_iterator<long unsigned int>::_Base_ptr)proto::RogueSwitchAvatarReq::cur_avatar_guid(req);
                common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                  v17,
                  (const unsigned __int64 *)&__for_end);
                common::milog::MiLogStream::~MiLogStream(&v69);
                v3 = 104;
              }
              else
              {
                std::set<unsigned long>::set((std::set<long unsigned int> *const)(v4 + 352));
                std::unordered_set<unsigned long>::unordered_set((std::unordered_set<long unsigned int> *const)(v4 + 512));
                __for_range = (std::vector<long unsigned int> *)(v4 + 288);
                *(std::vector<long unsigned int>::iterator *)(v4 + 96) = std::vector<unsigned long>::begin((std::vector<long unsigned int> *const)(v4 + 288));
                __for_begin._M_current = std::vector<unsigned long>::end(__for_range)._M_current;
                while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(
                          (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 96),
                          &__for_begin) )
                {
                  v18 = (unsigned __int64)__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*((const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *const)(v4 + 96));
                  if ( *(_BYTE *)((v18 >> 3) + 0x7FFF8000) )
                    v18 = __asan_report_load8(v18);
                  *(_QWORD *)(v4 + 64) = *(_QWORD *)v18;
                  v19 = std::vector<unsigned long>::end(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
                  v20._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
                  *(__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 128) = std::find<__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>,unsigned long>(v20, (__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> >)v19, (const unsigned __int64 *)(v4 + 64));
                  __for_end._M_node = (std::_Rb_tree_const_iterator<long unsigned int>::_Base_ptr)std::vector<unsigned long>::end(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
                  if ( __gnu_cxx::operator==<unsigned long *,std::vector<unsigned long>>(
                         (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 128),
                         (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)&__for_end) )
                  {
                    v21 = std::vector<unsigned long>::end(&this->rogue_team_.backstage_mirror_avatar_guid_vec)._M_current;
                    v22._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.backstage_mirror_avatar_guid_vec)._M_current;
                    *(__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 160) = std::find<__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>,unsigned long>(v22, (__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> >)v21, (const unsigned __int64 *)(v4 + 64));
                    __for_end._M_node = (std::_Rb_tree_const_iterator<long unsigned int>::_Base_ptr)std::vector<unsigned long>::end(&this->rogue_team_.backstage_mirror_avatar_guid_vec)._M_current;
                    if ( __gnu_cxx::operator==<unsigned long *,std::vector<unsigned long>>(
                           (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 160),
                           (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)&__for_end) )
                    {
                      common::milog::MiLogStream::create(
                        &v68,
                        &common::milog::MiLogDefault::default_log_obj_,
                        3u,
                        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                        "switchAvatar",
                        3468);
                      v23 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                              &v68,
                              (const char (*)[41])"[ROGUE] switched avatar not found, guid:");
                      common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                        v23,
                        (const unsigned __int64 *)(v4 + 64));
                      common::milog::MiLogStream::~MiLogStream(&v68);
                      v3 = -1;
                      goto LABEL_87;
                    }
                    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                      __asan_report_load8(&this->player_);
                    AvatarComp = Player::getAvatarComp(this->player_);
                    PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v4 + 256), (uint64_t)AvatarComp);
                    if ( std::operator==<Avatar>((const std::shared_ptr<Avatar> *)(v4 + 256), 0LL) )
                    {
                      common::milog::MiLogStream::create(
                        &v69,
                        &common::milog::MiLogDefault::default_log_obj_,
                        3u,
                        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                        "switchAvatar",
                        3474);
                      v25 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
                              &v69,
                              (const char (*)[32])"[ROGUE] avatar not found, guid:");
                      common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                        v25,
                        (const unsigned __int64 *)(v4 + 64));
                      common::milog::MiLogStream::~MiLogStream(&v69);
                      v3 = 104;
                      v26 = 0;
                    }
                    else
                    {
                      v27 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 256));
                      if ( Creature::getLifeState(v27) == LIFE_DEAD )
                      {
                        common::milog::MiLogStream::create(
                          &v69,
                          &common::milog::MiLogDefault::default_log_obj_,
                          1u,
                          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                          "switchAvatar",
                          3479);
                        v28 = common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
                                &v69,
                                (const char (*)[30])"[ROGUE] avatar is dead, guid:");
                        common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                          v28,
                          (const unsigned __int64 *)(v4 + 64));
                        common::milog::MiLogStream::~MiLogStream(&v69);
                        v3 = 102;
                        v26 = 0;
                      }
                      else
                      {
                        std::set<unsigned long>::insert(
                          (std::set<long unsigned int> *const)(v4 + 352),
                          (const std::set<long unsigned int>::value_type *)(v4 + 64));
                        v26 = 1;
                      }
                    }
                    std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v4 + 256));
                    if ( v26 != 1 )
                      goto LABEL_87;
                  }
                  v29 = std::unordered_set<unsigned long>::insert(
                          (std::unordered_set<long unsigned int> *const)(v4 + 512),
                          (const std::unordered_set<long unsigned int>::value_type *)(v4 + 64));
                  if ( !v29.second )
                  {
                    common::milog::MiLogStream::create(
                      &v69,
                      &common::milog::MiLogDefault::default_log_obj_,
                      1u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "switchAvatar",
                      3486);
                    v30 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                            &v69,
                            (const char (*)[31])"[ROGUE] duplicate avatar guid:");
                    common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(
                      v30,
                      (const unsigned __int64 *)(v4 + 64));
                    common::milog::MiLogStream::~MiLogStream(&v69);
                    v3 = 106;
                    goto LABEL_87;
                  }
                  __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++((__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *const)(v4 + 96));
                }
                std::set<unsigned long>::set((std::set<long unsigned int> *const)(v4 + 432));
                __for_range_0 = &this->rogue_team_.onstage_mirror_avatar_guid_vec;
                __for_begin._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
                *(std::vector<long unsigned int>::iterator *)(v4 + 128) = std::vector<unsigned long>::end(__for_range_0);
                while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(
                          &__for_begin,
                          (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 128)) )
                {
                  v31 = (unsigned __int64)__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
                  if ( *(_BYTE *)((v31 >> 3) + 0x7FFF8000) )
                    v31 = __asan_report_load8(v31);
                  *(_QWORD *)(v4 + 96) = *(_QWORD *)v31;
                  v32 = std::vector<unsigned long>::end((std::vector<long unsigned int> *const)(v4 + 288))._M_current;
                  v33._M_current = std::vector<unsigned long>::begin((std::vector<long unsigned int> *const)(v4 + 288))._M_current;
                  *(__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 160) = std::find<__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>,unsigned long>(v33, (__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> >)v32, (const unsigned __int64 *)(v4 + 96));
                  __for_end._M_node = (std::_Rb_tree_const_iterator<long unsigned int>::_Base_ptr)std::vector<unsigned long>::end((std::vector<long unsigned int> *const)(v4 + 288))._M_current;
                  if ( __gnu_cxx::operator==<unsigned long *,std::vector<unsigned long>>(
                         (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 160),
                         (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)&__for_end) )
                  {
                    std::set<unsigned long>::insert(
                      (std::set<long unsigned int> *const)(v4 + 432),
                      (const std::set<long unsigned int>::value_type *)(v4 + 96));
                  }
                  __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
                }
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8(&this->player_);
                v34 = Player::getAvatarComp(this->player_);
                std::shared_ptr<Scene>::shared_ptr(
                  (std::shared_ptr<Scene> *const)(v4 + 256),
                  (const std::shared_ptr<Scene> *)(v4 + 192));
                v35 = proto::RogueSwitchAvatarReq::cur_avatar_guid(req);
                LOBYTE(v34) = PlayerAvatarComp::setSceneTeamAndAddToScene(
                                v34,
                                (const std::vector<long unsigned int> *)(v4 + 288),
                                v35,
                                (ScenePtr *)(v4 + 256),
                                CHANGE_SCENE_TEAM_REASON_ROGUELIKE_SWITCH) != 0;
                std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v4 + 256));
                if ( (_BYTE)v34 )
                {
                  common::milog::MiLogStream::create(
                    &v69,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "switchAvatar",
                    3503);
                  common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                    &v69,
                    (const char (*)[41])"[ROGUE] setSceneTeamAndAddToScene failed");
                  common::milog::MiLogStream::~MiLogStream(&v69);
                  v3 = -1;
                }
                else
                {
                  *(std::vector<long unsigned int>::iterator *)(v4 + 128) = std::vector<unsigned long>::end(&this->rogue_team_.backstage_mirror_avatar_guid_vec);
                  __gnu_cxx::__normal_iterator<unsigned long const*,std::vector<unsigned long>>::__normal_iterator<unsigned long *>(
                    (__gnu_cxx::__normal_iterator<long unsigned int const*,std::vector<long unsigned int> > *const)&__for_end,
                    (const __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > *)(v4 + 128));
                  v36 = std::vector<unsigned long>::end(&this->rogue_team_.backstage_mirror_avatar_guid_vec)._M_current;
                  v37._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.backstage_mirror_avatar_guid_vec)._M_current;
                  __for_begin._M_current = std::remove_if<__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>,RogueLikeDungeonRuntimeMgr::switchAvatar(proto::RogueSwitchAvatarReq const&,proto::RogueSwitchAvatarRsp &)::{lambda(unsigned long)#1}>(
                                             v37,
                                             (__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> >)v36,
                                             (RogueLikeDungeonRuntimeMgr::switchAvatar::<lambda(uint64_t)>)(v4 + 352))._M_current;
                  __gnu_cxx::__normal_iterator<unsigned long const*,std::vector<unsigned long>>::__normal_iterator<unsigned long *>(
                    (__gnu_cxx::__normal_iterator<long unsigned int const*,std::vector<long unsigned int> > *const)(v4 + 160),
                    &__for_begin);
                  std::vector<unsigned long>::erase(
                    &this->rogue_team_.backstage_mirror_avatar_guid_vec,
                    *(std::vector<long unsigned int>::const_iterator *)(v4 + 160),
                    (std::vector<long unsigned int>::const_iterator)__for_end._M_node);
                  __for_range_1 = (std::set<long unsigned int> *)(v4 + 432);
                  *(std::set<long unsigned int>::iterator *)(v4 + 160) = std::set<unsigned long>::begin((const std::set<long unsigned int> *const)(v4 + 432));
                  __for_end._M_node = std::set<unsigned long>::end(__for_range_1)._M_node;
                  while ( std::operator!=(
                            (const std::_Rb_tree_const_iterator<long unsigned int>::_Self *)(v4 + 160),
                            &__for_end) )
                  {
                    v38 = (unsigned __int64)std::_Rb_tree_const_iterator<unsigned long>::operator*((const std::_Rb_tree_const_iterator<long unsigned int> *const)(v4 + 160));
                    if ( *(_BYTE *)((v38 >> 3) + 0x7FFF8000) )
                      v38 = __asan_report_load8(v38);
                    *(_QWORD *)(v4 + 128) = *(_QWORD *)v38;
                    std::vector<unsigned long>::push_back(
                      &this->rogue_team_.backstage_mirror_avatar_guid_vec,
                      (const std::vector<long unsigned int>::value_type *)(v4 + 128));
                    std::_Rb_tree_const_iterator<unsigned long>::operator++((std::_Rb_tree_const_iterator<long unsigned int> *const)(v4 + 160));
                  }
                  std::vector<unsigned long>::swap(
                    &this->rogue_team_.onstage_mirror_avatar_guid_vec,
                    (std::vector<long unsigned int> *)(v4 + 288));
                  proto::RogueSwitchAvatarRsp::set_cell_id(
                    *((proto::RogueSwitchAvatarRsp *const *)&v56._anon_0._M_allocated_capacity + 1),
                    *(_DWORD *)(v4 + 48));
                  v39 = proto::RogueSwitchAvatarReq::dungeon_id(req);
                  proto::RogueSwitchAvatarRsp::set_dungeon_id(
                    *((proto::RogueSwitchAvatarRsp *const *)&v56._anon_0._M_allocated_capacity + 1),
                    v39);
                  v40 = proto::RogueSwitchAvatarReq::cur_avatar_guid(req);
                  proto::RogueSwitchAvatarRsp::set_cur_avatar_guid(
                    *((proto::RogueSwitchAvatarRsp *const *)&v56._anon_0._M_allocated_capacity + 1),
                    v40);
                  v41 = proto::RogueSwitchAvatarRsp::mutable_onstage_avatar_guid_list(*((proto::RogueSwitchAvatarRsp *const *)&v56._anon_0._M_allocated_capacity
                                                                                      + 1));
                  v42 = proto::RogueSwitchAvatarReq::onstage_avatar_guid_list(req);
                  google::protobuf::RepeatedField<unsigned long>::CopyFrom(v41, v42);
                  v43 = proto::RogueSwitchAvatarRsp::mutable_backstage_avatar_guid_list(*((proto::RogueSwitchAvatarRsp *const *)&v56._anon_0._M_allocated_capacity
                                                                                        + 1));
                  common::tools::MiscUtils::vectorToRepeated<unsigned long,unsigned long>(
                    &this->rogue_team_.backstage_mirror_avatar_guid_vec,
                    v43);
                  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8(&this->activity_);
                  misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
                  RoguelikeMiscMgr::onRoguelikeDungeonSwitchAvatar(misc_mgr);
                  stage_ptr = RogueLikeDungeonRuntimeMgr::getStage(this);
                  if ( stage_ptr )
                  {
                    common::tools::perf::make_shared<proto_log::PlayerLogBodyRogueSwitchTeam>();
                    v45 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224));
                    if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_load4(&this->stage_id_);
                    }
                    proto_log::PlayerLogBodyRogueSwitchTeam::set_stage_id(v45, this->stage_id_);
                    v46 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224));
                    proto_log::PlayerLogBodyRogueSwitchTeam::set_cell_id(v46, *(_DWORD *)(v4 + 48));
                    v47 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224));
                    proto_log::PlayerLogBodyRogueSwitchTeam::set_rogue_transaction(v47, &stage_ptr->transaction);
                    v48 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224));
                    if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
                      && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
                    {
                      __asan_report_load4(&this->cur_level_);
                    }
                    proto_log::PlayerLogBodyRogueSwitchTeam::set_level(v48, this->cur_level_);
                    __for_range_2 = (std::set<long unsigned int> *)(v4 + 352);
                    *(std::set<long unsigned int>::iterator *)(v4 + 160) = std::set<unsigned long>::begin((const std::set<long unsigned int> *const)(v4 + 352));
                    __for_end._M_node = std::set<unsigned long>::end(__for_range_2)._M_node;
                    while ( std::operator!=(
                              (const std::_Rb_tree_const_iterator<long unsigned int>::_Self *)(v4 + 160),
                              &__for_end) )
                    {
                      v49 = (uint64_t *)std::_Rb_tree_const_iterator<unsigned long>::operator*((const std::_Rb_tree_const_iterator<long unsigned int> *const)(v4 + 160));
                      if ( *(_BYTE *)(((unsigned __int64)v49 >> 3) + 0x7FFF8000) )
                        v49 = (uint64_t *)__asan_report_load8(v49);
                      guid = *v49;
                      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                        __asan_report_load8(&this->player_);
                      v50 = Player::getAvatarComp(this->player_);
                      PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v4 + 256), (uint64_t)v50);
                      if ( std::operator!=<Avatar>(0LL, (const std::shared_ptr<Avatar> *)(v4 + 256)) )
                      {
                        v51 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 256));
                        v52 = std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyRogueSwitchTeam,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 224));
                        v53 = proto_log::PlayerLogBodyRogueSwitchTeam::add_switched_to_stage_avatar_log_list(v52);
                        Avatar::getAvatarLog(v51, v53);
                      }
                      std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v4 + 256));
                      std::_Rb_tree_const_iterator<unsigned long>::operator++((std::_Rb_tree_const_iterator<long unsigned int> *const)(v4 + 160));
                    }
                    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                      __asan_report_load8(&this->player_);
                    player = this->player_;
                    std::shared_ptr<google::protobuf::Message>::shared_ptr(
                      (std::shared_ptr<google::protobuf::Message> *const)(v4 + 256),
                      0LL);
                    std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyRogueSwitchTeam,void>(
                      &p_body_ptr,
                      (const std::shared_ptr<proto_log::PlayerLogBodyRogueSwitchTeam> *)(v4 + 224));
                    Player::printStatLog(player, &p_body_ptr, (MessagePtr *)(v4 + 256), 0xEu);
                    std::shared_ptr<google::protobuf::Message>::~shared_ptr(&p_body_ptr);
                    std::shared_ptr<google::protobuf::Message>::~shared_ptr((std::shared_ptr<google::protobuf::Message> *const)(v4 + 256));
                    v3 = 0;
                    std::shared_ptr<proto_log::PlayerLogBodyRogueSwitchTeam>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyRogueSwitchTeam> *const)(v4 + 224));
                  }
                  else
                  {
                    common::milog::MiLogStream::create(
                      &v69,
                      &common::milog::MiLogDefault::default_log_obj_,
                      3u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "switchAvatar",
                      3531);
                    v44 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                            &v69,
                            (const char (*)[35])"[ROGUE] stage not found, stage_id:");
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v44, &this->stage_id_);
                    common::milog::MiLogStream::~MiLogStream(&v69);
                    v3 = 0;
                  }
                }
                std::set<unsigned long>::~set((std::set<long unsigned int> *const)(v4 + 432));
LABEL_87:
                std::unordered_set<unsigned long>::~unordered_set((std::unordered_set<long unsigned int> *const)(v4 + 512));
                std::set<unsigned long>::~set((std::set<long unsigned int> *const)(v4 + 352));
              }
            }
            std::vector<unsigned long>::~vector((std::vector<long unsigned int> *const)(v4 + 288));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v69,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "switchAvatar",
              3440);
            v11 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                    &v69,
                    (const char (*)[38])"[ROGUE] cell is not spring!, cell_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, (const unsigned int *)(v4 + 48));
            common::milog::MiLogStream::~MiLogStream(&v69);
            v3 = -1;
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v69,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "switchAvatar",
            3435);
          v10 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                  &v69,
                  (const char (*)[33])"[ROGUE] cell not found, cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v4 + 48));
          common::milog::MiLogStream::~MiLogStream(&v69);
          v3 = -1;
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v69,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "switchAvatar",
          3428);
        v9 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
               &v69,
               (const char (*)[43])"[ROGUE] dungeon_id not match, dungeon_id_:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &this->dungeon_id_);
        common::milog::MiLogStream::~MiLogStream(&v69);
        v3 = -1;
      }
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v4 + 192));
    StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v4 + 32));
  }
  result = v3;
  if ( v56._M_string_length == v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8028) = 0;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF803C) = 0;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8044) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8030) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8038) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8040) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8048) = -168430091;
  }
  return result;
};

// Line 3510: range 0000000015947B06-0000000015947BF8
bool __fastcall RogueLikeDungeonRuntimeMgr::switchAvatar(proto::RogueSwitchAvatarReq const&,proto::RogueSwitchAvatarRsp &)::{lambda(unsigned long)#1}::operator()(
        unsigned __int64 __closure,
        uint64_t guid)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  char *v4; // rdx
  unsigned __int64 v5; // r12
  bool result; // al
  char v7[96]; // [rsp+10h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v7;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  v4 = (char *)(v2 + 64);
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 8 9 guid:3510";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::switchAvatar(proto::RogueSwitchAvatarReq const&,proto::RogueSwitchAvatarRsp &)::{lambda(unsigned long)#1}::operator();
  v5 = v2 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202116352;
  *(_QWORD *)(v2 + 32) = guid;
  if ( *(_BYTE *)((__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  result = common::tools::MiscUtils::isContains<std::set<unsigned long>,unsigned long>(
             *(std::set<long unsigned int> **)__closure,
             (const unsigned __int64 *)v4 - 4);
  if ( v7 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3553: range 0000000015949492-0000000015949E04
__int64 __fastcall RogueLikeDungeonRuntimeMgr::enterCell(RogueLikeDungeonRuntimeMgr *const this, uint32_t group_id)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  common::milog::MiLogStream *v5; // rax
  __int64 result; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rax
  uint32_t cur_cell_id; // ecx
  char *v14; // rsi
  uint32_t cell_id; // ecx
  char v16; // al
  std::pair<std::__detail::_Node_iterator<unsigned int,true,false>,bool> v17; // rax
  uint32_t v18; // esi
  common::milog::MiLogStream *v19; // rax
  unsigned int val; // [rsp+14h] [rbp-DCh] BYREF
  RogueStageData *stage_ptr; // [rsp+18h] [rbp-D8h]
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+20h] [rbp-D0h]
  RogueCell *cell_ptr; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<Config> v24; // [rsp+30h] [rbp-C0h] BYREF
  char v25[176]; // [rsp+40h] [rbp-B0h] BYREF

  v2 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(128LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 48 4 13 group_id:3552 64 32 11 notify:3580";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::enterCell;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862723] = -202116109;
  *(_DWORD *)(v2 + 48) = group_id;
  stage_ptr = RogueLikeDungeonRuntimeMgr::getStage(this);
  if ( !stage_ptr )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 64),
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "enterCell",
      3557);
    v5 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
           (common::milog::MiLogStream *const)(v2 + 64),
           (const char (*)[35])"[ROGUE] stage not found, stage_id:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, &this->stage_id_);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 64));
    result = 0xFFFFFFFFLL;
    goto LABEL_48;
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    if ( *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3) + 0x7FFF8000) != 0
      && (((unsigned __int8)stage_ptr + 25) & 7) >= *(_BYTE *)(((unsigned __int64)&stage_ptr->is_entering_next_level >> 3)
                                                             + 0x7FFF8000) )
    {
      __asan_report_load1(&stage_ptr->is_entering_next_level);
    }
    if ( !stage_ptr->is_entering_next_level )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)(v2 + 64),
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "enterCell",
        3562);
      common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(
        (common::milog::MiLogStream *const)(v2 + 64),
        (const char (*)[24])"[ROGUE] is_valid_ false");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 64));
      result = 0xFFFFFFFFLL;
      goto LABEL_48;
    }
  }
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v24);
  v7 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v24);
  cell_config_ptr = ActivityRogueExcelConfigMgr::findCellConfigByGroupId(
                      &v7->design_config.txt_config_mgr.activity_rogue_config_mgr,
                      *(_DWORD *)(v2 + 48));
  std::shared_ptr<Config>::~shared_ptr(&v24);
  if ( !cell_config_ptr )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 64),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "enterCell",
      3568);
    v8 = common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
           (common::milog::MiLogStream *const)(v2 + 64),
           (const char (*)[41])"[ROGUE] cell config not found, group_id:");
    v9 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v2 + 48));
    v10 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v9, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
LABEL_16:
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 64));
    result = 0xFFFFFFFFLL;
    goto LABEL_48;
  }
  if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&cell_config_ptr->cell_id);
  }
  cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, cell_config_ptr->cell_id);
  if ( !cell_ptr )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)(v2 + 64),
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "enterCell",
      3574);
    v11 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
            (common::milog::MiLogStream *const)(v2 + 64),
            (const char (*)[33])"[ROGUE] cell not found, cell_id:");
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &cell_config_ptr->cell_id);
    v10 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    goto LABEL_16;
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->cur_cell_id_);
  }
  cur_cell_id = this->cur_cell_id_;
  if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->cell_id >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&cell_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&cell_ptr->cell_id);
  }
  if ( cur_cell_id != cell_ptr->cell_id )
  {
    proto::RogueDungeonPlayerCellChangeNotify::RogueDungeonPlayerCellChangeNotify((proto::RogueDungeonPlayerCellChangeNotify *const)(v2 + 64));
    if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->cell_id >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&cell_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&cell_ptr->cell_id);
    }
    proto::RogueDungeonPlayerCellChangeNotify::set_cell_id(
      (proto::RogueDungeonPlayerCellChangeNotify *const)(v2 + 64),
      cell_ptr->cell_id);
    if ( *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->cur_cell_id_);
    }
    proto::RogueDungeonPlayerCellChangeNotify::set_old_cell_id(
      (proto::RogueDungeonPlayerCellChangeNotify *const)(v2 + 64),
      this->cur_cell_id_);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    v14 = (char *)(v2 + 64);
    Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 64));
    if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->cell_id >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&cell_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&cell_ptr->cell_id);
    }
    cell_id = cell_ptr->cell_id;
    v16 = *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000);
    if ( v16 != 0 && v16 <= 3 )
    {
      LOBYTE(v14) = v16 != 0;
      __asan_report_store4(&this->cur_cell_id_, v14, &this->cur_cell_id_);
    }
    this->cur_cell_id_ = cell_id;
    proto::RogueDungeonPlayerCellChangeNotify::~RogueDungeonPlayerCellChangeNotify((proto::RogueDungeonPlayerCellChangeNotify *const)(v2 + 64));
  }
  v17 = std::unordered_set<unsigned int>::insert(&this->explored_cell_set_, &cell_config_ptr->cell_id);
  if ( v17.second )
  {
    if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&cell_ptr->type);
    }
    RogueStageData::enterCell(stage_ptr, cell_ptr->type);
  }
  v18 = std::unordered_set<unsigned int>::size(&this->explored_cell_set_);
  if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->cur_level_);
  }
  RogueStageData::setLevelExploreCellCount(stage_ptr, this->cur_level_, v18);
  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  BaseActivity::notifyClientData(this->activity_, 0);
  common::milog::MiLogStream::create(
    (common::milog::MiLogStream *)(v2 + 64),
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
    "enterCell",
    3592);
  v19 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
          (common::milog::MiLogStream *const)(v2 + 64),
          (const char (*)[36])"[ROGUE] player enter cell, cell_id:");
  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, &this->cur_cell_id_);
  common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)(v2 + 64));
  result = 0LL;
LABEL_48:
  if ( v25 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3598: range 0000000015949E06-000000001594A39B
int32_t __cdecl RogueLikeDungeonRuntimeMgr::teamToClient(
        RogueLikeDungeonRuntimeMgr *const this,
        proto::RogueShowAvatarTeamInfo *team_info)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  unsigned __int64 v5; // rax
  PlayerAvatarComp *AvatarComp; // rax
  common::milog::MiLogStream *v7; // rax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  uint32_t AvatarId; // eax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  data::LifeState LifeState; // eax
  unsigned __int64 v12; // rax
  PlayerAvatarComp *v13; // rax
  common::milog::MiLogStream *v14; // rax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  uint32_t v16; // eax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // rax
  data::LifeState v18; // eax
  int32_t result; // eax
  std::vector<long unsigned int>::iterator __for_begin; // [rsp+10h] [rbp-E0h] BYREF
  std::vector<long unsigned int>::iterator __for_end; // [rsp+18h] [rbp-D8h] BYREF
  std::vector<long unsigned int> *__for_range; // [rsp+20h] [rbp-D0h]
  std::vector<long unsigned int> *__for_range_0; // [rsp+28h] [rbp-C8h]
  proto::RogueAvatarInfo *avatar_info_0; // [rsp+30h] [rbp-C0h]
  proto::RogueAvatarInfo *avatar_info; // [rsp+38h] [rbp-B8h]
  common::milog::MiLogStream v26; // [rsp+40h] [rbp-B0h] BYREF
  char v27[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v27;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 8 9 guid:3612 64 16 15 avatar_ptr:3614";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::teamToClient;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -218959360;
  v4[536862722] = -202178560;
  __for_range = &this->rogue_team_.onstage_mirror_avatar_guid_vec;
  __for_begin._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
  __for_end._M_current = std::vector<unsigned long>::end(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
  while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__for_begin, &__for_end) )
  {
    v5 = (unsigned __int64)__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
    if ( *(_BYTE *)((v5 >> 3) + 0x7FFF8000) )
      v5 = __asan_report_load8(v5);
    *(_QWORD *)(v2 + 32) = *(_QWORD *)v5;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    AvatarComp = Player::getAvatarComp(this->player_);
    PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v2 + 64), (uint64_t)AvatarComp);
    if ( std::operator==<Avatar>(0LL, (const std::shared_ptr<Avatar> *)(v2 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v26,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "teamToClient",
        3604);
      v7 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
             &v26,
             (const char (*)[32])"[ROGUE] avatar not found, guid:");
      common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v7, (const unsigned __int64 *)(v2 + 32));
      common::milog::MiLogStream::~MiLogStream(&v26);
    }
    else
    {
      avatar_info = proto::RogueShowAvatarTeamInfo::add_avatar_list(team_info);
      v8 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      AvatarId = Avatar::getAvatarId(v8);
      proto::RogueAvatarInfo::set_avatar_id(avatar_info, AvatarId);
      proto::RogueAvatarInfo::set_is_onstage(avatar_info, 1);
      v10 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      LifeState = Creature::getLifeState(v10);
      proto::RogueAvatarInfo::set_is_alive(avatar_info, LifeState == LIFE_ALIVE);
    }
    std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v2 + 64));
    __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
  }
  __for_range_0 = &this->rogue_team_.backstage_mirror_avatar_guid_vec;
  __for_begin._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.backstage_mirror_avatar_guid_vec)._M_current;
  __for_end._M_current = std::vector<unsigned long>::end(__for_range_0)._M_current;
  while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__for_begin, &__for_end) )
  {
    v12 = (unsigned __int64)__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
    if ( *(_BYTE *)((v12 >> 3) + 0x7FFF8000) )
      v12 = __asan_report_load8(v12);
    *(_QWORD *)(v2 + 32) = *(_QWORD *)v12;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    v13 = Player::getAvatarComp(this->player_);
    PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v2 + 64), (uint64_t)v13);
    if ( std::operator==<Avatar>(0LL, (const std::shared_ptr<Avatar> *)(v2 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v26,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "teamToClient",
        3617);
      v14 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
              &v26,
              (const char (*)[32])"[ROGUE] avatar not found, guid:");
      common::milog::MiLogStream::operator<<<unsigned long,(unsigned long *)0>(v14, (const unsigned __int64 *)(v2 + 32));
      common::milog::MiLogStream::~MiLogStream(&v26);
    }
    else
    {
      avatar_info_0 = proto::RogueShowAvatarTeamInfo::add_avatar_list(team_info);
      v15 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      v16 = Avatar::getAvatarId(v15);
      proto::RogueAvatarInfo::set_avatar_id(avatar_info_0, v16);
      proto::RogueAvatarInfo::set_is_onstage(avatar_info_0, 0);
      v17 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      v18 = Creature::getLifeState(v17);
      proto::RogueAvatarInfo::set_is_alive(avatar_info_0, v18 == LIFE_ALIVE);
    }
    std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v2 + 64));
    __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
  }
  result = 0;
  if ( v27 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 3629: range 000000001594A39C-000000001594B0EF
__int64 __fastcall RogueLikeDungeonRuntimeMgr::afterDrawCard(RogueLikeDungeonRuntimeMgr *const this, uint32_t cell_id)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  unsigned int v5; // r14d
  common::milog::MiLogStream *v6; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  bool v8; // r14
  common::milog::MiLogStream *v9; // rax
  const ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rdi
  uint32_t v11; // ecx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  data::RogueCellType type; // eax
  common::milog::MiLogStream *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  uint32_t v20; // esi
  common::milog::MiLogStream *v21; // rax
  char *v22; // rsi
  unsigned __int64 v23; // rax
  char v24; // dl
  __int64 v25; // rdx
  int32_t v26; // r14d
  std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v27; // rdx
  char v28; // cl
  uint32_t group_id; // r14d
  __int64 v30; // rax
  char v31; // dl
  __int64 v32; // rdx
  common::milog::MiLogStream *v33; // r14
  std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  Group *v35; // rax
  __int64 result; // rax
  unsigned int val; // [rsp+1Ch] [rbp-124h] BYREF
  RogueCell *cell_ptr; // [rsp+20h] [rbp-120h]
  const data::RogueDungeonCellExcelConfig *cell_config_ptr; // [rsp+28h] [rbp-118h]
  common::milog::MiLogStream v41; // [rsp+30h] [rbp-110h] BYREF
  char v42[240]; // [rsp+50h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v42;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 48 4 12 cell_id:3628 64 16 18 cur_scene_ptr:3635 96 16 26 cur_dungeon_scene_ptr:3640 128 16 14"
                        " group_ptr:3697 160 16 14 event_ptr:3703";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::afterDrawCard;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -219021312;
  v4[536862723] = -219021312;
  v4[536862724] = -219021312;
  v4[536862725] = -202178560;
  *(_DWORD *)(v2 + 48) = cell_id;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v41,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "afterDrawCard",
      3632);
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
      &v41,
      (const char (*)[27])"[ROGUE] is_valid_ == false");
    common::milog::MiLogStream::~MiLogStream(&v41);
    v5 = -1;
    goto LABEL_58;
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->player_);
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v2 + 64));
  if ( !std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v2 + 64)) )
  {
    std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    toPtr<DungeonScene,Scene>((Scene *)(v2 + 96));
    if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v2 + 96)) )
    {
      common::milog::MiLogStream::create(
        &v41,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "afterDrawCard",
        3643);
      v6 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
             &v41,
             (const char (*)[48])"[ROGUE] cur scene is not dungeon, cur_scene_id:");
      v7 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      val = Scene::getSceneId(v7);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
      common::milog::MiLogStream::~MiLogStream(&v41);
      v5 = -1;
LABEL_56:
      std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 96));
      goto LABEL_57;
    }
    std::shared_ptr<DungeonScene>::shared_ptr(
      (std::shared_ptr<DungeonScene> *const)(v2 + 160),
      (const std::shared_ptr<DungeonScene> *)(v2 + 96));
    v8 = !RogueLikeDungeonRuntimeMgr::isPlayerInDungeon(this, (DungeonScenePtr *)(v2 + 160));
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 160));
    if ( v8 )
    {
      common::milog::MiLogStream::create(
        &v41,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "afterDrawCard",
        3648);
      common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
        &v41,
        (const char (*)[40])"[ROGUE] cannot draw card in other scene");
      common::milog::MiLogStream::~MiLogStream(&v41);
      v5 = -1;
      goto LABEL_56;
    }
    cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v2 + 48));
    if ( !cell_ptr )
    {
      common::milog::MiLogStream::create(
        &v41,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "afterDrawCard",
        3654);
      v9 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
             &v41,
             (const char (*)[33])"[ROGUE] cell not found, cell_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v2 + 48));
      common::milog::MiLogStream::~MiLogStream(&v41);
      v5 = -1;
      goto LABEL_56;
    }
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 160));
    p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 160))->design_config.txt_config_mgr.activity_rogue_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->cell_id >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&cell_ptr->cell_id >> 3) + 0x7FFF8000) <= 3 )
    {
      p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell_ptr->cell_id;
      __asan_report_load4(&cell_ptr->cell_id);
    }
    v11 = cell_ptr->cell_id;
    if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->dungeon_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->dungeon_id >> 3)
                                                              + 0x7FFF8000) )
    {
      p_activity_rogue_config_mgr = (const ActivityRogueExcelConfigMgr *)&cell_ptr->dungeon_id;
      __asan_report_load4(&cell_ptr->dungeon_id);
    }
    cell_config_ptr = ActivityRogueExcelConfigMgr::findDungeonCellConfigByDungeonIdAndCellId(
                        p_activity_rogue_config_mgr,
                        cell_ptr->dungeon_id,
                        v11);
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 160));
    if ( !cell_config_ptr )
    {
      common::milog::MiLogStream::create(
        &v41,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "afterDrawCard",
        3660);
      v12 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
              &v41,
              (const char (*)[43])"[ROGUE] cell config not found, dungeon_id:");
      v13 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &cell_ptr->dungeon_id);
      v14 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v13, (const char (*)[10])" cell_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &cell_ptr->cell_id);
      common::milog::MiLogStream::~MiLogStream(&v41);
      v5 = -1;
      goto LABEL_56;
    }
    if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&cell_ptr->type);
    }
    type = cell_ptr->type;
    if ( type != ROGUE_CELL_TYPE_BOSS )
    {
      if ( type > ROGUE_CELL_TYPE_BOSS )
        goto LABEL_39;
      if ( type != ROGUE_CELL_TYPE_STORE )
      {
        if ( type >= ROGUE_CELL_TYPE_STORE && (unsigned int)(type - 3) <= 1 )
        {
          if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&cell_ptr->state);
          }
          if ( cell_ptr->state != ROGUE_CELL_SUCCESS )
          {
            common::milog::MiLogStream::create(
              &v41,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "afterDrawCard",
              3670);
            v16 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
                    &v41,
                    (const char (*)[51])"[ROGUE] elite and normal state not correct, state:");
            common::milog::MiLogStream::operator<<<proto::RogueCellState,(proto::RogueCellState*)0>(
              v16,
              &cell_ptr->state);
            common::milog::MiLogStream::~MiLogStream(&v41);
            v5 = -1;
            goto LABEL_56;
          }
          if ( RogueLikeDungeonRuntimeMgr::internalChangeCellState(this, cell_ptr, ROGUE_CELL_FINISH) )
          {
            common::milog::MiLogStream::create(
              &v41,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "afterDrawCard",
              3675);
            v17 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                    &v41,
                    (const char (*)[47])"[ROGUE] internalChangeCellState failed, state:");
            common::milog::MiLogStream::operator<<<proto::RogueCellState,(proto::RogueCellState*)0>(
              v17,
              &cell_ptr->state);
            common::milog::MiLogStream::~MiLogStream(&v41);
            v5 = -1;
            goto LABEL_56;
          }
LABEL_40:
          v20 = (unsigned int)std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96));
          if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&cell_config_ptr->group_id);
          }
          Scene::findGroup((Scene *const)(v2 + 128), v20);
          if ( std::operator==<Group>(0LL, (const std::shared_ptr<Group> *)(v2 + 128)) )
          {
            common::milog::MiLogStream::create(
              &v41,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "afterDrawCard",
              3700);
            v21 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
                    &v41,
                    (const char (*)[36])"[ROGUE] findGroup failed, group_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, &cell_config_ptr->group_id);
            common::milog::MiLogStream::~MiLogStream(&v41);
            v5 = -1;
          }
          else
          {
            common::tools::perf::make_shared<Event>();
            v22 = (char *)(v2 + 160);
            if ( std::operator!=<Event>(0LL, (const std::shared_ptr<Event> *)(v2 + 160)) )
            {
              v23 = (unsigned __int64)std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 160));
              v24 = *(_BYTE *)((v23 >> 3) + 0x7FFF8000);
              LOBYTE(v22) = v24 != 0;
              v25 = (v24 != 0) & (unsigned __int8)(v24 <= 3);
              if ( (_BYTE)v25 )
                v23 = __asan_report_store4(v23, v22, v25);
              *(_DWORD *)v23 = 92;
              v26 = *(_DWORD *)(v2 + 48);
              v27 = std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 160));
              v28 = *(_BYTE *)(((unsigned __int64)&v27->param1 >> 3) + 0x7FFF8000);
              if ( v28 != 0 && (char)((((_BYTE)v27 + 44) & 7) + 3) >= v28 )
              {
                LOBYTE(v22) = v28 != 0;
                __asan_report_store4(&v27->param1, v22, v27);
              }
              v27->param1 = v26;
              if ( *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&cell_config_ptr->group_id >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4(&cell_config_ptr->group_id);
              }
              group_id = cell_config_ptr->group_id;
              v30 = (__int64)std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Event,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 160));
              v31 = *(_BYTE *)(((unsigned __int64)(v30 + 48) >> 3) + 0x7FFF8000);
              LOBYTE(v22) = v31 != 0;
              v32 = (v31 != 0) & (unsigned __int8)(v31 <= 3);
              if ( (_BYTE)v32 )
                v30 = __asan_report_store4(v30 + 48, v22, v32);
              *(_DWORD *)(v30 + 48) = group_id;
              common::milog::MiLogStream::create(
                &v41,
                &common::milog::MiLogDefault::default_log_obj_,
                1u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "afterDrawCard",
                3709);
              v33 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                      &v41,
                      (const char (*)[29])"[ROGUE] handEvent, group_id:");
              v34 = std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 128));
              val = Group::getGroupId(v34);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v33, &val);
              common::milog::MiLogStream::~MiLogStream(&v41);
              v35 = std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Group,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 128));
              Group::handleEvent(v35, (EventPtr *)(v2 + 160));
            }
            v5 = 0;
            std::shared_ptr<Event>::~shared_ptr((std::shared_ptr<Event> *const)(v2 + 160));
          }
          std::shared_ptr<Group>::~shared_ptr((std::shared_ptr<Group> *const)(v2 + 128));
          goto LABEL_56;
        }
LABEL_39:
        common::milog::MiLogStream::create(
          &v41,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "afterDrawCard",
          3692);
        v19 = common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
                &v41,
                (const char (*)[35])"[ROGUE] cannot draw card, cell_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, (const unsigned int *)(v2 + 48));
        common::milog::MiLogStream::~MiLogStream(&v41);
        v5 = -1;
        goto LABEL_56;
      }
    }
    if ( RogueLikeDungeonRuntimeMgr::internalChangeCellState(this, cell_ptr, ROGUE_CELL_FINISH) )
    {
      common::milog::MiLogStream::create(
        &v41,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "afterDrawCard",
        3685);
      v18 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
              &v41,
              (const char (*)[47])"[ROGUE] internalChangeCellState failed, state:");
      common::milog::MiLogStream::operator<<<proto::RogueCellState,(proto::RogueCellState*)0>(v18, &cell_ptr->state);
      common::milog::MiLogStream::~MiLogStream(&v41);
      v5 = -1;
      goto LABEL_56;
    }
    goto LABEL_40;
  }
  v5 = -1;
LABEL_57:
  std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v2 + 64));
LABEL_58:
  result = v5;
  if ( v42 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3716: range 000000001594B0F0-000000001594C635
int32_t __cdecl RogueLikeDungeonRuntimeMgr::addOneTrap(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  int32_t v4; // r14d
  common::milog::MiLogStream *v5; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  bool v7; // r14
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rcx
  common::milog::MiLogStream *v9; // rax
  ActivityRogueExcelConfigMgr *v10; // rcx
  common::milog::MiLogStream *v11; // rax
  ActivityRogueExcelConfigMgr *v12; // rcx
  common::milog::MiLogStream *v13; // rax
  LuaConfigMgr *p_lua_config_mgr; // rcx
  common::milog::MiLogStream *v15; // rax
  std::_Rb_tree_const_iterator<unsigned int>::_Base_ptr M_node; // r14
  std::set<unsigned int>::iterator v17; // rax
  int v18; // eax
  std::vector<unsigned int>::size_type v19; // r14
  std::vector<unsigned int>::reference v20; // rax
  _DWORD *v21; // rdx
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  ActivityRogueExcelConfigMgr *v25; // rcx
  Scene *v26; // rax
  ReviseLevelGrowExcelConfigMgr *p_revise_level_grow_config_mgr; // r14
  uint32_t InitWorldLevel; // ecx
  common::milog::MiLogStream *v29; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v30; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v31; // r14
  unsigned __int64 v32; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v33; // rsi
  common::milog::MiLogStream *v34; // rax
  unsigned int *v35; // r8
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v36; // rax
  unsigned int *v37; // rcx
  std::pair<unsigned int,unsigned int> *v38; // r8
  std::weak_ptr<Gadget> *v39; // rax
  __int64 (__fastcall *v41)(std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, VisionContext *); // [rsp+0h] [rbp-620h]
  std::allocator<unsigned int> __a; // [rsp+17h] [rbp-609h] BYREF
  unsigned int val; // [rsp+18h] [rbp-608h] BYREF
  uint32_t rand_idx; // [rsp+1Ch] [rbp-604h]
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-600h] BYREF
  const data::RoguelikeDungeonWeightExcelConfig *dungeon_weight_config_ptr; // [rsp+28h] [rbp-5F8h]
  const data::RogueStageExcelConfig *stage_config_ptr; // [rsp+30h] [rbp-5F0h]
  const data::RogueGadgetWeightExcelConfig *gadget_weight_config_ptr; // [rsp+38h] [rbp-5E8h]
  const GroupScriptConfig *trap_group_config_ptr; // [rsp+40h] [rbp-5E0h]
  std::map<std::pair<unsigned int,unsigned int>,unsigned int> *__for_range; // [rsp+48h] [rbp-5D8h]
  const PointScriptConfig *point_config_ptr; // [rsp+50h] [rbp-5D0h]
  const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> *v52; // [rsp+58h] [rbp-5C8h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *group_config_pair; // [rsp+60h] [rbp-5C0h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *gadget_id; // [rsp+68h] [rbp-5B8h]
  common::milog::MiLogStream v55; // [rsp+70h] [rbp-5B0h] BYREF
  char v56[1424]; // [rsp+90h] [rbp-590h] BYREF

  v1 = (unsigned __int64)v56;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_5(1376LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "11 32 4 23 add_trap_config_id:3780 48 4 14 gadget_id:3788 64 4 8 ret:3808 80 8 22 group_config_p"
                        "air:3814 112 16 18 cur_scene_ptr:3722 144 16 26 cur_dungeon_scene_ptr:3727 176 16 15 gadget_ptr:"
                        "3802 208 24 19 trap_point_vec:3773 272 48 29 trap_point_config_id_set:3763 352 48 15 weight_map:"
                        "3787 432 816 17 gadget_param:3794";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::addOneTrap;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234556924;
  v3[536862722] = 61956;
  v3[536862722] = -234881024;
  v3[536862723] = 62194;
  v3[536862724] = 62194;
  v3[536862725] = 62194;
  v3[536862726] = 62194;
  v3[536862727] = -218959360;
  v3[536862728] = 62194;
  v3[536862730] = -218959118;
  v3[536862732] = -219021312;
  v3[536862733] = 62194;
  v3[536862759] = -202116109;
  v3[536862760] = -202116109;
  v3[536862761] = -202116109;
  v3[536862762] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v55,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "addOneTrap",
      3719);
    common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
      &v55,
      (const char (*)[27])"[ROGUE] is_valid_ == false");
    common::milog::MiLogStream::~MiLogStream(&v55);
    v4 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v1 + 112));
    if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v1 + 112)) )
    {
      v4 = -1;
    }
    else
    {
      std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 112));
      toPtr<DungeonScene,Scene>((Scene *)(v1 + 144));
      if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v1 + 144)) )
      {
        common::milog::MiLogStream::create(
          &v55,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "addOneTrap",
          3730);
        v5 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
               &v55,
               (const char (*)[48])"[ROGUE] cur scene is not dungeon, cur_scene_id:");
        v6 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 112));
        val = Scene::getSceneId(v6);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v5, &val);
        common::milog::MiLogStream::~MiLogStream(&v55);
        v4 = -1;
      }
      else
      {
        std::shared_ptr<DungeonScene>::shared_ptr(
          (std::shared_ptr<DungeonScene> *const)(v1 + 176),
          (const std::shared_ptr<DungeonScene> *)(v1 + 144));
        v7 = !RogueLikeDungeonRuntimeMgr::isPlayerInDungeon(this, (DungeonScenePtr *)(v1 + 176));
        std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v1 + 176));
        if ( v7 )
        {
          common::milog::MiLogStream::create(
            &v55,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "addOneTrap",
            3735);
          common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
            &v55,
            (const char (*)[40])"[ROGUE] cannot draw card in other scene");
          common::milog::MiLogStream::~MiLogStream(&v55);
          v4 = -1;
        }
        else
        {
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)(v1 + 176));
          p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 176))->design_config.txt_config_mgr.activity_rogue_config_mgr;
          if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&this->dungeon_weight_config_id_);
          }
          dungeon_weight_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRoguelikeDungeonWeightExcelConfig(
                                        p_activity_rogue_config_mgr,
                                        this->dungeon_weight_config_id_);
          std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v1 + 176));
          if ( dungeon_weight_config_ptr )
          {
            ServiceBox::findService<GameserverService>();
            GameserverService::getConfig((GameserverService *const)(v1 + 176));
            v10 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 176))->design_config.txt_config_mgr.activity_rogue_config_mgr;
            if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
              && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
            {
              __asan_report_load4(&this->stage_id_);
            }
            stage_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueStageExcelConfig(v10, this->stage_id_);
            std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v1 + 176));
            if ( stage_config_ptr )
            {
              ServiceBox::findService<GameserverService>();
              GameserverService::getConfig((GameserverService *const)(v1 + 176));
              v12 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 176))->design_config.txt_config_mgr.activity_rogue_config_mgr;
              if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3)
                                                                    + 0x7FFF8000) )
              {
                __asan_report_load4(&this->dungeon_id_);
              }
              gadget_weight_config_ptr = ActivityRogueExcelConfigMgr::findGadgetWeightConfigByDungeonId(
                                           v12,
                                           this->dungeon_id_);
              std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v1 + 176));
              if ( gadget_weight_config_ptr )
              {
                ServiceBox::findService<GameserverService>();
                GameserverService::getConfig((GameserverService *const)(v1 + 176));
                p_lua_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 176))->design_config.lua_config_mgr;
                if ( *(_BYTE *)(((unsigned __int64)&gadget_weight_config_ptr->trap_group_id >> 3) + 0x7FFF8000) != 0
                  && *(_BYTE *)(((unsigned __int64)&gadget_weight_config_ptr->trap_group_id >> 3) + 0x7FFF8000) <= 3 )
                {
                  __asan_report_load4(&gadget_weight_config_ptr->trap_group_id);
                }
                trap_group_config_ptr = LuaConfigMgr::findGroupScriptConfig(
                                          p_lua_config_mgr,
                                          gadget_weight_config_ptr->trap_group_id);
                std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v1 + 176));
                if ( trap_group_config_ptr )
                {
                  common::tools::MiscUtils::getAllMapKeysSet<std::unordered_map<unsigned int,PointScriptConfig>>(
                    (std::set<unsigned int> *)(v1 + 272),
                    &trap_group_config_ptr->point_config_map);
                  __for_range = &this->trap_group_pair_gadget_id_map_;
                  __for_begin._M_node = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::begin(&this->trap_group_pair_gadget_id_map_)._M_node;
                  *(std::map<std::pair<unsigned int,unsigned int>,unsigned int>::iterator *)(v1 + 80) = std::map<std::pair<unsigned int,unsigned int>,unsigned int>::end(&this->trap_group_pair_gadget_id_map_);
                  while ( std::operator!=(
                            &__for_begin,
                            (const std::_Rb_tree_iterator<std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::_Self *)(v1 + 80)) )
                  {
                    v52 = std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator*(&__for_begin);
                    group_config_pair = std::get<0ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v52);
                    gadget_id = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,unsigned int> >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,unsigned int>(v52);
                    std::set<unsigned int>::erase((std::set<unsigned int> *const)(v1 + 272), &group_config_pair->second);
                    std::_Rb_tree_iterator<std::pair<std::pair const<unsigned int,unsigned int>,unsigned int>>::operator++(&__for_begin);
                  }
                  if ( std::set<unsigned int>::empty((const std::set<unsigned int> *const)(v1 + 272)) )
                  {
                    common::milog::MiLogStream::create(
                      &v55,
                      &common::milog::MiLogDefault::default_log_obj_,
                      3u,
                      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                      "addOneTrap",
                      3770);
                    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
                      &v55,
                      (const char (*)[26])"[ROGUE] no space for trap");
                    common::milog::MiLogStream::~MiLogStream(&v55);
                    v4 = -1;
                  }
                  else
                  {
                    std::allocator<unsigned int>::allocator(&__a);
                    M_node = std::set<unsigned int>::end((const std::set<unsigned int> *const)(v1 + 272))._M_node;
                    v17._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v1 + 272))._M_node;
                    std::vector<unsigned int>::vector<std::_Rb_tree_const_iterator<unsigned int>,void>(
                      (std::vector<unsigned int> *const)(v1 + 208),
                      v17,
                      (std::_Rb_tree_const_iterator<unsigned int>)M_node,
                      &__a);
                    std::allocator<unsigned int>::~allocator(&__a);
                    v18 = std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v1 + 208));
                    rand_idx = common::tools::RandomUtils::rand<unsigned int>(0, v18 - 1);
                    v19 = rand_idx;
                    if ( v19 < std::vector<unsigned int>::size((const std::vector<unsigned int> *const)(v1 + 208)) )
                    {
                      v20 = std::vector<unsigned int>::operator[](
                              (std::vector<unsigned int> *const)(v1 + 208),
                              rand_idx);
                      v21 = v20;
                      if ( *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) != 0
                        && (char)(((unsigned __int8)v20 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) )
                      {
                        __asan_report_load4(v20);
                      }
                      *(_DWORD *)(v1 + 32) = *v21;
                      point_config_ptr = GroupScriptConfig::findPointConfig(trap_group_config_ptr, *(_DWORD *)(v1 + 32));
                      if ( point_config_ptr )
                      {
                        ServiceBox::findService<GameserverService>();
                        GameserverService::getConfig((GameserverService *const)(v1 + 176));
                        v25 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 176))->design_config.txt_config_mgr.activity_rogue_config_mgr;
                        if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
                          && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3)
                                                                              + 0x7FFF8000) )
                        {
                          __asan_report_load4(&this->dungeon_id_);
                        }
                        ActivityRogueExcelConfigMgr::findTrapWeightMapByDungeonId(
                          (std::map<unsigned int,unsigned int> *)(v1 + 352),
                          v25,
                          this->dungeon_id_);
                        std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v1 + 176));
                        *(_DWORD *)(v1 + 48) = 0;
                        if ( common::tools::RandomUtils::weightSelectOne<unsigned int,unsigned int>(
                               (const std::map<unsigned int,unsigned int> *)(v1 + 352),
                               (unsigned int *)(v1 + 48),
                               0) )
                        {
                          common::milog::MiLogStream::create(
                            &v55,
                            &common::milog::MiLogDefault::default_log_obj_,
                            3u,
                            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                            "addOneTrap",
                            3791);
                          common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                            &v55,
                            (const char (*)[31])"[ROGUE] weightSelectOne failed");
                          common::milog::MiLogStream::~MiLogStream(&v55);
                          v4 = -1;
                        }
                        else
                        {
                          GadgetParam::GadgetParam((GadgetParam *const)(v1 + 432));
                          *(_DWORD *)(v1 + 432) = *(_DWORD *)(v1 + 48);
                          v26 = (Scene *)std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 144));
                          *(_DWORD *)(v1 + 440) = Scene::genNewEntityId(v26, PROT_ENTITY_GADGET);
                          if ( (((unsigned __int8)point_config_ptr + 4) & 7) >= *(_BYTE *)(((unsigned __int64)&point_config_ptr->pos >> 3)
                                                                                         + 0x7FFF8000)
                            && *(_BYTE *)(((unsigned __int64)&point_config_ptr->pos >> 3) + 0x7FFF8000) != 0
                            || *(_BYTE *)((((unsigned __int64)&point_config_ptr->pos.z + 3) >> 3) + 0x7FFF8000) != 0
                            && (((unsigned __int8)point_config_ptr + 15) & 7) >= *(_BYTE *)((((unsigned __int64)&point_config_ptr->pos.z
                                                                                            + 3) >> 3)
                                                                                          + 0x7FFF8000) )
                          {
                            __asan_report_load_n(&point_config_ptr->pos, 12LL);
                          }
                          *(Vector3 *)(v1 + 444) = point_config_ptr->pos;
                          if ( *(char *)(((unsigned __int64)&point_config_ptr->rot >> 3) + 0x7FFF8000) < 0
                            || *(_BYTE *)((((unsigned __int64)&point_config_ptr->rot.z + 3) >> 3) + 0x7FFF8000) != 0
                            && (((unsigned __int8)point_config_ptr + 27) & 7) >= *(_BYTE *)((((unsigned __int64)&point_config_ptr->rot.z
                                                                                            + 3) >> 3)
                                                                                          + 0x7FFF8000) )
                          {
                            __asan_report_load_n(&point_config_ptr->rot, 12LL);
                          }
                          *(Vector3 *)(v1 + 456) = point_config_ptr->rot;
                          ServiceBox::findService<GameserverService>();
                          GameserverService::getConfig((GameserverService *const)(v1 + 176));
                          p_revise_level_grow_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 176))->design_config.txt_config_mgr.revise_level_grow_config_mgr;
                          if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
                            __asan_report_load8(&this->activity_);
                          InitWorldLevel = RoguelikeDungeonActivity::getInitWorldLevel(this->activity_);
                          if ( *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3) + 0x7FFF8000) != 0
                            && (char)((((_BYTE)stage_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3)
                                                                                            + 0x7FFF8000) )
                          {
                            __asan_report_load4(&stage_config_ptr->revise_level_id);
                          }
                          *(_DWORD *)(v1 + 468) = ReviseLevelGrowExcelConfigMgr::findReviseLevel(
                                                    p_revise_level_grow_config_mgr,
                                                    stage_config_ptr->revise_level_id,
                                                    InitWorldLevel)
                                                + 1;
                          std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v1 + 176));
                          *(_DWORD *)(v1 + 524) = 0;
                          *(_DWORD *)(v1 + 484) = 0;
                          EntityMgr::createGadget((const GadgetParam *)(v1 + 176));
                          if ( std::operator==<Gadget>((const std::shared_ptr<Gadget> *)(v1 + 176), 0LL) )
                          {
                            common::milog::MiLogStream::create(
                              &v55,
                              &common::milog::MiLogDefault::default_log_obj_,
                              3u,
                              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                              "addOneTrap",
                              3805);
                            v29 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                                    &v55,
                                    (const char (*)[46])"[ROGUE] gadget_ptr create failed. gadget_id: ");
                            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                              v29,
                              (const unsigned int *)(v1 + 48));
                            common::milog::MiLogStream::~MiLogStream(&v55);
                            v4 = -1;
                          }
                          else
                          {
                            v30 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 176));
                            v31 = v30;
                            if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
                              __asan_report_load8(v30);
                            v32 = *(_QWORD *)v31->baseclass_0 + 56LL;
                            if ( *(_BYTE *)((v32 >> 3) + 0x7FFF8000) )
                              v32 = __asan_report_load8(*(_QWORD *)v31->baseclass_0 + 56LL);
                            v41 = *(__int64 (__fastcall **)(std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, VisionContext *))v32;
                            v33 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 144));
                            *(_DWORD *)(v1 + 64) = v41(v31, v33, &VisionContext::meet_context);
                            if ( *(_DWORD *)(v1 + 64) )
                            {
                              common::milog::MiLogStream::create(
                                &v55,
                                &common::milog::MiLogDefault::default_log_obj_,
                                3u,
                                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                                "addOneTrap",
                                3811);
                              v34 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                                      &v55,
                                      (const char (*)[43])"[ROGUE] gadget_ptr enterScene failed, ret:");
                              common::milog::MiLogStream::operator<<<int,(int *)0>(v34, (const int *)(v1 + 64));
                              common::milog::MiLogStream::~MiLogStream(&v55);
                              v4 = -1;
                            }
                            else
                            {
                              *(std::pair<unsigned int,unsigned int> *)(v1 + 80) = std::make_pair<unsigned int const&,unsigned int &>(
                                                                                     &gadget_weight_config_ptr->trap_group_id,
                                                                                     (unsigned int *)(v1 + 32));
                              std::map<std::pair<unsigned int,unsigned int>,unsigned int>::emplace<std::pair<unsigned int,unsigned int>&,unsigned int &>(
                                &this->trap_group_pair_gadget_id_map_,
                                (std::pair<unsigned int,unsigned int> *)(v1 + 80),
                                (unsigned int *)(v1 + 48),
                                (std::pair<unsigned int,unsigned int> *)&this->trap_group_pair_gadget_id_map_,
                                v35);
                              v36 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 176));
                              val = Entity::getEntityId((const Entity *const)v36);
                              std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::emplace<unsigned int,std::pair<unsigned int,unsigned int>&>(
                                &this->trap_entity_id_2_group_pair_map_,
                                &val,
                                (std::pair<unsigned int,unsigned int> *)(v1 + 80),
                                v37,
                                v38);
                              v39 = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::operator[](
                                      &this->trap_group_pair_map_,
                                      (const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::key_type *)(v1 + 80));
                              std::weak_ptr<Gadget>::operator=<Gadget>(v39, (const std::shared_ptr<Gadget> *)(v1 + 176));
                              v4 = 0;
                            }
                          }
                          std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v1 + 176));
                          GadgetParam::~GadgetParam((GadgetParam *const)(v1 + 432));
                        }
                        std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v1 + 352));
                      }
                      else
                      {
                        common::milog::MiLogStream::create(
                          &v55,
                          &common::milog::MiLogDefault::default_log_obj_,
                          3u,
                          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                          "addOneTrap",
                          3784);
                        v22 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                                &v55,
                                (const char (*)[43])"[ROGUE] cannot find point_config group_id:");
                        v23 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                                v22,
                                &gadget_weight_config_ptr->trap_group_id);
                        v24 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(
                                v23,
                                (const char (*)[12])" config_id:");
                        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                          v24,
                          (const unsigned int *)(v1 + 32));
                        common::milog::MiLogStream::~MiLogStream(&v55);
                        v4 = -1;
                      }
                    }
                    else
                    {
                      common::milog::MiLogStream::create(
                        &v55,
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                        "addOneTrap",
                        3777);
                      common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                        &v55,
                        (const char (*)[20])"[ROGUE] rand failed");
                      common::milog::MiLogStream::~MiLogStream(&v55);
                      v4 = -1;
                    }
                    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v1 + 208));
                  }
                  std::set<unsigned int>::~set((std::set<unsigned int> *const)(v1 + 272));
                }
                else
                {
                  common::milog::MiLogStream::create(
                    &v55,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "addOneTrap",
                    3760);
                  v15 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                          &v55,
                          (const char (*)[42])"[ROGUE] cannot find trap group, group_id:");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v15,
                    &gadget_weight_config_ptr->trap_group_id);
                  common::milog::MiLogStream::~MiLogStream(&v55);
                  v4 = -1;
                }
              }
              else
              {
                common::milog::MiLogStream::create(
                  &v55,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "addOneTrap",
                  3753);
                v13 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
                        &v55,
                        (const char (*)[58])"[ROGUE] gadget_weight_config_ptr is nullptr, dungeon_id_:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &this->dungeon_id_);
                common::milog::MiLogStream::~MiLogStream(&v55);
                v4 = -1;
              }
            }
            else
            {
              common::milog::MiLogStream::create(
                &v55,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "addOneTrap",
                3747);
              v11 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
                      &v55,
                      (const char (*)[47])"[ROGUE] stage_config_ptr is nullptr, stage_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &this->stage_id_);
              common::milog::MiLogStream::~MiLogStream(&v55);
              v4 = -1;
            }
          }
          else
          {
            common::milog::MiLogStream::create(
              &v55,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "addOneTrap",
              3741);
            v9 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
                   &v55,
                   (const char (*)[72])"[ROGUE] dungeon_weight_config_ptr is nullptr, dungeon_weight_config_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &this->dungeon_weight_config_id_);
            common::milog::MiLogStream::~MiLogStream(&v55);
            v4 = -1;
          }
        }
      }
      std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v1 + 144));
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v1 + 112));
  }
  if ( v56 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8020) = 0;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8028) = 0;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8030) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF809C) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF80A4) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    __asan_stack_free_5(v1, 1376LL, v56);
  }
  return v4;
};

// Line 3822: range 000000001594C862-000000001594C966
int32_t __cdecl RogueLikeDungeonRuntimeMgr::clearAllTraps(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r12
  int32_t result; // eax
  char v5[96]; // [rsp+10h] [rbp-60h] BYREF

  v1 = (unsigned __int64)v5;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 1 22 clear_entity_func:3823";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::clearAllTraps;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202116351;
  RogueLikeDungeonRuntimeMgr::clearAllTraps(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator()(
    (const RogueLikeDungeonRuntimeMgr::clearAllTraps::<lambda(const GroupPairEntityMap&)> *const)(v1 + 32),
    &this->trap_group_pair_map_);
  std::unordered_map<unsigned int,std::pair<unsigned int,unsigned int>>::clear(&this->trap_entity_id_2_group_pair_map_);
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::clear(&this->trap_group_pair_map_);
  std::map<std::pair<unsigned int,unsigned int>,unsigned int>::clear(&this->trap_group_pair_gadget_id_map_);
  result = 0;
  if ( v5 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3823: range 000000001594C636-000000001594C861
void __cdecl RogueLikeDungeonRuntimeMgr::clearAllTraps(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator()(
        const RogueLikeDungeonRuntimeMgr::clearAllTraps::<lambda(const GroupPairEntityMap&)> *const __closure,
        const RogueLikeDungeonRuntimeMgr::GroupPairEntityMap *group_map)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r13
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  unsigned __int64 v6; // rax
  unsigned __int64 v7; // rdx
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::const_iterator __for_begin; // [rsp+10h] [rbp-90h] BYREF
  std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > >::const_iterator __for_end; // [rsp+18h] [rbp-88h] BYREF
  const std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int> >,std::equal_to<std::pair<unsigned int,unsigned int> >,std::allocator<std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > > > *__for_range; // [rsp+20h] [rbp-80h]
  const std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > *v11; // [rsp+28h] [rbp-78h]
  std::tuple_element<0,const std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > >::type *_; // [rsp+30h] [rbp-70h]
  std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > >::type *gadget_wtr; // [rsp+38h] [rbp-68h]
  char v14[96]; // [rsp+40h] [rbp-60h] BYREF

  v2 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 15 gadget_ptr:3827";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::clearAllTraps(void)::{lambda(std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>> const&)#1}::operator();
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  __for_range = group_map;
  __for_begin._M_cur = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::begin(group_map)._M_cur;
  __for_end._M_cur = std::unordered_map<std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget>,boost::hash<std::pair<unsigned int,unsigned int>>,std::equal_to<std::pair<unsigned int,unsigned int>>,std::allocator<std::pair<std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>>>::end(group_map)._M_cur;
  while ( std::__detail::operator!=<std::pair<std::pair const<unsigned int,unsigned int>,std::weak_ptr<Gadget>>,true>(
            &__for_begin,
            &__for_end) )
  {
    v11 = std::__detail::_Node_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,std::weak_ptr<Gadget>>,false,true>::operator*(&__for_begin);
    _ = std::get<0ul,std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>(v11);
    gadget_wtr = (std::tuple_element<1,const std::pair<const std::pair<unsigned int,unsigned int>,std::weak_ptr<Gadget> > >::type *)std::get<1ul,std::pair<unsigned int,unsigned int> const,std::weak_ptr<Gadget>>(v11);
    std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v2 + 32));
    if ( std::operator!=<Gadget>((const std::shared_ptr<Gadget> *)(v2 + 32), 0LL) )
    {
      v5 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
      if ( Entity::isOnScene((const Entity *const)v5) )
      {
        v6 = (unsigned __int64)std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
        if ( *(_BYTE *)((v6 >> 3) + 0x7FFF8000) )
          v6 = __asan_report_load8(v6);
        v7 = *(_QWORD *)v6 + 128LL;
        if ( *(_BYTE *)((v7 >> 3) + 0x7FFF8000) )
          v6 = __asan_report_load8(*(_QWORD *)v6 + 128LL);
        (*(void (__fastcall **)(unsigned __int64, VisionContext *))v7)(v6, &VisionContext::miss_context);
      }
    }
    std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v2 + 32));
    std::__detail::_Node_const_iterator<std::pair<std::pair const<unsigned int,unsigned int>,std::weak_ptr<Gadget>>,false,true>::operator++(&__for_begin);
  }
  if ( v14 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 3846: range 000000001594C968-000000001594D3C7
int32_t __cdecl RogueLikeDungeonRuntimeMgr::notifyAllData(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  int32_t v4; // r14d
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rcx
  common::milog::MiLogStream *v6; // rax
  unsigned __int64 *v7; // rax
  unsigned __int64 *v8; // rax
  unsigned int *v9; // rax
  google::protobuf::uint32 *v10; // rdx
  ReviseLevelGrowExcelConfigMgr *p_revise_level_grow_config_mgr; // r14
  uint32_t InitWorldLevel; // ecx
  int32_t result; // eax
  uint32_t revise_level; // [rsp+10h] [rbp-240h]
  std::vector<long unsigned int>::iterator __for_begin; // [rsp+18h] [rbp-238h] BYREF
  std::vector<long unsigned int>::iterator __for_end; // [rsp+20h] [rbp-230h] BYREF
  const data::RogueStageExcelConfig *stage_config_ptr; // [rsp+28h] [rbp-228h]
  RoguelikeMiscMgr *misc_mgr; // [rsp+30h] [rbp-220h]
  std::vector<long unsigned int> *__for_range; // [rsp+38h] [rbp-218h]
  std::vector<long unsigned int> *__for_range_0; // [rsp+40h] [rbp-210h]
  google::protobuf::Map<unsigned int,proto::RogueCellInfo> *cell_info_map; // [rsp+48h] [rbp-208h]
  std::map<unsigned int,RogueCell> *__for_range_1; // [rsp+50h] [rbp-200h]
  std::unordered_set<unsigned int> *__for_range_2; // [rsp+58h] [rbp-1F8h]
  const std::pair<unsigned int const,RogueCell> *v24; // [rsp+60h] [rbp-1F0h]
  std::tuple_element<0,const std::pair<unsigned int const,RogueCell> >::type *cell_id; // [rsp+68h] [rbp-1E8h]
  std::tuple_element<1,const std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+70h] [rbp-1E0h]
  proto::RogueCellInfo *cell_info; // [rsp+78h] [rbp-1D8h]
  unsigned __int64 guid_0; // [rsp+80h] [rbp-1D0h]
  unsigned __int64 guid; // [rsp+88h] [rbp-1C8h]
  std::shared_ptr<Config> v30; // [rsp+90h] [rbp-1C0h] BYREF
  common::milog::MiLogStream v31; // [rsp+A0h] [rbp-1B0h] BYREF
  char v32[400]; // [rsp+C0h] [rbp-190h] BYREF

  v1 = (unsigned __int64)v32;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_3(352LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 48 232 11 notify:3859";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::notifyAllData;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = 61937;
  v3[536862728] = -218103808;
  v3[536862729] = -202116109;
  v3[536862730] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v31,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "notifyAllData",
      3849);
    common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
      &v31,
      (const char (*)[29])"[ROGUE] runtime is not valid");
    common::milog::MiLogStream::~MiLogStream(&v31);
    v4 = -1;
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v30);
    p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v30)->design_config.txt_config_mgr.activity_rogue_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->stage_id_);
    }
    stage_config_ptr = data::ActivityRogueExcelConfigMgrBase::findRogueStageExcelConfig(
                         p_activity_rogue_config_mgr,
                         this->stage_id_);
    std::shared_ptr<Config>::~shared_ptr(&v30);
    if ( stage_config_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->activity_);
      misc_mgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(this->activity_);
      proto::EnterRoguelikeDungeonNotify::EnterRoguelikeDungeonNotify((proto::EnterRoguelikeDungeonNotify *const)(v1 + 48));
      if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->dungeon_weight_config_id_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->dungeon_weight_config_id_);
      }
      proto::EnterRoguelikeDungeonNotify::set_dungeon_weight_config_id(
        (proto::EnterRoguelikeDungeonNotify *const)(v1 + 48),
        this->dungeon_weight_config_id_);
      if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->dungeon_id_);
      }
      proto::EnterRoguelikeDungeonNotify::set_dungeon_id(
        (proto::EnterRoguelikeDungeonNotify *const)(v1 + 48),
        this->dungeon_id_);
      __for_range = &this->rogue_team_.onstage_mirror_avatar_guid_vec;
      __for_begin._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
      __for_end._M_current = std::vector<unsigned long>::end(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
      while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__for_begin, &__for_end) )
      {
        v7 = __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
        if ( *(_BYTE *)(((unsigned __int64)v7 >> 3) + 0x7FFF8000) )
          v7 = (unsigned __int64 *)__asan_report_load8(v7);
        guid = *v7;
        proto::EnterRoguelikeDungeonNotify::add_onstage_avatar_guid_list(
          (proto::EnterRoguelikeDungeonNotify *const)(v1 + 48),
          guid);
        __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
      }
      __for_range_0 = &this->rogue_team_.backstage_mirror_avatar_guid_vec;
      __for_begin._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.backstage_mirror_avatar_guid_vec)._M_current;
      __for_end._M_current = std::vector<unsigned long>::end(__for_range_0)._M_current;
      while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__for_begin, &__for_end) )
      {
        v8 = __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
        if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
          v8 = (unsigned __int64 *)__asan_report_load8(v8);
        guid_0 = *v8;
        proto::EnterRoguelikeDungeonNotify::add_backstage_avatar_guid_list(
          (proto::EnterRoguelikeDungeonNotify *const)(v1 + 48),
          guid_0);
        __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
      }
      cell_info_map = proto::EnterRoguelikeDungeonNotify::mutable_cell_info_map((proto::EnterRoguelikeDungeonNotify *const)(v1 + 48));
      __for_range_1 = &this->rogue_cell_map_;
      __for_begin._M_current = (unsigned __int64 *)std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
      __for_end._M_current = (unsigned __int64 *)std::map<unsigned int,RogueCell>::end(__for_range_1)._M_node;
      while ( std::operator!=(
                (const std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Self *)&__for_begin,
                (const std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> >::_Self *)&__for_end) )
      {
        v24 = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> > *const)&__for_begin);
        cell_id = std::get<0ul,unsigned int const,RogueCell>(v24);
        cell = (std::tuple_element<1,const std::pair<unsigned int const,RogueCell> >::type *)std::get<1ul,unsigned int const,RogueCell>(v24);
        cell_info = google::protobuf::Map<unsigned int,proto::RogueCellInfo>::operator[](cell_info_map, cell_id);
        RogueCell::toClient(cell, cell_info);
        std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell> > *const)&__for_begin);
      }
      __for_range_2 = &this->explored_cell_set_;
      __for_begin._M_current = (unsigned __int64 *)std::unordered_set<unsigned int>::begin(&this->explored_cell_set_)._M_cur;
      __for_end._M_current = (unsigned __int64 *)std::unordered_set<unsigned int>::end(__for_range_2)._M_cur;
      while ( std::__detail::operator!=<unsigned int,false>(
                (const std::__detail::_Node_iterator_base<unsigned int,false> *)&__for_begin,
                (const std::__detail::_Node_iterator_base<unsigned int,false> *)&__for_end) )
      {
        v9 = (unsigned int *)std::__detail::_Node_iterator<unsigned int,true,false>::operator*((const std::__detail::_Node_iterator<unsigned int,true,false> *const)&__for_begin);
        v10 = v9;
        if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v9 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v9);
        }
        proto::EnterRoguelikeDungeonNotify::add_explored_cell_list(
          (proto::EnterRoguelikeDungeonNotify *const)(v1 + 48),
          *v10);
        std::__detail::_Node_iterator<unsigned int,true,false>::operator++((std::__detail::_Node_iterator<unsigned int,true,false> *const)&__for_begin);
      }
      if ( *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->cur_cell_id_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->cur_cell_id_);
      }
      proto::EnterRoguelikeDungeonNotify::set_cur_cell_id(
        (proto::EnterRoguelikeDungeonNotify *const)(v1 + 48),
        this->cur_cell_id_);
      if ( *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->cur_level_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->cur_level_);
      }
      proto::EnterRoguelikeDungeonNotify::set_cur_level(
        (proto::EnterRoguelikeDungeonNotify *const)(v1 + 48),
        this->cur_level_);
      if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->stage_id_);
      }
      proto::EnterRoguelikeDungeonNotify::set_stage_id(
        (proto::EnterRoguelikeDungeonNotify *const)(v1 + 48),
        this->stage_id_);
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v30);
      p_revise_level_grow_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v30)->design_config.txt_config_mgr.revise_level_grow_config_mgr;
      if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->activity_);
      InitWorldLevel = RoguelikeDungeonActivity::getInitWorldLevel(this->activity_);
      if ( *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)stage_config_ptr + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&stage_config_ptr->revise_level_id >> 3)
                                                                        + 0x7FFF8000) )
      {
        __asan_report_load4(&stage_config_ptr->revise_level_id);
      }
      revise_level = ReviseLevelGrowExcelConfigMgr::findReviseLevel(
                       p_revise_level_grow_config_mgr,
                       stage_config_ptr->revise_level_id,
                       InitWorldLevel);
      std::shared_ptr<Config>::~shared_ptr(&v30);
      proto::EnterRoguelikeDungeonNotify::set_revise_monster_level(
        (proto::EnterRoguelikeDungeonNotify *const)(v1 + 48),
        revise_level);
      RoguelikeMiscMgr::toClient(misc_mgr, (proto::EnterRoguelikeDungeonNotify *)(v1 + 48));
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8(&this->player_);
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v1 + 48));
      v4 = 0;
      proto::EnterRoguelikeDungeonNotify::~EnterRoguelikeDungeonNotify((proto::EnterRoguelikeDungeonNotify *const)(v1 + 48));
    }
    else
    {
      common::milog::MiLogStream::create(
        &v31,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "notifyAllData",
        3855);
      v6 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
             &v31,
             (const char (*)[47])"[ROGUE] stage_config_ptr is nullptr, stage_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &this->stage_id_);
      common::milog::MiLogStream::~MiLogStream(&v31);
      v4 = -1;
    }
  }
  result = v4;
  if ( v32 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 3891: range 000000001594D3C8-000000001594D51C
bool __cdecl RogueLikeDungeonRuntimeMgr::isTempLeave(const RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r12
  bool v4; // al
  bool v5; // r15
  bool result; // al
  char v7[112]; // [rsp+10h] [rbp-70h] BYREF

  v1 = (unsigned __int64)v7;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 16 22 dungeon_scene_ptr:3892";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::isTempLeave;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202178560;
  std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v1 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  v4 = this->is_valid_ && std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v1 + 32));
  v5 = v4;
  std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v1 + 32));
  result = v5;
  if ( v7 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3902: range 000000001594D51E-000000001594D83D
void __cdecl RogueLikeDungeonRuntimeMgr::onAvatarDieEvent(
        RogueLikeDungeonRuntimeMgr *const this,
        const AvatarDieEvent *event)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  _DWORD *v4; // r13
  unsigned __int64 *M_current; // r15
  std::vector<long unsigned int>::iterator v7; // rax
  __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > __lhs; // [rsp+28h] [rbp-A8h] BYREF
  __gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> > __rhs; // [rsp+30h] [rbp-A0h] BYREF
  RogueStageData *stage_ptr; // [rsp+38h] [rbp-98h]
  char v11[144]; // [rsp+40h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 20 cur_dungeon_ptr:3907 64 16 22 dungeon_scene_ptr:3908";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::onAvatarDieEvent;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( this->is_valid_ )
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    Player::getDungeonComp(this->player_);
    PlayerDungeonComp::getCurDungeon((PlayerDungeonComp *const)(v2 + 32));
    std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v2 + 64));
    if ( std::operator!=<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v2 + 64), 0LL)
      && std::operator==<DungeonScene,DungeonScene>(
           (const std::shared_ptr<DungeonScene> *)(v2 + 64),
           (const std::shared_ptr<DungeonScene> *)(v2 + 32)) )
    {
      __rhs._M_current = std::vector<unsigned long>::end(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
      M_current = std::vector<unsigned long>::end(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
      v7._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
      __lhs._M_current = std::find<__gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>,unsigned long>(
                           v7,
                           (__gnu_cxx::__normal_iterator<long unsigned int*,std::vector<long unsigned int> >)M_current,
                           &event->avatar_guid)._M_current;
      if ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__lhs, &__rhs) )
      {
        stage_ptr = RogueLikeDungeonRuntimeMgr::getStage(this);
        if ( stage_ptr )
        {
          if ( *(char *)(((unsigned __int64)&stage_ptr->is_avatar_dead >> 3) + 0x7FFF8000) < 0 )
            __asan_report_store1(&stage_ptr->is_avatar_dead, &__rhs, &stage_ptr->is_avatar_dead);
          stage_ptr->is_avatar_dead = 1;
        }
      }
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 64));
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v2 + 32));
  }
  if ( v11 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
};

// Line 3923: range 000000001594D83E-000000001594D9D0
bool __cdecl RogueLikeDungeonRuntimeMgr::isAllChallengeCellFinish(RogueLikeDungeonRuntimeMgr *const this)
{
  data::RogueCellType *p_type; // rax
  bool is_finished; // [rsp+1Fh] [rbp-31h]
  std::map<unsigned int,RogueCell>::iterator __for_begin; // [rsp+20h] [rbp-30h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+28h] [rbp-28h] BYREF
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+30h] [rbp-20h]
  const std::pair<unsigned int const,RogueCell> *v7; // [rsp+38h] [rbp-18h]
  std::tuple_element<0,const std::pair<unsigned int const,RogueCell> >::type *cell_id; // [rsp+40h] [rbp-10h]
  std::tuple_element<1,const std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+48h] [rbp-8h]

  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
    return 0;
  is_finished = 1;
  __for_range = &this->rogue_cell_map_;
  __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
  __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
  while ( std::operator!=(&__for_begin, &__for_end) )
  {
    v7 = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
    cell_id = std::get<0ul,unsigned int const,RogueCell>(v7);
    cell = (std::tuple_element<1,const std::pair<unsigned int const,RogueCell> >::type *)std::get<1ul,unsigned int const,RogueCell>(v7);
    p_type = &cell->type;
    if ( *(_BYTE *)(((unsigned __int64)p_type >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)p_type & 7) + 3) >= *(_BYTE *)(((unsigned __int64)p_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(p_type);
    }
    if ( cell->type == ROGUE_CELL_TYPE_ELITE
      || cell->type == ROGUE_CELL_TYPE_NORMAL
      || cell->type == ROGUE_CELL_TYPE_BOSS )
    {
      if ( *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&cell->state >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&cell->state);
      }
      if ( cell->state != ROGUE_CELL_FINISH )
        return 0;
    }
    std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
  }
  return is_finished;
};

// Line 3944: range 000000001594D9D2-000000001594DA51
RogueStageData *__cdecl RogueLikeDungeonRuntimeMgr::getStage(RogueLikeDungeonRuntimeMgr *const this)
{
  RoguelikeDungeonActivity *activity; // rdx

  if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
    __asan_report_load8(&this->activity_);
  activity = this->activity_;
  if ( *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->stage_id_ >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->stage_id_);
  }
  return RoguelikeDungeonActivity::findStage(activity, this->stage_id_);
};

// Line 3949: range 000000001594DA52-000000001594E1D1
int32_t __cdecl RogueLikeDungeonRuntimeMgr::banSpring(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  int32_t result; // eax
  std::__detail::_Node_iterator<unsigned int,true,false>::reference v5; // rax
  _DWORD *v6; // rdx
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  Gadget *v11; // rax
  std::map<data::RogueCellType,std::unordered_set<unsigned int>>::key_type __x; // [rsp+18h] [rbp-158h] BYREF
  uint32_t gadget_state; // [rsp+1Ch] [rbp-154h]
  std::unordered_set<unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-150h] BYREF
  std::unordered_set<unsigned int>::iterator __for_end; // [rsp+28h] [rbp-148h] BYREF
  std::_Rb_tree_iterator<std::pair<const data::RogueCellType,std::unordered_set<unsigned int> > >::_Self __y; // [rsp+30h] [rbp-140h] BYREF
  std::unordered_set<unsigned int> *cell_id_set; // [rsp+38h] [rbp-138h]
  std::unordered_set<unsigned int> *__for_range; // [rsp+40h] [rbp-130h]
  RogueCell *cell_ptr; // [rsp+48h] [rbp-128h]
  std::shared_ptr<Config> v20; // [rsp+50h] [rbp-120h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-110h] BYREF
  common::milog::MiLogStream v22; // [rsp+80h] [rbp-F0h] BYREF
  char v23[208]; // [rsp+A0h] [rbp-D0h] BYREF

  v1 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_2(160LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "4 48 4 12 cell_id:3962 64 8 9 iter:3955 96 8 16 gadget_iter:3975 128 16 15 gadget_ptr:3981";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::banSpring;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234556943;
  v3[536862722] = -218959360;
  v3[536862723] = -218959360;
  v3[536862724] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v22,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "banSpring",
      3952);
    common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(&v22, (const char (*)[21])"[ROGUE] is not valid");
    common::milog::MiLogStream::~MiLogStream(&v22);
    result = -1;
  }
  else
  {
    __x = ROGUE_CELL_TYPE_SPRING;
    *(std::map<data::RogueCellType,std::unordered_set<unsigned int>>::iterator *)(v1 + 64) = std::map<data::RogueCellType,std::unordered_set<unsigned int>>::find(
                                                                                               &this->cell_type_to_cell_id_map_,
                                                                                               &__x);
    __y._M_node = std::map<data::RogueCellType,std::unordered_set<unsigned int>>::end(&this->cell_type_to_cell_id_map_)._M_node;
    if ( std::operator==(
           (const std::_Rb_tree_iterator<std::pair<const data::RogueCellType,std::unordered_set<unsigned int> > >::_Self *)(v1 + 64),
           &__y) )
    {
      common::milog::MiLogStream::create(
        &v22,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "banSpring",
        3958);
      common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
        &v22,
        (const char (*)[30])"[ROGUE] spring cell not found");
      common::milog::MiLogStream::~MiLogStream(&v22);
      result = 0;
    }
    else
    {
      cell_id_set = &std::_Rb_tree_iterator<std::pair<data::RogueCellType const,std::unordered_set<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueCellType,std::unordered_set<unsigned int> > > *const)(v1 + 64))->second;
      __for_range = cell_id_set;
      __for_begin._M_cur = std::unordered_set<unsigned int>::begin(cell_id_set)._M_cur;
      __for_end._M_cur = std::unordered_set<unsigned int>::end(__for_range)._M_cur;
      while ( std::__detail::operator!=<unsigned int,false>(&__for_begin, &__for_end) )
      {
        v5 = std::__detail::_Node_iterator<unsigned int,true,false>::operator*(&__for_begin);
        v6 = v5;
        if ( *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v5 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v5);
        }
        *(_DWORD *)(v1 + 48) = *v6;
        cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v1 + 48));
        if ( cell_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&cell_ptr->state);
          }
          if ( cell_ptr->state != ROGUE_CELL_FINISH )
          {
            __x = ROGUE_CELL_TYPE_NORMAL;
            *(std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::iterator *)(v1 + 96) = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::find(
                                                                                                    &cell_ptr->operator_gadget_map,
                                                                                                    (const std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::key_type *)&__x);
            __y._M_node = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::end(&cell_ptr->operator_gadget_map)._M_node;
            if ( std::operator==(
                   (const std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::_Self *)(v1 + 96),
                   (const std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::_Self *)&__y) )
            {
              common::milog::MiLogStream::create(
                &v22,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "banSpring",
                3978);
              v8 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                     &v22,
                     (const char (*)[56])"[ROGUE] cell gadget revive operator not found, cell_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v8,
                (const unsigned int *)(v1 + 48));
              common::milog::MiLogStream::~MiLogStream(&v22);
            }
            else
            {
              std::_Rb_tree_iterator<std::pair<data::RogueCreateGadgetType const,std::weak_ptr<Gadget>>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > > *const)(v1 + 96));
              std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v1 + 128));
              if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v1 + 128)) )
              {
                common::milog::MiLogStream::create(
                  &v22,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "banSpring",
                  3984);
                v9 = common::milog::MiLogStream::operator<<<char [68],(char *[68])0>(
                       &v22,
                       (const char (*)[68])"[ROGUE] cell gadget revive operator gadget_ptr is nullptr, cell_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v9,
                  (const unsigned int *)(v1 + 48));
                common::milog::MiLogStream::~MiLogStream(&v22);
              }
              else
              {
                ServiceBox::findService<GameserverService>();
                GameserverService::getConfig((GameserverService *const)&v20);
                v10 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v20);
                gadget_state = ActivityRogueExcelConfigMgr::findGadgetStateByStateType(
                                 &v10->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                 ROGUE_GADGET_TYPE_SPRING_OPERATOR_REVEAL,
                                 ROGUE_GADGET_STATE_OPERATOR_FORBID);
                std::shared_ptr<Config>::~shared_ptr(&v20);
                v11 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 128));
                Gadget::setState(v11, gadget_state, 0, 1);
              }
              std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v1 + 128));
            }
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v21,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "banSpring",
            3967);
          v7 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                 &v21,
                 (const char (*)[33])"[ROGUE] cell not found, cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v1 + 48));
          common::milog::MiLogStream::~MiLogStream(&v21);
        }
        std::__detail::_Node_iterator<unsigned int,true,false>::operator++(&__for_begin);
      }
      common::milog::MiLogStream::create(
        &v22,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "banSpring",
        3990);
      common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(&v22, (const char (*)[19])"[ROGUE] ban spring");
      common::milog::MiLogStream::~MiLogStream(&v22);
      result = 0;
    }
  }
  if ( v23 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 3995: range 000000001594E1D2-000000001594E97A
int32_t __cdecl RogueLikeDungeonRuntimeMgr::recoverSpring(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // r13
  __int64 v2; // rax
  _DWORD *v3; // r12
  int32_t result; // eax
  std::__detail::_Node_iterator<unsigned int,true,false>::reference v5; // rax
  _DWORD *v6; // rdx
  common::milog::MiLogStream *v7; // rax
  common::milog::MiLogStream *v8; // rax
  common::milog::MiLogStream *v9; // rax
  proto::RogueCellState state; // ecx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  Gadget *v12; // rax
  std::map<data::RogueCellType,std::unordered_set<unsigned int>>::key_type __x; // [rsp+14h] [rbp-15Ch] BYREF
  data::RogueGadgetStateType rogue_gadget_state; // [rsp+18h] [rbp-158h]
  uint32_t gadget_state; // [rsp+1Ch] [rbp-154h]
  std::unordered_set<unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-150h] BYREF
  std::unordered_set<unsigned int>::iterator __for_end; // [rsp+28h] [rbp-148h] BYREF
  std::_Rb_tree_iterator<std::pair<const data::RogueCellType,std::unordered_set<unsigned int> > >::_Self __y; // [rsp+30h] [rbp-140h] BYREF
  std::unordered_set<unsigned int> *cell_id_set; // [rsp+38h] [rbp-138h]
  std::unordered_set<unsigned int> *__for_range; // [rsp+40h] [rbp-130h]
  RogueCell *cell_ptr; // [rsp+48h] [rbp-128h]
  std::shared_ptr<Config> v22; // [rsp+50h] [rbp-120h] BYREF
  common::milog::MiLogStream v23; // [rsp+60h] [rbp-110h] BYREF
  common::milog::MiLogStream v24; // [rsp+80h] [rbp-F0h] BYREF
  char v25[208]; // [rsp+A0h] [rbp-D0h] BYREF

  v1 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_2(160LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "4 48 4 12 cell_id:4010 64 8 9 iter:4002 96 8 16 gadget_iter:4023 128 16 15 gadget_ptr:4029";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::recoverSpring;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -234556943;
  v3[536862722] = -218959360;
  v3[536862723] = -218959360;
  v3[536862724] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v24,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "recoverSpring",
      3998);
    common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(&v24, (const char (*)[21])"[ROGUE] is not valid");
    common::milog::MiLogStream::~MiLogStream(&v24);
    result = -1;
  }
  else
  {
    __x = ROGUE_CELL_TYPE_SPRING;
    *(std::map<data::RogueCellType,std::unordered_set<unsigned int>>::iterator *)(v1 + 64) = std::map<data::RogueCellType,std::unordered_set<unsigned int>>::find(
                                                                                               &this->cell_type_to_cell_id_map_,
                                                                                               &__x);
    __y._M_node = std::map<data::RogueCellType,std::unordered_set<unsigned int>>::end(&this->cell_type_to_cell_id_map_)._M_node;
    if ( std::operator==(
           (const std::_Rb_tree_iterator<std::pair<const data::RogueCellType,std::unordered_set<unsigned int> > >::_Self *)(v1 + 64),
           &__y) )
    {
      common::milog::MiLogStream::create(
        &v24,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "recoverSpring",
        4005);
      common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
        &v24,
        (const char (*)[30])"[ROGUE] spring cell not found");
      common::milog::MiLogStream::~MiLogStream(&v24);
      result = 0;
    }
    else
    {
      cell_id_set = &std::_Rb_tree_iterator<std::pair<data::RogueCellType const,std::unordered_set<unsigned int>>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueCellType,std::unordered_set<unsigned int> > > *const)(v1 + 64))->second;
      __for_range = cell_id_set;
      __for_begin._M_cur = std::unordered_set<unsigned int>::begin(cell_id_set)._M_cur;
      __for_end._M_cur = std::unordered_set<unsigned int>::end(__for_range)._M_cur;
      while ( std::__detail::operator!=<unsigned int,false>(&__for_begin, &__for_end) )
      {
        v5 = std::__detail::_Node_iterator<unsigned int,true,false>::operator*(&__for_begin);
        v6 = v5;
        if ( *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v5 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v5 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v5);
        }
        *(_DWORD *)(v1 + 48) = *v6;
        cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v1 + 48));
        if ( cell_ptr )
        {
          if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) != 0
            && *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) <= 3 )
          {
            __asan_report_load4(&cell_ptr->state);
          }
          if ( cell_ptr->state != ROGUE_CELL_FINISH )
          {
            __x = ROGUE_CELL_TYPE_NORMAL;
            *(std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::iterator *)(v1 + 96) = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::find(
                                                                                                    &cell_ptr->operator_gadget_map,
                                                                                                    (const std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::key_type *)&__x);
            __y._M_node = std::map<data::RogueCreateGadgetType,std::weak_ptr<Gadget>>::end(&cell_ptr->operator_gadget_map)._M_node;
            if ( std::operator==(
                   (const std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::_Self *)(v1 + 96),
                   (const std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > >::_Self *)&__y) )
            {
              common::milog::MiLogStream::create(
                &v24,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                "recoverSpring",
                4026);
              v8 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                     &v24,
                     (const char (*)[56])"[ROGUE] cell gadget revive operator not found, cell_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v8,
                (const unsigned int *)(v1 + 48));
              common::milog::MiLogStream::~MiLogStream(&v24);
            }
            else
            {
              std::_Rb_tree_iterator<std::pair<data::RogueCreateGadgetType const,std::weak_ptr<Gadget>>>::operator->((const std::_Rb_tree_iterator<std::pair<const data::RogueCreateGadgetType,std::weak_ptr<Gadget> > > *const)(v1 + 96));
              std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v1 + 128));
              if ( std::operator==<Gadget>(0LL, (const std::shared_ptr<Gadget> *)(v1 + 128)) )
              {
                common::milog::MiLogStream::create(
                  &v24,
                  &common::milog::MiLogDefault::default_log_obj_,
                  3u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "recoverSpring",
                  4032);
                v9 = common::milog::MiLogStream::operator<<<char [68],(char *[68])0>(
                       &v24,
                       (const char (*)[68])"[ROGUE] cell gadget revive operator gadget_ptr is nullptr, cell_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v9,
                  (const unsigned int *)(v1 + 48));
                common::milog::MiLogStream::~MiLogStream(&v24);
              }
              else
              {
                if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) != 0
                  && *(_BYTE *)(((unsigned __int64)&cell_ptr->state >> 3) + 0x7FFF8000) <= 3 )
                {
                  __asan_report_load4(&cell_ptr->state);
                }
                state = cell_ptr->state;
                if ( *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3) + 0x7FFF8000) != 0
                  && (char)((((_BYTE)cell_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&cell_ptr->type >> 3)
                                                                          + 0x7FFF8000) )
                {
                  __asan_report_load4(&cell_ptr->type);
                }
                rogue_gadget_state = RogueLikeDungeonRuntimeMgr::getCellGadgetStateByCellState(cell_ptr->type, state);
                ServiceBox::findService<GameserverService>();
                GameserverService::getConfig((GameserverService *const)&v22);
                v11 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v22);
                gadget_state = ActivityRogueExcelConfigMgr::findGadgetStateByStateType(
                                 &v11->design_config.txt_config_mgr.activity_rogue_config_mgr,
                                 ROGUE_GADGET_TYPE_SPRING_OPERATOR_REVEAL,
                                 rogue_gadget_state);
                std::shared_ptr<Config>::~shared_ptr(&v22);
                v12 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 128));
                Gadget::setState(v12, gadget_state, 0, 1);
              }
              std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v1 + 128));
            }
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v23,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "recoverSpring",
            4015);
          v7 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
                 &v23,
                 (const char (*)[33])"[ROGUE] cell not found, cell_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, (const unsigned int *)(v1 + 48));
          common::milog::MiLogStream::~MiLogStream(&v23);
        }
        std::__detail::_Node_iterator<unsigned int,true,false>::operator++(&__for_begin);
      }
      result = 0;
    }
  }
  if ( v25 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 4044: range 000000001594E97C-000000001594ED7D
int32_t __cdecl RogueLikeDungeonRuntimeMgr::banGuardian(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // r12
  __int64 v2; // rax
  _DWORD *v3; // r13
  int32_t result; // eax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  const std::weak_ptr<Gadget> *v6; // rax
  Gadget *v7; // rax
  uint32_t gadget_state; // [rsp+14h] [rbp-ECh]
  std::map<unsigned int,RogueCell>::iterator __for_begin; // [rsp+18h] [rbp-E8h] BYREF
  std::map<unsigned int,RogueCell>::iterator __for_end; // [rsp+20h] [rbp-E0h] BYREF
  std::vector<std::weak_ptr<Gadget>>::iterator __for_begin_0; // [rsp+28h] [rbp-D8h] BYREF
  std::vector<std::weak_ptr<Gadget>>::iterator __for_end_0; // [rsp+30h] [rbp-D0h] BYREF
  std::map<unsigned int,RogueCell> *__for_range; // [rsp+38h] [rbp-C8h]
  std::pair<unsigned int const,RogueCell> *__in; // [rsp+40h] [rbp-C0h]
  std::tuple_element<0,std::pair<unsigned int const,RogueCell> >::type *cell_id; // [rsp+48h] [rbp-B8h]
  std::tuple_element<1,std::pair<unsigned int const,RogueCell> >::type *cell; // [rsp+50h] [rbp-B0h]
  std::vector<std::weak_ptr<Gadget>> *__for_range_0; // [rsp+58h] [rbp-A8h]
  common::milog::MiLogStream v18; // [rsp+60h] [rbp-A0h] BYREF
  char v19[128]; // [rsp+80h] [rbp-80h] BYREF

  v1 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_1(96LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "2 32 16 14 guard_wtr:4053 64 16 15 gadget_ptr:4055";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::banGuardian;
  v3 = (_DWORD *)(v1 >> 3);
  v3[536862720] = -235802127;
  v3[536862721] = -219021312;
  v3[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v18,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "banGuardian",
      4047);
    common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(&v18, (const char (*)[21])"[ROGUE] is not valid");
    common::milog::MiLogStream::~MiLogStream(&v18);
    result = -1;
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v1 + 64));
    v5 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 64));
    gadget_state = ActivityRogueExcelConfigMgr::findGadgetStateByStateType(
                     &v5->design_config.txt_config_mgr.activity_rogue_config_mgr,
                     ROGUE_GADGET_TYPE_GUARD,
                     ROGUE_GADGET_STATE_OPERATOR_FORBID);
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v1 + 64));
    __for_range = &this->rogue_cell_map_;
    __for_begin._M_node = std::map<unsigned int,RogueCell>::begin(&this->rogue_cell_map_)._M_node;
    __for_end._M_node = std::map<unsigned int,RogueCell>::end(&this->rogue_cell_map_)._M_node;
    while ( std::operator!=(&__for_begin, &__for_end) )
    {
      __in = std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator*(&__for_begin);
      cell_id = std::get<0ul,unsigned int const,RogueCell>(__in);
      cell = std::get<1ul,unsigned int const,RogueCell>(__in);
      __for_range_0 = &cell->guard_gadget_wtr_vec;
      __for_begin_0._M_current = std::vector<std::weak_ptr<Gadget>>::begin(&cell->guard_gadget_wtr_vec)._M_current;
      __for_end_0._M_current = std::vector<std::weak_ptr<Gadget>>::end(__for_range_0)._M_current;
      while ( __gnu_cxx::operator!=<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>(
                &__for_begin_0,
                &__for_end_0) )
      {
        v6 = __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>::operator*(&__for_begin_0);
        std::weak_ptr<Gadget>::weak_ptr((std::weak_ptr<Gadget> *const)(v1 + 32), v6);
        std::weak_ptr<Gadget>::lock((const std::weak_ptr<Gadget> *const)(v1 + 64));
        if ( std::operator!=<Gadget>((const std::shared_ptr<Gadget> *)(v1 + 64), 0LL) )
        {
          v7 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 64));
          Gadget::setState(v7, gadget_state, 0, 1);
        }
        std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v1 + 64));
        std::weak_ptr<Gadget>::~weak_ptr((std::weak_ptr<Gadget> *const)(v1 + 32));
        __gnu_cxx::__normal_iterator<std::weak_ptr<Gadget> *,std::vector<std::weak_ptr<Gadget>>>::operator++(&__for_begin_0);
      }
      std::_Rb_tree_iterator<std::pair<unsigned int const,RogueCell>>::operator++(&__for_begin);
    }
    result = 0;
  }
  if ( v19 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v1 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 4066: range 000000001594ED7E-000000001594EE92
bool __cdecl RogueLikeDungeonRuntimeMgr::isDungeonSettled(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r12
  bool v4; // r14
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  bool result; // al
  char v7[112]; // [rsp+10h] [rbp-70h] BYREF

  v1 = (unsigned __int64)v7;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 16 22 rogue_dungeon_ptr:4067";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::isDungeonSettled;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202178560;
  std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v1 + 32));
  if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v1 + 32), 0LL) )
  {
    v4 = 0;
  }
  else
  {
    v5 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
    v4 = DungeonScene::getDungeonResult(v5) != DUNGEON_RESULT_NONE;
  }
  std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v1 + 32));
  result = v4;
  if ( v7 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4077: range 000000001594EE94-000000001594F298
void __cdecl RogueLikeDungeonRuntimeMgr::fillRogueTeamLog(
        RogueLikeDungeonRuntimeMgr *const this,
        google::protobuf::RepeatedPtrField<proto_log::RogueAvatarBriefLog> *onstage_avatar_log_list,
        google::protobuf::RepeatedPtrField<proto_log::RogueAvatarBriefLog> *backstage_avatar_log_list)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  uint64_t *v6; // rax
  PlayerAvatarComp *AvatarComp; // rax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  uint32_t AvatarId; // eax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  uint32_t Level; // eax
  uint64_t *v12; // rax
  PlayerAvatarComp *v13; // rax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v14; // rax
  uint32_t v15; // eax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rax
  uint32_t v17; // eax
  std::vector<long unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-A0h] BYREF
  std::vector<long unsigned int>::iterator __for_end; // [rsp+28h] [rbp-98h] BYREF
  std::vector<long unsigned int> *__for_range; // [rsp+30h] [rbp-90h]
  std::vector<long unsigned int> *__for_range_0; // [rsp+38h] [rbp-88h]
  uint64_t guid_0; // [rsp+40h] [rbp-80h]
  proto_log::RogueAvatarBriefLog *avatar_log_0; // [rsp+48h] [rbp-78h]
  uint64_t guid; // [rsp+50h] [rbp-70h]
  proto_log::RogueAvatarBriefLog *avatar_log; // [rsp+58h] [rbp-68h]
  char v27[96]; // [rsp+60h] [rbp-60h] BYREF

  v3 = (unsigned __int64)v27;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 15 avatar_ptr:4091";
  *(_QWORD *)(v3 + 16) = RogueLikeDungeonRuntimeMgr::fillRogueTeamLog;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  __for_range = &this->rogue_team_.onstage_mirror_avatar_guid_vec;
  __for_begin._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
  __for_end._M_current = std::vector<unsigned long>::end(&this->rogue_team_.onstage_mirror_avatar_guid_vec)._M_current;
  while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__for_begin, &__for_end) )
  {
    v6 = __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
    if ( *(_BYTE *)(((unsigned __int64)v6 >> 3) + 0x7FFF8000) )
      v6 = (uint64_t *)__asan_report_load8(v6);
    guid = *v6;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    AvatarComp = Player::getAvatarComp(this->player_);
    PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v3 + 32), (uint64_t)AvatarComp);
    if ( std::operator!=<Avatar>(0LL, (const std::shared_ptr<Avatar> *)(v3 + 32)) )
    {
      avatar_log = google::protobuf::RepeatedPtrField<proto_log::RogueAvatarBriefLog>::Add(onstage_avatar_log_list);
      v8 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      AvatarId = Avatar::getAvatarId(v8);
      proto_log::RogueAvatarBriefLog::set_avatar_id(avatar_log, AvatarId);
      v10 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      Level = Creature::getLevel(v10);
      proto_log::RogueAvatarBriefLog::set_level(avatar_log, Level);
    }
    std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v3 + 32));
    __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
  }
  __for_range_0 = &this->rogue_team_.backstage_mirror_avatar_guid_vec;
  __for_begin._M_current = std::vector<unsigned long>::begin(&this->rogue_team_.backstage_mirror_avatar_guid_vec)._M_current;
  __for_end._M_current = std::vector<unsigned long>::end(__for_range_0)._M_current;
  while ( __gnu_cxx::operator!=<unsigned long *,std::vector<unsigned long>>(&__for_begin, &__for_end) )
  {
    v12 = __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator*(&__for_begin);
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
      v12 = (uint64_t *)__asan_report_load8(v12);
    guid_0 = *v12;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8(&this->player_);
    v13 = Player::getAvatarComp(this->player_);
    PlayerAvatarComp::findAvatar((const PlayerAvatarComp *const)(v3 + 32), (uint64_t)v13);
    if ( std::operator!=<Avatar>(0LL, (const std::shared_ptr<Avatar> *)(v3 + 32)) )
    {
      avatar_log_0 = google::protobuf::RepeatedPtrField<proto_log::RogueAvatarBriefLog>::Add(backstage_avatar_log_list);
      v14 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v15 = Avatar::getAvatarId(v14);
      proto_log::RogueAvatarBriefLog::set_avatar_id(avatar_log_0, v15);
      v16 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v17 = Creature::getLevel(v16);
      proto_log::RogueAvatarBriefLog::set_level(avatar_log_0, v17);
    }
    std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v3 + 32));
    __gnu_cxx::__normal_iterator<unsigned long *,std::vector<unsigned long>>::operator++(&__for_begin);
  }
  if ( v27 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 4103: range 000000001594F29A-000000001594FF6B
bool __cdecl RogueLikeDungeonRuntimeMgr::isAllCellFinishedBeforeBoss(RogueLikeDungeonRuntimeMgr *const this)
{
  bool v1; // r14
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  ActivityRogueExcelConfigMgr *p_activity_rogue_config_mgr; // rcx
  common::milog::MiLogStream *v6; // rax
  std::__detail::_Node_iterator<unsigned int,true,false>::reference v7; // rax
  _DWORD *v8; // rdx
  common::milog::MiLogStream *v9; // rax
  std::stack<unsigned int>::reference v10; // rax
  uint32_t *v11; // rdx
  ActivityRogueExcelConfigMgr *v12; // rsi
  std::tuple_element<1,const std::pair<const data::RogueGadgetDirType,unsigned int> >::type *v13; // rax
  common::milog::MiLogStream *v14; // rax
  int v15; // r15d
  common::milog::MiLogStream *v17; // rax
  ActivityRogueExcelConfigMgr *v18; // rsi
  uint32_t v19; // ecx
  bool result; // al
  bool is_push; // [rsp+1Bh] [rbp-235h]
  uint32_t top_cell_id; // [rsp+1Ch] [rbp-234h]
  std::map<data::RogueGadgetDirType,unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-230h] BYREF
  std::map<data::RogueGadgetDirType,unsigned int>::iterator __for_end; // [rsp+28h] [rbp-228h] BYREF
  std::unordered_set<unsigned int> *boss_cell_set; // [rsp+38h] [rbp-218h]
  std::map<data::RogueGadgetDirType,unsigned int> *__for_range_0; // [rsp+48h] [rbp-208h]
  const std::pair<const data::RogueGadgetDirType,unsigned int> *v29; // [rsp+50h] [rbp-200h]
  std::tuple_element<0,const std::pair<const data::RogueGadgetDirType,unsigned int> >::type *__0; // [rsp+58h] [rbp-1F8h]
  std::tuple_element<1,const std::pair<const data::RogueGadgetDirType,unsigned int> >::type *boss_adj_cell_id; // [rsp+60h] [rbp-1F0h]
  std::map<data::RogueGadgetDirType,unsigned int> *__for_range; // [rsp+68h] [rbp-1E8h]
  const std::pair<const data::RogueGadgetDirType,unsigned int> *v33; // [rsp+70h] [rbp-1E0h]
  std::tuple_element<0,const std::pair<const data::RogueGadgetDirType,unsigned int> >::type *_; // [rsp+78h] [rbp-1D8h]
  std::tuple_element<1,const std::pair<const data::RogueGadgetDirType,unsigned int> >::type *adj_cell_id; // [rsp+80h] [rbp-1D0h]
  RogueCell *adj_cell_ptr; // [rsp+88h] [rbp-1C8h]
  std::shared_ptr<Config> v37; // [rsp+90h] [rbp-1C0h] BYREF
  common::milog::MiLogStream v38; // [rsp+A0h] [rbp-1B0h] BYREF
  char v39[400]; // [rsp+C0h] [rbp-190h] BYREF

  v2 = (unsigned __int64)v39;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 4 18 start_cell_id:4108 48 4 17 boss_cell_id:4127 64 48 17 boss_adj_map:4173 144 56 16 visi"
                        "ted_set:4136 240 80 14 dfs_stack:4138";
  *(_QWORD *)(v2 + 16) = RogueLikeDungeonRuntimeMgr::isAllCellFinishedBeforeBoss;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556924;
  v4[536862723] = -219021312;
  v4[536862724] = 62194;
  v4[536862726] = -218959360;
  v4[536862727] = 62194;
  v4[536862730] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    v1 = 0;
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v37);
    p_activity_rogue_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v37)->design_config.txt_config_mgr.activity_rogue_config_mgr;
    if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->dungeon_id_);
    }
    *(_DWORD *)(v2 + 32) = ActivityRogueExcelConfigMgr::findDungeonInitCellId(
                             p_activity_rogue_config_mgr,
                             this->dungeon_id_);
    std::shared_ptr<Config>::~shared_ptr(&v37);
    if ( RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v2 + 32)) )
    {
      *(_DWORD *)(v2 + 48) = 6;
      boss_cell_set = std::map<data::RogueCellType,std::unordered_set<unsigned int>>::operator[](
                        &this->cell_type_to_cell_id_map_,
                        (std::map<data::RogueCellType,std::unordered_set<unsigned int>>::key_type *)(v2 + 48));
      if ( std::unordered_set<unsigned int>::size(boss_cell_set) == 1 )
      {
        __for_end._M_node = (std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::_Base_ptr)std::unordered_set<unsigned int>::end(boss_cell_set)._M_cur;
        __for_begin._M_node = (std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::_Base_ptr)std::unordered_set<unsigned int>::begin(boss_cell_set)._M_cur;
        if ( std::__detail::operator==<unsigned int,false>(
               (const std::__detail::_Node_iterator_base<unsigned int,false> *)&__for_begin,
               (const std::__detail::_Node_iterator_base<unsigned int,false> *)&__for_end) )
        {
          common::milog::MiLogStream::create(
            &v38,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "isAllCellFinishedBeforeBoss",
            4124);
          common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
            &v38,
            (const char (*)[37])"[ROGUE] boss_cell_set size must be 1");
          common::milog::MiLogStream::~MiLogStream(&v38);
          v1 = 0;
        }
        else
        {
          __for_end._M_node = (std::_Rb_tree_iterator<std::pair<const data::RogueGadgetDirType,unsigned int> >::_Base_ptr)std::unordered_set<unsigned int>::begin(boss_cell_set)._M_cur;
          v7 = std::__detail::_Node_iterator<unsigned int,true,false>::operator*((const std::__detail::_Node_iterator<unsigned int,true,false> *const)&__for_end);
          v8 = v7;
          if ( *(_BYTE *)(((unsigned __int64)v7 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v7 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v7 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4(v7);
          }
          *(_DWORD *)(v2 + 48) = *v8;
          if ( RogueLikeDungeonRuntimeMgr::findCell(this, *(_DWORD *)(v2 + 48)) )
          {
            std::unordered_set<unsigned int>::unordered_set((std::unordered_set<unsigned int> *const)(v2 + 144));
            std::unordered_set<unsigned int>::insert(
              (std::unordered_set<unsigned int> *const)(v2 + 144),
              (const std::unordered_set<unsigned int>::value_type *)(v2 + 32));
            std::stack<unsigned int>::stack<std::deque<unsigned int>,void>((std::stack<unsigned int> *const)(v2 + 240));
            std::stack<unsigned int>::push(
              (std::stack<unsigned int> *const)(v2 + 240),
              (const std::stack<unsigned int>::value_type *)(v2 + 32));
            while ( !std::stack<unsigned int>::empty((const std::stack<unsigned int> *const)(v2 + 240)) )
            {
              is_push = 0;
              v10 = std::stack<unsigned int>::top((std::stack<unsigned int> *const)(v2 + 240));
              v11 = v10;
              if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)v10 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4(v10);
              }
              top_cell_id = *v11;
              ServiceBox::findService<GameserverService>();
              GameserverService::getConfig((GameserverService *const)&v37);
              v12 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v37)->design_config.txt_config_mgr.activity_rogue_config_mgr;
              if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3)
                                                                    + 0x7FFF8000) )
              {
                __asan_report_load4(&this->dungeon_id_);
              }
              ActivityRogueExcelConfigMgr::findCellAjdMap(
                (RogueCellAdjMap *)(v2 + 64),
                v12,
                this->dungeon_id_,
                top_cell_id);
              std::shared_ptr<Config>::~shared_ptr(&v37);
              __for_range = (std::map<data::RogueGadgetDirType,unsigned int> *)(v2 + 64);
              __for_begin._M_node = std::map<data::RogueGadgetDirType,unsigned int>::begin((std::map<data::RogueGadgetDirType,unsigned int> *const)(v2 + 64))._M_node;
              __for_end._M_node = std::map<data::RogueGadgetDirType,unsigned int>::end(__for_range)._M_node;
              while ( std::operator!=(&__for_begin, &__for_end) )
              {
                v33 = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator*(&__for_begin);
                _ = std::get<0ul,data::RogueGadgetDirType const,unsigned int>(v33);
                v13 = (std::tuple_element<1,const std::pair<const data::RogueGadgetDirType,unsigned int> >::type *)std::get<1ul,data::RogueGadgetDirType const,unsigned int>(v33);
                adj_cell_id = v13;
                if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)v13 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
                {
                  __asan_report_load4(v13);
                }
                adj_cell_ptr = RogueLikeDungeonRuntimeMgr::findCell(this, *adj_cell_id);
                if ( !adj_cell_ptr )
                {
                  common::milog::MiLogStream::create(
                    &v38,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "isAllCellFinishedBeforeBoss",
                    4151);
                  v14 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
                          &v38,
                          (const char (*)[37])"[ROGUE] adj cell not found, cell_id:");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, adj_cell_id);
                  common::milog::MiLogStream::~MiLogStream(&v38);
                  v1 = 0;
                  v15 = 0;
                  goto LABEL_42;
                }
                if ( !common::tools::MiscUtils::isContains<std::unordered_set<unsigned int>,unsigned int>(
                        (std::unordered_set<unsigned int> *)(v2 + 144),
                        adj_cell_id)
                  && RogueCell::isCellPassed(adj_cell_ptr) )
                {
                  std::unordered_set<unsigned int>::insert(
                    (std::unordered_set<unsigned int> *const)(v2 + 144),
                    adj_cell_id);
                  common::milog::MiLogStream::create(
                    &v38,
                    &common::milog::MiLogDefault::default_log_obj_,
                    1u,
                    "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                    "isAllCellFinishedBeforeBoss",
                    4159);
                  v17 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                          &v38,
                          (const char (*)[20])"[ROGUE] dfs visit: ");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, adj_cell_id);
                  common::milog::MiLogStream::~MiLogStream(&v38);
                  std::stack<unsigned int>::push((std::stack<unsigned int> *const)(v2 + 240), adj_cell_id);
                  is_push = 1;
                  break;
                }
                std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator++(&__for_begin);
              }
              if ( !is_push )
                std::stack<unsigned int>::pop((std::stack<unsigned int> *const)(v2 + 240));
              v15 = 1;
LABEL_42:
              std::map<data::RogueGadgetDirType,unsigned int>::~map((std::map<data::RogueGadgetDirType,unsigned int> *const)(v2 + 64));
              if ( v15 != 1 )
                goto LABEL_53;
            }
            ServiceBox::findService<GameserverService>();
            GameserverService::getConfig((GameserverService *const)&v37);
            v18 = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v37)->design_config.txt_config_mgr.activity_rogue_config_mgr;
            v19 = *(_DWORD *)(v2 + 48);
            if ( *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3) + 0x7FFF8000) != 0
              && (char)((((_BYTE)this + 44) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->dungeon_id_ >> 3)
                                                                  + 0x7FFF8000) )
            {
              __asan_report_load4(&this->dungeon_id_);
            }
            ActivityRogueExcelConfigMgr::findCellAjdMap((RogueCellAdjMap *)(v2 + 64), v18, this->dungeon_id_, v19);
            std::shared_ptr<Config>::~shared_ptr(&v37);
            __for_range_0 = (std::map<data::RogueGadgetDirType,unsigned int> *)(v2 + 64);
            __for_begin._M_node = std::map<data::RogueGadgetDirType,unsigned int>::begin((std::map<data::RogueGadgetDirType,unsigned int> *const)(v2 + 64))._M_node;
            __for_end._M_node = std::map<data::RogueGadgetDirType,unsigned int>::end(__for_range_0)._M_node;
            while ( std::operator!=(&__for_begin, &__for_end) )
            {
              v29 = std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator*(&__for_begin);
              __0 = std::get<0ul,data::RogueGadgetDirType const,unsigned int>(v29);
              boss_adj_cell_id = (std::tuple_element<1,const std::pair<const data::RogueGadgetDirType,unsigned int> >::type *)std::get<1ul,data::RogueGadgetDirType const,unsigned int>(v29);
              if ( common::tools::MiscUtils::isContains<std::unordered_set<unsigned int>,unsigned int>(
                     (std::unordered_set<unsigned int> *)(v2 + 144),
                     boss_adj_cell_id) )
              {
                common::milog::MiLogStream::create(
                  &v38,
                  &common::milog::MiLogDefault::default_log_obj_,
                  1u,
                  "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
                  "isAllCellFinishedBeforeBoss",
                  4179);
                common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                  &v38,
                  (const char (*)[28])"[ROGUE] boss adj check pass");
                common::milog::MiLogStream::~MiLogStream(&v38);
                v1 = 1;
                goto LABEL_52;
              }
              std::_Rb_tree_iterator<std::pair<data::RogueGadgetDirType const,unsigned int>>::operator++(&__for_begin);
            }
            v1 = 0;
LABEL_52:
            std::map<data::RogueGadgetDirType,unsigned int>::~map((std::map<data::RogueGadgetDirType,unsigned int> *const)(v2 + 64));
LABEL_53:
            std::stack<unsigned int>::~stack((std::stack<unsigned int> *const)(v2 + 240));
            std::unordered_set<unsigned int>::~unordered_set((std::unordered_set<unsigned int> *const)(v2 + 144));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v38,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
              "isAllCellFinishedBeforeBoss",
              4131);
            v9 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                   &v38,
                   (const char (*)[43])"[ROGUE] boss cell not found, boss_cell_id:");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, (const unsigned int *)(v2 + 48));
            common::milog::MiLogStream::~MiLogStream(&v38);
            v1 = 0;
          }
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v38,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "isAllCellFinishedBeforeBoss",
          4119);
        common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
          &v38,
          (const char (*)[37])"[ROGUE] boss_cell_set size must be 1");
        common::milog::MiLogStream::~MiLogStream(&v38);
        v1 = 0;
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v38,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "isAllCellFinishedBeforeBoss",
        4112);
      v6 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
             &v38,
             (const char (*)[45])"[ROGUE] start cell not found, start_cell_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, (const unsigned int *)(v2 + 32));
      common::milog::MiLogStream::~MiLogStream(&v38);
      v1 = 1;
    }
  }
  result = v1;
  if ( v39 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF800C) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 4189: range 000000001594FF6C-000000001595032E
int32_t __cdecl RogueLikeDungeonRuntimeMgr::causeDungeonSuccessAndEnterNext(RogueLikeDungeonRuntimeMgr *const this)
{
  unsigned __int64 v1; // rbx
  __int64 v2; // rax
  unsigned __int64 v3; // r13
  int32_t v4; // r14d
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  DungeonScene *v6; // rax
  int32_t result; // eax
  common::milog::MiLogStream v8; // [rsp+10h] [rbp-90h] BYREF
  char v9[112]; // [rsp+30h] [rbp-70h] BYREF

  v1 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v2 = __asan_stack_malloc_0(64LL);
    if ( v2 )
      v1 = v2;
  }
  *(_QWORD *)v1 = 1102416563LL;
  *(_QWORD *)(v1 + 8) = "1 32 16 22 dungeon_scene_ptr:4195";
  *(_QWORD *)(v1 + 16) = RogueLikeDungeonRuntimeMgr::causeDungeonSuccessAndEnterNext;
  v3 = v1 >> 3;
  *(_DWORD *)(v3 + 2147450880) = -235802127;
  *(_DWORD *)(v3 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)this + 76) & 7) >= *(_BYTE *)(((unsigned __int64)&this->is_valid_ >> 3) + 0x7FFF8000) )
  {
    __asan_report_load1(&this->is_valid_);
  }
  if ( !this->is_valid_ )
  {
    common::milog::MiLogStream::create(
      &v8,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
      "causeDungeonSuccessAndEnterNext",
      4192);
    common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(&v8, (const char (*)[21])"[ROGUE] is not valid");
    common::milog::MiLogStream::~MiLogStream(&v8);
    v4 = -1;
  }
  else
  {
    std::weak_ptr<DungeonScene>::lock((const std::weak_ptr<DungeonScene> *const)(v1 + 32));
    if ( std::operator==<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)(v1 + 32)) )
    {
      common::milog::MiLogStream::create(
        &v8,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
        "causeDungeonSuccessAndEnterNext",
        4198);
      common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
        &v8,
        (const char (*)[41])"[ROGUE] cur dungeon scene ptr is nullptr");
      common::milog::MiLogStream::~MiLogStream(&v8);
      v4 = -1;
    }
    else
    {
      v5 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
      if ( DungeonScene::getDungeonResult(v5) )
      {
        common::milog::MiLogStream::create(
          &v8,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
          "causeDungeonSuccessAndEnterNext",
          4212);
        common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
          &v8,
          (const char (*)[37])"[ROGUE] dungeon has already settled!");
        common::milog::MiLogStream::~MiLogStream(&v8);
        v4 = -1;
      }
      else
      {
        v6 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v1 + 32));
        DungeonScene::settle(v6, DUNGEON_RESULT_SUCCEED);
        if ( *(_BYTE *)(((unsigned __int64)&this->activity_ >> 3) + 0x7FFF8000) )
          __asan_report_load8(&this->activity_);
        if ( RoguelikeDungeonActivity::enterNextLevelByScript(this->activity_) )
        {
          common::milog::MiLogStream::create(
            &v8,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/player/activity/roguelike/roguelike_dungeon_runtime_mgr.cpp",
            "causeDungeonSuccessAndEnterNext",
            4206);
          common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
            &v8,
            (const char (*)[38])"[ROGUE] enterNextLevelByScript failed");
          common::milog::MiLogStream::~MiLogStream(&v8);
          v4 = -1;
        }
        else
        {
          v4 = 0;
        }
      }
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v1 + 32));
  }
  result = v4;
  if ( v9 == (char *)v1 )
  {
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v1 = 1172321806LL;
    *(_QWORD *)((v1 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};
