// File: /data/jenkins/jenkins_hk4e/workspace/hk4e_3.4_dev/gameserver/src/handler/activity_handler.cpp

// Line 107: range 0000000013750188-0000000013762797
int32_t __cdecl ActivityHandler::addPacketFuncToMap(
        ActivityHandler *const this,
        PacketFuncMap *process_packet_func_map)
{
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v3; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v4; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v5; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v6; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v7; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v8; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v9; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v10; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v11; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v12; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v13; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v14; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v15; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v16; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v17; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v18; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v19; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v20; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v21; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v22; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v23; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v24; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v25; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v26; // rax
  ActivityHandler **v27; // r8
  const std::_Placeholder<1> *v28; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v29; // rax
  ActivityHandler **v30; // r8
  const std::_Placeholder<1> *v31; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v32; // rax
  ActivityHandler **v33; // r8
  const std::_Placeholder<1> *v34; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v35; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v36; // rax
  ActivityHandler **v37; // r8
  const std::_Placeholder<1> *v38; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v39; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v40; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v41; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v42; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v43; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v44; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v45; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v46; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v47; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v48; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v49; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v50; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v51; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v52; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v53; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v54; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v55; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v56; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v57; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v58; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v59; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v60; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v61; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v62; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v63; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v64; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v65; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v66; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v67; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v68; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v69; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v70; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v71; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v72; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v73; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v74; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v75; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v76; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v77; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v78; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v79; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v80; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v81; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v82; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v83; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v84; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v85; // rax
  ActivityHandler **v86; // r8
  const std::_Placeholder<1> *v87; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v88; // rax
  ActivityHandler **v89; // r8
  const std::_Placeholder<1> *v90; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v91; // rax
  ActivityHandler **v92; // r8
  const std::_Placeholder<1> *v93; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v94; // rax
  ActivityHandler **v95; // r8
  const std::_Placeholder<1> *v96; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v97; // rax
  ActivityHandler **v98; // r8
  const std::_Placeholder<1> *v99; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v100; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v101; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v102; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v103; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v104; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v105; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v106; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v107; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v108; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v109; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v110; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v111; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v112; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v113; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v114; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v115; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v116; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v117; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v118; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v119; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v120; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v121; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v122; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v123; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v124; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v125; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v126; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v127; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v128; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v129; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v130; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v131; // rax
  ActivityHandler **v132; // r8
  const std::_Placeholder<1> *v133; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v134; // rax
  ActivityHandler **v135; // r8
  const std::_Placeholder<1> *v136; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v137; // rax
  ActivityHandler **v138; // r8
  const std::_Placeholder<1> *v139; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v140; // rax
  ActivityHandler **v141; // r8
  const std::_Placeholder<1> *v142; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v143; // rax
  ActivityHandler **v144; // r8
  const std::_Placeholder<1> *v145; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v146; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v147; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v148; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v149; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v150; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v151; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v152; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v153; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v154; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v155; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v156; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v157; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v158; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v159; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v160; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v161; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v162; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v163; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v164; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v165; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v166; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v167; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v168; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v169; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v170; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v171; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v172; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v173; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v174; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v175; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v176; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v177; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v178; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v179; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v180; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v181; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v182; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v183; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v184; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v185; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v186; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v187; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v188; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v189; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v190; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v191; // rax
  ActivityHandler **v192; // r8
  const std::_Placeholder<1> *v193; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v194; // rax
  ActivityHandler **v195; // r8
  const std::_Placeholder<1> *v196; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v197; // rax
  ActivityHandler **v198; // r8
  const std::_Placeholder<1> *v199; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v200; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v201; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v202; // rax
  ActivityHandler **v203; // r8
  const std::_Placeholder<1> *v204; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v205; // rax
  ActivityHandler **v206; // r8
  const std::_Placeholder<1> *v207; // r9
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v208; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v209; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v210; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v211; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v212; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v213; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v214; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v215; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v216; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v217; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v218; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v219; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v220; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v221; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v222; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v223; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v224; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v225; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v226; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v227; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v228; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v229; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v230; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v231; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v232; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v233; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v234; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v235; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v236; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v237; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v238; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v239; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v240; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v241; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v242; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v243; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v244; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v245; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v246; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v247; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v248; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v249; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v250; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v251; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v252; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v253; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v254; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v255; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v256; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v257; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v258; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v259; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v260; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v261; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v262; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v263; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v264; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v265; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v266; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v267; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v268; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v269; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v270; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v271; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v272; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v273; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v274; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v275; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v276; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v277; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v278; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v279; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v280; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v281; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v282; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v283; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v284; // rax
  std::function<int(std::shared_ptr<common::minet::Packet>)> *v285; // rax
  __m128i v286; // [rsp+0h] [rbp-1C0h] BYREF
  __m128i v287; // [rsp+10h] [rbp-1B0h] BYREF
  __m128i v288; // [rsp+20h] [rbp-1A0h] BYREF
  __m128i v289; // [rsp+30h] [rbp-190h] BYREF
  __m128i v290; // [rsp+40h] [rbp-180h] BYREF
  __m128i v291; // [rsp+50h] [rbp-170h] BYREF
  __m128i v292; // [rsp+60h] [rbp-160h] BYREF
  __m128i v293; // [rsp+70h] [rbp-150h] BYREF
  __m128i v294; // [rsp+80h] [rbp-140h] BYREF
  __m128i v295; // [rsp+90h] [rbp-130h] BYREF
  __m128i v296; // [rsp+A0h] [rbp-120h] BYREF
  __m128i v297; // [rsp+B0h] [rbp-110h] BYREF
  __m128i v298; // [rsp+C0h] [rbp-100h] BYREF
  __m128i v299; // [rsp+D0h] [rbp-F0h] BYREF
  __m128i v300; // [rsp+E0h] [rbp-E0h] BYREF
  __m128i v301; // [rsp+F0h] [rbp-D0h] BYREF
  __m128i v302; // [rsp+100h] [rbp-C0h] BYREF
  PacketFuncMap *process_packet_func_mapa; // [rsp+110h] [rbp-B0h]
  ActivityHandler *thisa; // [rsp+118h] [rbp-A8h]
  std::map<unsigned int,std::function<int(std::shared_ptr<common::minet::Packet>)>>::key_type __x; // [rsp+12Ch] [rbp-94h] BYREF
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Self v306; // [rsp+130h] [rbp-90h] BYREF
  std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Self __y; // [rsp+138h] [rbp-88h] BYREF
  int (*__f[2])(ActivityHandler *, std::shared_ptr<common::minet::Packet>); // [rsp+140h] [rbp-80h] BYREF
  std::_Bind_helper<false,int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,const std::_Placeholder<1>&>::type v309; // [rsp+150h] [rbp-70h] BYREF
  common::milog::MiLogStream v310; // [rsp+170h] [rbp-50h] BYREF

  thisa = this;
  process_packet_func_mapa = process_packet_func_map;
  __x = 2136;
  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                  process_packet_func_map,
                  &__x)._M_node;
  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_map)._M_node;
  if ( std::operator!=(&v306, &__y) )
  {
    common::milog::MiLogStream::create(
      &v310,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/handler/activity_handler.cpp",
      "addPacketFuncToMap",
      108);
    common::milog::MiLogStream::operator()(&v310, off_25049520, 2136LL);
    common::milog::MiLogStream::~MiLogStream(&v310);
    return -1;
  }
  else
  {
    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
    __x = 2136;
    v3 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
           process_packet_func_mapa,
           &__x);
    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#1}>(
      v3,
      (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
    __x = 2095;
    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                    process_packet_func_mapa,
                    &__x)._M_node;
    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
    if ( std::operator!=(&v306, &__y) )
    {
      common::milog::MiLogStream::create(
        &v310,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/handler/activity_handler.cpp",
        "addPacketFuncToMap",
        109);
      common::milog::MiLogStream::operator()(&v310, off_25049520, 2095LL);
      common::milog::MiLogStream::~MiLogStream(&v310);
      return -1;
    }
    else
    {
      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
      __x = 2095;
      v4 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
             process_packet_func_mapa,
             &__x);
      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#2}>(
        v4,
        (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
      __x = 2157;
      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                      process_packet_func_mapa,
                      &__x)._M_node;
      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
      if ( std::operator!=(&v306, &__y) )
      {
        common::milog::MiLogStream::create(
          &v310,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/handler/activity_handler.cpp",
          "addPacketFuncToMap",
          110);
        common::milog::MiLogStream::operator()(&v310, off_25049520, 2157LL);
        common::milog::MiLogStream::~MiLogStream(&v310);
        return -1;
      }
      else
      {
        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
        __x = 2157;
        v5 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
               process_packet_func_mapa,
               &__x);
        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#3}>(
          v5,
          (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
        __x = 2029;
        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                        process_packet_func_mapa,
                        &__x)._M_node;
        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
        if ( std::operator!=(&v306, &__y) )
        {
          common::milog::MiLogStream::create(
            &v310,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/handler/activity_handler.cpp",
            "addPacketFuncToMap",
            111);
          common::milog::MiLogStream::operator()(&v310, off_25049520, 2029LL);
          common::milog::MiLogStream::~MiLogStream(&v310);
          return -1;
        }
        else
        {
          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
          __x = 2029;
          v6 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                 process_packet_func_mapa,
                 &__x);
          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#4}>(
            v6,
            (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
          __x = 2038;
          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                          process_packet_func_mapa,
                          &__x)._M_node;
          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
          if ( std::operator!=(&v306, &__y) )
          {
            common::milog::MiLogStream::create(
              &v310,
              &common::milog::MiLogDefault::default_log_obj_,
              4u,
              "./src/handler/activity_handler.cpp",
              "addPacketFuncToMap",
              112);
            common::milog::MiLogStream::operator()(&v310, off_25049520, 2038LL);
            common::milog::MiLogStream::~MiLogStream(&v310);
            return -1;
          }
          else
          {
            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
            __x = 2038;
            v7 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                   process_packet_func_mapa,
                   &__x);
            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#5}>(
              v7,
              (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
            __x = 2028;
            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                            process_packet_func_mapa,
                            &__x)._M_node;
            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
            if ( std::operator!=(&v306, &__y) )
            {
              common::milog::MiLogStream::create(
                &v310,
                &common::milog::MiLogDefault::default_log_obj_,
                4u,
                "./src/handler/activity_handler.cpp",
                "addPacketFuncToMap",
                113);
              common::milog::MiLogStream::operator()(&v310, off_25049520, 2028LL);
              common::milog::MiLogStream::~MiLogStream(&v310);
              return -1;
            }
            else
            {
              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
              __x = 2028;
              v8 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                     process_packet_func_mapa,
                     &__x);
              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#6}>(
                v8,
                (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
              __x = 2159;
              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                              process_packet_func_mapa,
                              &__x)._M_node;
              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
              if ( std::operator!=(&v306, &__y) )
              {
                common::milog::MiLogStream::create(
                  &v310,
                  &common::milog::MiLogDefault::default_log_obj_,
                  4u,
                  "./src/handler/activity_handler.cpp",
                  "addPacketFuncToMap",
                  114);
                common::milog::MiLogStream::operator()(&v310, off_25049520, 2159LL);
                common::milog::MiLogStream::~MiLogStream(&v310);
                return -1;
              }
              else
              {
                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                __x = 2159;
                v9 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                       process_packet_func_mapa,
                       &__x);
                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#7}>(
                  v9,
                  (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                __x = 2118;
                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                process_packet_func_mapa,
                                &__x)._M_node;
                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                if ( std::operator!=(&v306, &__y) )
                {
                  common::milog::MiLogStream::create(
                    &v310,
                    &common::milog::MiLogDefault::default_log_obj_,
                    4u,
                    "./src/handler/activity_handler.cpp",
                    "addPacketFuncToMap",
                    116);
                  common::milog::MiLogStream::operator()(&v310, off_25049520, 2118LL);
                  common::milog::MiLogStream::~MiLogStream(&v310);
                  return -1;
                }
                else
                {
                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                  __x = 2118;
                  v10 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                          process_packet_func_mapa,
                          &__x);
                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#8}>(
                    v10,
                    (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                  __x = 2130;
                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                  process_packet_func_mapa,
                                  &__x)._M_node;
                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                  if ( std::operator!=(&v306, &__y) )
                  {
                    common::milog::MiLogStream::create(
                      &v310,
                      &common::milog::MiLogDefault::default_log_obj_,
                      4u,
                      "./src/handler/activity_handler.cpp",
                      "addPacketFuncToMap",
                      117);
                    common::milog::MiLogStream::operator()(&v310, off_25049520, 2130LL);
                    common::milog::MiLogStream::~MiLogStream(&v310);
                    return -1;
                  }
                  else
                  {
                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                    __x = 2130;
                    v11 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                            process_packet_func_mapa,
                            &__x);
                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#9}>(
                      v11,
                      (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                    __x = 2138;
                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                    process_packet_func_mapa,
                                    &__x)._M_node;
                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                    if ( std::operator!=(&v306, &__y) )
                    {
                      common::milog::MiLogStream::create(
                        &v310,
                        &common::milog::MiLogDefault::default_log_obj_,
                        4u,
                        "./src/handler/activity_handler.cpp",
                        "addPacketFuncToMap",
                        119);
                      common::milog::MiLogStream::operator()(&v310, off_25049520, 2138LL);
                      common::milog::MiLogStream::~MiLogStream(&v310);
                      return -1;
                    }
                    else
                    {
                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                      __x = 2138;
                      v12 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                              process_packet_func_mapa,
                              &__x);
                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#10}>(
                        v12,
                        (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                      __x = 2191;
                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                      process_packet_func_mapa,
                                      &__x)._M_node;
                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                      if ( std::operator!=(&v306, &__y) )
                      {
                        common::milog::MiLogStream::create(
                          &v310,
                          &common::milog::MiLogDefault::default_log_obj_,
                          4u,
                          "./src/handler/activity_handler.cpp",
                          "addPacketFuncToMap",
                          120);
                        common::milog::MiLogStream::operator()(&v310, off_25049520, 2191LL);
                        common::milog::MiLogStream::~MiLogStream(&v310);
                        return -1;
                      }
                      else
                      {
                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                        __x = 2191;
                        v13 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                process_packet_func_mapa,
                                &__x);
                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#11}>(
                          v13,
                          (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                        __x = 2145;
                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                        process_packet_func_mapa,
                                        &__x)._M_node;
                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                        if ( std::operator!=(&v306, &__y) )
                        {
                          common::milog::MiLogStream::create(
                            &v310,
                            &common::milog::MiLogDefault::default_log_obj_,
                            4u,
                            "./src/handler/activity_handler.cpp",
                            "addPacketFuncToMap",
                            121);
                          common::milog::MiLogStream::operator()(&v310, off_25049520, 2145LL);
                          common::milog::MiLogStream::~MiLogStream(&v310);
                          return -1;
                        }
                        else
                        {
                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                          __x = 2145;
                          v14 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                  process_packet_func_mapa,
                                  &__x);
                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#12}>(
                            v14,
                            (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                          __x = 2070;
                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                          process_packet_func_mapa,
                                          &__x)._M_node;
                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                          if ( std::operator!=(&v306, &__y) )
                          {
                            common::milog::MiLogStream::create(
                              &v310,
                              &common::milog::MiLogDefault::default_log_obj_,
                              4u,
                              "./src/handler/activity_handler.cpp",
                              "addPacketFuncToMap",
                              122);
                            common::milog::MiLogStream::operator()(&v310, off_25049520, 2070LL);
                            common::milog::MiLogStream::~MiLogStream(&v310);
                            return -1;
                          }
                          else
                          {
                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                            __x = 2070;
                            v15 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                    process_packet_func_mapa,
                                    &__x);
                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#13}>(
                              v15,
                              (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                            __x = 2121;
                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                            process_packet_func_mapa,
                                            &__x)._M_node;
                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                            if ( std::operator!=(&v306, &__y) )
                            {
                              common::milog::MiLogStream::create(
                                &v310,
                                &common::milog::MiLogDefault::default_log_obj_,
                                4u,
                                "./src/handler/activity_handler.cpp",
                                "addPacketFuncToMap",
                                125);
                              common::milog::MiLogStream::operator()(&v310, off_25049520, 2121LL);
                              common::milog::MiLogStream::~MiLogStream(&v310);
                              return -1;
                            }
                            else
                            {
                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                              __x = 2121;
                              v16 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                      process_packet_func_mapa,
                                      &__x);
                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#14}>(
                                v16,
                                (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                              __x = 2134;
                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                              process_packet_func_mapa,
                                              &__x)._M_node;
                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                              if ( std::operator!=(&v306, &__y) )
                              {
                                common::milog::MiLogStream::create(
                                  &v310,
                                  &common::milog::MiLogDefault::default_log_obj_,
                                  4u,
                                  "./src/handler/activity_handler.cpp",
                                  "addPacketFuncToMap",
                                  127);
                                common::milog::MiLogStream::operator()(&v310, off_25049520, 2134LL);
                                common::milog::MiLogStream::~MiLogStream(&v310);
                                return -1;
                              }
                              else
                              {
                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                __x = 2134;
                                v17 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                        process_packet_func_mapa,
                                        &__x);
                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#15}>(
                                  v17,
                                  (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                __x = 2097;
                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                process_packet_func_mapa,
                                                &__x)._M_node;
                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                if ( std::operator!=(&v306, &__y) )
                                {
                                  common::milog::MiLogStream::create(
                                    &v310,
                                    &common::milog::MiLogDefault::default_log_obj_,
                                    4u,
                                    "./src/handler/activity_handler.cpp",
                                    "addPacketFuncToMap",
                                    128);
                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 2097LL);
                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                  return -1;
                                }
                                else
                                {
                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                  __x = 2097;
                                  v18 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                          process_packet_func_mapa,
                                          &__x);
                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#16}>(
                                    v18,
                                    (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                  __x = 2037;
                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                  process_packet_func_mapa,
                                                  &__x)._M_node;
                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                  if ( std::operator!=(&v306, &__y) )
                                  {
                                    common::milog::MiLogStream::create(
                                      &v310,
                                      &common::milog::MiLogDefault::default_log_obj_,
                                      4u,
                                      "./src/handler/activity_handler.cpp",
                                      "addPacketFuncToMap",
                                      130);
                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 2037LL);
                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                    return -1;
                                  }
                                  else
                                  {
                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                    __x = 2037;
                                    v19 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                            process_packet_func_mapa,
                                            &__x);
                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#17}>(
                                      v19,
                                      (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                    __x = 2169;
                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                    process_packet_func_mapa,
                                                    &__x)._M_node;
                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                    if ( std::operator!=(&v306, &__y) )
                                    {
                                      common::milog::MiLogStream::create(
                                        &v310,
                                        &common::milog::MiLogDefault::default_log_obj_,
                                        4u,
                                        "./src/handler/activity_handler.cpp",
                                        "addPacketFuncToMap",
                                        132);
                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 2169LL);
                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                      return -1;
                                    }
                                    else
                                    {
                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                      __x = 2169;
                                      v20 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                              process_packet_func_mapa,
                                              &__x);
                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#18}>(
                                        v20,
                                        (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                      __x = 2196;
                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                      process_packet_func_mapa,
                                                      &__x)._M_node;
                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                      if ( std::operator!=(&v306, &__y) )
                                      {
                                        common::milog::MiLogStream::create(
                                          &v310,
                                          &common::milog::MiLogDefault::default_log_obj_,
                                          4u,
                                          "./src/handler/activity_handler.cpp",
                                          "addPacketFuncToMap",
                                          133);
                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 2196LL);
                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                        return -1;
                                      }
                                      else
                                      {
                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                        __x = 2196;
                                        v21 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                process_packet_func_mapa,
                                                &__x);
                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#19}>(
                                          v21,
                                          (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                        __x = 2040;
                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                        process_packet_func_mapa,
                                                        &__x)._M_node;
                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                        if ( std::operator!=(&v306, &__y) )
                                        {
                                          common::milog::MiLogStream::create(
                                            &v310,
                                            &common::milog::MiLogDefault::default_log_obj_,
                                            4u,
                                            "./src/handler/activity_handler.cpp",
                                            "addPacketFuncToMap",
                                            134);
                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 2040LL);
                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                          return -1;
                                        }
                                        else
                                        {
                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                          __x = 2040;
                                          v22 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                  process_packet_func_mapa,
                                                  &__x);
                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#20}>(
                                            v22,
                                            (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                          __x = 2064;
                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                          process_packet_func_mapa,
                                                          &__x)._M_node;
                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                          if ( std::operator!=(&v306, &__y) )
                                          {
                                            common::milog::MiLogStream::create(
                                              &v310,
                                              &common::milog::MiLogDefault::default_log_obj_,
                                              4u,
                                              "./src/handler/activity_handler.cpp",
                                              "addPacketFuncToMap",
                                              135);
                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 2064LL);
                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                            return -1;
                                          }
                                          else
                                          {
                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                            __x = 2064;
                                            v23 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                    process_packet_func_mapa,
                                                    &__x);
                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#21}>(
                                              v23,
                                              (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                            __x = 2148;
                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                            process_packet_func_mapa,
                                                            &__x)._M_node;
                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                            if ( std::operator!=(&v306, &__y) )
                                            {
                                              common::milog::MiLogStream::create(
                                                &v310,
                                                &common::milog::MiLogDefault::default_log_obj_,
                                                4u,
                                                "./src/handler/activity_handler.cpp",
                                                "addPacketFuncToMap",
                                                136);
                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 2148LL);
                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                              return -1;
                                            }
                                            else
                                            {
                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                              __x = 2148;
                                              v24 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                      process_packet_func_mapa,
                                                      &__x);
                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#22}>(
                                                v24,
                                                (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                              __x = 2081;
                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                              process_packet_func_mapa,
                                                              &__x)._M_node;
                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                              if ( std::operator!=(&v306, &__y) )
                                              {
                                                common::milog::MiLogStream::create(
                                                  &v310,
                                                  &common::milog::MiLogDefault::default_log_obj_,
                                                  4u,
                                                  "./src/handler/activity_handler.cpp",
                                                  "addPacketFuncToMap",
                                                  139);
                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 2081LL);
                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                return -1;
                                              }
                                              else
                                              {
                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                __x = 2081;
                                                v25 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                        process_packet_func_mapa,
                                                        &__x);
                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#23}>(
                                                  v25,
                                                  (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                __x = 2137;
                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                process_packet_func_mapa,
                                                                &__x)._M_node;
                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                if ( std::operator!=(&v306, &__y) )
                                                {
                                                  common::milog::MiLogStream::create(
                                                    &v310,
                                                    &common::milog::MiLogDefault::default_log_obj_,
                                                    4u,
                                                    "./src/handler/activity_handler.cpp",
                                                    "addPacketFuncToMap",
                                                    140);
                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 2137LL);
                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                  return -1;
                                                }
                                                else
                                                {
                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                  __x = 2137;
                                                  v26 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                          process_packet_func_mapa,
                                                          &__x);
                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#24}>(
                                                    v26,
                                                    (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                  __x = 2043;
                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                  process_packet_func_mapa,
                                                                  &__x)._M_node;
                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                  if ( std::operator!=(&v306, &__y) )
                                                  {
                                                    common::milog::MiLogStream::create(
                                                      &v310,
                                                      &common::milog::MiLogDefault::default_log_obj_,
                                                      4u,
                                                      "./src/handler/activity_handler.cpp",
                                                      "addPacketFuncToMap",
                                                      142);
                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 2043LL);
                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                    return -1;
                                                  }
                                                  else
                                                  {
                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                    __f[0] = (int (*)(ActivityHandler *, std::shared_ptr<common::minet::Packet>))ActivityHandler::onBlessingGetFriendPicListReq;
                                                    __f[1] = 0LL;
                                                    std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(
                                                      &v309,
                                                      __f,
                                                      (ActivityHandler **)&__y,
                                                      (const std::_Placeholder<1> *)&std::placeholders::_1,
                                                      v27,
                                                      v28);
                                                    __x = 2043;
                                                    v29 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                            process_packet_func_mapa,
                                                            &__x);
                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(
                                                      v29,
                                                      &v309);
                                                    __x = 2096;
                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                    process_packet_func_mapa,
                                                                    &__x)._M_node;
                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                    if ( std::operator!=(&v306, &__y) )
                                                    {
                                                      common::milog::MiLogStream::create(
                                                        &v310,
                                                        &common::milog::MiLogDefault::default_log_obj_,
                                                        4u,
                                                        "./src/handler/activity_handler.cpp",
                                                        "addPacketFuncToMap",
                                                        143);
                                                      common::milog::MiLogStream::operator()(
                                                        &v310,
                                                        off_25049520,
                                                        2096LL);
                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                      return -1;
                                                    }
                                                    else
                                                    {
                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                      __f[0] = (int (*)(ActivityHandler *, std::shared_ptr<common::minet::Packet>))ActivityHandler::onBlessingGetAllRecvPicRecordListReq;
                                                      __f[1] = 0LL;
                                                      std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(
                                                        &v309,
                                                        __f,
                                                        (ActivityHandler **)&__y,
                                                        (const std::_Placeholder<1> *)&std::placeholders::_1,
                                                        v30,
                                                        v31);
                                                      __x = 2096;
                                                      v32 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                              process_packet_func_mapa,
                                                              &__x);
                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(
                                                        v32,
                                                        &v309);
                                                      __x = 2062;
                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                      process_packet_func_mapa,
                                                                      &__x)._M_node;
                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                      if ( std::operator!=(&v306, &__y) )
                                                      {
                                                        common::milog::MiLogStream::create(
                                                          &v310,
                                                          &common::milog::MiLogDefault::default_log_obj_,
                                                          4u,
                                                          "./src/handler/activity_handler.cpp",
                                                          "addPacketFuncToMap",
                                                          144);
                                                        common::milog::MiLogStream::operator()(
                                                          &v310,
                                                          off_25049520,
                                                          2062LL);
                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                        return -1;
                                                      }
                                                      else
                                                      {
                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                        v286.m128i_i64[0] = (__int64)ActivityHandler::onBlessingGiveFriendPicReq;
                                                        v286.m128i_i64[1] = 0LL;
                                                        *(__m128i *)__f = _mm_load_si128(&v286);
                                                        std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(
                                                          &v309,
                                                          __f,
                                                          (ActivityHandler **)&__y,
                                                          (const std::_Placeholder<1> *)&std::placeholders::_1,
                                                          v33,
                                                          v34);
                                                        __x = 2062;
                                                        v35 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                process_packet_func_mapa,
                                                                &__x);
                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(
                                                          v35,
                                                          &v309);
                                                        __x = 2006;
                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                        process_packet_func_mapa,
                                                                        &__x)._M_node;
                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                        if ( std::operator!=(&v306, &__y) )
                                                        {
                                                          common::milog::MiLogStream::create(
                                                            &v310,
                                                            &common::milog::MiLogDefault::default_log_obj_,
                                                            4u,
                                                            "./src/handler/activity_handler.cpp",
                                                            "addPacketFuncToMap",
                                                            145);
                                                          common::milog::MiLogStream::operator()(
                                                            &v310,
                                                            off_25049520,
                                                            2006LL);
                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                          return -1;
                                                        }
                                                        else
                                                        {
                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                          __x = 2006;
                                                          v36 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                  process_packet_func_mapa,
                                                                  &__x);
                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#25}>(
                                                            v36,
                                                            (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                          __x = 10846;
                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                          process_packet_func_mapa,
                                                                          &__x)._M_node;
                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                          if ( std::operator!=(&v306, &__y) )
                                                          {
                                                            common::milog::MiLogStream::create(
                                                              &v310,
                                                              &common::milog::MiLogDefault::default_log_obj_,
                                                              4u,
                                                              "./src/handler/activity_handler.cpp",
                                                              "addPacketFuncToMap",
                                                              146);
                                                            common::milog::MiLogStream::operator()(
                                                              &v310,
                                                              off_25049520,
                                                              10846LL);
                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                            return -1;
                                                          }
                                                          else
                                                          {
                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                            v287.m128i_i64[0] = (__int64)ActivityHandler::onServerBlessingGetFriendPicListRsp;
                                                            v287.m128i_i64[1] = 0LL;
                                                            *(__m128i *)__f = _mm_load_si128(&v287);
                                                            std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(
                                                              &v309,
                                                              __f,
                                                              (ActivityHandler **)&__y,
                                                              (const std::_Placeholder<1> *)&std::placeholders::_1,
                                                              v37,
                                                              v38);
                                                            __x = 10846;
                                                            v39 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                    process_packet_func_mapa,
                                                                    &__x);
                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(
                                                              v39,
                                                              &v309);
                                                            __x = 2199;
                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                            process_packet_func_mapa,
                                                                            &__x)._M_node;
                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                            if ( std::operator!=(&v306, &__y) )
                                                            {
                                                              common::milog::MiLogStream::create(
                                                                &v310,
                                                                &common::milog::MiLogDefault::default_log_obj_,
                                                                4u,
                                                                "./src/handler/activity_handler.cpp",
                                                                "addPacketFuncToMap",
                                                                147);
                                                              common::milog::MiLogStream::operator()(
                                                                &v310,
                                                                off_25049520,
                                                                2199LL);
                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                              return -1;
                                                            }
                                                            else
                                                            {
                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                              __x = 2199;
                                                              v40 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                      process_packet_func_mapa,
                                                                      &__x);
                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#26}>(
                                                                v40,
                                                                (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                              __x = 2045;
                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                              process_packet_func_mapa,
                                                                              &__x)._M_node;
                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                              if ( std::operator!=(&v306, &__y) )
                                                              {
                                                                common::milog::MiLogStream::create(
                                                                  &v310,
                                                                  &common::milog::MiLogDefault::default_log_obj_,
                                                                  4u,
                                                                  "./src/handler/activity_handler.cpp",
                                                                  "addPacketFuncToMap",
                                                                  148);
                                                                common::milog::MiLogStream::operator()(
                                                                  &v310,
                                                                  off_25049520,
                                                                  2045LL);
                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                return -1;
                                                              }
                                                              else
                                                              {
                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                __x = 2045;
                                                                v41 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                        process_packet_func_mapa,
                                                                        &__x);
                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#27}>(
                                                                  v41,
                                                                  (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                __x = 2087;
                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                process_packet_func_mapa,
                                                                                &__x)._M_node;
                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                if ( std::operator!=(&v306, &__y) )
                                                                {
                                                                  common::milog::MiLogStream::create(
                                                                    &v310,
                                                                    &common::milog::MiLogDefault::default_log_obj_,
                                                                    4u,
                                                                    "./src/handler/activity_handler.cpp",
                                                                    "addPacketFuncToMap",
                                                                    150);
                                                                  common::milog::MiLogStream::operator()(
                                                                    &v310,
                                                                    off_25049520,
                                                                    2087LL);
                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                  return -1;
                                                                }
                                                                else
                                                                {
                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                  __x = 2087;
                                                                  v42 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                          process_packet_func_mapa,
                                                                          &__x);
                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#28}>(
                                                                    v42,
                                                                    (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                  __x = 2131;
                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                  process_packet_func_mapa,
                                                                                  &__x)._M_node;
                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                  if ( std::operator!=(&v306, &__y) )
                                                                  {
                                                                    common::milog::MiLogStream::create(
                                                                      &v310,
                                                                      &common::milog::MiLogDefault::default_log_obj_,
                                                                      4u,
                                                                      "./src/handler/activity_handler.cpp",
                                                                      "addPacketFuncToMap",
                                                                      151);
                                                                    common::milog::MiLogStream::operator()(
                                                                      &v310,
                                                                      off_25049520,
                                                                      2131LL);
                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                    return -1;
                                                                  }
                                                                  else
                                                                  {
                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                    __x = 2131;
                                                                    v43 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                            process_packet_func_mapa,
                                                                            &__x);
                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#29}>(
                                                                      v43,
                                                                      (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                    __x = 2149;
                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                    process_packet_func_mapa,
                                                                                    &__x)._M_node;
                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                    if ( std::operator!=(&v306, &__y) )
                                                                    {
                                                                      common::milog::MiLogStream::create(
                                                                        &v310,
                                                                        &common::milog::MiLogDefault::default_log_obj_,
                                                                        4u,
                                                                        "./src/handler/activity_handler.cpp",
                                                                        "addPacketFuncToMap",
                                                                        152);
                                                                      common::milog::MiLogStream::operator()(
                                                                        &v310,
                                                                        off_25049520,
                                                                        2149LL);
                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                      return -1;
                                                                    }
                                                                    else
                                                                    {
                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                      __x = 2149;
                                                                      v44 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                              process_packet_func_mapa,
                                                                              &__x);
                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#30}>(
                                                                        v44,
                                                                        (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                      __x = 2150;
                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                      process_packet_func_mapa,
                                                                                      &__x)._M_node;
                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                      if ( std::operator!=(&v306, &__y) )
                                                                      {
                                                                        common::milog::MiLogStream::create(
                                                                          &v310,
                                                                          &common::milog::MiLogDefault::default_log_obj_,
                                                                          4u,
                                                                          "./src/handler/activity_handler.cpp",
                                                                          "addPacketFuncToMap",
                                                                          153);
                                                                        common::milog::MiLogStream::operator()(
                                                                          &v310,
                                                                          off_25049520,
                                                                          2150LL);
                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                        return -1;
                                                                      }
                                                                      else
                                                                      {
                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                        __x = 2150;
                                                                        v45 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                process_packet_func_mapa,
                                                                                &__x);
                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#31}>(
                                                                          v45,
                                                                          (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                        __x = 2021;
                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                        process_packet_func_mapa,
                                                                                        &__x)._M_node;
                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                        if ( std::operator!=(&v306, &__y) )
                                                                        {
                                                                          common::milog::MiLogStream::create(
                                                                            &v310,
                                                                            &common::milog::MiLogDefault::default_log_obj_,
                                                                            4u,
                                                                            "./src/handler/activity_handler.cpp",
                                                                            "addPacketFuncToMap",
                                                                            154);
                                                                          common::milog::MiLogStream::operator()(
                                                                            &v310,
                                                                            off_25049520,
                                                                            2021LL);
                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                          return -1;
                                                                        }
                                                                        else
                                                                        {
                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                          __x = 2021;
                                                                          v46 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                  process_packet_func_mapa,
                                                                                  &__x);
                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#32}>(
                                                                            v46,
                                                                            (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                          __x = 2127;
                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                          process_packet_func_mapa,
                                                                                          &__x)._M_node;
                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                          if ( std::operator!=(&v306, &__y) )
                                                                          {
                                                                            common::milog::MiLogStream::create(
                                                                              &v310,
                                                                              &common::milog::MiLogDefault::default_log_obj_,
                                                                              4u,
                                                                              "./src/handler/activity_handler.cpp",
                                                                              "addPacketFuncToMap",
                                                                              156);
                                                                            common::milog::MiLogStream::operator()(
                                                                              &v310,
                                                                              off_25049520,
                                                                              2127LL);
                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                            return -1;
                                                                          }
                                                                          else
                                                                          {
                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                            __x = 2127;
                                                                            v47 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                    process_packet_func_mapa,
                                                                                    &__x);
                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#33}>(
                                                                              v47,
                                                                              (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                            __x = 2194;
                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                            process_packet_func_mapa,
                                                                                            &__x)._M_node;
                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                            if ( std::operator!=(&v306, &__y) )
                                                                            {
                                                                              common::milog::MiLogStream::create(
                                                                                &v310,
                                                                                &common::milog::MiLogDefault::default_log_obj_,
                                                                                4u,
                                                                                "./src/handler/activity_handler.cpp",
                                                                                "addPacketFuncToMap",
                                                                                158);
                                                                              common::milog::MiLogStream::operator()(
                                                                                &v310,
                                                                                off_25049520,
                                                                                2194LL);
                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                              return -1;
                                                                            }
                                                                            else
                                                                            {
                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                              __x = 2194;
                                                                              v48 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                      process_packet_func_mapa,
                                                                                      &__x);
                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#34}>(
                                                                                v48,
                                                                                (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                              __x = 2167;
                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                              process_packet_func_mapa,
                                                                                              &__x)._M_node;
                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                              if ( std::operator!=(&v306, &__y) )
                                                                              {
                                                                                common::milog::MiLogStream::create(
                                                                                  &v310,
                                                                                  &common::milog::MiLogDefault::default_log_obj_,
                                                                                  4u,
                                                                                  "./src/handler/activity_handler.cpp",
                                                                                  "addPacketFuncToMap",
                                                                                  159);
                                                                                common::milog::MiLogStream::operator()(
                                                                                  &v310,
                                                                                  off_25049520,
                                                                                  2167LL);
                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                return -1;
                                                                              }
                                                                              else
                                                                              {
                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                __x = 2167;
                                                                                v49 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                        process_packet_func_mapa,
                                                                                        &__x);
                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#35}>(
                                                                                  v49,
                                                                                  (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                __x = 2181;
                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                                process_packet_func_mapa,
                                                                                                &__x)._M_node;
                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                {
                                                                                  common::milog::MiLogStream::create(
                                                                                    &v310,
                                                                                    &common::milog::MiLogDefault::default_log_obj_,
                                                                                    4u,
                                                                                    "./src/handler/activity_handler.cpp",
                                                                                    "addPacketFuncToMap",
                                                                                    160);
                                                                                  common::milog::MiLogStream::operator()(
                                                                                    &v310,
                                                                                    off_25049520,
                                                                                    2181LL);
                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                  return -1;
                                                                                }
                                                                                else
                                                                                {
                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                  __x = 2181;
                                                                                  v50 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                          process_packet_func_mapa,
                                                                                          &__x);
                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#36}>(
                                                                                    v50,
                                                                                    (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                  __x = 8971;
                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                                  process_packet_func_mapa,
                                                                                                  &__x)._M_node;
                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                  {
                                                                                    common::milog::MiLogStream::create(
                                                                                      &v310,
                                                                                      &common::milog::MiLogDefault::default_log_obj_,
                                                                                      4u,
                                                                                      "./src/handler/activity_handler.cpp",
                                                                                      "addPacketFuncToMap",
                                                                                      162);
                                                                                    common::milog::MiLogStream::operator()(
                                                                                      &v310,
                                                                                      off_25049520,
                                                                                      8971LL);
                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                    return -1;
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                    __x = 8971;
                                                                                    v51 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                            process_packet_func_mapa,
                                                                                            &__x);
                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#37}>(
                                                                                      v51,
                                                                                      (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                    __x = 8372;
                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(
                                                                                                    process_packet_func_mapa,
                                                                                                    &__x)._M_node;
                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                    {
                                                                                      common::milog::MiLogStream::create(
                                                                                        &v310,
                                                                                        &common::milog::MiLogDefault::default_log_obj_,
                                                                                        4u,
                                                                                        "./src/handler/activity_handler.cpp",
                                                                                        "addPacketFuncToMap",
                                                                                        163);
                                                                                      common::milog::MiLogStream::operator()(
                                                                                        &v310,
                                                                                        off_25049520,
                                                                                        8372LL);
                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                      return -1;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                      __x = 8372;
                                                                                      v52 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                              process_packet_func_mapa,
                                                                                              &__x);
                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#38}>(
                                                                                        v52,
                                                                                        (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                      __x = 8183;
                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                      {
                                                                                        common::milog::MiLogStream::create(
                                                                                          &v310,
                                                                                          &common::milog::MiLogDefault::default_log_obj_,
                                                                                          4u,
                                                                                          "./src/handler/activity_handler.cpp",
                                                                                          "addPacketFuncToMap",
                                                                                          165);
                                                                                        common::milog::MiLogStream::operator()(
                                                                                          &v310,
                                                                                          off_25049520,
                                                                                          8183LL);
                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                        return -1;
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                        __x = 8183;
                                                                                        v53 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                                process_packet_func_mapa,
                                                                                                &__x);
                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#39}>(
                                                                                          v53,
                                                                                          (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                        __x = 5330;
                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                        if ( std::operator!=(
                                                                                               &v306,
                                                                                               &__y) )
                                                                                        {
                                                                                          common::milog::MiLogStream::create(
                                                                                            &v310,
                                                                                            &common::milog::MiLogDefault::default_log_obj_,
                                                                                            4u,
                                                                                            "./src/handler/activity_handler.cpp",
                                                                                            "addPacketFuncToMap",
                                                                                            166);
                                                                                          common::milog::MiLogStream::operator()(
                                                                                            &v310,
                                                                                            off_25049520,
                                                                                            5330LL);
                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                          return -1;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                          __x = 5330;
                                                                                          v54 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                                  process_packet_func_mapa,
                                                                                                  &__x);
                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#40}>(
                                                                                            v54,
                                                                                            (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                          __x = 5358;
                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                          if ( std::operator!=(
                                                                                                 &v306,
                                                                                                 &__y) )
                                                                                          {
                                                                                            common::milog::MiLogStream::create(
                                                                                              &v310,
                                                                                              &common::milog::MiLogDefault::default_log_obj_,
                                                                                              4u,
                                                                                              "./src/handler/activity_handler.cpp",
                                                                                              "addPacketFuncToMap",
                                                                                              167);
                                                                                            common::milog::MiLogStream::operator()(
                                                                                              &v310,
                                                                                              off_25049520,
                                                                                              5358LL);
                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                            return -1;
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                            __x = 5358;
                                                                                            v55 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](
                                                                                                    process_packet_func_mapa,
                                                                                                    &__x);
                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#41}>(
                                                                                              v55,
                                                                                              (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                            __x = 8512;
                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                            if ( std::operator!=(
                                                                                                   &v306,
                                                                                                   &__y) )
                                                                                            {
                                                                                              common::milog::MiLogStream::create(
                                                                                                &v310,
                                                                                                &common::milog::MiLogDefault::default_log_obj_,
                                                                                                4u,
                                                                                                "./src/handler/activity_handler.cpp",
                                                                                                "addPacketFuncToMap",
                                                                                                168);
                                                                                              common::milog::MiLogStream::operator()(
                                                                                                &v310,
                                                                                                off_25049520,
                                                                                                8512LL);
                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                              return -1;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                              __x = 8512;
                                                                                              v56 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#42}>(
                                                                                                v56,
                                                                                                (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                              __x = 8666;
                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                              if ( std::operator!=(
                                                                                                     &v306,
                                                                                                     &__y) )
                                                                                              {
                                                                                                common::milog::MiLogStream::create(
                                                                                                  &v310,
                                                                                                  &common::milog::MiLogDefault::default_log_obj_,
                                                                                                  4u,
                                                                                                  "./src/handler/activity_handler.cpp",
                                                                                                  "addPacketFuncToMap",
                                                                                                  170);
                                                                                                common::milog::MiLogStream::operator()(
                                                                                                  &v310,
                                                                                                  off_25049520,
                                                                                                  8666LL);
                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                return -1;
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                __x = 8666;
                                                                                                v57 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#43}>(
                                                                                                  v57,
                                                                                                  (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                __x = 8893;
                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                {
                                                                                                  common::milog::MiLogStream::create(
                                                                                                    &v310,
                                                                                                    &common::milog::MiLogDefault::default_log_obj_,
                                                                                                    4u,
                                                                                                    "./src/handler/activity_handler.cpp",
                                                                                                    "addPacketFuncToMap",
                                                                                                    171);
                                                                                                  common::milog::MiLogStream::operator()(
                                                                                                    &v310,
                                                                                                    off_25049520,
                                                                                                    8893LL);
                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                  return -1;
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                  __x = 8893;
                                                                                                  v58 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#44}>(
                                                                                                    v58,
                                                                                                    (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                  __x = 8740;
                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                  {
                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 172);
                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8740LL);
                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                    return -1;
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                    __x = 8740;
                                                                                                    v59 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#45}>(v59, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                    __x = 8107;
                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                    {
                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 174);
                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8107LL);
                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                      return -1;
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                      __x = 8107;
                                                                                                      v60 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#46}>(v60, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                      __x = 8516;
                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                      {
                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 175);
                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8516LL);
                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                        return -1;
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                        __x = 8516;
                                                                                                        v61 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#47}>(v61, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                        __x = 8869;
                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                        {
                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 176);
                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8869LL);
                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                          return -1;
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                          __x = 8869;
                                                                                                          v62 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#48}>(v62, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                          __x = 8589;
                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                          {
                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 177);
                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8589LL);
                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                            return -1;
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                            __x = 8589;
                                                                                                            v63 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#49}>(v63, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                            __x = 8684;
                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                            {
                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 178);
                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8684LL);
                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                              return -1;
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                              __x = 8684;
                                                                                                              v64 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#50}>(v64, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                              __x = 8503;
                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                              {
                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 179);
                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8503LL);
                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                return -1;
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                __x = 8503;
                                                                                                                v65 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#51}>(v65, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                __x = 8416;
                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                {
                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 180);
                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8416LL);
                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                  return -1;
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                  __x = 8416;
                                                                                                                  v66 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#52}>(v66, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                  __x = 8409;
                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                  {
                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 181);
                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8409LL);
                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                    return -1;
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                    __x = 8409;
                                                                                                                    v67 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#53}>(v67, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                    __x = 8745;
                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                    {
                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 182);
                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8745LL);
                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                      return -1;
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                      __x = 8745;
                                                                                                                      v68 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#54}>(v68, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                      __x = 8732;
                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                      {
                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 184);
                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8732LL);
                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                        return -1;
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                        __x = 8732;
                                                                                                                        v69 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#55}>(v69, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                        __x = 8114;
                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                        {
                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 185);
                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8114LL);
                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                          return -1;
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                          __x = 8114;
                                                                                                                          v70 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#56}>(v70, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                          __x = 8410;
                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                          {
                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 186);
                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8410LL);
                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                            return -1;
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                            __x = 8410;
                                                                                                                            v71 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#57}>(v71, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                            __x = 0x1FFF;
                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                            {
                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 188);
                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 0x1FFFLL);
                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                              return -1;
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                              __x = 0x1FFF;
                                                                                                                              v72 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#58}>(v72, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                              __x = 5333;
                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                              {
                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 189);
                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 5333LL);
                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                return -1;
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                __x = 5333;
                                                                                                                                v73 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#59}>(v73, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                __x = 5389;
                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                {
                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 190);
                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 5389LL);
                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                  return -1;
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                  __x = 5389;
                                                                                                                                  v74 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#60}>(v74, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                  __x = 8653;
                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                  {
                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 192);
                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8653LL);
                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                    return -1;
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                    __x = 8653;
                                                                                                                                    v75 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#61}>(v75, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                    __x = 8313;
                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                    {
                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 194);
                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8313LL);
                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                      return -1;
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                      __x = 8313;
                                                                                                                                      v76 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#62}>(v76, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                      __x = 8215;
                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                      {
                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 195);
                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8215LL);
                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                        return -1;
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                        __x = 8215;
                                                                                                                                        v77 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#63}>(v77, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                        __x = 8351;
                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                        {
                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 196);
                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8351LL);
                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                          return -1;
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                          __x = 8351;
                                                                                                                                          v78 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#64}>(v78, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                          __x = 8612;
                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                          {
                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 197);
                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8612LL);
                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                            return -1;
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                            __x = 8612;
                                                                                                                                            v79 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#65}>(v79, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                            __x = 8805;
                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                            {
                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 199);
                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8805LL);
                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                              return -1;
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                              __x = 8805;
                                                                                                                                              v80 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#66}>(v80, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                              __x = 8045;
                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                              {
                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 200);
                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8045LL);
                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                return -1;
                                                                                                                                              }
                                                                                                                                              else
                                                                                                                                              {
                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                __x = 8045;
                                                                                                                                                v81 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#67}>(v81, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                __x = 8195;
                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                {
                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 201);
                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8195LL);
                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                  return -1;
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                  __x = 8195;
                                                                                                                                                  v82 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#68}>(v82, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                  __x = 8560;
                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                  {
                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 203);
                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8560LL);
                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                    return -1;
                                                                                                                                                  }
                                                                                                                                                  else
                                                                                                                                                  {
                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                    __x = 8560;
                                                                                                                                                    v83 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#69}>(v83, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                    __x = 8968;
                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                    {
                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 204);
                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8968LL);
                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                      return -1;
                                                                                                                                                    }
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                      __x = 8968;
                                                                                                                                                      v84 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#70}>(v84, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                      __x = 8547;
                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                      {
                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 205);
                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8547LL);
                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                        return -1;
                                                                                                                                                      }
                                                                                                                                                      else
                                                                                                                                                      {
                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                        __x = 8547;
                                                                                                                                                        v85 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#71}>(v85, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                        __x = 8126;
                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                        {
                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 206);
                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8126LL);
                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                          return -1;
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                          v288.m128i_i64[0] = (__int64)ActivityHandler::onPlantFlowerGetFriendFlowerWishListReq;
                                                                                                                                                          v288.m128i_i64[1] = 0LL;
                                                                                                                                                          *(__m128i *)__f = _mm_load_si128(&v288);
                                                                                                                                                          std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v86, v87);
                                                                                                                                                          __x = 8126;
                                                                                                                                                          v88 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v88, &v309);
                                                                                                                                                          __x = 10887;
                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                          {
                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 207);
                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 10887LL);
                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                            return -1;
                                                                                                                                                          }
                                                                                                                                                          else
                                                                                                                                                          {
                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                            v289.m128i_i64[0] = (__int64)ActivityHandler::onServerPlantFlowerGetFriendFlowerWishListRsp;
                                                                                                                                                            v289.m128i_i64[1] = 0LL;
                                                                                                                                                            *(__m128i *)__f = _mm_load_si128(&v289);
                                                                                                                                                            std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v89, v90);
                                                                                                                                                            __x = 10887;
                                                                                                                                                            v91 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v91, &v309);
                                                                                                                                                            __x = 8846;
                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                            {
                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 208);
                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8846LL);
                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                              return -1;
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                              v290.m128i_i64[0] = (__int64)ActivityHandler::onPlantFlowerGiveFriendFlowerReq;
                                                                                                                                                              v290.m128i_i64[1] = 0LL;
                                                                                                                                                              *(__m128i *)__f = _mm_load_si128(&v290);
                                                                                                                                                              std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v92, v93);
                                                                                                                                                              __x = 8846;
                                                                                                                                                              v94 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v94, &v309);
                                                                                                                                                              __x = 10900;
                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                              {
                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 209);
                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 10900LL);
                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                return -1;
                                                                                                                                                              }
                                                                                                                                                              else
                                                                                                                                                              {
                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                v291.m128i_i64[0] = (__int64)ActivityHandler::onServerPlantFlowerGetFriendFlowerDataRsp;
                                                                                                                                                                v291.m128i_i64[1] = 0LL;
                                                                                                                                                                *(__m128i *)__f = _mm_load_si128(&v291);
                                                                                                                                                                std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v95, v96);
                                                                                                                                                                __x = 10900;
                                                                                                                                                                v97 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v97, &v309);
                                                                                                                                                                __x = 8270;
                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                {
                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 210);
                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8270LL);
                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                  return -1;
                                                                                                                                                                }
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                  v292.m128i_i64[0] = (__int64)ActivityHandler::onPlantFlowerGetRecvFlowerListReq;
                                                                                                                                                                  v292.m128i_i64[1] = 0LL;
                                                                                                                                                                  *(__m128i *)__f = _mm_load_si128(&v292);
                                                                                                                                                                  std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v98, v99);
                                                                                                                                                                  __x = 8270;
                                                                                                                                                                  v100 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v100, &v309);
                                                                                                                                                                  __x = 8383;
                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                  {
                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 211);
                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8383LL);
                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                    return -1;
                                                                                                                                                                  }
                                                                                                                                                                  else
                                                                                                                                                                  {
                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                    __x = 8383;
                                                                                                                                                                    v101 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#72}>(v101, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                    __x = 8808;
                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                    {
                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 212);
                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8808LL);
                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                      return -1;
                                                                                                                                                                    }
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                      __x = 8808;
                                                                                                                                                                      v102 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#73}>(v102, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                      __x = 8716;
                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                      {
                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 213);
                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8716LL);
                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                        return -1;
                                                                                                                                                                      }
                                                                                                                                                                      else
                                                                                                                                                                      {
                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                        __x = 8716;
                                                                                                                                                                        v103 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#74}>(v103, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                        __x = 8843;
                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                        {
                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 214);
                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8843LL);
                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                          return -1;
                                                                                                                                                                        }
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                          __x = 8843;
                                                                                                                                                                          v104 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#75}>(v104, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                          __x = 8406;
                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                          {
                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 216);
                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8406LL);
                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                            return -1;
                                                                                                                                                                          }
                                                                                                                                                                          else
                                                                                                                                                                          {
                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                            __x = 8406;
                                                                                                                                                                            v105 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#76}>(v105, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                            __x = 8892;
                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                            {
                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 217);
                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8892LL);
                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                              return -1;
                                                                                                                                                                            }
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                              __x = 8892;
                                                                                                                                                                              v106 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#77}>(v106, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                              __x = 8148;
                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                              {
                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 219);
                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8148LL);
                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                return -1;
                                                                                                                                                                              }
                                                                                                                                                                              else
                                                                                                                                                                              {
                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                __x = 8148;
                                                                                                                                                                                v107 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#78}>(v107, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                __x = 8279;
                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                {
                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 220);
                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8279LL);
                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                  return -1;
                                                                                                                                                                                }
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                  __x = 8279;
                                                                                                                                                                                  v108 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#79}>(v108, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                  __x = 8085;
                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                  {
                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 221);
                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8085LL);
                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                    return -1;
                                                                                                                                                                                  }
                                                                                                                                                                                  else
                                                                                                                                                                                  {
                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                    __x = 8085;
                                                                                                                                                                                    v109 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#80}>(v109, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                    __x = 8353;
                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                    {
                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 222);
                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8353LL);
                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                      return -1;
                                                                                                                                                                                    }
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                      __x = 8353;
                                                                                                                                                                                      v110 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#81}>(v110, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                      __x = 8306;
                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                      {
                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 223);
                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8306LL);
                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                        return -1;
                                                                                                                                                                                      }
                                                                                                                                                                                      else
                                                                                                                                                                                      {
                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                        __x = 8306;
                                                                                                                                                                                        v111 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#82}>(v111, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                        __x = 8463;
                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                        {
                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 224);
                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8463LL);
                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                          return -1;
                                                                                                                                                                                        }
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                          __x = 8463;
                                                                                                                                                                                          v112 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#83}>(v112, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                          __x = 8151;
                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                          {
                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 225);
                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8151LL);
                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                            return -1;
                                                                                                                                                                                          }
                                                                                                                                                                                          else
                                                                                                                                                                                          {
                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                            __x = 8151;
                                                                                                                                                                                            v113 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#84}>(v113, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                            __x = 8528;
                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                            {
                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 226);
                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8528LL);
                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                              return -1;
                                                                                                                                                                                            }
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                              __x = 8528;
                                                                                                                                                                                              v114 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#85}>(v114, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                              __x = 8457;
                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                              {
                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 227);
                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8457LL);
                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                return -1;
                                                                                                                                                                                              }
                                                                                                                                                                                              else
                                                                                                                                                                                              {
                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                __x = 8457;
                                                                                                                                                                                                v115 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#86}>(v115, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                __x = 8242;
                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                {
                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 229);
                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8242LL);
                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                }
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                  __x = 8242;
                                                                                                                                                                                                  v116 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#87}>(v116, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                  __x = 8205;
                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                  {
                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 230);
                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8205LL);
                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                  }
                                                                                                                                                                                                  else
                                                                                                                                                                                                  {
                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                    __x = 8205;
                                                                                                                                                                                                    v117 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#88}>(v117, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                    __x = 8947;
                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                    {
                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 231);
                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8947LL);
                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                      __x = 8947;
                                                                                                                                                                                                      v118 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#89}>(v118, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                      __x = 8795;
                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                      {
                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 232);
                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8795LL);
                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                      }
                                                                                                                                                                                                      else
                                                                                                                                                                                                      {
                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                        __x = 8795;
                                                                                                                                                                                                        v119 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#90}>(v119, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                        __x = 8660;
                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                        {
                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 233);
                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8660LL);
                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else
                                                                                                                                                                                                        {
                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                          __x = 8660;
                                                                                                                                                                                                          v120 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#91}>(v120, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                          __x = 8201;
                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                          {
                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 234);
                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8201LL);
                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                          }
                                                                                                                                                                                                          else
                                                                                                                                                                                                          {
                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                            __x = 8201;
                                                                                                                                                                                                            v121 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#92}>(v121, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                            __x = 8421;
                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                            {
                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 235);
                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8421LL);
                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                              __x = 8421;
                                                                                                                                                                                                              v122 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#93}>(v122, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                              __x = 8464;
                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                              {
                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 237);
                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8464LL);
                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                              }
                                                                                                                                                                                                              else
                                                                                                                                                                                                              {
                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                __x = 8464;
                                                                                                                                                                                                                v123 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#94}>(v123, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                __x = 8753;
                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 239);
                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8753LL);
                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                  __x = 8753;
                                                                                                                                                                                                                  v124 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#95}>(v124, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                  __x = 8387;
                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 240);
                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8387LL);
                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  else
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                    __x = 8387;
                                                                                                                                                                                                                    v125 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#96}>(v125, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                    __x = 9000;
                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 241);
                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 9000LL);
                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                      __x = 9000;
                                                                                                                                                                                                                      v126 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#97}>(v126, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                      __x = 8964;
                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 242);
                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8964LL);
                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      else
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                        __x = 8964;
                                                                                                                                                                                                                        v127 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#98}>(v127, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                        __x = 8144;
                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 243);
                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8144LL);
                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                          __x = 8144;
                                                                                                                                                                                                                          v128 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#99}>(v128, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                          __x = 8607;
                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 244);
                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8607LL);
                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          else
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                            __x = 8607;
                                                                                                                                                                                                                            v129 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#100}>(v129, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                            __x = 8401;
                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 245);
                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8401LL);
                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                              __x = 8401;
                                                                                                                                                                                                                              v130 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#101}>(v130, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                              __x = 8844;
                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 246);
                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8844LL);
                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              else
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                __x = 8844;
                                                                                                                                                                                                                                v131 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#102}>(v131, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                __x = 8946;
                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 247);
                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8946LL);
                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                  v293.m128i_i64[0] = (__int64)ActivityHandler::onWinterCampGetFriendWishListReq;
                                                                                                                                                                                                                                  v293.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                  *(__m128i *)__f = _mm_load_si128(&v293);
                                                                                                                                                                                                                                  std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v132, v133);
                                                                                                                                                                                                                                  __x = 8946;
                                                                                                                                                                                                                                  v134 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v134, &v309);
                                                                                                                                                                                                                                  __x = 10868;
                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 248);
                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 10868LL);
                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                    v294.m128i_i64[0] = (__int64)ActivityHandler::onServerWinterCampGetFriendWishListRsp;
                                                                                                                                                                                                                                    v294.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                    *(__m128i *)__f = _mm_load_si128(&v294);
                                                                                                                                                                                                                                    std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v135, v136);
                                                                                                                                                                                                                                    __x = 10868;
                                                                                                                                                                                                                                    v137 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v137, &v309);
                                                                                                                                                                                                                                    __x = 8572;
                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 249);
                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8572LL);
                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                      v295.m128i_i64[0] = (__int64)ActivityHandler::onWinterCampGiveFriendItemReq;
                                                                                                                                                                                                                                      v295.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                      *(__m128i *)__f = _mm_load_si128(&v295);
                                                                                                                                                                                                                                      std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v138, v139);
                                                                                                                                                                                                                                      __x = 8572;
                                                                                                                                                                                                                                      v140 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v140, &v309);
                                                                                                                                                                                                                                      __x = 10818;
                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 250);
                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 10818LL);
                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                        v296.m128i_i64[0] = (__int64)ActivityHandler::onServerWinterCampGetFriendItemDataRsp;
                                                                                                                                                                                                                                        v296.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                        *(__m128i *)__f = _mm_load_si128(&v296);
                                                                                                                                                                                                                                        std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v141, v142);
                                                                                                                                                                                                                                        __x = 10818;
                                                                                                                                                                                                                                        v143 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v143, &v309);
                                                                                                                                                                                                                                        __x = 8143;
                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 251);
                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8143LL);
                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                          v297.m128i_i64[0] = (__int64)ActivityHandler::onWinterCampGetRecvItemListReq;
                                                                                                                                                                                                                                          v297.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                          *(__m128i *)__f = _mm_load_si128(&v297);
                                                                                                                                                                                                                                          std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v144, v145);
                                                                                                                                                                                                                                          __x = 8143;
                                                                                                                                                                                                                                          v146 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v146, &v309);
                                                                                                                                                                                                                                          __x = 8377;
                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 253);
                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8377LL);
                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                            __x = 8377;
                                                                                                                                                                                                                                            v147 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#103}>(v147, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                            __x = 8261;
                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 254);
                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8261LL);
                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                              __x = 8261;
                                                                                                                                                                                                                                              v148 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#104}>(v148, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                              __x = 0x2000;
                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 255);
                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 0x2000LL);
                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                __x = 0x2000;
                                                                                                                                                                                                                                                v149 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#105}>(v149, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                __x = 8273;
                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 256);
                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8273LL);
                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                  __x = 8273;
                                                                                                                                                                                                                                                  v150 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#106}>(v150, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                  __x = 8704;
                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 258);
                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8704LL);
                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                    __x = 8704;
                                                                                                                                                                                                                                                    v151 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#107}>(v151, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                    __x = 8218;
                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 259);
                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8218LL);
                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                      __x = 8218;
                                                                                                                                                                                                                                                      v152 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#108}>(v152, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                      __x = 8758;
                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 260);
                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8758LL);
                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                        __x = 8758;
                                                                                                                                                                                                                                                        v153 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#109}>(v153, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                        __x = 8826;
                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 261);
                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8826LL);
                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                          __x = 8826;
                                                                                                                                                                                                                                                          v154 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#110}>(v154, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                          __x = 8367;
                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 262);
                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8367LL);
                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                            __x = 8367;
                                                                                                                                                                                                                                                            v155 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#111}>(v155, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                            __x = 8396;
                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 263);
                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8396LL);
                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                              __x = 8396;
                                                                                                                                                                                                                                                              v156 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#112}>(v156, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                              __x = 8518;
                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 264);
                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8518LL);
                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                __x = 8518;
                                                                                                                                                                                                                                                                v157 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#113}>(v157, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                __x = 8226;
                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 265);
                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8226LL);
                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                  __x = 8226;
                                                                                                                                                                                                                                                                  v158 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#114}>(v158, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                  __x = 8277;
                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 266);
                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8277LL);
                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                    __x = 8277;
                                                                                                                                                                                                                                                                    v159 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#115}>(v159, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                    __x = 8967;
                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 267);
                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8967LL);
                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                      __x = 8967;
                                                                                                                                                                                                                                                                      v160 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#116}>(v160, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                      __x = 2009;
                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 269);
                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 2009LL);
                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                        __x = 2009;
                                                                                                                                                                                                                                                                        v161 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#117}>(v161, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                        __x = 8718;
                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 271);
                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8718LL);
                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                          __x = 8718;
                                                                                                                                                                                                                                                                          v162 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#118}>(v162, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                          __x = 8054;
                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 272);
                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8054LL);
                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                            __x = 8054;
                                                                                                                                                                                                                                                                            v163 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#119}>(v163, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                            __x = 8345;
                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 273);
                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8345LL);
                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                              __x = 8345;
                                                                                                                                                                                                                                                                              v164 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#120}>(v164, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                              __x = 8703;
                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 274);
                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8703LL);
                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                __x = 8703;
                                                                                                                                                                                                                                                                                v165 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#121}>(v165, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                __x = 8414;
                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 276);
                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8414LL);
                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                  __x = 8414;
                                                                                                                                                                                                                                                                                  v166 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#122}>(v166, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                  __x = 8442;
                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 277);
                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8442LL);
                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                    __x = 8442;
                                                                                                                                                                                                                                                                                    v167 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#123}>(v167, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                    __x = 8462;
                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 278);
                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8462LL);
                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                      __x = 8462;
                                                                                                                                                                                                                                                                                      v168 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#124}>(v168, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                      __x = 8507;
                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 279);
                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8507LL);
                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                        __x = 8507;
                                                                                                                                                                                                                                                                                        v169 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#125}>(v169, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                        __x = 8771;
                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 280);
                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8771LL);
                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                          __x = 8771;
                                                                                                                                                                                                                                                                                          v170 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#126}>(v170, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                          __x = 8227;
                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 281);
                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8227LL);
                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                            __x = 8227;
                                                                                                                                                                                                                                                                                            v171 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#127}>(v171, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                            __x = 8178;
                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 283);
                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8178LL);
                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                              __x = 8178;
                                                                                                                                                                                                                                                                                              v172 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#128}>(v172, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                              __x = 8325;
                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 285);
                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8325LL);
                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                __x = 8325;
                                                                                                                                                                                                                                                                                                v173 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#129}>(v173, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                __x = 8022;
                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 286);
                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8022LL);
                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                  __x = 8022;
                                                                                                                                                                                                                                                                                                  v174 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#130}>(v174, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                  __x = 8096;
                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 288);
                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8096LL);
                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                    __x = 8096;
                                                                                                                                                                                                                                                                                                    v175 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#131}>(v175, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                    __x = 8216;
                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 289);
                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8216LL);
                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                      __x = 8216;
                                                                                                                                                                                                                                                                                                      v176 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#132}>(v176, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                      __x = 8921;
                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 291);
                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8921LL);
                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                        __x = 8921;
                                                                                                                                                                                                                                                                                                        v177 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#133}>(v177, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                        __x = 8709;
                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 292);
                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8709LL);
                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                          __x = 8709;
                                                                                                                                                                                                                                                                                                          v178 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#134}>(v178, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                          __x = 8608;
                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 294);
                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8608LL);
                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                            __x = 8608;
                                                                                                                                                                                                                                                                                                            v179 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#135}>(v179, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                            __x = 8767;
                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 295);
                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8767LL);
                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                              __x = 8767;
                                                                                                                                                                                                                                                                                                              v180 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#136}>(v180, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                              __x = 8129;
                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 296);
                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8129LL);
                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                __x = 8129;
                                                                                                                                                                                                                                                                                                                v181 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#137}>(v181, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                __x = 8165;
                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 297);
                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8165LL);
                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                  __x = 8165;
                                                                                                                                                                                                                                                                                                                  v182 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#138}>(v182, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                  __x = 8061;
                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 298);
                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8061LL);
                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                    __x = 8061;
                                                                                                                                                                                                                                                                                                                    v183 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#139}>(v183, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                    __x = 8561;
                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 300);
                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8561LL);
                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                      __x = 8561;
                                                                                                                                                                                                                                                                                                                      v184 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#140}>(v184, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                      __x = 8057;
                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 301);
                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8057LL);
                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                        __x = 8057;
                                                                                                                                                                                                                                                                                                                        v185 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#141}>(v185, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                        __x = 8717;
                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 302);
                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8717LL);
                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                          __x = 8717;
                                                                                                                                                                                                                                                                                                                          v186 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#142}>(v186, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                          __x = 8919;
                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 304);
                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8919LL);
                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                            __x = 8919;
                                                                                                                                                                                                                                                                                                                            v187 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#143}>(v187, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                            __x = 8614;
                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 305);
                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8614LL);
                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                              __x = 8614;
                                                                                                                                                                                                                                                                                                                              v188 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#144}>(v188, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                              __x = 8930;
                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 306);
                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8930LL);
                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                __x = 8930;
                                                                                                                                                                                                                                                                                                                                v189 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#145}>(v189, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                __x = 8163;
                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 307);
                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8163LL);
                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                  __x = 8163;
                                                                                                                                                                                                                                                                                                                                  v190 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#146}>(v190, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                  __x = 8257;
                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 308);
                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8257LL);
                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                    __x = 8257;
                                                                                                                                                                                                                                                                                                                                    v191 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#147}>(v191, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                    __x = 8233;
                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 310);
                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8233LL);
                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                      v298.m128i_i64[0] = (__int64)ActivityHandler::onActivityGiveFriendGiftReq;
                                                                                                                                                                                                                                                                                                                                      v298.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                                                                                                                      *(__m128i *)__f = _mm_load_si128(&v298);
                                                                                                                                                                                                                                                                                                                                      std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v192, v193);
                                                                                                                                                                                                                                                                                                                                      __x = 8233;
                                                                                                                                                                                                                                                                                                                                      v194 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v194, &v309);
                                                                                                                                                                                                                                                                                                                                      __x = 10855;
                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 311);
                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 10855LL);
                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                        v299.m128i_i64[0] = (__int64)ActivityHandler::onServerActivityGetFriendGiftDataRsp;
                                                                                                                                                                                                                                                                                                                                        v299.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                                                                                                                        *(__m128i *)__f = _mm_load_si128(&v299);
                                                                                                                                                                                                                                                                                                                                        std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v195, v196);
                                                                                                                                                                                                                                                                                                                                        __x = 10855;
                                                                                                                                                                                                                                                                                                                                        v197 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v197, &v309);
                                                                                                                                                                                                                                                                                                                                        __x = 8725;
                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 312);
                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8725LL);
                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                          v300.m128i_i64[0] = (__int64)ActivityHandler::onActivityGetRecvGiftListReq;
                                                                                                                                                                                                                                                                                                                                          v300.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                                                                                                                          *(__m128i *)__f = _mm_load_si128(&v300);
                                                                                                                                                                                                                                                                                                                                          std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v198, v199);
                                                                                                                                                                                                                                                                                                                                          __x = 8725;
                                                                                                                                                                                                                                                                                                                                          v200 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v200, &v309);
                                                                                                                                                                                                                                                                                                                                          __x = 8095;
                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 313);
                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8095LL);
                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                            __x = 8095;
                                                                                                                                                                                                                                                                                                                                            v201 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#148}>(v201, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                            __x = 8113;
                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 314);
                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8113LL);
                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                              __x = 8113;
                                                                                                                                                                                                                                                                                                                                              v202 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#149}>(v202, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                              __x = 8806;
                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 315);
                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8806LL);
                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                v301.m128i_i64[0] = (__int64)ActivityHandler::onActivityGetFriendGiftWishListReq;
                                                                                                                                                                                                                                                                                                                                                v301.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                                                                                                                                *(__m128i *)__f = _mm_load_si128(&v301);
                                                                                                                                                                                                                                                                                                                                                std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v203, v204);
                                                                                                                                                                                                                                                                                                                                                __x = 8806;
                                                                                                                                                                                                                                                                                                                                                v205 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v205, &v309);
                                                                                                                                                                                                                                                                                                                                                __x = 10968;
                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 316);
                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 10968LL);
                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                  v302.m128i_i64[0] = (__int64)ActivityHandler::onServerActivityGetFriendGiftWishListRsp;
                                                                                                                                                                                                                                                                                                                                                  v302.m128i_i64[1] = 0LL;
                                                                                                                                                                                                                                                                                                                                                  *(__m128i *)__f = _mm_load_si128(&v302);
                                                                                                                                                                                                                                                                                                                                                  std::bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>),ActivityHandler*,std::_Placeholder<1> const&>(&v309, __f, (ActivityHandler **)&__y, (const std::_Placeholder<1> *)&std::placeholders::_1, v206, v207);
                                                                                                                                                                                                                                                                                                                                                  __x = 10968;
                                                                                                                                                                                                                                                                                                                                                  v208 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<std::_Bind<int (ActivityHandler::*)(std::shared_ptr<common::minet::Packet>) ()(ActivityHandler*,std::_Placeholder<1>)>>(v208, &v309);
                                                                                                                                                                                                                                                                                                                                                  __x = 8017;
                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 317);
                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8017LL);
                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                    __x = 8017;
                                                                                                                                                                                                                                                                                                                                                    v209 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#150}>(v209, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                    __x = 8559;
                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 318);
                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8559LL);
                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                      __x = 8559;
                                                                                                                                                                                                                                                                                                                                                      v210 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#151}>(v210, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                      __x = 8419;
                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 320);
                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8419LL);
                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                        __x = 8419;
                                                                                                                                                                                                                                                                                                                                                        v211 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#152}>(v211, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                        __x = 8127;
                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 321);
                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8127LL);
                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                          __x = 8127;
                                                                                                                                                                                                                                                                                                                                                          v212 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#153}>(v212, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                          __x = 8943;
                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 322);
                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8943LL);
                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                            __x = 8943;
                                                                                                                                                                                                                                                                                                                                                            v213 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#154}>(v213, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                            __x = 8838;
                                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 323);
                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8838LL);
                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                              __x = 8838;
                                                                                                                                                                                                                                                                                                                                                              v214 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#155}>(v214, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                              __x = 8617;
                                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 324);
                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8617LL);
                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                __x = 8617;
                                                                                                                                                                                                                                                                                                                                                                v215 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#156}>(v215, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                __x = 8159;
                                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 325);
                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 8159LL);
                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                  __x = 8159;
                                                                                                                                                                                                                                                                                                                                                                  v216 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#157}>(v216, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                  __x = 8748;
                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 326);
                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 8748LL);
                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                    __x = 8748;
                                                                                                                                                                                                                                                                                                                                                                    v217 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#158}>(v217, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                    __x = 8014;
                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 327);
                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 8014LL);
                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                      __x = 8014;
                                                                                                                                                                                                                                                                                                                                                                      v218 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#159}>(v218, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                      __x = 8991;
                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 328);
                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 8991LL);
                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                        __x = 8991;
                                                                                                                                                                                                                                                                                                                                                                        v219 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#160}>(v219, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                        __x = 8363;
                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 329);
                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8363LL);
                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                          __x = 8363;
                                                                                                                                                                                                                                                                                                                                                                          v220 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#161}>(v220, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                          __x = 8280;
                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 330);
                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8280LL);
                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                            __x = 8280;
                                                                                                                                                                                                                                                                                                                                                                            v221 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#162}>(v221, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                            __x = 8398;
                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 331);
                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8398LL);
                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                              __x = 8398;
                                                                                                                                                                                                                                                                                                                                                                              v222 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#163}>(v222, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                              __x = 8038;
                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 332);
                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 8038LL);
                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                __x = 8038;
                                                                                                                                                                                                                                                                                                                                                                                v223 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#164}>(v223, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                __x = 23467;
                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 334);
                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 23467LL);
                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                  __x = 23467;
                                                                                                                                                                                                                                                                                                                                                                                  v224 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#165}>(v224, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                  __x = 21834;
                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 335);
                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 21834LL);
                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                    __x = 21834;
                                                                                                                                                                                                                                                                                                                                                                                    v225 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#166}>(v225, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                    __x = 24550;
                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 336);
                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 24550LL);
                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                      __x = 24550;
                                                                                                                                                                                                                                                                                                                                                                                      v226 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#167}>(v226, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                      __x = 21054;
                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 337);
                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 21054LL);
                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                        __x = 21054;
                                                                                                                                                                                                                                                                                                                                                                                        v227 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#168}>(v227, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                        __x = 8145;
                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 339);
                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 8145LL);
                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                          __x = 8145;
                                                                                                                                                                                                                                                                                                                                                                                          v228 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#169}>(v228, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                          __x = 8476;
                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 341);
                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 8476LL);
                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                            __x = 8476;
                                                                                                                                                                                                                                                                                                                                                                                            v229 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#170}>(v229, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                            __x = 8346;
                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 343);
                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 8346LL);
                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                              __x = 8346;
                                                                                                                                                                                                                                                                                                                                                                                              v230 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#171}>(v230, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                              __x = 22882;
                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 345);
                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 22882LL);
                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                __x = 22882;
                                                                                                                                                                                                                                                                                                                                                                                                v231 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#172}>(v231, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                __x = 21750;
                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 346);
                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 21750LL);
                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                  __x = 21750;
                                                                                                                                                                                                                                                                                                                                                                                                  v232 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#173}>(v232, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                  __x = 23107;
                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 347);
                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 23107LL);
                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                    __x = 23107;
                                                                                                                                                                                                                                                                                                                                                                                                    v233 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#174}>(v233, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                    __x = 24312;
                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 349);
                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 24312LL);
                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                      __x = 24312;
                                                                                                                                                                                                                                                                                                                                                                                                      v234 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#175}>(v234, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                      __x = 24857;
                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 350);
                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 24857LL);
                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                        __x = 24857;
                                                                                                                                                                                                                                                                                                                                                                                                        v235 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#176}>(v235, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                        __x = 23678;
                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 351);
                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 23678LL);
                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                          __x = 23678;
                                                                                                                                                                                                                                                                                                                                                                                                          v236 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#177}>(v236, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                          __x = 24602;
                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 353);
                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 24602LL);
                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                            __x = 24602;
                                                                                                                                                                                                                                                                                                                                                                                                            v237 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#178}>(v237, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                            __x = 22391;
                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 354);
                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 22391LL);
                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                              __x = 22391;
                                                                                                                                                                                                                                                                                                                                                                                                              v238 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#179}>(v238, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                              __x = 20011;
                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 355);
                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 20011LL);
                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                __x = 20011;
                                                                                                                                                                                                                                                                                                                                                                                                                v239 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#180}>(v239, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                __x = 20731;
                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 357);
                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 20731LL);
                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 20731;
                                                                                                                                                                                                                                                                                                                                                                                                                  v240 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#181}>(v240, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 21780;
                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 359);
                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 21780LL);
                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 21780;
                                                                                                                                                                                                                                                                                                                                                                                                                    v241 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#182}>(v241, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 23141;
                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 361);
                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 23141LL);
                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 23141;
                                                                                                                                                                                                                                                                                                                                                                                                                      v242 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#183}>(v242, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 22864;
                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 362);
                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 22864LL);
                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 22864;
                                                                                                                                                                                                                                                                                                                                                                                                                        v243 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#184}>(v243, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 20676;
                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 363);
                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 20676LL);
                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 20676;
                                                                                                                                                                                                                                                                                                                                                                                                                          v244 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#185}>(v244, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 20626;
                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 364);
                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 20626LL);
                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 20626;
                                                                                                                                                                                                                                                                                                                                                                                                                            v245 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#186}>(v245, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 21248;
                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 365);
                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 21248LL);
                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 21248;
                                                                                                                                                                                                                                                                                                                                                                                                                              v246 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#187}>(v246, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 21700;
                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 366);
                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 21700LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 21700;
                                                                                                                                                                                                                                                                                                                                                                                                                                v247 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#188}>(v247, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 20846;
                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 368);
                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 20846LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 20846;
                                                                                                                                                                                                                                                                                                                                                                                                                                  v248 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#189}>(v248, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 23053;
                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 370);
                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 23053LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 23053;
                                                                                                                                                                                                                                                                                                                                                                                                                                    v249 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#190}>(v249, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 21749;
                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 371);
                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 21749LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 21749;
                                                                                                                                                                                                                                                                                                                                                                                                                                      v250 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#191}>(v250, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 22006;
                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 372);
                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 22006LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 22006;
                                                                                                                                                                                                                                                                                                                                                                                                                                        v251 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#192}>(v251, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 23860;
                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 373);
                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 23860LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 23860;
                                                                                                                                                                                                                                                                                                                                                                                                                                          v252 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#193}>(v252, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 23903;
                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 374);
                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 23903LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 23903;
                                                                                                                                                                                                                                                                                                                                                                                                                                            v253 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#194}>(v253, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 24137;
                                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 375);
                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 24137LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 24137;
                                                                                                                                                                                                                                                                                                                                                                                                                                              v254 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#195}>(v254, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 21266;
                                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 376);
                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 21266LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 21266;
                                                                                                                                                                                                                                                                                                                                                                                                                                                v255 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#196}>(v255, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 23980;
                                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 377);
                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 23980LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 23980;
                                                                                                                                                                                                                                                                                                                                                                                                                                                  v256 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#197}>(v256, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 23489;
                                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 379);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 23489LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 23489;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    v257 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#198}>(v257, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 24522;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 380);
                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 24522LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 24522;
                                                                                                                                                                                                                                                                                                                                                                                                                                                      v258 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#199}>(v258, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 21269;
                                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 381);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 21269LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 21269;
                                                                                                                                                                                                                                                                                                                                                                                                                                                        v259 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#200}>(v259, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 21214;
                                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 383);
                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 21214LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 21214;
                                                                                                                                                                                                                                                                                                                                                                                                                                                          v260 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#201}>(v260, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 22367;
                                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 384);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 22367LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 22367;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            v261 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#202}>(v261, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 22934;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 385);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 22934LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 22934;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              v262 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#203}>(v262, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 23216;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 386);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 23216LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 23216;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                v263 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#204}>(v263, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 21718;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 387);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 21718LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 21718;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v264 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#205}>(v264, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 21294;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 388);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 21294LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 21294;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v265 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#206}>(v265, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 5325;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 390);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 5325LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 5325;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v266 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#207}>(v266, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 5337;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 391);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 5337LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 5337;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v267 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#208}>(v267, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 5352;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 392);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 5352LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 5352;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v268 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#209}>(v268, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 5336;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 393);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 5336LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 5336;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v269 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#210}>(v269, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 23113;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 394);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 23113LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 23113;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              v270 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#211}>(v270, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 24028;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 395);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 24028LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 24028;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v271 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#212}>(v271, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 22704;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 396);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 22704LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 22704;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v272 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#213}>(v272, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 20137;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 397);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 20137LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 20137;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v273 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#214}>(v273, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 24212;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 399);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 24212LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 24212;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v274 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#215}>(v274, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 20076;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 401);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 20076LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 20076;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v275 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#216}>(v275, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 23780;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 402);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 23780LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 23780;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v276 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#217}>(v276, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 22297;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 403);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 22297LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 22297;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v277 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#218}>(v277, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 20093;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 404);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::operator()(&v310, off_25049520, 20093LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 20093;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              v278 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#219}>(v278, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              __x = 20636;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 406);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::operator()(&v310, off_25049520, 20636LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 20636;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v279 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#220}>(v279, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                __x = 22269;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 407);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::operator()(&v310, off_25049520, 22269LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 22269;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v280 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#221}>(v280, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __x = 21207;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 408);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::operator()(&v310, off_25049520, 21207LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 21207;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v281 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#222}>(v281, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __x = 23637;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 410);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::operator()(&v310, off_25049520, 23637LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 23637;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v282 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#223}>(v282, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __x = 20951;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 411);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::operator()(&v310, off_25049520, 20951LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 20951;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v283 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#224}>(v283, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __x = 20331;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 412);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::operator()(&v310, off_25049520, 20331LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 20331;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v284 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#225}>(v284, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __x = 20227;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          __y._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::find(process_packet_func_mapa, &__x)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v306._M_node = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::end(process_packet_func_mapa)._M_node;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if ( std::operator!=(&v306, &__y) )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::create(&v310, &common::milog::MiLogDefault::default_log_obj_, 4u, "./src/handler/activity_handler.cpp", "addPacketFuncToMap", 413);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::operator()(&v310, off_25049520, 20227LL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            common::milog::MiLogStream::~MiLogStream(&v310);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            return -1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __y._M_node = (std::_Rb_tree_iterator<std::pair<unsigned int const,std::function<int(std::shared_ptr<common::minet::Packet>)> > >::_Base_ptr)thisa;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            __x = 20227;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v285 = std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>>::operator[](process_packet_func_mapa, &__x);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            std::function<int ()(std::shared_ptr<common::minet::Packet>)>::operator=<ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#226}>(v285, (ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *)&__y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            return 0;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};

// Line 108: range 00000000137246F2-0000000013724A0E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#1}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GetActivityScheduleReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GetActivityScheduleRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GetActivityScheduleRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:108 64 16 11 rsp_ptr:108";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#1}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GetActivityScheduleReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GetActivityScheduleReq const>(
         (const std::shared_ptr<const proto::GetActivityScheduleReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      108);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GetActivityScheduleReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetActivityScheduleReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GetActivityScheduleRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GetActivityScheduleRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GetActivityScheduleRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GetActivityScheduleRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GetActivityScheduleReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetActivityScheduleReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGetActivityScheduleReq(this, v8, rsp_0);
    proto::GetActivityScheduleRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GetActivityScheduleRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GetActivityScheduleRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GetActivityScheduleRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GetActivityScheduleRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GetActivityScheduleRsp>::~shared_ptr((std::shared_ptr<proto::GetActivityScheduleRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GetActivityScheduleReq const>::~shared_ptr((std::shared_ptr<const proto::GetActivityScheduleReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 109: range 0000000013724A10-0000000013724D2C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#2}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GetActivityInfoReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GetActivityInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GetActivityInfoRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:109 64 16 11 rsp_ptr:109";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#2}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GetActivityInfoReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GetActivityInfoReq const>(
         (const std::shared_ptr<const proto::GetActivityInfoReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      109);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GetActivityInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetActivityInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GetActivityInfoRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GetActivityInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GetActivityInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GetActivityInfoRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GetActivityInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetActivityInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGetActivityInfoReq(this, v8, rsp_0);
    proto::GetActivityInfoRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GetActivityInfoRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GetActivityInfoRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GetActivityInfoRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GetActivityInfoRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GetActivityInfoRsp>::~shared_ptr((std::shared_ptr<proto::GetActivityInfoRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GetActivityInfoReq const>::~shared_ptr((std::shared_ptr<const proto::GetActivityInfoReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 110: range 0000000013724D2E-0000000013724F10
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#3}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  int v5; // r14d
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityPlayOpenAnimNotify,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int result; // eax
  common::milog::MiLogStream v9; // [rsp+10h] [rbp-90h] BYREF
  char v10[112]; // [rsp+30h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 14 notify_ptr:110";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#3}::operator();
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityPlayOpenAnimNotify>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityPlayOpenAnimNotify const>(
         (const std::shared_ptr<const proto::ActivityPlayOpenAnimNotify> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      110);
    common::milog::MiLogStream::operator()(&v9, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v9);
    v5 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v7 = std::__shared_ptr_access<proto::ActivityPlayOpenAnimNotify const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityPlayOpenAnimNotify,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    v5 = ActivityHandler::onActivityPlayOpenAnimNotify(this, v7);
  }
  std::shared_ptr<proto::ActivityPlayOpenAnimNotify const>::~shared_ptr((std::shared_ptr<const proto::ActivityPlayOpenAnimNotify> *const)(v2 + 32));
  result = v5;
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 111: range 0000000013724F12-00000000137250F4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#4}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  int ActivityTerrainNotify; // r14d
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LoadActivityTerrainNotify,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int result; // eax
  common::milog::MiLogStream v9; // [rsp+10h] [rbp-90h] BYREF
  char v10[112]; // [rsp+30h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 14 notify_ptr:111";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#4}::operator();
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LoadActivityTerrainNotify>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LoadActivityTerrainNotify const>(
         (const std::shared_ptr<const proto::LoadActivityTerrainNotify> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      111);
    common::milog::MiLogStream::operator()(&v9, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v9);
    ActivityTerrainNotify = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v7 = std::__shared_ptr_access<proto::LoadActivityTerrainNotify const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LoadActivityTerrainNotify,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    ActivityTerrainNotify = ActivityHandler::onLoadActivityTerrainNotify(this, v7);
  }
  std::shared_ptr<proto::LoadActivityTerrainNotify const>::~shared_ptr((std::shared_ptr<const proto::LoadActivityTerrainNotify> *const)(v2 + 32));
  result = ActivityTerrainNotify;
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 112: range 00000000137250F6-0000000013725412
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#5}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityTakeWatcherRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivityTakeWatcherRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivityTakeWatcherRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:112 64 16 11 rsp_ptr:112";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#5}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityTakeWatcherRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityTakeWatcherRewardReq const>(
         (const std::shared_ptr<const proto::ActivityTakeWatcherRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      112);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivityTakeWatcherRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityTakeWatcherRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivityTakeWatcherRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivityTakeWatcherRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivityTakeWatcherRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivityTakeWatcherRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivityTakeWatcherRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityTakeWatcherRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivityTakeWatcherRewardReq(this, v8, rsp_0);
    proto::ActivityTakeWatcherRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivityTakeWatcherRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivityTakeWatcherRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivityTakeWatcherRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivityTakeWatcherRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivityTakeWatcherRewardRsp>::~shared_ptr((std::shared_ptr<proto::ActivityTakeWatcherRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivityTakeWatcherRewardReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityTakeWatcherRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 113: range 0000000013725414-0000000013725730
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#6}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivitySelectAvatarCardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivitySelectAvatarCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivitySelectAvatarCardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:113 64 16 11 rsp_ptr:113";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#6}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivitySelectAvatarCardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivitySelectAvatarCardReq const>(
         (const std::shared_ptr<const proto::ActivitySelectAvatarCardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      113);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivitySelectAvatarCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivitySelectAvatarCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivitySelectAvatarCardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivitySelectAvatarCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivitySelectAvatarCardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivitySelectAvatarCardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivitySelectAvatarCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivitySelectAvatarCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivitySelectAvatarCardReq(this, v8, rsp_0);
    proto::ActivitySelectAvatarCardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivitySelectAvatarCardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivitySelectAvatarCardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivitySelectAvatarCardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivitySelectAvatarCardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivitySelectAvatarCardRsp>::~shared_ptr((std::shared_ptr<proto::ActivitySelectAvatarCardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivitySelectAvatarCardReq const>::~shared_ptr((std::shared_ptr<const proto::ActivitySelectAvatarCardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 114: range 0000000013725732-0000000013725A4E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#7}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityTakeWatcherRewardBatchReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivityTakeWatcherRewardBatchRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivityTakeWatcherRewardBatchRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:114 64 16 11 rsp_ptr:114";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#7}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityTakeWatcherRewardBatchReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityTakeWatcherRewardBatchReq const>(
         (const std::shared_ptr<const proto::ActivityTakeWatcherRewardBatchReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      114);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivityTakeWatcherRewardBatchReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityTakeWatcherRewardBatchReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivityTakeWatcherRewardBatchRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivityTakeWatcherRewardBatchRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivityTakeWatcherRewardBatchRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivityTakeWatcherRewardBatchRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivityTakeWatcherRewardBatchReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityTakeWatcherRewardBatchReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivityTakeWatcherRewardBatchReq(this, v8, rsp_0);
    proto::ActivityTakeWatcherRewardBatchRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivityTakeWatcherRewardBatchRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivityTakeWatcherRewardBatchRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivityTakeWatcherRewardBatchRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivityTakeWatcherRewardBatchRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivityTakeWatcherRewardBatchRsp>::~shared_ptr((std::shared_ptr<proto::ActivityTakeWatcherRewardBatchRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivityTakeWatcherRewardBatchReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityTakeWatcherRewardBatchReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 116: range 0000000013725A50-0000000013725D6C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#8}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EnterTrialAvatarActivityDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EnterTrialAvatarActivityDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EnterTrialAvatarActivityDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:116 64 16 11 rsp_ptr:116";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#8}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EnterTrialAvatarActivityDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EnterTrialAvatarActivityDungeonReq const>(
         (const std::shared_ptr<const proto::EnterTrialAvatarActivityDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      116);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EnterTrialAvatarActivityDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterTrialAvatarActivityDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EnterTrialAvatarActivityDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EnterTrialAvatarActivityDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EnterTrialAvatarActivityDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EnterTrialAvatarActivityDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EnterTrialAvatarActivityDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterTrialAvatarActivityDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEnterTrialAvatarActivityDungeonReq(this, v8, rsp_0);
    proto::EnterTrialAvatarActivityDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EnterTrialAvatarActivityDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EnterTrialAvatarActivityDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EnterTrialAvatarActivityDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EnterTrialAvatarActivityDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EnterTrialAvatarActivityDungeonRsp>::~shared_ptr((std::shared_ptr<proto::EnterTrialAvatarActivityDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EnterTrialAvatarActivityDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::EnterTrialAvatarActivityDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 117: range 0000000013725D6E-000000001372608A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#9}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ReceivedTrialAvatarActivityRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ReceivedTrialAvatarActivityRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ReceivedTrialAvatarActivityRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:117 64 16 11 rsp_ptr:117";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#9}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ReceivedTrialAvatarActivityRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ReceivedTrialAvatarActivityRewardReq const>(
         (const std::shared_ptr<const proto::ReceivedTrialAvatarActivityRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      117);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ReceivedTrialAvatarActivityRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ReceivedTrialAvatarActivityRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ReceivedTrialAvatarActivityRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ReceivedTrialAvatarActivityRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ReceivedTrialAvatarActivityRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ReceivedTrialAvatarActivityRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ReceivedTrialAvatarActivityRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ReceivedTrialAvatarActivityRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onReceivedTrialAvatarActivityRewardReq(this, v8, rsp_0);
    proto::ReceivedTrialAvatarActivityRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ReceivedTrialAvatarActivityRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ReceivedTrialAvatarActivityRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ReceivedTrialAvatarActivityRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ReceivedTrialAvatarActivityRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ReceivedTrialAvatarActivityRewardRsp>::~shared_ptr((std::shared_ptr<proto::ReceivedTrialAvatarActivityRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ReceivedTrialAvatarActivityRewardReq const>::~shared_ptr((std::shared_ptr<const proto::ReceivedTrialAvatarActivityRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 119: range 000000001372608C-00000000137263A8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#10}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SalesmanDeliverItemReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SalesmanDeliverItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SalesmanDeliverItemRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:119 64 16 11 rsp_ptr:119";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#10}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SalesmanDeliverItemReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SalesmanDeliverItemReq const>(
         (const std::shared_ptr<const proto::SalesmanDeliverItemReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      119);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SalesmanDeliverItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalesmanDeliverItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SalesmanDeliverItemRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SalesmanDeliverItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SalesmanDeliverItemRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SalesmanDeliverItemRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SalesmanDeliverItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalesmanDeliverItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSalesmanDeliverItemReq(this, v8, rsp_0);
    proto::SalesmanDeliverItemRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SalesmanDeliverItemRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SalesmanDeliverItemRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SalesmanDeliverItemRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SalesmanDeliverItemRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SalesmanDeliverItemRsp>::~shared_ptr((std::shared_ptr<proto::SalesmanDeliverItemRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SalesmanDeliverItemReq const>::~shared_ptr((std::shared_ptr<const proto::SalesmanDeliverItemReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 120: range 00000000137263AA-00000000137266C6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#11}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SalesmanTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SalesmanTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SalesmanTakeRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:120 64 16 11 rsp_ptr:120";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#11}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SalesmanTakeRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SalesmanTakeRewardReq const>(
         (const std::shared_ptr<const proto::SalesmanTakeRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      120);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SalesmanTakeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalesmanTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SalesmanTakeRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SalesmanTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SalesmanTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SalesmanTakeRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SalesmanTakeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalesmanTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSalesmanTakeRewardReq(this, v8, rsp_0);
    proto::SalesmanTakeRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SalesmanTakeRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SalesmanTakeRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SalesmanTakeRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SalesmanTakeRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SalesmanTakeRewardRsp>::~shared_ptr((std::shared_ptr<proto::SalesmanTakeRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SalesmanTakeRewardReq const>::~shared_ptr((std::shared_ptr<const proto::SalesmanTakeRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 121: range 00000000137266C8-00000000137269E4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#12}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SalesmanTakeSpecialRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SalesmanTakeSpecialRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SalesmanTakeSpecialRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:121 64 16 11 rsp_ptr:121";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#12}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SalesmanTakeSpecialRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SalesmanTakeSpecialRewardReq const>(
         (const std::shared_ptr<const proto::SalesmanTakeSpecialRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      121);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SalesmanTakeSpecialRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalesmanTakeSpecialRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SalesmanTakeSpecialRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SalesmanTakeSpecialRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SalesmanTakeSpecialRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SalesmanTakeSpecialRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SalesmanTakeSpecialRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalesmanTakeSpecialRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSalesmanTakeSpecialRewardReq(this, v8, rsp_0);
    proto::SalesmanTakeSpecialRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SalesmanTakeSpecialRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SalesmanTakeSpecialRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SalesmanTakeSpecialRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SalesmanTakeSpecialRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SalesmanTakeSpecialRewardRsp>::~shared_ptr((std::shared_ptr<proto::SalesmanTakeSpecialRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SalesmanTakeSpecialRewardReq const>::~shared_ptr((std::shared_ptr<const proto::SalesmanTakeSpecialRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 122: range 00000000137269E6-0000000013726D02
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#13}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GetAuthSalesmanInfoReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GetAuthSalesmanInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GetAuthSalesmanInfoRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:122 64 16 11 rsp_ptr:122";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#13}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GetAuthSalesmanInfoReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GetAuthSalesmanInfoReq const>(
         (const std::shared_ptr<const proto::GetAuthSalesmanInfoReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      122);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GetAuthSalesmanInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetAuthSalesmanInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GetAuthSalesmanInfoRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GetAuthSalesmanInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GetAuthSalesmanInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GetAuthSalesmanInfoRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GetAuthSalesmanInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetAuthSalesmanInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGetAuthSalesmanInfoReq(this, v8, rsp_0);
    proto::GetAuthSalesmanInfoRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GetAuthSalesmanInfoRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GetAuthSalesmanInfoRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GetAuthSalesmanInfoRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GetAuthSalesmanInfoRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GetAuthSalesmanInfoRsp>::~shared_ptr((std::shared_ptr<proto::GetAuthSalesmanInfoRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GetAuthSalesmanInfoReq const>::~shared_ptr((std::shared_ptr<const proto::GetAuthSalesmanInfoReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 125: range 0000000013726D04-0000000013727020
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#14}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TakeDeliveryDailyRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TakeDeliveryDailyRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TakeDeliveryDailyRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:125 64 16 11 rsp_ptr:125";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#14}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TakeDeliveryDailyRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TakeDeliveryDailyRewardReq const>(
         (const std::shared_ptr<const proto::TakeDeliveryDailyRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      125);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TakeDeliveryDailyRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TakeDeliveryDailyRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TakeDeliveryDailyRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TakeDeliveryDailyRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TakeDeliveryDailyRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TakeDeliveryDailyRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TakeDeliveryDailyRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TakeDeliveryDailyRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTakeDeliveryDailyRewardReq(this, v8, rsp_0);
    proto::TakeDeliveryDailyRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TakeDeliveryDailyRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TakeDeliveryDailyRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TakeDeliveryDailyRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TakeDeliveryDailyRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TakeDeliveryDailyRewardRsp>::~shared_ptr((std::shared_ptr<proto::TakeDeliveryDailyRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TakeDeliveryDailyRewardReq const>::~shared_ptr((std::shared_ptr<const proto::TakeDeliveryDailyRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 127: range 0000000013727022-000000001372733E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#15}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SelectAsterMidDifficultyReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SelectAsterMidDifficultyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SelectAsterMidDifficultyRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:127 64 16 11 rsp_ptr:127";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#15}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SelectAsterMidDifficultyReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SelectAsterMidDifficultyReq const>(
         (const std::shared_ptr<const proto::SelectAsterMidDifficultyReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      127);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SelectAsterMidDifficultyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SelectAsterMidDifficultyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SelectAsterMidDifficultyRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SelectAsterMidDifficultyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SelectAsterMidDifficultyRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SelectAsterMidDifficultyRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SelectAsterMidDifficultyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SelectAsterMidDifficultyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSelectAsterMidDifficultyReq(this, v8, rsp_0);
    proto::SelectAsterMidDifficultyRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SelectAsterMidDifficultyRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SelectAsterMidDifficultyRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SelectAsterMidDifficultyRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SelectAsterMidDifficultyRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SelectAsterMidDifficultyRsp>::~shared_ptr((std::shared_ptr<proto::SelectAsterMidDifficultyRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SelectAsterMidDifficultyReq const>::~shared_ptr((std::shared_ptr<const proto::SelectAsterMidDifficultyReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 128: range 0000000013727340-000000001372765C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#16}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TakeAsterSpecialRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TakeAsterSpecialRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TakeAsterSpecialRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:128 64 16 11 rsp_ptr:128";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#16}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TakeAsterSpecialRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TakeAsterSpecialRewardReq const>(
         (const std::shared_ptr<const proto::TakeAsterSpecialRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      128);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TakeAsterSpecialRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TakeAsterSpecialRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TakeAsterSpecialRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TakeAsterSpecialRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TakeAsterSpecialRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TakeAsterSpecialRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TakeAsterSpecialRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TakeAsterSpecialRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTakeAsterSpecialRewardReq(this, v8, rsp_0);
    proto::TakeAsterSpecialRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TakeAsterSpecialRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TakeAsterSpecialRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TakeAsterSpecialRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TakeAsterSpecialRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TakeAsterSpecialRewardRsp>::~shared_ptr((std::shared_ptr<proto::TakeAsterSpecialRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TakeAsterSpecialRewardReq const>::~shared_ptr((std::shared_ptr<const proto::TakeAsterSpecialRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 130: range 000000001372765E-000000001372797A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#17}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FlightActivityRestartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FlightActivityRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FlightActivityRestartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:130 64 16 11 rsp_ptr:130";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#17}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FlightActivityRestartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FlightActivityRestartReq const>(
         (const std::shared_ptr<const proto::FlightActivityRestartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      130);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FlightActivityRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FlightActivityRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FlightActivityRestartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FlightActivityRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FlightActivityRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FlightActivityRestartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FlightActivityRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FlightActivityRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFlightActivityRestartReq(this, v8, rsp_0);
    proto::FlightActivityRestartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FlightActivityRestartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FlightActivityRestartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FlightActivityRestartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FlightActivityRestartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FlightActivityRestartRsp>::~shared_ptr((std::shared_ptr<proto::FlightActivityRestartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FlightActivityRestartReq const>::~shared_ptr((std::shared_ptr<const proto::FlightActivityRestartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 132: range 000000001372797C-0000000013727C98
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#18}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::StartEffigyChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::StartEffigyChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::StartEffigyChallengeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:132 64 16 11 rsp_ptr:132";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#18}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::StartEffigyChallengeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::StartEffigyChallengeReq const>(
         (const std::shared_ptr<const proto::StartEffigyChallengeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      132);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::StartEffigyChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartEffigyChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::StartEffigyChallengeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::StartEffigyChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::StartEffigyChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::StartEffigyChallengeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::StartEffigyChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartEffigyChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onStartEffigyChallengeReq(this, v8, rsp_0);
    proto::StartEffigyChallengeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::StartEffigyChallengeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::StartEffigyChallengeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::StartEffigyChallengeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::StartEffigyChallengeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::StartEffigyChallengeRsp>::~shared_ptr((std::shared_ptr<proto::StartEffigyChallengeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::StartEffigyChallengeReq const>::~shared_ptr((std::shared_ptr<const proto::StartEffigyChallengeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 133: range 0000000013727C9A-0000000013727FB6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#19}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TakeEffigyFirstPassRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TakeEffigyFirstPassRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TakeEffigyFirstPassRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:133 64 16 11 rsp_ptr:133";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#19}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TakeEffigyFirstPassRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TakeEffigyFirstPassRewardReq const>(
         (const std::shared_ptr<const proto::TakeEffigyFirstPassRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      133);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TakeEffigyFirstPassRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TakeEffigyFirstPassRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TakeEffigyFirstPassRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TakeEffigyFirstPassRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TakeEffigyFirstPassRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TakeEffigyFirstPassRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TakeEffigyFirstPassRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TakeEffigyFirstPassRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTakeEffigyFirstPassRewardReq(this, v8, rsp_0);
    proto::TakeEffigyFirstPassRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TakeEffigyFirstPassRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TakeEffigyFirstPassRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TakeEffigyFirstPassRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TakeEffigyFirstPassRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TakeEffigyFirstPassRewardRsp>::~shared_ptr((std::shared_ptr<proto::TakeEffigyFirstPassRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TakeEffigyFirstPassRewardReq const>::~shared_ptr((std::shared_ptr<const proto::TakeEffigyFirstPassRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 134: range 0000000013727FB8-00000000137282D4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#20}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TakeEffigyRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TakeEffigyRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TakeEffigyRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:134 64 16 11 rsp_ptr:134";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#20}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TakeEffigyRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TakeEffigyRewardReq const>(
         (const std::shared_ptr<const proto::TakeEffigyRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      134);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TakeEffigyRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TakeEffigyRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TakeEffigyRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TakeEffigyRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TakeEffigyRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TakeEffigyRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TakeEffigyRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TakeEffigyRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTakeEffigyRewardReq(this, v8, rsp_0);
    proto::TakeEffigyRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TakeEffigyRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TakeEffigyRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TakeEffigyRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TakeEffigyRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TakeEffigyRewardRsp>::~shared_ptr((std::shared_ptr<proto::TakeEffigyRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TakeEffigyRewardReq const>::~shared_ptr((std::shared_ptr<const proto::TakeEffigyRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 135: range 00000000137282D6-00000000137285F2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#21}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SelectEffigyChallengeConditionReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SelectEffigyChallengeConditionRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SelectEffigyChallengeConditionRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:135 64 16 11 rsp_ptr:135";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#21}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SelectEffigyChallengeConditionReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SelectEffigyChallengeConditionReq const>(
         (const std::shared_ptr<const proto::SelectEffigyChallengeConditionReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      135);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SelectEffigyChallengeConditionReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SelectEffigyChallengeConditionReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SelectEffigyChallengeConditionRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SelectEffigyChallengeConditionRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SelectEffigyChallengeConditionRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SelectEffigyChallengeConditionRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SelectEffigyChallengeConditionReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SelectEffigyChallengeConditionReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSelectEffigyChallengeConditionReq(this, v8, rsp_0);
    proto::SelectEffigyChallengeConditionRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SelectEffigyChallengeConditionRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SelectEffigyChallengeConditionRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SelectEffigyChallengeConditionRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SelectEffigyChallengeConditionRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SelectEffigyChallengeConditionRsp>::~shared_ptr((std::shared_ptr<proto::SelectEffigyChallengeConditionRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SelectEffigyChallengeConditionReq const>::~shared_ptr((std::shared_ptr<const proto::SelectEffigyChallengeConditionReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 136: range 00000000137285F4-0000000013728910
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#22}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RestartEffigyChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RestartEffigyChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RestartEffigyChallengeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:136 64 16 11 rsp_ptr:136";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#22}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RestartEffigyChallengeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RestartEffigyChallengeReq const>(
         (const std::shared_ptr<const proto::RestartEffigyChallengeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      136);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RestartEffigyChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RestartEffigyChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RestartEffigyChallengeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RestartEffigyChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RestartEffigyChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RestartEffigyChallengeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RestartEffigyChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RestartEffigyChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRestartEffigyChallengeReq(this, v8, rsp_0);
    proto::RestartEffigyChallengeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RestartEffigyChallengeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RestartEffigyChallengeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RestartEffigyChallengeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RestartEffigyChallengeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RestartEffigyChallengeRsp>::~shared_ptr((std::shared_ptr<proto::RestartEffigyChallengeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RestartEffigyChallengeReq const>::~shared_ptr((std::shared_ptr<const proto::RestartEffigyChallengeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 139: range 0000000013728912-0000000013728C2E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#23}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BlessingScanReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BlessingScanRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BlessingScanRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:139 64 16 11 rsp_ptr:139";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#23}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BlessingScanReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BlessingScanReq const>(
         (const std::shared_ptr<const proto::BlessingScanReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      139);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BlessingScanReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingScanReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BlessingScanRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BlessingScanRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BlessingScanRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BlessingScanRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BlessingScanReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingScanReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBlessingScanReq(this, v8, rsp_0);
    proto::BlessingScanRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BlessingScanRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BlessingScanRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BlessingScanRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BlessingScanRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BlessingScanRsp>::~shared_ptr((std::shared_ptr<proto::BlessingScanRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BlessingScanReq const>::~shared_ptr((std::shared_ptr<const proto::BlessingScanReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 140: range 0000000013728C30-0000000013728F4C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#24}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BlessingRedeemRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BlessingRedeemRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BlessingRedeemRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:140 64 16 11 rsp_ptr:140";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#24}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BlessingRedeemRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BlessingRedeemRewardReq const>(
         (const std::shared_ptr<const proto::BlessingRedeemRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      140);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BlessingRedeemRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingRedeemRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BlessingRedeemRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BlessingRedeemRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BlessingRedeemRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BlessingRedeemRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BlessingRedeemRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingRedeemRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBlessingRedeemRewardReq(this, v8, rsp_0);
    proto::BlessingRedeemRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BlessingRedeemRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BlessingRedeemRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BlessingRedeemRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BlessingRedeemRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BlessingRedeemRewardRsp>::~shared_ptr((std::shared_ptr<proto::BlessingRedeemRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BlessingRedeemRewardReq const>::~shared_ptr((std::shared_ptr<const proto::BlessingRedeemRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 145: range 0000000013728F4E-000000001372926A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#25}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BlessingAcceptGivePicReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BlessingAcceptGivePicRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BlessingAcceptGivePicRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:145 64 16 11 rsp_ptr:145";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#25}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BlessingAcceptGivePicReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BlessingAcceptGivePicReq const>(
         (const std::shared_ptr<const proto::BlessingAcceptGivePicReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      145);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BlessingAcceptGivePicReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingAcceptGivePicReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BlessingAcceptGivePicRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BlessingAcceptGivePicRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BlessingAcceptGivePicRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BlessingAcceptGivePicRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BlessingAcceptGivePicReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingAcceptGivePicReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBlessingAcceptGivePicReq(this, v8, rsp_0);
    proto::BlessingAcceptGivePicRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BlessingAcceptGivePicRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BlessingAcceptGivePicRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BlessingAcceptGivePicRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BlessingAcceptGivePicRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BlessingAcceptGivePicRsp>::~shared_ptr((std::shared_ptr<proto::BlessingAcceptGivePicRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BlessingAcceptGivePicReq const>::~shared_ptr((std::shared_ptr<const proto::BlessingAcceptGivePicReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 147: range 000000001372926C-0000000013729588
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#26}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SeaLampFlyLampReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SeaLampFlyLampRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SeaLampFlyLampRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:147 64 16 11 rsp_ptr:147";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#26}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SeaLampFlyLampReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SeaLampFlyLampReq const>(
         (const std::shared_ptr<const proto::SeaLampFlyLampReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      147);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SeaLampFlyLampReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SeaLampFlyLampReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SeaLampFlyLampRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SeaLampFlyLampRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SeaLampFlyLampRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SeaLampFlyLampRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SeaLampFlyLampReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SeaLampFlyLampReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSeaLampFlyLampReq(this, v8, rsp_0);
    proto::SeaLampFlyLampRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SeaLampFlyLampRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SeaLampFlyLampRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SeaLampFlyLampRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SeaLampFlyLampRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SeaLampFlyLampRsp>::~shared_ptr((std::shared_ptr<proto::SeaLampFlyLampRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SeaLampFlyLampReq const>::~shared_ptr((std::shared_ptr<const proto::SeaLampFlyLampReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 148: range 000000001372958A-00000000137298A6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#27}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BlessingAcceptAllGivePicReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BlessingAcceptAllGivePicRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BlessingAcceptAllGivePicRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:148 64 16 11 rsp_ptr:148";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#27}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BlessingAcceptAllGivePicReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BlessingAcceptAllGivePicReq const>(
         (const std::shared_ptr<const proto::BlessingAcceptAllGivePicReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      148);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BlessingAcceptAllGivePicReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingAcceptAllGivePicReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BlessingAcceptAllGivePicRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BlessingAcceptAllGivePicRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BlessingAcceptAllGivePicRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BlessingAcceptAllGivePicRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BlessingAcceptAllGivePicReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingAcceptAllGivePicReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBlessingAcceptAllGivePicReq(this, v8, rsp_0);
    proto::BlessingAcceptAllGivePicRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BlessingAcceptAllGivePicRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BlessingAcceptAllGivePicRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BlessingAcceptAllGivePicRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BlessingAcceptAllGivePicRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BlessingAcceptAllGivePicRsp>::~shared_ptr((std::shared_ptr<proto::BlessingAcceptAllGivePicRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BlessingAcceptAllGivePicReq const>::~shared_ptr((std::shared_ptr<const proto::BlessingAcceptAllGivePicReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 150: range 00000000137298A8-0000000013729BC4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#28}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ExpeditionStartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ExpeditionStartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ExpeditionStartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:150 64 16 11 rsp_ptr:150";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#28}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ExpeditionStartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ExpeditionStartReq const>(
         (const std::shared_ptr<const proto::ExpeditionStartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      150);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ExpeditionStartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ExpeditionStartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ExpeditionStartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ExpeditionStartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ExpeditionStartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ExpeditionStartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ExpeditionStartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ExpeditionStartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onExpeditionStartReq(this, v8, rsp_0);
    proto::ExpeditionStartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ExpeditionStartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ExpeditionStartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ExpeditionStartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ExpeditionStartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ExpeditionStartRsp>::~shared_ptr((std::shared_ptr<proto::ExpeditionStartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ExpeditionStartReq const>::~shared_ptr((std::shared_ptr<const proto::ExpeditionStartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 151: range 0000000013729BC6-0000000013729EE2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#29}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ExpeditionRecallReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ExpeditionRecallRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ExpeditionRecallRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:151 64 16 11 rsp_ptr:151";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#29}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ExpeditionRecallReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ExpeditionRecallReq const>(
         (const std::shared_ptr<const proto::ExpeditionRecallReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      151);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ExpeditionRecallReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ExpeditionRecallReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ExpeditionRecallRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ExpeditionRecallRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ExpeditionRecallRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ExpeditionRecallRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ExpeditionRecallReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ExpeditionRecallReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onExpeditionRecallReq(this, v8, rsp_0);
    proto::ExpeditionRecallRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ExpeditionRecallRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ExpeditionRecallRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ExpeditionRecallRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ExpeditionRecallRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ExpeditionRecallRsp>::~shared_ptr((std::shared_ptr<proto::ExpeditionRecallRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ExpeditionRecallReq const>::~shared_ptr((std::shared_ptr<const proto::ExpeditionRecallReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 152: range 0000000013729EE4-000000001372A200
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#30}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ExpeditionTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ExpeditionTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ExpeditionTakeRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:152 64 16 11 rsp_ptr:152";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#30}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ExpeditionTakeRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ExpeditionTakeRewardReq const>(
         (const std::shared_ptr<const proto::ExpeditionTakeRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      152);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ExpeditionTakeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ExpeditionTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ExpeditionTakeRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ExpeditionTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ExpeditionTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ExpeditionTakeRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ExpeditionTakeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ExpeditionTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onExpeditionTakeRewardReq(this, v8, rsp_0);
    proto::ExpeditionTakeRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ExpeditionTakeRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ExpeditionTakeRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ExpeditionTakeRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ExpeditionTakeRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ExpeditionTakeRewardRsp>::~shared_ptr((std::shared_ptr<proto::ExpeditionTakeRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ExpeditionTakeRewardReq const>::~shared_ptr((std::shared_ptr<const proto::ExpeditionTakeRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 153: range 000000001372A202-000000001372A51E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#31}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GetExpeditionAssistInfoListReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GetExpeditionAssistInfoListRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GetExpeditionAssistInfoListRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:153 64 16 11 rsp_ptr:153";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#31}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GetExpeditionAssistInfoListReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GetExpeditionAssistInfoListReq const>(
         (const std::shared_ptr<const proto::GetExpeditionAssistInfoListReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      153);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GetExpeditionAssistInfoListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetExpeditionAssistInfoListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GetExpeditionAssistInfoListRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GetExpeditionAssistInfoListRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GetExpeditionAssistInfoListRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GetExpeditionAssistInfoListRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GetExpeditionAssistInfoListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetExpeditionAssistInfoListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGetExpeditionAssistInfoListReq(this, v8, rsp_0);
    proto::GetExpeditionAssistInfoListRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GetExpeditionAssistInfoListRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GetExpeditionAssistInfoListRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GetExpeditionAssistInfoListRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GetExpeditionAssistInfoListRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GetExpeditionAssistInfoListRsp>::~shared_ptr((std::shared_ptr<proto::GetExpeditionAssistInfoListRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GetExpeditionAssistInfoListReq const>::~shared_ptr((std::shared_ptr<const proto::GetExpeditionAssistInfoListReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 154: range 000000001372A520-000000001372A83C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#32}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SetCurExpeditionChallengeIdReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SetCurExpeditionChallengeIdRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SetCurExpeditionChallengeIdRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:154 64 16 11 rsp_ptr:154";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#32}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SetCurExpeditionChallengeIdReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SetCurExpeditionChallengeIdReq const>(
         (const std::shared_ptr<const proto::SetCurExpeditionChallengeIdReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      154);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SetCurExpeditionChallengeIdReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SetCurExpeditionChallengeIdReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SetCurExpeditionChallengeIdRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SetCurExpeditionChallengeIdRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SetCurExpeditionChallengeIdRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SetCurExpeditionChallengeIdRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SetCurExpeditionChallengeIdReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SetCurExpeditionChallengeIdReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSetCurExpeditionChallengeIdReq(this, v8, rsp_0);
    proto::SetCurExpeditionChallengeIdRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SetCurExpeditionChallengeIdRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SetCurExpeditionChallengeIdRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SetCurExpeditionChallengeIdRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SetCurExpeditionChallengeIdRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SetCurExpeditionChallengeIdRsp>::~shared_ptr((std::shared_ptr<proto::SetCurExpeditionChallengeIdRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SetCurExpeditionChallengeIdReq const>::~shared_ptr((std::shared_ptr<const proto::SetCurExpeditionChallengeIdReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 156: range 000000001372A83E-000000001372AB5A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#33}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::StartArenaChallengeLevelReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::StartArenaChallengeLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::StartArenaChallengeLevelRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:156 64 16 11 rsp_ptr:156";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#33}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::StartArenaChallengeLevelReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::StartArenaChallengeLevelReq const>(
         (const std::shared_ptr<const proto::StartArenaChallengeLevelReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      156);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::StartArenaChallengeLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartArenaChallengeLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::StartArenaChallengeLevelRsp>();
    rsp_0 = std::__shared_ptr_access<proto::StartArenaChallengeLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::StartArenaChallengeLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::StartArenaChallengeLevelRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::StartArenaChallengeLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartArenaChallengeLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onStartArenaChallengeLevelReq(this, v8, rsp_0);
    proto::StartArenaChallengeLevelRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::StartArenaChallengeLevelRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::StartArenaChallengeLevelRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::StartArenaChallengeLevelRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::StartArenaChallengeLevelRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::StartArenaChallengeLevelRsp>::~shared_ptr((std::shared_ptr<proto::StartArenaChallengeLevelRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::StartArenaChallengeLevelReq const>::~shared_ptr((std::shared_ptr<const proto::StartArenaChallengeLevelReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 158: range 000000001372AB5C-000000001372AE78
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#34}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FleurFairMusicGameSettleReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FleurFairMusicGameSettleRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FleurFairMusicGameSettleRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:158 64 16 11 rsp_ptr:158";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#34}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FleurFairMusicGameSettleReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FleurFairMusicGameSettleReq const>(
         (const std::shared_ptr<const proto::FleurFairMusicGameSettleReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      158);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FleurFairMusicGameSettleReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FleurFairMusicGameSettleReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FleurFairMusicGameSettleRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FleurFairMusicGameSettleRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FleurFairMusicGameSettleRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FleurFairMusicGameSettleRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FleurFairMusicGameSettleReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FleurFairMusicGameSettleReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFleurFairMusicGameSettleReq(this, v8, rsp_0);
    proto::FleurFairMusicGameSettleRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FleurFairMusicGameSettleRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FleurFairMusicGameSettleRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FleurFairMusicGameSettleRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FleurFairMusicGameSettleRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FleurFairMusicGameSettleRsp>::~shared_ptr((std::shared_ptr<proto::FleurFairMusicGameSettleRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FleurFairMusicGameSettleReq const>::~shared_ptr((std::shared_ptr<const proto::FleurFairMusicGameSettleReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 159: range 000000001372AE7A-000000001372B196
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#35}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FleurFairMusicGameStartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FleurFairMusicGameStartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FleurFairMusicGameStartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:159 64 16 11 rsp_ptr:159";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#35}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FleurFairMusicGameStartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FleurFairMusicGameStartReq const>(
         (const std::shared_ptr<const proto::FleurFairMusicGameStartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      159);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FleurFairMusicGameStartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FleurFairMusicGameStartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FleurFairMusicGameStartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FleurFairMusicGameStartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FleurFairMusicGameStartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FleurFairMusicGameStartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FleurFairMusicGameStartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FleurFairMusicGameStartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFleurFairMusicGameStartReq(this, v8, rsp_0);
    proto::FleurFairMusicGameStartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FleurFairMusicGameStartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FleurFairMusicGameStartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FleurFairMusicGameStartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FleurFairMusicGameStartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FleurFairMusicGameStartRsp>::~shared_ptr((std::shared_ptr<proto::FleurFairMusicGameStartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FleurFairMusicGameStartReq const>::~shared_ptr((std::shared_ptr<const proto::FleurFairMusicGameStartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 160: range 000000001372B198-000000001372B4B4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#36}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FleurFairReplayMiniGameReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FleurFairReplayMiniGameRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FleurFairReplayMiniGameRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:160 64 16 11 rsp_ptr:160";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#36}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FleurFairReplayMiniGameReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FleurFairReplayMiniGameReq const>(
         (const std::shared_ptr<const proto::FleurFairReplayMiniGameReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      160);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FleurFairReplayMiniGameReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FleurFairReplayMiniGameReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FleurFairReplayMiniGameRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FleurFairReplayMiniGameRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FleurFairReplayMiniGameRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FleurFairReplayMiniGameRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FleurFairReplayMiniGameReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FleurFairReplayMiniGameReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFleurFairReplayMiniGameReq(this, v8, rsp_0);
    proto::FleurFairReplayMiniGameRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FleurFairReplayMiniGameRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FleurFairReplayMiniGameRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FleurFairReplayMiniGameRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FleurFairReplayMiniGameRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FleurFairReplayMiniGameRsp>::~shared_ptr((std::shared_ptr<proto::FleurFairReplayMiniGameRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FleurFairReplayMiniGameReq const>::~shared_ptr((std::shared_ptr<const proto::FleurFairReplayMiniGameReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 162: range 000000001372B4B6-000000001372B7D2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#37}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityTakeScoreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivityTakeScoreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivityTakeScoreRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:162 64 16 11 rsp_ptr:162";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#37}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityTakeScoreRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityTakeScoreRewardReq const>(
         (const std::shared_ptr<const proto::ActivityTakeScoreRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      162);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivityTakeScoreRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityTakeScoreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivityTakeScoreRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivityTakeScoreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivityTakeScoreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivityTakeScoreRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivityTakeScoreRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityTakeScoreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivityTakeScoreRewardReq(this, v8, rsp_0);
    proto::ActivityTakeScoreRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivityTakeScoreRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivityTakeScoreRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivityTakeScoreRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivityTakeScoreRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivityTakeScoreRewardRsp>::~shared_ptr((std::shared_ptr<proto::ActivityTakeScoreRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivityTakeScoreRewardReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityTakeScoreRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 163: range 000000001372B7D4-000000001372BAF0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#38}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityTakeAllScoreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivityTakeAllScoreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivityTakeAllScoreRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:163 64 16 11 rsp_ptr:163";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#38}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityTakeAllScoreRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityTakeAllScoreRewardReq const>(
         (const std::shared_ptr<const proto::ActivityTakeAllScoreRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      163);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivityTakeAllScoreRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityTakeAllScoreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivityTakeAllScoreRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivityTakeAllScoreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivityTakeAllScoreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivityTakeAllScoreRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivityTakeAllScoreRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityTakeAllScoreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivityTakeAllScoreRewardReq(this, v8, rsp_0);
    proto::ActivityTakeAllScoreRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivityTakeAllScoreRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivityTakeAllScoreRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivityTakeAllScoreRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivityTakeAllScoreRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivityTakeAllScoreRewardRsp>::~shared_ptr((std::shared_ptr<proto::ActivityTakeAllScoreRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivityTakeAllScoreRewardReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityTakeAllScoreRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 165: range 000000001372BAF2-000000001372BE0E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#39}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::HideAndSeekSelectSkillReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::HideAndSeekSelectSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::HideAndSeekSelectSkillRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:165 64 16 11 rsp_ptr:165";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#39}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::HideAndSeekSelectSkillReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::HideAndSeekSelectSkillReq const>(
         (const std::shared_ptr<const proto::HideAndSeekSelectSkillReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      165);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::HideAndSeekSelectSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::HideAndSeekSelectSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::HideAndSeekSelectSkillRsp>();
    rsp_0 = std::__shared_ptr_access<proto::HideAndSeekSelectSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::HideAndSeekSelectSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::HideAndSeekSelectSkillRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::HideAndSeekSelectSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::HideAndSeekSelectSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onHideAndSeekSelectSkillReq(this, v8, rsp_0);
    proto::HideAndSeekSelectSkillRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::HideAndSeekSelectSkillRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::HideAndSeekSelectSkillRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::HideAndSeekSelectSkillRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::HideAndSeekSelectSkillRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::HideAndSeekSelectSkillRsp>::~shared_ptr((std::shared_ptr<proto::HideAndSeekSelectSkillRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::HideAndSeekSelectSkillReq const>::~shared_ptr((std::shared_ptr<const proto::HideAndSeekSelectSkillReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 166: range 000000001372BE10-000000001372C12C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#40}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::HideAndSeekSelectAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::HideAndSeekSelectAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::HideAndSeekSelectAvatarRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:166 64 16 11 rsp_ptr:166";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#40}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::HideAndSeekSelectAvatarReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::HideAndSeekSelectAvatarReq const>(
         (const std::shared_ptr<const proto::HideAndSeekSelectAvatarReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      166);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::HideAndSeekSelectAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::HideAndSeekSelectAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::HideAndSeekSelectAvatarRsp>();
    rsp_0 = std::__shared_ptr_access<proto::HideAndSeekSelectAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::HideAndSeekSelectAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::HideAndSeekSelectAvatarRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::HideAndSeekSelectAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::HideAndSeekSelectAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onHideAndSeekSelectAvatarReq(this, v8, rsp_0);
    proto::HideAndSeekSelectAvatarRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::HideAndSeekSelectAvatarRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::HideAndSeekSelectAvatarRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::HideAndSeekSelectAvatarRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::HideAndSeekSelectAvatarRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::HideAndSeekSelectAvatarRsp>::~shared_ptr((std::shared_ptr<proto::HideAndSeekSelectAvatarRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::HideAndSeekSelectAvatarReq const>::~shared_ptr((std::shared_ptr<const proto::HideAndSeekSelectAvatarReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 167: range 000000001372C12E-000000001372C44A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#41}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::HideAndSeekSetReadyReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::HideAndSeekSetReadyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::HideAndSeekSetReadyRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:167 64 16 11 rsp_ptr:167";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#41}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::HideAndSeekSetReadyReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::HideAndSeekSetReadyReq const>(
         (const std::shared_ptr<const proto::HideAndSeekSetReadyReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      167);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::HideAndSeekSetReadyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::HideAndSeekSetReadyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::HideAndSeekSetReadyRsp>();
    rsp_0 = std::__shared_ptr_access<proto::HideAndSeekSetReadyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::HideAndSeekSetReadyRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::HideAndSeekSetReadyRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::HideAndSeekSetReadyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::HideAndSeekSetReadyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onHideAndSeekSetReadyReq(this, v8, rsp_0);
    proto::HideAndSeekSetReadyRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::HideAndSeekSetReadyRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::HideAndSeekSetReadyRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::HideAndSeekSetReadyRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::HideAndSeekSetReadyRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::HideAndSeekSetReadyRsp>::~shared_ptr((std::shared_ptr<proto::HideAndSeekSetReadyRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::HideAndSeekSetReadyReq const>::~shared_ptr((std::shared_ptr<const proto::HideAndSeekSetReadyReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 168: range 000000001372C44C-000000001372C768
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#42}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::HideAndSeekChooseMapReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::HideAndSeekChooseMapRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::HideAndSeekChooseMapRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:168 64 16 11 rsp_ptr:168";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#42}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::HideAndSeekChooseMapReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::HideAndSeekChooseMapReq const>(
         (const std::shared_ptr<const proto::HideAndSeekChooseMapReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      168);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::HideAndSeekChooseMapReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::HideAndSeekChooseMapReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::HideAndSeekChooseMapRsp>();
    rsp_0 = std::__shared_ptr_access<proto::HideAndSeekChooseMapRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::HideAndSeekChooseMapRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::HideAndSeekChooseMapRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::HideAndSeekChooseMapReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::HideAndSeekChooseMapReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onHideAndSeekChooseMapReq(this, v8, rsp_0);
    proto::HideAndSeekChooseMapRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::HideAndSeekChooseMapRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::HideAndSeekChooseMapRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::HideAndSeekChooseMapRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::HideAndSeekChooseMapRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::HideAndSeekChooseMapRsp>::~shared_ptr((std::shared_ptr<proto::HideAndSeekChooseMapRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::HideAndSeekChooseMapReq const>::~shared_ptr((std::shared_ptr<const proto::HideAndSeekChooseMapReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 170: range 000000001372C76A-000000001372CA86
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#43}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MistTrialSelectAvatarAndEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MistTrialSelectAvatarAndEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MistTrialSelectAvatarAndEnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:170 64 16 11 rsp_ptr:170";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#43}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MistTrialSelectAvatarAndEnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MistTrialSelectAvatarAndEnterDungeonReq const>(
         (const std::shared_ptr<const proto::MistTrialSelectAvatarAndEnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      170);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MistTrialSelectAvatarAndEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MistTrialSelectAvatarAndEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MistTrialSelectAvatarAndEnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MistTrialSelectAvatarAndEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MistTrialSelectAvatarAndEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MistTrialSelectAvatarAndEnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MistTrialSelectAvatarAndEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MistTrialSelectAvatarAndEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMistTrialSelectAvatarAndEnterDungeonReq(this, v8, rsp_0);
    proto::MistTrialSelectAvatarAndEnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MistTrialSelectAvatarAndEnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MistTrialSelectAvatarAndEnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MistTrialSelectAvatarAndEnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MistTrialSelectAvatarAndEnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MistTrialSelectAvatarAndEnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::MistTrialSelectAvatarAndEnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MistTrialSelectAvatarAndEnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::MistTrialSelectAvatarAndEnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 171: range 000000001372CA88-000000001372CDA4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#44}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MistTrialGetChallengeMissionReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MistTrialGetChallengeMissionRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MistTrialGetChallengeMissionRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:171 64 16 11 rsp_ptr:171";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#44}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MistTrialGetChallengeMissionReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MistTrialGetChallengeMissionReq const>(
         (const std::shared_ptr<const proto::MistTrialGetChallengeMissionReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      171);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MistTrialGetChallengeMissionReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MistTrialGetChallengeMissionReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MistTrialGetChallengeMissionRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MistTrialGetChallengeMissionRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MistTrialGetChallengeMissionRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MistTrialGetChallengeMissionRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MistTrialGetChallengeMissionReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MistTrialGetChallengeMissionReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMistTrialGetChallengeMissionReq(this, v8, rsp_0);
    proto::MistTrialGetChallengeMissionRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MistTrialGetChallengeMissionRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MistTrialGetChallengeMissionRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MistTrialGetChallengeMissionRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MistTrialGetChallengeMissionRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MistTrialGetChallengeMissionRsp>::~shared_ptr((std::shared_ptr<proto::MistTrialGetChallengeMissionRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MistTrialGetChallengeMissionReq const>::~shared_ptr((std::shared_ptr<const proto::MistTrialGetChallengeMissionReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 172: range 000000001372CDA6-000000001372D0C2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#45}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MistTrialGetDungeonExhibitionDataReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MistTrialGetDungeonExhibitionDataRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MistTrialGetDungeonExhibitionDataRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:172 64 16 11 rsp_ptr:172";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#45}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MistTrialGetDungeonExhibitionDataReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MistTrialGetDungeonExhibitionDataReq const>(
         (const std::shared_ptr<const proto::MistTrialGetDungeonExhibitionDataReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      172);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MistTrialGetDungeonExhibitionDataReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MistTrialGetDungeonExhibitionDataReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MistTrialGetDungeonExhibitionDataRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MistTrialGetDungeonExhibitionDataRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MistTrialGetDungeonExhibitionDataRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MistTrialGetDungeonExhibitionDataRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MistTrialGetDungeonExhibitionDataReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MistTrialGetDungeonExhibitionDataReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMistTrialGetDungeonExhibitionDataReq(this, v8, rsp_0);
    proto::MistTrialGetDungeonExhibitionDataRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MistTrialGetDungeonExhibitionDataRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MistTrialGetDungeonExhibitionDataRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MistTrialGetDungeonExhibitionDataRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MistTrialGetDungeonExhibitionDataRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MistTrialGetDungeonExhibitionDataRsp>::~shared_ptr((std::shared_ptr<proto::MistTrialGetDungeonExhibitionDataRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MistTrialGetDungeonExhibitionDataReq const>::~shared_ptr((std::shared_ptr<const proto::MistTrialGetDungeonExhibitionDataReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 174: range 000000001372D0C4-000000001372D3E0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#46}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChannellerSlabWearBuffReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChannellerSlabWearBuffRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChannellerSlabWearBuffRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:174 64 16 11 rsp_ptr:174";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#46}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChannellerSlabWearBuffReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChannellerSlabWearBuffReq const>(
         (const std::shared_ptr<const proto::ChannellerSlabWearBuffReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      174);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChannellerSlabWearBuffReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabWearBuffReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChannellerSlabWearBuffRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChannellerSlabWearBuffRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChannellerSlabWearBuffRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChannellerSlabWearBuffRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChannellerSlabWearBuffReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabWearBuffReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChannellerSlabWearBuffReq(this, v8, rsp_0);
    proto::ChannellerSlabWearBuffRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChannellerSlabWearBuffRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChannellerSlabWearBuffRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChannellerSlabWearBuffRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChannellerSlabWearBuffRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChannellerSlabWearBuffRsp>::~shared_ptr((std::shared_ptr<proto::ChannellerSlabWearBuffRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChannellerSlabWearBuffReq const>::~shared_ptr((std::shared_ptr<const proto::ChannellerSlabWearBuffReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 175: range 000000001372D3E2-000000001372D6FE
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#47}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChannellerSlabTakeoffBuffReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChannellerSlabTakeoffBuffRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChannellerSlabTakeoffBuffRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:175 64 16 11 rsp_ptr:175";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#47}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChannellerSlabTakeoffBuffReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChannellerSlabTakeoffBuffReq const>(
         (const std::shared_ptr<const proto::ChannellerSlabTakeoffBuffReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      175);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChannellerSlabTakeoffBuffReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabTakeoffBuffReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChannellerSlabTakeoffBuffRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChannellerSlabTakeoffBuffRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChannellerSlabTakeoffBuffRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChannellerSlabTakeoffBuffRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChannellerSlabTakeoffBuffReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabTakeoffBuffReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChannellerSlabTakeoffBuffReq(this, v8, rsp_0);
    proto::ChannellerSlabTakeoffBuffRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChannellerSlabTakeoffBuffRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChannellerSlabTakeoffBuffRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChannellerSlabTakeoffBuffRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChannellerSlabTakeoffBuffRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChannellerSlabTakeoffBuffRsp>::~shared_ptr((std::shared_ptr<proto::ChannellerSlabTakeoffBuffRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChannellerSlabTakeoffBuffReq const>::~shared_ptr((std::shared_ptr<const proto::ChannellerSlabTakeoffBuffReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 176: range 000000001372D700-000000001372DA1C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#48}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChannellerSlabEnterLoopDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChannellerSlabEnterLoopDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChannellerSlabEnterLoopDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:176 64 16 11 rsp_ptr:176";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#48}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChannellerSlabEnterLoopDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChannellerSlabEnterLoopDungeonReq const>(
         (const std::shared_ptr<const proto::ChannellerSlabEnterLoopDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      176);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChannellerSlabEnterLoopDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabEnterLoopDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChannellerSlabEnterLoopDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChannellerSlabEnterLoopDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChannellerSlabEnterLoopDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChannellerSlabEnterLoopDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChannellerSlabEnterLoopDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabEnterLoopDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChannellerSlabEnterLoopDungeonReq(this, v8, rsp_0);
    proto::ChannellerSlabEnterLoopDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChannellerSlabEnterLoopDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChannellerSlabEnterLoopDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChannellerSlabEnterLoopDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChannellerSlabEnterLoopDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChannellerSlabEnterLoopDungeonRsp>::~shared_ptr((std::shared_ptr<proto::ChannellerSlabEnterLoopDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChannellerSlabEnterLoopDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::ChannellerSlabEnterLoopDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 177: range 000000001372DA1E-000000001372DD3A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#49}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:177 64 16 11 rsp_ptr:177";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#49}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq const>(
         (const std::shared_ptr<const proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      177);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChannellerSlabLoopDungeonTakeFirstPassRewardReq(this, v8, rsp_0);
    proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp>::~shared_ptr((std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq const>::~shared_ptr((std::shared_ptr<const proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 178: range 000000001372DD3C-000000001372E058
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#50}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChannellerSlabLoopDungeonTakeScoreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:178 64 16 11 rsp_ptr:178";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#50}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChannellerSlabLoopDungeonTakeScoreRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChannellerSlabLoopDungeonTakeScoreRewardReq const>(
         (const std::shared_ptr<const proto::ChannellerSlabLoopDungeonTakeScoreRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      178);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeScoreRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabLoopDungeonTakeScoreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonTakeScoreRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabLoopDungeonTakeScoreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChannellerSlabLoopDungeonTakeScoreRewardReq(this, v8, rsp_0);
    proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp>::~shared_ptr((std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChannellerSlabLoopDungeonTakeScoreRewardReq const>::~shared_ptr((std::shared_ptr<const proto::ChannellerSlabLoopDungeonTakeScoreRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 179: range 000000001372E05A-000000001372E376
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#51}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChannellerSlabLoopDungeonSelectConditionReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonSelectConditionRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChannellerSlabLoopDungeonSelectConditionRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:179 64 16 11 rsp_ptr:179";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#51}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChannellerSlabLoopDungeonSelectConditionReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChannellerSlabLoopDungeonSelectConditionReq const>(
         (const std::shared_ptr<const proto::ChannellerSlabLoopDungeonSelectConditionReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      179);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonSelectConditionReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabLoopDungeonSelectConditionReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChannellerSlabLoopDungeonSelectConditionRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonSelectConditionRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonSelectConditionRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChannellerSlabLoopDungeonSelectConditionRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChannellerSlabLoopDungeonSelectConditionReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabLoopDungeonSelectConditionReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChannellerSlabLoopDungeonSelectConditionReq(this, v8, rsp_0);
    proto::ChannellerSlabLoopDungeonSelectConditionRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChannellerSlabLoopDungeonSelectConditionRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChannellerSlabLoopDungeonSelectConditionRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChannellerSlabLoopDungeonSelectConditionRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChannellerSlabLoopDungeonSelectConditionRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChannellerSlabLoopDungeonSelectConditionRsp>::~shared_ptr((std::shared_ptr<proto::ChannellerSlabLoopDungeonSelectConditionRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChannellerSlabLoopDungeonSelectConditionReq const>::~shared_ptr((std::shared_ptr<const proto::ChannellerSlabLoopDungeonSelectConditionReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 180: range 000000001372E378-000000001372E694
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#52}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChannellerSlabSaveAssistInfoReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChannellerSlabSaveAssistInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChannellerSlabSaveAssistInfoRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:180 64 16 11 rsp_ptr:180";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#52}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChannellerSlabSaveAssistInfoReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChannellerSlabSaveAssistInfoReq const>(
         (const std::shared_ptr<const proto::ChannellerSlabSaveAssistInfoReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      180);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChannellerSlabSaveAssistInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabSaveAssistInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChannellerSlabSaveAssistInfoRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChannellerSlabSaveAssistInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChannellerSlabSaveAssistInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChannellerSlabSaveAssistInfoRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChannellerSlabSaveAssistInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabSaveAssistInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChannellerSlabSaveAssistInfoReq(this, v8, rsp_0);
    proto::ChannellerSlabSaveAssistInfoRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChannellerSlabSaveAssistInfoRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChannellerSlabSaveAssistInfoRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChannellerSlabSaveAssistInfoRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChannellerSlabSaveAssistInfoRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChannellerSlabSaveAssistInfoRsp>::~shared_ptr((std::shared_ptr<proto::ChannellerSlabSaveAssistInfoRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChannellerSlabSaveAssistInfoReq const>::~shared_ptr((std::shared_ptr<const proto::ChannellerSlabSaveAssistInfoReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 181: range 000000001372E696-000000001372E9B2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#53}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChannellerSlabOneOffDungeonInfoReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChannellerSlabOneOffDungeonInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChannellerSlabOneOffDungeonInfoRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:181 64 16 11 rsp_ptr:181";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#53}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChannellerSlabOneOffDungeonInfoReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChannellerSlabOneOffDungeonInfoReq const>(
         (const std::shared_ptr<const proto::ChannellerSlabOneOffDungeonInfoReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      181);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChannellerSlabOneOffDungeonInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabOneOffDungeonInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChannellerSlabOneOffDungeonInfoRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChannellerSlabOneOffDungeonInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChannellerSlabOneOffDungeonInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChannellerSlabOneOffDungeonInfoRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChannellerSlabOneOffDungeonInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabOneOffDungeonInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChannellerSlabOneOffDungeonInfoReq(this, v8, rsp_0);
    proto::ChannellerSlabOneOffDungeonInfoRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChannellerSlabOneOffDungeonInfoRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChannellerSlabOneOffDungeonInfoRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChannellerSlabOneOffDungeonInfoRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChannellerSlabOneOffDungeonInfoRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChannellerSlabOneOffDungeonInfoRsp>::~shared_ptr((std::shared_ptr<proto::ChannellerSlabOneOffDungeonInfoRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChannellerSlabOneOffDungeonInfoReq const>::~shared_ptr((std::shared_ptr<const proto::ChannellerSlabOneOffDungeonInfoReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 182: range 000000001372E9B4-000000001372ECD0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#54}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChannellerSlabCheckEnterLoopDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChannellerSlabCheckEnterLoopDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChannellerSlabCheckEnterLoopDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:182 64 16 11 rsp_ptr:182";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#54}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChannellerSlabCheckEnterLoopDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChannellerSlabCheckEnterLoopDungeonReq const>(
         (const std::shared_ptr<const proto::ChannellerSlabCheckEnterLoopDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      182);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChannellerSlabCheckEnterLoopDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabCheckEnterLoopDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChannellerSlabCheckEnterLoopDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChannellerSlabCheckEnterLoopDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChannellerSlabCheckEnterLoopDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChannellerSlabCheckEnterLoopDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChannellerSlabCheckEnterLoopDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChannellerSlabCheckEnterLoopDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChannellerSlabCheckEnterLoopDungeonReq(this, v8, rsp_0);
    proto::ChannellerSlabCheckEnterLoopDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChannellerSlabCheckEnterLoopDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChannellerSlabCheckEnterLoopDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChannellerSlabCheckEnterLoopDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChannellerSlabCheckEnterLoopDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChannellerSlabCheckEnterLoopDungeonRsp>::~shared_ptr((std::shared_ptr<proto::ChannellerSlabCheckEnterLoopDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChannellerSlabCheckEnterLoopDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::ChannellerSlabCheckEnterLoopDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 184: range 000000001372ECD2-000000001372EFEE
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#55}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::StartBuoyantCombatGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::StartBuoyantCombatGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::StartBuoyantCombatGalleryRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:184 64 16 11 rsp_ptr:184";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#55}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::StartBuoyantCombatGalleryReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::StartBuoyantCombatGalleryReq const>(
         (const std::shared_ptr<const proto::StartBuoyantCombatGalleryReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      184);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::StartBuoyantCombatGalleryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartBuoyantCombatGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::StartBuoyantCombatGalleryRsp>();
    rsp_0 = std::__shared_ptr_access<proto::StartBuoyantCombatGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::StartBuoyantCombatGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::StartBuoyantCombatGalleryRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::StartBuoyantCombatGalleryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartBuoyantCombatGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onStartBuoyantCombatGalleryReq(this, v8, rsp_0);
    proto::StartBuoyantCombatGalleryRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::StartBuoyantCombatGalleryRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::StartBuoyantCombatGalleryRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::StartBuoyantCombatGalleryRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::StartBuoyantCombatGalleryRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::StartBuoyantCombatGalleryRsp>::~shared_ptr((std::shared_ptr<proto::StartBuoyantCombatGalleryRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::StartBuoyantCombatGalleryReq const>::~shared_ptr((std::shared_ptr<const proto::StartBuoyantCombatGalleryReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 185: range 000000001372EFF0-000000001372F30C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#56}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EchoShellTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EchoShellTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EchoShellTakeRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:185 64 16 11 rsp_ptr:185";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#56}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EchoShellTakeRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EchoShellTakeRewardReq const>(
         (const std::shared_ptr<const proto::EchoShellTakeRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      185);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EchoShellTakeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EchoShellTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EchoShellTakeRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EchoShellTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EchoShellTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EchoShellTakeRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EchoShellTakeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EchoShellTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEchoShellTakeRewardReq(this, v8, rsp_0);
    proto::EchoShellTakeRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EchoShellTakeRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EchoShellTakeRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EchoShellTakeRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EchoShellTakeRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EchoShellTakeRewardRsp>::~shared_ptr((std::shared_ptr<proto::EchoShellTakeRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EchoShellTakeRewardReq const>::~shared_ptr((std::shared_ptr<const proto::EchoShellTakeRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 186: range 000000001372F30E-000000001372F62A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#57}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SummerTimeSprintBoatRestartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SummerTimeSprintBoatRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SummerTimeSprintBoatRestartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:186 64 16 11 rsp_ptr:186";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#57}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SummerTimeSprintBoatRestartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SummerTimeSprintBoatRestartReq const>(
         (const std::shared_ptr<const proto::SummerTimeSprintBoatRestartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      186);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SummerTimeSprintBoatRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SummerTimeSprintBoatRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SummerTimeSprintBoatRestartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SummerTimeSprintBoatRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SummerTimeSprintBoatRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SummerTimeSprintBoatRestartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SummerTimeSprintBoatRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SummerTimeSprintBoatRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSummerTimeSprintBoatRestartReq(this, v8, rsp_0);
    proto::SummerTimeSprintBoatRestartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SummerTimeSprintBoatRestartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SummerTimeSprintBoatRestartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SummerTimeSprintBoatRestartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SummerTimeSprintBoatRestartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SummerTimeSprintBoatRestartRsp>::~shared_ptr((std::shared_ptr<proto::SummerTimeSprintBoatRestartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SummerTimeSprintBoatRestartReq const>::~shared_ptr((std::shared_ptr<const proto::SummerTimeSprintBoatRestartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 188: range 000000001372F62C-000000001372F948
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#58}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EnterChessDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EnterChessDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EnterChessDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:188 64 16 11 rsp_ptr:188";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#58}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EnterChessDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EnterChessDungeonReq const>(
         (const std::shared_ptr<const proto::EnterChessDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      188);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EnterChessDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterChessDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EnterChessDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EnterChessDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EnterChessDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EnterChessDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EnterChessDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterChessDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEnterChessDungeonReq(this, v8, rsp_0);
    proto::EnterChessDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EnterChessDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EnterChessDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EnterChessDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EnterChessDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EnterChessDungeonRsp>::~shared_ptr((std::shared_ptr<proto::EnterChessDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EnterChessDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::EnterChessDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 189: range 000000001372F94A-000000001372FC66
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#59}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChessPickCardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChessPickCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChessPickCardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:189 64 16 11 rsp_ptr:189";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#59}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChessPickCardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChessPickCardReq const>(
         (const std::shared_ptr<const proto::ChessPickCardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      189);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChessPickCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChessPickCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChessPickCardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChessPickCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChessPickCardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChessPickCardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChessPickCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChessPickCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChessPickCardReq(this, v8, rsp_0);
    proto::ChessPickCardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChessPickCardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChessPickCardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChessPickCardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChessPickCardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChessPickCardRsp>::~shared_ptr((std::shared_ptr<proto::ChessPickCardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChessPickCardReq const>::~shared_ptr((std::shared_ptr<const proto::ChessPickCardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 190: range 000000001372FC68-000000001372FF84
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#60}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ChessManualRefreshCardsReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ChessManualRefreshCardsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ChessManualRefreshCardsRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:190 64 16 11 rsp_ptr:190";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#60}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ChessManualRefreshCardsReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ChessManualRefreshCardsReq const>(
         (const std::shared_ptr<const proto::ChessManualRefreshCardsReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      190);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ChessManualRefreshCardsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChessManualRefreshCardsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ChessManualRefreshCardsRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ChessManualRefreshCardsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ChessManualRefreshCardsRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ChessManualRefreshCardsRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ChessManualRefreshCardsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ChessManualRefreshCardsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onChessManualRefreshCardsReq(this, v8, rsp_0);
    proto::ChessManualRefreshCardsRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ChessManualRefreshCardsRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ChessManualRefreshCardsRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ChessManualRefreshCardsRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ChessManualRefreshCardsRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ChessManualRefreshCardsRsp>::~shared_ptr((std::shared_ptr<proto::ChessManualRefreshCardsRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ChessManualRefreshCardsReq const>::~shared_ptr((std::shared_ptr<const proto::ChessManualRefreshCardsReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 192: range 000000001372FF86-00000000137302A2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#61}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BlitzRushParkourRestartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BlitzRushParkourRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BlitzRushParkourRestartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:192 64 16 11 rsp_ptr:192";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#61}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BlitzRushParkourRestartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BlitzRushParkourRestartReq const>(
         (const std::shared_ptr<const proto::BlitzRushParkourRestartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      192);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BlitzRushParkourRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlitzRushParkourRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BlitzRushParkourRestartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BlitzRushParkourRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BlitzRushParkourRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BlitzRushParkourRestartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BlitzRushParkourRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlitzRushParkourRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBlitzRushParkourRestartReq(this, v8, rsp_0);
    proto::BlitzRushParkourRestartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BlitzRushParkourRestartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BlitzRushParkourRestartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BlitzRushParkourRestartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BlitzRushParkourRestartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BlitzRushParkourRestartRsp>::~shared_ptr((std::shared_ptr<proto::BlitzRushParkourRestartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BlitzRushParkourRestartReq const>::~shared_ptr((std::shared_ptr<const proto::BlitzRushParkourRestartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 194: range 00000000137302A4-00000000137305C0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#62}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SumoSaveTeamReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SumoSaveTeamRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SumoSaveTeamRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:194 64 16 11 rsp_ptr:194";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#62}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SumoSaveTeamReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SumoSaveTeamReq const>(
         (const std::shared_ptr<const proto::SumoSaveTeamReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      194);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SumoSaveTeamReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SumoSaveTeamReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SumoSaveTeamRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SumoSaveTeamRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SumoSaveTeamRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SumoSaveTeamRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SumoSaveTeamReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SumoSaveTeamReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSumoSaveTeamReq(this, v8, rsp_0);
    proto::SumoSaveTeamRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SumoSaveTeamRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SumoSaveTeamRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SumoSaveTeamRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SumoSaveTeamRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SumoSaveTeamRsp>::~shared_ptr((std::shared_ptr<proto::SumoSaveTeamRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SumoSaveTeamReq const>::~shared_ptr((std::shared_ptr<const proto::SumoSaveTeamReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 195: range 00000000137305C2-00000000137308DE
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#63}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SumoSelectTeamAndEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SumoSelectTeamAndEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SumoSelectTeamAndEnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:195 64 16 11 rsp_ptr:195";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#63}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SumoSelectTeamAndEnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SumoSelectTeamAndEnterDungeonReq const>(
         (const std::shared_ptr<const proto::SumoSelectTeamAndEnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      195);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SumoSelectTeamAndEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SumoSelectTeamAndEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SumoSelectTeamAndEnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SumoSelectTeamAndEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SumoSelectTeamAndEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SumoSelectTeamAndEnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SumoSelectTeamAndEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SumoSelectTeamAndEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSumoSelectTeamAndEnterDungeonReq(this, v8, rsp_0);
    proto::SumoSelectTeamAndEnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SumoSelectTeamAndEnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SumoSelectTeamAndEnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SumoSelectTeamAndEnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SumoSelectTeamAndEnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SumoSelectTeamAndEnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::SumoSelectTeamAndEnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SumoSelectTeamAndEnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::SumoSelectTeamAndEnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 196: range 00000000137308E0-0000000013730BFC
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#64}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SumoSwitchTeamReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SumoSwitchTeamRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SumoSwitchTeamRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:196 64 16 11 rsp_ptr:196";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#64}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SumoSwitchTeamReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SumoSwitchTeamReq const>(
         (const std::shared_ptr<const proto::SumoSwitchTeamReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      196);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SumoSwitchTeamReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SumoSwitchTeamReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SumoSwitchTeamRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SumoSwitchTeamRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SumoSwitchTeamRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SumoSwitchTeamRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SumoSwitchTeamReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SumoSwitchTeamReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSumoSwitchTeamReq(this, v8, rsp_0);
    proto::SumoSwitchTeamRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SumoSwitchTeamRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SumoSwitchTeamRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SumoSwitchTeamRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SumoSwitchTeamRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SumoSwitchTeamRsp>::~shared_ptr((std::shared_ptr<proto::SumoSwitchTeamRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SumoSwitchTeamReq const>::~shared_ptr((std::shared_ptr<const proto::SumoSwitchTeamReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 197: range 0000000013730BFE-0000000013730F1A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#65}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SumoRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SumoRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SumoRestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:197 64 16 11 rsp_ptr:197";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#65}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SumoRestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SumoRestartDungeonReq const>(
         (const std::shared_ptr<const proto::SumoRestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      197);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SumoRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SumoRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SumoRestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SumoRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SumoRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SumoRestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SumoRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SumoRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSumoRestartDungeonReq(this, v8, rsp_0);
    proto::SumoRestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SumoRestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SumoRestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SumoRestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SumoRestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SumoRestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::SumoRestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SumoRestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::SumoRestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 199: range 0000000013730F1C-0000000013731238
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#66}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LunaRiteSacrificeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LunaRiteSacrificeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LunaRiteSacrificeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:199 64 16 11 rsp_ptr:199";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#66}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LunaRiteSacrificeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LunaRiteSacrificeReq const>(
         (const std::shared_ptr<const proto::LunaRiteSacrificeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      199);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LunaRiteSacrificeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LunaRiteSacrificeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LunaRiteSacrificeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LunaRiteSacrificeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LunaRiteSacrificeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LunaRiteSacrificeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LunaRiteSacrificeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LunaRiteSacrificeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLunaRiteSacrificeReq(this, v8, rsp_0);
    proto::LunaRiteSacrificeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LunaRiteSacrificeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LunaRiteSacrificeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LunaRiteSacrificeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LunaRiteSacrificeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LunaRiteSacrificeRsp>::~shared_ptr((std::shared_ptr<proto::LunaRiteSacrificeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LunaRiteSacrificeReq const>::~shared_ptr((std::shared_ptr<const proto::LunaRiteSacrificeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 200: range 000000001373123A-0000000013731556
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#67}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LunaRiteTakeSacrificeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LunaRiteTakeSacrificeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LunaRiteTakeSacrificeRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:200 64 16 11 rsp_ptr:200";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#67}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LunaRiteTakeSacrificeRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LunaRiteTakeSacrificeRewardReq const>(
         (const std::shared_ptr<const proto::LunaRiteTakeSacrificeRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      200);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LunaRiteTakeSacrificeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LunaRiteTakeSacrificeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LunaRiteTakeSacrificeRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LunaRiteTakeSacrificeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LunaRiteTakeSacrificeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LunaRiteTakeSacrificeRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LunaRiteTakeSacrificeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LunaRiteTakeSacrificeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLunaRiteTakeSacrificeRewardReq(this, v8, rsp_0);
    proto::LunaRiteTakeSacrificeRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LunaRiteTakeSacrificeRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LunaRiteTakeSacrificeRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LunaRiteTakeSacrificeRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LunaRiteTakeSacrificeRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LunaRiteTakeSacrificeRewardRsp>::~shared_ptr((std::shared_ptr<proto::LunaRiteTakeSacrificeRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LunaRiteTakeSacrificeRewardReq const>::~shared_ptr((std::shared_ptr<const proto::LunaRiteTakeSacrificeRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 201: range 0000000013731558-0000000013731874
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#68}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LunaRiteHintPointReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LunaRiteHintPointRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LunaRiteHintPointRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:201 64 16 11 rsp_ptr:201";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#68}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LunaRiteHintPointReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LunaRiteHintPointReq const>(
         (const std::shared_ptr<const proto::LunaRiteHintPointReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      201);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LunaRiteHintPointReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LunaRiteHintPointReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LunaRiteHintPointRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LunaRiteHintPointRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LunaRiteHintPointRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LunaRiteHintPointRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LunaRiteHintPointReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LunaRiteHintPointReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLunaRiteHintPointReq(this, v8, rsp_0);
    proto::LunaRiteHintPointRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LunaRiteHintPointRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LunaRiteHintPointRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LunaRiteHintPointRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LunaRiteHintPointRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LunaRiteHintPointRsp>::~shared_ptr((std::shared_ptr<proto::LunaRiteHintPointRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LunaRiteHintPointReq const>::~shared_ptr((std::shared_ptr<const proto::LunaRiteHintPointReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 203: range 0000000013731876-0000000013731B92
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#69}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PlantFlowerGetSeedInfoReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PlantFlowerGetSeedInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PlantFlowerGetSeedInfoRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:203 64 16 11 rsp_ptr:203";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#69}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerGetSeedInfoReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PlantFlowerGetSeedInfoReq const>(
         (const std::shared_ptr<const proto::PlantFlowerGetSeedInfoReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      203);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PlantFlowerGetSeedInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerGetSeedInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PlantFlowerGetSeedInfoRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PlantFlowerGetSeedInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PlantFlowerGetSeedInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PlantFlowerGetSeedInfoRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PlantFlowerGetSeedInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerGetSeedInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPlantFlowerGetSeedInfoReq(this, v8, rsp_0);
    proto::PlantFlowerGetSeedInfoRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PlantFlowerGetSeedInfoRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PlantFlowerGetSeedInfoRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PlantFlowerGetSeedInfoRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PlantFlowerGetSeedInfoRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PlantFlowerGetSeedInfoRsp>::~shared_ptr((std::shared_ptr<proto::PlantFlowerGetSeedInfoRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PlantFlowerGetSeedInfoReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerGetSeedInfoReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 204: range 0000000013731B94-0000000013731EB0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#70}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PlantFlowerTakeSeedRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PlantFlowerTakeSeedRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PlantFlowerTakeSeedRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:204 64 16 11 rsp_ptr:204";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#70}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerTakeSeedRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PlantFlowerTakeSeedRewardReq const>(
         (const std::shared_ptr<const proto::PlantFlowerTakeSeedRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      204);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PlantFlowerTakeSeedRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerTakeSeedRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PlantFlowerTakeSeedRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PlantFlowerTakeSeedRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PlantFlowerTakeSeedRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PlantFlowerTakeSeedRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PlantFlowerTakeSeedRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerTakeSeedRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPlantFlowerTakeSeedRewardReq(this, v8, rsp_0);
    proto::PlantFlowerTakeSeedRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PlantFlowerTakeSeedRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PlantFlowerTakeSeedRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PlantFlowerTakeSeedRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PlantFlowerTakeSeedRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PlantFlowerTakeSeedRewardRsp>::~shared_ptr((std::shared_ptr<proto::PlantFlowerTakeSeedRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PlantFlowerTakeSeedRewardReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerTakeSeedRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 205: range 0000000013731EB2-00000000137321CE
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#71}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PlantFlowerSetFlowerWishReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PlantFlowerSetFlowerWishRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PlantFlowerSetFlowerWishRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:205 64 16 11 rsp_ptr:205";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#71}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerSetFlowerWishReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PlantFlowerSetFlowerWishReq const>(
         (const std::shared_ptr<const proto::PlantFlowerSetFlowerWishReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      205);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PlantFlowerSetFlowerWishReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerSetFlowerWishReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PlantFlowerSetFlowerWishRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PlantFlowerSetFlowerWishRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PlantFlowerSetFlowerWishRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PlantFlowerSetFlowerWishRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PlantFlowerSetFlowerWishReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerSetFlowerWishReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPlantFlowerSetFlowerWishReq(this, v8, rsp_0);
    proto::PlantFlowerSetFlowerWishRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PlantFlowerSetFlowerWishRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PlantFlowerSetFlowerWishRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PlantFlowerSetFlowerWishRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PlantFlowerSetFlowerWishRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PlantFlowerSetFlowerWishRsp>::~shared_ptr((std::shared_ptr<proto::PlantFlowerSetFlowerWishRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PlantFlowerSetFlowerWishReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerSetFlowerWishReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 211: range 00000000137321D0-00000000137324EC
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#72}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PlantFlowerAcceptGiveFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PlantFlowerAcceptGiveFlowerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PlantFlowerAcceptGiveFlowerRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:211 64 16 11 rsp_ptr:211";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#72}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerAcceptGiveFlowerReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PlantFlowerAcceptGiveFlowerReq const>(
         (const std::shared_ptr<const proto::PlantFlowerAcceptGiveFlowerReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      211);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PlantFlowerAcceptGiveFlowerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerAcceptGiveFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PlantFlowerAcceptGiveFlowerRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PlantFlowerAcceptGiveFlowerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PlantFlowerAcceptGiveFlowerRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PlantFlowerAcceptGiveFlowerRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PlantFlowerAcceptGiveFlowerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerAcceptGiveFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPlantFlowerAcceptGiveFlowerReq(this, v8, rsp_0);
    proto::PlantFlowerAcceptGiveFlowerRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PlantFlowerAcceptGiveFlowerRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PlantFlowerAcceptGiveFlowerRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PlantFlowerAcceptGiveFlowerRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PlantFlowerAcceptGiveFlowerRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PlantFlowerAcceptGiveFlowerRsp>::~shared_ptr((std::shared_ptr<proto::PlantFlowerAcceptGiveFlowerRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PlantFlowerAcceptGiveFlowerReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerAcceptGiveFlowerReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 212: range 00000000137324EE-000000001373280A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#73}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PlantFlowerAcceptAllGiveFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PlantFlowerAcceptAllGiveFlowerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PlantFlowerAcceptAllGiveFlowerRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:212 64 16 11 rsp_ptr:212";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#73}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerAcceptAllGiveFlowerReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PlantFlowerAcceptAllGiveFlowerReq const>(
         (const std::shared_ptr<const proto::PlantFlowerAcceptAllGiveFlowerReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      212);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PlantFlowerAcceptAllGiveFlowerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerAcceptAllGiveFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PlantFlowerAcceptAllGiveFlowerRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PlantFlowerAcceptAllGiveFlowerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PlantFlowerAcceptAllGiveFlowerRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PlantFlowerAcceptAllGiveFlowerRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PlantFlowerAcceptAllGiveFlowerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerAcceptAllGiveFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPlantFlowerAcceptAllGiveFlowerReq(this, v8, rsp_0);
    proto::PlantFlowerAcceptAllGiveFlowerRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PlantFlowerAcceptAllGiveFlowerRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PlantFlowerAcceptAllGiveFlowerRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PlantFlowerAcceptAllGiveFlowerRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PlantFlowerAcceptAllGiveFlowerRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PlantFlowerAcceptAllGiveFlowerRsp>::~shared_ptr((std::shared_ptr<proto::PlantFlowerAcceptAllGiveFlowerRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PlantFlowerAcceptAllGiveFlowerReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerAcceptAllGiveFlowerReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 213: range 000000001373280C-0000000013732B28
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#74}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PlantFlowerGetCanGiveFriendFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PlantFlowerGetCanGiveFriendFlowerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PlantFlowerGetCanGiveFriendFlowerRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:213 64 16 11 rsp_ptr:213";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#74}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerGetCanGiveFriendFlowerReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PlantFlowerGetCanGiveFriendFlowerReq const>(
         (const std::shared_ptr<const proto::PlantFlowerGetCanGiveFriendFlowerReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      213);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PlantFlowerGetCanGiveFriendFlowerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerGetCanGiveFriendFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PlantFlowerGetCanGiveFriendFlowerRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PlantFlowerGetCanGiveFriendFlowerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PlantFlowerGetCanGiveFriendFlowerRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PlantFlowerGetCanGiveFriendFlowerRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PlantFlowerGetCanGiveFriendFlowerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerGetCanGiveFriendFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPlantFlowerGetCanGiveFriendFlowerReq(this, v8, rsp_0);
    proto::PlantFlowerGetCanGiveFriendFlowerRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PlantFlowerGetCanGiveFriendFlowerRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PlantFlowerGetCanGiveFriendFlowerRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PlantFlowerGetCanGiveFriendFlowerRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PlantFlowerGetCanGiveFriendFlowerRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PlantFlowerGetCanGiveFriendFlowerRsp>::~shared_ptr((std::shared_ptr<proto::PlantFlowerGetCanGiveFriendFlowerRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PlantFlowerGetCanGiveFriendFlowerReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerGetCanGiveFriendFlowerReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 214: range 0000000013732B2A-0000000013732E46
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#75}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PlantFlowerEditFlowerCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PlantFlowerEditFlowerCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PlantFlowerEditFlowerCombinationRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:214 64 16 11 rsp_ptr:214";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#75}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerEditFlowerCombinationReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PlantFlowerEditFlowerCombinationReq const>(
         (const std::shared_ptr<const proto::PlantFlowerEditFlowerCombinationReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      214);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PlantFlowerEditFlowerCombinationReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerEditFlowerCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PlantFlowerEditFlowerCombinationRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PlantFlowerEditFlowerCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PlantFlowerEditFlowerCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PlantFlowerEditFlowerCombinationRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PlantFlowerEditFlowerCombinationReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerEditFlowerCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPlantFlowerEditFlowerCombinationReq(this, v8, rsp_0);
    proto::PlantFlowerEditFlowerCombinationRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PlantFlowerEditFlowerCombinationRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PlantFlowerEditFlowerCombinationRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PlantFlowerEditFlowerCombinationRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PlantFlowerEditFlowerCombinationRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PlantFlowerEditFlowerCombinationRsp>::~shared_ptr((std::shared_ptr<proto::PlantFlowerEditFlowerCombinationRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PlantFlowerEditFlowerCombinationReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerEditFlowerCombinationReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 216: range 0000000013732E48-0000000013733164
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#76}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MusicGameStartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MusicGameStartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MusicGameStartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:216 64 16 11 rsp_ptr:216";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#76}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MusicGameStartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MusicGameStartReq const>(
         (const std::shared_ptr<const proto::MusicGameStartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      216);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MusicGameStartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MusicGameStartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MusicGameStartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MusicGameStartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MusicGameStartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MusicGameStartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MusicGameStartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MusicGameStartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMusicGameStartReq(this, v8, rsp_0);
    proto::MusicGameStartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MusicGameStartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MusicGameStartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MusicGameStartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MusicGameStartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MusicGameStartRsp>::~shared_ptr((std::shared_ptr<proto::MusicGameStartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MusicGameStartReq const>::~shared_ptr((std::shared_ptr<const proto::MusicGameStartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 217: range 0000000013733166-0000000013733482
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#77}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MusicGameSettleReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MusicGameSettleRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MusicGameSettleRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:217 64 16 11 rsp_ptr:217";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#77}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MusicGameSettleReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MusicGameSettleReq const>(
         (const std::shared_ptr<const proto::MusicGameSettleReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      217);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MusicGameSettleReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MusicGameSettleReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MusicGameSettleRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MusicGameSettleRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MusicGameSettleRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MusicGameSettleRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MusicGameSettleReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MusicGameSettleReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMusicGameSettleReq(this, v8, rsp_0);
    proto::MusicGameSettleRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MusicGameSettleRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MusicGameSettleRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MusicGameSettleRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MusicGameSettleRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MusicGameSettleRsp>::~shared_ptr((std::shared_ptr<proto::MusicGameSettleRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MusicGameSettleReq const>::~shared_ptr((std::shared_ptr<const proto::MusicGameSettleReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 219: range 0000000013733484-00000000137337A0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#78}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::DoRoguelikeDungeonCardGachaReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::DoRoguelikeDungeonCardGachaRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::DoRoguelikeDungeonCardGachaRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:219 64 16 11 rsp_ptr:219";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#78}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::DoRoguelikeDungeonCardGachaReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::DoRoguelikeDungeonCardGachaReq const>(
         (const std::shared_ptr<const proto::DoRoguelikeDungeonCardGachaReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      219);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::DoRoguelikeDungeonCardGachaReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DoRoguelikeDungeonCardGachaReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::DoRoguelikeDungeonCardGachaRsp>();
    rsp_0 = std::__shared_ptr_access<proto::DoRoguelikeDungeonCardGachaRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::DoRoguelikeDungeonCardGachaRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::DoRoguelikeDungeonCardGachaRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::DoRoguelikeDungeonCardGachaReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DoRoguelikeDungeonCardGachaReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onDoRoguelikeDungeonCardGachaReq(this, v8, rsp_0);
    proto::DoRoguelikeDungeonCardGachaRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::DoRoguelikeDungeonCardGachaRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::DoRoguelikeDungeonCardGachaRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::DoRoguelikeDungeonCardGachaRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::DoRoguelikeDungeonCardGachaRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::DoRoguelikeDungeonCardGachaRsp>::~shared_ptr((std::shared_ptr<proto::DoRoguelikeDungeonCardGachaRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::DoRoguelikeDungeonCardGachaReq const>::~shared_ptr((std::shared_ptr<const proto::DoRoguelikeDungeonCardGachaReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 220: range 00000000137337A2-0000000013733ABE
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#79}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RefreshRoguelikeDungeonCardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RefreshRoguelikeDungeonCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RefreshRoguelikeDungeonCardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:220 64 16 11 rsp_ptr:220";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#79}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RefreshRoguelikeDungeonCardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RefreshRoguelikeDungeonCardReq const>(
         (const std::shared_ptr<const proto::RefreshRoguelikeDungeonCardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      220);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RefreshRoguelikeDungeonCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RefreshRoguelikeDungeonCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RefreshRoguelikeDungeonCardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RefreshRoguelikeDungeonCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RefreshRoguelikeDungeonCardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RefreshRoguelikeDungeonCardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RefreshRoguelikeDungeonCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RefreshRoguelikeDungeonCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRefreshRoguelikeDungeonCardReq(this, v8, rsp_0);
    proto::RefreshRoguelikeDungeonCardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RefreshRoguelikeDungeonCardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RefreshRoguelikeDungeonCardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RefreshRoguelikeDungeonCardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RefreshRoguelikeDungeonCardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RefreshRoguelikeDungeonCardRsp>::~shared_ptr((std::shared_ptr<proto::RefreshRoguelikeDungeonCardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RefreshRoguelikeDungeonCardReq const>::~shared_ptr((std::shared_ptr<const proto::RefreshRoguelikeDungeonCardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 221: range 0000000013733AC0-0000000013733DDC
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#80}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SelectRoguelikeDungeonCardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SelectRoguelikeDungeonCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SelectRoguelikeDungeonCardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:221 64 16 11 rsp_ptr:221";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#80}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SelectRoguelikeDungeonCardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SelectRoguelikeDungeonCardReq const>(
         (const std::shared_ptr<const proto::SelectRoguelikeDungeonCardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      221);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SelectRoguelikeDungeonCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SelectRoguelikeDungeonCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SelectRoguelikeDungeonCardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SelectRoguelikeDungeonCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SelectRoguelikeDungeonCardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SelectRoguelikeDungeonCardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SelectRoguelikeDungeonCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SelectRoguelikeDungeonCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSelectRoguelikeDungeonCardReq(this, v8, rsp_0);
    proto::SelectRoguelikeDungeonCardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SelectRoguelikeDungeonCardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SelectRoguelikeDungeonCardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SelectRoguelikeDungeonCardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SelectRoguelikeDungeonCardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SelectRoguelikeDungeonCardRsp>::~shared_ptr((std::shared_ptr<proto::SelectRoguelikeDungeonCardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SelectRoguelikeDungeonCardReq const>::~shared_ptr((std::shared_ptr<const proto::SelectRoguelikeDungeonCardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 222: range 0000000013733DDE-00000000137340FA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#81}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GiveUpRoguelikeDungeonCardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GiveUpRoguelikeDungeonCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GiveUpRoguelikeDungeonCardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:222 64 16 11 rsp_ptr:222";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#81}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GiveUpRoguelikeDungeonCardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GiveUpRoguelikeDungeonCardReq const>(
         (const std::shared_ptr<const proto::GiveUpRoguelikeDungeonCardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      222);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GiveUpRoguelikeDungeonCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GiveUpRoguelikeDungeonCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GiveUpRoguelikeDungeonCardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GiveUpRoguelikeDungeonCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GiveUpRoguelikeDungeonCardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GiveUpRoguelikeDungeonCardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GiveUpRoguelikeDungeonCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GiveUpRoguelikeDungeonCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGiveUpRoguelikeDungeonCardReq(this, v8, rsp_0);
    proto::GiveUpRoguelikeDungeonCardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GiveUpRoguelikeDungeonCardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GiveUpRoguelikeDungeonCardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GiveUpRoguelikeDungeonCardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GiveUpRoguelikeDungeonCardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GiveUpRoguelikeDungeonCardRsp>::~shared_ptr((std::shared_ptr<proto::GiveUpRoguelikeDungeonCardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GiveUpRoguelikeDungeonCardReq const>::~shared_ptr((std::shared_ptr<const proto::GiveUpRoguelikeDungeonCardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 223: range 00000000137340FC-0000000013734418
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#82}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EquipRoguelikeRuneReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EquipRoguelikeRuneRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EquipRoguelikeRuneRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:223 64 16 11 rsp_ptr:223";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#82}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EquipRoguelikeRuneReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EquipRoguelikeRuneReq const>(
         (const std::shared_ptr<const proto::EquipRoguelikeRuneReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      223);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EquipRoguelikeRuneReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EquipRoguelikeRuneReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EquipRoguelikeRuneRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EquipRoguelikeRuneRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EquipRoguelikeRuneRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EquipRoguelikeRuneRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EquipRoguelikeRuneReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EquipRoguelikeRuneReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEquipRoguelikeRuneReq(this, v8, rsp_0);
    proto::EquipRoguelikeRuneRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EquipRoguelikeRuneRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EquipRoguelikeRuneRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EquipRoguelikeRuneRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EquipRoguelikeRuneRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EquipRoguelikeRuneRsp>::~shared_ptr((std::shared_ptr<proto::EquipRoguelikeRuneRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EquipRoguelikeRuneReq const>::~shared_ptr((std::shared_ptr<const proto::EquipRoguelikeRuneReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 224: range 000000001373441A-0000000013734736
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#83}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TriggerRoguelikeRuneReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TriggerRoguelikeRuneRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TriggerRoguelikeRuneRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:224 64 16 11 rsp_ptr:224";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#83}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TriggerRoguelikeRuneReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TriggerRoguelikeRuneReq const>(
         (const std::shared_ptr<const proto::TriggerRoguelikeRuneReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      224);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TriggerRoguelikeRuneReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TriggerRoguelikeRuneReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TriggerRoguelikeRuneRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TriggerRoguelikeRuneRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TriggerRoguelikeRuneRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TriggerRoguelikeRuneRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TriggerRoguelikeRuneReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TriggerRoguelikeRuneReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTriggerRoguelikeRuneReq(this, v8, rsp_0);
    proto::TriggerRoguelikeRuneRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TriggerRoguelikeRuneRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TriggerRoguelikeRuneRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TriggerRoguelikeRuneRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TriggerRoguelikeRuneRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TriggerRoguelikeRuneRsp>::~shared_ptr((std::shared_ptr<proto::TriggerRoguelikeRuneRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TriggerRoguelikeRuneReq const>::~shared_ptr((std::shared_ptr<const proto::TriggerRoguelikeRuneReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 225: range 0000000013734738-0000000013734A54
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#84}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::UpgradeRoguelikeShikigamiReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::UpgradeRoguelikeShikigamiRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::UpgradeRoguelikeShikigamiRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:225 64 16 11 rsp_ptr:225";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#84}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::UpgradeRoguelikeShikigamiReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::UpgradeRoguelikeShikigamiReq const>(
         (const std::shared_ptr<const proto::UpgradeRoguelikeShikigamiReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      225);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::UpgradeRoguelikeShikigamiReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::UpgradeRoguelikeShikigamiReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::UpgradeRoguelikeShikigamiRsp>();
    rsp_0 = std::__shared_ptr_access<proto::UpgradeRoguelikeShikigamiRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::UpgradeRoguelikeShikigamiRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::UpgradeRoguelikeShikigamiRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::UpgradeRoguelikeShikigamiReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::UpgradeRoguelikeShikigamiReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onUpgradeRoguelikeShikigamiReq(this, v8, rsp_0);
    proto::UpgradeRoguelikeShikigamiRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::UpgradeRoguelikeShikigamiRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::UpgradeRoguelikeShikigamiRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::UpgradeRoguelikeShikigamiRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::UpgradeRoguelikeShikigamiRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::UpgradeRoguelikeShikigamiRsp>::~shared_ptr((std::shared_ptr<proto::UpgradeRoguelikeShikigamiRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::UpgradeRoguelikeShikigamiReq const>::~shared_ptr((std::shared_ptr<const proto::UpgradeRoguelikeShikigamiReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 226: range 0000000013734A56-0000000013734D72
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#85}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RoguelikeEffectViewReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RoguelikeEffectViewRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RoguelikeEffectViewRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:226 64 16 11 rsp_ptr:226";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#85}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RoguelikeEffectViewReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RoguelikeEffectViewReq const>(
         (const std::shared_ptr<const proto::RoguelikeEffectViewReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      226);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RoguelikeEffectViewReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RoguelikeEffectViewReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RoguelikeEffectViewRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RoguelikeEffectViewRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RoguelikeEffectViewRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RoguelikeEffectViewRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RoguelikeEffectViewReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RoguelikeEffectViewReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRoguelikeEffectViewReq(this, v8, rsp_0);
    proto::RoguelikeEffectViewRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RoguelikeEffectViewRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RoguelikeEffectViewRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RoguelikeEffectViewRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RoguelikeEffectViewRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RoguelikeEffectViewRsp>::~shared_ptr((std::shared_ptr<proto::RoguelikeEffectViewRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RoguelikeEffectViewReq const>::~shared_ptr((std::shared_ptr<const proto::RoguelikeEffectViewReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 227: range 0000000013734D74-0000000013735090
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#86}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RoguelikeSelectAvatarAndEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RoguelikeSelectAvatarAndEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RoguelikeSelectAvatarAndEnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:227 64 16 11 rsp_ptr:227";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#86}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RoguelikeSelectAvatarAndEnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RoguelikeSelectAvatarAndEnterDungeonReq const>(
         (const std::shared_ptr<const proto::RoguelikeSelectAvatarAndEnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      227);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RoguelikeSelectAvatarAndEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RoguelikeSelectAvatarAndEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RoguelikeSelectAvatarAndEnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RoguelikeSelectAvatarAndEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RoguelikeSelectAvatarAndEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RoguelikeSelectAvatarAndEnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RoguelikeSelectAvatarAndEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RoguelikeSelectAvatarAndEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRoguelikeSelectAvatarAndEnterDungeonReq(this, v8, rsp_0);
    proto::RoguelikeSelectAvatarAndEnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RoguelikeSelectAvatarAndEnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RoguelikeSelectAvatarAndEnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RoguelikeSelectAvatarAndEnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RoguelikeSelectAvatarAndEnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RoguelikeSelectAvatarAndEnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::RoguelikeSelectAvatarAndEnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RoguelikeSelectAvatarAndEnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::RoguelikeSelectAvatarAndEnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 229: range 0000000013735092-00000000137353AE
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#87}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::StartRogueEliteCellChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::StartRogueEliteCellChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::StartRogueEliteCellChallengeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:229 64 16 11 rsp_ptr:229";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#87}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::StartRogueEliteCellChallengeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::StartRogueEliteCellChallengeReq const>(
         (const std::shared_ptr<const proto::StartRogueEliteCellChallengeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      229);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::StartRogueEliteCellChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartRogueEliteCellChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::StartRogueEliteCellChallengeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::StartRogueEliteCellChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::StartRogueEliteCellChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::StartRogueEliteCellChallengeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::StartRogueEliteCellChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartRogueEliteCellChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onStartRogueEliteCellChallengeReq(this, v8, rsp_0);
    proto::StartRogueEliteCellChallengeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::StartRogueEliteCellChallengeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::StartRogueEliteCellChallengeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::StartRogueEliteCellChallengeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::StartRogueEliteCellChallengeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::StartRogueEliteCellChallengeRsp>::~shared_ptr((std::shared_ptr<proto::StartRogueEliteCellChallengeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::StartRogueEliteCellChallengeReq const>::~shared_ptr((std::shared_ptr<const proto::StartRogueEliteCellChallengeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 230: range 00000000137353B0-00000000137356CC
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#88}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::StartRogueNormalCellChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::StartRogueNormalCellChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::StartRogueNormalCellChallengeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:230 64 16 11 rsp_ptr:230";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#88}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::StartRogueNormalCellChallengeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::StartRogueNormalCellChallengeReq const>(
         (const std::shared_ptr<const proto::StartRogueNormalCellChallengeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      230);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::StartRogueNormalCellChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartRogueNormalCellChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::StartRogueNormalCellChallengeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::StartRogueNormalCellChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::StartRogueNormalCellChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::StartRogueNormalCellChallengeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::StartRogueNormalCellChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartRogueNormalCellChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onStartRogueNormalCellChallengeReq(this, v8, rsp_0);
    proto::StartRogueNormalCellChallengeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::StartRogueNormalCellChallengeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::StartRogueNormalCellChallengeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::StartRogueNormalCellChallengeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::StartRogueNormalCellChallengeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::StartRogueNormalCellChallengeRsp>::~shared_ptr((std::shared_ptr<proto::StartRogueNormalCellChallengeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::StartRogueNormalCellChallengeReq const>::~shared_ptr((std::shared_ptr<const proto::StartRogueNormalCellChallengeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 231: range 00000000137356CE-00000000137359EA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#89}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RogueHealAvatarsReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RogueHealAvatarsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RogueHealAvatarsRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:231 64 16 11 rsp_ptr:231";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#89}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RogueHealAvatarsReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RogueHealAvatarsReq const>(
         (const std::shared_ptr<const proto::RogueHealAvatarsReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      231);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RogueHealAvatarsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueHealAvatarsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RogueHealAvatarsRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RogueHealAvatarsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RogueHealAvatarsRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RogueHealAvatarsRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RogueHealAvatarsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueHealAvatarsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRogueHealAvatarsReq(this, v8, rsp_0);
    proto::RogueHealAvatarsRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RogueHealAvatarsRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RogueHealAvatarsRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RogueHealAvatarsRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RogueHealAvatarsRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RogueHealAvatarsRsp>::~shared_ptr((std::shared_ptr<proto::RogueHealAvatarsRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RogueHealAvatarsReq const>::~shared_ptr((std::shared_ptr<const proto::RogueHealAvatarsReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 232: range 00000000137359EC-0000000013735D08
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#90}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RogueResumeDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RogueResumeDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RogueResumeDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:232 64 16 11 rsp_ptr:232";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#90}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RogueResumeDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RogueResumeDungeonReq const>(
         (const std::shared_ptr<const proto::RogueResumeDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      232);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RogueResumeDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueResumeDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RogueResumeDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RogueResumeDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RogueResumeDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RogueResumeDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RogueResumeDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueResumeDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRogueResumeDungeonReq(this, v8, rsp_0);
    proto::RogueResumeDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RogueResumeDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RogueResumeDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RogueResumeDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RogueResumeDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RogueResumeDungeonRsp>::~shared_ptr((std::shared_ptr<proto::RogueResumeDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RogueResumeDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::RogueResumeDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 233: range 0000000013735D0A-0000000013736026
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#91}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RoguelikeGiveUpReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RoguelikeGiveUpRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RoguelikeGiveUpRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:233 64 16 11 rsp_ptr:233";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#91}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RoguelikeGiveUpReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RoguelikeGiveUpReq const>(
         (const std::shared_ptr<const proto::RoguelikeGiveUpReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      233);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RoguelikeGiveUpReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RoguelikeGiveUpReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RoguelikeGiveUpRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RoguelikeGiveUpRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RoguelikeGiveUpRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RoguelikeGiveUpRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RoguelikeGiveUpReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RoguelikeGiveUpReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRoguelikeGiveUpReq(this, v8, rsp_0);
    proto::RoguelikeGiveUpRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RoguelikeGiveUpRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RoguelikeGiveUpRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RoguelikeGiveUpRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RoguelikeGiveUpRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RoguelikeGiveUpRsp>::~shared_ptr((std::shared_ptr<proto::RoguelikeGiveUpRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RoguelikeGiveUpReq const>::~shared_ptr((std::shared_ptr<const proto::RoguelikeGiveUpReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 234: range 0000000013736028-0000000013736344
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#92}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RogueSwitchAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RogueSwitchAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RogueSwitchAvatarRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:234 64 16 11 rsp_ptr:234";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#92}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RogueSwitchAvatarReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RogueSwitchAvatarReq const>(
         (const std::shared_ptr<const proto::RogueSwitchAvatarReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      234);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RogueSwitchAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueSwitchAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RogueSwitchAvatarRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RogueSwitchAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RogueSwitchAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RogueSwitchAvatarRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RogueSwitchAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueSwitchAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRogueSwitchAvatarReq(this, v8, rsp_0);
    proto::RogueSwitchAvatarRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RogueSwitchAvatarRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RogueSwitchAvatarRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RogueSwitchAvatarRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RogueSwitchAvatarRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RogueSwitchAvatarRsp>::~shared_ptr((std::shared_ptr<proto::RogueSwitchAvatarRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RogueSwitchAvatarReq const>::~shared_ptr((std::shared_ptr<const proto::RogueSwitchAvatarReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 235: range 0000000013736346-0000000013736662
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#93}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RoguelikeTakeStageFirstPassRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RoguelikeTakeStageFirstPassRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RoguelikeTakeStageFirstPassRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:235 64 16 11 rsp_ptr:235";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#93}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RoguelikeTakeStageFirstPassRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RoguelikeTakeStageFirstPassRewardReq const>(
         (const std::shared_ptr<const proto::RoguelikeTakeStageFirstPassRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      235);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RoguelikeTakeStageFirstPassRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RoguelikeTakeStageFirstPassRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RoguelikeTakeStageFirstPassRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RoguelikeTakeStageFirstPassRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RoguelikeTakeStageFirstPassRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RoguelikeTakeStageFirstPassRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RoguelikeTakeStageFirstPassRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RoguelikeTakeStageFirstPassRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRoguelikeTakeStageFirstPassRewardReq(this, v8, rsp_0);
    proto::RoguelikeTakeStageFirstPassRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RoguelikeTakeStageFirstPassRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RoguelikeTakeStageFirstPassRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RoguelikeTakeStageFirstPassRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RoguelikeTakeStageFirstPassRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RoguelikeTakeStageFirstPassRewardRsp>::~shared_ptr((std::shared_ptr<proto::RoguelikeTakeStageFirstPassRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RoguelikeTakeStageFirstPassRewardReq const>::~shared_ptr((std::shared_ptr<const proto::RoguelikeTakeStageFirstPassRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 237: range 0000000013736664-0000000013736980
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#94}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::DigActivityChangeGadgetStateReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::DigActivityChangeGadgetStateRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::DigActivityChangeGadgetStateRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:237 64 16 11 rsp_ptr:237";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#94}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::DigActivityChangeGadgetStateReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::DigActivityChangeGadgetStateReq const>(
         (const std::shared_ptr<const proto::DigActivityChangeGadgetStateReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      237);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::DigActivityChangeGadgetStateReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DigActivityChangeGadgetStateReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::DigActivityChangeGadgetStateRsp>();
    rsp_0 = std::__shared_ptr_access<proto::DigActivityChangeGadgetStateRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::DigActivityChangeGadgetStateRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::DigActivityChangeGadgetStateRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::DigActivityChangeGadgetStateReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DigActivityChangeGadgetStateReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onDigActivityChangeGadgetStateReq(this, v8, rsp_0);
    proto::DigActivityChangeGadgetStateRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::DigActivityChangeGadgetStateRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::DigActivityChangeGadgetStateRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::DigActivityChangeGadgetStateRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::DigActivityChangeGadgetStateRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::DigActivityChangeGadgetStateRsp>::~shared_ptr((std::shared_ptr<proto::DigActivityChangeGadgetStateRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::DigActivityChangeGadgetStateReq const>::~shared_ptr((std::shared_ptr<const proto::DigActivityChangeGadgetStateReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 239: range 0000000013736982-0000000013736C9E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#95}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::WinterCampSetWishListReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::WinterCampSetWishListRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::WinterCampSetWishListRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:239 64 16 11 rsp_ptr:239";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#95}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampSetWishListReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::WinterCampSetWishListReq const>(
         (const std::shared_ptr<const proto::WinterCampSetWishListReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      239);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WinterCampSetWishListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampSetWishListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::WinterCampSetWishListRsp>();
    rsp_0 = std::__shared_ptr_access<proto::WinterCampSetWishListRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::WinterCampSetWishListRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::WinterCampSetWishListRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::WinterCampSetWishListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampSetWishListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onWinterCampSetWishListReq(this, v8, rsp_0);
    proto::WinterCampSetWishListRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::WinterCampSetWishListRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::WinterCampSetWishListRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::WinterCampSetWishListRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::WinterCampSetWishListRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::WinterCampSetWishListRsp>::~shared_ptr((std::shared_ptr<proto::WinterCampSetWishListRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::WinterCampSetWishListReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampSetWishListReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 240: range 0000000013736CA0-0000000013736FBC
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#96}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::WinterCampAcceptGiveItemReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::WinterCampAcceptGiveItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::WinterCampAcceptGiveItemRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:240 64 16 11 rsp_ptr:240";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#96}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampAcceptGiveItemReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::WinterCampAcceptGiveItemReq const>(
         (const std::shared_ptr<const proto::WinterCampAcceptGiveItemReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      240);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WinterCampAcceptGiveItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampAcceptGiveItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::WinterCampAcceptGiveItemRsp>();
    rsp_0 = std::__shared_ptr_access<proto::WinterCampAcceptGiveItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::WinterCampAcceptGiveItemRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::WinterCampAcceptGiveItemRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::WinterCampAcceptGiveItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampAcceptGiveItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onWinterCampAcceptGiveItemReq(this, v8, rsp_0);
    proto::WinterCampAcceptGiveItemRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::WinterCampAcceptGiveItemRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::WinterCampAcceptGiveItemRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::WinterCampAcceptGiveItemRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::WinterCampAcceptGiveItemRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::WinterCampAcceptGiveItemRsp>::~shared_ptr((std::shared_ptr<proto::WinterCampAcceptGiveItemRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::WinterCampAcceptGiveItemReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampAcceptGiveItemReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 241: range 0000000013736FBE-00000000137372DA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#97}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::WinterCampAcceptAllGiveItemReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::WinterCampAcceptAllGiveItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::WinterCampAcceptAllGiveItemRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:241 64 16 11 rsp_ptr:241";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#97}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampAcceptAllGiveItemReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::WinterCampAcceptAllGiveItemReq const>(
         (const std::shared_ptr<const proto::WinterCampAcceptAllGiveItemReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      241);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WinterCampAcceptAllGiveItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampAcceptAllGiveItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::WinterCampAcceptAllGiveItemRsp>();
    rsp_0 = std::__shared_ptr_access<proto::WinterCampAcceptAllGiveItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::WinterCampAcceptAllGiveItemRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::WinterCampAcceptAllGiveItemRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::WinterCampAcceptAllGiveItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampAcceptAllGiveItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onWinterCampAcceptAllGiveItemReq(this, v8, rsp_0);
    proto::WinterCampAcceptAllGiveItemRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::WinterCampAcceptAllGiveItemRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::WinterCampAcceptAllGiveItemRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::WinterCampAcceptAllGiveItemRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::WinterCampAcceptAllGiveItemRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::WinterCampAcceptAllGiveItemRsp>::~shared_ptr((std::shared_ptr<proto::WinterCampAcceptAllGiveItemRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::WinterCampAcceptAllGiveItemReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampAcceptAllGiveItemReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 242: range 00000000137372DC-00000000137375F8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#98}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::WinterCampGetCanGiveFriendItemReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::WinterCampGetCanGiveFriendItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::WinterCampGetCanGiveFriendItemRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:242 64 16 11 rsp_ptr:242";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#98}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampGetCanGiveFriendItemReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::WinterCampGetCanGiveFriendItemReq const>(
         (const std::shared_ptr<const proto::WinterCampGetCanGiveFriendItemReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      242);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WinterCampGetCanGiveFriendItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampGetCanGiveFriendItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::WinterCampGetCanGiveFriendItemRsp>();
    rsp_0 = std::__shared_ptr_access<proto::WinterCampGetCanGiveFriendItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::WinterCampGetCanGiveFriendItemRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::WinterCampGetCanGiveFriendItemRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::WinterCampGetCanGiveFriendItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampGetCanGiveFriendItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onWinterCampGetCanGiveFriendItemReq(this, v8, rsp_0);
    proto::WinterCampGetCanGiveFriendItemRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::WinterCampGetCanGiveFriendItemRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::WinterCampGetCanGiveFriendItemRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::WinterCampGetCanGiveFriendItemRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::WinterCampGetCanGiveFriendItemRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::WinterCampGetCanGiveFriendItemRsp>::~shared_ptr((std::shared_ptr<proto::WinterCampGetCanGiveFriendItemRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::WinterCampGetCanGiveFriendItemReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampGetCanGiveFriendItemReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 243: range 00000000137375FA-0000000013737916
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#99}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::WinterCampEditSnowmanCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::WinterCampEditSnowmanCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::WinterCampEditSnowmanCombinationRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:243 64 16 11 rsp_ptr:243";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#99}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampEditSnowmanCombinationReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::WinterCampEditSnowmanCombinationReq const>(
         (const std::shared_ptr<const proto::WinterCampEditSnowmanCombinationReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      243);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WinterCampEditSnowmanCombinationReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampEditSnowmanCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::WinterCampEditSnowmanCombinationRsp>();
    rsp_0 = std::__shared_ptr_access<proto::WinterCampEditSnowmanCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::WinterCampEditSnowmanCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::WinterCampEditSnowmanCombinationRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::WinterCampEditSnowmanCombinationReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampEditSnowmanCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onWinterCampEditSnowmanCombinationReq(this, v8, rsp_0);
    proto::WinterCampEditSnowmanCombinationRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::WinterCampEditSnowmanCombinationRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::WinterCampEditSnowmanCombinationRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::WinterCampEditSnowmanCombinationRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::WinterCampEditSnowmanCombinationRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::WinterCampEditSnowmanCombinationRsp>::~shared_ptr((std::shared_ptr<proto::WinterCampEditSnowmanCombinationRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::WinterCampEditSnowmanCombinationReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampEditSnowmanCombinationReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 244: range 0000000013737918-0000000013737C34
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#100}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::WinterCampTakeExploreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::WinterCampTakeExploreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::WinterCampTakeExploreRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:244 64 16 11 rsp_ptr:244";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#100}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampTakeExploreRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::WinterCampTakeExploreRewardReq const>(
         (const std::shared_ptr<const proto::WinterCampTakeExploreRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      244);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WinterCampTakeExploreRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampTakeExploreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::WinterCampTakeExploreRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::WinterCampTakeExploreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::WinterCampTakeExploreRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::WinterCampTakeExploreRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::WinterCampTakeExploreRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampTakeExploreRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onWinterCampTakeExploreRewardReq(this, v8, rsp_0);
    proto::WinterCampTakeExploreRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::WinterCampTakeExploreRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::WinterCampTakeExploreRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::WinterCampTakeExploreRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::WinterCampTakeExploreRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::WinterCampTakeExploreRewardRsp>::~shared_ptr((std::shared_ptr<proto::WinterCampTakeExploreRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::WinterCampTakeExploreRewardReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampTakeExploreRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 245: range 0000000013737C36-0000000013737F52
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#101}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::WinterCampTakeBattleRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::WinterCampTakeBattleRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::WinterCampTakeBattleRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:245 64 16 11 rsp_ptr:245";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#101}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampTakeBattleRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::WinterCampTakeBattleRewardReq const>(
         (const std::shared_ptr<const proto::WinterCampTakeBattleRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      245);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WinterCampTakeBattleRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampTakeBattleRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::WinterCampTakeBattleRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::WinterCampTakeBattleRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::WinterCampTakeBattleRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::WinterCampTakeBattleRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::WinterCampTakeBattleRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampTakeBattleRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onWinterCampTakeBattleRewardReq(this, v8, rsp_0);
    proto::WinterCampTakeBattleRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::WinterCampTakeBattleRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::WinterCampTakeBattleRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::WinterCampTakeBattleRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::WinterCampTakeBattleRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::WinterCampTakeBattleRewardRsp>::~shared_ptr((std::shared_ptr<proto::WinterCampTakeBattleRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::WinterCampTakeBattleRewardReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampTakeBattleRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 246: range 0000000013737F54-0000000013738270
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#102}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::WinterCampTriathlonRestartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::WinterCampTriathlonRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::WinterCampTriathlonRestartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:246 64 16 11 rsp_ptr:246";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#102}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampTriathlonRestartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::WinterCampTriathlonRestartReq const>(
         (const std::shared_ptr<const proto::WinterCampTriathlonRestartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      246);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WinterCampTriathlonRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampTriathlonRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::WinterCampTriathlonRestartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::WinterCampTriathlonRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::WinterCampTriathlonRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::WinterCampTriathlonRestartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::WinterCampTriathlonRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampTriathlonRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onWinterCampTriathlonRestartReq(this, v8, rsp_0);
    proto::WinterCampTriathlonRestartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::WinterCampTriathlonRestartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::WinterCampTriathlonRestartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::WinterCampTriathlonRestartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::WinterCampTriathlonRestartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::WinterCampTriathlonRestartRsp>::~shared_ptr((std::shared_ptr<proto::WinterCampTriathlonRestartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::WinterCampTriathlonRestartReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampTriathlonRestartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 253: range 0000000013738272-000000001373858E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#103}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PotionResetChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PotionResetChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PotionResetChallengeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:253 64 16 11 rsp_ptr:253";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#103}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PotionResetChallengeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PotionResetChallengeReq const>(
         (const std::shared_ptr<const proto::PotionResetChallengeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      253);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PotionResetChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PotionResetChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PotionResetChallengeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PotionResetChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PotionResetChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PotionResetChallengeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PotionResetChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PotionResetChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPotionResetChallengeReq(this, v8, rsp_0);
    proto::PotionResetChallengeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PotionResetChallengeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PotionResetChallengeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PotionResetChallengeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PotionResetChallengeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PotionResetChallengeRsp>::~shared_ptr((std::shared_ptr<proto::PotionResetChallengeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PotionResetChallengeReq const>::~shared_ptr((std::shared_ptr<const proto::PotionResetChallengeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 254: range 0000000013738590-00000000137388AC
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#104}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PotionEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PotionEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PotionEnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:254 64 16 11 rsp_ptr:254";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#104}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PotionEnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PotionEnterDungeonReq const>(
         (const std::shared_ptr<const proto::PotionEnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      254);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PotionEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PotionEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PotionEnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PotionEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PotionEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PotionEnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PotionEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PotionEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPotionEnterDungeonReq(this, v8, rsp_0);
    proto::PotionEnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PotionEnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PotionEnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PotionEnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PotionEnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PotionEnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::PotionEnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PotionEnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::PotionEnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 255: range 00000000137388AE-0000000013738BCA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#105}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PotionSaveDungeonResultReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PotionSaveDungeonResultRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PotionSaveDungeonResultRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:255 64 16 11 rsp_ptr:255";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#105}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PotionSaveDungeonResultReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PotionSaveDungeonResultReq const>(
         (const std::shared_ptr<const proto::PotionSaveDungeonResultReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      255);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PotionSaveDungeonResultReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PotionSaveDungeonResultReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PotionSaveDungeonResultRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PotionSaveDungeonResultRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PotionSaveDungeonResultRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PotionSaveDungeonResultRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PotionSaveDungeonResultReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PotionSaveDungeonResultReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPotionSaveDungeonResultReq(this, v8, rsp_0);
    proto::PotionSaveDungeonResultRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PotionSaveDungeonResultRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PotionSaveDungeonResultRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PotionSaveDungeonResultRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PotionSaveDungeonResultRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PotionSaveDungeonResultRsp>::~shared_ptr((std::shared_ptr<proto::PotionSaveDungeonResultRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PotionSaveDungeonResultReq const>::~shared_ptr((std::shared_ptr<const proto::PotionSaveDungeonResultReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 256: range 0000000013738BCC-0000000013738EE8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#106}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PotionRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PotionRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PotionRestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:256 64 16 11 rsp_ptr:256";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#106}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PotionRestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PotionRestartDungeonReq const>(
         (const std::shared_ptr<const proto::PotionRestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      256);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PotionRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PotionRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PotionRestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PotionRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PotionRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PotionRestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PotionRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PotionRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPotionRestartDungeonReq(this, v8, rsp_0);
    proto::PotionRestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PotionRestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PotionRestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PotionRestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PotionRestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PotionRestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::PotionRestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PotionRestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::PotionRestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 258: range 0000000013738EEA-0000000013739206
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#107}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FinishLanternProjectionReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FinishLanternProjectionRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FinishLanternProjectionRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:258 64 16 11 rsp_ptr:258";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#107}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FinishLanternProjectionReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FinishLanternProjectionReq const>(
         (const std::shared_ptr<const proto::FinishLanternProjectionReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      258);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FinishLanternProjectionReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FinishLanternProjectionReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FinishLanternProjectionRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FinishLanternProjectionRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FinishLanternProjectionRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FinishLanternProjectionRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FinishLanternProjectionReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FinishLanternProjectionReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFinishLanternProjectionReq(this, v8, rsp_0);
    proto::FinishLanternProjectionRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FinishLanternProjectionRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FinishLanternProjectionRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FinishLanternProjectionRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FinishLanternProjectionRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FinishLanternProjectionRsp>::~shared_ptr((std::shared_ptr<proto::FinishLanternProjectionRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FinishLanternProjectionReq const>::~shared_ptr((std::shared_ptr<const proto::FinishLanternProjectionReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 259: range 0000000013739208-0000000013739524
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#108}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ViewLanternProjectionTipsReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ViewLanternProjectionTipsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ViewLanternProjectionTipsRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:259 64 16 11 rsp_ptr:259";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#108}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ViewLanternProjectionTipsReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ViewLanternProjectionTipsReq const>(
         (const std::shared_ptr<const proto::ViewLanternProjectionTipsReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      259);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ViewLanternProjectionTipsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ViewLanternProjectionTipsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ViewLanternProjectionTipsRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ViewLanternProjectionTipsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ViewLanternProjectionTipsRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ViewLanternProjectionTipsRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ViewLanternProjectionTipsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ViewLanternProjectionTipsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onViewLanternProjectionTipsReq(this, v8, rsp_0);
    proto::ViewLanternProjectionTipsRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ViewLanternProjectionTipsRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ViewLanternProjectionTipsRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ViewLanternProjectionTipsRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ViewLanternProjectionTipsRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ViewLanternProjectionTipsRsp>::~shared_ptr((std::shared_ptr<proto::ViewLanternProjectionTipsRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ViewLanternProjectionTipsReq const>::~shared_ptr((std::shared_ptr<const proto::ViewLanternProjectionTipsReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 260: range 0000000013739526-0000000013739842
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#109}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ViewLanternProjectionLevelTipsReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ViewLanternProjectionLevelTipsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ViewLanternProjectionLevelTipsRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:260 64 16 11 rsp_ptr:260";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#109}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ViewLanternProjectionLevelTipsReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ViewLanternProjectionLevelTipsReq const>(
         (const std::shared_ptr<const proto::ViewLanternProjectionLevelTipsReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      260);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ViewLanternProjectionLevelTipsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ViewLanternProjectionLevelTipsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ViewLanternProjectionLevelTipsRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ViewLanternProjectionLevelTipsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ViewLanternProjectionLevelTipsRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ViewLanternProjectionLevelTipsRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ViewLanternProjectionLevelTipsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ViewLanternProjectionLevelTipsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onViewLanternProjectionLevelTipsReq(this, v8, rsp_0);
    proto::ViewLanternProjectionLevelTipsRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ViewLanternProjectionLevelTipsRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ViewLanternProjectionLevelTipsRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ViewLanternProjectionLevelTipsRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ViewLanternProjectionLevelTipsRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ViewLanternProjectionLevelTipsRsp>::~shared_ptr((std::shared_ptr<proto::ViewLanternProjectionLevelTipsRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ViewLanternProjectionLevelTipsReq const>::~shared_ptr((std::shared_ptr<const proto::ViewLanternProjectionLevelTipsReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 261: range 0000000013739844-0000000013739B60
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#110}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LanternRiteTakeSkinRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LanternRiteTakeSkinRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LanternRiteTakeSkinRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:261 64 16 11 rsp_ptr:261";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#110}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LanternRiteTakeSkinRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LanternRiteTakeSkinRewardReq const>(
         (const std::shared_ptr<const proto::LanternRiteTakeSkinRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      261);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LanternRiteTakeSkinRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanternRiteTakeSkinRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LanternRiteTakeSkinRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LanternRiteTakeSkinRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LanternRiteTakeSkinRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LanternRiteTakeSkinRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LanternRiteTakeSkinRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanternRiteTakeSkinRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLanternRiteTakeSkinRewardReq(this, v8, rsp_0);
    proto::LanternRiteTakeSkinRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LanternRiteTakeSkinRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LanternRiteTakeSkinRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LanternRiteTakeSkinRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LanternRiteTakeSkinRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LanternRiteTakeSkinRewardRsp>::~shared_ptr((std::shared_ptr<proto::LanternRiteTakeSkinRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LanternRiteTakeSkinRewardReq const>::~shared_ptr((std::shared_ptr<const proto::LanternRiteTakeSkinRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 262: range 0000000013739B62-0000000013739E7E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#111}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SalvagePreventRestartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SalvagePreventRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SalvagePreventRestartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:262 64 16 11 rsp_ptr:262";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#111}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SalvagePreventRestartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SalvagePreventRestartReq const>(
         (const std::shared_ptr<const proto::SalvagePreventRestartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      262);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SalvagePreventRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalvagePreventRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SalvagePreventRestartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SalvagePreventRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SalvagePreventRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SalvagePreventRestartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SalvagePreventRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalvagePreventRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSalvagePreventRestartReq(this, v8, rsp_0);
    proto::SalvagePreventRestartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SalvagePreventRestartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SalvagePreventRestartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SalvagePreventRestartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SalvagePreventRestartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SalvagePreventRestartRsp>::~shared_ptr((std::shared_ptr<proto::SalvagePreventRestartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SalvagePreventRestartReq const>::~shared_ptr((std::shared_ptr<const proto::SalvagePreventRestartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 263: range 0000000013739E80-000000001373A19C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#112}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SalvageEscortRestartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SalvageEscortRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SalvageEscortRestartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:263 64 16 11 rsp_ptr:263";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#112}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SalvageEscortRestartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SalvageEscortRestartReq const>(
         (const std::shared_ptr<const proto::SalvageEscortRestartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      263);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SalvageEscortRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalvageEscortRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SalvageEscortRestartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SalvageEscortRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SalvageEscortRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SalvageEscortRestartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SalvageEscortRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SalvageEscortRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSalvageEscortRestartReq(this, v8, rsp_0);
    proto::SalvageEscortRestartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SalvageEscortRestartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SalvageEscortRestartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SalvageEscortRestartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SalvageEscortRestartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SalvageEscortRestartRsp>::~shared_ptr((std::shared_ptr<proto::SalvageEscortRestartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SalvageEscortRestartReq const>::~shared_ptr((std::shared_ptr<const proto::SalvageEscortRestartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 264: range 000000001373A19E-000000001373A4BA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#113}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LanternRiteStartFireworksReformReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LanternRiteStartFireworksReformRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LanternRiteStartFireworksReformRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:264 64 16 11 rsp_ptr:264";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#113}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LanternRiteStartFireworksReformReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LanternRiteStartFireworksReformReq const>(
         (const std::shared_ptr<const proto::LanternRiteStartFireworksReformReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      264);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LanternRiteStartFireworksReformReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanternRiteStartFireworksReformReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LanternRiteStartFireworksReformRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LanternRiteStartFireworksReformRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LanternRiteStartFireworksReformRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LanternRiteStartFireworksReformRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LanternRiteStartFireworksReformReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanternRiteStartFireworksReformReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLanternRiteStartFireworksReformReq(this, v8, rsp_0);
    proto::LanternRiteStartFireworksReformRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LanternRiteStartFireworksReformRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LanternRiteStartFireworksReformRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LanternRiteStartFireworksReformRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LanternRiteStartFireworksReformRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LanternRiteStartFireworksReformRsp>::~shared_ptr((std::shared_ptr<proto::LanternRiteStartFireworksReformRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LanternRiteStartFireworksReformReq const>::~shared_ptr((std::shared_ptr<const proto::LanternRiteStartFireworksReformReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 265: range 000000001373A4BC-000000001373A7D8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#114}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LanternRiteDoFireworksReformReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LanternRiteDoFireworksReformRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LanternRiteDoFireworksReformRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:265 64 16 11 rsp_ptr:265";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#114}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LanternRiteDoFireworksReformReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LanternRiteDoFireworksReformReq const>(
         (const std::shared_ptr<const proto::LanternRiteDoFireworksReformReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      265);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LanternRiteDoFireworksReformReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanternRiteDoFireworksReformReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LanternRiteDoFireworksReformRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LanternRiteDoFireworksReformRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LanternRiteDoFireworksReformRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LanternRiteDoFireworksReformRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LanternRiteDoFireworksReformReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanternRiteDoFireworksReformReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLanternRiteDoFireworksReformReq(this, v8, rsp_0);
    proto::LanternRiteDoFireworksReformRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LanternRiteDoFireworksReformRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LanternRiteDoFireworksReformRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LanternRiteDoFireworksReformRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LanternRiteDoFireworksReformRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LanternRiteDoFireworksReformRsp>::~shared_ptr((std::shared_ptr<proto::LanternRiteDoFireworksReformRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LanternRiteDoFireworksReformReq const>::~shared_ptr((std::shared_ptr<const proto::LanternRiteDoFireworksReformReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 266: range 000000001373A7DA-000000001373AAF6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#115}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LanternRiteEndFireworksReformReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LanternRiteEndFireworksReformRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LanternRiteEndFireworksReformRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:266 64 16 11 rsp_ptr:266";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#115}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LanternRiteEndFireworksReformReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LanternRiteEndFireworksReformReq const>(
         (const std::shared_ptr<const proto::LanternRiteEndFireworksReformReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      266);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LanternRiteEndFireworksReformReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanternRiteEndFireworksReformReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LanternRiteEndFireworksReformRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LanternRiteEndFireworksReformRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LanternRiteEndFireworksReformRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LanternRiteEndFireworksReformRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LanternRiteEndFireworksReformReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanternRiteEndFireworksReformReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLanternRiteEndFireworksReformReq(this, v8, rsp_0);
    proto::LanternRiteEndFireworksReformRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LanternRiteEndFireworksReformRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LanternRiteEndFireworksReformRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LanternRiteEndFireworksReformRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LanternRiteEndFireworksReformRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LanternRiteEndFireworksReformRsp>::~shared_ptr((std::shared_ptr<proto::LanternRiteEndFireworksReformRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LanternRiteEndFireworksReformReq const>::~shared_ptr((std::shared_ptr<const proto::LanternRiteEndFireworksReformReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 267: range 000000001373AAF8-000000001373AE14
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#116}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::UpdateSalvageBundleMarkReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::UpdateSalvageBundleMarkRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::UpdateSalvageBundleMarkRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:267 64 16 11 rsp_ptr:267";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#116}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::UpdateSalvageBundleMarkReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::UpdateSalvageBundleMarkReq const>(
         (const std::shared_ptr<const proto::UpdateSalvageBundleMarkReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      267);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::UpdateSalvageBundleMarkReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::UpdateSalvageBundleMarkReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::UpdateSalvageBundleMarkRsp>();
    rsp_0 = std::__shared_ptr_access<proto::UpdateSalvageBundleMarkRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::UpdateSalvageBundleMarkRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::UpdateSalvageBundleMarkRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::UpdateSalvageBundleMarkReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::UpdateSalvageBundleMarkReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onUpdateSalvageBundleMarkReq(this, v8, rsp_0);
    proto::UpdateSalvageBundleMarkRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::UpdateSalvageBundleMarkRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::UpdateSalvageBundleMarkRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::UpdateSalvageBundleMarkRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::UpdateSalvageBundleMarkRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::UpdateSalvageBundleMarkRsp>::~shared_ptr((std::shared_ptr<proto::UpdateSalvageBundleMarkRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::UpdateSalvageBundleMarkReq const>::~shared_ptr((std::shared_ptr<const proto::UpdateSalvageBundleMarkReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 269: range 000000001373AE16-000000001373B132
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#117}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityBannerClearReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivityBannerClearRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivityBannerClearRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:269 64 16 11 rsp_ptr:269";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#117}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityBannerClearReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityBannerClearReq const>(
         (const std::shared_ptr<const proto::ActivityBannerClearReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      269);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivityBannerClearReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityBannerClearReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivityBannerClearRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivityBannerClearRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivityBannerClearRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivityBannerClearRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivityBannerClearReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityBannerClearReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivityBannerClearReq(this, v8, rsp_0);
    proto::ActivityBannerClearRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivityBannerClearRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivityBannerClearRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivityBannerClearRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivityBannerClearRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivityBannerClearRsp>::~shared_ptr((std::shared_ptr<proto::ActivityBannerClearRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivityBannerClearReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityBannerClearReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 271: range 000000001373B134-000000001373B450
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#118}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MichiaeMatsuriInteractStatueReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MichiaeMatsuriInteractStatueRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MichiaeMatsuriInteractStatueRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:271 64 16 11 rsp_ptr:271";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#118}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MichiaeMatsuriInteractStatueReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MichiaeMatsuriInteractStatueReq const>(
         (const std::shared_ptr<const proto::MichiaeMatsuriInteractStatueReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      271);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MichiaeMatsuriInteractStatueReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MichiaeMatsuriInteractStatueReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MichiaeMatsuriInteractStatueRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MichiaeMatsuriInteractStatueRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MichiaeMatsuriInteractStatueRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MichiaeMatsuriInteractStatueRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MichiaeMatsuriInteractStatueReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MichiaeMatsuriInteractStatueReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMichiaeMatsuriInteractStatueReq(this, v8, rsp_0);
    proto::MichiaeMatsuriInteractStatueRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MichiaeMatsuriInteractStatueRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MichiaeMatsuriInteractStatueRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MichiaeMatsuriInteractStatueRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MichiaeMatsuriInteractStatueRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MichiaeMatsuriInteractStatueRsp>::~shared_ptr((std::shared_ptr<proto::MichiaeMatsuriInteractStatueRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MichiaeMatsuriInteractStatueReq const>::~shared_ptr((std::shared_ptr<const proto::MichiaeMatsuriInteractStatueReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 272: range 000000001373B452-000000001373B76E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#119}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MichiaeMatsuriStartDarkChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MichiaeMatsuriStartDarkChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MichiaeMatsuriStartDarkChallengeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:272 64 16 11 rsp_ptr:272";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#119}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MichiaeMatsuriStartDarkChallengeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MichiaeMatsuriStartDarkChallengeReq const>(
         (const std::shared_ptr<const proto::MichiaeMatsuriStartDarkChallengeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      272);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MichiaeMatsuriStartDarkChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MichiaeMatsuriStartDarkChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MichiaeMatsuriStartDarkChallengeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MichiaeMatsuriStartDarkChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MichiaeMatsuriStartDarkChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MichiaeMatsuriStartDarkChallengeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MichiaeMatsuriStartDarkChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MichiaeMatsuriStartDarkChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMichiaeMatsuriStartDarkChallengeReq(this, v8, rsp_0);
    proto::MichiaeMatsuriStartDarkChallengeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MichiaeMatsuriStartDarkChallengeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MichiaeMatsuriStartDarkChallengeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MichiaeMatsuriStartDarkChallengeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MichiaeMatsuriStartDarkChallengeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MichiaeMatsuriStartDarkChallengeRsp>::~shared_ptr((std::shared_ptr<proto::MichiaeMatsuriStartDarkChallengeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MichiaeMatsuriStartDarkChallengeReq const>::~shared_ptr((std::shared_ptr<const proto::MichiaeMatsuriStartDarkChallengeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 273: range 000000001373B770-000000001373BA8C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#120}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MichiaeMatsuriUnlockCrystalSkillReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MichiaeMatsuriUnlockCrystalSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MichiaeMatsuriUnlockCrystalSkillRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:273 64 16 11 rsp_ptr:273";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#120}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MichiaeMatsuriUnlockCrystalSkillReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MichiaeMatsuriUnlockCrystalSkillReq const>(
         (const std::shared_ptr<const proto::MichiaeMatsuriUnlockCrystalSkillReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      273);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MichiaeMatsuriUnlockCrystalSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MichiaeMatsuriUnlockCrystalSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MichiaeMatsuriUnlockCrystalSkillRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MichiaeMatsuriUnlockCrystalSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MichiaeMatsuriUnlockCrystalSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MichiaeMatsuriUnlockCrystalSkillRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MichiaeMatsuriUnlockCrystalSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MichiaeMatsuriUnlockCrystalSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMichiaeMatsuriUnlockCrystalSkillReq(this, v8, rsp_0);
    proto::MichiaeMatsuriUnlockCrystalSkillRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MichiaeMatsuriUnlockCrystalSkillRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MichiaeMatsuriUnlockCrystalSkillRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MichiaeMatsuriUnlockCrystalSkillRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MichiaeMatsuriUnlockCrystalSkillRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MichiaeMatsuriUnlockCrystalSkillRsp>::~shared_ptr((std::shared_ptr<proto::MichiaeMatsuriUnlockCrystalSkillRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MichiaeMatsuriUnlockCrystalSkillReq const>::~shared_ptr((std::shared_ptr<const proto::MichiaeMatsuriUnlockCrystalSkillReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 274: range 000000001373BA8E-000000001373BDAA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#121}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MichiaeMatsuriStartBossChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MichiaeMatsuriStartBossChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MichiaeMatsuriStartBossChallengeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:274 64 16 11 rsp_ptr:274";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#121}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MichiaeMatsuriStartBossChallengeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MichiaeMatsuriStartBossChallengeReq const>(
         (const std::shared_ptr<const proto::MichiaeMatsuriStartBossChallengeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      274);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MichiaeMatsuriStartBossChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MichiaeMatsuriStartBossChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MichiaeMatsuriStartBossChallengeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MichiaeMatsuriStartBossChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MichiaeMatsuriStartBossChallengeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MichiaeMatsuriStartBossChallengeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MichiaeMatsuriStartBossChallengeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MichiaeMatsuriStartBossChallengeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMichiaeMatsuriStartBossChallengeReq(this, v8, rsp_0);
    proto::MichiaeMatsuriStartBossChallengeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MichiaeMatsuriStartBossChallengeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MichiaeMatsuriStartBossChallengeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MichiaeMatsuriStartBossChallengeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MichiaeMatsuriStartBossChallengeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MichiaeMatsuriStartBossChallengeRsp>::~shared_ptr((std::shared_ptr<proto::MichiaeMatsuriStartBossChallengeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MichiaeMatsuriStartBossChallengeReq const>::~shared_ptr((std::shared_ptr<const proto::MichiaeMatsuriStartBossChallengeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 276: range 000000001373BDAC-000000001373C0C8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#122}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BartenderCompleteOrderReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BartenderCompleteOrderRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BartenderCompleteOrderRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:276 64 16 11 rsp_ptr:276";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#122}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BartenderCompleteOrderReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BartenderCompleteOrderReq const>(
         (const std::shared_ptr<const proto::BartenderCompleteOrderReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      276);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BartenderCompleteOrderReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderCompleteOrderReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BartenderCompleteOrderRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BartenderCompleteOrderRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BartenderCompleteOrderRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BartenderCompleteOrderRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BartenderCompleteOrderReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderCompleteOrderReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBartenderCompleteOrderReq(this, v8, rsp_0);
    proto::BartenderCompleteOrderRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BartenderCompleteOrderRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BartenderCompleteOrderRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BartenderCompleteOrderRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BartenderCompleteOrderRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BartenderCompleteOrderRsp>::~shared_ptr((std::shared_ptr<proto::BartenderCompleteOrderRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BartenderCompleteOrderReq const>::~shared_ptr((std::shared_ptr<const proto::BartenderCompleteOrderReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 277: range 000000001373C0CA-000000001373C3E6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#123}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BartenderCancelOrderReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BartenderCancelOrderRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BartenderCancelOrderRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:277 64 16 11 rsp_ptr:277";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#123}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BartenderCancelOrderReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BartenderCancelOrderReq const>(
         (const std::shared_ptr<const proto::BartenderCancelOrderReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      277);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BartenderCancelOrderReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderCancelOrderReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BartenderCancelOrderRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BartenderCancelOrderRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BartenderCancelOrderRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BartenderCancelOrderRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BartenderCancelOrderReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderCancelOrderReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBartenderCancelOrderReq(this, v8, rsp_0);
    proto::BartenderCancelOrderRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BartenderCancelOrderRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BartenderCancelOrderRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BartenderCancelOrderRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BartenderCancelOrderRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BartenderCancelOrderRsp>::~shared_ptr((std::shared_ptr<proto::BartenderCancelOrderRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BartenderCancelOrderReq const>::~shared_ptr((std::shared_ptr<const proto::BartenderCancelOrderReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 278: range 000000001373C3E8-000000001373C704
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#124}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BartenderGetFormulaReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BartenderGetFormulaRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BartenderGetFormulaRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:278 64 16 11 rsp_ptr:278";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#124}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BartenderGetFormulaReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BartenderGetFormulaReq const>(
         (const std::shared_ptr<const proto::BartenderGetFormulaReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      278);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BartenderGetFormulaReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderGetFormulaReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BartenderGetFormulaRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BartenderGetFormulaRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BartenderGetFormulaRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BartenderGetFormulaRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BartenderGetFormulaReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderGetFormulaReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBartenderGetFormulaReq(this, v8, rsp_0);
    proto::BartenderGetFormulaRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BartenderGetFormulaRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BartenderGetFormulaRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BartenderGetFormulaRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BartenderGetFormulaRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BartenderGetFormulaRsp>::~shared_ptr((std::shared_ptr<proto::BartenderGetFormulaRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BartenderGetFormulaReq const>::~shared_ptr((std::shared_ptr<const proto::BartenderGetFormulaReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 279: range 000000001373C706-000000001373CA22
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#125}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BartenderStartLevelReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BartenderStartLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BartenderStartLevelRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:279 64 16 11 rsp_ptr:279";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#125}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BartenderStartLevelReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BartenderStartLevelReq const>(
         (const std::shared_ptr<const proto::BartenderStartLevelReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      279);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BartenderStartLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderStartLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BartenderStartLevelRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BartenderStartLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BartenderStartLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BartenderStartLevelRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BartenderStartLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderStartLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBartenderStartLevelReq(this, v8, rsp_0);
    proto::BartenderStartLevelRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BartenderStartLevelRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BartenderStartLevelRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BartenderStartLevelRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BartenderStartLevelRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BartenderStartLevelRsp>::~shared_ptr((std::shared_ptr<proto::BartenderStartLevelRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BartenderStartLevelReq const>::~shared_ptr((std::shared_ptr<const proto::BartenderStartLevelReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 280: range 000000001373CA24-000000001373CD40
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#126}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BartenderCancelLevelReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BartenderCancelLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BartenderCancelLevelRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:280 64 16 11 rsp_ptr:280";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#126}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BartenderCancelLevelReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BartenderCancelLevelReq const>(
         (const std::shared_ptr<const proto::BartenderCancelLevelReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      280);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BartenderCancelLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderCancelLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BartenderCancelLevelRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BartenderCancelLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BartenderCancelLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BartenderCancelLevelRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BartenderCancelLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderCancelLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBartenderCancelLevelReq(this, v8, rsp_0);
    proto::BartenderCancelLevelRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BartenderCancelLevelRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BartenderCancelLevelRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BartenderCancelLevelRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BartenderCancelLevelRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BartenderCancelLevelRsp>::~shared_ptr((std::shared_ptr<proto::BartenderCancelLevelRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BartenderCancelLevelReq const>::~shared_ptr((std::shared_ptr<const proto::BartenderCancelLevelReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 281: range 000000001373CD42-000000001373D05E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#127}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BartenderFinishLevelReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BartenderFinishLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BartenderFinishLevelRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:281 64 16 11 rsp_ptr:281";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#127}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BartenderFinishLevelReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BartenderFinishLevelReq const>(
         (const std::shared_ptr<const proto::BartenderFinishLevelReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      281);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BartenderFinishLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderFinishLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BartenderFinishLevelRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BartenderFinishLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BartenderFinishLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BartenderFinishLevelRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BartenderFinishLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BartenderFinishLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBartenderFinishLevelReq(this, v8, rsp_0);
    proto::BartenderFinishLevelRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BartenderFinishLevelRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BartenderFinishLevelRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BartenderFinishLevelRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BartenderFinishLevelRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BartenderFinishLevelRsp>::~shared_ptr((std::shared_ptr<proto::BartenderFinishLevelRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BartenderFinishLevelReq const>::~shared_ptr((std::shared_ptr<const proto::BartenderFinishLevelReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 283: range 000000001373D060-000000001373D37C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#128}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::QuickOpenActivityReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::QuickOpenActivityRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::QuickOpenActivityRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:283 64 16 11 rsp_ptr:283";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#128}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::QuickOpenActivityReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::QuickOpenActivityReq const>(
         (const std::shared_ptr<const proto::QuickOpenActivityReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      283);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::QuickOpenActivityReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::QuickOpenActivityReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::QuickOpenActivityRsp>();
    rsp_0 = std::__shared_ptr_access<proto::QuickOpenActivityRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::QuickOpenActivityRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::QuickOpenActivityRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::QuickOpenActivityReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::QuickOpenActivityReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onQuickOpenActivityReq(this, v8, rsp_0);
    proto::QuickOpenActivityRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::QuickOpenActivityRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::QuickOpenActivityRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::QuickOpenActivityRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::QuickOpenActivityRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::QuickOpenActivityRsp>::~shared_ptr((std::shared_ptr<proto::QuickOpenActivityRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::QuickOpenActivityReq const>::~shared_ptr((std::shared_ptr<const proto::QuickOpenActivityReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 285: range 000000001373D37E-000000001373D69A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#129}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::CrystalLinkEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::CrystalLinkEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::CrystalLinkEnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:285 64 16 11 rsp_ptr:285";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#129}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::CrystalLinkEnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::CrystalLinkEnterDungeonReq const>(
         (const std::shared_ptr<const proto::CrystalLinkEnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      285);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::CrystalLinkEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CrystalLinkEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::CrystalLinkEnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::CrystalLinkEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::CrystalLinkEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::CrystalLinkEnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::CrystalLinkEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CrystalLinkEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onCrystalLinkEnterDungeonReq(this, v8, rsp_0);
    proto::CrystalLinkEnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::CrystalLinkEnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::CrystalLinkEnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::CrystalLinkEnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::CrystalLinkEnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::CrystalLinkEnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::CrystalLinkEnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::CrystalLinkEnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::CrystalLinkEnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 286: range 000000001373D69C-000000001373D9B8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#130}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::CrystalLinkRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::CrystalLinkRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::CrystalLinkRestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:286 64 16 11 rsp_ptr:286";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#130}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::CrystalLinkRestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::CrystalLinkRestartDungeonReq const>(
         (const std::shared_ptr<const proto::CrystalLinkRestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      286);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::CrystalLinkRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CrystalLinkRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::CrystalLinkRestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::CrystalLinkRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::CrystalLinkRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::CrystalLinkRestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::CrystalLinkRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CrystalLinkRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onCrystalLinkRestartDungeonReq(this, v8, rsp_0);
    proto::CrystalLinkRestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::CrystalLinkRestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::CrystalLinkRestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::CrystalLinkRestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::CrystalLinkRestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::CrystalLinkRestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::CrystalLinkRestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::CrystalLinkRestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::CrystalLinkRestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 288: range 000000001373D9BA-000000001373DCD6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#131}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SpiceActivityFinishMakeSpiceReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SpiceActivityFinishMakeSpiceRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SpiceActivityFinishMakeSpiceRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:288 64 16 11 rsp_ptr:288";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#131}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SpiceActivityFinishMakeSpiceReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SpiceActivityFinishMakeSpiceReq const>(
         (const std::shared_ptr<const proto::SpiceActivityFinishMakeSpiceReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      288);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SpiceActivityFinishMakeSpiceReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SpiceActivityFinishMakeSpiceReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SpiceActivityFinishMakeSpiceRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SpiceActivityFinishMakeSpiceRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SpiceActivityFinishMakeSpiceRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SpiceActivityFinishMakeSpiceRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SpiceActivityFinishMakeSpiceReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SpiceActivityFinishMakeSpiceReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSpiceActivityFinishMakeSpiceReq(this, v8, rsp_0);
    proto::SpiceActivityFinishMakeSpiceRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SpiceActivityFinishMakeSpiceRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SpiceActivityFinishMakeSpiceRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SpiceActivityFinishMakeSpiceRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SpiceActivityFinishMakeSpiceRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SpiceActivityFinishMakeSpiceRsp>::~shared_ptr((std::shared_ptr<proto::SpiceActivityFinishMakeSpiceRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SpiceActivityFinishMakeSpiceReq const>::~shared_ptr((std::shared_ptr<const proto::SpiceActivityFinishMakeSpiceReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 289: range 000000001373DCD8-000000001373DFF4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#132}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SpiceActivityProcessFoodReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SpiceActivityProcessFoodRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SpiceActivityProcessFoodRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:289 64 16 11 rsp_ptr:289";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#132}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SpiceActivityProcessFoodReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SpiceActivityProcessFoodReq const>(
         (const std::shared_ptr<const proto::SpiceActivityProcessFoodReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      289);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SpiceActivityProcessFoodReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SpiceActivityProcessFoodReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SpiceActivityProcessFoodRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SpiceActivityProcessFoodRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SpiceActivityProcessFoodRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SpiceActivityProcessFoodRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SpiceActivityProcessFoodReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SpiceActivityProcessFoodReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSpiceActivityProcessFoodReq(this, v8, rsp_0);
    proto::SpiceActivityProcessFoodRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SpiceActivityProcessFoodRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SpiceActivityProcessFoodRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SpiceActivityProcessFoodRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SpiceActivityProcessFoodRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SpiceActivityProcessFoodRsp>::~shared_ptr((std::shared_ptr<proto::SpiceActivityProcessFoodRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SpiceActivityProcessFoodReq const>::~shared_ptr((std::shared_ptr<const proto::SpiceActivityProcessFoodReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 291: range 000000001373DFF6-000000001373E312
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#133}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PhotoActivityFinishReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PhotoActivityFinishRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PhotoActivityFinishRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:291 64 16 11 rsp_ptr:291";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#133}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PhotoActivityFinishReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PhotoActivityFinishReq const>(
         (const std::shared_ptr<const proto::PhotoActivityFinishReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      291);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PhotoActivityFinishReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PhotoActivityFinishReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PhotoActivityFinishRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PhotoActivityFinishRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PhotoActivityFinishRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PhotoActivityFinishRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PhotoActivityFinishReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PhotoActivityFinishReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPhotoActivityFinishReq(this, v8, rsp_0);
    proto::PhotoActivityFinishRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PhotoActivityFinishRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PhotoActivityFinishRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PhotoActivityFinishRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PhotoActivityFinishRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PhotoActivityFinishRsp>::~shared_ptr((std::shared_ptr<proto::PhotoActivityFinishRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PhotoActivityFinishReq const>::~shared_ptr((std::shared_ptr<const proto::PhotoActivityFinishReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 292: range 000000001373E314-000000001373E630
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#134}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::PhotoActivityClientViewReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::PhotoActivityClientViewRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::PhotoActivityClientViewRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:292 64 16 11 rsp_ptr:292";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#134}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PhotoActivityClientViewReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::PhotoActivityClientViewReq const>(
         (const std::shared_ptr<const proto::PhotoActivityClientViewReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      292);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::PhotoActivityClientViewReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PhotoActivityClientViewReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::PhotoActivityClientViewRsp>();
    rsp_0 = std::__shared_ptr_access<proto::PhotoActivityClientViewRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::PhotoActivityClientViewRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::PhotoActivityClientViewRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::PhotoActivityClientViewReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PhotoActivityClientViewReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onPhotoActivityClientViewReq(this, v8, rsp_0);
    proto::PhotoActivityClientViewRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::PhotoActivityClientViewRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::PhotoActivityClientViewRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::PhotoActivityClientViewRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::PhotoActivityClientViewRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::PhotoActivityClientViewRsp>::~shared_ptr((std::shared_ptr<proto::PhotoActivityClientViewRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::PhotoActivityClientViewReq const>::~shared_ptr((std::shared_ptr<const proto::PhotoActivityClientViewReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 294: range 000000001373E632-000000001373E94E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#135}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::IrodoriEditFlowerCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::IrodoriEditFlowerCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::IrodoriEditFlowerCombinationRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:294 64 16 11 rsp_ptr:294";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#135}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::IrodoriEditFlowerCombinationReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::IrodoriEditFlowerCombinationReq const>(
         (const std::shared_ptr<const proto::IrodoriEditFlowerCombinationReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      294);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::IrodoriEditFlowerCombinationReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriEditFlowerCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::IrodoriEditFlowerCombinationRsp>();
    rsp_0 = std::__shared_ptr_access<proto::IrodoriEditFlowerCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::IrodoriEditFlowerCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::IrodoriEditFlowerCombinationRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::IrodoriEditFlowerCombinationReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriEditFlowerCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onIrodoriEditFlowerCombinationReq(this, v8, rsp_0);
    proto::IrodoriEditFlowerCombinationRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::IrodoriEditFlowerCombinationRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::IrodoriEditFlowerCombinationRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::IrodoriEditFlowerCombinationRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::IrodoriEditFlowerCombinationRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::IrodoriEditFlowerCombinationRsp>::~shared_ptr((std::shared_ptr<proto::IrodoriEditFlowerCombinationRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::IrodoriEditFlowerCombinationReq const>::~shared_ptr((std::shared_ptr<const proto::IrodoriEditFlowerCombinationReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 295: range 000000001373E950-000000001373EC6C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#136}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::IrodoriScanEntityReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::IrodoriScanEntityRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::IrodoriScanEntityRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:295 64 16 11 rsp_ptr:295";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#136}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::IrodoriScanEntityReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::IrodoriScanEntityReq const>(
         (const std::shared_ptr<const proto::IrodoriScanEntityReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      295);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::IrodoriScanEntityReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriScanEntityReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::IrodoriScanEntityRsp>();
    rsp_0 = std::__shared_ptr_access<proto::IrodoriScanEntityRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::IrodoriScanEntityRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::IrodoriScanEntityRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::IrodoriScanEntityReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriScanEntityReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onIrodoriScanEntityReq(this, v8, rsp_0);
    proto::IrodoriScanEntityRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::IrodoriScanEntityRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::IrodoriScanEntityRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::IrodoriScanEntityRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::IrodoriScanEntityRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::IrodoriScanEntityRsp>::~shared_ptr((std::shared_ptr<proto::IrodoriScanEntityRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::IrodoriScanEntityReq const>::~shared_ptr((std::shared_ptr<const proto::IrodoriScanEntityReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 296: range 000000001373EC6E-000000001373EF8A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#137}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::IrodoriFillPoetryReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::IrodoriFillPoetryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::IrodoriFillPoetryRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:296 64 16 11 rsp_ptr:296";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#137}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::IrodoriFillPoetryReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::IrodoriFillPoetryReq const>(
         (const std::shared_ptr<const proto::IrodoriFillPoetryReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      296);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::IrodoriFillPoetryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriFillPoetryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::IrodoriFillPoetryRsp>();
    rsp_0 = std::__shared_ptr_access<proto::IrodoriFillPoetryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::IrodoriFillPoetryRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::IrodoriFillPoetryRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::IrodoriFillPoetryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriFillPoetryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onIrodoriFillPoetryReq(this, v8, rsp_0);
    proto::IrodoriFillPoetryRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::IrodoriFillPoetryRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::IrodoriFillPoetryRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::IrodoriFillPoetryRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::IrodoriFillPoetryRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::IrodoriFillPoetryRsp>::~shared_ptr((std::shared_ptr<proto::IrodoriFillPoetryRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::IrodoriFillPoetryReq const>::~shared_ptr((std::shared_ptr<const proto::IrodoriFillPoetryReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 297: range 000000001373EF8C-000000001373F2A8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#138}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::IrodoriMasterStartGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::IrodoriMasterStartGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::IrodoriMasterStartGalleryRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:297 64 16 11 rsp_ptr:297";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#138}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::IrodoriMasterStartGalleryReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::IrodoriMasterStartGalleryReq const>(
         (const std::shared_ptr<const proto::IrodoriMasterStartGalleryReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      297);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::IrodoriMasterStartGalleryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriMasterStartGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::IrodoriMasterStartGalleryRsp>();
    rsp_0 = std::__shared_ptr_access<proto::IrodoriMasterStartGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::IrodoriMasterStartGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::IrodoriMasterStartGalleryRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::IrodoriMasterStartGalleryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriMasterStartGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onIrodoriMasterStartGalleryReq(this, v8, rsp_0);
    proto::IrodoriMasterStartGalleryRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::IrodoriMasterStartGalleryRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::IrodoriMasterStartGalleryRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::IrodoriMasterStartGalleryRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::IrodoriMasterStartGalleryRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::IrodoriMasterStartGalleryRsp>::~shared_ptr((std::shared_ptr<proto::IrodoriMasterStartGalleryRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::IrodoriMasterStartGalleryReq const>::~shared_ptr((std::shared_ptr<const proto::IrodoriMasterStartGalleryReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 298: range 000000001373F2AA-000000001373F48C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#139}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  int v5; // r14d
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::IrodoriMasterGalleryCgEndNotify,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int result; // eax
  common::milog::MiLogStream v9; // [rsp+10h] [rbp-90h] BYREF
  char v10[112]; // [rsp+30h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 14 notify_ptr:298";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#139}::operator();
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::IrodoriMasterGalleryCgEndNotify>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::IrodoriMasterGalleryCgEndNotify const>(
         (const std::shared_ptr<const proto::IrodoriMasterGalleryCgEndNotify> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      298);
    common::milog::MiLogStream::operator()(&v9, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v9);
    v5 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v7 = std::__shared_ptr_access<proto::IrodoriMasterGalleryCgEndNotify const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriMasterGalleryCgEndNotify,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    v5 = ActivityHandler::onIrodoriMasterGalleryCgEndNotify(this, v7);
  }
  std::shared_ptr<proto::IrodoriMasterGalleryCgEndNotify const>::~shared_ptr((std::shared_ptr<const proto::IrodoriMasterGalleryCgEndNotify> *const)(v2 + 32));
  result = v5;
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 300: range 000000001373F48E-000000001373F7AA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#140}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::IrodoriChessEquipCardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::IrodoriChessEquipCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::IrodoriChessEquipCardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:300 64 16 11 rsp_ptr:300";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#140}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::IrodoriChessEquipCardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::IrodoriChessEquipCardReq const>(
         (const std::shared_ptr<const proto::IrodoriChessEquipCardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      300);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::IrodoriChessEquipCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriChessEquipCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::IrodoriChessEquipCardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::IrodoriChessEquipCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::IrodoriChessEquipCardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::IrodoriChessEquipCardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::IrodoriChessEquipCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriChessEquipCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onIrodoriChessEquipCardReq(this, v8, rsp_0);
    proto::IrodoriChessEquipCardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::IrodoriChessEquipCardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::IrodoriChessEquipCardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::IrodoriChessEquipCardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::IrodoriChessEquipCardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::IrodoriChessEquipCardRsp>::~shared_ptr((std::shared_ptr<proto::IrodoriChessEquipCardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::IrodoriChessEquipCardReq const>::~shared_ptr((std::shared_ptr<const proto::IrodoriChessEquipCardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 301: range 000000001373F7AC-000000001373FAC8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#141}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::IrodoriChessUnequipCardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::IrodoriChessUnequipCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::IrodoriChessUnequipCardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:301 64 16 11 rsp_ptr:301";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#141}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::IrodoriChessUnequipCardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::IrodoriChessUnequipCardReq const>(
         (const std::shared_ptr<const proto::IrodoriChessUnequipCardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      301);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::IrodoriChessUnequipCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriChessUnequipCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::IrodoriChessUnequipCardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::IrodoriChessUnequipCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::IrodoriChessUnequipCardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::IrodoriChessUnequipCardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::IrodoriChessUnequipCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::IrodoriChessUnequipCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onIrodoriChessUnequipCardReq(this, v8, rsp_0);
    proto::IrodoriChessUnequipCardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::IrodoriChessUnequipCardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::IrodoriChessUnequipCardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::IrodoriChessUnequipCardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::IrodoriChessUnequipCardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::IrodoriChessUnequipCardRsp>::~shared_ptr((std::shared_ptr<proto::IrodoriChessUnequipCardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::IrodoriChessUnequipCardReq const>::~shared_ptr((std::shared_ptr<const proto::IrodoriChessUnequipCardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 302: range 000000001373FACA-000000001373FDE6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#142}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EnterIrodoriChessDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EnterIrodoriChessDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EnterIrodoriChessDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:302 64 16 11 rsp_ptr:302";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#142}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EnterIrodoriChessDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EnterIrodoriChessDungeonReq const>(
         (const std::shared_ptr<const proto::EnterIrodoriChessDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      302);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EnterIrodoriChessDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterIrodoriChessDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EnterIrodoriChessDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EnterIrodoriChessDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EnterIrodoriChessDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EnterIrodoriChessDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EnterIrodoriChessDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterIrodoriChessDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEnterIrodoriChessDungeonReq(this, v8, rsp_0);
    proto::EnterIrodoriChessDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EnterIrodoriChessDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EnterIrodoriChessDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EnterIrodoriChessDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EnterIrodoriChessDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EnterIrodoriChessDungeonRsp>::~shared_ptr((std::shared_ptr<proto::EnterIrodoriChessDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EnterIrodoriChessDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::EnterIrodoriChessDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 304: range 000000001373FDE8-000000001373FFCA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#143}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  int updated; // r14d
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GachaActivityUpdateElemNotify,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int result; // eax
  common::milog::MiLogStream v9; // [rsp+10h] [rbp-90h] BYREF
  char v10[112]; // [rsp+30h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 14 notify_ptr:304";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#143}::operator();
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GachaActivityUpdateElemNotify>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GachaActivityUpdateElemNotify const>(
         (const std::shared_ptr<const proto::GachaActivityUpdateElemNotify> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      304);
    common::milog::MiLogStream::operator()(&v9, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v9);
    updated = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v7 = std::__shared_ptr_access<proto::GachaActivityUpdateElemNotify const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GachaActivityUpdateElemNotify,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    updated = ActivityHandler::onGachaActivityUpdateElemNotify(this, v7);
  }
  std::shared_ptr<proto::GachaActivityUpdateElemNotify const>::~shared_ptr((std::shared_ptr<const proto::GachaActivityUpdateElemNotify> *const)(v2 + 32));
  result = updated;
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 305: range 000000001373FFCC-00000000137402E8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#144}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GachaActivityCreateRobotReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GachaActivityCreateRobotRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GachaActivityCreateRobotRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:305 64 16 11 rsp_ptr:305";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#144}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GachaActivityCreateRobotReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GachaActivityCreateRobotReq const>(
         (const std::shared_ptr<const proto::GachaActivityCreateRobotReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      305);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GachaActivityCreateRobotReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GachaActivityCreateRobotReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GachaActivityCreateRobotRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GachaActivityCreateRobotRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GachaActivityCreateRobotRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GachaActivityCreateRobotRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GachaActivityCreateRobotReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GachaActivityCreateRobotReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGachaActivityCreateRobotReq(this, v8, rsp_0);
    proto::GachaActivityCreateRobotRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GachaActivityCreateRobotRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GachaActivityCreateRobotRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GachaActivityCreateRobotRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GachaActivityCreateRobotRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GachaActivityCreateRobotRsp>::~shared_ptr((std::shared_ptr<proto::GachaActivityCreateRobotRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GachaActivityCreateRobotReq const>::~shared_ptr((std::shared_ptr<const proto::GachaActivityCreateRobotReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 306: range 00000000137402EA-0000000013740606
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#145}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GachaActivityTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GachaActivityTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GachaActivityTakeRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:306 64 16 11 rsp_ptr:306";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#145}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GachaActivityTakeRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GachaActivityTakeRewardReq const>(
         (const std::shared_ptr<const proto::GachaActivityTakeRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      306);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GachaActivityTakeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GachaActivityTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GachaActivityTakeRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GachaActivityTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GachaActivityTakeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GachaActivityTakeRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GachaActivityTakeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GachaActivityTakeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGachaActivityTakeRewardReq(this, v8, rsp_0);
    proto::GachaActivityTakeRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GachaActivityTakeRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GachaActivityTakeRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GachaActivityTakeRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GachaActivityTakeRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GachaActivityTakeRewardRsp>::~shared_ptr((std::shared_ptr<proto::GachaActivityTakeRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GachaActivityTakeRewardReq const>::~shared_ptr((std::shared_ptr<const proto::GachaActivityTakeRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 307: range 0000000013740608-0000000013740924
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#146}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GachaActivityResetReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GachaActivityResetRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GachaActivityResetRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:307 64 16 11 rsp_ptr:307";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#146}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GachaActivityResetReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GachaActivityResetReq const>(
         (const std::shared_ptr<const proto::GachaActivityResetReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      307);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GachaActivityResetReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GachaActivityResetReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GachaActivityResetRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GachaActivityResetRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GachaActivityResetRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GachaActivityResetRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GachaActivityResetReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GachaActivityResetReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGachaActivityResetReq(this, v8, rsp_0);
    proto::GachaActivityResetRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GachaActivityResetRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GachaActivityResetRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GachaActivityResetRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GachaActivityResetRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GachaActivityResetRsp>::~shared_ptr((std::shared_ptr<proto::GachaActivityResetRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GachaActivityResetReq const>::~shared_ptr((std::shared_ptr<const proto::GachaActivityResetReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 308: range 0000000013740926-0000000013740C42
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#147}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GachaActivityNextStageReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GachaActivityNextStageRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GachaActivityNextStageRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:308 64 16 11 rsp_ptr:308";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#147}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GachaActivityNextStageReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GachaActivityNextStageReq const>(
         (const std::shared_ptr<const proto::GachaActivityNextStageReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      308);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GachaActivityNextStageReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GachaActivityNextStageReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GachaActivityNextStageRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GachaActivityNextStageRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GachaActivityNextStageRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GachaActivityNextStageRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GachaActivityNextStageReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GachaActivityNextStageReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGachaActivityNextStageReq(this, v8, rsp_0);
    proto::GachaActivityNextStageRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GachaActivityNextStageRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GachaActivityNextStageRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GachaActivityNextStageRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GachaActivityNextStageRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GachaActivityNextStageRsp>::~shared_ptr((std::shared_ptr<proto::GachaActivityNextStageRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GachaActivityNextStageReq const>::~shared_ptr((std::shared_ptr<const proto::GachaActivityNextStageReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 313: range 0000000013740C44-0000000013740F60
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#148}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityAcceptGiveGiftReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivityAcceptGiveGiftRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivityAcceptGiveGiftRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:313 64 16 11 rsp_ptr:313";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#148}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityAcceptGiveGiftReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityAcceptGiveGiftReq const>(
         (const std::shared_ptr<const proto::ActivityAcceptGiveGiftReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      313);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivityAcceptGiveGiftReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityAcceptGiveGiftReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivityAcceptGiveGiftRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivityAcceptGiveGiftRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivityAcceptGiveGiftRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivityAcceptGiveGiftRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivityAcceptGiveGiftReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityAcceptGiveGiftReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivityAcceptGiveGiftReq(this, v8, rsp_0);
    proto::ActivityAcceptGiveGiftRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivityAcceptGiveGiftRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivityAcceptGiveGiftRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivityAcceptGiveGiftRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivityAcceptGiveGiftRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivityAcceptGiveGiftRsp>::~shared_ptr((std::shared_ptr<proto::ActivityAcceptGiveGiftRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivityAcceptGiveGiftReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityAcceptGiveGiftReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 314: range 0000000013740F62-000000001374127E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#149}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityAcceptAllGiveGiftReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivityAcceptAllGiveGiftRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivityAcceptAllGiveGiftRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:314 64 16 11 rsp_ptr:314";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#149}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityAcceptAllGiveGiftReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityAcceptAllGiveGiftReq const>(
         (const std::shared_ptr<const proto::ActivityAcceptAllGiveGiftReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      314);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivityAcceptAllGiveGiftReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityAcceptAllGiveGiftReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivityAcceptAllGiveGiftRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivityAcceptAllGiveGiftRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivityAcceptAllGiveGiftRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivityAcceptAllGiveGiftRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivityAcceptAllGiveGiftReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityAcceptAllGiveGiftReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivityAcceptAllGiveGiftReq(this, v8, rsp_0);
    proto::ActivityAcceptAllGiveGiftRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivityAcceptAllGiveGiftRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivityAcceptAllGiveGiftRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivityAcceptAllGiveGiftRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivityAcceptAllGiveGiftRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivityAcceptAllGiveGiftRsp>::~shared_ptr((std::shared_ptr<proto::ActivityAcceptAllGiveGiftRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivityAcceptAllGiveGiftReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityAcceptAllGiveGiftReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 317: range 0000000013741280-000000001374159C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#150}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivitySetGiftWishReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivitySetGiftWishRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivitySetGiftWishRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:317 64 16 11 rsp_ptr:317";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#150}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivitySetGiftWishReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivitySetGiftWishReq const>(
         (const std::shared_ptr<const proto::ActivitySetGiftWishReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      317);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivitySetGiftWishReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivitySetGiftWishReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivitySetGiftWishRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivitySetGiftWishRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivitySetGiftWishRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivitySetGiftWishRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivitySetGiftWishReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivitySetGiftWishReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivitySetGiftWishReq(this, v8, rsp_0);
    proto::ActivitySetGiftWishRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivitySetGiftWishRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivitySetGiftWishRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivitySetGiftWishRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivitySetGiftWishRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivitySetGiftWishRsp>::~shared_ptr((std::shared_ptr<proto::ActivitySetGiftWishRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivitySetGiftWishReq const>::~shared_ptr((std::shared_ptr<const proto::ActivitySetGiftWishReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 318: range 000000001374159E-00000000137418BA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#151}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityGetCanGiveFriendGiftReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivityGetCanGiveFriendGiftRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivityGetCanGiveFriendGiftRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:318 64 16 11 rsp_ptr:318";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#151}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityGetCanGiveFriendGiftReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityGetCanGiveFriendGiftReq const>(
         (const std::shared_ptr<const proto::ActivityGetCanGiveFriendGiftReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      318);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivityGetCanGiveFriendGiftReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityGetCanGiveFriendGiftReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivityGetCanGiveFriendGiftRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivityGetCanGiveFriendGiftRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivityGetCanGiveFriendGiftRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivityGetCanGiveFriendGiftRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivityGetCanGiveFriendGiftReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityGetCanGiveFriendGiftReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivityGetCanGiveFriendGiftReq(this, v8, rsp_0);
    proto::ActivityGetCanGiveFriendGiftRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivityGetCanGiveFriendGiftRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivityGetCanGiveFriendGiftRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivityGetCanGiveFriendGiftRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivityGetCanGiveFriendGiftRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivityGetCanGiveFriendGiftRsp>::~shared_ptr((std::shared_ptr<proto::ActivityGetCanGiveFriendGiftRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivityGetCanGiveFriendGiftReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityGetCanGiveFriendGiftReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 320: range 00000000137418BC-0000000013741BD8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#152}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::StartRogueDiaryPlayReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::StartRogueDiaryPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::StartRogueDiaryPlayRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:320 64 16 11 rsp_ptr:320";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#152}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::StartRogueDiaryPlayReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::StartRogueDiaryPlayReq const>(
         (const std::shared_ptr<const proto::StartRogueDiaryPlayReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      320);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::StartRogueDiaryPlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartRogueDiaryPlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::StartRogueDiaryPlayRsp>();
    rsp_0 = std::__shared_ptr_access<proto::StartRogueDiaryPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::StartRogueDiaryPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::StartRogueDiaryPlayRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::StartRogueDiaryPlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartRogueDiaryPlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onStartRogueDiaryPlayReq(this, v8, rsp_0);
    proto::StartRogueDiaryPlayRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::StartRogueDiaryPlayRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::StartRogueDiaryPlayRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::StartRogueDiaryPlayRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::StartRogueDiaryPlayRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::StartRogueDiaryPlayRsp>::~shared_ptr((std::shared_ptr<proto::StartRogueDiaryPlayRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::StartRogueDiaryPlayReq const>::~shared_ptr((std::shared_ptr<const proto::StartRogueDiaryPlayReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 321: range 0000000013741BDA-0000000013741EF6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#153}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ResetRogueDiaryPlayReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ResetRogueDiaryPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ResetRogueDiaryPlayRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:321 64 16 11 rsp_ptr:321";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#153}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ResetRogueDiaryPlayReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ResetRogueDiaryPlayReq const>(
         (const std::shared_ptr<const proto::ResetRogueDiaryPlayReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      321);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ResetRogueDiaryPlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ResetRogueDiaryPlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ResetRogueDiaryPlayRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ResetRogueDiaryPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ResetRogueDiaryPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ResetRogueDiaryPlayRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ResetRogueDiaryPlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ResetRogueDiaryPlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onResetRogueDiaryPlayReq(this, v8, rsp_0);
    proto::ResetRogueDiaryPlayRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ResetRogueDiaryPlayRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ResetRogueDiaryPlayRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ResetRogueDiaryPlayRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ResetRogueDiaryPlayRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ResetRogueDiaryPlayRsp>::~shared_ptr((std::shared_ptr<proto::ResetRogueDiaryPlayRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ResetRogueDiaryPlayReq const>::~shared_ptr((std::shared_ptr<const proto::ResetRogueDiaryPlayReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 322: range 0000000013741EF8-0000000013742214
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#154}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EnterRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EnterRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EnterRogueDiaryDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:322 64 16 11 rsp_ptr:322";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#154}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EnterRogueDiaryDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EnterRogueDiaryDungeonReq const>(
         (const std::shared_ptr<const proto::EnterRogueDiaryDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      322);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EnterRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EnterRogueDiaryDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EnterRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EnterRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EnterRogueDiaryDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EnterRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEnterRogueDiaryDungeonReq(this, v8, rsp_0);
    proto::EnterRogueDiaryDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EnterRogueDiaryDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EnterRogueDiaryDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EnterRogueDiaryDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EnterRogueDiaryDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EnterRogueDiaryDungeonRsp>::~shared_ptr((std::shared_ptr<proto::EnterRogueDiaryDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EnterRogueDiaryDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::EnterRogueDiaryDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 323: range 0000000013742216-0000000013742532
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#155}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ResumeRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ResumeRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ResumeRogueDiaryDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:323 64 16 11 rsp_ptr:323";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#155}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ResumeRogueDiaryDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ResumeRogueDiaryDungeonReq const>(
         (const std::shared_ptr<const proto::ResumeRogueDiaryDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      323);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ResumeRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ResumeRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ResumeRogueDiaryDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ResumeRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ResumeRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ResumeRogueDiaryDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ResumeRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ResumeRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onResumeRogueDiaryDungeonReq(this, v8, rsp_0);
    proto::ResumeRogueDiaryDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ResumeRogueDiaryDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ResumeRogueDiaryDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ResumeRogueDiaryDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ResumeRogueDiaryDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ResumeRogueDiaryDungeonRsp>::~shared_ptr((std::shared_ptr<proto::ResumeRogueDiaryDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ResumeRogueDiaryDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::ResumeRogueDiaryDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 324: range 0000000013742534-0000000013742850
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#156}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TryInterruptRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TryInterruptRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TryInterruptRogueDiaryDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:324 64 16 11 rsp_ptr:324";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#156}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TryInterruptRogueDiaryDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TryInterruptRogueDiaryDungeonReq const>(
         (const std::shared_ptr<const proto::TryInterruptRogueDiaryDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      324);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TryInterruptRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TryInterruptRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TryInterruptRogueDiaryDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TryInterruptRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TryInterruptRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TryInterruptRogueDiaryDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TryInterruptRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TryInterruptRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTryInterruptRogueDiaryDungeonReq(this, v8, rsp_0);
    proto::TryInterruptRogueDiaryDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TryInterruptRogueDiaryDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TryInterruptRogueDiaryDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TryInterruptRogueDiaryDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TryInterruptRogueDiaryDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TryInterruptRogueDiaryDungeonRsp>::~shared_ptr((std::shared_ptr<proto::TryInterruptRogueDiaryDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TryInterruptRogueDiaryDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::TryInterruptRogueDiaryDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 325: range 0000000013742852-0000000013742B6E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#157}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::StartRogueDiaryRoomReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::StartRogueDiaryRoomRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::StartRogueDiaryRoomRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:325 64 16 11 rsp_ptr:325";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#157}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::StartRogueDiaryRoomReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::StartRogueDiaryRoomReq const>(
         (const std::shared_ptr<const proto::StartRogueDiaryRoomReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      325);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::StartRogueDiaryRoomReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartRogueDiaryRoomReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::StartRogueDiaryRoomRsp>();
    rsp_0 = std::__shared_ptr_access<proto::StartRogueDiaryRoomRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::StartRogueDiaryRoomRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::StartRogueDiaryRoomRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::StartRogueDiaryRoomReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::StartRogueDiaryRoomReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onStartRogueDiaryRoomReq(this, v8, rsp_0);
    proto::StartRogueDiaryRoomRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::StartRogueDiaryRoomRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::StartRogueDiaryRoomRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::StartRogueDiaryRoomRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::StartRogueDiaryRoomRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::StartRogueDiaryRoomRsp>::~shared_ptr((std::shared_ptr<proto::StartRogueDiaryRoomRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::StartRogueDiaryRoomReq const>::~shared_ptr((std::shared_ptr<const proto::StartRogueDiaryRoomReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 326: range 0000000013742B70-0000000013742E8C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#158}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ReserveRogueDiaryAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ReserveRogueDiaryAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ReserveRogueDiaryAvatarRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:326 64 16 11 rsp_ptr:326";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#158}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ReserveRogueDiaryAvatarReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ReserveRogueDiaryAvatarReq const>(
         (const std::shared_ptr<const proto::ReserveRogueDiaryAvatarReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      326);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ReserveRogueDiaryAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ReserveRogueDiaryAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ReserveRogueDiaryAvatarRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ReserveRogueDiaryAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ReserveRogueDiaryAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ReserveRogueDiaryAvatarRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ReserveRogueDiaryAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ReserveRogueDiaryAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onReserveRogueDiaryAvatarReq(this, v8, rsp_0);
    proto::ReserveRogueDiaryAvatarRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ReserveRogueDiaryAvatarRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ReserveRogueDiaryAvatarRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ReserveRogueDiaryAvatarRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ReserveRogueDiaryAvatarRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ReserveRogueDiaryAvatarRsp>::~shared_ptr((std::shared_ptr<proto::ReserveRogueDiaryAvatarRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ReserveRogueDiaryAvatarReq const>::~shared_ptr((std::shared_ptr<const proto::ReserveRogueDiaryAvatarReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 327: range 0000000013742E8E-00000000137431AA
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#159}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GetRogueDairyRepairInfoReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GetRogueDairyRepairInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GetRogueDairyRepairInfoRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:327 64 16 11 rsp_ptr:327";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#159}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GetRogueDairyRepairInfoReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GetRogueDairyRepairInfoReq const>(
         (const std::shared_ptr<const proto::GetRogueDairyRepairInfoReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      327);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GetRogueDairyRepairInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetRogueDairyRepairInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GetRogueDairyRepairInfoRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GetRogueDairyRepairInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GetRogueDairyRepairInfoRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GetRogueDairyRepairInfoRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GetRogueDairyRepairInfoReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GetRogueDairyRepairInfoReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGetRogueDairyRepairInfoReq(this, v8, rsp_0);
    proto::GetRogueDairyRepairInfoRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GetRogueDairyRepairInfoRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GetRogueDairyRepairInfoRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GetRogueDairyRepairInfoRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GetRogueDairyRepairInfoRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GetRogueDairyRepairInfoRsp>::~shared_ptr((std::shared_ptr<proto::GetRogueDairyRepairInfoRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GetRogueDairyRepairInfoReq const>::~shared_ptr((std::shared_ptr<const proto::GetRogueDairyRepairInfoReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 328: range 00000000137431AC-00000000137434C8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#160}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RefreshRogueDiaryCardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RefreshRogueDiaryCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RefreshRogueDiaryCardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:328 64 16 11 rsp_ptr:328";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#160}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RefreshRogueDiaryCardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RefreshRogueDiaryCardReq const>(
         (const std::shared_ptr<const proto::RefreshRogueDiaryCardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      328);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RefreshRogueDiaryCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RefreshRogueDiaryCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RefreshRogueDiaryCardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RefreshRogueDiaryCardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RefreshRogueDiaryCardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RefreshRogueDiaryCardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RefreshRogueDiaryCardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RefreshRogueDiaryCardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRefreshRogueDiaryCardReq(this, v8, rsp_0);
    proto::RefreshRogueDiaryCardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RefreshRogueDiaryCardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RefreshRogueDiaryCardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RefreshRogueDiaryCardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RefreshRogueDiaryCardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RefreshRogueDiaryCardRsp>::~shared_ptr((std::shared_ptr<proto::RefreshRogueDiaryCardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RefreshRogueDiaryCardReq const>::~shared_ptr((std::shared_ptr<const proto::RefreshRogueDiaryCardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 329: range 00000000137434CA-00000000137437E6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#161}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RogueFinishRepairReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RogueFinishRepairRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RogueFinishRepairRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:329 64 16 11 rsp_ptr:329";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#161}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RogueFinishRepairReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RogueFinishRepairReq const>(
         (const std::shared_ptr<const proto::RogueFinishRepairReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      329);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RogueFinishRepairReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueFinishRepairReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RogueFinishRepairRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RogueFinishRepairRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RogueFinishRepairRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RogueFinishRepairRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RogueFinishRepairReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueFinishRepairReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRogueFinishRepairReq(this, v8, rsp_0);
    proto::RogueFinishRepairRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RogueFinishRepairRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RogueFinishRepairRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RogueFinishRepairRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RogueFinishRepairRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RogueFinishRepairRsp>::~shared_ptr((std::shared_ptr<proto::RogueFinishRepairRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RogueFinishRepairReq const>::~shared_ptr((std::shared_ptr<const proto::RogueFinishRepairReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 330: range 00000000137437E8-0000000013743B04
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#162}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TryEnterNextRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TryEnterNextRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TryEnterNextRogueDiaryDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:330 64 16 11 rsp_ptr:330";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#162}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TryEnterNextRogueDiaryDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TryEnterNextRogueDiaryDungeonReq const>(
         (const std::shared_ptr<const proto::TryEnterNextRogueDiaryDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      330);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TryEnterNextRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TryEnterNextRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TryEnterNextRogueDiaryDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TryEnterNextRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TryEnterNextRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TryEnterNextRogueDiaryDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TryEnterNextRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TryEnterNextRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTryEnterNextRogueDiaryDungeonReq(this, v8, rsp_0);
    proto::TryEnterNextRogueDiaryDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TryEnterNextRogueDiaryDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TryEnterNextRogueDiaryDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TryEnterNextRogueDiaryDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TryEnterNextRogueDiaryDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TryEnterNextRogueDiaryDungeonRsp>::~shared_ptr((std::shared_ptr<proto::TryEnterNextRogueDiaryDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TryEnterNextRogueDiaryDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::TryEnterNextRogueDiaryDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 331: range 0000000013743B06-0000000013743E22
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#163}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RetryCurRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RetryCurRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RetryCurRogueDiaryDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:331 64 16 11 rsp_ptr:331";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#163}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RetryCurRogueDiaryDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RetryCurRogueDiaryDungeonReq const>(
         (const std::shared_ptr<const proto::RetryCurRogueDiaryDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      331);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RetryCurRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RetryCurRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RetryCurRogueDiaryDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RetryCurRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RetryCurRogueDiaryDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RetryCurRogueDiaryDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RetryCurRogueDiaryDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RetryCurRogueDiaryDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRetryCurRogueDiaryDungeonReq(this, v8, rsp_0);
    proto::RetryCurRogueDiaryDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RetryCurRogueDiaryDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RetryCurRogueDiaryDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RetryCurRogueDiaryDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RetryCurRogueDiaryDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RetryCurRogueDiaryDungeonRsp>::~shared_ptr((std::shared_ptr<proto::RetryCurRogueDiaryDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RetryCurRogueDiaryDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::RetryCurRogueDiaryDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 332: range 0000000013743E24-0000000013744140
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#164}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RogueDiaryReviveAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RogueDiaryReviveAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RogueDiaryReviveAvatarRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:332 64 16 11 rsp_ptr:332";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#164}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RogueDiaryReviveAvatarReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RogueDiaryReviveAvatarReq const>(
         (const std::shared_ptr<const proto::RogueDiaryReviveAvatarReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      332);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RogueDiaryReviveAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueDiaryReviveAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RogueDiaryReviveAvatarRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RogueDiaryReviveAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RogueDiaryReviveAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RogueDiaryReviveAvatarRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RogueDiaryReviveAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RogueDiaryReviveAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRogueDiaryReviveAvatarReq(this, v8, rsp_0);
    proto::RogueDiaryReviveAvatarRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RogueDiaryReviveAvatarRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RogueDiaryReviveAvatarRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RogueDiaryReviveAvatarRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RogueDiaryReviveAvatarRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RogueDiaryReviveAvatarRsp>::~shared_ptr((std::shared_ptr<proto::RogueDiaryReviveAvatarRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RogueDiaryReviveAvatarReq const>::~shared_ptr((std::shared_ptr<const proto::RogueDiaryReviveAvatarReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 334: range 0000000013744142-000000001374445E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#165}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GearActivityStartPlayGearReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GearActivityStartPlayGearRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GearActivityStartPlayGearRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:334 64 16 11 rsp_ptr:334";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#165}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GearActivityStartPlayGearReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GearActivityStartPlayGearReq const>(
         (const std::shared_ptr<const proto::GearActivityStartPlayGearReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      334);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GearActivityStartPlayGearReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GearActivityStartPlayGearReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GearActivityStartPlayGearRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GearActivityStartPlayGearRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GearActivityStartPlayGearRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GearActivityStartPlayGearRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GearActivityStartPlayGearReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GearActivityStartPlayGearReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGearActivityStartPlayGearReq(this, v8, rsp_0);
    proto::GearActivityStartPlayGearRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GearActivityStartPlayGearRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GearActivityStartPlayGearRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GearActivityStartPlayGearRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GearActivityStartPlayGearRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GearActivityStartPlayGearRsp>::~shared_ptr((std::shared_ptr<proto::GearActivityStartPlayGearRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GearActivityStartPlayGearReq const>::~shared_ptr((std::shared_ptr<const proto::GearActivityStartPlayGearReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 335: range 0000000013744460-000000001374477C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#166}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GearActivityFinishPlayGearReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GearActivityFinishPlayGearRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GearActivityFinishPlayGearRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:335 64 16 11 rsp_ptr:335";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#166}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GearActivityFinishPlayGearReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GearActivityFinishPlayGearReq const>(
         (const std::shared_ptr<const proto::GearActivityFinishPlayGearReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      335);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GearActivityFinishPlayGearReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GearActivityFinishPlayGearReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GearActivityFinishPlayGearRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GearActivityFinishPlayGearRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GearActivityFinishPlayGearRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GearActivityFinishPlayGearRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GearActivityFinishPlayGearReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GearActivityFinishPlayGearReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGearActivityFinishPlayGearReq(this, v8, rsp_0);
    proto::GearActivityFinishPlayGearRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GearActivityFinishPlayGearRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GearActivityFinishPlayGearRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GearActivityFinishPlayGearRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GearActivityFinishPlayGearRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GearActivityFinishPlayGearRsp>::~shared_ptr((std::shared_ptr<proto::GearActivityFinishPlayGearRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GearActivityFinishPlayGearReq const>::~shared_ptr((std::shared_ptr<const proto::GearActivityFinishPlayGearReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 336: range 000000001374477E-0000000013744A9A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#167}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GearActivityStartPlayPictureReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GearActivityStartPlayPictureRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GearActivityStartPlayPictureRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:336 64 16 11 rsp_ptr:336";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#167}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GearActivityStartPlayPictureReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GearActivityStartPlayPictureReq const>(
         (const std::shared_ptr<const proto::GearActivityStartPlayPictureReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      336);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GearActivityStartPlayPictureReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GearActivityStartPlayPictureReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GearActivityStartPlayPictureRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GearActivityStartPlayPictureRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GearActivityStartPlayPictureRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GearActivityStartPlayPictureRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GearActivityStartPlayPictureReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GearActivityStartPlayPictureReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGearActivityStartPlayPictureReq(this, v8, rsp_0);
    proto::GearActivityStartPlayPictureRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GearActivityStartPlayPictureRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GearActivityStartPlayPictureRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GearActivityStartPlayPictureRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GearActivityStartPlayPictureRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GearActivityStartPlayPictureRsp>::~shared_ptr((std::shared_ptr<proto::GearActivityStartPlayPictureRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GearActivityStartPlayPictureReq const>::~shared_ptr((std::shared_ptr<const proto::GearActivityStartPlayPictureReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 337: range 0000000013744A9C-0000000013744DB8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#168}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GearActivityFinishPlayPictureReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GearActivityFinishPlayPictureRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GearActivityFinishPlayPictureRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:337 64 16 11 rsp_ptr:337";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#168}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GearActivityFinishPlayPictureReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GearActivityFinishPlayPictureReq const>(
         (const std::shared_ptr<const proto::GearActivityFinishPlayPictureReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      337);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GearActivityFinishPlayPictureReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GearActivityFinishPlayPictureReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GearActivityFinishPlayPictureRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GearActivityFinishPlayPictureRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GearActivityFinishPlayPictureRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GearActivityFinishPlayPictureRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GearActivityFinishPlayPictureReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GearActivityFinishPlayPictureReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGearActivityFinishPlayPictureReq(this, v8, rsp_0);
    proto::GearActivityFinishPlayPictureRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GearActivityFinishPlayPictureRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GearActivityFinishPlayPictureRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GearActivityFinishPlayPictureRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GearActivityFinishPlayPictureRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GearActivityFinishPlayPictureRsp>::~shared_ptr((std::shared_ptr<proto::GearActivityFinishPlayPictureRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GearActivityFinishPlayPictureReq const>::~shared_ptr((std::shared_ptr<const proto::GearActivityFinishPlayPictureReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 339: range 0000000013744DBA-00000000137450D6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#169}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ActivityReadPushTipsReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ActivityReadPushTipsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ActivityReadPushTipsRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:339 64 16 11 rsp_ptr:339";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#169}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityReadPushTipsReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityReadPushTipsReq const>(
         (const std::shared_ptr<const proto::ActivityReadPushTipsReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      339);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ActivityReadPushTipsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityReadPushTipsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ActivityReadPushTipsRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ActivityReadPushTipsRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ActivityReadPushTipsRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ActivityReadPushTipsRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ActivityReadPushTipsReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityReadPushTipsReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onActivityReadPushTipsReq(this, v8, rsp_0);
    proto::ActivityReadPushTipsRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ActivityReadPushTipsRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ActivityReadPushTipsRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ActivityReadPushTipsRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ActivityReadPushTipsRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ActivityReadPushTipsRsp>::~shared_ptr((std::shared_ptr<proto::ActivityReadPushTipsRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ActivityReadPushTipsReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityReadPushTipsReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 341: range 00000000137450D8-00000000137453F4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#170}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SummerTimeV2RestartBoatGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SummerTimeV2RestartBoatGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SummerTimeV2RestartBoatGalleryRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:341 64 16 11 rsp_ptr:341";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#170}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SummerTimeV2RestartBoatGalleryReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SummerTimeV2RestartBoatGalleryReq const>(
         (const std::shared_ptr<const proto::SummerTimeV2RestartBoatGalleryReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      341);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SummerTimeV2RestartBoatGalleryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SummerTimeV2RestartBoatGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SummerTimeV2RestartBoatGalleryRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SummerTimeV2RestartBoatGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SummerTimeV2RestartBoatGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SummerTimeV2RestartBoatGalleryRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SummerTimeV2RestartBoatGalleryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SummerTimeV2RestartBoatGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSummerTimeV2RestartBoatGalleryReq(this, v8, rsp_0);
    proto::SummerTimeV2RestartBoatGalleryRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SummerTimeV2RestartBoatGalleryRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SummerTimeV2RestartBoatGalleryRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SummerTimeV2RestartBoatGalleryRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SummerTimeV2RestartBoatGalleryRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SummerTimeV2RestartBoatGalleryRsp>::~shared_ptr((std::shared_ptr<proto::SummerTimeV2RestartBoatGalleryRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SummerTimeV2RestartBoatGalleryReq const>::~shared_ptr((std::shared_ptr<const proto::SummerTimeV2RestartBoatGalleryReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 343: range 00000000137453F6-0000000013745712
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#171}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SummerTimeV2RestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SummerTimeV2RestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SummerTimeV2RestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:343 64 16 11 rsp_ptr:343";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#171}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SummerTimeV2RestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SummerTimeV2RestartDungeonReq const>(
         (const std::shared_ptr<const proto::SummerTimeV2RestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      343);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SummerTimeV2RestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SummerTimeV2RestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SummerTimeV2RestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SummerTimeV2RestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SummerTimeV2RestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SummerTimeV2RestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SummerTimeV2RestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SummerTimeV2RestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSummerTimeV2RestartDungeonReq(this, v8, rsp_0);
    proto::SummerTimeV2RestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SummerTimeV2RestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SummerTimeV2RestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SummerTimeV2RestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SummerTimeV2RestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SummerTimeV2RestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::SummerTimeV2RestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SummerTimeV2RestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::SummerTimeV2RestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 345: range 0000000013745714-0000000013745A30
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#172}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GravenInnocenceRaceRestartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GravenInnocenceRaceRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GravenInnocenceRaceRestartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:345 64 16 11 rsp_ptr:345";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#172}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GravenInnocenceRaceRestartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GravenInnocenceRaceRestartReq const>(
         (const std::shared_ptr<const proto::GravenInnocenceRaceRestartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      345);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GravenInnocenceRaceRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GravenInnocenceRaceRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GravenInnocenceRaceRestartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GravenInnocenceRaceRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GravenInnocenceRaceRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GravenInnocenceRaceRestartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GravenInnocenceRaceRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GravenInnocenceRaceRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGravenInnocenceRaceRestartReq(this, v8, rsp_0);
    proto::GravenInnocenceRaceRestartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GravenInnocenceRaceRestartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GravenInnocenceRaceRestartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GravenInnocenceRaceRestartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GravenInnocenceRaceRestartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GravenInnocenceRaceRestartRsp>::~shared_ptr((std::shared_ptr<proto::GravenInnocenceRaceRestartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GravenInnocenceRaceRestartReq const>::~shared_ptr((std::shared_ptr<const proto::GravenInnocenceRaceRestartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 346: range 0000000013745A32-0000000013745D4E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#173}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GravenInnocencePhotoFinishReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GravenInnocencePhotoFinishRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GravenInnocencePhotoFinishRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:346 64 16 11 rsp_ptr:346";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#173}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GravenInnocencePhotoFinishReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GravenInnocencePhotoFinishReq const>(
         (const std::shared_ptr<const proto::GravenInnocencePhotoFinishReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      346);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GravenInnocencePhotoFinishReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GravenInnocencePhotoFinishReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GravenInnocencePhotoFinishRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GravenInnocencePhotoFinishRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GravenInnocencePhotoFinishRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GravenInnocencePhotoFinishRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GravenInnocencePhotoFinishReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GravenInnocencePhotoFinishReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGravenInnocencePhotoFinishReq(this, v8, rsp_0);
    proto::GravenInnocencePhotoFinishRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GravenInnocencePhotoFinishRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GravenInnocencePhotoFinishRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GravenInnocencePhotoFinishRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GravenInnocencePhotoFinishRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GravenInnocencePhotoFinishRsp>::~shared_ptr((std::shared_ptr<proto::GravenInnocencePhotoFinishRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GravenInnocencePhotoFinishReq const>::~shared_ptr((std::shared_ptr<const proto::GravenInnocencePhotoFinishReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 347: range 0000000013745D50-000000001374606C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#174}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::GravenInnocenceEditCarveCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::GravenInnocenceEditCarveCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::GravenInnocenceEditCarveCombinationRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:347 64 16 11 rsp_ptr:347";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#174}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::GravenInnocenceEditCarveCombinationReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::GravenInnocenceEditCarveCombinationReq const>(
         (const std::shared_ptr<const proto::GravenInnocenceEditCarveCombinationReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      347);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::GravenInnocenceEditCarveCombinationReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GravenInnocenceEditCarveCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::GravenInnocenceEditCarveCombinationRsp>();
    rsp_0 = std::__shared_ptr_access<proto::GravenInnocenceEditCarveCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::GravenInnocenceEditCarveCombinationRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::GravenInnocenceEditCarveCombinationRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::GravenInnocenceEditCarveCombinationReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::GravenInnocenceEditCarveCombinationReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onGravenInnocenceEditCarveCombinationReq(this, v8, rsp_0);
    proto::GravenInnocenceEditCarveCombinationRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::GravenInnocenceEditCarveCombinationRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::GravenInnocenceEditCarveCombinationRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::GravenInnocenceEditCarveCombinationRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::GravenInnocenceEditCarveCombinationRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::GravenInnocenceEditCarveCombinationRsp>::~shared_ptr((std::shared_ptr<proto::GravenInnocenceEditCarveCombinationRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::GravenInnocenceEditCarveCombinationReq const>::~shared_ptr((std::shared_ptr<const proto::GravenInnocenceEditCarveCombinationReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 349: range 000000001374606E-000000001374638A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#175}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::InstableSprayEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::InstableSprayEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::InstableSprayEnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:349 64 16 11 rsp_ptr:349";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#175}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::InstableSprayEnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::InstableSprayEnterDungeonReq const>(
         (const std::shared_ptr<const proto::InstableSprayEnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      349);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::InstableSprayEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::InstableSprayEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::InstableSprayEnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::InstableSprayEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::InstableSprayEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::InstableSprayEnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::InstableSprayEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::InstableSprayEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onInstableSprayEnterDungeonReq(this, v8, rsp_0);
    proto::InstableSprayEnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::InstableSprayEnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::InstableSprayEnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::InstableSprayEnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::InstableSprayEnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::InstableSprayEnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::InstableSprayEnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::InstableSprayEnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::InstableSprayEnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 350: range 000000001374638C-00000000137466A8
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#176}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::InstableSpraySwitchTeamReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::InstableSpraySwitchTeamRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::InstableSpraySwitchTeamRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:350 64 16 11 rsp_ptr:350";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#176}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::InstableSpraySwitchTeamReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::InstableSpraySwitchTeamReq const>(
         (const std::shared_ptr<const proto::InstableSpraySwitchTeamReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      350);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::InstableSpraySwitchTeamReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::InstableSpraySwitchTeamReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::InstableSpraySwitchTeamRsp>();
    rsp_0 = std::__shared_ptr_access<proto::InstableSpraySwitchTeamRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::InstableSpraySwitchTeamRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::InstableSpraySwitchTeamRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::InstableSpraySwitchTeamReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::InstableSpraySwitchTeamReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onInstableSpraySwitchTeamReq(this, v8, rsp_0);
    proto::InstableSpraySwitchTeamRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::InstableSpraySwitchTeamRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::InstableSpraySwitchTeamRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::InstableSpraySwitchTeamRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::InstableSpraySwitchTeamRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::InstableSpraySwitchTeamRsp>::~shared_ptr((std::shared_ptr<proto::InstableSpraySwitchTeamRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::InstableSpraySwitchTeamReq const>::~shared_ptr((std::shared_ptr<const proto::InstableSpraySwitchTeamReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 351: range 00000000137466AA-00000000137469C6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#177}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::InstableSprayRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::InstableSprayRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::InstableSprayRestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:351 64 16 11 rsp_ptr:351";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#177}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::InstableSprayRestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::InstableSprayRestartDungeonReq const>(
         (const std::shared_ptr<const proto::InstableSprayRestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      351);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::InstableSprayRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::InstableSprayRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::InstableSprayRestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::InstableSprayRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::InstableSprayRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::InstableSprayRestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::InstableSprayRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::InstableSprayRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onInstableSprayRestartDungeonReq(this, v8, rsp_0);
    proto::InstableSprayRestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::InstableSprayRestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::InstableSprayRestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::InstableSprayRestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::InstableSprayRestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::InstableSprayRestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::InstableSprayRestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::InstableSprayRestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::InstableSprayRestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 353: range 00000000137469C8-0000000013746CE4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#178}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MuqadasPotionActivityEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MuqadasPotionActivityEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MuqadasPotionActivityEnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:353 64 16 11 rsp_ptr:353";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#178}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MuqadasPotionActivityEnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MuqadasPotionActivityEnterDungeonReq const>(
         (const std::shared_ptr<const proto::MuqadasPotionActivityEnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      353);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MuqadasPotionActivityEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MuqadasPotionActivityEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MuqadasPotionActivityEnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MuqadasPotionActivityEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MuqadasPotionActivityEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MuqadasPotionActivityEnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MuqadasPotionActivityEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MuqadasPotionActivityEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMuqadasPotionActivityEnterDungeonReq(this, v8, rsp_0);
    proto::MuqadasPotionActivityEnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MuqadasPotionActivityEnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MuqadasPotionActivityEnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MuqadasPotionActivityEnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MuqadasPotionActivityEnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MuqadasPotionActivityEnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::MuqadasPotionActivityEnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MuqadasPotionActivityEnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::MuqadasPotionActivityEnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 354: range 0000000013746CE6-0000000013747002
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#179}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MuqadasPotionRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MuqadasPotionRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MuqadasPotionRestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:354 64 16 11 rsp_ptr:354";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#179}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MuqadasPotionRestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MuqadasPotionRestartDungeonReq const>(
         (const std::shared_ptr<const proto::MuqadasPotionRestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      354);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MuqadasPotionRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MuqadasPotionRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MuqadasPotionRestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MuqadasPotionRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MuqadasPotionRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MuqadasPotionRestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MuqadasPotionRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MuqadasPotionRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMuqadasPotionRestartDungeonReq(this, v8, rsp_0);
    proto::MuqadasPotionRestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MuqadasPotionRestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MuqadasPotionRestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MuqadasPotionRestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MuqadasPotionRestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MuqadasPotionRestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::MuqadasPotionRestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MuqadasPotionRestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::MuqadasPotionRestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 355: range 0000000013747004-0000000013747320
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#180}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::MuqadasPotionCaptureWeaknessReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::MuqadasPotionCaptureWeaknessRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::MuqadasPotionCaptureWeaknessRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:355 64 16 11 rsp_ptr:355";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#180}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::MuqadasPotionCaptureWeaknessReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::MuqadasPotionCaptureWeaknessReq const>(
         (const std::shared_ptr<const proto::MuqadasPotionCaptureWeaknessReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      355);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::MuqadasPotionCaptureWeaknessReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MuqadasPotionCaptureWeaknessReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::MuqadasPotionCaptureWeaknessRsp>();
    rsp_0 = std::__shared_ptr_access<proto::MuqadasPotionCaptureWeaknessRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::MuqadasPotionCaptureWeaknessRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::MuqadasPotionCaptureWeaknessRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::MuqadasPotionCaptureWeaknessReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::MuqadasPotionCaptureWeaknessReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onMuqadasPotionCaptureWeaknessReq(this, v8, rsp_0);
    proto::MuqadasPotionCaptureWeaknessRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::MuqadasPotionCaptureWeaknessRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::MuqadasPotionCaptureWeaknessRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::MuqadasPotionCaptureWeaknessRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::MuqadasPotionCaptureWeaknessRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::MuqadasPotionCaptureWeaknessRsp>::~shared_ptr((std::shared_ptr<proto::MuqadasPotionCaptureWeaknessRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::MuqadasPotionCaptureWeaknessReq const>::~shared_ptr((std::shared_ptr<const proto::MuqadasPotionCaptureWeaknessReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 357: range 0000000013747322-000000001374763E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#181}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::WindFieldRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::WindFieldRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::WindFieldRestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:357 64 16 11 rsp_ptr:357";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#181}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WindFieldRestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::WindFieldRestartDungeonReq const>(
         (const std::shared_ptr<const proto::WindFieldRestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      357);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WindFieldRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WindFieldRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::WindFieldRestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::WindFieldRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::WindFieldRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::WindFieldRestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::WindFieldRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WindFieldRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onWindFieldRestartDungeonReq(this, v8, rsp_0);
    proto::WindFieldRestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::WindFieldRestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::WindFieldRestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::WindFieldRestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::WindFieldRestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::WindFieldRestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::WindFieldRestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::WindFieldRestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::WindFieldRestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 359: range 0000000013747640-000000001374795C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#182}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::VintageHuntingStartGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::VintageHuntingStartGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::VintageHuntingStartGalleryRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:359 64 16 11 rsp_ptr:359";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#182}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::VintageHuntingStartGalleryReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::VintageHuntingStartGalleryReq const>(
         (const std::shared_ptr<const proto::VintageHuntingStartGalleryReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      359);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::VintageHuntingStartGalleryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageHuntingStartGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::VintageHuntingStartGalleryRsp>();
    rsp_0 = std::__shared_ptr_access<proto::VintageHuntingStartGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::VintageHuntingStartGalleryRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::VintageHuntingStartGalleryRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::VintageHuntingStartGalleryReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageHuntingStartGalleryReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onVintageHuntingStartGalleryReq(this, v8, rsp_0);
    proto::VintageHuntingStartGalleryRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::VintageHuntingStartGalleryRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::VintageHuntingStartGalleryRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::VintageHuntingStartGalleryRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::VintageHuntingStartGalleryRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::VintageHuntingStartGalleryRsp>::~shared_ptr((std::shared_ptr<proto::VintageHuntingStartGalleryRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::VintageHuntingStartGalleryReq const>::~shared_ptr((std::shared_ptr<const proto::VintageHuntingStartGalleryReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 361: range 000000001374795E-0000000013747C7A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#183}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::VintageMarketDeliverItemReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::VintageMarketDeliverItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::VintageMarketDeliverItemRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:361 64 16 11 rsp_ptr:361";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#183}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::VintageMarketDeliverItemReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::VintageMarketDeliverItemReq const>(
         (const std::shared_ptr<const proto::VintageMarketDeliverItemReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      361);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::VintageMarketDeliverItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketDeliverItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::VintageMarketDeliverItemRsp>();
    rsp_0 = std::__shared_ptr_access<proto::VintageMarketDeliverItemRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::VintageMarketDeliverItemRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::VintageMarketDeliverItemRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::VintageMarketDeliverItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketDeliverItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onVintageMarketDeliverItemReq(this, v8, rsp_0);
    proto::VintageMarketDeliverItemRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::VintageMarketDeliverItemRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::VintageMarketDeliverItemRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::VintageMarketDeliverItemRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::VintageMarketDeliverItemRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::VintageMarketDeliverItemRsp>::~shared_ptr((std::shared_ptr<proto::VintageMarketDeliverItemRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::VintageMarketDeliverItemReq const>::~shared_ptr((std::shared_ptr<const proto::VintageMarketDeliverItemReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 362: range 0000000013747C7C-0000000013747F98
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#184}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::VintageMarketStartStorePlayReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::VintageMarketStartStorePlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::VintageMarketStartStorePlayRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:362 64 16 11 rsp_ptr:362";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#184}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::VintageMarketStartStorePlayReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::VintageMarketStartStorePlayReq const>(
         (const std::shared_ptr<const proto::VintageMarketStartStorePlayReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      362);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::VintageMarketStartStorePlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketStartStorePlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::VintageMarketStartStorePlayRsp>();
    rsp_0 = std::__shared_ptr_access<proto::VintageMarketStartStorePlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::VintageMarketStartStorePlayRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::VintageMarketStartStorePlayRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::VintageMarketStartStorePlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketStartStorePlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onVintageMarketStartStorePlayReq(this, v8, rsp_0);
    proto::VintageMarketStartStorePlayRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::VintageMarketStartStorePlayRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::VintageMarketStartStorePlayRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::VintageMarketStartStorePlayRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::VintageMarketStartStorePlayRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::VintageMarketStartStorePlayRsp>::~shared_ptr((std::shared_ptr<proto::VintageMarketStartStorePlayRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::VintageMarketStartStorePlayReq const>::~shared_ptr((std::shared_ptr<const proto::VintageMarketStartStorePlayReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 363: range 0000000013747F9A-00000000137482B6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#185}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::VintageMarketFinishStorePlayReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::VintageMarketFinishStorePlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::VintageMarketFinishStorePlayRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:363 64 16 11 rsp_ptr:363";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#185}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::VintageMarketFinishStorePlayReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::VintageMarketFinishStorePlayReq const>(
         (const std::shared_ptr<const proto::VintageMarketFinishStorePlayReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      363);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::VintageMarketFinishStorePlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketFinishStorePlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::VintageMarketFinishStorePlayRsp>();
    rsp_0 = std::__shared_ptr_access<proto::VintageMarketFinishStorePlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::VintageMarketFinishStorePlayRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::VintageMarketFinishStorePlayRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::VintageMarketFinishStorePlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketFinishStorePlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onVintageMarketFinishStorePlayReq(this, v8, rsp_0);
    proto::VintageMarketFinishStorePlayRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::VintageMarketFinishStorePlayRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::VintageMarketFinishStorePlayRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::VintageMarketFinishStorePlayRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::VintageMarketFinishStorePlayRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::VintageMarketFinishStorePlayRsp>::~shared_ptr((std::shared_ptr<proto::VintageMarketFinishStorePlayRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::VintageMarketFinishStorePlayReq const>::~shared_ptr((std::shared_ptr<const proto::VintageMarketFinishStorePlayReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 364: range 00000000137482B8-00000000137485D4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#186}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::VintageMarketStoreUnlockSlotReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::VintageMarketStoreUnlockSlotRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::VintageMarketStoreUnlockSlotRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:364 64 16 11 rsp_ptr:364";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#186}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::VintageMarketStoreUnlockSlotReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::VintageMarketStoreUnlockSlotReq const>(
         (const std::shared_ptr<const proto::VintageMarketStoreUnlockSlotReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      364);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::VintageMarketStoreUnlockSlotReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketStoreUnlockSlotReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::VintageMarketStoreUnlockSlotRsp>();
    rsp_0 = std::__shared_ptr_access<proto::VintageMarketStoreUnlockSlotRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::VintageMarketStoreUnlockSlotRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::VintageMarketStoreUnlockSlotRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::VintageMarketStoreUnlockSlotReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketStoreUnlockSlotReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onVintageMarketStoreUnlockSlotReq(this, v8, rsp_0);
    proto::VintageMarketStoreUnlockSlotRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::VintageMarketStoreUnlockSlotRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::VintageMarketStoreUnlockSlotRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::VintageMarketStoreUnlockSlotRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::VintageMarketStoreUnlockSlotRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::VintageMarketStoreUnlockSlotRsp>::~shared_ptr((std::shared_ptr<proto::VintageMarketStoreUnlockSlotRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::VintageMarketStoreUnlockSlotReq const>::~shared_ptr((std::shared_ptr<const proto::VintageMarketStoreUnlockSlotReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 365: range 00000000137485D6-00000000137488F2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#187}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::VintageMarketStoreChooseStrategyReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::VintageMarketStoreChooseStrategyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::VintageMarketStoreChooseStrategyRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:365 64 16 11 rsp_ptr:365";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#187}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::VintageMarketStoreChooseStrategyReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::VintageMarketStoreChooseStrategyReq const>(
         (const std::shared_ptr<const proto::VintageMarketStoreChooseStrategyReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      365);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::VintageMarketStoreChooseStrategyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketStoreChooseStrategyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::VintageMarketStoreChooseStrategyRsp>();
    rsp_0 = std::__shared_ptr_access<proto::VintageMarketStoreChooseStrategyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::VintageMarketStoreChooseStrategyRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::VintageMarketStoreChooseStrategyRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::VintageMarketStoreChooseStrategyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketStoreChooseStrategyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onVintageMarketStoreChooseStrategyReq(this, v8, rsp_0);
    proto::VintageMarketStoreChooseStrategyRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::VintageMarketStoreChooseStrategyRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::VintageMarketStoreChooseStrategyRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::VintageMarketStoreChooseStrategyRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::VintageMarketStoreChooseStrategyRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::VintageMarketStoreChooseStrategyRsp>::~shared_ptr((std::shared_ptr<proto::VintageMarketStoreChooseStrategyRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::VintageMarketStoreChooseStrategyReq const>::~shared_ptr((std::shared_ptr<const proto::VintageMarketStoreChooseStrategyReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 366: range 00000000137488F4-0000000013748C10
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#188}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::VintageMarketStoreViewStrategyReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::VintageMarketStoreViewStrategyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::VintageMarketStoreViewStrategyRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:366 64 16 11 rsp_ptr:366";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#188}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::VintageMarketStoreViewStrategyReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::VintageMarketStoreViewStrategyReq const>(
         (const std::shared_ptr<const proto::VintageMarketStoreViewStrategyReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      366);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::VintageMarketStoreViewStrategyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketStoreViewStrategyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::VintageMarketStoreViewStrategyRsp>();
    rsp_0 = std::__shared_ptr_access<proto::VintageMarketStoreViewStrategyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::VintageMarketStoreViewStrategyRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::VintageMarketStoreViewStrategyRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::VintageMarketStoreViewStrategyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageMarketStoreViewStrategyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onVintageMarketStoreViewStrategyReq(this, v8, rsp_0);
    proto::VintageMarketStoreViewStrategyRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::VintageMarketStoreViewStrategyRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::VintageMarketStoreViewStrategyRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::VintageMarketStoreViewStrategyRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::VintageMarketStoreViewStrategyRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::VintageMarketStoreViewStrategyRsp>::~shared_ptr((std::shared_ptr<proto::VintageMarketStoreViewStrategyRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::VintageMarketStoreViewStrategyReq const>::~shared_ptr((std::shared_ptr<const proto::VintageMarketStoreViewStrategyReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 368: range 0000000013748C12-0000000013748F2E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#189}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::VintageDecorateBoothReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::VintageDecorateBoothRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::VintageDecorateBoothRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:368 64 16 11 rsp_ptr:368";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#189}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::VintageDecorateBoothReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::VintageDecorateBoothReq const>(
         (const std::shared_ptr<const proto::VintageDecorateBoothReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      368);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::VintageDecorateBoothReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageDecorateBoothReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::VintageDecorateBoothRsp>();
    rsp_0 = std::__shared_ptr_access<proto::VintageDecorateBoothRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::VintageDecorateBoothRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::VintageDecorateBoothRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::VintageDecorateBoothReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::VintageDecorateBoothReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onVintageDecorateBoothReq(this, v8, rsp_0);
    proto::VintageDecorateBoothRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::VintageDecorateBoothRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::VintageDecorateBoothRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::VintageDecorateBoothRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::VintageDecorateBoothRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::VintageDecorateBoothRsp>::~shared_ptr((std::shared_ptr<proto::VintageDecorateBoothRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::VintageDecorateBoothReq const>::~shared_ptr((std::shared_ptr<const proto::VintageDecorateBoothReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 370: range 0000000013748F30-000000001374924C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#190}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EnterFungusFighterPlotDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EnterFungusFighterPlotDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EnterFungusFighterPlotDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:370 64 16 11 rsp_ptr:370";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#190}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EnterFungusFighterPlotDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EnterFungusFighterPlotDungeonReq const>(
         (const std::shared_ptr<const proto::EnterFungusFighterPlotDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      370);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EnterFungusFighterPlotDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterFungusFighterPlotDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EnterFungusFighterPlotDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EnterFungusFighterPlotDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EnterFungusFighterPlotDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EnterFungusFighterPlotDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EnterFungusFighterPlotDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterFungusFighterPlotDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEnterFungusFighterPlotDungeonReq(this, v8, rsp_0);
    proto::EnterFungusFighterPlotDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EnterFungusFighterPlotDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EnterFungusFighterPlotDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EnterFungusFighterPlotDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EnterFungusFighterPlotDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EnterFungusFighterPlotDungeonRsp>::~shared_ptr((std::shared_ptr<proto::EnterFungusFighterPlotDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EnterFungusFighterPlotDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::EnterFungusFighterPlotDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 371: range 000000001374924E-000000001374956A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#191}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FungusCultivateReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FungusCultivateRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FungusCultivateRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:371 64 16 11 rsp_ptr:371";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#191}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FungusCultivateReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FungusCultivateReq const>(
         (const std::shared_ptr<const proto::FungusCultivateReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      371);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FungusCultivateReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusCultivateReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FungusCultivateRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FungusCultivateRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FungusCultivateRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FungusCultivateRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FungusCultivateReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusCultivateReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFungusCultivateReq(this, v8, rsp_0);
    proto::FungusCultivateRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FungusCultivateRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FungusCultivateRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FungusCultivateRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FungusCultivateRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FungusCultivateRsp>::~shared_ptr((std::shared_ptr<proto::FungusCultivateRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FungusCultivateReq const>::~shared_ptr((std::shared_ptr<const proto::FungusCultivateReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 372: range 000000001374956C-0000000013749888
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#192}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FungusRenameReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FungusRenameRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FungusRenameRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:372 64 16 11 rsp_ptr:372";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#192}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FungusRenameReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FungusRenameReq const>(
         (const std::shared_ptr<const proto::FungusRenameReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      372);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FungusRenameReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusRenameReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FungusRenameRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FungusRenameRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FungusRenameRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FungusRenameRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FungusRenameReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusRenameReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFungusRenameReq(this, v8, rsp_0);
    proto::FungusRenameRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FungusRenameRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FungusRenameRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FungusRenameRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FungusRenameRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FungusRenameRsp>::~shared_ptr((std::shared_ptr<proto::FungusRenameRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FungusRenameReq const>::~shared_ptr((std::shared_ptr<const proto::FungusRenameReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 373: range 000000001374988A-0000000013749BA6
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#193}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EnterFungusFighterTrainingDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EnterFungusFighterTrainingDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EnterFungusFighterTrainingDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:373 64 16 11 rsp_ptr:373";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#193}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EnterFungusFighterTrainingDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EnterFungusFighterTrainingDungeonReq const>(
         (const std::shared_ptr<const proto::EnterFungusFighterTrainingDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      373);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EnterFungusFighterTrainingDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterFungusFighterTrainingDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EnterFungusFighterTrainingDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EnterFungusFighterTrainingDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EnterFungusFighterTrainingDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EnterFungusFighterTrainingDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EnterFungusFighterTrainingDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EnterFungusFighterTrainingDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEnterFungusFighterTrainingDungeonReq(this, v8, rsp_0);
    proto::EnterFungusFighterTrainingDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EnterFungusFighterTrainingDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EnterFungusFighterTrainingDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EnterFungusFighterTrainingDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EnterFungusFighterTrainingDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EnterFungusFighterTrainingDungeonRsp>::~shared_ptr((std::shared_ptr<proto::EnterFungusFighterTrainingDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EnterFungusFighterTrainingDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::EnterFungusFighterTrainingDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 374: range 0000000013749BA8-0000000013749EC4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#194}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FungusFighterTrainingSelectFungusReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FungusFighterTrainingSelectFungusRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FungusFighterTrainingSelectFungusRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:374 64 16 11 rsp_ptr:374";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#194}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FungusFighterTrainingSelectFungusReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FungusFighterTrainingSelectFungusReq const>(
         (const std::shared_ptr<const proto::FungusFighterTrainingSelectFungusReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      374);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FungusFighterTrainingSelectFungusReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusFighterTrainingSelectFungusReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FungusFighterTrainingSelectFungusRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FungusFighterTrainingSelectFungusRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FungusFighterTrainingSelectFungusRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FungusFighterTrainingSelectFungusRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FungusFighterTrainingSelectFungusReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusFighterTrainingSelectFungusReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFungusFighterTrainingSelectFungusReq(this, v8, rsp_0);
    proto::FungusFighterTrainingSelectFungusRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FungusFighterTrainingSelectFungusRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FungusFighterTrainingSelectFungusRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FungusFighterTrainingSelectFungusRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FungusFighterTrainingSelectFungusRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FungusFighterTrainingSelectFungusRsp>::~shared_ptr((std::shared_ptr<proto::FungusFighterTrainingSelectFungusRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FungusFighterTrainingSelectFungusReq const>::~shared_ptr((std::shared_ptr<const proto::FungusFighterTrainingSelectFungusReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 375: range 0000000013749EC6-000000001374A1E2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#195}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FungusFighterClearTrainingRuntimeDataReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FungusFighterClearTrainingRuntimeDataRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FungusFighterClearTrainingRuntimeDataRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:375 64 16 11 rsp_ptr:375";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#195}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FungusFighterClearTrainingRuntimeDataReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FungusFighterClearTrainingRuntimeDataReq const>(
         (const std::shared_ptr<const proto::FungusFighterClearTrainingRuntimeDataReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      375);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FungusFighterClearTrainingRuntimeDataReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusFighterClearTrainingRuntimeDataReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FungusFighterClearTrainingRuntimeDataRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FungusFighterClearTrainingRuntimeDataRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FungusFighterClearTrainingRuntimeDataRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FungusFighterClearTrainingRuntimeDataRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FungusFighterClearTrainingRuntimeDataReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusFighterClearTrainingRuntimeDataReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFungusFighterClearTrainingRuntimeDataReq(this, v8, rsp_0);
    proto::FungusFighterClearTrainingRuntimeDataRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FungusFighterClearTrainingRuntimeDataRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FungusFighterClearTrainingRuntimeDataRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FungusFighterClearTrainingRuntimeDataRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FungusFighterClearTrainingRuntimeDataRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FungusFighterClearTrainingRuntimeDataRsp>::~shared_ptr((std::shared_ptr<proto::FungusFighterClearTrainingRuntimeDataRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FungusFighterClearTrainingRuntimeDataReq const>::~shared_ptr((std::shared_ptr<const proto::FungusFighterClearTrainingRuntimeDataReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 376: range 000000001374A1E4-000000001374A500
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#196}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FungusFighterUseBackupFungusReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::FungusFighterUseBackupFungusRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::FungusFighterUseBackupFungusRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:376 64 16 11 rsp_ptr:376";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#196}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FungusFighterUseBackupFungusReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FungusFighterUseBackupFungusReq const>(
         (const std::shared_ptr<const proto::FungusFighterUseBackupFungusReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      376);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FungusFighterUseBackupFungusReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusFighterUseBackupFungusReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FungusFighterUseBackupFungusRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FungusFighterUseBackupFungusRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FungusFighterUseBackupFungusRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FungusFighterUseBackupFungusRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::FungusFighterUseBackupFungusReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusFighterUseBackupFungusReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFungusFighterUseBackupFungusReq(this, v8, rsp_0);
    proto::FungusFighterUseBackupFungusRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FungusFighterUseBackupFungusRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FungusFighterUseBackupFungusRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FungusFighterUseBackupFungusRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FungusFighterUseBackupFungusRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FungusFighterUseBackupFungusRsp>::~shared_ptr((std::shared_ptr<proto::FungusFighterUseBackupFungusRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FungusFighterUseBackupFungusReq const>::~shared_ptr((std::shared_ptr<const proto::FungusFighterUseBackupFungusReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 377: range 000000001374A502-000000001374A85A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#197}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::FungusFighterRestartTraningDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-F8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-F4h]
  std::__shared_ptr_access<proto::FungusFighterRestartTraningDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-E8h]
  std::shared_ptr<proto::FungusFighterRestartTraningDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-E0h] BYREF
  proto::FungusFighterRestartTraningDungeonRsp p_rsp_0; // [rsp+40h] [rbp-D0h] BYREF
  common::milog::MiLogStream v16; // [rsp+60h] [rbp-B0h] BYREF
  char v17[144]; // [rsp+80h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:377 64 16 11 rsp_ptr:377";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#197}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::FungusFighterRestartTraningDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::FungusFighterRestartTraningDungeonReq const>(
         (const std::shared_ptr<const proto::FungusFighterRestartTraningDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v16,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      377);
    common::milog::MiLogStream::operator()(&v16, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v16);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::FungusFighterRestartTraningDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusFighterRestartTraningDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::FungusFighterRestartTraningDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::FungusFighterRestartTraningDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::FungusFighterRestartTraningDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::FungusFighterRestartTraningDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    proto::FungusFighterRestartTraningDungeonRsp::FungusFighterRestartTraningDungeonRsp(&p_rsp_0, rsp_0);
    v8 = std::__shared_ptr_access<proto::FungusFighterRestartTraningDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::FungusFighterRestartTraningDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onFungusFighterRestartTraningDungeonReq(this, v8, &p_rsp_0);
    proto::FungusFighterRestartTraningDungeonRsp::~FungusFighterRestartTraningDungeonRsp(&p_rsp_0);
    proto::FungusFighterRestartTraningDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::FungusFighterRestartTraningDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::FungusFighterRestartTraningDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::FungusFighterRestartTraningDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::FungusFighterRestartTraningDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::FungusFighterRestartTraningDungeonRsp>::~shared_ptr((std::shared_ptr<proto::FungusFighterRestartTraningDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::FungusFighterRestartTraningDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::FungusFighterRestartTraningDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v17 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 379: range 000000001374A85C-000000001374AB78
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#198}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EffigyChallengeV2EnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EffigyChallengeV2EnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EffigyChallengeV2EnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:379 64 16 11 rsp_ptr:379";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#198}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EffigyChallengeV2EnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EffigyChallengeV2EnterDungeonReq const>(
         (const std::shared_ptr<const proto::EffigyChallengeV2EnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      379);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EffigyChallengeV2EnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EffigyChallengeV2EnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EffigyChallengeV2EnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EffigyChallengeV2EnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EffigyChallengeV2EnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EffigyChallengeV2EnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EffigyChallengeV2EnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EffigyChallengeV2EnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEffigyChallengeV2EnterDungeonReq(this, v8, rsp_0);
    proto::EffigyChallengeV2EnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EffigyChallengeV2EnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EffigyChallengeV2EnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EffigyChallengeV2EnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EffigyChallengeV2EnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EffigyChallengeV2EnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::EffigyChallengeV2EnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EffigyChallengeV2EnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::EffigyChallengeV2EnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 380: range 000000001374AB7A-000000001374AE96
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#199}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EffigyChallengeV2RestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EffigyChallengeV2RestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EffigyChallengeV2RestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:380 64 16 11 rsp_ptr:380";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#199}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EffigyChallengeV2RestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EffigyChallengeV2RestartDungeonReq const>(
         (const std::shared_ptr<const proto::EffigyChallengeV2RestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      380);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EffigyChallengeV2RestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EffigyChallengeV2RestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EffigyChallengeV2RestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EffigyChallengeV2RestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EffigyChallengeV2RestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EffigyChallengeV2RestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EffigyChallengeV2RestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EffigyChallengeV2RestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEffigyChallengeV2RestartDungeonReq(this, v8, rsp_0);
    proto::EffigyChallengeV2RestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EffigyChallengeV2RestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EffigyChallengeV2RestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EffigyChallengeV2RestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EffigyChallengeV2RestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EffigyChallengeV2RestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::EffigyChallengeV2RestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EffigyChallengeV2RestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::EffigyChallengeV2RestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 381: range 000000001374AE98-000000001374B1B4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#200}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EffigyChallengeV2ChooseSkillReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EffigyChallengeV2ChooseSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EffigyChallengeV2ChooseSkillRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:381 64 16 11 rsp_ptr:381";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#200}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EffigyChallengeV2ChooseSkillReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EffigyChallengeV2ChooseSkillReq const>(
         (const std::shared_ptr<const proto::EffigyChallengeV2ChooseSkillReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      381);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EffigyChallengeV2ChooseSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EffigyChallengeV2ChooseSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EffigyChallengeV2ChooseSkillRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EffigyChallengeV2ChooseSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EffigyChallengeV2ChooseSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EffigyChallengeV2ChooseSkillRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EffigyChallengeV2ChooseSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EffigyChallengeV2ChooseSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEffigyChallengeV2ChooseSkillReq(this, v8, rsp_0);
    proto::EffigyChallengeV2ChooseSkillRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EffigyChallengeV2ChooseSkillRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EffigyChallengeV2ChooseSkillRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EffigyChallengeV2ChooseSkillRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EffigyChallengeV2ChooseSkillRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EffigyChallengeV2ChooseSkillRsp>::~shared_ptr((std::shared_ptr<proto::EffigyChallengeV2ChooseSkillRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EffigyChallengeV2ChooseSkillReq const>::~shared_ptr((std::shared_ptr<const proto::EffigyChallengeV2ChooseSkillReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 383: range 000000001374B1B6-000000001374B4D2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#201}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::CoinCollectChooseSkillReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::CoinCollectChooseSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::CoinCollectChooseSkillRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:383 64 16 11 rsp_ptr:383";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#201}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::CoinCollectChooseSkillReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::CoinCollectChooseSkillReq const>(
         (const std::shared_ptr<const proto::CoinCollectChooseSkillReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      383);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::CoinCollectChooseSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CoinCollectChooseSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::CoinCollectChooseSkillRsp>();
    rsp_0 = std::__shared_ptr_access<proto::CoinCollectChooseSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::CoinCollectChooseSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::CoinCollectChooseSkillRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::CoinCollectChooseSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CoinCollectChooseSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onCoinCollectChooseSkillReq(this, v8, rsp_0);
    proto::CoinCollectChooseSkillRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::CoinCollectChooseSkillRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::CoinCollectChooseSkillRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::CoinCollectChooseSkillRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::CoinCollectChooseSkillRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::CoinCollectChooseSkillRsp>::~shared_ptr((std::shared_ptr<proto::CoinCollectChooseSkillRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::CoinCollectChooseSkillReq const>::~shared_ptr((std::shared_ptr<const proto::CoinCollectChooseSkillReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 384: range 000000001374B4D4-000000001374B7F0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#202}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::RestartCoinCollectPlaySingleModeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::RestartCoinCollectPlaySingleModeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::RestartCoinCollectPlaySingleModeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:384 64 16 11 rsp_ptr:384";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#202}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::RestartCoinCollectPlaySingleModeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::RestartCoinCollectPlaySingleModeReq const>(
         (const std::shared_ptr<const proto::RestartCoinCollectPlaySingleModeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      384);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::RestartCoinCollectPlaySingleModeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RestartCoinCollectPlaySingleModeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::RestartCoinCollectPlaySingleModeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::RestartCoinCollectPlaySingleModeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::RestartCoinCollectPlaySingleModeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::RestartCoinCollectPlaySingleModeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::RestartCoinCollectPlaySingleModeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::RestartCoinCollectPlaySingleModeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onRestartCoinCollectPlaySingleModeReq(this, v8, rsp_0);
    proto::RestartCoinCollectPlaySingleModeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::RestartCoinCollectPlaySingleModeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::RestartCoinCollectPlaySingleModeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::RestartCoinCollectPlaySingleModeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::RestartCoinCollectPlaySingleModeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::RestartCoinCollectPlaySingleModeRsp>::~shared_ptr((std::shared_ptr<proto::RestartCoinCollectPlaySingleModeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::RestartCoinCollectPlaySingleModeReq const>::~shared_ptr((std::shared_ptr<const proto::RestartCoinCollectPlaySingleModeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 385: range 000000001374B7F2-000000001374BB0E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#203}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::CoinCollectInterruptPlayReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::CoinCollectInterruptPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::CoinCollectInterruptPlayRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:385 64 16 11 rsp_ptr:385";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#203}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::CoinCollectInterruptPlayReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::CoinCollectInterruptPlayReq const>(
         (const std::shared_ptr<const proto::CoinCollectInterruptPlayReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      385);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::CoinCollectInterruptPlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CoinCollectInterruptPlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::CoinCollectInterruptPlayRsp>();
    rsp_0 = std::__shared_ptr_access<proto::CoinCollectInterruptPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::CoinCollectInterruptPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::CoinCollectInterruptPlayRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::CoinCollectInterruptPlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CoinCollectInterruptPlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onCoinCollectInterruptPlayReq(this, v8, rsp_0);
    proto::CoinCollectInterruptPlayRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::CoinCollectInterruptPlayRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::CoinCollectInterruptPlayRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::CoinCollectInterruptPlayRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::CoinCollectInterruptPlayRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::CoinCollectInterruptPlayRsp>::~shared_ptr((std::shared_ptr<proto::CoinCollectInterruptPlayRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::CoinCollectInterruptPlayReq const>::~shared_ptr((std::shared_ptr<const proto::CoinCollectInterruptPlayReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 386: range 000000001374BB10-000000001374BE2C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#204}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::EndCoinCollectPlaySingleModeReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::EndCoinCollectPlaySingleModeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::EndCoinCollectPlaySingleModeRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:386 64 16 11 rsp_ptr:386";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#204}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::EndCoinCollectPlaySingleModeReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::EndCoinCollectPlaySingleModeReq const>(
         (const std::shared_ptr<const proto::EndCoinCollectPlaySingleModeReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      386);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::EndCoinCollectPlaySingleModeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EndCoinCollectPlaySingleModeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::EndCoinCollectPlaySingleModeRsp>();
    rsp_0 = std::__shared_ptr_access<proto::EndCoinCollectPlaySingleModeRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::EndCoinCollectPlaySingleModeRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::EndCoinCollectPlaySingleModeRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::EndCoinCollectPlaySingleModeReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::EndCoinCollectPlaySingleModeReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onEndCoinCollectPlaySingleModeReq(this, v8, rsp_0);
    proto::EndCoinCollectPlaySingleModeRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::EndCoinCollectPlaySingleModeRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::EndCoinCollectPlaySingleModeRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::EndCoinCollectPlaySingleModeRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::EndCoinCollectPlaySingleModeRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::EndCoinCollectPlaySingleModeRsp>::~shared_ptr((std::shared_ptr<proto::EndCoinCollectPlaySingleModeRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::EndCoinCollectPlaySingleModeReq const>::~shared_ptr((std::shared_ptr<const proto::EndCoinCollectPlaySingleModeReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 387: range 000000001374BE2E-000000001374C14A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#205}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::CoinCollectPrepareReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::CoinCollectPrepareRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::CoinCollectPrepareRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:387 64 16 11 rsp_ptr:387";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#205}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::CoinCollectPrepareReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::CoinCollectPrepareReq const>(
         (const std::shared_ptr<const proto::CoinCollectPrepareReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      387);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::CoinCollectPrepareReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CoinCollectPrepareReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::CoinCollectPrepareRsp>();
    rsp_0 = std::__shared_ptr_access<proto::CoinCollectPrepareRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::CoinCollectPrepareRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::CoinCollectPrepareRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::CoinCollectPrepareReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CoinCollectPrepareReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onCoinCollectPrepareReq(this, v8, rsp_0);
    proto::CoinCollectPrepareRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::CoinCollectPrepareRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::CoinCollectPrepareRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::CoinCollectPrepareRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::CoinCollectPrepareRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::CoinCollectPrepareRsp>::~shared_ptr((std::shared_ptr<proto::CoinCollectPrepareRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::CoinCollectPrepareReq const>::~shared_ptr((std::shared_ptr<const proto::CoinCollectPrepareReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 388: range 000000001374C14C-000000001374C468
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#206}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::CoinCollectCheckDoubleStartPlayReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::CoinCollectCheckDoubleStartPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::CoinCollectCheckDoubleStartPlayRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:388 64 16 11 rsp_ptr:388";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#206}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::CoinCollectCheckDoubleStartPlayReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::CoinCollectCheckDoubleStartPlayReq const>(
         (const std::shared_ptr<const proto::CoinCollectCheckDoubleStartPlayReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      388);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::CoinCollectCheckDoubleStartPlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CoinCollectCheckDoubleStartPlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::CoinCollectCheckDoubleStartPlayRsp>();
    rsp_0 = std::__shared_ptr_access<proto::CoinCollectCheckDoubleStartPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::CoinCollectCheckDoubleStartPlayRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::CoinCollectCheckDoubleStartPlayRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::CoinCollectCheckDoubleStartPlayReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::CoinCollectCheckDoubleStartPlayReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onCoinCollectCheckDoubleStartPlayReq(this, v8, rsp_0);
    proto::CoinCollectCheckDoubleStartPlayRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::CoinCollectCheckDoubleStartPlayRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::CoinCollectCheckDoubleStartPlayRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::CoinCollectCheckDoubleStartPlayRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::CoinCollectCheckDoubleStartPlayRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::CoinCollectCheckDoubleStartPlayRsp>::~shared_ptr((std::shared_ptr<proto::CoinCollectCheckDoubleStartPlayRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::CoinCollectCheckDoubleStartPlayReq const>::~shared_ptr((std::shared_ptr<const proto::CoinCollectCheckDoubleStartPlayReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 390: range 000000001374C46A-000000001374C786
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#207}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BrickBreakerSelectSkillReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BrickBreakerSelectSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BrickBreakerSelectSkillRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:390 64 16 11 rsp_ptr:390";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#207}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BrickBreakerSelectSkillReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BrickBreakerSelectSkillReq const>(
         (const std::shared_ptr<const proto::BrickBreakerSelectSkillReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      390);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BrickBreakerSelectSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerSelectSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BrickBreakerSelectSkillRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BrickBreakerSelectSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BrickBreakerSelectSkillRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BrickBreakerSelectSkillRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BrickBreakerSelectSkillReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerSelectSkillReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBrickBreakerSelectSkillReq(this, v8, rsp_0);
    proto::BrickBreakerSelectSkillRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BrickBreakerSelectSkillRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BrickBreakerSelectSkillRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BrickBreakerSelectSkillRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BrickBreakerSelectSkillRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BrickBreakerSelectSkillRsp>::~shared_ptr((std::shared_ptr<proto::BrickBreakerSelectSkillRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BrickBreakerSelectSkillReq const>::~shared_ptr((std::shared_ptr<const proto::BrickBreakerSelectSkillReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 391: range 000000001374C788-000000001374CAA4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#208}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BrickBreakerSelectAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BrickBreakerSelectAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BrickBreakerSelectAvatarRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:391 64 16 11 rsp_ptr:391";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#208}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BrickBreakerSelectAvatarReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BrickBreakerSelectAvatarReq const>(
         (const std::shared_ptr<const proto::BrickBreakerSelectAvatarReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      391);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BrickBreakerSelectAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerSelectAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BrickBreakerSelectAvatarRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BrickBreakerSelectAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BrickBreakerSelectAvatarRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BrickBreakerSelectAvatarRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BrickBreakerSelectAvatarReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerSelectAvatarReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBrickBreakerSelectAvatarReq(this, v8, rsp_0);
    proto::BrickBreakerSelectAvatarRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BrickBreakerSelectAvatarRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BrickBreakerSelectAvatarRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BrickBreakerSelectAvatarRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BrickBreakerSelectAvatarRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BrickBreakerSelectAvatarRsp>::~shared_ptr((std::shared_ptr<proto::BrickBreakerSelectAvatarRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BrickBreakerSelectAvatarReq const>::~shared_ptr((std::shared_ptr<const proto::BrickBreakerSelectAvatarReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 392: range 000000001374CAA6-000000001374CDC2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#209}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BrickBreakerSetReadyReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BrickBreakerSetReadyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BrickBreakerSetReadyRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:392 64 16 11 rsp_ptr:392";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#209}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BrickBreakerSetReadyReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BrickBreakerSetReadyReq const>(
         (const std::shared_ptr<const proto::BrickBreakerSetReadyReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      392);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BrickBreakerSetReadyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerSetReadyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BrickBreakerSetReadyRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BrickBreakerSetReadyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BrickBreakerSetReadyRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BrickBreakerSetReadyRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BrickBreakerSetReadyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerSetReadyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBrickBreakerSetReadyReq(this, v8, rsp_0);
    proto::BrickBreakerSetReadyRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BrickBreakerSetReadyRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BrickBreakerSetReadyRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BrickBreakerSetReadyRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BrickBreakerSetReadyRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BrickBreakerSetReadyRsp>::~shared_ptr((std::shared_ptr<proto::BrickBreakerSetReadyRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BrickBreakerSetReadyReq const>::~shared_ptr((std::shared_ptr<const proto::BrickBreakerSetReadyReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 393: range 000000001374CDC4-000000001374D0E0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#210}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BrickBreakerSetChangingReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BrickBreakerSetChangingRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BrickBreakerSetChangingRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:393 64 16 11 rsp_ptr:393";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#210}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BrickBreakerSetChangingReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BrickBreakerSetChangingReq const>(
         (const std::shared_ptr<const proto::BrickBreakerSetChangingReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      393);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BrickBreakerSetChangingReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerSetChangingReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BrickBreakerSetChangingRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BrickBreakerSetChangingRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BrickBreakerSetChangingRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BrickBreakerSetChangingRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BrickBreakerSetChangingReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerSetChangingReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBrickBreakerSetChangingReq(this, v8, rsp_0);
    proto::BrickBreakerSetChangingRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BrickBreakerSetChangingRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BrickBreakerSetChangingRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BrickBreakerSetChangingRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BrickBreakerSetChangingRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BrickBreakerSetChangingRsp>::~shared_ptr((std::shared_ptr<proto::BrickBreakerSetChangingRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BrickBreakerSetChangingReq const>::~shared_ptr((std::shared_ptr<const proto::BrickBreakerSetChangingReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 394: range 000000001374D0E2-000000001374D3FE
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#211}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SingleStartBrickBreakerReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SingleStartBrickBreakerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SingleStartBrickBreakerRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:394 64 16 11 rsp_ptr:394";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#211}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SingleStartBrickBreakerReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SingleStartBrickBreakerReq const>(
         (const std::shared_ptr<const proto::SingleStartBrickBreakerReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      394);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SingleStartBrickBreakerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SingleStartBrickBreakerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SingleStartBrickBreakerRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SingleStartBrickBreakerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SingleStartBrickBreakerRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SingleStartBrickBreakerRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SingleStartBrickBreakerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SingleStartBrickBreakerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSingleStartBrickBreakerReq(this, v8, rsp_0);
    proto::SingleStartBrickBreakerRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SingleStartBrickBreakerRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SingleStartBrickBreakerRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SingleStartBrickBreakerRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SingleStartBrickBreakerRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SingleStartBrickBreakerRsp>::~shared_ptr((std::shared_ptr<proto::SingleStartBrickBreakerRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SingleStartBrickBreakerReq const>::~shared_ptr((std::shared_ptr<const proto::SingleStartBrickBreakerReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 395: range 000000001374D400-000000001374D71C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#212}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BrickBreakerTwiceStartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BrickBreakerTwiceStartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BrickBreakerTwiceStartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:395 64 16 11 rsp_ptr:395";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#212}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BrickBreakerTwiceStartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BrickBreakerTwiceStartReq const>(
         (const std::shared_ptr<const proto::BrickBreakerTwiceStartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      395);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BrickBreakerTwiceStartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerTwiceStartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BrickBreakerTwiceStartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BrickBreakerTwiceStartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BrickBreakerTwiceStartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BrickBreakerTwiceStartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BrickBreakerTwiceStartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerTwiceStartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBrickBreakerTwiceStartReq(this, v8, rsp_0);
    proto::BrickBreakerTwiceStartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BrickBreakerTwiceStartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BrickBreakerTwiceStartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BrickBreakerTwiceStartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BrickBreakerTwiceStartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BrickBreakerTwiceStartRsp>::~shared_ptr((std::shared_ptr<proto::BrickBreakerTwiceStartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BrickBreakerTwiceStartReq const>::~shared_ptr((std::shared_ptr<const proto::BrickBreakerTwiceStartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 396: range 000000001374D71E-000000001374DA3A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#213}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::SingleRestartBrickBreakerReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::SingleRestartBrickBreakerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::SingleRestartBrickBreakerRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:396 64 16 11 rsp_ptr:396";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#213}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::SingleRestartBrickBreakerReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::SingleRestartBrickBreakerReq const>(
         (const std::shared_ptr<const proto::SingleRestartBrickBreakerReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      396);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::SingleRestartBrickBreakerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SingleRestartBrickBreakerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::SingleRestartBrickBreakerRsp>();
    rsp_0 = std::__shared_ptr_access<proto::SingleRestartBrickBreakerRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::SingleRestartBrickBreakerRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::SingleRestartBrickBreakerRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::SingleRestartBrickBreakerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::SingleRestartBrickBreakerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onSingleRestartBrickBreakerReq(this, v8, rsp_0);
    proto::SingleRestartBrickBreakerRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::SingleRestartBrickBreakerRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::SingleRestartBrickBreakerRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::SingleRestartBrickBreakerRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::SingleRestartBrickBreakerRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::SingleRestartBrickBreakerRsp>::~shared_ptr((std::shared_ptr<proto::SingleRestartBrickBreakerRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::SingleRestartBrickBreakerReq const>::~shared_ptr((std::shared_ptr<const proto::SingleRestartBrickBreakerReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 397: range 000000001374DA3C-000000001374DD58
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#214}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::BrickBreakerQuitReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::BrickBreakerQuitRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::BrickBreakerQuitRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:397 64 16 11 rsp_ptr:397";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#214}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BrickBreakerQuitReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BrickBreakerQuitReq const>(
         (const std::shared_ptr<const proto::BrickBreakerQuitReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      397);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::BrickBreakerQuitReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerQuitReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::BrickBreakerQuitRsp>();
    rsp_0 = std::__shared_ptr_access<proto::BrickBreakerQuitRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::BrickBreakerQuitRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BrickBreakerQuitRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::BrickBreakerQuitReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BrickBreakerQuitReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onBrickBreakerQuitReq(this, v8, rsp_0);
    proto::BrickBreakerQuitRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::BrickBreakerQuitRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::BrickBreakerQuitRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::BrickBreakerQuitRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::BrickBreakerQuitRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::BrickBreakerQuitRsp>::~shared_ptr((std::shared_ptr<proto::BrickBreakerQuitRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BrickBreakerQuitReq const>::~shared_ptr((std::shared_ptr<const proto::BrickBreakerQuitReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 399: range 000000001374DD5A-000000001374E076
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#215}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::ElectroherculesBattleSelectDifficultyReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::ElectroherculesBattleSelectDifficultyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::ElectroherculesBattleSelectDifficultyRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:399 64 16 11 rsp_ptr:399";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#215}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ElectroherculesBattleSelectDifficultyReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ElectroherculesBattleSelectDifficultyReq const>(
         (const std::shared_ptr<const proto::ElectroherculesBattleSelectDifficultyReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      399);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::ElectroherculesBattleSelectDifficultyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ElectroherculesBattleSelectDifficultyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::ElectroherculesBattleSelectDifficultyRsp>();
    rsp_0 = std::__shared_ptr_access<proto::ElectroherculesBattleSelectDifficultyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::ElectroherculesBattleSelectDifficultyRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::ElectroherculesBattleSelectDifficultyRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::ElectroherculesBattleSelectDifficultyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ElectroherculesBattleSelectDifficultyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onElectroherculesBattleSelectDifficultyReq(this, v8, rsp_0);
    proto::ElectroherculesBattleSelectDifficultyRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::ElectroherculesBattleSelectDifficultyRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::ElectroherculesBattleSelectDifficultyRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::ElectroherculesBattleSelectDifficultyRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::ElectroherculesBattleSelectDifficultyRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::ElectroherculesBattleSelectDifficultyRsp>::~shared_ptr((std::shared_ptr<proto::ElectroherculesBattleSelectDifficultyRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::ElectroherculesBattleSelectDifficultyReq const>::~shared_ptr((std::shared_ptr<const proto::ElectroherculesBattleSelectDifficultyReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 401: range 000000001374E078-000000001374E394
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#216}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::DuelHeartEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::DuelHeartEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::DuelHeartEnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:401 64 16 11 rsp_ptr:401";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#216}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::DuelHeartEnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::DuelHeartEnterDungeonReq const>(
         (const std::shared_ptr<const proto::DuelHeartEnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      401);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::DuelHeartEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DuelHeartEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::DuelHeartEnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::DuelHeartEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::DuelHeartEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::DuelHeartEnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::DuelHeartEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DuelHeartEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onDuelHeartEnterDungeonReq(this, v8, rsp_0);
    proto::DuelHeartEnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::DuelHeartEnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::DuelHeartEnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::DuelHeartEnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::DuelHeartEnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::DuelHeartEnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::DuelHeartEnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::DuelHeartEnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::DuelHeartEnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 402: range 000000001374E396-000000001374E6B2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#217}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::DuelHeartRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::DuelHeartRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::DuelHeartRestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:402 64 16 11 rsp_ptr:402";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#217}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::DuelHeartRestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::DuelHeartRestartDungeonReq const>(
         (const std::shared_ptr<const proto::DuelHeartRestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      402);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::DuelHeartRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DuelHeartRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::DuelHeartRestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::DuelHeartRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::DuelHeartRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::DuelHeartRestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::DuelHeartRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DuelHeartRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onDuelHeartRestartDungeonReq(this, v8, rsp_0);
    proto::DuelHeartRestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::DuelHeartRestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::DuelHeartRestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::DuelHeartRestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::DuelHeartRestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::DuelHeartRestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::DuelHeartRestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::DuelHeartRestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::DuelHeartRestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 403: range 000000001374E6B4-000000001374E9D0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#218}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::DuelHeartSelectDifficultyReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::DuelHeartSelectDifficultyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::DuelHeartSelectDifficultyRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:403 64 16 11 rsp_ptr:403";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#218}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::DuelHeartSelectDifficultyReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::DuelHeartSelectDifficultyReq const>(
         (const std::shared_ptr<const proto::DuelHeartSelectDifficultyReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      403);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::DuelHeartSelectDifficultyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DuelHeartSelectDifficultyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::DuelHeartSelectDifficultyRsp>();
    rsp_0 = std::__shared_ptr_access<proto::DuelHeartSelectDifficultyRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::DuelHeartSelectDifficultyRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::DuelHeartSelectDifficultyRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::DuelHeartSelectDifficultyReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DuelHeartSelectDifficultyReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onDuelHeartSelectDifficultyReq(this, v8, rsp_0);
    proto::DuelHeartSelectDifficultyRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::DuelHeartSelectDifficultyRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::DuelHeartSelectDifficultyRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::DuelHeartSelectDifficultyRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::DuelHeartSelectDifficultyRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::DuelHeartSelectDifficultyRsp>::~shared_ptr((std::shared_ptr<proto::DuelHeartSelectDifficultyRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::DuelHeartSelectDifficultyReq const>::~shared_ptr((std::shared_ptr<const proto::DuelHeartSelectDifficultyReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 404: range 000000001374E9D2-000000001374EBB4
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#219}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  int v5; // r14d
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::DuelHeartCgEndNotify,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int result; // eax
  common::milog::MiLogStream v9; // [rsp+10h] [rbp-90h] BYREF
  char v10[112]; // [rsp+30h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 14 notify_ptr:404";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#219}::operator();
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::DuelHeartCgEndNotify>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::DuelHeartCgEndNotify const>(
         (const std::shared_ptr<const proto::DuelHeartCgEndNotify> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      404);
    common::milog::MiLogStream::operator()(&v9, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v9);
    v5 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v7 = std::__shared_ptr_access<proto::DuelHeartCgEndNotify const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::DuelHeartCgEndNotify,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    v5 = ActivityHandler::onDuelHeartCgEndNotify(this, v7);
  }
  std::shared_ptr<proto::DuelHeartCgEndNotify const>::~shared_ptr((std::shared_ptr<const proto::DuelHeartCgEndNotify> *const)(v2 + 32));
  result = v5;
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 406: range 000000001374EBB6-000000001374EED2
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#220}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TeamChainEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TeamChainEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TeamChainEnterDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:406 64 16 11 rsp_ptr:406";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#220}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TeamChainEnterDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TeamChainEnterDungeonReq const>(
         (const std::shared_ptr<const proto::TeamChainEnterDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      406);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TeamChainEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TeamChainEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TeamChainEnterDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TeamChainEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TeamChainEnterDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TeamChainEnterDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TeamChainEnterDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TeamChainEnterDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTeamChainEnterDungeonReq(this, v8, rsp_0);
    proto::TeamChainEnterDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TeamChainEnterDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TeamChainEnterDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TeamChainEnterDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TeamChainEnterDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TeamChainEnterDungeonRsp>::~shared_ptr((std::shared_ptr<proto::TeamChainEnterDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TeamChainEnterDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::TeamChainEnterDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 407: range 000000001374EED4-000000001374F1F0
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#221}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TeamChainRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TeamChainRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TeamChainRestartDungeonRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:407 64 16 11 rsp_ptr:407";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#221}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TeamChainRestartDungeonReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TeamChainRestartDungeonReq const>(
         (const std::shared_ptr<const proto::TeamChainRestartDungeonReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      407);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TeamChainRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TeamChainRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TeamChainRestartDungeonRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TeamChainRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TeamChainRestartDungeonRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TeamChainRestartDungeonRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TeamChainRestartDungeonReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TeamChainRestartDungeonReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTeamChainRestartDungeonReq(this, v8, rsp_0);
    proto::TeamChainRestartDungeonRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TeamChainRestartDungeonRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TeamChainRestartDungeonRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TeamChainRestartDungeonRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TeamChainRestartDungeonRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TeamChainRestartDungeonRsp>::~shared_ptr((std::shared_ptr<proto::TeamChainRestartDungeonRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TeamChainRestartDungeonReq const>::~shared_ptr((std::shared_ptr<const proto::TeamChainRestartDungeonReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 408: range 000000001374F1F2-000000001374F50E
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#222}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::TeamChainTakeCostumeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::TeamChainTakeCostumeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::TeamChainTakeCostumeRewardRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:408 64 16 11 rsp_ptr:408";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#222}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::TeamChainTakeCostumeRewardReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::TeamChainTakeCostumeRewardReq const>(
         (const std::shared_ptr<const proto::TeamChainTakeCostumeRewardReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      408);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::TeamChainTakeCostumeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TeamChainTakeCostumeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::TeamChainTakeCostumeRewardRsp>();
    rsp_0 = std::__shared_ptr_access<proto::TeamChainTakeCostumeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::TeamChainTakeCostumeRewardRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::TeamChainTakeCostumeRewardRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::TeamChainTakeCostumeRewardReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::TeamChainTakeCostumeRewardReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onTeamChainTakeCostumeRewardReq(this, v8, rsp_0);
    proto::TeamChainTakeCostumeRewardRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::TeamChainTakeCostumeRewardRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::TeamChainTakeCostumeRewardRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::TeamChainTakeCostumeRewardRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::TeamChainTakeCostumeRewardRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::TeamChainTakeCostumeRewardRsp>::~shared_ptr((std::shared_ptr<proto::TeamChainTakeCostumeRewardRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::TeamChainTakeCostumeRewardReq const>::~shared_ptr((std::shared_ptr<const proto::TeamChainTakeCostumeRewardReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 410: range 000000001374F510-000000001374F82C
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#223}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LanV3BoatGameStartSingleReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LanV3BoatGameStartSingleRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LanV3BoatGameStartSingleRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:410 64 16 11 rsp_ptr:410";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#223}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LanV3BoatGameStartSingleReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LanV3BoatGameStartSingleReq const>(
         (const std::shared_ptr<const proto::LanV3BoatGameStartSingleReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      410);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LanV3BoatGameStartSingleReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanV3BoatGameStartSingleReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LanV3BoatGameStartSingleRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LanV3BoatGameStartSingleRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LanV3BoatGameStartSingleRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LanV3BoatGameStartSingleRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LanV3BoatGameStartSingleReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanV3BoatGameStartSingleReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLanV3BoatGameStartSingleReq(this, v8, rsp_0);
    proto::LanV3BoatGameStartSingleRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LanV3BoatGameStartSingleRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LanV3BoatGameStartSingleRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LanV3BoatGameStartSingleRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LanV3BoatGameStartSingleRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LanV3BoatGameStartSingleRsp>::~shared_ptr((std::shared_ptr<proto::LanV3BoatGameStartSingleRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LanV3BoatGameStartSingleReq const>::~shared_ptr((std::shared_ptr<const proto::LanV3BoatGameStartSingleReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 411: range 000000001374F82E-000000001374FB4A
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#224}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LanV3BoatInterruptSettleStageReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LanV3BoatInterruptSettleStageRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LanV3BoatInterruptSettleStageRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:411 64 16 11 rsp_ptr:411";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#224}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LanV3BoatInterruptSettleStageReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LanV3BoatInterruptSettleStageReq const>(
         (const std::shared_ptr<const proto::LanV3BoatInterruptSettleStageReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      411);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LanV3BoatInterruptSettleStageReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanV3BoatInterruptSettleStageReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LanV3BoatInterruptSettleStageRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LanV3BoatInterruptSettleStageRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LanV3BoatInterruptSettleStageRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LanV3BoatInterruptSettleStageRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LanV3BoatInterruptSettleStageReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanV3BoatInterruptSettleStageReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLanV3BoatInterruptSettleStageReq(this, v8, rsp_0);
    proto::LanV3BoatInterruptSettleStageRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LanV3BoatInterruptSettleStageRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LanV3BoatInterruptSettleStageRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LanV3BoatInterruptSettleStageRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LanV3BoatInterruptSettleStageRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LanV3BoatInterruptSettleStageRsp>::~shared_ptr((std::shared_ptr<proto::LanV3BoatInterruptSettleStageRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LanV3BoatInterruptSettleStageReq const>::~shared_ptr((std::shared_ptr<const proto::LanV3BoatInterruptSettleStageReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 412: range 000000001374FB4C-000000001374FE68
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#225}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LanV3RaceRestartReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LanV3RaceRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LanV3RaceRestartRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:412 64 16 11 rsp_ptr:412";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#225}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LanV3RaceRestartReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LanV3RaceRestartReq const>(
         (const std::shared_ptr<const proto::LanV3RaceRestartReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      412);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LanV3RaceRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanV3RaceRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LanV3RaceRestartRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LanV3RaceRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LanV3RaceRestartRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LanV3RaceRestartRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LanV3RaceRestartReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanV3RaceRestartReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLanV3RaceRestartReq(this, v8, rsp_0);
    proto::LanV3RaceRestartRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LanV3RaceRestartRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LanV3RaceRestartRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LanV3RaceRestartRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LanV3RaceRestartRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LanV3RaceRestartRsp>::~shared_ptr((std::shared_ptr<proto::LanV3RaceRestartRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LanV3RaceRestartReq const>::~shared_ptr((std::shared_ptr<const proto::LanV3RaceRestartReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 413: range 000000001374FE6A-0000000013750186
int __cdecl ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#226}::operator()(
        const ActivityHandler::addPacketFuncToMap::<lambda(common::minet::PacketPtr)> *const __closure,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r12
  __int64 v3; // rax
  _DWORD *v4; // r13
  int v5; // r14d
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  ActivityHandler *this; // r14
  std::__shared_ptr_access<const proto::LanV3ShadowFinishLevelReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  GameserverService *v9; // r14
  int result; // eax
  uint32_t uid; // [rsp+18h] [rbp-D8h]
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-D4h]
  std::__shared_ptr_access<proto::LanV3ShadowFinishLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *rsp_0; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<proto::LanV3ShadowFinishLevelRsp> p_proto_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v2 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_1(96LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "2 32 16 11 req_ptr:413 64 16 11 rsp_ptr:413";
  *(_QWORD *)(v2 + 16) = ActivityHandler::addPacketFuncToMap(std::map<unsigned int,std::function<int ()(std::shared_ptr<common::minet::Packet>)>> &)::{lambda(std::shared_ptr<common::minet::Packet>)#226}::operator();
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -202178560;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::LanV3ShadowFinishLevelReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::LanV3ShadowFinishLevelReq const>(
         (const std::shared_ptr<const proto::LanV3ShadowFinishLevelReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      413);
    common::milog::MiLogStream::operator()(&v15, off_25046AE0);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v5 = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::LanV3ShadowFinishLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanV3ShadowFinishLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    common::tools::perf::make_shared<proto::LanV3ShadowFinishLevelRsp>();
    rsp_0 = std::__shared_ptr_access<proto::LanV3ShadowFinishLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<proto::LanV3ShadowFinishLevelRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::LanV3ShadowFinishLevelRsp::set_retcode(rsp_0, -1);
    v6 = std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    uid = common::minet::Packet::getUserId(v6);
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    this = __closure->__this;
    v8 = std::__shared_ptr_access<proto::LanV3ShadowFinishLevelReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::LanV3ShadowFinishLevelReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = ActivityHandler::onLanV3ShadowFinishLevelReq(this, v8, rsp_0);
    proto::LanV3ShadowFinishLevelRsp::set_retcode(rsp_0, retcode);
    v9 = ServiceBox::findService<GameserverService>();
    std::shared_ptr<proto::LanV3ShadowFinishLevelRsp>::shared_ptr(
      &p_proto_ptr,
      (const std::shared_ptr<proto::LanV3ShadowFinishLevelRsp> *)(v2 + 64));
    GameserverService::sendRspToClient<proto::LanV3ShadowFinishLevelRsp>(v9, uid, &p_proto_ptr);
    std::shared_ptr<proto::LanV3ShadowFinishLevelRsp>::~shared_ptr(&p_proto_ptr);
    v5 = retcode;
    std::shared_ptr<proto::LanV3ShadowFinishLevelRsp>::~shared_ptr((std::shared_ptr<proto::LanV3ShadowFinishLevelRsp> *const)(v2 + 64));
  }
  std::shared_ptr<proto::LanV3ShadowFinishLevelReq const>::~shared_ptr((std::shared_ptr<const proto::LanV3ShadowFinishLevelReq> *const)(v2 + 32));
  result = v5;
  if ( v16 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 419: range 0000000013762798-0000000013762A5B
int32_t __cdecl ActivityHandler::onGetActivityScheduleReq(
        ActivityHandler *const this,
        const proto::GetActivityScheduleReq *req,
        proto::GetActivityScheduleRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r12
  time_t Now; // r14
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  google::protobuf::uint32 v8; // eax
  proto::ActivityScheduleInfo *v9; // rax
  int32_t result; // eax
  std::vector<proto::ActivityScheduleInfo>::iterator __for_begin; // [rsp+20h] [rbp-D0h] BYREF
  std::vector<proto::ActivityScheduleInfo>::iterator __for_end; // [rsp+28h] [rbp-C8h] BYREF
  PlayerActivityComp *activity_comp; // [rsp+30h] [rbp-C0h]
  time_t open_time; // [rsp+38h] [rbp-B8h]
  std::vector<proto::ActivityScheduleInfo> *__for_range; // [rsp+40h] [rbp-B0h]
  const proto::ActivityScheduleInfo *schedule_info; // [rsp+48h] [rbp-A8h]
  std::shared_ptr<Config> v18; // [rsp+50h] [rbp-A0h] BYREF
  char v19[144]; // [rsp+60h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 24 16 schedule_vec:423";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGetActivityScheduleReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -218103808;
  v5[536862722] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  activity_comp = Player::getActivityComp(this->player_);
  PlayerActivityComp::refreshActivityAndUpdateTimer(activity_comp);
  std::vector<proto::ActivityScheduleInfo>::vector((std::vector<proto::ActivityScheduleInfo> *const)(v3 + 32));
  PlayerActivityComp::findNowAndFutureScheduleConfig(
    activity_comp,
    (std::vector<proto::ActivityScheduleInfo> *)(v3 + 32));
  Now = common::tools::TimeUtils::getNow();
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)&v18);
  v7 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v18);
  open_time = Now
            + 86400LL
            * ConstValueExcelConfigMgr::getActivityDisplayDays(&v7->design_config.txt_config_mgr.const_value_config_mgr);
  std::shared_ptr<Config>::~shared_ptr(&v18);
  __for_range = (std::vector<proto::ActivityScheduleInfo> *)(v3 + 32);
  __for_begin._M_current = std::vector<proto::ActivityScheduleInfo>::begin((std::vector<proto::ActivityScheduleInfo> *const)(v3 + 32))._M_current;
  __for_end._M_current = std::vector<proto::ActivityScheduleInfo>::end((std::vector<proto::ActivityScheduleInfo> *const)(v3 + 32))._M_current;
  while ( __gnu_cxx::operator!=<proto::ActivityScheduleInfo *,std::vector<proto::ActivityScheduleInfo>>(
            &__for_begin,
            &__for_end) )
  {
    schedule_info = __gnu_cxx::__normal_iterator<proto::ActivityScheduleInfo *,std::vector<proto::ActivityScheduleInfo>>::operator*(&__for_begin);
    v8 = proto::ActivityScheduleInfo::begin_time(schedule_info);
    if ( open_time >= v8 )
    {
      v9 = proto::GetActivityScheduleRsp::add_activity_schedule_list(rsp_0);
      proto::ActivityScheduleInfo::operator=(v9, schedule_info);
    }
    __gnu_cxx::__normal_iterator<proto::ActivityScheduleInfo *,std::vector<proto::ActivityScheduleInfo>>::operator++(&__for_begin);
  }
  std::vector<proto::ActivityScheduleInfo>::~vector((std::vector<proto::ActivityScheduleInfo> *const)(v3 + 32));
  result = 0;
  if ( v19 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 438: range 0000000013762A5C-0000000013763145
int32_t __cdecl ActivityHandler::onGetActivityInfoReq(
        ActivityHandler *const this,
        const proto::GetActivityInfoReq *req,
        proto::GetActivityInfoRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  unsigned __int64 v8; // rax
  unsigned __int64 v9; // rdx
  unsigned __int64 v10; // rax
  unsigned __int64 v11; // rdx
  BaseActivity *v12; // rax
  std::_Rb_tree_const_iterator<unsigned int>::_Base_ptr M_node; // r14
  std::set<unsigned int>::iterator v14; // rax
  BaseActivity *v15; // rax
  std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> >::_Base_ptr v16; // r14
  std::set<std::pair<unsigned int,unsigned int>>::iterator v17; // rax
  google::protobuf::uint32 *v18; // rdx
  int32_t result; // eax
  std::set<unsigned int>::iterator __for_begin_0; // [rsp+28h] [rbp-178h] BYREF
  std::set<unsigned int>::iterator __for_end_0; // [rsp+30h] [rbp-170h] BYREF
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_begin; // [rsp+38h] [rbp-168h]
  PlayerActivityComp *activity_comp; // [rsp+40h] [rbp-160h]
  const google::protobuf::RepeatedField<unsigned int> *__for_range; // [rsp+48h] [rbp-158h]
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_end; // [rsp+50h] [rbp-150h]
  proto::ActivityInfo *activity_info; // [rsp+58h] [rbp-148h]
  const std::set<unsigned int> *sale_id_set; // [rsp+60h] [rbp-140h]
  const std::set<std::pair<unsigned int,unsigned int>> *disable_point_set; // [rsp+68h] [rbp-138h]
  std::set<unsigned int> *__for_range_0; // [rsp+70h] [rbp-130h]
  std::set<std::pair<unsigned int,unsigned int>> *__for_range_1; // [rsp+78h] [rbp-128h]
  const std::pair<unsigned int,unsigned int> *point_pair; // [rsp+80h] [rbp-120h]
  proto::Uint32Pair *notify_pair; // [rsp+88h] [rbp-118h]
  char v34[272]; // [rsp+90h] [rbp-110h] BYREF

  v3 = (unsigned __int64)v34;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(224LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 16 16 activity_ptr:444 64 48 25 activated_sale_id_set:440 144 48 42 disable_transfer_point_"
                        "interaction_set:441";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGetActivityInfoReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862723] = -219021312;
  v5[536862724] = 62194;
  v5[536862726] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  activity_comp = Player::getActivityComp(this->player_);
  std::set<unsigned int>::set((std::set<unsigned int> *const)(v3 + 64));
  std::set<std::pair<unsigned int,unsigned int>>::set((std::set<std::pair<unsigned int,unsigned int>> *const)(v3 + 144));
  __for_range = proto::GetActivityInfoReq::activity_id_list(req);
  __for_begin = google::protobuf::RepeatedField<unsigned int>::begin(__for_range);
  __for_end = google::protobuf::RepeatedField<unsigned int>::end(__for_range);
  while ( __for_begin != __for_end )
  {
    if ( *(_BYTE *)(((unsigned __int64)__for_begin >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)__for_begin & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__for_begin >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4();
    }
    PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), (uint32_t)activity_comp);
    if ( !std::operator==<BaseActivity>(0LL, (const std::shared_ptr<BaseActivity> *)(v3 + 32)) )
    {
      v6 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      if ( BaseActivity::isOpening(v6, 0) )
      {
        v8 = (unsigned __int64)std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        if ( *(_BYTE *)((v8 >> 3) + 0x7FFF8000) )
          v8 = __asan_report_load8();
        v9 = *(_QWORD *)v8 + 168LL;
        if ( *(_BYTE *)((v9 >> 3) + 0x7FFF8000) )
          v8 = __asan_report_load8();
        (*(void (__fastcall **)(unsigned __int64))v9)(v8);
        activity_info = proto::GetActivityInfoRsp::add_activity_info_list(rsp_0);
        v10 = (unsigned __int64)std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        if ( *(_BYTE *)((v10 >> 3) + 0x7FFF8000) )
          v10 = __asan_report_load8();
        v11 = *(_QWORD *)v10 + 40LL;
        if ( *(_BYTE *)((v11 >> 3) + 0x7FFF8000) )
          v10 = __asan_report_load8();
        (*(void (__fastcall **)(unsigned __int64, proto::ActivityInfo *))v11)(v10, activity_info);
        v12 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        sale_id_set = BaseActivity::getActivatedSaleIdSet(v12);
        M_node = std::set<unsigned int>::end(sale_id_set)._M_node;
        v14._M_node = std::set<unsigned int>::begin(sale_id_set)._M_node;
        std::set<unsigned int>::insert<std::_Rb_tree_const_iterator<unsigned int>>(
          (std::set<unsigned int> *const)(v3 + 64),
          v14,
          (std::_Rb_tree_const_iterator<unsigned int>)M_node);
        v15 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        disable_point_set = BaseActivity::getActivityDisableTransferPointInteractionSet(v15);
        v16 = std::set<std::pair<unsigned int,unsigned int>>::end(disable_point_set)._M_node;
        v17._M_node = std::set<std::pair<unsigned int,unsigned int>>::begin(disable_point_set)._M_node;
        std::set<std::pair<unsigned int,unsigned int>>::insert<std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int>>>(
          (std::set<std::pair<unsigned int,unsigned int>> *const)(v3 + 144),
          v17,
          (std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> >)v16);
      }
    }
    std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
    ++__for_begin;
  }
  __for_range_0 = (std::set<unsigned int> *)(v3 + 64);
  __for_begin_0._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v3 + 64))._M_node;
  __for_end_0._M_node = std::set<unsigned int>::end((const std::set<unsigned int> *const)(v3 + 64))._M_node;
  while ( std::operator!=(&__for_begin_0, &__for_end_0) )
  {
    v18 = (google::protobuf::uint32 *)std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin_0);
    if ( *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)v18 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v18 >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4();
    }
    proto::GetActivityInfoRsp::add_activated_sale_id_list(rsp_0, *v18);
    std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin_0);
  }
  __for_range_1 = (std::set<std::pair<unsigned int,unsigned int>> *)(v3 + 144);
  __for_begin_0._M_node = std::set<std::pair<unsigned int,unsigned int>>::begin((const std::set<std::pair<unsigned int,unsigned int>> *const)(v3 + 144))._M_node;
  __for_end_0._M_node = std::set<std::pair<unsigned int,unsigned int>>::end(__for_range_1)._M_node;
  while ( std::operator!=(
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> >::_Self *)&__for_begin_0,
            (const std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> >::_Self *)&__for_end_0) )
  {
    point_pair = std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int>>::operator*((const std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> > *const)&__for_begin_0);
    notify_pair = proto::GetActivityInfoRsp::add_disable_transfer_point_interaction_list(rsp_0);
    if ( *(_BYTE *)(((unsigned __int64)point_pair >> 3) + 0x7FFF8000) != 0
      && (char)(((unsigned __int8)point_pair & 7) + 3) >= *(_BYTE *)(((unsigned __int64)point_pair >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4();
    }
    proto::Uint32Pair::set_key(notify_pair, point_pair->first);
    if ( *(_BYTE *)(((unsigned __int64)&point_pair->second >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)point_pair + 4) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&point_pair->second >> 3)
                                                               + 0x7FFF8000) )
    {
      __asan_report_load4();
    }
    proto::Uint32Pair::set_value(notify_pair, point_pair->second);
    std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int>>::operator++((std::_Rb_tree_const_iterator<std::pair<unsigned int,unsigned int> > *const)&__for_begin_0);
  }
  std::set<std::pair<unsigned int,unsigned int>>::~set((std::set<std::pair<unsigned int,unsigned int>> *const)(v3 + 144));
  std::set<unsigned int>::~set((std::set<unsigned int> *const)(v3 + 64));
  result = 0;
  if ( v34 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF800C) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 472: range 0000000013763146-00000000137632E1
int32_t __cdecl ActivityHandler::onActivityPlayOpenAnimNotify(
        ActivityHandler *const this,
        const proto::ActivityPlayOpenAnimNotify *notify)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  BaseActivity *v8; // rax
  int32_t result; // eax
  char v10[112]; // [rsp+10h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 16 activity_ptr:473";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onActivityPlayOpenAnimNotify;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::ActivityPlayOpenAnimNotify::activity_id(notify);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v2 + 32), ActivityComp);
  if ( std::operator!=<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v2 + 32), 0LL) )
  {
    v6 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    if ( BaseActivity::isOpening(v6, 0) )
    {
      v8 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
      BaseActivity::playOpenAnim(v8);
    }
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v2 + 32));
  result = 0;
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 482: range 00000000137632E2-0000000013763554
int32_t __cdecl ActivityHandler::onLoadActivityTerrainNotify(
        ActivityHandler *const this,
        const proto::LoadActivityTerrainNotify *notify)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  uint32_t ActivityComp; // r14d
  unsigned __int64 v6; // rax
  unsigned __int64 v7; // rdx
  common::milog::MiLogStream *v8; // r14
  common::milog::MiLogStream *v9; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+1Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+20h] [rbp-90h] BYREF
  char v13[112]; // [rsp+40h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 16 activity_ptr:483";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onLoadActivityTerrainNotify;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::LoadActivityTerrainNotify::activity_id(notify);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v2 + 32), ActivityComp);
  if ( std::operator!=<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v2 + 32), 0LL) )
  {
    v6 = (unsigned __int64)std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    if ( *(_BYTE *)((v6 >> 3) + 0x7FFF8000) )
      v6 = __asan_report_load8();
    v7 = *(_QWORD *)v6 + 160LL;
    if ( *(_BYTE *)((v7 >> 3) + 0x7FFF8000) )
      v6 = __asan_report_load8();
    (*(void (__fastcall **)(unsigned __int64))v7)(v6);
  }
  else
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onLoadActivityTerrainNotify",
      491);
    v8 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
           &v12,
           (const char (*)[31])"findBaseActivity activity_id: ");
    val = proto::LoadActivityTerrainNotify::activity_id(notify);
    v9 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &val);
    common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v9, (const char (*)[7])" fails");
    common::milog::MiLogStream::~MiLogStream(&v12);
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v2 + 32));
  result = 0;
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 498: range 00000000137636F0-00000000137646F3
int32_t __cdecl ActivityHandler::onEnterTrialAvatarActivityDungeonReq(
        ActivityHandler *const this,
        const proto::EnterTrialAvatarActivityDungeonReq *req,
        proto::EnterTrialAvatarActivityDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  PlayerSceneComp *SceneComp; // rax
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  PlayerSceneComp *v11; // rax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  const std::unordered_map<unsigned int,unsigned int> *v14; // rax
  common::milog::MiLogStream *v15; // r14
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rax
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // rax
  common::milog::MiLogStream *v19; // rax
  __int32 v20; // eax
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rcx
  bool v26; // r14
  DungeonScene *v27; // r14
  PlayerEventComp *EventComp; // r14
  PlayerBasicComp *BasicComp; // rax
  std::__shared_ptr_access<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v30; // r14
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v31; // rax
  uint32_t ScheduleId; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v33; // r14
  google::protobuf::uint32 v34; // eax
  std::__shared_ptr_access<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v35; // r14
  DungeonScene *v36; // rax
  const std::string *v37; // rax
  Player *v38; // r14
  google::protobuf::uint32 v39; // eax
  google::protobuf::uint32 v40; // eax
  int32_t result; // eax
  std::string v42; // [rsp+0h] [rbp-200h]
  int32_t ret; // [rsp+28h] [rbp-1D8h]
  __int32 scene_id; // [rsp+2Ch] [rbp-1D4h]
  PlayerTrialAvatarComp *trial_avatar_comp; // [rsp+30h] [rbp-1D0h]
  PlayerDungeonComp *dungeon_comp; // [rsp+38h] [rbp-1C8h]
  TrialAvatarActivityExcelConfigMgr *config_mgr; // [rsp+40h] [rbp-1C0h]
  const data::ActivityTrialAvatarConfig *config_ptr; // [rsp+48h] [rbp-1B8h]
  const int *enter_dungeon_retcode; // [rsp+50h] [rbp-1B0h]
  const std::shared_ptr<DungeonScene> *dungeon_scene_ptr; // [rsp+58h] [rbp-1A8h]
  std::shared_ptr<google::protobuf::Message> p_body_ptr; // [rsp+60h] [rbp-1A0h] BYREF
  std::shared_ptr<google::protobuf::Message> v52; // [rsp+70h] [rbp-190h] BYREF
  std::pair<int,std::shared_ptr<DungeonScene> > __in; // [rsp+80h] [rbp-180h] BYREF
  EnterDungeonOption v54; // [rsp+A0h] [rbp-160h] BYREF
  common::milog::MiLogStream v55; // [rsp+C0h] [rbp-140h] BYREF
  std::map<unsigned int,unsigned int> level_config_id_map; // [rsp+E0h] [rbp-120h] BYREF
  char v57[240]; // [rsp+110h] [rbp-F0h] BYREF

  *(&v42._anon_0._M_allocated_capacity + 1) = (std::string::size_type)this;
  v42._anon_0._M_allocated_capacity = (std::string::size_type)req;
  v42._M_string_length = (std::string::size_type)rsp_0;
  v3 = (unsigned __int64)v57;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "6 48 1 10 holder:595 64 4 25 trial_avatar_index_id:528 80 4 14 dungeon_id:552 96 16 16 activity_"
                        "ptr:512 128 16 18 base_event_ptr:591 160 16 47 enter_trial_avatar_activity_dungeon_log_ptr:598";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEnterTrialAvatarActivityDungeonReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234556924;
  v5[536862723] = -219021312;
  v5[536862724] = -219021312;
  v5[536862725] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  trial_avatar_comp = Player::getTrialAvatarComp(this->player_);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  dungeon_comp = Player::getDungeonComp(this->player_);
  ret = -1;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  SceneComp = Player::getSceneComp(this->player_);
  scene_id = PlayerSceneComp::getCurSceneId(SceneComp);
  if ( scene_id )
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    proto::EnterTrialAvatarActivityDungeonReq::activity_id(req);
    PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 96), ActivityComp);
    if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v3 + 96), 0LL)
      || (v8 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96)),
          !BaseActivity::isOpening(v8, 0)) )
    {
      common::milog::MiLogStream::create(
        &v55,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onEnterTrialAvatarActivityDungeonReq",
        515);
      v10 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
              &v55,
              (const char (*)[37])"[TRIAL_AVATAR] activity is not open:");
      *(_DWORD *)(v3 + 80) = proto::EnterTrialAvatarActivityDungeonReq::activity_id(req);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v3 + 80));
      common::milog::MiLogStream::~MiLogStream(&v55);
      ret = 860;
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      v11 = Player::getSceneComp(this->player_);
      if ( !PlayerSceneComp::isInMyPlayerWorld(v11) )
      {
        common::milog::MiLogStream::create(
          &v55,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/handler/activity_handler.cpp",
          "onEnterTrialAvatarActivityDungeonReq",
          523);
        common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
          &v55,
          (const char (*)[36])"[TRIAL_AVATAR] is not in self world");
        common::milog::MiLogStream::~MiLogStream(&v55);
        ret = 512;
      }
      else
      {
        *(_DWORD *)(v3 + 64) = proto::EnterTrialAvatarActivityDungeonReq::trial_avatar_index_id(req);
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v52);
        config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v52)->design_config.txt_config_mgr.trial_avatar_activity_config_mgr;
        std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)&v52);
        v12 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
        *(_DWORD *)(v3 + 80) = BaseActivity::getScheduleId(v12);
        if ( !common::tools::MiscUtils::isContains<std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>> const,unsigned int>(
                &config_mgr->schedule_trial_reward_map,
                (const unsigned int *)(v3 + 80)) )
        {
          common::milog::MiLogStream::create(
            &v55,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/handler/activity_handler.cpp",
            "onEnterTrialAvatarActivityDungeonReq",
            532);
          common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
            &v55,
            (const char (*)[46])"[TRIAL_AVATAR] activity's schedule is invalid");
          common::milog::MiLogStream::~MiLogStream(&v55);
        }
        else
        {
          v13 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          *(_DWORD *)(v3 + 80) = BaseActivity::getScheduleId(v13);
          v14 = std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::at(
                  &config_mgr->schedule_trial_reward_map,
                  (const std::unordered_map<unsigned int,std::unordered_map<unsigned int,unsigned int>>::key_type *)(v3 + 80));
          if ( !common::tools::MiscUtils::isContains<std::unordered_map<unsigned int,unsigned int> const,unsigned int>(
                  v14,
                  (const unsigned int *)(v3 + 64)) )
          {
            common::milog::MiLogStream::create(
              &v55,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/handler/activity_handler.cpp",
              "onEnterTrialAvatarActivityDungeonReq",
              538);
            v15 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
                    &v55,
                    (const char (*)[72])"[TRIAL_AVATAR] trial_avatar_index_id is not in cur schedule, schedule: ");
            v16 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
            *(_DWORD *)(v3 + 80) = BaseActivity::getScheduleId(v16);
            v17 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v15,
                    (const unsigned int *)(v3 + 80));
            v18 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
                    v17,
                    (const char (*)[25])" trial_avatar_index_id: ");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, (const unsigned int *)(v3 + 64));
            common::milog::MiLogStream::~MiLogStream(&v55);
          }
          else
          {
            config_ptr = TrialAvatarActivityExcelConfigMgr::findActivityTrialAvatarConfig(
                           config_mgr,
                           *(_DWORD *)(v3 + 64));
            if ( config_ptr )
            {
              if ( *(_BYTE *)(((unsigned __int64)&config_ptr->dungeon_id >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&config_ptr->dungeon_id >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4();
              }
              *(_DWORD *)(v3 + 80) = config_ptr->dungeon_id;
              memset(&v54, 0, sizeof(v54));
              EnterDungeonOption::EnterDungeonOption(&v54);
              memset(&level_config_id_map, 0, sizeof(level_config_id_map));
              std::map<unsigned int,unsigned int>::map(&level_config_id_map);
              v20 = proto::EnterTrialAvatarActivityDungeonReq::enter_point_id(req);
              PlayerDungeonComp::enterDungeon(
                &__in,
                dungeon_comp,
                *(_DWORD *)(v3 + 80),
                scene_id,
                v20,
                &level_config_id_map,
                v54);
              std::map<unsigned int,unsigned int>::~map(&level_config_id_map);
              enter_dungeon_retcode = std::get<0ul,int,std::shared_ptr<DungeonScene>>(&__in);
              dungeon_scene_ptr = std::get<1ul,int,std::shared_ptr<DungeonScene>>(&__in);
              if ( *(_BYTE *)(((unsigned __int64)enter_dungeon_retcode >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)enter_dungeon_retcode & 7) + 3) >= *(_BYTE *)(((unsigned __int64)enter_dungeon_retcode >> 3)
                                                                                        + 0x7FFF8000) )
              {
                __asan_report_load4();
              }
              if ( *enter_dungeon_retcode )
              {
                PlayerTrialAvatarComp::resetTrialAvatarIndexId(trial_avatar_comp);
                common::milog::MiLogStream::create(
                  &v55,
                  &common::milog::MiLogDefault::default_log_obj_,
                  1u,
                  "./src/handler/activity_handler.cpp",
                  "onEnterTrialAvatarActivityDungeonReq",
                  559);
                v21 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                        &v55,
                        (const char (*)[46])"[TRIAL_AVATAR] enterDungeon fail, dungeon_id:");
                v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                        v21,
                        (const unsigned int *)(v3 + 80));
                v23 = common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(
                        v22,
                        (const char (*)[24])" enter_dungeon_retcode:");
                v24 = common::milog::MiLogStream::operator<<<int,(int *)0>(v23, enter_dungeon_retcode);
                v25 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v24, (const char (*)[9])" player:");
                if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                  __asan_report_load8();
                operator<<(v25, this->player_);
                common::milog::MiLogStream::~MiLogStream(&v55);
                if ( *(_BYTE *)(((unsigned __int64)enter_dungeon_retcode >> 3) + 0x7FFF8000) != 0
                  && (char)(((unsigned __int8)enter_dungeon_retcode & 7) + 3) >= *(_BYTE *)(((unsigned __int64)enter_dungeon_retcode >> 3)
                                                                                          + 0x7FFF8000) )
                {
                  __asan_report_load4();
                }
                ret = *enter_dungeon_retcode;
              }
              else if ( std::operator==<DungeonScene>(0LL, dungeon_scene_ptr) )
              {
                ret = 0;
              }
              else
              {
                std::shared_ptr<Scene>::shared_ptr<DungeonScene,void>(
                  (std::shared_ptr<Scene> *const)&v52,
                  dungeon_scene_ptr);
                v26 = !TrialAvatarActivity::isTrialAvatarActivityDungeon((ScenePtr *)&v52);
                std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)&v52);
                if ( v26 )
                {
                  common::milog::MiLogStream::create(
                    &v55,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/handler/activity_handler.cpp",
                    "onEnterTrialAvatarActivityDungeonReq",
                    571);
                  common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
                    &v55,
                    (const char (*)[43])"enter trial avatar activity dungeon failed");
                  common::milog::MiLogStream::~MiLogStream(&v55);
                }
                else
                {
                  v27 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)dungeon_scene_ptr);
                  std::function<void ()(Player &,DungeonScene &,proto::DungeonSettleNotify &)>::function<ActivityHandler::onEnterTrialAvatarActivityDungeonReq(proto::EnterTrialAvatarActivityDungeonReq const&,proto::EnterTrialAvatarActivityDungeonRsp &)::{lambda(Player &,DungeonScene &,proto::DungeonSettleNotify &)#1},void,void>(
                    (std::function<void(Player&,DungeonScene&,proto::DungeonSettleNotify&)> *const)&v55,
                    (ActivityHandler::onEnterTrialAvatarActivityDungeonReq::<lambda(Player&, DungeonScene&, proto::DungeonSettleNotify&)>)dungeon_scene_ptr);
                  DungeonScene::registerDungeonSettleCallback(v27, (DungeonSettleCallback *)&v55);
                  std::function<void ()(Player &,DungeonScene &,proto::DungeonSettleNotify &)>::~function((std::function<void(Player&,DungeonScene&,proto::DungeonSettleNotify&)> *const)&v55);
                  LODWORD(v27) = *(_DWORD *)(v3 + 64);
                  std::shared_ptr<DungeonScene>::shared_ptr(
                    (std::shared_ptr<DungeonScene> *const)&v52,
                    dungeon_scene_ptr);
                  PlayerTrialAvatarComp::markTrialAvatarActivity(
                    trial_avatar_comp,
                    (DungeonScenePtr *)&v52,
                    (uint32_t)v27);
                  std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&v52);
                  common::tools::perf::make_shared<ManualTransportEvent>();
                  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8();
                  EventComp = Player::getEventComp(this->player_);
                  std::shared_ptr<BaseEvent>::shared_ptr<ManualTransportEvent,void>(
                    (std::shared_ptr<BaseEvent> *const)&v52,
                    (const std::shared_ptr<ManualTransportEvent> *)(v3 + 128));
                  PlayerEventComp::notifyEvent(EventComp, (BaseEventPtr *)&v52);
                  std::shared_ptr<BaseEvent>::~shared_ptr((std::shared_ptr<BaseEvent> *const)&v52);
                  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                    __asan_report_load8();
                  BasicComp = Player::getBasicComp(this->player_);
                  PlayerBasicComp::getNextTransNo[abi:cxx11]((std::string *)&v55, BasicComp);
                  StatLogUtils::ContextHolder::ContextHolder((StatLogUtils::ContextHolder *const)(v3 + 48), 0xB18u, v42);
                  std::string::~string(&v55);
                  common::tools::perf::make_shared<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon>();
                  v30 = std::__shared_ptr_access<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
                  v31 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
                  ScheduleId = BaseActivity::getScheduleId(v31);
                  proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon::set_schedule_id(v30, ScheduleId);
                  v33 = std::__shared_ptr_access<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
                  v34 = proto::EnterTrialAvatarActivityDungeonReq::trial_avatar_index_id((const proto::EnterTrialAvatarActivityDungeonReq *const)v42._anon_0._M_allocated_capacity);
                  proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon::set_trial_avatar_index(v33, v34);
                  v35 = std::__shared_ptr_access<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
                  v36 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)dungeon_scene_ptr);
                  v37 = DungeonScene::getTransaction[abi:cxx11](v36);
                  proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon::set_transaction(v35, v37);
                  if ( *(_BYTE *)(((*(&v42._anon_0._M_allocated_capacity + 1) + 8) >> 3) + 0x7FFF8000) )
                    __asan_report_load8();
                  v38 = *(Player **)(*(&v42._anon_0._M_allocated_capacity + 1) + 8);
                  std::shared_ptr<google::protobuf::Message>::shared_ptr(&v52, 0LL);
                  std::shared_ptr<google::protobuf::Message>::shared_ptr<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon,void>(
                    &p_body_ptr,
                    (const std::shared_ptr<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon> *)(v3 + 160));
                  Player::printStatLog(v38, &p_body_ptr, &v52, 0xEu);
                  std::shared_ptr<google::protobuf::Message>::~shared_ptr(&p_body_ptr);
                  std::shared_ptr<google::protobuf::Message>::~shared_ptr(&v52);
                  ret = 0;
                  std::shared_ptr<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon>::~shared_ptr((std::shared_ptr<proto_log::PlayerLogBodyTrialAvatarActivityEnterDungeon> *const)(v3 + 160));
                  StatLogUtils::ContextHolder::~ContextHolder((StatLogUtils::ContextHolder *const)(v3 + 48));
                  std::shared_ptr<ManualTransportEvent>::~shared_ptr((std::shared_ptr<ManualTransportEvent> *const)(v3 + 128));
                }
              }
              std::pair<int,std::shared_ptr<DungeonScene>>::~pair(&__in);
            }
            else
            {
              common::milog::MiLogStream::create(
                &v55,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/handler/activity_handler.cpp",
                "onEnterTrialAvatarActivityDungeonReq",
                547);
              v19 = common::milog::MiLogStream::operator<<<char [57],(char *[57])0>(
                      &v55,
                      (const char (*)[57])"[TRIAL_AVATAR] cur_trial_avatar_index_id_ is invalid, : ");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v19,
                (const unsigned int *)(v3 + 64));
              common::milog::MiLogStream::~MiLogStream(&v55);
            }
          }
        }
      }
    }
    std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 96));
  }
  else
  {
    common::milog::MiLogStream::create(
      &v55,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onEnterTrialAvatarActivityDungeonReq",
      508);
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
      &v55,
      (const char (*)[33])"[TRIAL_AVATAR] cur_scene_id is 0");
    common::milog::MiLogStream::~MiLogStream(&v55);
  }
  if ( ret )
    PlayerTrialAvatarComp::resetDungeonAndRecallTrialAvatars(trial_avatar_comp);
  v39 = proto::EnterTrialAvatarActivityDungeonReq::activity_id((const proto::EnterTrialAvatarActivityDungeonReq *const)v42._anon_0._M_allocated_capacity);
  proto::EnterTrialAvatarActivityDungeonRsp::set_activity_id(
    (proto::EnterTrialAvatarActivityDungeonRsp *const)v42._M_string_length,
    v39);
  v40 = proto::EnterTrialAvatarActivityDungeonReq::trial_avatar_index_id((const proto::EnterTrialAvatarActivityDungeonReq *const)v42._anon_0._M_allocated_capacity);
  proto::EnterTrialAvatarActivityDungeonRsp::set_trial_avatar_index_id(
    (proto::EnterTrialAvatarActivityDungeonRsp *const)v42._M_string_length,
    v40);
  result = ret;
  if ( v57 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 575: range 0000000013763556-00000000137636EE
void __cdecl ActivityHandler::onEnterTrialAvatarActivityDungeonReq(proto::EnterTrialAvatarActivityDungeonReq const&,proto::EnterTrialAvatarActivityDungeonRsp &)::{lambda(Player &,DungeonScene &,proto::DungeonSettleNotify &)#1}::operator()(
        const ActivityHandler::onEnterTrialAvatarActivityDungeonReq::<lambda(Player&, DungeonScene&, proto::DungeonSettleNotify&)> *const __closure,
        Player *player,
        DungeonScene *dungeon_scene,
        proto::DungeonSettleNotify *notify)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r12
  TrialAvatarActivity *v7; // r14
  proto::TrialAvatarFirstPassDungeonNotify *pass_dungeon_notify; // r15
  uint32_t DungeonId; // eax
  char v12[112]; // [rsp+30h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 16 29 trial_avatar_activity_ptr:581";
  *(_QWORD *)(v4 + 16) = ActivityHandler::onEnterTrialAvatarActivityDungeonReq(proto::EnterTrialAvatarActivityDungeonReq const&,proto::EnterTrialAvatarActivityDungeonRsp &)::{lambda(Player &,DungeonScene &,proto::DungeonSettleNotify &)#1}::operator();
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202178560;
  if ( DungeonScene::isSettledAndSuccess(dungeon_scene) )
  {
    Player::getActivityComp(player);
    PlayerActivityComp::findOpenningActivity<TrialAvatarActivity>((PlayerActivityComp *const)(v4 + 32));
    if ( !std::operator==<TrialAvatarActivity>(0LL, (const std::shared_ptr<TrialAvatarActivity> *)(v4 + 32)) )
    {
      v7 = std::__shared_ptr_access<TrialAvatarActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<TrialAvatarActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
      pass_dungeon_notify = proto::DungeonSettleNotify::mutable_trial_avatar_first_pass_dungeon_notify(notify);
      DungeonId = DungeonScene::getDungeonId(dungeon_scene);
      TrialAvatarActivity::onTrialDungeonSucceed(v7, DungeonId, pass_dungeon_notify);
    }
    std::shared_ptr<TrialAvatarActivity>::~shared_ptr((std::shared_ptr<TrialAvatarActivity> *const)(v4 + 32));
  }
  if ( v12 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
};

// Line 621: range 00000000137646F4-0000000013764B6A
int32_t __cdecl ActivityHandler::onReceivedTrialAvatarActivityRewardReq(
        ActivityHandler *const this,
        const proto::ReceivedTrialAvatarActivityRewardReq *req,
        proto::ReceivedTrialAvatarActivityRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  PlayerSceneComp *SceneComp; // rax
  common::milog::MiLogStream *v7; // rcx
  TrialAvatarActivity *v8; // r14
  uint32_t v9; // eax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // rcx
  std::__shared_ptr_access<TrialAvatarActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  uint32_t ActivityId; // edx
  google::protobuf::uint32 v15; // edx
  int32_t result; // eax
  unsigned int val; // [rsp+28h] [rbp-98h] BYREF
  int32_t ret; // [rsp+2Ch] [rbp-94h]
  common::milog::MiLogStream v20; // [rsp+30h] [rbp-90h] BYREF
  char v21[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 29 trial_avatar_activity_ptr:632";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onReceivedTrialAvatarActivityRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  ret = 0;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  SceneComp = Player::getSceneComp(this->player_);
  if ( !PlayerSceneComp::isInMyPlayerWorld(SceneComp) )
  {
    common::milog::MiLogStream::create(
      &v20,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onReceivedTrialAvatarActivityRewardReq",
      627);
    common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(&v20, (const char (*)[21])"is not in self world");
    common::milog::MiLogStream::~MiLogStream(&v20);
    ret = 512;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getActivityComp(this->player_);
    PlayerActivityComp::findOpenningActivity<TrialAvatarActivity>((PlayerActivityComp *const)(v3 + 32));
    if ( std::operator==<TrialAvatarActivity>(0LL, (const std::shared_ptr<TrialAvatarActivity> *)(v3 + 32)) )
    {
      common::milog::MiLogStream::create(
        &v20,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onReceivedTrialAvatarActivityRewardReq",
        635);
      v7 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(&v20, (const char (*)[49])off_25049D00);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      operator<<(v7, this->player_);
      common::milog::MiLogStream::~MiLogStream(&v20);
      ret = 860;
    }
    else
    {
      v8 = std::__shared_ptr_access<TrialAvatarActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<TrialAvatarActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v9 = proto::ReceivedTrialAvatarActivityRewardReq::trial_avatar_index_id(req);
      ret = TrialAvatarActivity::receiveFirstPassReward(v8, v9);
      if ( ret )
      {
        common::milog::MiLogStream::create(
          &v20,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/handler/activity_handler.cpp",
          "onReceivedTrialAvatarActivityRewardReq",
          643);
        v10 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
                &v20,
                (const char (*)[67])"receive trial avatar activity reward fail, trial_avatar_index_id: ");
        val = proto::ReceivedTrialAvatarActivityRewardReq::trial_avatar_index_id(req);
        v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
        v12 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v11, (const char (*)[9])" player:");
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        operator<<(v12, this->player_);
        common::milog::MiLogStream::~MiLogStream(&v20);
      }
      else
      {
        v13 = std::__shared_ptr_access<TrialAvatarActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<TrialAvatarActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        ActivityId = BaseActivity::getActivityId(v13);
        proto::ReceivedTrialAvatarActivityRewardRsp::set_activity_id(rsp_0, ActivityId);
        v15 = proto::ReceivedTrialAvatarActivityRewardReq::trial_avatar_index_id(req);
        proto::ReceivedTrialAvatarActivityRewardRsp::set_trial_avatar_index_id(rsp_0, v15);
      }
    }
    std::shared_ptr<TrialAvatarActivity>::~shared_ptr((std::shared_ptr<TrialAvatarActivity> *const)(v3 + 32));
  }
  result = ret;
  if ( v21 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 658: range 0000000013764B6C-0000000013764EFA
int32_t __cdecl ActivityHandler::onSalesmanDeliverItemReq(
        ActivityHandler *const this,
        const proto::SalesmanDeliverItemReq *req,
        proto::SalesmanDeliverItemRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // edx
  common::milog::MiLogStream *v9; // rcx
  int32_t v10; // r14d
  std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  common::milog::MiLogStream *v12; // rcx
  SalesmanMpActivity *v13; // rax
  int32_t result; // eax
  NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v17; // [rsp+30h] [rbp-90h] BYREF
  char v18[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:663";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSalesmanDeliverItemReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::SalesmanDeliverItemReq::schedule_id(req);
  proto::SalesmanDeliverItemRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::SalesmanDeliverItemReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<SalesmanMpActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<SalesmanMpActivity>(0LL, (const std::shared_ptr<SalesmanMpActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSalesmanDeliverItemReq",
      666);
    v9 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
           &v17,
           (const char (*)[51])"ACTIVITY_SALESMAN_MP activity_ptr is null, player:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v9, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v17);
    v10 = 5;
  }
  else
  {
    v11 = std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( !BaseActivity::isOpening((const BaseActivity *const)v11, 0) )
    {
      common::milog::MiLogStream::create(
        &v17,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onSalesmanDeliverItemReq",
        671);
      v12 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
              &v17,
              (const char (*)[55])"ACTIVITY_SALESMAN_MP activity_ptr is not open, player:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      operator<<(v12, this->player_);
      common::milog::MiLogStream::~MiLogStream(&v17);
      v10 = 860;
    }
    else
    {
      v13 = std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v10 = SalesmanMpActivity::deliverItemToSalesman(v13);
    }
  }
  std::shared_ptr<SalesmanMpActivity>::~shared_ptr((std::shared_ptr<SalesmanMpActivity> *const)(v3 + 32));
  result = v10;
  if ( v18 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 680: range 0000000013764EFC-0000000013764F12
int32_t __cdecl ActivityHandler::onSalesmanTakeRewardReq(
        ActivityHandler *const this,
        const proto::SalesmanTakeRewardReq *req,
        proto::SalesmanTakeRewardRsp *rsp_0)
{
  return 0;
};

// Line 685: range 0000000013764F14-00000000137652A2
int32_t __cdecl ActivityHandler::onSalesmanTakeSpecialRewardReq(
        ActivityHandler *const this,
        const proto::SalesmanTakeSpecialRewardReq *req,
        proto::SalesmanTakeSpecialRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // edx
  common::milog::MiLogStream *v9; // rcx
  int32_t v10; // r14d
  std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  common::milog::MiLogStream *v12; // rcx
  SalesmanMpActivity *v13; // rax
  int32_t result; // eax
  NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v17; // [rsp+30h] [rbp-90h] BYREF
  char v18[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:690";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSalesmanTakeSpecialRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::SalesmanTakeSpecialRewardReq::schedule_id(req);
  proto::SalesmanTakeSpecialRewardRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::SalesmanTakeSpecialRewardReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<SalesmanMpActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<SalesmanMpActivity>(0LL, (const std::shared_ptr<SalesmanMpActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSalesmanTakeSpecialRewardReq",
      693);
    v9 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
           &v17,
           (const char (*)[51])"ACTIVITY_SALESMAN_MP activity_ptr is null, player:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v9, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v17);
    v10 = 5;
  }
  else
  {
    v11 = std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( !BaseActivity::isOpening((const BaseActivity *const)v11, 0) )
    {
      common::milog::MiLogStream::create(
        &v17,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onSalesmanTakeSpecialRewardReq",
        698);
      v12 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
              &v17,
              (const char (*)[55])"ACTIVITY_SALESMAN_MP activity_ptr is not open, player:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      operator<<(v12, this->player_);
      common::milog::MiLogStream::~MiLogStream(&v17);
      v10 = 860;
    }
    else
    {
      v13 = std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v10 = SalesmanMpActivity::takeSpecialReward(v13);
    }
  }
  std::shared_ptr<SalesmanMpActivity>::~shared_ptr((std::shared_ptr<SalesmanMpActivity> *const)(v3 + 32));
  result = v10;
  if ( v18 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 706: range 00000000137652A4-0000000013765684
int32_t __cdecl ActivityHandler::onGetAuthSalesmanInfoReq(
        ActivityHandler *const this,
        const proto::GetAuthSalesmanInfoReq *req,
        proto::GetAuthSalesmanInfoRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // edx
  common::milog::MiLogStream *v9; // rcx
  int32_t v10; // r14d
  std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  common::milog::MiLogStream *v12; // rcx
  SalesmanMpActivity *v13; // rax
  int32_t result; // eax
  int32_t ret; // [rsp+24h] [rbp-BCh]
  NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-B8h]
  common::milog::MiLogStream v18; // [rsp+30h] [rbp-B0h] BYREF
  char v19[144]; // [rsp+50h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 13 reward_id:722 64 16 16 activity_ptr:711";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGetAuthSalesmanInfoReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  v6 = proto::GetAuthSalesmanInfoReq::schedule_id(req);
  proto::GetAuthSalesmanInfoRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 64));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 64));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::GetAuthSalesmanInfoReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<SalesmanMpActivity>((PlayerActivityComp *const)(v3 + 64), ActivityComp);
  if ( std::operator==<SalesmanMpActivity>(0LL, (const std::shared_ptr<SalesmanMpActivity> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v18,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGetAuthSalesmanInfoReq",
      714);
    v9 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
           &v18,
           (const char (*)[51])"ACTIVITY_SALESMAN_MP activity_ptr is null, player:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v9, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v18);
    v10 = 5;
  }
  else
  {
    v11 = std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    if ( !BaseActivity::isOpening((const BaseActivity *const)v11, 0) )
    {
      common::milog::MiLogStream::create(
        &v18,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onGetAuthSalesmanInfoReq",
        719);
      v12 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
              &v18,
              (const char (*)[55])"ACTIVITY_SALESMAN_MP activity_ptr is not open, player:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      operator<<(v12, this->player_);
      common::milog::MiLogStream::~MiLogStream(&v18);
      v10 = 860;
    }
    else
    {
      *(_DWORD *)(v3 + 48) = 0;
      v13 = std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SalesmanMpActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      ret = SalesmanMpActivity::getOwnerCurRewardId(v13, (uint32_t *)(v3 + 48));
      proto::GetAuthSalesmanInfoRsp::set_day_reward_id(rsp_0, *(_DWORD *)(v3 + 48));
      v10 = ret;
    }
  }
  std::shared_ptr<SalesmanMpActivity>::~shared_ptr((std::shared_ptr<SalesmanMpActivity> *const)(v3 + 64));
  result = v10;
  if ( v19 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 729: range 0000000013765686-0000000013765942
int32_t __cdecl ActivityHandler::onActivityTakeWatcherRewardReq(
        ActivityHandler *const this,
        const proto::ActivityTakeWatcherRewardReq *req,
        proto::ActivityTakeWatcherRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v9; // r14
  common::milog::MiLogStream *v10; // rax
  int32_t v11; // r14d
  google::protobuf::uint32 v12; // edx
  google::protobuf::uint32 v13; // edx
  BaseActivity *v14; // r14
  uint32_t v15; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v19; // [rsp+30h] [rbp-90h] BYREF
  char v20[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:730";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityTakeWatcherRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::ActivityTakeWatcherRewardReq::activity_id(req);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>(0LL, (const std::shared_ptr<BaseActivity> *)(v3 + 32))
    || (v7 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    common::milog::MiLogStream::create(
      &v19,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onActivityTakeWatcherRewardReq",
      733);
    v9 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(&v19, (const char (*)[13])"activity_id:");
    val = proto::ActivityTakeWatcherRewardReq::activity_id(req);
    v10 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
    common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v10, (const char (*)[10])" not open");
    common::milog::MiLogStream::~MiLogStream(&v19);
    v11 = 860;
  }
  else
  {
    v12 = proto::ActivityTakeWatcherRewardReq::activity_id(req);
    proto::ActivityTakeWatcherRewardRsp::set_activity_id(rsp_0, v12);
    v13 = proto::ActivityTakeWatcherRewardReq::watcher_id(req);
    proto::ActivityTakeWatcherRewardRsp::set_watcher_id(rsp_0, v13);
    v14 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v15 = proto::ActivityTakeWatcherRewardReq::watcher_id(req);
    v11 = BaseActivity::takeWatcherReward(v14, v15);
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v11;
  if ( v20 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 743: range 0000000013765944-0000000013765C00
int32_t __cdecl ActivityHandler::onActivitySelectAvatarCardReq(
        ActivityHandler *const this,
        const proto::ActivitySelectAvatarCardReq *req,
        proto::ActivitySelectAvatarCardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v9; // r14
  common::milog::MiLogStream *v10; // rax
  int32_t v11; // r14d
  google::protobuf::uint32 v12; // edx
  google::protobuf::uint32 v13; // edx
  BaseActivity *v14; // r14
  uint32_t v15; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v19; // [rsp+30h] [rbp-90h] BYREF
  char v20[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:744";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivitySelectAvatarCardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::ActivitySelectAvatarCardReq::activity_id(req);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>(0LL, (const std::shared_ptr<BaseActivity> *)(v3 + 32))
    || (v7 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    common::milog::MiLogStream::create(
      &v19,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivitySelectAvatarCardReq",
      747);
    v9 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(&v19, (const char (*)[13])"activity_id:");
    val = proto::ActivitySelectAvatarCardReq::activity_id(req);
    v10 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
    common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v10, (const char (*)[10])" not open");
    common::milog::MiLogStream::~MiLogStream(&v19);
    v11 = 860;
  }
  else
  {
    v12 = proto::ActivitySelectAvatarCardReq::activity_id(req);
    proto::ActivitySelectAvatarCardRsp::set_activity_id(rsp_0, v12);
    v13 = proto::ActivitySelectAvatarCardReq::reward_id(req);
    proto::ActivitySelectAvatarCardRsp::set_reward_id(rsp_0, v13);
    v14 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v15 = proto::ActivitySelectAvatarCardReq::reward_id(req);
    v11 = BaseActivity::selectAvatarCard(v14, v15);
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v11;
  if ( v20 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 756: range 0000000013765C02-00000000137661B1
int32_t __cdecl ActivityHandler::onActivityTakeWatcherRewardBatchReq(
        ActivityHandler *const this,
        const proto::ActivityTakeWatcherRewardBatchReq *req,
        proto::ActivityTakeWatcherRewardBatchRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  uint32_t ActivityComp; // r14d
  google::protobuf::uint32 v7; // edx
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  int32_t v12; // r14d
  BaseActivity *v13; // rax
  common::milog::MiLogStream *v14; // rax
  PlayerItemComp *ItemComp; // rax
  int32_t result; // eax
  std::vector<ItemParam>::iterator __for_begin_0; // [rsp+20h] [rbp-150h] BYREF
  std::vector<ItemParam>::iterator __for_end_0; // [rsp+28h] [rbp-148h] BYREF
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_begin; // [rsp+30h] [rbp-140h]
  const google::protobuf::RepeatedField<unsigned int> *__for_range; // [rsp+38h] [rbp-138h]
  google::protobuf::RepeatedField<unsigned int>::const_iterator __for_end; // [rsp+40h] [rbp-130h]
  std::vector<ItemParam> *__for_range_0; // [rsp+48h] [rbp-128h]
  ItemParam *p; // [rsp+50h] [rbp-120h]
  proto::ItemParam *proto_item; // [rsp+58h] [rbp-118h]
  std::vector<ItemParam> __x; // [rsp+60h] [rbp-110h] BYREF
  common::milog::MiLogStream v27; // [rsp+80h] [rbp-F0h] BYREF
  char v28[208]; // [rsp+A0h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v28;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 4 14 watcher_id:765 64 16 16 activity_ptr:757 96 24 15 display_vec:764";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityTakeWatcherRewardBatchReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -219021312;
  v5[536862723] = -218103808;
  v5[536862724] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::ActivityTakeWatcherRewardBatchReq::activity_id(req);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 64), ActivityComp);
  v7 = proto::ActivityTakeWatcherRewardBatchReq::activity_id(req);
  proto::ActivityTakeWatcherRewardBatchRsp::set_activity_id(rsp_0, v7);
  if ( std::operator==<BaseActivity>(0LL, (const std::shared_ptr<BaseActivity> *)(v3 + 64))
    || (v8 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64)),
        !BaseActivity::isOpening(v8, 0)) )
  {
    common::milog::MiLogStream::create(
      &v27,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivityTakeWatcherRewardBatchReq",
      761);
    v10 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(&v27, (const char (*)[13])"activity_id:");
    *(_DWORD *)(v3 + 48) = proto::ActivityTakeWatcherRewardBatchReq::activity_id(req);
    v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v3 + 48));
    common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v11, (const char (*)[10])" not open");
    common::milog::MiLogStream::~MiLogStream(&v27);
    v12 = 860;
  }
  else
  {
    std::vector<ItemParam>::vector((std::vector<ItemParam> *const)(v3 + 96));
    __for_range = proto::ActivityTakeWatcherRewardBatchReq::watcher_id_list(req);
    __for_begin = google::protobuf::RepeatedField<unsigned int>::begin(__for_range);
    __for_end = google::protobuf::RepeatedField<unsigned int>::end(__for_range);
    while ( __for_begin != __for_end )
    {
      if ( *(_BYTE *)(((unsigned __int64)__for_begin >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)__for_begin & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__for_begin >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4();
      }
      *(_DWORD *)(v3 + 48) = *__for_begin;
      v13 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      if ( BaseActivity::takeWatcherReward(v13, *(_DWORD *)(v3 + 48), 1, (std::vector<ItemParam> *)(v3 + 96)) )
      {
        common::milog::MiLogStream::create(
          &v27,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/handler/activity_handler.cpp",
          "onActivityTakeWatcherRewardBatchReq",
          769);
        v14 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                &v27,
                (const char (*)[40])"cannot take watcher reward, watcher_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 48));
        common::milog::MiLogStream::~MiLogStream(&v27);
      }
      else
      {
        proto::ActivityTakeWatcherRewardBatchRsp::add_watcher_id_list(rsp_0, *(_DWORD *)(v3 + 48));
      }
      ++__for_begin;
    }
    if ( proto::ActivityTakeWatcherRewardBatchReq::watcher_id_list_size(req) )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      ItemComp = Player::getItemComp(this->player_);
      PlayerItemComp::getMergedItemParamVec(&__x, ItemComp, (const std::vector<ItemParam> *)(v3 + 96));
      std::vector<ItemParam>::operator=((std::vector<ItemParam> *const)(v3 + 96), &__x);
      std::vector<ItemParam>::~vector(&__x);
      __for_range_0 = (std::vector<ItemParam> *)(v3 + 96);
      __for_begin_0._M_current = std::vector<ItemParam>::begin((std::vector<ItemParam> *const)(v3 + 96))._M_current;
      __for_end_0._M_current = std::vector<ItemParam>::end((std::vector<ItemParam> *const)(v3 + 96))._M_current;
      while ( __gnu_cxx::operator!=<ItemParam *,std::vector<ItemParam>>(&__for_begin_0, &__for_end_0) )
      {
        p = __gnu_cxx::__normal_iterator<ItemParam *,std::vector<ItemParam>>::operator*(&__for_begin_0);
        proto_item = proto::ActivityTakeWatcherRewardBatchRsp::add_item_list(rsp_0);
        ItemParam::toClient(p, proto_item);
        __gnu_cxx::__normal_iterator<ItemParam *,std::vector<ItemParam>>::operator++(&__for_begin_0);
      }
      v12 = 0;
    }
    else
    {
      v12 = -1;
    }
    std::vector<ItemParam>::~vector((std::vector<ItemParam> *const)(v3 + 96));
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 64));
  result = v12;
  if ( v28 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 788: range 00000000137661B2-0000000013766574
int32_t __cdecl ActivityHandler::onTakeDeliveryDailyRewardReq(
        ActivityHandler *const this,
        const proto::TakeDeliveryDailyRewardReq *req,
        proto::TakeDeliveryDailyRewardRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // edx
  common::milog::MiLogStream *v9; // rcx
  int32_t v10; // r14d
  std::__shared_ptr_access<DeliveryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  common::milog::MiLogStream *v12; // rcx
  DeliveryActivity *v13; // rax
  int32_t result; // eax
  NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-B8h]
  common::milog::MiLogStream v17; // [rsp+30h] [rbp-B0h] BYREF
  char v18[144]; // [rsp+50h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 13 reward_id:804 64 16 16 activity_ptr:792";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTakeDeliveryDailyRewardReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  v6 = proto::TakeDeliveryDailyRewardReq::schedule_id(req);
  proto::TakeDeliveryDailyRewardRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 64));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 64));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::TakeDeliveryDailyRewardReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<DeliveryActivity>((PlayerActivityComp *const)(v3 + 64), ActivityComp);
  if ( std::operator==<DeliveryActivity>(0LL, (const std::shared_ptr<DeliveryActivity> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onTakeDeliveryDailyRewardReq",
      795);
    v9 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
           &v17,
           (const char (*)[47])"DeliveryActivity activity_ptr is null, player:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v9, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v17);
    v10 = 5;
  }
  else
  {
    v11 = std::__shared_ptr_access<DeliveryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DeliveryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    if ( !BaseActivity::isOpening((const BaseActivity *const)v11, 0) )
    {
      common::milog::MiLogStream::create(
        &v17,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onTakeDeliveryDailyRewardReq",
        800);
      v12 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
              &v17,
              (const char (*)[51])"DeliveryActivity activity_ptr is not open, player:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      operator<<(v12, this->player_);
      common::milog::MiLogStream::~MiLogStream(&v17);
      v10 = 860;
    }
    else
    {
      *(_DWORD *)(v3 + 48) = 0;
      v13 = std::__shared_ptr_access<DeliveryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DeliveryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      v10 = DeliveryActivity::takeDailyReward(v13, (uint32_t *)(v3 + 48));
    }
  }
  std::shared_ptr<DeliveryActivity>::~shared_ptr((std::shared_ptr<DeliveryActivity> *const)(v3 + 64));
  result = v10;
  if ( v18 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 809: range 0000000013766576-0000000013766968
int32_t __cdecl ActivityHandler::onSelectAsterMidDifficultyReq(
        ActivityHandler *const this,
        const proto::SelectAsterMidDifficultyReq *req,
        proto::SelectAsterMidDifficultyRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  google::protobuf::uint32 v8; // edx
  PlayerSceneComp *SceneComp; // rax
  int32_t v10; // r14d
  uint32_t ActivityComp; // r14d
  uint32_t v12; // edx
  common::milog::MiLogStream *v13; // rcx
  AsterActivity *v14; // r14
  uint32_t v15; // r15d
  uint32_t v16; // eax
  int32_t result; // eax
  NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v20; // [rsp+30h] [rbp-90h] BYREF
  char v21[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:821";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSelectAsterMidDifficultyReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::SelectAsterMidDifficultyReq::schedule_id(req);
  proto::SelectAsterMidDifficultyRsp::set_schedule_id(rsp_0, v6);
  v7 = proto::SelectAsterMidDifficultyReq::gadget_entity_id(req);
  proto::SelectAsterMidDifficultyRsp::set_gadget_entity_id(rsp_0, v7);
  v8 = proto::SelectAsterMidDifficultyReq::difficulty_id(req);
  proto::SelectAsterMidDifficultyRsp::set_difficulty_id(rsp_0, v8);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  SceneComp = Player::getSceneComp(this->player_);
  if ( !PlayerSceneComp::isInMyPlayerWorld(SceneComp) )
  {
    common::milog::MiLogStream::create(
      &v20,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSelectAsterMidDifficultyReq",
      816);
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
      &v20,
      (const char (*)[26])"[ASTER] not in self world");
    common::milog::MiLogStream::~MiLogStream(&v20);
    v10 = 512;
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v3 + 32));
    conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    v12 = proto::SelectAsterMidDifficultyReq::schedule_id(req);
    NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v12);
    PlayerActivityComp::findActivity<AsterActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
    if ( std::operator==<AsterActivity>(0LL, (const std::shared_ptr<AsterActivity> *)(v3 + 32)) )
    {
      common::milog::MiLogStream::create(
        &v20,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onSelectAsterMidDifficultyReq",
        824);
      v13 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
              &v20,
              (const char (*)[38])"[ASTER] activity_ptr is null, player:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      operator<<(v13, this->player_);
      common::milog::MiLogStream::~MiLogStream(&v20);
      v10 = 5;
    }
    else
    {
      v14 = std::__shared_ptr_access<AsterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<AsterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v15 = proto::SelectAsterMidDifficultyReq::difficulty_id(req);
      v16 = proto::SelectAsterMidDifficultyReq::gadget_entity_id(req);
      v10 = AsterActivity::selectAsterMidDifficulty(v14, v16, v15);
    }
    std::shared_ptr<AsterActivity>::~shared_ptr((std::shared_ptr<AsterActivity> *const)(v3 + 32));
  }
  result = v10;
  if ( v21 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 832: range 000000001376696A-0000000013766C1F
int32_t __cdecl ActivityHandler::onTakeAsterSpecialRewardReq(
        ActivityHandler *const this,
        const proto::TakeAsterSpecialRewardReq *req,
        proto::TakeAsterSpecialRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // edx
  common::milog::MiLogStream *v9; // rcx
  int32_t v10; // r14d
  AsterActivity *v11; // rax
  int32_t result; // eax
  NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v15; // [rsp+30h] [rbp-90h] BYREF
  char v16[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:835";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTakeAsterSpecialRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::TakeAsterSpecialRewardReq::schedule_id(req);
  proto::TakeAsterSpecialRewardRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::TakeAsterSpecialRewardReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<AsterActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<AsterActivity>(0LL, (const std::shared_ptr<AsterActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onTakeAsterSpecialRewardReq",
      838);
    v9 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
           &v15,
           (const char (*)[38])"[ASTER] activity_ptr is null, player:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v9, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v10 = 5;
  }
  else
  {
    v11 = std::__shared_ptr_access<AsterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<AsterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = AsterActivity::takeSpecialReward(v11);
  }
  std::shared_ptr<AsterActivity>::~shared_ptr((std::shared_ptr<AsterActivity> *const)(v3 + 32));
  result = v10;
  if ( v16 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 846: range 0000000013766C20-0000000013766F0B
int32_t __cdecl ActivityHandler::onFlightActivityRestartReq(
        ActivityHandler *const this,
        const proto::FlightActivityRestartReq *req,
        proto::FlightActivityRestartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v9; // edx
  common::milog::MiLogStream *v10; // rcx
  int32_t restarted; // r14d
  std::__shared_ptr_access<FlightActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // r14
  uint32_t v13; // eax
  int32_t result; // eax
  NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v17; // [rsp+30h] [rbp-90h] BYREF
  char v18[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:850";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFlightActivityRestartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::FlightActivityRestartReq::schedule_id(req);
  proto::FlightActivityRestartRsp::set_schedule_id(rsp_0, v6);
  v7 = proto::FlightActivityRestartReq::group_id(req);
  proto::FlightActivityRestartRsp::set_group_id(rsp_0, v7);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v9 = proto::FlightActivityRestartReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v9);
  PlayerActivityComp::findActivity<FlightActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<FlightActivity>(0LL, (const std::shared_ptr<FlightActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onFlightActivityRestartReq",
      853);
    v10 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
            &v17,
            (const char (*)[39])"[FLIGHT] activity_ptr is null, player:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v10, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v17);
    restarted = 5;
  }
  else
  {
    v12 = std::__shared_ptr_access<FlightActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FlightActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v13 = proto::FlightActivityRestartReq::group_id(req);
    restarted = FlightActivity::restartChallengeByGroupId(v12, v13);
  }
  std::shared_ptr<FlightActivity>::~shared_ptr((std::shared_ptr<FlightActivity> *const)(v3 + 32));
  result = restarted;
  if ( v18 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 861: range 0000000013766F0C-000000001376715E
int32_t __cdecl ActivityHandler::onStartEffigyChallengeReq(
        ActivityHandler *const this,
        const proto::StartEffigyChallengeReq *req,
        proto::StartEffigyChallengeRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t started; // r14d
  EffigyActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:862";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onStartEffigyChallengeReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<EffigyActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<EffigyActivity>(0LL, (const std::shared_ptr<EffigyActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onStartEffigyChallengeReq",
      865);
    v6 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
           &v12,
           (const char (*)[40])"[EFFIGY] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    started = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    started = EffigyActivity::startEffigyChallenge(v8, req, rsp_0);
  }
  std::shared_ptr<EffigyActivity>::~shared_ptr((std::shared_ptr<EffigyActivity> *const)(v3 + 32));
  result = started;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 873: range 0000000013767160-00000000137673B2
int32_t __cdecl ActivityHandler::onTakeEffigyFirstPassRewardReq(
        ActivityHandler *const this,
        const proto::TakeEffigyFirstPassRewardReq *req,
        proto::TakeEffigyFirstPassRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t PassReward; // r14d
  EffigyActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:874";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTakeEffigyFirstPassRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<EffigyActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<EffigyActivity>(0LL, (const std::shared_ptr<EffigyActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onTakeEffigyFirstPassRewardReq",
      877);
    v6 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
           &v12,
           (const char (*)[40])"[EFFIGY] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    PassReward = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    PassReward = EffigyActivity::takeEffigyFirstPassReward(v8, req, rsp_0);
  }
  std::shared_ptr<EffigyActivity>::~shared_ptr((std::shared_ptr<EffigyActivity> *const)(v3 + 32));
  result = PassReward;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 885: range 00000000137673B4-0000000013767606
int32_t __cdecl ActivityHandler::onTakeEffigyRewardReq(
        ActivityHandler *const this,
        const proto::TakeEffigyRewardReq *req,
        proto::TakeEffigyRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  EffigyActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:886";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTakeEffigyRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<EffigyActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<EffigyActivity>(0LL, (const std::shared_ptr<EffigyActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onTakeEffigyRewardReq",
      889);
    v6 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
           &v12,
           (const char (*)[40])"[EFFIGY] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = EffigyActivity::takeEffigyReward(v8, req, rsp_0);
  }
  std::shared_ptr<EffigyActivity>::~shared_ptr((std::shared_ptr<EffigyActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 897: range 0000000013767608-000000001376785A
int32_t __cdecl ActivityHandler::onSelectEffigyChallengeConditionReq(
        ActivityHandler *const this,
        const proto::SelectEffigyChallengeConditionReq *req,
        proto::SelectEffigyChallengeConditionRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  EffigyActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:898";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSelectEffigyChallengeConditionReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<EffigyActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<EffigyActivity>(0LL, (const std::shared_ptr<EffigyActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSelectEffigyChallengeConditionReq",
      901);
    v6 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
           &v12,
           (const char (*)[40])"[EFFIGY] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = EffigyActivity::selectEffigyChallengeCondition(v8, req, rsp_0);
  }
  std::shared_ptr<EffigyActivity>::~shared_ptr((std::shared_ptr<EffigyActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 909: range 000000001376785C-0000000013767AAE
int32_t __cdecl ActivityHandler::onRestartEffigyChallengeReq(
        ActivityHandler *const this,
        const proto::RestartEffigyChallengeReq *req,
        proto::RestartEffigyChallengeRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t restarted; // r14d
  EffigyActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:910";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRestartEffigyChallengeReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<EffigyActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<EffigyActivity>(0LL, (const std::shared_ptr<EffigyActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onRestartEffigyChallengeReq",
      913);
    v6 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
           &v12,
           (const char (*)[40])"[EFFIGY] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    restarted = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<EffigyActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = EffigyActivity::restartEffigyChallenge(v8, req, rsp_0);
  }
  std::shared_ptr<EffigyActivity>::~shared_ptr((std::shared_ptr<EffigyActivity> *const)(v3 + 32));
  result = restarted;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 923: range 0000000013767AB0-0000000013767D0E
int32_t __cdecl ActivityHandler::onBlessingScanReq(
        ActivityHandler *const this,
        const proto::BlessingScanReq *req,
        proto::BlessingScanRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  BlessingActivity *v8; // r14
  uint32_t v9; // ecx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v13; // [rsp+30h] [rbp-90h] BYREF
  char v14[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:924";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBlessingScanReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BlessingActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BlessingActivity>(0LL, (const std::shared_ptr<BlessingActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v13,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onBlessingScanReq",
      927);
    v6 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
           &v13,
           (const char (*)[42])"[BLESSING] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v13);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v9 = proto::BlessingScanReq::entity_id(req);
    v7 = BlessingActivity::tryScanEntity(v8, v9, rsp_0);
  }
  std::shared_ptr<BlessingActivity>::~shared_ptr((std::shared_ptr<BlessingActivity> *const)(v3 + 32));
  result = v7;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 935: range 0000000013767D10-0000000013767F5B
int32_t __cdecl ActivityHandler::onBlessingRedeemRewardReq(
        ActivityHandler *const this,
        const proto::BlessingRedeemRewardReq *req,
        proto::BlessingRedeemRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  BlessingActivity *v8; // rdx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 16 activity_ptr:936";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBlessingRedeemRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BlessingActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BlessingActivity>(0LL, (const std::shared_ptr<BlessingActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onBlessingRedeemRewardReq",
      939);
    v6 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
           &v12,
           (const char (*)[42])"[BLESSING] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = BlessingActivity::tryRedeemReward(v8, rsp_0);
  }
  std::shared_ptr<BlessingActivity>::~shared_ptr((std::shared_ptr<BlessingActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 947: range 0000000013767F5C-000000001376843C
int32_t __cdecl ActivityHandler::onBlessingGetFriendPicListReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t FriendPicList; // r14d
  common::milog::MiLogStream *v6; // r14
  PlayerSocialComp *SocialComp; // rax
  google::protobuf::RepeatedField<unsigned int> *v8; // rax
  std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  uint32_t ScheduleId; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+14h] [rbp-15Ch] BYREF
  const proto::BlessingGetFriendPicListReq *req; // [rsp+18h] [rbp-158h]
  common::milog::MiLogStream v14; // [rsp+20h] [rbp-150h] BYREF
  char v15[304]; // [rsp+40h] [rbp-130h] BYREF

  v2 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(256LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 48 16 11 req_ptr:948 80 16 16 activity_ptr:950 112 24 18 friend_uid_vec:958 176 48 14 server_req:957";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onBlessingGetFriendPicListReq;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862722] = 62194;
  v4[536862723] = 62194;
  v4[536862724] = -218959360;
  v4[536862725] = 62194;
  v4[536862727] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BlessingGetFriendPicListReq>((common::minet::Packet *const)(v2 + 48));
  if ( std::operator==<proto::BlessingGetFriendPicListReq const>(
         (const std::shared_ptr<const proto::BlessingGetFriendPicListReq> *)(v2 + 48),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onBlessingGetFriendPicListReq",
      948);
    common::milog::MiLogStream::operator()(&v14, off_2504A9E0);
    common::milog::MiLogStream::~MiLogStream(&v14);
    FriendPicList = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::BlessingGetFriendPicListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingGetFriendPicListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 48));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getActivityComp(this->player_);
    PlayerActivityComp::findOpenningActivity<BlessingActivity>((PlayerActivityComp *const)(v2 + 80));
    if ( std::operator==<BlessingActivity>(0LL, (const std::shared_ptr<BlessingActivity> *)(v2 + 80)) )
    {
      common::milog::MiLogStream::create(
        &v14,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onBlessingGetFriendPicListReq",
        953);
      v6 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
             &v14,
             (const char (*)[42])"[BLESSING] activity is not opening, uid: ");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
      common::milog::MiLogStream::~MiLogStream(&v14);
      FriendPicList = 860;
    }
    else
    {
      proto::ServerBlessingGetFriendPicListReq::ServerBlessingGetFriendPicListReq((proto::ServerBlessingGetFriendPicListReq *const)(v2 + 176));
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 112));
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      SocialComp = Player::getSocialComp(this->player_);
      PlayerSocialComp::fillPlayerFriendList(SocialComp, (std::vector<unsigned int> *)(v2 + 112));
      v8 = proto::ServerBlessingGetFriendPicListReq::mutable_friend_uid_list((proto::ServerBlessingGetFriendPicListReq *const)(v2 + 176));
      common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
        (const std::vector<unsigned int> *)(v2 + 112),
        v8);
      v9 = std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80));
      ScheduleId = BaseActivity::getScheduleId(v9);
      proto::ServerBlessingGetFriendPicListReq::set_schedule_id(
        (proto::ServerBlessingGetFriendPicListReq *const)(v2 + 176),
        ScheduleId);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      FriendPicList = sendProtoToSocialService<proto::ServerBlessingGetFriendPicListReq>(
                        this->player_,
                        (proto::ServerBlessingGetFriendPicListReq *)(v2 + 176));
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 112));
      proto::ServerBlessingGetFriendPicListReq::~ServerBlessingGetFriendPicListReq((proto::ServerBlessingGetFriendPicListReq *const)(v2 + 176));
    }
    std::shared_ptr<BlessingActivity>::~shared_ptr((std::shared_ptr<BlessingActivity> *const)(v2 + 80));
  }
  std::shared_ptr<proto::BlessingGetFriendPicListReq const>::~shared_ptr((std::shared_ptr<const proto::BlessingGetFriendPicListReq> *const)(v2 + 48));
  result = FriendPicList;
  if ( v15 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 966: range 000000001376843E-0000000013768A20
int32_t __cdecl ActivityHandler::onServerBlessingGetFriendPicListRsp(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  common::milog::MiLogStream *v6; // r14
  const google::protobuf::Map<unsigned int,unsigned int> *v7; // rax
  PlayerSocialComp *SocialComp; // r14
  uint32_t v9; // eax
  const std::string *v10; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+18h] [rbp-148h] BYREF
  int32_t retcode; // [rsp+1Ch] [rbp-144h]
  google::protobuf::RepeatedPtrField<proto::BlessingFriendPicData>::const_iterator __for_begin; // [rsp+20h] [rbp-140h] BYREF
  google::protobuf::RepeatedPtrField<proto::BlessingFriendPicData>::const_iterator __for_end; // [rsp+28h] [rbp-138h] BYREF
  const proto::ServerBlessingGetFriendPicListRsp *server_rsp; // [rsp+30h] [rbp-130h]
  const google::protobuf::RepeatedPtrField<proto::BlessingFriendPicData> *__for_range; // [rsp+38h] [rbp-128h]
  const proto::BlessingFriendPicData *friend_pic_data; // [rsp+40h] [rbp-120h]
  proto::BlessingFriendPicData *client_friend_pic_data; // [rsp+48h] [rbp-118h]
  common::milog::MiLogStream v20; // [rsp+50h] [rbp-110h] BYREF
  char v21[240]; // [rsp+70h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 16 18 server_rsp_ptr:967 80 16 16 activity_ptr:969 112 48 7 rsp:977";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onServerBlessingGetFriendPicListRsp;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862722] = 62194;
  v4[536862723] = 62194;
  v4[536862725] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ServerBlessingGetFriendPicListRsp>((common::minet::Packet *const)(v2 + 48));
  if ( std::operator==<proto::ServerBlessingGetFriendPicListRsp const>(
         (const std::shared_ptr<const proto::ServerBlessingGetFriendPicListRsp> *)(v2 + 48),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v20,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onServerBlessingGetFriendPicListRsp",
      967);
    common::milog::MiLogStream::operator()(&v20, off_2504AB00);
    common::milog::MiLogStream::~MiLogStream(&v20);
    v5 = -1;
  }
  else
  {
    server_rsp = std::__shared_ptr_access<proto::ServerBlessingGetFriendPicListRsp const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ServerBlessingGetFriendPicListRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 48));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getActivityComp(this->player_);
    PlayerActivityComp::findOpenningActivity<BlessingActivity>((PlayerActivityComp *const)(v2 + 80));
    if ( std::operator==<BlessingActivity>(0LL, (const std::shared_ptr<BlessingActivity> *)(v2 + 80)) )
    {
      common::milog::MiLogStream::create(
        &v20,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onServerBlessingGetFriendPicListRsp",
        972);
      v6 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
             &v20,
             (const char (*)[42])"[BLESSING] activity is not opening, uid: ");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
      common::milog::MiLogStream::~MiLogStream(&v20);
      v5 = 860;
    }
    else
    {
      common::milog::MiLogStream::create(
        &v20,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onServerBlessingGetFriendPicListRsp",
        976);
      common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
        &v20,
        (const char (*)[32])"[BLESSING] recv friend pic list");
      common::milog::MiLogStream::~MiLogStream(&v20);
      proto::BlessingGetFriendPicListRsp::BlessingGetFriendPicListRsp((proto::BlessingGetFriendPicListRsp *const)(v2 + 112));
      retcode = proto::ServerBlessingGetFriendPicListRsp::retcode(server_rsp);
      if ( !retcode )
      {
        __for_range = proto::ServerBlessingGetFriendPicListRsp::friend_pic_data_list(server_rsp);
        __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::BlessingFriendPicData>::begin(__for_range).it_;
        __for_end.it_ = google::protobuf::RepeatedPtrField<proto::BlessingFriendPicData>::end(__for_range).it_;
        while ( google::protobuf::internal::RepeatedPtrIterator<proto::BlessingFriendPicData const>::operator!=(
                  &__for_begin,
                  &__for_end) )
        {
          friend_pic_data = google::protobuf::internal::RepeatedPtrIterator<proto::BlessingFriendPicData const>::operator*(&__for_begin);
          v7 = proto::BlessingFriendPicData::pic_num_map(friend_pic_data);
          if ( !google::protobuf::Map<unsigned int,unsigned int>::empty(v7) )
          {
            client_friend_pic_data = proto::BlessingGetFriendPicListRsp::add_friend_pic_data_list((proto::BlessingGetFriendPicListRsp *const)(v2 + 112));
            proto::BlessingFriendPicData::CopyFrom(client_friend_pic_data, friend_pic_data);
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8();
            SocialComp = Player::getSocialComp(this->player_);
            v9 = proto::BlessingFriendPicData::uid(friend_pic_data);
            v10 = PlayerSocialComp::findFriendRemarkName[abi:cxx11](SocialComp, v9);
            proto::BlessingFriendPicData::set_remark_name(client_friend_pic_data, v10);
          }
          google::protobuf::internal::RepeatedPtrIterator<proto::BlessingFriendPicData const>::operator++(&__for_begin);
        }
        retcode = 0;
      }
      proto::BlessingGetFriendPicListRsp::set_retcode((proto::BlessingGetFriendPicListRsp *const)(v2 + 112), retcode);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      v5 = Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 112));
      proto::BlessingGetFriendPicListRsp::~BlessingGetFriendPicListRsp((proto::BlessingGetFriendPicListRsp *const)(v2 + 112));
    }
    std::shared_ptr<BlessingActivity>::~shared_ptr((std::shared_ptr<BlessingActivity> *const)(v2 + 80));
  }
  std::shared_ptr<proto::ServerBlessingGetFriendPicListRsp const>::~shared_ptr((std::shared_ptr<const proto::ServerBlessingGetFriendPicListRsp> *const)(v2 + 48));
  result = v5;
  if ( v21 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1003: range 0000000013768A22-0000000013768F62
int32_t __cdecl ActivityHandler::onBlessingGetAllRecvPicRecordListReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t FriendBrief; // r14d
  common::milog::MiLogStream *v6; // r14
  BlessingActivity *v7; // rax
  uint32_t *v8; // rdx
  int32_t result; // eax
  unsigned int val; // [rsp+18h] [rbp-178h] BYREF
  uint32_t uid; // [rsp+1Ch] [rbp-174h]
  std::set<unsigned int>::iterator __for_begin; // [rsp+20h] [rbp-170h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+28h] [rbp-168h] BYREF
  const proto::BlessingGetAllRecvPicRecordListReq *req; // [rsp+30h] [rbp-160h]
  std::set<unsigned int> *__for_range; // [rsp+38h] [rbp-158h]
  common::milog::MiLogStream v16; // [rsp+40h] [rbp-150h] BYREF
  char v17[304]; // [rsp+60h] [rbp-130h] BYREF

  v2 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(256LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 32 16 12 req_ptr:1004 64 16 17 activity_ptr:1006 96 48 15 server_req:1013 176 48 21 recv_pic_uid_set:1014";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onBlessingGetAllRecvPicRecordListReq;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -219021312;
  v4[536862724] = -219021312;
  v4[536862725] = 62194;
  v4[536862727] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BlessingGetAllRecvPicRecordListReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::BlessingGetAllRecvPicRecordListReq const>(
         (const std::shared_ptr<const proto::BlessingGetAllRecvPicRecordListReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v16,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onBlessingGetAllRecvPicRecordListReq",
      1004);
    common::milog::MiLogStream::operator()(&v16, off_2504AC80);
    common::milog::MiLogStream::~MiLogStream(&v16);
    FriendBrief = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::BlessingGetAllRecvPicRecordListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingGetAllRecvPicRecordListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getActivityComp(this->player_);
    PlayerActivityComp::findOpenningActivity<BlessingActivity>((PlayerActivityComp *const)(v2 + 64));
    if ( std::operator==<BlessingActivity>(0LL, (const std::shared_ptr<BlessingActivity> *)(v2 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v16,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onBlessingGetAllRecvPicRecordListReq",
        1009);
      v6 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
             &v16,
             (const char (*)[42])"[BLESSING] activity is not opening, uid: ");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
      common::milog::MiLogStream::~MiLogStream(&v16);
      FriendBrief = 860;
    }
    else
    {
      proto::ServerGetFriendBriefReq::ServerGetFriendBriefReq((proto::ServerGetFriendBriefReq *const)(v2 + 96));
      v7 = std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      BlessingActivity::getAllRecvPicUids((std::set<unsigned int> *)(v2 + 176), v7);
      __for_range = (std::set<unsigned int> *)(v2 + 176);
      __for_begin._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v2 + 176))._M_node;
      __for_end._M_node = std::set<unsigned int>::end((const std::set<unsigned int> *const)(v2 + 176))._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v8 = (uint32_t *)std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
        if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v8 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4();
        }
        uid = *v8;
        proto::ServerGetFriendBriefReq::add_uid_list((proto::ServerGetFriendBriefReq *const)(v2 + 96), uid);
        std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
      }
      proto::ServerGetFriendBriefReq::set_reason(
        (proto::ServerGetFriendBriefReq *const)(v2 + 96),
        FRIEND_BRIEF_REASON_BLESSING_ACTIVITY);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      FriendBrief = sendProtoToSocialService<proto::ServerGetFriendBriefReq>(
                      this->player_,
                      (proto::ServerGetFriendBriefReq *)(v2 + 96));
      std::set<unsigned int>::~set((std::set<unsigned int> *const)(v2 + 176));
      proto::ServerGetFriendBriefReq::~ServerGetFriendBriefReq((proto::ServerGetFriendBriefReq *const)(v2 + 96));
    }
    std::shared_ptr<BlessingActivity>::~shared_ptr((std::shared_ptr<BlessingActivity> *const)(v2 + 64));
  }
  std::shared_ptr<proto::BlessingGetAllRecvPicRecordListReq const>::~shared_ptr((std::shared_ptr<const proto::BlessingGetAllRecvPicRecordListReq> *const)(v2 + 32));
  result = FriendBrief;
  if ( v17 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1024: range 0000000013768F64-00000000137696D0
int32_t __cdecl ActivityHandler::onBlessingGiveFriendPicReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  google::protobuf::uint32 v6; // eax
  google::protobuf::uint32 v7; // eax
  common::milog::MiLogStream *v8; // r14
  google::protobuf::uint32 v9; // r14d
  PlayerSocialComp *SocialComp; // r14
  uint32_t v11; // eax
  common::milog::MiLogStream *v12; // r14
  BlessingActivity *v13; // r14
  uint32_t v14; // r15d
  uint32_t v15; // eax
  common::milog::MiLogStream *v16; // r14
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // r14
  common::milog::MiLogStream *v19; // rax
  common::milog::MiLogStream *v20; // rax
  int32_t result; // eax
  unsigned int v22; // [rsp+20h] [rbp-120h] BYREF
  unsigned int val; // [rsp+24h] [rbp-11Ch] BYREF
  const proto::BlessingGiveFriendPicReq *req; // [rsp+28h] [rbp-118h]
  common::milog::MiLogStream v25; // [rsp+30h] [rbp-110h] BYREF
  char v26[240]; // [rsp+50h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 48 4 12 retcode:1029 64 16 12 req_ptr:1025 96 16 17 activity_ptr:1032 128 32 8 rsp:1026";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onBlessingGiveFriendPicReq;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -234556943;
  v4[536862722] = -219021312;
  v4[536862723] = -219021312;
  v4[536862725] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::BlessingGiveFriendPicReq>((common::minet::Packet *const)(v2 + 64));
  if ( std::operator==<proto::BlessingGiveFriendPicReq const>(
         (const std::shared_ptr<const proto::BlessingGiveFriendPicReq> *)(v2 + 64),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v25,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onBlessingGiveFriendPicReq",
      1025);
    common::milog::MiLogStream::operator()(&v25, off_2504AD80);
    common::milog::MiLogStream::~MiLogStream(&v25);
    v5 = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::BlessingGiveFriendPicReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::BlessingGiveFriendPicReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
    proto::BlessingGiveFriendPicRsp::BlessingGiveFriendPicRsp((proto::BlessingGiveFriendPicRsp *const)(v2 + 128));
    v6 = proto::BlessingGiveFriendPicReq::pic_id(req);
    proto::BlessingGiveFriendPicRsp::set_pic_id((proto::BlessingGiveFriendPicRsp *const)(v2 + 128), v6);
    v7 = proto::BlessingGiveFriendPicReq::uid(req);
    proto::BlessingGiveFriendPicRsp::set_uid((proto::BlessingGiveFriendPicRsp *const)(v2 + 128), v7);
    *(_DWORD *)(v2 + 48) = -1;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getActivityComp(this->player_);
    PlayerActivityComp::findOpenningActivity<BlessingActivity>((PlayerActivityComp *const)(v2 + 96));
    if ( std::operator==<BlessingActivity>(0LL, (const std::shared_ptr<BlessingActivity> *)(v2 + 96)) )
    {
      common::milog::MiLogStream::create(
        &v25,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onBlessingGiveFriendPicReq",
        1035);
      v8 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
             &v25,
             (const char (*)[42])"[BLESSING] activity is not opening, uid: ");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &val);
      common::milog::MiLogStream::~MiLogStream(&v25);
      *(_DWORD *)(v2 + 48) = 860;
    }
    else
    {
      v9 = proto::BlessingGiveFriendPicReq::uid(req);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( v9 == Player::getUid(this->player_) )
      {
        common::milog::MiLogStream::create(
          &v25,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onBlessingGiveFriendPicReq",
          1041);
        common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(
          &v25,
          (const char (*)[24])"cannot give pic to self");
        common::milog::MiLogStream::~MiLogStream(&v25);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        SocialComp = Player::getSocialComp(this->player_);
        v11 = proto::BlessingGiveFriendPicReq::uid(req);
        if ( !PlayerSocialComp::isPlayerFriend(SocialComp, v11) )
        {
          common::milog::MiLogStream::create(
            &v25,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onBlessingGiveFriendPicReq",
            1046);
          v12 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                  &v25,
                  (const char (*)[38])"[BLESSING] player is not friend, uid:");
          val = proto::BlessingGiveFriendPicReq::uid(req);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
          common::milog::MiLogStream::~MiLogStream(&v25);
          *(_DWORD *)(v2 + 48) = 7008;
        }
        else
        {
          v13 = std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 96));
          v14 = proto::BlessingGiveFriendPicReq::uid(req);
          v15 = proto::BlessingGiveFriendPicReq::pic_id(req);
          *(_DWORD *)(v2 + 48) = BlessingActivity::giveFriendPic(v13, v15, v14);
        }
      }
    }
    std::shared_ptr<BlessingActivity>::~shared_ptr((std::shared_ptr<BlessingActivity> *const)(v2 + 96));
    if ( *(_DWORD *)(v2 + 48) )
    {
      common::milog::MiLogStream::create(
        &v25,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onBlessingGiveFriendPicReq",
        1055);
      v16 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
              &v25,
              (const char (*)[32])"[BLESSING] give failed, pic_id:");
      v22 = proto::BlessingGiveFriendPicReq::pic_id(req);
      v17 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, &v22);
      v18 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v17, (const char (*)[6])" uid:");
      val = proto::BlessingGiveFriendPicReq::uid(req);
      v19 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &val);
      v20 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v19, (const char (*)[10])" retcode:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v20, (const int *)(v2 + 48));
      common::milog::MiLogStream::~MiLogStream(&v25);
      proto::BlessingGiveFriendPicRsp::set_retcode(
        (proto::BlessingGiveFriendPicRsp *const)(v2 + 128),
        *(_DWORD *)(v2 + 48));
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 128));
    }
    v5 = 0;
    proto::BlessingGiveFriendPicRsp::~BlessingGiveFriendPicRsp((proto::BlessingGiveFriendPicRsp *const)(v2 + 128));
  }
  std::shared_ptr<proto::BlessingGiveFriendPicReq const>::~shared_ptr((std::shared_ptr<const proto::BlessingGiveFriendPicReq> *const)(v2 + 64));
  result = v5;
  if ( v26 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1063: range 00000000137696D2-0000000013769AA6
int32_t __cdecl ActivityHandler::onBlessingAcceptGivePicReq(
        ActivityHandler *const this,
        const proto::BlessingAcceptGivePicReq *req,
        proto::BlessingAcceptGivePicRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  common::milog::MiLogStream *v8; // r14
  int32_t v9; // r14d
  google::protobuf::uint32 v10; // r14d
  BlessingActivity *v11; // r14
  uint32_t v12; // r15d
  uint32_t v13; // eax
  int32_t result; // eax
  int32_t retcode; // [rsp+2Ch] [rbp-B4h]
  common::milog::MiLogStream v17; // [rsp+30h] [rbp-B0h] BYREF
  char v18[144]; // [rsp+50h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 11 pic_id:1072 64 16 17 activity_ptr:1066";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBlessingAcceptGivePicReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  v6 = proto::BlessingAcceptGivePicReq::index(req);
  proto::BlessingAcceptGivePicRsp::set_index(rsp_0, v6);
  v7 = proto::BlessingAcceptGivePicReq::uid(req);
  proto::BlessingAcceptGivePicRsp::set_uid(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BlessingActivity>((PlayerActivityComp *const)(v3 + 64));
  if ( std::operator==<BlessingActivity>(0LL, (const std::shared_ptr<BlessingActivity> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onBlessingAcceptGivePicReq",
      1069);
    v8 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
           &v17,
           (const char (*)[42])"[BLESSING] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    *(_DWORD *)(v3 + 48) = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream(&v17);
    v9 = 860;
  }
  else
  {
    *(_DWORD *)(v3 + 48) = 0;
    v10 = proto::BlessingAcceptGivePicReq::uid(req);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    if ( v10 == Player::getUid(this->player_) )
    {
      common::milog::MiLogStream::create(
        &v17,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onBlessingAcceptGivePicReq",
        1075);
      common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(&v17, (const char (*)[22])"target cannot be self");
      common::milog::MiLogStream::~MiLogStream(&v17);
      v9 = -1;
    }
    else
    {
      v11 = std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      v12 = proto::BlessingAcceptGivePicReq::index(req);
      v13 = proto::BlessingAcceptGivePicReq::uid(req);
      retcode = BlessingActivity::acceptFriendPic(v11, v13, v12, (uint32_t *)(v3 + 48));
      if ( !retcode )
        proto::BlessingAcceptGivePicRsp::set_pic_id(rsp_0, *(_DWORD *)(v3 + 48));
      v9 = retcode;
    }
  }
  std::shared_ptr<BlessingActivity>::~shared_ptr((std::shared_ptr<BlessingActivity> *const)(v3 + 64));
  result = v9;
  if ( v18 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1087: range 0000000013769AA8-000000001376A3B6
int32_t __cdecl ActivityHandler::onSeaLampFlyLampReq(
        ActivityHandler *const this,
        const proto::SeaLampFlyLampReq *req,
        proto::SeaLampFlyLampRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  common::milog::MiLogStream *v8; // r14
  int32_t v9; // r14d
  const proto::Vector *v10; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  const Vector3 *Position; // rax
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v14; // rax
  bool isItemSystemClosed; // r14
  FeatureSwitchMgr *p_feature_switch_mgr; // r14
  uint32_t v17; // eax
  common::milog::MiLogStream *v18; // r14
  common::milog::MiLogStream *v19; // rax
  uint32_t v20; // r14d
  uint32_t v21; // ecx
  google::protobuf::uint32 v22; // eax
  google::protobuf::uint32 v23; // eax
  const proto::Vector *v24; // r14
  proto::Vector *v25; // rax
  google::protobuf::int32 v26; // eax
  Scene *v27; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+24h] [rbp-14Ch] BYREF
  uint32_t check_distance; // [rsp+28h] [rbp-148h]
  int32_t ret; // [rsp+2Ch] [rbp-144h]
  std::shared_ptr<Config> v33; // [rsp+30h] [rbp-140h] BYREF
  common::milog::MiLogStream v34; // [rsp+40h] [rbp-130h] BYREF
  char v35[272]; // [rsp+60h] [rbp-110h] BYREF

  v3 = (unsigned __int64)v35;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(224LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 48 12 8 pos:1105 80 16 14 scene_ptr:1091 112 16 15 avatar_ptr:1097 144 40 11 notify:1134";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSeaLampFlyLampReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61937;
  v5[536862721] = 0x4000000;
  v5[536862722] = 62194;
  v5[536862723] = 62194;
  v5[536862724] = 62194;
  v5[536862725] = -218103808;
  v5[536862726] = -202116109;
  v6 = proto::SeaLampFlyLampReq::item_id(req);
  proto::SeaLampFlyLampRsp::set_item_id(rsp_0, v6);
  v7 = proto::SeaLampFlyLampReq::item_num(req);
  proto::SeaLampFlyLampRsp::set_item_num(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 80));
  if ( std::operator==<Scene>((const std::shared_ptr<Scene> *)(v3 + 80), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v34,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSeaLampFlyLampReq",
      1094);
    v8 = common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(
           &v34,
           (const char (*)[24])"getCurScene fails, uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &val);
    common::milog::MiLogStream::~MiLogStream(&v34);
    v9 = -1;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getAvatarComp(this->player_);
    PlayerAvatarComp::getCurAvatar((const PlayerAvatarComp *const)(v3 + 112));
    if ( std::operator==<Avatar>((const std::shared_ptr<Avatar> *)(v3 + 112), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v34,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onSeaLampFlyLampReq",
        1100);
      common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(&v34, (const char (*)[19])"getCurAvatar fails");
      common::milog::MiLogStream::~MiLogStream(&v34);
      v9 = -1;
    }
    else
    {
      v10 = proto::SeaLampFlyLampReq::pos(req);
      Vector3::Vector3((Vector3 *const)(v3 + 48), v10);
      if ( !Vector3::isValid((const Vector3 *const)(v3 + 48)) )
      {
        common::milog::MiLogStream::create(
          &v34,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/handler/activity_handler.cpp",
          "onSeaLampFlyLampReq",
          1108);
        common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(&v34, (const char (*)[12])off_2504B0E0);
        common::milog::MiLogStream::~MiLogStream(&v34);
        v9 = -1;
      }
      else
      {
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v33);
        v11 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v33);
        check_distance = ConstValueExcelConfigMgr::getDefaultCheckDistance(&v11->design_config.txt_config_mgr.const_value_config_mgr);
        std::shared_ptr<Config>::~shared_ptr(&v33);
        v12 = std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Avatar,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 112));
        Position = Entity::getPosition((const Entity *const)v12);
        if ( getDistance(Position, (const Vector3 *)(v3 + 48)) <= (float)(int)check_distance )
        {
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)&v33);
          v14 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v33);
          isItemSystemClosed = FeatureSwitchMgr::isItemSystemClosed(&v14->feature_switch_mgr);
          std::shared_ptr<Config>::~shared_ptr(&v33);
          if ( isItemSystemClosed )
          {
            common::milog::MiLogStream::create(
              &v34,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/handler/activity_handler.cpp",
              "onSeaLampFlyLampReq",
              1121);
            common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
              &v34,
              (const char (*)[35])"[FEATURE_SWITCH] ItemSystem closed");
            common::milog::MiLogStream::~MiLogStream(&v34);
            v9 = 142;
          }
          else
          {
            ServiceBox::findService<GameserverService>();
            GameserverService::getConfig((GameserverService *const)&v33);
            p_feature_switch_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v33)->feature_switch_mgr;
            v17 = proto::SeaLampFlyLampReq::item_id(req);
            LOBYTE(p_feature_switch_mgr) = FeatureSwitchMgr::isItemClosed(p_feature_switch_mgr, v17);
            std::shared_ptr<Config>::~shared_ptr(&v33);
            if ( (_BYTE)p_feature_switch_mgr )
            {
              common::milog::MiLogStream::create(
                &v34,
                &common::milog::MiLogDefault::default_log_obj_,
                1u,
                "./src/handler/activity_handler.cpp",
                "onSeaLampFlyLampReq",
                1126);
              v18 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
                      &v34,
                      (const char (*)[38])"[FEATURE_SWITCH] ItemSystem item_id: ");
              val = proto::SeaLampFlyLampReq::item_id(req);
              v19 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &val);
              common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v19, (const char (*)[8])" closed");
              common::milog::MiLogStream::~MiLogStream(&v34);
              v9 = 142;
            }
            else
            {
              v20 = proto::SeaLampFlyLampReq::item_num(req);
              v21 = proto::SeaLampFlyLampReq::item_id(req);
              ret = ActivityHandler::flyLamp(this, v21, v20);
              if ( !ret )
              {
                proto::SeaLampFlyLampNotify::SeaLampFlyLampNotify((proto::SeaLampFlyLampNotify *const)(v3 + 144));
                v22 = proto::SeaLampFlyLampReq::item_id(req);
                proto::SeaLampFlyLampNotify::set_item_id((proto::SeaLampFlyLampNotify *const)(v3 + 144), v22);
                v23 = proto::SeaLampFlyLampReq::item_num(req);
                proto::SeaLampFlyLampNotify::set_item_num((proto::SeaLampFlyLampNotify *const)(v3 + 144), v23);
                v24 = proto::SeaLampFlyLampReq::pos(req);
                v25 = proto::SeaLampFlyLampNotify::mutable_pos((proto::SeaLampFlyLampNotify *const)(v3 + 144));
                proto::Vector::operator=(v25, v24);
                v26 = proto::SeaLampFlyLampReq::param(req);
                proto::SeaLampFlyLampNotify::set_param((proto::SeaLampFlyLampNotify *const)(v3 + 144), v26);
                v27 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80));
                Scene::notifyAllPlayer<proto::SeaLampFlyLampNotify>(v27, (proto::SeaLampFlyLampNotify *)(v3 + 144), 0);
                proto::SeaLampFlyLampNotify::~SeaLampFlyLampNotify((proto::SeaLampFlyLampNotify *const)(v3 + 144));
              }
              v9 = ret;
            }
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v34,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/handler/activity_handler.cpp",
            "onSeaLampFlyLampReq",
            1114);
          common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(&v34, (const char (*)[28])off_2504B120);
          common::milog::MiLogStream::~MiLogStream(&v34);
          v9 = 520;
        }
      }
    }
    std::shared_ptr<Avatar>::~shared_ptr((std::shared_ptr<Avatar> *const)(v3 + 112));
  }
  std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 80));
  result = v9;
  if ( v35 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 1145: range 000000001376A3B8-000000001376A954
__int64 __fastcall ActivityHandler::flyLamp(ActivityHandler *const this, uint32_t item_id, uint32_t item_num)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  __int64 result; // rax
  PlayerItemComp *ItemComp; // rax
  common::milog::MiLogStream *v8; // rbx
  std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rax
  PlayerItemComp *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  unsigned int val; // [rsp+10h] [rbp-E0h] BYREF
  const data::MaterialExcelConfig *material_config_ptr; // [rsp+18h] [rbp-D8h]
  std::shared_ptr<Config> v18; // [rsp+20h] [rbp-D0h] BYREF
  common::milog::MiLogStream v19; // [rsp+30h] [rbp-C0h] BYREF
  char v20[160]; // [rsp+50h] [rbp-A0h] BYREF

  v3 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 4 12 item_id:1144 64 8 11 reason:1167 96 16 10 param:1151";
  *(_QWORD *)(v3 + 16) = ActivityHandler::flyLamp;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -218959360;
  v5[536862723] = -202178560;
  *(_DWORD *)(v3 + 48) = item_id;
  if ( item_num )
  {
    *(_QWORD *)(v3 + 96) = 0LL;
    *(_QWORD *)(v3 + 104) = 0LL;
    *(_DWORD *)(v3 + 96) = *(_DWORD *)(v3 + 48);
    *(_DWORD *)(v3 + 100) = item_num;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ItemComp = Player::getItemComp(this->player_);
    if ( PlayerItemComp::checkSubItem(ItemComp, (const ItemParam *)(v3 + 96)) )
    {
      common::milog::MiLogStream::create(
        &v19,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "flyLamp",
        1155);
      v8 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
             &v19,
             (const char (*)[26])"checkSubItem fails, uid: ");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &val);
      common::milog::MiLogStream::~MiLogStream(&v19);
      result = 609LL;
    }
    else
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)&v18);
      v9 = std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v18);
      material_config_ptr = data::MaterialExcelConfigMgrBase::findMaterialExcelConfig(
                              &v9->design_config.txt_config_mgr.material_config_mgr,
                              *(_DWORD *)(v3 + 48));
      std::shared_ptr<Config>::~shared_ptr(&v18);
      if ( !material_config_ptr )
        goto LABEL_16;
      if ( *(_BYTE *)(((unsigned __int64)&material_config_ptr->material_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)material_config_ptr + 76) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&material_config_ptr->material_type >> 3)
                                                                           + 0x7FFF8000) )
      {
        __asan_report_load4();
      }
      if ( material_config_ptr->material_type == MATERIAL_SEA_LAMP )
      {
        SubItemReason::SubItemReason((SubItemReason *const)(v3 + 64), ACTION_REASON_SEA_LAMP_FLY_LAMP);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        v12 = Player::getItemComp(this->player_);
        if ( PlayerItemComp::subItem(v12, (const ItemParam *)(v3 + 96), (const SubItemReason *)(v3 + 64)) )
        {
          common::milog::MiLogStream::create(
            &v19,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/handler/activity_handler.cpp",
            "flyLamp",
            1170);
          v13 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                  &v19,
                  (const char (*)[20])"subItem fails, uid:");
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8();
          val = Player::getUid(this->player_);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &val);
          common::milog::MiLogStream::~MiLogStream(&v19);
          result = 0xFFFFFFFFLL;
        }
        else
        {
          result = 0LL;
        }
      }
      else
      {
LABEL_16:
        common::milog::MiLogStream::create(
          &v19,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/handler/activity_handler.cpp",
          "flyLamp",
          1162);
        v10 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(&v19, (const char (*)[9])"item_id:");
        v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v10,
                (const unsigned int *)(v3 + 48));
        common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v11, (const char (*)[8])" wrong!");
        common::milog::MiLogStream::~MiLogStream(&v19);
        result = 0xFFFFFFFFLL;
      }
    }
  }
  else
  {
    common::milog::MiLogStream::create(
      &v19,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "flyLamp",
      1148);
    common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(&v19, (const char (*)[15])"item_num is 0!");
    common::milog::MiLogStream::~MiLogStream(&v19);
    result = 0xFFFFFFFFLL;
  }
  if ( v20 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1177: range 000000001376A956-000000001376ABA1
int32_t __cdecl ActivityHandler::onBlessingAcceptAllGivePicReq(
        ActivityHandler *const this,
        const proto::BlessingAcceptAllGivePicReq *req,
        proto::BlessingAcceptAllGivePicRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  BlessingActivity *v8; // rdx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1178";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBlessingAcceptAllGivePicReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BlessingActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BlessingActivity>(0LL, (const std::shared_ptr<BlessingActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onBlessingAcceptAllGivePicReq",
      1181);
    v6 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
           &v12,
           (const char (*)[42])"[BLESSING] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BlessingActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = BlessingActivity::acceptAllGivePic(v8, rsp_0);
  }
  std::shared_ptr<BlessingActivity>::~shared_ptr((std::shared_ptr<BlessingActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1188: range 000000001376ABA2-000000001376ADF4
int32_t __cdecl ActivityHandler::onExpeditionStartReq(
        ActivityHandler *const this,
        const proto::ExpeditionStartReq *req,
        proto::ExpeditionStartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t started; // r14d
  ExpeditionActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1189";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onExpeditionStartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ExpeditionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ExpeditionActivity>(0LL, (const std::shared_ptr<ExpeditionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onExpeditionStartReq",
      1192);
    v6 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
           &v12,
           (const char (*)[44])"[EXPEDITION] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    started = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ExpeditionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ExpeditionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    started = ExpeditionActivity::startExpedition(v8, req, rsp_0);
  }
  std::shared_ptr<ExpeditionActivity>::~shared_ptr((std::shared_ptr<ExpeditionActivity> *const)(v3 + 32));
  result = started;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1200: range 000000001376ADF6-000000001376B048
int32_t __cdecl ActivityHandler::onExpeditionRecallReq(
        ActivityHandler *const this,
        const proto::ExpeditionRecallReq *req,
        proto::ExpeditionRecallRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  ExpeditionActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1201";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onExpeditionRecallReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ExpeditionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ExpeditionActivity>(0LL, (const std::shared_ptr<ExpeditionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onExpeditionRecallReq",
      1204);
    v6 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
           &v12,
           (const char (*)[44])"[EXPEDITION] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ExpeditionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ExpeditionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ExpeditionActivity::recallExpedition(v8, req, rsp_0);
  }
  std::shared_ptr<ExpeditionActivity>::~shared_ptr((std::shared_ptr<ExpeditionActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1212: range 000000001376B04A-000000001376B29C
int32_t __cdecl ActivityHandler::onExpeditionTakeRewardReq(
        ActivityHandler *const this,
        const proto::ExpeditionTakeRewardReq *req,
        proto::ExpeditionTakeRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  ExpeditionActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1213";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onExpeditionTakeRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ExpeditionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ExpeditionActivity>(0LL, (const std::shared_ptr<ExpeditionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onExpeditionTakeRewardReq",
      1216);
    v6 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
           &v12,
           (const char (*)[44])"[EXPEDITION] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ExpeditionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ExpeditionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ExpeditionActivity::takeExpeditionReward(v8, req, rsp_0);
  }
  std::shared_ptr<ExpeditionActivity>::~shared_ptr((std::shared_ptr<ExpeditionActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1224: range 000000001376B29E-000000001376B4F0
int32_t __cdecl ActivityHandler::onGetExpeditionAssistInfoListReq(
        ActivityHandler *const this,
        const proto::GetExpeditionAssistInfoListReq *req,
        proto::GetExpeditionAssistInfoListRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t ExpeditionAssistInfoList; // r14d
  ExpeditionActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1225";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGetExpeditionAssistInfoListReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ExpeditionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ExpeditionActivity>(0LL, (const std::shared_ptr<ExpeditionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGetExpeditionAssistInfoListReq",
      1228);
    v6 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
           &v12,
           (const char (*)[44])"[EXPEDITION] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    ExpeditionAssistInfoList = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ExpeditionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ExpeditionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    ExpeditionAssistInfoList = ExpeditionActivity::getExpeditionAssistInfoList(v8, req, rsp_0);
  }
  std::shared_ptr<ExpeditionActivity>::~shared_ptr((std::shared_ptr<ExpeditionActivity> *const)(v3 + 32));
  result = ExpeditionAssistInfoList;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1236: range 000000001376B4F2-000000001376B508
int32_t __cdecl ActivityHandler::onSetCurExpeditionChallengeIdReq(
        ActivityHandler *const this,
        const proto::SetCurExpeditionChallengeIdReq *req,
        proto::SetCurExpeditionChallengeIdRsp *rsp_0)
{
  return -1;
};

// Line 1242: range 000000001376B50A-000000001376B7FD
int32_t __cdecl ActivityHandler::onStartArenaChallengeLevelReq(
        ActivityHandler *const this,
        const proto::StartArenaChallengeLevelReq *req,
        proto::StartArenaChallengeLevelRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t started; // r14d
  google::protobuf::uint32 v8; // edx
  google::protobuf::uint32 v9; // edx
  google::protobuf::uint32 v10; // edx
  ArenaChallengeActivity *v11; // r14
  uint32_t v12; // r15d
  uint32_t v13; // eax
  int32_t result; // eax
  google::protobuf::uint32 arena_challenge_level; // [rsp+14h] [rbp-BCh]
  unsigned int val; // [rsp+3Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v18; // [rsp+40h] [rbp-90h] BYREF
  char v19[112]; // [rsp+60h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1243";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onStartArenaChallengeLevelReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ArenaChallengeActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ArenaChallengeActivity>(0LL, (const std::shared_ptr<ArenaChallengeActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v18,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onStartArenaChallengeLevelReq",
      1246);
    v6 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
           &v18,
           (const char (*)[49])"[ARENA_CHALLENGE] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v18);
    started = 860;
  }
  else
  {
    v8 = proto::StartArenaChallengeLevelReq::gadget_entity_id(req);
    proto::StartArenaChallengeLevelRsp::set_gadget_entity_id(rsp_0, v8);
    v9 = proto::StartArenaChallengeLevelReq::arena_challenge_id(req);
    proto::StartArenaChallengeLevelRsp::set_arena_challenge_id(rsp_0, v9);
    v10 = proto::StartArenaChallengeLevelReq::arena_challenge_level(req);
    proto::StartArenaChallengeLevelRsp::set_arena_challenge_level(rsp_0, v10);
    v11 = std::__shared_ptr_access<ArenaChallengeActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ArenaChallengeActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    arena_challenge_level = proto::StartArenaChallengeLevelReq::arena_challenge_level(req);
    v12 = proto::StartArenaChallengeLevelReq::arena_challenge_id(req);
    v13 = proto::StartArenaChallengeLevelReq::gadget_entity_id(req);
    started = ArenaChallengeActivity::startArenaChallengeLevel(v11, v13, v12, arena_challenge_level);
  }
  std::shared_ptr<ArenaChallengeActivity>::~shared_ptr((std::shared_ptr<ArenaChallengeActivity> *const)(v3 + 32));
  result = started;
  if ( v19 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1258: range 000000001376B7FE-000000001376BB44
int32_t __cdecl ActivityHandler::onFleurFairMusicGameSettleReq(
        ActivityHandler *const this,
        const proto::FleurFairMusicGameSettleReq *req,
        proto::FleurFairMusicGameSettleRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  google::protobuf::uint32 v8; // eax
  FleurFairActivity *v9; // r14
  uint32_t v10; // r15d
  uint32_t v11; // eax
  int32_t result; // eax
  google::protobuf::uint32 combo; // [rsp+10h] [rbp-E0h]
  google::protobuf::uint32 correct_hit; // [rsp+14h] [rbp-DCh]
  unsigned int val; // [rsp+38h] [rbp-B8h] BYREF
  int32_t ret; // [rsp+3Ch] [rbp-B4h]
  common::milog::MiLogStream v18; // [rsp+40h] [rbp-B0h] BYREF
  char v19[144]; // [rsp+60h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 1 20 is_unlock_level:1266 48 1 18 is_new_record:1267 64 16 17 activity_ptr:1259";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFleurFairMusicGameSettleReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753535;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FleurFairActivity>((PlayerActivityComp *const)(v3 + 64));
  if ( std::operator==<FleurFairActivity>(0LL, (const std::shared_ptr<FleurFairActivity> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v18,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onFleurFairMusicGameSettleReq",
      1262);
    v6 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
           &v18,
           (const char (*)[44])"[FLEUR_FAIR] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v18);
    v7 = 860;
  }
  else
  {
    v8 = proto::FleurFairMusicGameSettleReq::music_basic_id(req);
    proto::FleurFairMusicGameSettleRsp::set_music_basic_id(rsp_0, v8);
    *(_BYTE *)(v3 + 32) = 0;
    *(_BYTE *)(v3 + 48) = 0;
    v9 = std::__shared_ptr_access<FleurFairActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FleurFairActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    correct_hit = proto::FleurFairMusicGameSettleReq::correct_hit(req);
    combo = proto::FleurFairMusicGameSettleReq::combo(req);
    v10 = proto::FleurFairMusicGameSettleReq::score(req);
    v11 = proto::FleurFairMusicGameSettleReq::music_basic_id(req);
    ret = FleurFairActivity::onMusicGameSettle(v9, v11, v10, combo, correct_hit, (bool *)(v3 + 32), (bool *)(v3 + 48));
    proto::FleurFairMusicGameSettleRsp::set_is_unlock_next_level(rsp_0, *(_BYTE *)(v3 + 32));
    proto::FleurFairMusicGameSettleRsp::set_is_new_record(rsp_0, *(_BYTE *)(v3 + 48));
    v7 = ret;
  }
  std::shared_ptr<FleurFairActivity>::~shared_ptr((std::shared_ptr<FleurFairActivity> *const)(v3 + 64));
  result = v7;
  if ( v19 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1275: range 000000001376BB46-000000001376BE68
int32_t __cdecl ActivityHandler::onFleurFairMusicGameStartReq(
        ActivityHandler *const this,
        const proto::FleurFairMusicGameStartReq *req,
        proto::FleurFairMusicGameStartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  Scene *v8; // rax
  SceneGalleryComp *GalleryComp; // rax
  google::protobuf::uint32 v10; // edx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-B4h] BYREF
  common::milog::MiLogStream v14; // [rsp+30h] [rbp-B0h] BYREF
  char v15[144]; // [rsp+50h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 17 activity_ptr:1276 64 16 14 scene_ptr:1282";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFleurFairMusicGameStartReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FleurFairActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FleurFairActivity>(0LL, (const std::shared_ptr<FleurFairActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onFleurFairMusicGameStartReq",
      1279);
    v6 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
           &v14,
           (const char (*)[44])"[FLEUR_FAIR] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v14);
    v7 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
    if ( std::operator!=<Scene>((const std::shared_ptr<Scene> *)(v3 + 64), 0LL)
      && (v8 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64)),
          GalleryComp = Scene::getGalleryComp(v8),
          SceneGalleryComp::isAnyGalleryStarted(GalleryComp)) )
    {
      v7 = 523;
    }
    else
    {
      v10 = proto::FleurFairMusicGameStartReq::music_basic_id(req);
      proto::FleurFairMusicGameStartRsp::set_music_basic_id(rsp_0, v10);
      v7 = 0;
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
  }
  std::shared_ptr<FleurFairActivity>::~shared_ptr((std::shared_ptr<FleurFairActivity> *const)(v3 + 32));
  result = v7;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1295: range 000000001376BE6A-000000001376C9B5
int32_t __cdecl ActivityHandler::onFleurFairReplayMiniGameReq(
        ActivityHandler *const this,
        const proto::FleurFairReplayMiniGameReq *req,
        proto::FleurFairReplayMiniGameRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  google::protobuf::uint32 v6; // edx
  common::milog::MiLogStream *v7; // r14
  int32_t v8; // r14d
  ActivityFleurFairExcelConfigMgr *p_activity_fleur_fair_config_mgr; // r14
  uint32_t v10; // eax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // r14
  FleurFairActivity *v13; // r14
  uint32_t v14; // eax
  GalleryExcelConfigMgr *p_gallery_config_mgr; // rcx
  common::milog::MiLogStream *v16; // r14
  common::milog::MiLogStream *v17; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v18; // rax
  uint32_t OwnerUid; // r14d
  LuaConfigMgr *p_lua_config_mgr; // rcx
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  Scene *v23; // rax
  bool v24; // r14
  int32_t result; // eax
  PlayerSceneComp *SceneComp; // [rsp+10h] [rbp-150h]
  unsigned int val; // [rsp+3Ch] [rbp-124h] BYREF
  const data::FleurFairMiniGameExcelConfig *minigame_config_ptr; // [rsp+40h] [rbp-120h]
  const data::GalleryExcelConfig *gallery_config_ptr; // [rsp+48h] [rbp-118h]
  const GroupScriptConfig *group_script_config_ptr; // [rsp+50h] [rbp-110h]
  const PointScriptConfig *point_script_config_ptr; // [rsp+58h] [rbp-108h]
  std::shared_ptr<Config> v33; // [rsp+60h] [rbp-100h] BYREF
  common::milog::MiLogStream v34; // [rsp+70h] [rbp-F0h] BYREF
  TransferReason p_reason; // [rsp+90h] [rbp-D0h] BYREF
  char v36[144]; // [rsp+D0h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v36;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 17 activity_ptr:1297 64 16 14 scene_ptr:1325";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFleurFairReplayMiniGameReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  v6 = proto::FleurFairReplayMiniGameReq::minigame_id(req);
  proto::FleurFairReplayMiniGameRsp::set_minigame_id(rsp_0, v6);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FleurFairActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FleurFairActivity>(0LL, (const std::shared_ptr<FleurFairActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v34,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onFleurFairReplayMiniGameReq",
      1300);
    v7 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
           &v34,
           (const char (*)[44])"[FLEUR_FAIR] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v7, &val);
    common::milog::MiLogStream::~MiLogStream(&v34);
    v8 = 860;
  }
  else
  {
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)&v33);
    p_activity_fleur_fair_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v33)->design_config.txt_config_mgr.activity_fleur_fair_config_mgr;
    v10 = proto::FleurFairReplayMiniGameReq::minigame_id(req);
    minigame_config_ptr = data::ActivityFleurFairExcelConfigMgrBase::findFleurFairMiniGameExcelConfig(
                            p_activity_fleur_fair_config_mgr,
                            v10);
    std::shared_ptr<Config>::~shared_ptr(&v33);
    if ( minigame_config_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&minigame_config_ptr->mini_game_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)minigame_config_ptr + 12) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&minigame_config_ptr->mini_game_type >> 3)
                                                                           + 0x7FFF8000) )
      {
        __asan_report_load4();
      }
      if ( minigame_config_ptr->mini_game_type == FLEUR_FAIR_MINI_GAME_BALLOON
        || minigame_config_ptr->mini_game_type == FLEUR_FAIR_MINI_GAME_FALL )
      {
        v13 = std::__shared_ptr_access<FleurFairActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FleurFairActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        v14 = proto::FleurFairReplayMiniGameReq::minigame_id(req);
        if ( !FleurFairActivity::isMinigameOpen(v13, v14) )
        {
          v8 = 9115;
        }
        else
        {
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)&v33);
          p_gallery_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v33)->design_config.txt_config_mgr.gallery_config_mgr;
          if ( *(_BYTE *)(((unsigned __int64)&minigame_config_ptr->config_id >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)minigame_config_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&minigame_config_ptr->config_id >> 3)
                                                                               + 0x7FFF8000) )
          {
            __asan_report_load4();
          }
          gallery_config_ptr = data::GalleryExcelConfigMgrBase::findGalleryExcelConfig(
                                 p_gallery_config_mgr,
                                 minigame_config_ptr->config_id);
          std::shared_ptr<Config>::~shared_ptr(&v33);
          if ( gallery_config_ptr )
          {
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8();
            Player::getSceneComp(this->player_);
            PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
            if ( std::operator==<Scene>((const std::shared_ptr<Scene> *)(v3 + 64), 0LL) )
            {
              common::milog::MiLogStream::create(
                &v34,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/handler/activity_handler.cpp",
                "onFleurFairReplayMiniGameReq",
                1328);
              v17 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                      &v34,
                      (const char (*)[49])"[FLEUR_FAIR] cur_scene_ptr is null, minigame_id:");
              val = proto::FleurFairReplayMiniGameReq::minigame_id(req);
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, &val);
              common::milog::MiLogStream::~MiLogStream(&v34);
              v8 = -1;
            }
            else
            {
              v18 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
              OwnerUid = Scene::getOwnerUid(v18);
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8();
              if ( OwnerUid == Player::getUid(this->player_) )
              {
                ServiceBox::findService<GameserverService>();
                GameserverService::getConfig((GameserverService *const)&v33);
                p_lua_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v33)->design_config.lua_config_mgr;
                if ( *(_BYTE *)(((unsigned __int64)&gallery_config_ptr->revive_point_group_id >> 3) + 0x7FFF8000) != 0
                  && (char)((((_BYTE)gallery_config_ptr + 100) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&gallery_config_ptr->revive_point_group_id >> 3)
                                                                                     + 0x7FFF8000) )
                {
                  __asan_report_load4();
                }
                group_script_config_ptr = LuaConfigMgr::findGroupScriptConfig(
                                            p_lua_config_mgr,
                                            gallery_config_ptr->revive_point_group_id);
                std::shared_ptr<Config>::~shared_ptr(&v33);
                if ( group_script_config_ptr )
                {
                  if ( *(_BYTE *)(((unsigned __int64)&gallery_config_ptr->revive_point_config_id >> 3) + 0x7FFF8000) != 0
                    && *(_BYTE *)(((unsigned __int64)&gallery_config_ptr->revive_point_config_id >> 3) + 0x7FFF8000) <= 3 )
                  {
                    __asan_report_load4();
                  }
                  point_script_config_ptr = GroupScriptConfig::findPointConfig(
                                              group_script_config_ptr,
                                              gallery_config_ptr->revive_point_config_id);
                  if ( point_script_config_ptr )
                  {
                    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                      __asan_report_load8();
                    SceneComp = Player::getSceneComp(this->player_);
                    TransferReason::TransferReason(&p_reason, ENTER_REASON_GALLERY);
                    v23 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
                    v24 = PlayerSceneComp::jumpToScene(
                            SceneComp,
                            v23,
                            &point_script_config_ptr->pos,
                            &point_script_config_ptr->rot,
                            0,
                            &p_reason) != 0;
                    TransferReason::~TransferReason(&p_reason);
                    if ( v24 )
                    {
                      common::milog::MiLogStream::create(
                        &v34,
                        &common::milog::MiLogDefault::default_log_obj_,
                        3u,
                        "./src/handler/activity_handler.cpp",
                        "onFleurFairReplayMiniGameReq",
                        1352);
                      common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
                        &v34,
                        (const char (*)[27])"[DRAFT] jumpToScene failed");
                      common::milog::MiLogStream::~MiLogStream(&v34);
                      v8 = -1;
                    }
                    else
                    {
                      v8 = 0;
                    }
                  }
                  else
                  {
                    common::milog::MiLogStream::create(
                      &v34,
                      &common::milog::MiLogDefault::default_log_obj_,
                      3u,
                      "./src/handler/activity_handler.cpp",
                      "onFleurFairReplayMiniGameReq",
                      1347);
                    v22 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                            &v34,
                            (const char (*)[44])"[DRAFT] findPointConfig failed, config_id: ");
                    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                      v22,
                      &gallery_config_ptr->revive_point_config_id);
                    common::milog::MiLogStream::~MiLogStream(&v34);
                    v8 = -1;
                  }
                }
                else
                {
                  common::milog::MiLogStream::create(
                    &v34,
                    &common::milog::MiLogDefault::default_log_obj_,
                    3u,
                    "./src/handler/activity_handler.cpp",
                    "onFleurFairReplayMiniGameReq",
                    1340);
                  v21 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                          &v34,
                          (const char (*)[49])"[DRAFT] findGroupScriptConfig failed, group_id: ");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v21,
                    &gallery_config_ptr->revive_point_group_id);
                  common::milog::MiLogStream::~MiLogStream(&v34);
                  v8 = -1;
                }
              }
              else
              {
                v8 = 9119;
              }
            }
            std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
          }
          else
          {
            common::milog::MiLogStream::create(
              &v34,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/handler/activity_handler.cpp",
              "onFleurFairReplayMiniGameReq",
              1322);
            v16 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
                    &v34,
                    (const char (*)[54])"[FLEUR_FAIR] gallery_config_ptr is null, minigame_id:");
            val = proto::FleurFairReplayMiniGameReq::minigame_id(req);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, &val);
            common::milog::MiLogStream::~MiLogStream(&v34);
            v8 = -1;
          }
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v34,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onFleurFairReplayMiniGameReq",
          1312);
        v12 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
                &v34,
                (const char (*)[55])"[FLEUR_FAIR] minigame type cannot replay, minigame_id:");
        val = proto::FleurFairReplayMiniGameReq::minigame_id(req);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
        common::milog::MiLogStream::~MiLogStream(&v34);
        v8 = -1;
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v34,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onFleurFairReplayMiniGameReq",
        1306);
      v11 = common::milog::MiLogStream::operator<<<char [59],(char *[59])0>(
              &v34,
              (const char (*)[59])"[FLEUR_FAIR] minigame excel config not found, minigame_id:");
      val = proto::FleurFairReplayMiniGameReq::minigame_id(req);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
      common::milog::MiLogStream::~MiLogStream(&v34);
      v8 = -1;
    }
  }
  std::shared_ptr<FleurFairActivity>::~shared_ptr((std::shared_ptr<FleurFairActivity> *const)(v3 + 32));
  result = v8;
  if ( v36 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1360: range 000000001376C9B6-000000001376CC72
int32_t __cdecl ActivityHandler::onActivityTakeScoreRewardReq(
        ActivityHandler *const this,
        const proto::ActivityTakeScoreRewardReq *req,
        proto::ActivityTakeScoreRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v9; // r14
  common::milog::MiLogStream *v10; // rax
  int32_t v11; // r14d
  google::protobuf::uint32 v12; // edx
  google::protobuf::uint32 v13; // edx
  BaseActivity *v14; // r14
  uint32_t v15; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v19; // [rsp+30h] [rbp-90h] BYREF
  char v20[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1361";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityTakeScoreRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::ActivityTakeScoreRewardReq::activity_id(req);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>(0LL, (const std::shared_ptr<BaseActivity> *)(v3 + 32))
    || (v7 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    common::milog::MiLogStream::create(
      &v19,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivityTakeScoreRewardReq",
      1364);
    v9 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(&v19, (const char (*)[13])"activity_id:");
    val = proto::ActivityTakeScoreRewardReq::activity_id(req);
    v10 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
    common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v10, (const char (*)[10])" not open");
    common::milog::MiLogStream::~MiLogStream(&v19);
    v11 = 860;
  }
  else
  {
    v12 = proto::ActivityTakeScoreRewardReq::activity_id(req);
    proto::ActivityTakeScoreRewardRsp::set_activity_id(rsp_0, v12);
    v13 = proto::ActivityTakeScoreRewardReq::reward_config_id(req);
    proto::ActivityTakeScoreRewardRsp::set_reward_config_id(rsp_0, v13);
    v14 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v15 = proto::ActivityTakeScoreRewardReq::reward_config_id(req);
    v11 = BaseActivity::takeScoreReward(v14, v15);
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v11;
  if ( v20 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1373: range 000000001376CC74-000000001376CF89
int32_t __cdecl ActivityHandler::onActivityTakeAllScoreRewardReq(
        ActivityHandler *const this,
        const proto::ActivityTakeAllScoreRewardReq *req,
        proto::ActivityTakeAllScoreRewardRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v9; // r14
  common::milog::MiLogStream *v10; // rax
  int32_t v11; // r14d
  BaseActivity *v12; // rax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  google::protobuf::RepeatedField<unsigned int> *v14; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+28h] [rbp-D8h] BYREF
  int32_t ret; // [rsp+2Ch] [rbp-D4h]
  common::milog::MiLogStream v19; // [rsp+30h] [rbp-D0h] BYREF
  char v20[176]; // [rsp+50h] [rbp-B0h] BYREF

  v3 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 17 activity_ptr:1374 64 24 21 taken_reward_vec:1385";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityTakeAllScoreRewardReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -218103808;
  v5[536862723] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::ActivityTakeAllScoreRewardReq::activity_id(req);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>(0LL, (const std::shared_ptr<BaseActivity> *)(v3 + 32))
    || (v7 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    common::milog::MiLogStream::create(
      &v19,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivityTakeAllScoreRewardReq",
      1377);
    v9 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(&v19, (const char (*)[13])"activity_id:");
    val = proto::ActivityTakeAllScoreRewardReq::activity_id(req);
    v10 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
    common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v10, (const char (*)[10])" not open");
    common::milog::MiLogStream::~MiLogStream(&v19);
    v11 = 860;
  }
  else
  {
    v12 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    ret = BaseActivity::takeAllScoreRewards(v12);
    if ( ret )
    {
      v11 = ret;
    }
    else
    {
      v13 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      BaseActivity::getTakenScoreRewardVec((std::vector<unsigned int> *)(v3 + 64), v13);
      v14 = proto::ActivityTakeAllScoreRewardRsp::mutable_reward_config_list(rsp_0);
      common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
        (const std::vector<unsigned int> *)(v3 + 64),
        v14);
      v11 = 0;
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v3 + 64));
    }
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v11;
  if ( v20 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1391: range 000000001376CF8A-000000001376D1DC
int32_t __cdecl ActivityHandler::onHideAndSeekSelectSkillReq(
        ActivityHandler *const this,
        const proto::HideAndSeekSelectSkillReq *req,
        proto::HideAndSeekSelectSkillRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  HideAndSeekActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1392";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onHideAndSeekSelectSkillReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<HideAndSeekActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<HideAndSeekActivity>(0LL, (const std::shared_ptr<HideAndSeekActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onHideAndSeekSelectSkillReq",
      1395);
    v6 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
           &v12,
           (const char (*)[31])"activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = HideAndSeekActivity::onHideAndSeekSelectSkillReq(v8, req, rsp_0);
  }
  std::shared_ptr<HideAndSeekActivity>::~shared_ptr((std::shared_ptr<HideAndSeekActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1402: range 000000001376D1DE-000000001376D8AE
int32_t __cdecl ActivityHandler::onHideAndSeekSelectAvatarReq(
        ActivityHandler *const this,
        const proto::HideAndSeekSelectAvatarReq *req,
        proto::HideAndSeekSelectAvatarRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  uint32_t OwnerUid; // r14d
  HideAndSeekActivity *v10; // r14
  uint32_t v11; // r15d
  uint32_t Uid; // eax
  uint32_t v13; // r14d
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v14; // rax
  common::milog::MiLogStream *v15; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rax
  Player *v17; // rax
  common::milog::MiLogStream *v18; // r14
  std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  HideAndSeekActivity *v20; // r14
  uint32_t v21; // r15d
  uint32_t v22; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-F4h] BYREF
  common::milog::MiLogStream v25; // [rsp+30h] [rbp-F0h] BYREF
  char v26[208]; // [rsp+50h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 32 16 17 activity_ptr:1403 64 16 14 scene_ptr:1409 96 16 15 player_ptr:1421 128 16 23 owner_activity_ptr:1427";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onHideAndSeekSelectAvatarReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -219021312;
  v5[536862723] = -219021312;
  v5[536862724] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<HideAndSeekActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<HideAndSeekActivity>(0LL, (const std::shared_ptr<HideAndSeekActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v25,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onHideAndSeekSelectAvatarReq",
      1406);
    v6 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
           &v25,
           (const char (*)[31])"activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v25);
    v7 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
    if ( std::operator==<Scene>((const std::shared_ptr<Scene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v25,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onHideAndSeekSelectAvatarReq",
        1412);
      common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
        &v25,
        (const char (*)[23])" cur_scene_ptr is null");
      common::milog::MiLogStream::~MiLogStream(&v25);
      v7 = -1;
    }
    else
    {
      v8 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      OwnerUid = Scene::getOwnerUid(v8);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( OwnerUid == Player::getUid(this->player_) )
      {
        v10 = std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        v11 = proto::HideAndSeekSelectAvatarReq::avatar_id(req);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        Uid = Player::getUid(this->player_);
        v7 = HideAndSeekActivity::selectHideAndSeekAvatar(v10, Uid, v11);
      }
      else
      {
        v13 = (unsigned int)std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        v14 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        Scene::getOwnerUid(v14);
        Scene::findPlayer((const Scene *const)(v3 + 96), v13);
        if ( std::operator==<Player>((const std::shared_ptr<Player> *)(v3 + 96), 0LL) )
        {
          common::milog::MiLogStream::create(
            &v25,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onHideAndSeekSelectAvatarReq",
            1424);
          v15 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                  &v25,
                  (const char (*)[40])"findSceneOwnerPlayer failed, owner_uid:");
          v16 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
          val = Scene::getOwnerUid(v16);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &val);
          common::milog::MiLogStream::~MiLogStream(&v25);
          v7 = -1;
        }
        else
        {
          v17 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          Player::getActivityComp(v17);
          PlayerActivityComp::findOpenningActivity<HideAndSeekActivity>((PlayerActivityComp *const)(v3 + 128));
          if ( std::operator==<HideAndSeekActivity>(0LL, (const std::shared_ptr<HideAndSeekActivity> *)(v3 + 128)) )
          {
            common::milog::MiLogStream::create(
              &v25,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/handler/activity_handler.cpp",
              "onHideAndSeekSelectAvatarReq",
              1430);
            v18 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                    &v25,
                    (const char (*)[31])"activity is not opening, uid: ");
            v19 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
            val = Player::getUid(v19);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &val);
            common::milog::MiLogStream::~MiLogStream(&v25);
            v7 = 860;
          }
          else
          {
            v20 = std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
            v21 = proto::HideAndSeekSelectAvatarReq::avatar_id(req);
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8();
            v22 = Player::getUid(this->player_);
            v7 = HideAndSeekActivity::selectHideAndSeekAvatar(v20, v22, v21);
          }
          std::shared_ptr<HideAndSeekActivity>::~shared_ptr((std::shared_ptr<HideAndSeekActivity> *const)(v3 + 128));
        }
        std::shared_ptr<Player>::~shared_ptr((std::shared_ptr<Player> *const)(v3 + 96));
      }
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
  }
  std::shared_ptr<HideAndSeekActivity>::~shared_ptr((std::shared_ptr<HideAndSeekActivity> *const)(v3 + 32));
  result = v7;
  if ( v26 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 1437: range 000000001376D8B0-000000001376DCBC
int32_t __cdecl ActivityHandler::onHideAndSeekChooseMapReq(
        ActivityHandler *const this,
        const proto::HideAndSeekChooseMapReq *req,
        proto::HideAndSeekChooseMapRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // rbx
  common::milog::MiLogStream *v6; // r14
  int v7; // r14d
  common::milog::MiLogStream *v8; // r14
  const google::protobuf::RepeatedField<unsigned int> *v9; // rax
  HideAndSeekActivity *v10; // rax
  google::protobuf::RepeatedField<unsigned int> *v11; // r14
  const google::protobuf::RepeatedField<unsigned int> *v12; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+28h] [rbp-F8h] BYREF
  int ret; // [rsp+2Ch] [rbp-F4h]
  common::milog::MiLogStream v17; // [rsp+30h] [rbp-F0h] BYREF
  char v18[208]; // [rsp+50h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 16 17 activity_ptr:1438 80 48 19 chosen_map_set:1450";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onHideAndSeekChooseMapReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61937;
  v5[536862722] = 62194;
  v5[536862724] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<HideAndSeekActivity>((PlayerActivityComp *const)(v3 + 48));
  if ( std::operator==<HideAndSeekActivity>(0LL, (const std::shared_ptr<HideAndSeekActivity> *)(v3 + 48)) )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onHideAndSeekChooseMapReq",
      1441);
    v6 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
           &v17,
           (const char (*)[31])"activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v17);
    v7 = 860;
  }
  else if ( proto::HideAndSeekChooseMapReq::map_list_size(req) )
  {
    std::set<unsigned int>::set((std::set<unsigned int> *const)(v3 + 80));
    v9 = proto::HideAndSeekChooseMapReq::map_list(req);
    common::tools::MiscUtils::setFromRepeated<std::set<unsigned int>,unsigned int>(
      (std::set<unsigned int> *)(v3 + 80),
      v9);
    v10 = std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
    ret = HideAndSeekActivity::updateUnselectedHideAndSeekMap(v10, (const std::set<unsigned int> *)(v3 + 80));
    if ( !ret )
    {
      v11 = proto::HideAndSeekChooseMapRsp::mutable_map_list(rsp_0);
      v12 = proto::HideAndSeekChooseMapReq::map_list(req);
      google::protobuf::RepeatedField<unsigned int>::CopyFrom(v11, v12);
    }
    v7 = ret;
    std::set<unsigned int>::~set((std::set<unsigned int> *const)(v3 + 80));
  }
  else
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onHideAndSeekChooseMapReq",
      1446);
    v8 = common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
           &v17,
           (const char (*)[27])"chosen map size = 0, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &val);
    common::milog::MiLogStream::~MiLogStream(&v17);
    v7 = 9162;
  }
  std::shared_ptr<HideAndSeekActivity>::~shared_ptr((std::shared_ptr<HideAndSeekActivity> *const)(v3 + 48));
  result = v7;
  if ( v18 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 1463: range 000000001376DCBE-000000001376E35C
int32_t __cdecl ActivityHandler::onHideAndSeekSetReadyReq(
        ActivityHandler *const this,
        const proto::HideAndSeekSetReadyReq *req,
        proto::HideAndSeekSetReadyRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  uint32_t OwnerUid; // r14d
  HideAndSeekActivity *v10; // r14
  uint32_t Uid; // eax
  uint32_t v12; // r14d
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  common::milog::MiLogStream *v14; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  Player *v16; // rax
  common::milog::MiLogStream *v17; // r14
  std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v18; // rax
  HideAndSeekActivity *v19; // r14
  uint32_t v20; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-F4h] BYREF
  common::milog::MiLogStream v23; // [rsp+30h] [rbp-F0h] BYREF
  char v24[208]; // [rsp+50h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v24;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 32 16 17 activity_ptr:1464 64 16 14 scene_ptr:1470 96 16 15 player_ptr:1482 128 16 23 owner_activity_ptr:1488";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onHideAndSeekSetReadyReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -219021312;
  v5[536862723] = -219021312;
  v5[536862724] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<HideAndSeekActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<HideAndSeekActivity>(0LL, (const std::shared_ptr<HideAndSeekActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v23,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onHideAndSeekSetReadyReq",
      1467);
    v6 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
           &v23,
           (const char (*)[31])"activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v23);
    v7 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
    if ( std::operator==<Scene>((const std::shared_ptr<Scene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v23,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onHideAndSeekSetReadyReq",
        1473);
      common::milog::MiLogStream::operator<<<char [23],(char *[23])0>(
        &v23,
        (const char (*)[23])" cur_scene_ptr is null");
      common::milog::MiLogStream::~MiLogStream(&v23);
      v7 = -1;
    }
    else
    {
      v8 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      OwnerUid = Scene::getOwnerUid(v8);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( OwnerUid == Player::getUid(this->player_) )
      {
        v10 = std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        Uid = Player::getUid(this->player_);
        v7 = HideAndSeekActivity::setHideAndSeekReady(v10, Uid);
      }
      else
      {
        v12 = (unsigned int)std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        v13 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        Scene::getOwnerUid(v13);
        Scene::findPlayer((const Scene *const)(v3 + 96), v12);
        if ( std::operator==<Player>((const std::shared_ptr<Player> *)(v3 + 96), 0LL) )
        {
          common::milog::MiLogStream::create(
            &v23,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onHideAndSeekSetReadyReq",
            1485);
          v14 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                  &v23,
                  (const char (*)[40])"findSceneOwnerPlayer failed, owner_uid:");
          v15 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
          val = Scene::getOwnerUid(v15);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &val);
          common::milog::MiLogStream::~MiLogStream(&v23);
          v7 = -1;
        }
        else
        {
          v16 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          Player::getActivityComp(v16);
          PlayerActivityComp::findOpenningActivity<HideAndSeekActivity>((PlayerActivityComp *const)(v3 + 128));
          if ( std::operator==<HideAndSeekActivity>(0LL, (const std::shared_ptr<HideAndSeekActivity> *)(v3 + 128)) )
          {
            common::milog::MiLogStream::create(
              &v23,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/handler/activity_handler.cpp",
              "onHideAndSeekSetReadyReq",
              1491);
            v17 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                    &v23,
                    (const char (*)[31])"activity is not opening, uid: ");
            v18 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
            val = Player::getUid(v18);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v17, &val);
            common::milog::MiLogStream::~MiLogStream(&v23);
            v7 = 860;
          }
          else
          {
            v19 = std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<HideAndSeekActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8();
            v20 = Player::getUid(this->player_);
            v7 = HideAndSeekActivity::setHideAndSeekReady(v19, v20);
          }
          std::shared_ptr<HideAndSeekActivity>::~shared_ptr((std::shared_ptr<HideAndSeekActivity> *const)(v3 + 128));
        }
        std::shared_ptr<Player>::~shared_ptr((std::shared_ptr<Player> *const)(v3 + 96));
      }
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
  }
  std::shared_ptr<HideAndSeekActivity>::~shared_ptr((std::shared_ptr<HideAndSeekActivity> *const)(v3 + 32));
  result = v7;
  if ( v24 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 1498: range 000000001376E35E-000000001376E5B0
int32_t __cdecl ActivityHandler::onChannellerSlabWearBuffReq(
        ActivityHandler *const this,
        const proto::ChannellerSlabWearBuffReq *req,
        proto::ChannellerSlabWearBuffRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  ChannellerSlabActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1499";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChannellerSlabWearBuffReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ChannellerSlabActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ChannellerSlabActivity>(0LL, (const std::shared_ptr<ChannellerSlabActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChannellerSlabWearBuffReq",
      1502);
    v6 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
           &v12,
           (const char (*)[49])"[CHANNELLER_SLAB] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ChannellerSlabActivity::wearBuff(v8, req, rsp_0);
  }
  std::shared_ptr<ChannellerSlabActivity>::~shared_ptr((std::shared_ptr<ChannellerSlabActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1510: range 000000001376E5B2-000000001376E804
int32_t __cdecl ActivityHandler::onChannellerSlabTakeoffBuffReq(
        ActivityHandler *const this,
        const proto::ChannellerSlabTakeoffBuffReq *req,
        proto::ChannellerSlabTakeoffBuffRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  ChannellerSlabActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1511";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChannellerSlabTakeoffBuffReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ChannellerSlabActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ChannellerSlabActivity>(0LL, (const std::shared_ptr<ChannellerSlabActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChannellerSlabTakeoffBuffReq",
      1514);
    v6 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
           &v12,
           (const char (*)[49])"[CHANNELLER_SLAB] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ChannellerSlabActivity::takeoffBuff(v8, req, rsp_0);
  }
  std::shared_ptr<ChannellerSlabActivity>::~shared_ptr((std::shared_ptr<ChannellerSlabActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1522: range 000000001376E806-000000001376EAE6
int32_t __cdecl ActivityHandler::onChannellerSlabCheckEnterLoopDungeonReq(
        ActivityHandler *const this,
        const proto::ChannellerSlabCheckEnterLoopDungeonReq *req,
        proto::ChannellerSlabCheckEnterLoopDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  int32_t v6; // r14d
  Player *v7; // rax
  PlayerActivityComp *ActivityComp; // rax
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-B0h] BYREF
  char v11[144]; // [rsp+40h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 14 world_ptr:1523 64 16 21 owner_player_ptr:1530";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChannellerSlabCheckEnterLoopDungeonReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurWorld<PlayerWorld>((const PlayerSceneComp *const)(v3 + 32));
  if ( std::operator==<PlayerWorld>(0LL, (const std::shared_ptr<PlayerWorld> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChannellerSlabCheckEnterLoopDungeonReq",
      1526);
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
      &v10,
      (const char (*)[35])"[CHANNELLER_SLAB] world is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = -1;
  }
  else
  {
    std::__shared_ptr_access<PlayerWorld,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlayerWorld,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    PlayerWorld::getOwnPlayer((const PlayerWorld *const)(v3 + 64));
    if ( std::operator==<Player>(0LL, (const std::shared_ptr<Player> *)(v3 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v10,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onChannellerSlabCheckEnterLoopDungeonReq",
        1533);
      common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
        &v10,
        (const char (*)[46])"[CHANNELLER_SLAB] owner_player_ptr is nullptr");
      common::milog::MiLogStream::~MiLogStream(&v10);
      v6 = -1;
    }
    else
    {
      v7 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      ActivityComp = Player::getActivityComp(v7);
      v6 = PlayerActivityComp::checkEnterChannellerSlabLoopDungeon(ActivityComp, 0);
    }
    std::shared_ptr<Player>::~shared_ptr((std::shared_ptr<Player> *const)(v3 + 64));
  }
  std::shared_ptr<PlayerWorld>::~shared_ptr((std::shared_ptr<PlayerWorld> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1541: range 000000001376EAE8-000000001376ED3A
int32_t __cdecl ActivityHandler::onChannellerSlabEnterLoopDungeonReq(
        ActivityHandler *const this,
        const proto::ChannellerSlabEnterLoopDungeonReq *req,
        proto::ChannellerSlabEnterLoopDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  ChannellerSlabActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1542";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChannellerSlabEnterLoopDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ChannellerSlabActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ChannellerSlabActivity>(0LL, (const std::shared_ptr<ChannellerSlabActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChannellerSlabEnterLoopDungeonReq",
      1545);
    v6 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
           &v12,
           (const char (*)[49])"[CHANNELLER_SLAB] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ChannellerSlabActivity::enterLoopDungeon(v8, req, rsp_0);
  }
  std::shared_ptr<ChannellerSlabActivity>::~shared_ptr((std::shared_ptr<ChannellerSlabActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1553: range 000000001376ED3C-000000001376EF8E
int32_t __cdecl ActivityHandler::onChannellerSlabLoopDungeonTakeFirstPassRewardReq(
        ActivityHandler *const this,
        const proto::ChannellerSlabLoopDungeonTakeFirstPassRewardReq *req,
        proto::ChannellerSlabLoopDungeonTakeFirstPassRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t PassReward; // r14d
  ChannellerSlabActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1554";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChannellerSlabLoopDungeonTakeFirstPassRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ChannellerSlabActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ChannellerSlabActivity>(0LL, (const std::shared_ptr<ChannellerSlabActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChannellerSlabLoopDungeonTakeFirstPassRewardReq",
      1557);
    v6 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
           &v12,
           (const char (*)[49])"[CHANNELLER_SLAB] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    PassReward = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    PassReward = ChannellerSlabActivity::takeLoopDungeonFirstPassReward(v8, req, rsp_0);
  }
  std::shared_ptr<ChannellerSlabActivity>::~shared_ptr((std::shared_ptr<ChannellerSlabActivity> *const)(v3 + 32));
  result = PassReward;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1565: range 000000001376EF90-000000001376F1E2
int32_t __cdecl ActivityHandler::onChannellerSlabLoopDungeonTakeScoreRewardReq(
        ActivityHandler *const this,
        const proto::ChannellerSlabLoopDungeonTakeScoreRewardReq *req,
        proto::ChannellerSlabLoopDungeonTakeScoreRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  ChannellerSlabActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1566";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChannellerSlabLoopDungeonTakeScoreRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ChannellerSlabActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ChannellerSlabActivity>(0LL, (const std::shared_ptr<ChannellerSlabActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChannellerSlabLoopDungeonTakeScoreRewardReq",
      1569);
    v6 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
           &v12,
           (const char (*)[49])"[CHANNELLER_SLAB] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ChannellerSlabActivity::takeLoopDungeonScoreReward(v8, req, rsp_0);
  }
  std::shared_ptr<ChannellerSlabActivity>::~shared_ptr((std::shared_ptr<ChannellerSlabActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1577: range 000000001376F1E4-000000001376F436
int32_t __cdecl ActivityHandler::onChannellerSlabLoopDungeonSelectConditionReq(
        ActivityHandler *const this,
        const proto::ChannellerSlabLoopDungeonSelectConditionReq *req,
        proto::ChannellerSlabLoopDungeonSelectConditionRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  ChannellerSlabActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1578";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChannellerSlabLoopDungeonSelectConditionReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ChannellerSlabActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ChannellerSlabActivity>(0LL, (const std::shared_ptr<ChannellerSlabActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChannellerSlabLoopDungeonSelectConditionReq",
      1581);
    v6 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
           &v12,
           (const char (*)[49])"[CHANNELLER_SLAB] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ChannellerSlabActivity::selectLoopDungeonCondition(v8, req, rsp_0);
  }
  std::shared_ptr<ChannellerSlabActivity>::~shared_ptr((std::shared_ptr<ChannellerSlabActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1589: range 000000001376F438-000000001376F68A
int32_t __cdecl ActivityHandler::onChannellerSlabSaveAssistInfoReq(
        ActivityHandler *const this,
        const proto::ChannellerSlabSaveAssistInfoReq *req,
        proto::ChannellerSlabSaveAssistInfoRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  ChannellerSlabActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1590";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChannellerSlabSaveAssistInfoReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ChannellerSlabActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ChannellerSlabActivity>(0LL, (const std::shared_ptr<ChannellerSlabActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChannellerSlabSaveAssistInfoReq",
      1593);
    v6 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
           &v12,
           (const char (*)[49])"[CHANNELLER_SLAB] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ChannellerSlabActivity::saveAssistInfo(v8, req, rsp_0);
  }
  std::shared_ptr<ChannellerSlabActivity>::~shared_ptr((std::shared_ptr<ChannellerSlabActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1601: range 000000001376F68C-000000001376F8C2
int32_t __cdecl ActivityHandler::onChannellerSlabOneOffDungeonInfoReq(
        ActivityHandler *const this,
        const proto::ChannellerSlabOneOffDungeonInfoReq *req,
        proto::ChannellerSlabOneOffDungeonInfoRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // rcx
  int32_t v7; // r14d
  ChannellerSlabActivity *v8; // rdx
  int32_t result; // eax
  common::milog::MiLogStream v11; // [rsp+20h] [rbp-90h] BYREF
  char v12[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1602";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChannellerSlabOneOffDungeonInfoReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ChannellerSlabActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ChannellerSlabActivity>(0LL, (const std::shared_ptr<ChannellerSlabActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v11,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChannellerSlabOneOffDungeonInfoReq",
      1605);
    v6 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
           &v11,
           (const char (*)[26])"activity is not opening. ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v6, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v11);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChannellerSlabActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ChannellerSlabActivity::onOneoffDungeonInfoReq(v8, rsp_0);
  }
  std::shared_ptr<ChannellerSlabActivity>::~shared_ptr((std::shared_ptr<ChannellerSlabActivity> *const)(v3 + 32));
  result = v7;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1614: range 000000001376F8C4-000000001376FAD7
int32_t __cdecl ActivityHandler::onMistTrialSelectAvatarAndEnterDungeonReq(
        ActivityHandler *const this,
        const proto::MistTrialSelectAvatarAndEnterDungeonReq *req,
        proto::MistTrialSelectAvatarAndEnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  google::protobuf::uint32 v6; // edx
  int32_t v7; // r14d
  MistTrialActivity *v8; // rdx
  int32_t result; // eax
  common::milog::MiLogStream v11; // [rsp+20h] [rbp-90h] BYREF
  char v12[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 28 mist_trial_activity_ptr:1616";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMistTrialSelectAvatarAndEnterDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::MistTrialSelectAvatarAndEnterDungeonReq::trial_id(req);
  proto::MistTrialSelectAvatarAndEnterDungeonRsp::set_trial_id(rsp_0, v6);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MistTrialActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MistTrialActivity>(0LL, (const std::shared_ptr<MistTrialActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v11,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onMistTrialSelectAvatarAndEnterDungeonReq",
      1619);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v11, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v11);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<MistTrialActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MistTrialActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = MistTrialActivity::onMistTrialSelectAvatarAndEnterDungeonReq(v8, req);
  }
  std::shared_ptr<MistTrialActivity>::~shared_ptr((std::shared_ptr<MistTrialActivity> *const)(v3 + 32));
  result = v7;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1626: range 000000001376FE02-0000000013770C09
int32_t __cdecl ActivityHandler::onMistTrialGetChallengeMissionReq(
        ActivityHandler *const this,
        const proto::MistTrialGetChallengeMissionReq *req,
        proto::MistTrialGetChallengeMissionRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  google::protobuf::uint32 v6; // eax
  int32_t v7; // r14d
  common::milog::MiLogStream *v8; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  uint32_t DungeonId; // ecx
  char v11; // al
  common::milog::MiLogStream *v12; // rax
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  common::milog::MiLogStream *v14; // rax
  __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int> >::reference v15; // rdx
  common::milog::MiLogStream *v16; // rax
  uint32_t WatcherComp; // ecx
  common::milog::MiLogStream *v18; // rax
  std::__shared_ptr_access<BaseWatcher,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  common::milog::MiLogStream *v20; // rax
  data::MistTrialClientSyncType dungeon_show_content_type; // eax
  std::__shared_ptr_access<BaseWatcher,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // rax
  uint32_t Progress; // eax
  const std::string *v24; // rax
  DungeonScene *v25; // r15
  uint32_t v26; // r14d
  uint32_t Uid; // eax
  const std::string *v28; // rax
  PlayerSceneComp *SceneComp; // r14
  int32_t result; // eax
  ActivityHandler::onMistTrialGetChallengeMissionReq::<lambda(Challenge&)> v31; // [rsp-20h] [rbp-1D0h]
  google::protobuf::uint32 param; // [rsp+24h] [rbp-18Ch]
  std::vector<unsigned int>::const_iterator __for_begin; // [rsp+28h] [rbp-188h] BYREF
  std::vector<unsigned int>::const_iterator __for_end; // [rsp+30h] [rbp-180h] BYREF
  const ActivityMistTrialExcelConfigMgr *config_mgr; // [rsp+38h] [rbp-178h]
  const data::ActivityMistTrialLevelDataExcelConfig *level_config_ptr; // [rsp+40h] [rbp-170h]
  const std::vector<unsigned int> *__for_range; // [rsp+48h] [rbp-168h]
  const data::ActivityMistTrialWatcherListDataExcelConfig *watcher_list_config_ptr; // [rsp+50h] [rbp-160h]
  proto::MistTrialMissionInfo *mission_info; // [rsp+58h] [rbp-158h]
  ActivityHandler::onMistTrialGetChallengeMissionReq::<lambda(Challenge&)> __f; // [rsp+60h] [rbp-150h]
  common::milog::MiLogStream v42; // [rsp+80h] [rbp-130h] BYREF
  char v43[272]; // [rsp+A0h] [rbp-110h] BYREF

  v3 = (unsigned __int64)v43;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(224LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "8 48 1 20 check_left_time:1714 64 4 13 trial_id:1635 80 4 20 watcher_list_id:1654 96 4 20 challe"
                        "nge_index:1707 112 4 10 param:1713 128 16 28 mist_trial_activity_ptr:1628 160 16 26 cur_dungeon_"
                        "scene_ptr:1643 192 16 16 watcher_ptr:1662";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMistTrialGetChallengeMissionReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234753551;
  v5[536862722] = -234556924;
  v5[536862723] = -234556924;
  v5[536862724] = -219021312;
  v5[536862725] = -219021312;
  v5[536862726] = -202178560;
  v6 = proto::MistTrialGetChallengeMissionReq::trial_id(req);
  proto::MistTrialGetChallengeMissionRsp::set_trial_id(rsp_0, v6);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MistTrialActivity>((PlayerActivityComp *const)(v3 + 128));
  if ( std::operator==<MistTrialActivity>(0LL, (const std::shared_ptr<MistTrialActivity> *)(v3 + 128)) )
  {
    common::milog::MiLogStream::create(
      &v42,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onMistTrialGetChallengeMissionReq",
      1631);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v42, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v42);
    v7 = 860;
  }
  else
  {
    *(_DWORD *)(v3 + 64) = proto::MistTrialGetChallengeMissionReq::trial_id(req);
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v3 + 192));
    config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 192))->design_config.txt_config_mgr.activity_mist_trial_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 192));
    level_config_ptr = data::ActivityMistTrialExcelConfigMgrBase::findActivityMistTrialLevelDataExcelConfig(
                         config_mgr,
                         *(_DWORD *)(v3 + 64));
    if ( level_config_ptr )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::getDungeonComp(this->player_);
      PlayerDungeonComp::getCurDungeon((PlayerDungeonComp *const)(v3 + 160));
      if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v3 + 160), 0LL) )
        goto LABEL_16;
      v9 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
      DungeonId = DungeonScene::getDungeonId(v9);
      if ( *(_BYTE *)(((unsigned __int64)&level_config_ptr->dungeon_id >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&level_config_ptr->dungeon_id >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4();
      }
      if ( DungeonId == level_config_ptr->dungeon_id )
        v11 = 0;
      else
LABEL_16:
        v11 = 1;
      if ( v11 )
      {
        common::milog::MiLogStream::create(
          &v42,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onMistTrialGetChallengeMissionReq",
          1646);
        v12 = common::milog::MiLogStream::operator<<<char [78],(char *[78])0>(
                &v42,
                (const char (*)[78])"[MIST_TRIAL] player not in dungeon or dungeon is not trial dungeon, trial_id:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, (const unsigned int *)(v3 + 64));
        common::milog::MiLogStream::~MiLogStream(&v42);
        v7 = -1;
      }
      else
      {
        v13 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
        if ( DungeonScene::getDungeonResult(v13) )
        {
          common::milog::MiLogStream::create(
            &v42,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onMistTrialGetChallengeMissionReq",
            1651);
          v14 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
                  &v42,
                  (const char (*)[44])"[MIST_TRIAL] dungeon has settled, trial_id:");
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, (const unsigned int *)(v3 + 64));
          common::milog::MiLogStream::~MiLogStream(&v42);
          v7 = -1;
        }
        else
        {
          __for_range = &level_config_ptr->challenge_mission_watcher_list;
          __for_begin._M_current = std::vector<unsigned int>::begin(&level_config_ptr->challenge_mission_watcher_list)._M_current;
          __for_end._M_current = std::vector<unsigned int>::end(&level_config_ptr->challenge_mission_watcher_list)._M_current;
          while ( __gnu_cxx::operator!=<unsigned int const*,std::vector<unsigned int>>(&__for_begin, &__for_end) )
          {
            v15 = __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator*(&__for_begin);
            if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v15 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4();
            }
            *(_DWORD *)(v3 + 80) = *v15;
            watcher_list_config_ptr = data::ActivityMistTrialExcelConfigMgrBase::findActivityMistTrialWatcherListDataExcelConfig(
                                        config_mgr,
                                        *(_DWORD *)(v3 + 80));
            if ( watcher_list_config_ptr )
            {
              if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                __asan_report_load8();
              WatcherComp = (unsigned int)Player::getWatcherComp(this->player_);
              if ( *(_BYTE *)(((unsigned __int64)&watcher_list_config_ptr->challenge_watcher_id >> 3) + 0x7FFF8000) != 0
                && *(_BYTE *)(((unsigned __int64)&watcher_list_config_ptr->challenge_watcher_id >> 3) + 0x7FFF8000) <= 3 )
              {
                __asan_report_load4();
              }
              PlayerWatcherComp::findWatcher((PlayerWatcherComp *const)(v3 + 192), WatcherComp);
              if ( std::operator==<BaseWatcher>(0LL, (const std::shared_ptr<BaseWatcher> *)(v3 + 192)) )
              {
                common::milog::MiLogStream::create(
                  &v42,
                  &common::milog::MiLogDefault::default_log_obj_,
                  1u,
                  "./src/handler/activity_handler.cpp",
                  "onMistTrialGetChallengeMissionReq",
                  1665);
                v18 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                        &v42,
                        (const char (*)[46])"[MIST_TRIAL] watcher_ptr is null, watcher_id:");
                common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  v18,
                  &watcher_list_config_ptr->challenge_watcher_id);
                common::milog::MiLogStream::~MiLogStream(&v42);
              }
              else
              {
                v19 = std::__shared_ptr_access<BaseWatcher,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseWatcher,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 192));
                if ( BaseWatcher::isFinished(v19) )
                {
                  common::milog::MiLogStream::create(
                    &v42,
                    &common::milog::MiLogDefault::default_log_obj_,
                    1u,
                    "./src/handler/activity_handler.cpp",
                    "onMistTrialGetChallengeMissionReq",
                    1670);
                  v20 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                          &v42,
                          (const char (*)[46])"[MIST_TRIAL] watcher is finished, watcher_id:");
                  common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v20,
                    &watcher_list_config_ptr->challenge_watcher_id);
                  common::milog::MiLogStream::~MiLogStream(&v42);
                }
                else
                {
                  mission_info = proto::MistTrialGetChallengeMissionRsp::add_mission_info_list(rsp_0);
                  if ( *(_BYTE *)(((unsigned __int64)&watcher_list_config_ptr->dungeon_show_content_type >> 3)
                                + 0x7FFF8000) != 0
                    && (char)((((_BYTE)watcher_list_config_ptr + 20) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&watcher_list_config_ptr->dungeon_show_content_type >> 3)
                                                                                           + 0x7FFF8000) )
                  {
                    __asan_report_load4();
                  }
                  dungeon_show_content_type = watcher_list_config_ptr->dungeon_show_content_type;
                  if ( dungeon_show_content_type == MIST_TRIAL_SYNC_CHALLENGE_LEFT_TIME )
                  {
                    if ( std::vector<std::string>::size(&watcher_list_config_ptr->show_param) )
                    {
                      *(_DWORD *)(v3 + 96) = 0;
                      v28 = std::vector<std::string>::operator[](&watcher_list_config_ptr->show_param, 0LL);
                      if ( common::tools::StringUtils::strToNum<unsigned int>(v28, (unsigned int *)(v3 + 96), 1) )
                      {
                        common::milog::MiLogStream::create(
                          &v42,
                          &common::milog::MiLogDefault::default_log_obj_,
                          3u,
                          "./src/handler/activity_handler.cpp",
                          "onMistTrialGetChallengeMissionReq",
                          1710);
                        common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                          &v42,
                          (const char (*)[29])"[MIST_TRIAL] strToNum failed");
                        common::milog::MiLogStream::~MiLogStream(&v42);
                      }
                      else
                      {
                        *(_DWORD *)(v3 + 112) = 0;
                        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                          __asan_report_load8();
                        SceneComp = Player::getSceneComp(this->player_);
                        __f.__param = (uint32_t *)(v3 + 112);
                        __f.__challenge_index = *(_DWORD *)(v3 + 96);
                        __f.__check_left_time = (ActivityHandler::onMistTrialGetChallengeMissionReq::<lambda(Challenge&, uint32_t&)> *)(v3 + 48);
                        v31.__check_left_time = (ActivityHandler::onMistTrialGetChallengeMissionReq::<lambda(Challenge&, uint32_t&)> *)(v3 + 48);
                        *(_QWORD *)&v31.__challenge_index = *(_QWORD *)&__f.__challenge_index;
                        v31.__param = (uint32_t *)(v3 + 112);
                        std::function<ForeachPolicy ()(Challenge &)>::function<ActivityHandler::onMistTrialGetChallengeMissionReq(proto::MistTrialGetChallengeMissionReq const&,proto::MistTrialGetChallengeMissionRsp &)::{lambda(Challenge &)#2},void,void>(
                          (std::function<ForeachPolicy(Challenge&)> *const)&v42,
                          v31);
                        PlayerSceneComp::foreachChallenge(SceneComp, (std::function<ForeachPolicy(Challenge&)> *)&v42);
                        std::function<ForeachPolicy ()(Challenge &)>::~function((std::function<ForeachPolicy(Challenge&)> *const)&v42);
                        proto::MistTrialMissionInfo::set_watcher_list_id(mission_info, *(_DWORD *)(v3 + 80));
                        proto::MistTrialMissionInfo::set_param(mission_info, *(_DWORD *)(v3 + 112));
                      }
                    }
                    else
                    {
                      common::milog::MiLogStream::create(
                        &v42,
                        &common::milog::MiLogDefault::default_log_obj_,
                        3u,
                        "./src/handler/activity_handler.cpp",
                        "onMistTrialGetChallengeMissionReq",
                        1704);
                      common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                        &v42,
                        (const char (*)[41])"[MIST_TRIAL] show_param size less than 1");
                      common::milog::MiLogStream::~MiLogStream(&v42);
                    }
                  }
                  else if ( dungeon_show_content_type <= MIST_TRIAL_SYNC_CHALLENGE_LEFT_TIME )
                  {
                    if ( dungeon_show_content_type == MIST_TRIAL_SYNC_PROGRESS )
                    {
                      proto::MistTrialMissionInfo::set_watcher_list_id(mission_info, *(_DWORD *)(v3 + 80));
                      v22 = std::__shared_ptr_access<BaseWatcher,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseWatcher,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 192));
                      Progress = BaseWatcher::getProgress(v22);
                      proto::MistTrialMissionInfo::set_param(mission_info, Progress);
                    }
                    else if ( dungeon_show_content_type == MIST_TRIAL_SYNC_STAT_VALUE )
                    {
                      if ( std::vector<std::string>::size(&watcher_list_config_ptr->show_param) )
                      {
                        *(_DWORD *)(v3 + 112) = 0;
                        v24 = std::vector<std::string>::operator[](&watcher_list_config_ptr->show_param, 0LL);
                        if ( common::tools::StringUtils::strToNum<unsigned int>(v24, (unsigned int *)(v3 + 112), 1) )
                        {
                          common::milog::MiLogStream::create(
                            &v42,
                            &common::milog::MiLogDefault::default_log_obj_,
                            3u,
                            "./src/handler/activity_handler.cpp",
                            "onMistTrialGetChallengeMissionReq",
                            1692);
                          common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
                            &v42,
                            (const char (*)[29])"[MIST_TRIAL] strToNum failed");
                          common::milog::MiLogStream::~MiLogStream(&v42);
                        }
                        else
                        {
                          v25 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
                          v26 = *(_DWORD *)(v3 + 112);
                          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
                            __asan_report_load8();
                          Uid = Player::getUid(this->player_);
                          param = DungeonScene::getMistTrialStatValue(v25, Uid, v26);
                          proto::MistTrialMissionInfo::set_watcher_list_id(mission_info, *(_DWORD *)(v3 + 80));
                          proto::MistTrialMissionInfo::set_param(mission_info, param);
                        }
                      }
                      else
                      {
                        common::milog::MiLogStream::create(
                          &v42,
                          &common::milog::MiLogDefault::default_log_obj_,
                          3u,
                          "./src/handler/activity_handler.cpp",
                          "onMistTrialGetChallengeMissionReq",
                          1686);
                        common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
                          &v42,
                          (const char (*)[41])"[MIST_TRIAL] show_param size less than 1");
                        common::milog::MiLogStream::~MiLogStream(&v42);
                      }
                    }
                  }
                }
              }
              std::shared_ptr<BaseWatcher>::~shared_ptr((std::shared_ptr<BaseWatcher> *const)(v3 + 192));
            }
            else
            {
              common::milog::MiLogStream::create(
                &v42,
                &common::milog::MiLogDefault::default_log_obj_,
                3u,
                "./src/handler/activity_handler.cpp",
                "onMistTrialGetChallengeMissionReq",
                1659);
              v16 = common::milog::MiLogStream::operator<<<char [63],(char *[63])0>(
                      &v42,
                      (const char (*)[63])"[MIST_TRIAL] watcher_list_config_ptr is null, watcher_list_id:");
              common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v16,
                (const unsigned int *)(v3 + 80));
              common::milog::MiLogStream::~MiLogStream(&v42);
            }
            __gnu_cxx::__normal_iterator<unsigned int const*,std::vector<unsigned int>>::operator++(&__for_begin);
          }
          v7 = 0;
        }
      }
      std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 160));
    }
    else
    {
      common::milog::MiLogStream::create(
        &v42,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onMistTrialGetChallengeMissionReq",
        1640);
      v8 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
             &v42,
             (const char (*)[49])"[MIST_TRIAL] level_config_ptr is null, trial_id:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, (const unsigned int *)(v3 + 64));
      common::milog::MiLogStream::~MiLogStream(&v42);
      v7 = -1;
    }
  }
  std::shared_ptr<MistTrialActivity>::~shared_ptr((std::shared_ptr<MistTrialActivity> *const)(v3 + 128));
  result = v7;
  if ( v43 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 1714: range 000000001376FAD8-000000001376FBDE
bool __cdecl ActivityHandler::onMistTrialGetChallengeMissionReq(proto::MistTrialGetChallengeMissionReq const&,proto::MistTrialGetChallengeMissionRsp &)::{lambda(Challenge &,unsigned int &)#1}::operator()(
        const ActivityHandler::onMistTrialGetChallengeMissionReq::<lambda(Challenge&, uint32_t&)> *const __closure,
        Challenge *challenge,
        uint32_t *left_time)
{
  unsigned __int64 v3; // rax
  unsigned __int64 v4; // rdx
  std::vector<std::shared_ptr<ChallengeCondition>>::iterator __for_begin; // [rsp+20h] [rbp-20h] BYREF
  std::vector<std::shared_ptr<ChallengeCondition>>::iterator __for_end; // [rsp+28h] [rbp-18h] BYREF
  std::vector<std::shared_ptr<ChallengeCondition>> *__for_range; // [rsp+30h] [rbp-10h]
  const ChallengeConditionPtr *challenge_condition_ptr; // [rsp+38h] [rbp-8h]

  __for_range = &challenge->condition_vec;
  __for_begin._M_current = std::vector<std::shared_ptr<ChallengeCondition>>::begin(&challenge->condition_vec)._M_current;
  __for_end._M_current = std::vector<std::shared_ptr<ChallengeCondition>>::end(&challenge->condition_vec)._M_current;
  while ( __gnu_cxx::operator!=<std::shared_ptr<ChallengeCondition> *,std::vector<std::shared_ptr<ChallengeCondition>>>(
            &__for_begin,
            &__for_end) )
  {
    challenge_condition_ptr = __gnu_cxx::__normal_iterator<std::shared_ptr<ChallengeCondition> *,std::vector<std::shared_ptr<ChallengeCondition>>>::operator*(&__for_begin);
    if ( !std::operator==<ChallengeCondition>(0LL, challenge_condition_ptr) )
    {
      v3 = (unsigned __int64)std::__shared_ptr_access<ChallengeCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChallengeCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)challenge_condition_ptr);
      if ( *(_BYTE *)((v3 >> 3) + 0x7FFF8000) )
        v3 = __asan_report_load8();
      v4 = *(_QWORD *)v3 + 64LL;
      if ( *(_BYTE *)((v4 >> 3) + 0x7FFF8000) )
        v3 = __asan_report_load8();
      if ( (*(unsigned __int8 (__fastcall **)(unsigned __int64, uint32_t *))v4)(v3, left_time) )
        return 1;
    }
    __gnu_cxx::__normal_iterator<std::shared_ptr<ChallengeCondition> *,std::vector<std::shared_ptr<ChallengeCondition>>>::operator++(&__for_begin);
  }
  return 0;
};

// Line 1729: range 000000001376FBE0-000000001376FE00
ForeachPolicy __cdecl ActivityHandler::onMistTrialGetChallengeMissionReq(proto::MistTrialGetChallengeMissionReq const&,proto::MistTrialGetChallengeMissionRsp &)::{lambda(Challenge &)#2}::operator()(
        const ActivityHandler::onMistTrialGetChallengeMissionReq::<lambda(Challenge&)> *const __closure,
        Challenge *challenge)
{
  uint32_t challenge_index; // ecx
  const ActivityHandler::onMistTrialGetChallengeMissionReq::<lambda(Challenge&, uint32_t&)> *check_left_time; // rax
  uint32_t *param; // rdx
  common::milog::MiLogStream *v6; // rcx
  common::milog::MiLogStream v7; // [rsp+10h] [rbp-30h] BYREF

  if ( *(_BYTE *)(((unsigned __int64)&challenge->challenge_index >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)challenge + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&challenge->challenge_index >> 3)
                                                             + 0x7FFF8000) )
  {
    __asan_report_load4();
  }
  challenge_index = challenge->challenge_index;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__challenge_index >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&__closure->__challenge_index >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4();
  }
  if ( challenge_index != __closure->__challenge_index )
    return 0;
  if ( *(_BYTE *)(((unsigned __int64)&__closure->__check_left_time >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  check_left_time = __closure->__check_left_time;
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    check_left_time = (const ActivityHandler::onMistTrialGetChallengeMissionReq::<lambda(Challenge&, uint32_t&)> *)__asan_report_load8();
  if ( !ActivityHandler::onMistTrialGetChallengeMissionReq(proto::MistTrialGetChallengeMissionReq const&,proto::MistTrialGetChallengeMissionRsp &)::{lambda(Challenge &,unsigned int &)#1}::operator()(
          check_left_time,
          challenge,
          __closure->__param) )
  {
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    param = __closure->__param;
    if ( *(_BYTE *)(((unsigned __int64)__closure->__param >> 3) + 0x7FFF8000) != 0
      && (char)(((__int64)__closure->__param & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__closure->__param >> 3)
                                                                   + 0x7FFF8000) )
    {
      __asan_report_store4(__closure->__param);
    }
    *param = 0;
    return 1;
  }
  else
  {
    common::milog::MiLogStream::create(
      &v7,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "operator()",
      1742);
    v6 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
           &v7,
           (const char (*)[46])"[MIST_TRIAL] check_left_time true, left_time:");
    if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, __closure->__param);
    common::milog::MiLogStream::~MiLogStream(&v7);
    return 1;
  }
};

// Line 1759: range 0000000013770C0A-0000000013770EC0
int32_t __cdecl ActivityHandler::onStartBuoyantCombatGalleryReq(
        ActivityHandler *const this,
        const proto::StartBuoyantCombatGalleryReq *req,
        proto::StartBuoyantCombatGalleryRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t started; // r14d
  google::protobuf::uint32 v8; // edx
  google::protobuf::uint32 v9; // edx
  BuoyantCombatActivity *v10; // r14
  uint32_t v11; // r15d
  uint32_t v12; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v16; // [rsp+30h] [rbp-90h] BYREF
  char v17[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1760";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onStartBuoyantCombatGalleryReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BuoyantCombatActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BuoyantCombatActivity>(0LL, (const std::shared_ptr<BuoyantCombatActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v16,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onStartBuoyantCombatGalleryReq",
      1763);
    v6 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
           &v16,
           (const char (*)[48])"[BUOYANT_COMBAT] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v16);
    started = 860;
  }
  else
  {
    v8 = proto::StartBuoyantCombatGalleryReq::gallery_id(req);
    proto::StartBuoyantCombatGalleryRsp::set_gallery_id(rsp_0, v8);
    v9 = proto::StartBuoyantCombatGalleryReq::gallery_level(req);
    proto::StartBuoyantCombatGalleryRsp::set_gallery_level(rsp_0, v9);
    v10 = std::__shared_ptr_access<BuoyantCombatActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BuoyantCombatActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::StartBuoyantCombatGalleryReq::gallery_level(req);
    v12 = proto::StartBuoyantCombatGalleryReq::gallery_id(req);
    started = BuoyantCombatActivity::startBuoyantCombatGallery(v10, v12, v11);
  }
  std::shared_ptr<BuoyantCombatActivity>::~shared_ptr((std::shared_ptr<BuoyantCombatActivity> *const)(v3 + 32));
  result = started;
  if ( v17 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1772: range 0000000013770EC2-0000000013771143
int32_t __cdecl ActivityHandler::onSummerTimeSprintBoatRestartReq(
        ActivityHandler *const this,
        const proto::SummerTimeSprintBoatRestartReq *req,
        proto::SummerTimeSprintBoatRestartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  common::milog::MiLogStream *v8; // rcx
  int32_t v9; // r14d
  SummerTimeActivity *v10; // r14
  uint32_t v11; // eax
  int32_t result; // eax
  common::milog::MiLogStream v14; // [rsp+20h] [rbp-90h] BYREF
  char v15[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1775";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSummerTimeSprintBoatRestartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::SummerTimeSprintBoatRestartReq::schedule_id(req);
  proto::SummerTimeSprintBoatRestartRsp::set_schedule_id(rsp_0, v6);
  v7 = proto::SummerTimeSprintBoatRestartReq::group_id(req);
  proto::SummerTimeSprintBoatRestartRsp::set_group_id(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SummerTimeActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SummerTimeActivity>(0LL, (const std::shared_ptr<SummerTimeActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onSummerTimeSprintBoatRestartReq",
      1778);
    v8 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
           &v14,
           (const char (*)[44])"[SUMMER TIME] activity_ptr is null, player:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v8, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v14);
    v9 = 860;
  }
  else
  {
    v10 = std::__shared_ptr_access<SummerTimeActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SummerTimeActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::SummerTimeSprintBoatRestartReq::group_id(req);
    v9 = SummerTimeActivity::restartByGroupId(v10, v11);
  }
  std::shared_ptr<SummerTimeActivity>::~shared_ptr((std::shared_ptr<SummerTimeActivity> *const)(v3 + 32));
  result = v9;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1785: range 0000000013771144-00000000137713B8
int32_t __cdecl ActivityHandler::onEchoShellTakeRewardReq(
        ActivityHandler *const this,
        const proto::EchoShellTakeRewardReq *req,
        proto::EchoShellTakeRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  google::protobuf::uint32 v8; // edx
  EchoShellActivity *v9; // r14
  uint32_t v10; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v14; // [rsp+30h] [rbp-90h] BYREF
  char v15[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1786";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEchoShellTakeRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<EchoShellActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<EchoShellActivity>(0LL, (const std::shared_ptr<EchoShellActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onEchoShellTakeRewardReq",
      1789);
    v6 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           &v14,
           (const char (*)[43])"[EchoShell] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v14);
    v7 = 860;
  }
  else
  {
    v8 = proto::EchoShellTakeRewardReq::reward_id(req);
    proto::EchoShellTakeRewardRsp::set_reward_id(rsp_0, v8);
    v9 = std::__shared_ptr_access<EchoShellActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<EchoShellActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::EchoShellTakeRewardReq::reward_id(req);
    v7 = EchoShellActivity::takeReward(v9, v10);
  }
  std::shared_ptr<EchoShellActivity>::~shared_ptr((std::shared_ptr<EchoShellActivity> *const)(v3 + 32));
  result = v7;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1797: range 00000000137713BA-000000001377160C
int32_t __cdecl ActivityHandler::onEnterChessDungeonReq(
        ActivityHandler *const this,
        const proto::EnterChessDungeonReq *req,
        proto::EnterChessDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r14
  int32_t v7; // r14d
  ChessActivity *v8; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1798";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEnterChessDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ChessActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<ChessActivity>(0LL, (const std::shared_ptr<ChessActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onEnterChessDungeonReq",
      1801);
    v6 = common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
           &v12,
           (const char (*)[39])"[CHESS] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<ChessActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChessActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v7 = ChessActivity::enterChessDungeon(v8, req, rsp_0);
  }
  std::shared_ptr<ChessActivity>::~shared_ptr((std::shared_ptr<ChessActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1809: range 000000001377160E-0000000013771A4A
int32_t __cdecl ActivityHandler::onChessPickCardReq(
        ActivityHandler *const this,
        const proto::ChessPickCardReq *req,
        proto::ChessPickCardRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  common::milog::MiLogStream *v8; // r14
  int32_t v9; // r14d
  Scene *v10; // rax
  common::milog::MiLogStream *v11; // r14
  ChessMultistagePlay *v12; // r14
  uint32_t v13; // r15d
  uint32_t v14; // esi
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-B4h] BYREF
  common::milog::MiLogStream v18; // [rsp+30h] [rbp-B0h] BYREF
  char v19[144]; // [rsp+50h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v19;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 14 scene_ptr:1812 64 16 13 play_ptr:1819";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChessPickCardReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  v6 = proto::ChessPickCardReq::card_id(req);
  proto::ChessPickCardRsp::set_card_id(rsp_0, v6);
  v7 = proto::ChessPickCardReq::card_index(req);
  proto::ChessPickCardRsp::set_card_index(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 32));
  if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v18,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChessPickCardReq",
      1815);
    v8 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
           &v18,
           (const char (*)[25])"getCurScene failed, uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &val);
    common::milog::MiLogStream::~MiLogStream(&v18);
    v9 = -1;
  }
  else
  {
    v10 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    Scene::getMultistagePlayComp(v10);
    SceneMultistagePlayComp::findPlay<ChessMultistagePlay>((const SceneMultistagePlayComp *const)(v3 + 64));
    if ( std::operator==<ChessMultistagePlay>(0LL, (const std::shared_ptr<ChessMultistagePlay> *)(v3 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v18,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onChessPickCardReq",
        1822);
      v11 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
              &v18,
              (const char (*)[44])"findPlay<ChessMultistagePlay> failed, uid: ");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
      common::milog::MiLogStream::~MiLogStream(&v18);
      v9 = -1;
    }
    else
    {
      v12 = std::__shared_ptr_access<ChessMultistagePlay,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChessMultistagePlay,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      v13 = proto::ChessPickCardReq::card_index(req);
      v14 = proto::ChessPickCardReq::card_id(req);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      v9 = ChessMultistagePlay::pickCard(v12, this->player_, v14, v13);
    }
    std::shared_ptr<ChessMultistagePlay>::~shared_ptr((std::shared_ptr<ChessMultistagePlay> *const)(v3 + 64));
  }
  std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 32));
  result = v9;
  if ( v19 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1830: range 0000000013771A4C-0000000013771E14
int32_t __cdecl ActivityHandler::onChessManualRefreshCardsReq(
        ActivityHandler *const this,
        const proto::ChessManualRefreshCardsReq *req,
        proto::ChessManualRefreshCardsRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r14
  int32_t refreshed; // r14d
  Scene *v8; // rax
  common::milog::MiLogStream *v9; // r14
  ChessMultistagePlay *v10; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-B4h] BYREF
  common::milog::MiLogStream v13; // [rsp+30h] [rbp-B0h] BYREF
  char v14[144]; // [rsp+50h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 14 scene_ptr:1831 64 16 13 play_ptr:1838";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onChessManualRefreshCardsReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getSceneComp(this->player_);
  PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 32));
  if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v13,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onChessManualRefreshCardsReq",
      1834);
    v6 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
           &v13,
           (const char (*)[25])"getCurScene failed, uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v6, &val);
    common::milog::MiLogStream::~MiLogStream(&v13);
    refreshed = -1;
  }
  else
  {
    v8 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    Scene::getMultistagePlayComp(v8);
    SceneMultistagePlayComp::findPlay<ChessMultistagePlay>((const SceneMultistagePlayComp *const)(v3 + 64));
    if ( std::operator==<ChessMultistagePlay>(0LL, (const std::shared_ptr<ChessMultistagePlay> *)(v3 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v13,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onChessManualRefreshCardsReq",
        1841);
      v9 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
             &v13,
             (const char (*)[44])"findPlay<ChessMultistagePlay> failed, uid: ");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
      common::milog::MiLogStream::~MiLogStream(&v13);
      refreshed = -1;
    }
    else
    {
      v10 = std::__shared_ptr_access<ChessMultistagePlay,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ChessMultistagePlay,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      refreshed = ChessMultistagePlay::manualRefreshCards(v10, this->player_);
    }
    std::shared_ptr<ChessMultistagePlay>::~shared_ptr((std::shared_ptr<ChessMultistagePlay> *const)(v3 + 64));
  }
  std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 32));
  result = refreshed;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1849: range 0000000013771E16-0000000013772097
int32_t __cdecl ActivityHandler::onBlitzRushParkourRestartReq(
        ActivityHandler *const this,
        const proto::BlitzRushParkourRestartReq *req,
        proto::BlitzRushParkourRestartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  common::milog::MiLogStream *v8; // rcx
  int32_t restarted; // r14d
  std::__shared_ptr_access<BlitzRushActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // r14
  uint32_t v11; // eax
  int32_t result; // eax
  common::milog::MiLogStream v14; // [rsp+20h] [rbp-90h] BYREF
  char v15[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:1852";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBlitzRushParkourRestartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::BlitzRushParkourRestartReq::schedule_id(req);
  proto::BlitzRushParkourRestartRsp::set_schedule_id(rsp_0, v6);
  v7 = proto::BlitzRushParkourRestartReq::group_id(req);
  proto::BlitzRushParkourRestartRsp::set_group_id(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BlitzRushActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BlitzRushActivity>(0LL, (const std::shared_ptr<BlitzRushActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onBlitzRushParkourRestartReq",
      1855);
    v8 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           &v14,
           (const char (*)[43])"[BLITZ_RUSH] activity_ptr is null, player:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v8, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v14);
    restarted = 860;
  }
  else
  {
    v10 = std::__shared_ptr_access<BlitzRushActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BlitzRushActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::BlitzRushParkourRestartReq::group_id(req);
    restarted = BlitzRushActivity::restartParkourByGroupId(v10, v11);
  }
  std::shared_ptr<BlitzRushActivity>::~shared_ptr((std::shared_ptr<BlitzRushActivity> *const)(v3 + 32));
  result = restarted;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1862: range 0000000013772098-000000001377244F
int32_t __cdecl ActivityHandler::onSumoSaveTeamReq(
        ActivityHandler *const this,
        const proto::SumoSaveTeamReq *req,
        proto::SumoSaveTeamRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v9; // r14
  int32_t v10; // r14d
  SumoActivity *v11; // r14
  uint32_t v12; // r15d
  uint32_t v13; // eax
  SumoActivity *v14; // r14
  uint32_t v15; // r15d
  uint32_t v16; // eax
  int32_t result; // eax
  google::protobuf::RepeatedPtrField<proto::SumoTeamData> *sumo_team_data; // [rsp+10h] [rbp-C0h]
  google::protobuf::RepeatedPtrField<proto::SumoTeamData> *sumo_team_dataa; // [rsp+10h] [rbp-C0h]
  unsigned int val; // [rsp+38h] [rbp-98h] BYREF
  int32_t ret; // [rsp+3Ch] [rbp-94h]
  common::milog::MiLogStream v22; // [rsp+40h] [rbp-90h] BYREF
  char v23[112]; // [rsp+60h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 22 sumo_activity_ptr:1863";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSumoSaveTeamReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::SumoSaveTeamReq::activity_id(req);
  PlayerActivityComp::findActivity<SumoActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<SumoActivity>((const std::shared_ptr<SumoActivity> *)(v3 + 32), 0LL)
    || (v7 = std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    common::milog::MiLogStream::create(
      &v22,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSumoSaveTeamReq",
      1866);
    v9 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
           &v22,
           (const char (*)[38])"[SUMO] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
    common::milog::MiLogStream::~MiLogStream(&v22);
    v10 = 860;
  }
  else
  {
    v11 = std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    sumo_team_data = (google::protobuf::RepeatedPtrField<proto::SumoTeamData> *)proto::SumoSaveTeamReq::team_list(req);
    v12 = proto::SumoSaveTeamReq::difficulty_id(req);
    v13 = proto::SumoSaveTeamReq::stage_id(req);
    ret = SumoActivity::verifyClientTeamInfo(v11, v13, v12, sumo_team_data);
    if ( ret )
    {
      common::milog::MiLogStream::create(
        &v22,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onSumoSaveTeamReq",
        1872);
      common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
        &v22,
        (const char (*)[35])"[SUMO] verifyClientTeamInfo failed");
      common::milog::MiLogStream::~MiLogStream(&v22);
    }
    else
    {
      v14 = std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      sumo_team_dataa = (google::protobuf::RepeatedPtrField<proto::SumoTeamData> *)proto::SumoSaveTeamReq::team_list(req);
      v15 = proto::SumoSaveTeamReq::difficulty_id(req);
      v16 = proto::SumoSaveTeamReq::stage_id(req);
      ret = SumoActivity::saveStageTeam(v14, v16, v15, sumo_team_dataa);
    }
    v10 = ret;
  }
  std::shared_ptr<SumoActivity>::~shared_ptr((std::shared_ptr<SumoActivity> *const)(v3 + 32));
  result = v10;
  if ( v23 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1880: range 0000000013772450-0000000013772A8C
int32_t __cdecl ActivityHandler::onSumoSelectTeamAndEnterDungeonReq(
        ActivityHandler *const this,
        const proto::SumoSelectTeamAndEnterDungeonReq *req,
        proto::SumoSelectTeamAndEnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v9; // r14
  int32_t v10; // r14d
  PlayerSceneComp *SceneComp; // rax
  bool v12; // r14
  SumoActivity *v13; // r14
  uint32_t v14; // r15d
  uint32_t v15; // eax
  SumoActivity *v16; // r14
  uint32_t v17; // r15d
  uint32_t v18; // eax
  int32_t result; // eax
  google::protobuf::RepeatedPtrField<proto::SumoTeamData> *sumo_team_data; // [rsp+10h] [rbp-F0h]
  google::protobuf::RepeatedPtrField<proto::SumoTeamData> *sumo_team_dataa; // [rsp+10h] [rbp-F0h]
  unsigned int val; // [rsp+38h] [rbp-C8h] BYREF
  int32_t ret; // [rsp+3Ch] [rbp-C4h]
  std::shared_ptr<Scene> __r; // [rsp+40h] [rbp-C0h] BYREF
  common::milog::MiLogStream v25; // [rsp+50h] [rbp-B0h] BYREF
  char v26[144]; // [rsp+70h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 22 sumo_activity_ptr:1881 64 16 18 cur_scene_ptr:1893";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSumoSelectTeamAndEnterDungeonReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::SumoSelectTeamAndEnterDungeonReq::activity_id(req);
  PlayerActivityComp::findActivity<SumoActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<SumoActivity>((const std::shared_ptr<SumoActivity> *)(v3 + 32), 0LL)
    || (v7 = std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    common::milog::MiLogStream::create(
      &v25,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSumoSelectTeamAndEnterDungeonReq",
      1884);
    v9 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
           &v25,
           (const char (*)[38])"[SUMO] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
    common::milog::MiLogStream::~MiLogStream(&v25);
    v10 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    SceneComp = Player::getSceneComp(this->player_);
    if ( !PlayerSceneComp::isInMyPlayerWorld(SceneComp) )
    {
      common::milog::MiLogStream::create(
        &v25,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onSumoSelectTeamAndEnterDungeonReq",
        1890);
      common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
        &v25,
        (const char (*)[28])"[SUMO] is not in self world");
      common::milog::MiLogStream::~MiLogStream(&v25);
      v10 = 512;
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::getSceneComp(this->player_);
      PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
      if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v3 + 64)) )
      {
        common::milog::MiLogStream::create(
          &v25,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onSumoSelectTeamAndEnterDungeonReq",
          1896);
        common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
          &v25,
          (const char (*)[25])"[SUMO] cur scene is null");
        common::milog::MiLogStream::~MiLogStream(&v25);
        v10 = -1;
      }
      else
      {
        std::dynamic_pointer_cast<DungeonScene,Scene>(&__r);
        v12 = std::operator!=<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)&__r);
        std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&__r);
        if ( v12 )
        {
          common::milog::MiLogStream::create(
            &v25,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onSumoSelectTeamAndEnterDungeonReq",
            1901);
          common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
            &v25,
            (const char (*)[28])"[SUMO] player is in dungeon");
          common::milog::MiLogStream::~MiLogStream(&v25);
          v10 = -1;
        }
        else
        {
          v13 = std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
          sumo_team_data = (google::protobuf::RepeatedPtrField<proto::SumoTeamData> *)proto::SumoSelectTeamAndEnterDungeonReq::team_list(req);
          v14 = proto::SumoSelectTeamAndEnterDungeonReq::difficulty_id(req);
          v15 = proto::SumoSelectTeamAndEnterDungeonReq::stage_id(req);
          ret = SumoActivity::verifyClientTeamInfo(v13, v15, v14, sumo_team_data);
          if ( ret )
          {
            common::milog::MiLogStream::create(
              &v25,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/handler/activity_handler.cpp",
              "onSumoSelectTeamAndEnterDungeonReq",
              1907);
            common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
              &v25,
              (const char (*)[35])"[SUMO] verifyClientTeamInfo failed");
            common::milog::MiLogStream::~MiLogStream(&v25);
            v10 = ret;
          }
          else
          {
            v16 = std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
            sumo_team_dataa = (google::protobuf::RepeatedPtrField<proto::SumoTeamData> *)proto::SumoSelectTeamAndEnterDungeonReq::team_list(req);
            v17 = proto::SumoSelectTeamAndEnterDungeonReq::difficulty_id(req);
            v18 = proto::SumoSelectTeamAndEnterDungeonReq::stage_id(req);
            v10 = SumoActivity::enterStageDungeon(v16, v18, v17, sumo_team_dataa);
          }
        }
      }
      std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
    }
  }
  std::shared_ptr<SumoActivity>::~shared_ptr((std::shared_ptr<SumoActivity> *const)(v3 + 32));
  result = v10;
  if ( v26 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1914: range 0000000013772A8E-0000000013772E65
int32_t __cdecl ActivityHandler::onSumoSwitchTeamReq(
        ActivityHandler *const this,
        const proto::SumoSwitchTeamReq *req,
        proto::SumoSwitchTeamRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v9; // r14
  int32_t v10; // r14d
  google::protobuf::uint32 v11; // edx
  PlayerAvatarComp *AvatarComp; // rax
  common::milog::MiLogStream *v13; // r14
  SumoActivity *v14; // r14
  uint32_t v15; // ecx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v19; // [rsp+30h] [rbp-90h] BYREF
  char v20[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 22 sumo_activity_ptr:1915";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSumoSwitchTeamReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::SumoSwitchTeamReq::activity_id(req);
  PlayerActivityComp::findActivity<SumoActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<SumoActivity>((const std::shared_ptr<SumoActivity> *)(v3 + 32), 0LL)
    || (v7 = std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    common::milog::MiLogStream::create(
      &v19,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSumoSwitchTeamReq",
      1918);
    v9 = common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
           &v19,
           (const char (*)[38])"[SUMO] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
    common::milog::MiLogStream::~MiLogStream(&v19);
    v10 = 860;
  }
  else
  {
    v11 = proto::SumoSwitchTeamReq::stage_id(req);
    proto::SumoSwitchTeamRsp::set_stage_id(rsp_0, v11);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    AvatarComp = Player::getAvatarComp(this->player_);
    if ( PlayerAvatarComp::isAllAvatarDead(AvatarComp) )
    {
      common::milog::MiLogStream::create(
        &v19,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onSumoSwitchTeamReq",
        1925);
      v13 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
              &v19,
              (const char (*)[29])"[SUMO] all avatar dead! uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      val = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &val);
      common::milog::MiLogStream::~MiLogStream(&v19);
      v10 = -1;
    }
    else
    {
      v14 = std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v15 = proto::SumoSwitchTeamReq::stage_id(req);
      v10 = SumoActivity::switchDungeonTeam(v14, v15, rsp_0);
    }
  }
  std::shared_ptr<SumoActivity>::~shared_ptr((std::shared_ptr<SumoActivity> *const)(v3 + 32));
  result = v10;
  if ( v20 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1932: range 0000000013772E66-000000001377332B
int32_t __cdecl ActivityHandler::onSumoRestartDungeonReq(
        ActivityHandler *const this,
        const proto::SumoRestartDungeonReq *req,
        proto::SumoRestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // rcx
  int32_t restarted; // r14d
  std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  uint32_t OwnerUid; // r14d
  SumoActivity *v10; // rax
  int32_t result; // eax
  int32_t ret; // [rsp+24h] [rbp-BCh]
  PlayerDungeonComp *dungeon_comp; // [rsp+28h] [rbp-B8h]
  common::milog::MiLogStream v14; // [rsp+30h] [rbp-B0h] BYREF
  char v15[144]; // [rsp+50h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 17 activity_ptr:1933 64 16 22 dungeon_scene_ptr:1941";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSumoRestartDungeonReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SumoActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SumoActivity>(0LL, (const std::shared_ptr<SumoActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onSumoRestartDungeonReq",
      1936);
    v6 = common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
           &v14,
           (const char (*)[37])"[SUMO] activity_ptr is null, player:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    operator<<(v6, this->player_);
    common::milog::MiLogStream::~MiLogStream(&v14);
    restarted = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    dungeon_comp = Player::getDungeonComp(this->player_);
    PlayerDungeonComp::getCurDungeon((PlayerDungeonComp *const)(v3 + 64));
    if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v14,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onSumoRestartDungeonReq",
        1945);
      common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
        &v14,
        (const char (*)[26])"dungeon_scene_ptr is null");
      common::milog::MiLogStream::~MiLogStream(&v14);
      restarted = -1;
    }
    else
    {
      v8 = std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DungeonScene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      OwnerUid = Scene::getOwnerUid((const Scene *const)v8);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( OwnerUid == Player::getUid(this->player_) )
      {
        ret = PlayerDungeonComp::checkRestartDungeon(dungeon_comp, DUNGEON_RESTART_REASON_DIE_RETRY);
        if ( ret )
        {
          common::milog::MiLogStream::create(
            &v14,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/handler/activity_handler.cpp",
            "onSumoRestartDungeonReq",
            1956);
          common::milog::MiLogStream::operator<<<char [27],(char *[27])0>(
            &v14,
            (const char (*)[27])"checkRestartDungeon failed");
          common::milog::MiLogStream::~MiLogStream(&v14);
          restarted = ret;
        }
        else
        {
          v10 = std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SumoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
          restarted = SumoActivity::restartSumoDungeon(v10);
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v14,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/handler/activity_handler.cpp",
          "onSumoRestartDungeonReq",
          1950);
        common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
          &v14,
          (const char (*)[44])"guest can not send DungeonRestartReq, error");
        common::milog::MiLogStream::~MiLogStream(&v14);
        restarted = -1;
      }
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 64));
  }
  std::shared_ptr<SumoActivity>::~shared_ptr((std::shared_ptr<SumoActivity> *const)(v3 + 32));
  result = restarted;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1963: range 000000001377332C-000000001377373D
int32_t __cdecl ActivityHandler::onLunaRiteSacrificeReq(
        ActivityHandler *const this,
        const proto::LunaRiteSacrificeReq *req,
        proto::LunaRiteSacrificeRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  common::milog::MiLogStream *v8; // r14
  int v9; // r14d
  LunaRiteActivity *v10; // rax
  std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  uint32_t *v12; // rdx
  int32_t result; // eax
  unsigned int val; // [rsp+24h] [rbp-DCh] BYREF
  uint32_t area_id; // [rsp+28h] [rbp-D8h]
  uint32_t index; // [rsp+2Ch] [rbp-D4h]
  int ret; // [rsp+30h] [rbp-D0h]
  uint32_t id; // [rsp+34h] [rbp-CCh]
  std::vector<unsigned int>::iterator __for_begin; // [rsp+38h] [rbp-C8h] BYREF
  std::vector<unsigned int>::iterator __for_end; // [rsp+40h] [rbp-C0h] BYREF
  std::vector<unsigned int> *__for_range; // [rsp+48h] [rbp-B8h]
  std::vector<unsigned int> v23; // [rsp+50h] [rbp-B0h] BYREF
  common::milog::MiLogStream v24; // [rsp+70h] [rbp-90h] BYREF
  char v25[112]; // [rsp+90h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 27 luna_rite_activity_ptr:1969";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLunaRiteSacrificeReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  area_id = proto::LunaRiteSacrificeReq::area_id(req);
  index = proto::LunaRiteSacrificeReq::index(req);
  proto::LunaRiteSacrificeRsp::set_area_id(rsp_0, area_id);
  proto::LunaRiteSacrificeRsp::set_index(rsp_0, index);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LunaRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LunaRiteActivity>((const std::shared_ptr<LunaRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    common::milog::MiLogStream::create(
      &v24,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onLunaRiteSacrificeReq",
      1972);
    v8 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           &v24,
           (const char (*)[43])"[LUNA_RITE] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &val);
    common::milog::MiLogStream::~MiLogStream(&v24);
    v9 = 860;
  }
  else
  {
    v10 = std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    ret = LunaRiteActivity::sacrifice(v10, area_id, index);
    if ( !ret )
    {
      v11 = std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      LunaRiteActivity::getSacrificeIndexVec(&v23, v11, area_id);
      __for_range = &v23;
      __for_begin._M_current = std::vector<unsigned int>::begin(&v23)._M_current;
      __for_end._M_current = std::vector<unsigned int>::end(&v23)._M_current;
      while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(&__for_begin, &__for_end) )
      {
        v12 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*(&__for_begin);
        if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v12 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4();
        }
        id = *v12;
        proto::LunaRiteSacrificeRsp::add_sacrifice_list(rsp_0, id);
        __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++(&__for_begin);
      }
      std::vector<unsigned int>::~vector(&v23);
    }
    v9 = ret;
  }
  std::shared_ptr<LunaRiteActivity>::~shared_ptr((std::shared_ptr<LunaRiteActivity> *const)(v3 + 32));
  result = v9;
  if ( v25 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1987: range 000000001377373E-0000000013773B4F
int32_t __cdecl ActivityHandler::onLunaRiteTakeSacrificeRewardReq(
        ActivityHandler *const this,
        const proto::LunaRiteTakeSacrificeRewardReq *req,
        proto::LunaRiteTakeSacrificeRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  common::milog::MiLogStream *v8; // r14
  int v9; // r14d
  LunaRiteActivity *v10; // rax
  std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  uint32_t *v12; // rdx
  int32_t result; // eax
  unsigned int val; // [rsp+24h] [rbp-DCh] BYREF
  uint32_t area_id; // [rsp+28h] [rbp-D8h]
  uint32_t index; // [rsp+2Ch] [rbp-D4h]
  int ret; // [rsp+30h] [rbp-D0h]
  uint32_t id; // [rsp+34h] [rbp-CCh]
  std::vector<unsigned int>::iterator __for_begin; // [rsp+38h] [rbp-C8h] BYREF
  std::vector<unsigned int>::iterator __for_end; // [rsp+40h] [rbp-C0h] BYREF
  std::vector<unsigned int> *__for_range; // [rsp+48h] [rbp-B8h]
  std::vector<unsigned int> v23; // [rsp+50h] [rbp-B0h] BYREF
  common::milog::MiLogStream v24; // [rsp+70h] [rbp-90h] BYREF
  char v25[112]; // [rsp+90h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 27 luna_rite_activity_ptr:1993";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLunaRiteTakeSacrificeRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  area_id = proto::LunaRiteTakeSacrificeRewardReq::area_id(req);
  index = proto::LunaRiteTakeSacrificeRewardReq::index(req);
  proto::LunaRiteTakeSacrificeRewardRsp::set_area_id(rsp_0, area_id);
  proto::LunaRiteTakeSacrificeRewardRsp::set_index(rsp_0, index);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LunaRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LunaRiteActivity>((const std::shared_ptr<LunaRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    common::milog::MiLogStream::create(
      &v24,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onLunaRiteTakeSacrificeRewardReq",
      1996);
    v8 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           &v24,
           (const char (*)[43])"[LUNA_RITE] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &val);
    common::milog::MiLogStream::~MiLogStream(&v24);
    v9 = 860;
  }
  else
  {
    v10 = std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    ret = LunaRiteActivity::takeSacrificeReward(v10, area_id, index);
    if ( !ret )
    {
      v11 = std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      LunaRiteActivity::getSacrificeRewardIndexVec(&v23, v11, area_id);
      __for_range = &v23;
      __for_begin._M_current = std::vector<unsigned int>::begin(&v23)._M_current;
      __for_end._M_current = std::vector<unsigned int>::end(&v23)._M_current;
      while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(&__for_begin, &__for_end) )
      {
        v12 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*(&__for_begin);
        if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v12 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4();
        }
        id = *v12;
        proto::LunaRiteTakeSacrificeRewardRsp::add_sacrifice_reward_list(rsp_0, id);
        __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++(&__for_begin);
      }
      std::vector<unsigned int>::~vector(&v23);
    }
    v9 = ret;
  }
  std::shared_ptr<LunaRiteActivity>::~shared_ptr((std::shared_ptr<LunaRiteActivity> *const)(v3 + 32));
  result = v9;
  if ( v25 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2011: range 0000000013773B50-0000000013773DFE
int32_t __cdecl ActivityHandler::onLunaRiteHintPointReq(
        ActivityHandler *const this,
        const proto::LunaRiteHintPointReq *req,
        proto::LunaRiteHintPointRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  common::milog::MiLogStream *v8; // r14
  int32_t v9; // r14d
  LunaRiteActivity *v10; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+28h] [rbp-98h] BYREF
  uint32_t area_id; // [rsp+2Ch] [rbp-94h]
  common::milog::MiLogStream v15; // [rsp+30h] [rbp-90h] BYREF
  char v16[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 27 luna_rite_activity_ptr:2012";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLunaRiteHintPointReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LunaRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LunaRiteActivity>((const std::shared_ptr<LunaRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onLunaRiteHintPointReq",
      2015);
    v8 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
           &v15,
           (const char (*)[43])"[LUNA_RITE] activity is not opening, uid: ");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    val = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v8, &val);
    common::milog::MiLogStream::~MiLogStream(&v15);
    v9 = 860;
  }
  else
  {
    area_id = proto::LunaRiteHintPointReq::area_id(req);
    proto::LunaRiteHintPointRsp::set_area_id(rsp_0, area_id);
    v10 = std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LunaRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v9 = LunaRiteActivity::onNpcTalkTakeHintPoint(v10, area_id, rsp_0);
  }
  std::shared_ptr<LunaRiteActivity>::~shared_ptr((std::shared_ptr<LunaRiteActivity> *const)(v3 + 32));
  result = v9;
  if ( v16 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2024: range 0000000013773E00-0000000013774295
int32_t __cdecl ActivityHandler::onPlantFlowerGetSeedInfoReq(
        ActivityHandler *const this,
        const proto::PlantFlowerGetSeedInfoReq *req,
        proto::PlantFlowerGetSeedInfoRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  PlantFlowerActivity *v15; // rax
  common::milog::MiLogStream *v16; // r14
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // r14
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-C4h] BYREF
  unsigned int Uid; // [rsp+30h] [rbp-C0h] BYREF
  int32_t ret; // [rsp+34h] [rbp-BCh]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+38h] [rbp-B8h]
  common::milog::MiLogStream v25; // [rsp+40h] [rbp-B0h] BYREF
  char v26[144]; // [rsp+60h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 19 seed_reward_id:2034 64 16 17 activity_ptr:2028";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPlantFlowerGetSeedInfoReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  v6 = proto::PlantFlowerGetSeedInfoReq::schedule_id(req);
  proto::PlantFlowerGetSeedInfoRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 64));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 64));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::PlantFlowerGetSeedInfoReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v3 + 64), ActivityComp);
  if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v3 + 64))
    || (v9 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v25,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerGetSeedInfoReq",
      2031);
    v11 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            &v25,
            (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
    val = proto::PlantFlowerGetSeedInfoReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v25);
    v14 = 860;
  }
  else
  {
    *(_DWORD *)(v3 + 48) = 0;
    v15 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    ret = PlantFlowerActivity::getOwnerCurSeedRewardId(v15, (uint32_t *)(v3 + 48));
    if ( ret )
    {
      common::milog::MiLogStream::create(
        &v25,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/handler/activity_handler.cpp",
        "onPlantFlowerGetSeedInfoReq",
        2038);
      v16 = common::milog::MiLogStream::operator<<<char [63],(char *[63])0>(
              &v25,
              (const char (*)[63])"[PLANT_FLOWER] get cur world seed reward id fail, schedule_id:");
      val = proto::PlantFlowerGetSeedInfoReq::schedule_id(req);
      v17 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, &val);
      v18 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v17, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Uid = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &Uid);
      common::milog::MiLogStream::~MiLogStream(&v25);
      v14 = ret;
    }
    else
    {
      proto::PlantFlowerGetSeedInfoRsp::set_seed_reward_id(rsp_0, *(_DWORD *)(v3 + 48));
      v14 = 0;
    }
  }
  std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v3 + 64));
  result = v14;
  if ( v26 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2046: range 0000000013774296-00000000137745CA
int32_t __cdecl ActivityHandler::onPlantFlowerTakeSeedRewardReq(
        ActivityHandler *const this,
        const proto::PlantFlowerTakeSeedRewardReq *req,
        proto::PlantFlowerTakeSeedRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  PlantFlowerActivity *v15; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+20h] [rbp-A0h] BYREF
  unsigned int Uid; // [rsp+24h] [rbp-9Ch] BYREF
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v21; // [rsp+30h] [rbp-90h] BYREF
  char v22[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2050";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPlantFlowerTakeSeedRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::PlantFlowerTakeSeedRewardReq::schedule_id(req);
  proto::PlantFlowerTakeSeedRewardRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::PlantFlowerTakeSeedRewardReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v3 + 32))
    || (v9 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v21,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerTakeSeedRewardReq",
      2053);
    v11 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            &v21,
            (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
    val = proto::PlantFlowerTakeSeedRewardReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v21);
    v14 = 860;
  }
  else
  {
    v15 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v14 = PlantFlowerActivity::takeSeedReward(v15);
  }
  std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v3 + 32));
  result = v14;
  if ( v22 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2060: range 00000000137745CC-0000000013774915
int32_t __cdecl ActivityHandler::onPlantFlowerSetFlowerWishReq(
        ActivityHandler *const this,
        const proto::PlantFlowerSetFlowerWishReq *req,
        proto::PlantFlowerSetFlowerWishRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  PlantFlowerActivity *v15; // r14
  const google::protobuf::Map<unsigned int,unsigned int> *v16; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+20h] [rbp-A0h] BYREF
  unsigned int Uid; // [rsp+24h] [rbp-9Ch] BYREF
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v22; // [rsp+30h] [rbp-90h] BYREF
  char v23[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2064";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPlantFlowerSetFlowerWishReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::PlantFlowerSetFlowerWishReq::schedule_id(req);
  proto::PlantFlowerSetFlowerWishRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::PlantFlowerSetFlowerWishReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v3 + 32))
    || (v9 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v22,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerSetFlowerWishReq",
      2067);
    v11 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            &v22,
            (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
    val = proto::PlantFlowerSetFlowerWishReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v22);
    v14 = 860;
  }
  else
  {
    v15 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v16 = proto::PlantFlowerSetFlowerWishReq::flower_num_map(req);
    v14 = PlantFlowerActivity::setFlowerWish(v15, v16);
  }
  std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v3 + 32));
  result = v14;
  if ( v23 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2074: range 0000000013774916-0000000013774FFA
int32_t __cdecl ActivityHandler::onPlantFlowerGetFriendFlowerWishListReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  uint32_t ActivityComp; // r14d
  uint32_t v7; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  PlayerSocialComp *SocialComp; // rax
  google::protobuf::RepeatedField<unsigned int> *v14; // rax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  uint32_t ScheduleId; // eax
  google::protobuf::uint32 v17; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+14h] [rbp-1CCh] BYREF
  unsigned int Uid; // [rsp+18h] [rbp-1C8h] BYREF
  int32_t retcode; // [rsp+1Ch] [rbp-1C4h]
  const proto::PlantFlowerGetFriendFlowerWishListReq *req; // [rsp+20h] [rbp-1C0h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-1B8h]
  common::milog::MiLogStream v24; // [rsp+30h] [rbp-1B0h] BYREF
  char v25[400]; // [rsp+50h] [rbp-190h] BYREF

  v2 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 48 16 12 req_ptr:2075 80 16 17 activity_ptr:2081 112 24 19 friend_uid_vec:2090 176 48 15 serve"
                        "r_req:2089 256 56 8 rsp:2099";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onPlantFlowerGetFriendFlowerWishListReq;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862722] = 62194;
  v4[536862723] = 62194;
  v4[536862724] = -218959360;
  v4[536862725] = 62194;
  v4[536862727] = -218959118;
  v4[536862729] = -218103808;
  v4[536862730] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerGetFriendFlowerWishListReq>((common::minet::Packet *const)(v2 + 48));
  if ( std::operator==<proto::PlantFlowerGetFriendFlowerWishListReq const>(
         (const std::shared_ptr<const proto::PlantFlowerGetFriendFlowerWishListReq> *)(v2 + 48),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v24,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerGetFriendFlowerWishListReq",
      2075);
    common::milog::MiLogStream::operator()(&v24, off_2504DB00);
    common::milog::MiLogStream::~MiLogStream(&v24);
    v5 = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::PlantFlowerGetFriendFlowerWishListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerGetFriendFlowerWishListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 48));
    retcode = -1;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 80));
    conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80))->design_config.txt_config_mgr.new_activity_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 80));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    v7 = proto::PlantFlowerGetFriendFlowerWishListReq::schedule_id(req);
    NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
    PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v2 + 80), ActivityComp);
    if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v2 + 80))
      || (v8 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80)),
          !BaseActivity::isOpening(v8, 0)) )
    {
      common::milog::MiLogStream::create(
        &v24,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onPlantFlowerGetFriendFlowerWishListReq",
        2084);
      v10 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
              &v24,
              (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
      val = proto::PlantFlowerGetFriendFlowerWishListReq::schedule_id(req);
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Uid = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &Uid);
      common::milog::MiLogStream::~MiLogStream(&v24);
      retcode = 860;
    }
    else
    {
      proto::ServerPlantFlowerGetFriendFlowerWishListReq::ServerPlantFlowerGetFriendFlowerWishListReq((proto::ServerPlantFlowerGetFriendFlowerWishListReq *const)(v2 + 176));
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 112));
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      SocialComp = Player::getSocialComp(this->player_);
      PlayerSocialComp::fillPlayerFriendList(SocialComp, (std::vector<unsigned int> *)(v2 + 112));
      v14 = proto::ServerPlantFlowerGetFriendFlowerWishListReq::mutable_friend_uid_list((proto::ServerPlantFlowerGetFriendFlowerWishListReq *const)(v2 + 176));
      common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
        (const std::vector<unsigned int> *)(v2 + 112),
        v14);
      v15 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80));
      ScheduleId = BaseActivity::getScheduleId(v15);
      proto::ServerPlantFlowerGetFriendFlowerWishListReq::set_schedule_id(
        (proto::ServerPlantFlowerGetFriendFlowerWishListReq *const)(v2 + 176),
        ScheduleId);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      retcode = sendProtoToSocialService<proto::ServerPlantFlowerGetFriendFlowerWishListReq>(
                  this->player_,
                  (proto::ServerPlantFlowerGetFriendFlowerWishListReq *)(v2 + 176));
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 112));
      proto::ServerPlantFlowerGetFriendFlowerWishListReq::~ServerPlantFlowerGetFriendFlowerWishListReq((proto::ServerPlantFlowerGetFriendFlowerWishListReq *const)(v2 + 176));
    }
    std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v2 + 80));
    if ( retcode )
    {
      proto::PlantFlowerGetFriendFlowerWishListRsp::PlantFlowerGetFriendFlowerWishListRsp((proto::PlantFlowerGetFriendFlowerWishListRsp *const)(v2 + 256));
      v17 = proto::PlantFlowerGetFriendFlowerWishListReq::schedule_id(req);
      proto::PlantFlowerGetFriendFlowerWishListRsp::set_schedule_id(
        (proto::PlantFlowerGetFriendFlowerWishListRsp *const)(v2 + 256),
        v17);
      proto::PlantFlowerGetFriendFlowerWishListRsp::set_retcode(
        (proto::PlantFlowerGetFriendFlowerWishListRsp *const)(v2 + 256),
        retcode);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 256));
      proto::PlantFlowerGetFriendFlowerWishListRsp::~PlantFlowerGetFriendFlowerWishListRsp((proto::PlantFlowerGetFriendFlowerWishListRsp *const)(v2 + 256));
    }
    v5 = 0;
  }
  std::shared_ptr<proto::PlantFlowerGetFriendFlowerWishListReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerGetFriendFlowerWishListReq> *const)(v2 + 48));
  result = v5;
  if ( v25 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 2108: range 0000000013774FFC-00000000137755D6
int32_t __cdecl ActivityHandler::onServerPlantFlowerGetFriendFlowerWishListRsp(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  uint32_t ActivityComp; // r14d
  uint32_t v7; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  google::protobuf::uint32 v13; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+1Ch] [rbp-154h] BYREF
  unsigned int Uid; // [rsp+20h] [rbp-150h] BYREF
  int32_t retcode; // [rsp+24h] [rbp-14Ch]
  google::protobuf::RepeatedPtrField<proto::PlantFlowerFriendFlowerWishData>::const_iterator __for_begin; // [rsp+28h] [rbp-148h] BYREF
  google::protobuf::RepeatedPtrField<proto::PlantFlowerFriendFlowerWishData>::const_iterator __for_end; // [rsp+30h] [rbp-140h] BYREF
  const proto::ServerPlantFlowerGetFriendFlowerWishListRsp *server_rsp; // [rsp+38h] [rbp-138h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+40h] [rbp-130h]
  const google::protobuf::RepeatedPtrField<proto::PlantFlowerFriendFlowerWishData> *__for_range; // [rsp+48h] [rbp-128h]
  const proto::PlantFlowerFriendFlowerWishData *friend_flower_wish_data; // [rsp+50h] [rbp-120h]
  proto::PlantFlowerFriendFlowerWishData *client_friend_flower_wish_data; // [rsp+58h] [rbp-118h]
  common::milog::MiLogStream v25; // [rsp+60h] [rbp-110h] BYREF
  char v26[240]; // [rsp+80h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 32 16 19 server_rsp_ptr:2109 64 16 17 activity_ptr:2121 96 56 8 rsp:2111";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onServerPlantFlowerGetFriendFlowerWishListRsp;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -219021312;
  v4[536862724] = -218103808;
  v4[536862725] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ServerPlantFlowerGetFriendFlowerWishListRsp>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ServerPlantFlowerGetFriendFlowerWishListRsp const>(
         (const std::shared_ptr<const proto::ServerPlantFlowerGetFriendFlowerWishListRsp> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v25,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onServerPlantFlowerGetFriendFlowerWishListRsp",
      2109);
    common::milog::MiLogStream::operator()(&v25, off_2504DC20);
    common::milog::MiLogStream::~MiLogStream(&v25);
    v5 = -1;
  }
  else
  {
    server_rsp = std::__shared_ptr_access<proto::ServerPlantFlowerGetFriendFlowerWishListRsp const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ServerPlantFlowerGetFriendFlowerWishListRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    proto::PlantFlowerGetFriendFlowerWishListRsp::PlantFlowerGetFriendFlowerWishListRsp((proto::PlantFlowerGetFriendFlowerWishListRsp *const)(v2 + 96));
    retcode = proto::ServerPlantFlowerGetFriendFlowerWishListRsp::retcode(server_rsp);
    if ( !retcode )
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)(v2 + 64));
      conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64))->design_config.txt_config_mgr.new_activity_config_mgr;
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
      v7 = proto::ServerPlantFlowerGetFriendFlowerWishListRsp::schedule_id(server_rsp);
      NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
      PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v2 + 64), ActivityComp);
      if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v2 + 64))
        || (v8 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64)),
            !BaseActivity::isOpening(v8, 0)) )
      {
        common::milog::MiLogStream::create(
          &v25,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onServerPlantFlowerGetFriendFlowerWishListRsp",
          2124);
        v10 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                &v25,
                (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
        val = proto::ServerPlantFlowerGetFriendFlowerWishListRsp::schedule_id(server_rsp);
        v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
        v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        Uid = Player::getUid(this->player_);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &Uid);
        common::milog::MiLogStream::~MiLogStream(&v25);
        retcode = 860;
      }
      else
      {
        __for_range = proto::ServerPlantFlowerGetFriendFlowerWishListRsp::friend_flower_wish_list(server_rsp);
        __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::PlantFlowerFriendFlowerWishData>::begin(__for_range).it_;
        __for_end.it_ = google::protobuf::RepeatedPtrField<proto::PlantFlowerFriendFlowerWishData>::end(__for_range).it_;
        while ( google::protobuf::internal::RepeatedPtrIterator<proto::PlantFlowerFriendFlowerWishData const>::operator!=(
                  &__for_begin,
                  &__for_end) )
        {
          friend_flower_wish_data = google::protobuf::internal::RepeatedPtrIterator<proto::PlantFlowerFriendFlowerWishData const>::operator*(&__for_begin);
          client_friend_flower_wish_data = proto::PlantFlowerGetFriendFlowerWishListRsp::add_friend_flower_wish_list((proto::PlantFlowerGetFriendFlowerWishListRsp *const)(v2 + 96));
          proto::PlantFlowerFriendFlowerWishData::CopyFrom(client_friend_flower_wish_data, friend_flower_wish_data);
          google::protobuf::internal::RepeatedPtrIterator<proto::PlantFlowerFriendFlowerWishData const>::operator++(&__for_begin);
        }
      }
      std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v2 + 64));
    }
    proto::PlantFlowerGetFriendFlowerWishListRsp::set_retcode(
      (proto::PlantFlowerGetFriendFlowerWishListRsp *const)(v2 + 96),
      retcode);
    v13 = proto::ServerPlantFlowerGetFriendFlowerWishListRsp::schedule_id(server_rsp);
    proto::PlantFlowerGetFriendFlowerWishListRsp::set_schedule_id(
      (proto::PlantFlowerGetFriendFlowerWishListRsp *const)(v2 + 96),
      v13);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    v5 = Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 96));
    proto::PlantFlowerGetFriendFlowerWishListRsp::~PlantFlowerGetFriendFlowerWishListRsp((proto::PlantFlowerGetFriendFlowerWishListRsp *const)(v2 + 96));
  }
  std::shared_ptr<proto::ServerPlantFlowerGetFriendFlowerWishListRsp const>::~shared_ptr((std::shared_ptr<const proto::ServerPlantFlowerGetFriendFlowerWishListRsp> *const)(v2 + 32));
  result = v5;
  if ( v26 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2142: range 00000000137755D8-0000000013775D78
int32_t __cdecl ActivityHandler::onPlantFlowerGiveFriendFlowerReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  uint32_t ActivityComp; // r14d
  uint32_t v7; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  google::protobuf::uint32 v13; // r14d
  PlayerSocialComp *SocialComp; // r14
  uint32_t v15; // eax
  common::milog::MiLogStream *v16; // r14
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // r14
  PlantFlowerActivity *v19; // r14
  const google::protobuf::Map<unsigned int,unsigned int> *v20; // r15
  uint32_t v21; // eax
  google::protobuf::uint32 v22; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+24h] [rbp-12Ch] BYREF
  unsigned int Uid; // [rsp+28h] [rbp-128h] BYREF
  int32_t retcode; // [rsp+2Ch] [rbp-124h]
  const proto::PlantFlowerGiveFriendFlowerReq *req; // [rsp+30h] [rbp-120h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+38h] [rbp-118h]
  common::milog::MiLogStream v29; // [rsp+40h] [rbp-110h] BYREF
  char v30[240]; // [rsp+60h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v30;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 16 12 req_ptr:2143 80 16 17 activity_ptr:2149 112 48 8 rsp:2172";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onPlantFlowerGiveFriendFlowerReq;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862722] = 62194;
  v4[536862723] = 62194;
  v4[536862725] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerGiveFriendFlowerReq>((common::minet::Packet *const)(v2 + 48));
  if ( std::operator==<proto::PlantFlowerGiveFriendFlowerReq const>(
         (const std::shared_ptr<const proto::PlantFlowerGiveFriendFlowerReq> *)(v2 + 48),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v29,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerGiveFriendFlowerReq",
      2143);
    common::milog::MiLogStream::operator()(&v29, off_2504DD40);
    common::milog::MiLogStream::~MiLogStream(&v29);
    v5 = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::PlantFlowerGiveFriendFlowerReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerGiveFriendFlowerReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 48));
    retcode = -1;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 80));
    conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80))->design_config.txt_config_mgr.new_activity_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 80));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    v7 = proto::PlantFlowerGiveFriendFlowerReq::schedule_id(req);
    NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
    PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v2 + 80), ActivityComp);
    if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v2 + 80))
      || (v8 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80)),
          !BaseActivity::isOpening(v8, 0)) )
    {
      common::milog::MiLogStream::create(
        &v29,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onPlantFlowerGiveFriendFlowerReq",
        2152);
      v10 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
              &v29,
              (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
      val = proto::PlantFlowerGiveFriendFlowerReq::schedule_id(req);
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Uid = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &Uid);
      common::milog::MiLogStream::~MiLogStream(&v29);
      retcode = 860;
    }
    else
    {
      v13 = proto::PlantFlowerGiveFriendFlowerReq::uid(req);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( v13 == Player::getUid(this->player_) )
      {
        common::milog::MiLogStream::create(
          &v29,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onPlantFlowerGiveFriendFlowerReq",
          2158);
        common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
          &v29,
          (const char (*)[22])"target cannot be self");
        common::milog::MiLogStream::~MiLogStream(&v29);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        SocialComp = Player::getSocialComp(this->player_);
        v15 = proto::PlantFlowerGiveFriendFlowerReq::uid(req);
        if ( !PlayerSocialComp::isPlayerFriend(SocialComp, v15) )
        {
          common::milog::MiLogStream::create(
            &v29,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onPlantFlowerGiveFriendFlowerReq",
            2163);
          v16 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
                  &v29,
                  (const char (*)[46])"[PLANT_FLOWER] player is not friend, req uid:");
          val = proto::PlantFlowerGiveFriendFlowerReq::uid(req);
          v17 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, &val);
          v18 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v17, (const char (*)[6])" uid:");
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8();
          Uid = Player::getUid(this->player_);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &Uid);
          common::milog::MiLogStream::~MiLogStream(&v29);
          retcode = 7008;
        }
        else
        {
          v19 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80));
          v20 = proto::PlantFlowerGiveFriendFlowerReq::flower_num_map(req);
          v21 = proto::PlantFlowerGiveFriendFlowerReq::uid(req);
          retcode = PlantFlowerActivity::onGiveFriendFlowerReq(v19, v21, v20);
        }
      }
    }
    std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v2 + 80));
    if ( retcode )
    {
      proto::PlantFlowerGiveFriendFlowerRsp::PlantFlowerGiveFriendFlowerRsp((proto::PlantFlowerGiveFriendFlowerRsp *const)(v2 + 112));
      v22 = proto::PlantFlowerGiveFriendFlowerReq::schedule_id(req);
      proto::PlantFlowerGiveFriendFlowerRsp::set_schedule_id(
        (proto::PlantFlowerGiveFriendFlowerRsp *const)(v2 + 112),
        v22);
      proto::PlantFlowerGiveFriendFlowerRsp::set_retcode(
        (proto::PlantFlowerGiveFriendFlowerRsp *const)(v2 + 112),
        retcode);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 112));
      proto::PlantFlowerGiveFriendFlowerRsp::~PlantFlowerGiveFriendFlowerRsp((proto::PlantFlowerGiveFriendFlowerRsp *const)(v2 + 112));
    }
    v5 = 0;
  }
  std::shared_ptr<proto::PlantFlowerGiveFriendFlowerReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerGiveFriendFlowerReq> *const)(v2 + 48));
  result = v5;
  if ( v30 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2181: range 0000000013775D7A-0000000013776399
int32_t __cdecl ActivityHandler::onServerPlantFlowerGetFriendFlowerDataRsp(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  uint32_t ActivityComp; // r14d
  uint32_t v7; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  PlantFlowerActivity *v13; // r14
  const google::protobuf::Map<unsigned int,unsigned int> *v14; // r15
  uint32_t v15; // eax
  google::protobuf::uint32 v16; // eax
  google::protobuf::RepeatedField<unsigned int> *v17; // rax
  int32_t result; // eax
  google::protobuf::Map<unsigned int,unsigned int> *have_flower_num_map; // [rsp+8h] [rbp-188h]
  unsigned int val; // [rsp+24h] [rbp-16Ch] BYREF
  unsigned int Uid; // [rsp+28h] [rbp-168h] BYREF
  int32_t retcode; // [rsp+2Ch] [rbp-164h]
  const proto::ServerPlantFlowerGetFriendFlowerDataRsp *server_rsp; // [rsp+30h] [rbp-160h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+38h] [rbp-158h]
  common::milog::MiLogStream v25; // [rsp+40h] [rbp-150h] BYREF
  char v26[304]; // [rsp+60h] [rbp-130h] BYREF

  v2 = (unsigned __int64)v26;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(256LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 48 16 19 server_rsp_ptr:2182 80 16 17 activity_ptr:2189 112 24 21 limit_flower_vec:2185 176 48 8 rsp:2201";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onServerPlantFlowerGetFriendFlowerDataRsp;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862722] = 62194;
  v4[536862723] = 62194;
  v4[536862724] = -218959360;
  v4[536862725] = 62194;
  v4[536862727] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ServerPlantFlowerGetFriendFlowerDataRsp>((common::minet::Packet *const)(v2 + 48));
  if ( std::operator==<proto::ServerPlantFlowerGetFriendFlowerDataRsp const>(
         (const std::shared_ptr<const proto::ServerPlantFlowerGetFriendFlowerDataRsp> *)(v2 + 48),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v25,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onServerPlantFlowerGetFriendFlowerDataRsp",
      2182);
    common::milog::MiLogStream::operator()(&v25, off_2504DEE0);
    common::milog::MiLogStream::~MiLogStream(&v25);
    v5 = -1;
  }
  else
  {
    server_rsp = std::__shared_ptr_access<proto::ServerPlantFlowerGetFriendFlowerDataRsp const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ServerPlantFlowerGetFriendFlowerDataRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 48));
    retcode = -1;
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 112));
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 80));
    conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80))->design_config.txt_config_mgr.new_activity_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 80));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    v7 = proto::ServerPlantFlowerGetFriendFlowerDataRsp::schedule_id(server_rsp);
    NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
    PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v2 + 80), ActivityComp);
    if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v2 + 80))
      || (v8 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80)),
          !BaseActivity::isOpening(v8, 0)) )
    {
      common::milog::MiLogStream::create(
        &v25,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onServerPlantFlowerGetFriendFlowerDataRsp",
        2192);
      v10 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
              &v25,
              (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
      val = proto::ServerPlantFlowerGetFriendFlowerDataRsp::schedule_id(server_rsp);
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Uid = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &Uid);
      common::milog::MiLogStream::~MiLogStream(&v25);
      retcode = 860;
    }
    else
    {
      v13 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80));
      have_flower_num_map = (google::protobuf::Map<unsigned int,unsigned int> *)proto::ServerPlantFlowerGetFriendFlowerDataRsp::have_flower_num_map(server_rsp);
      v14 = proto::ServerPlantFlowerGetFriendFlowerDataRsp::give_flower_num_map(server_rsp);
      v15 = proto::ServerPlantFlowerGetFriendFlowerDataRsp::friend_uid(server_rsp);
      retcode = PlantFlowerActivity::doGiveFriendFlower(
                  v13,
                  v15,
                  v14,
                  have_flower_num_map,
                  (std::vector<unsigned int> *)(v2 + 112));
    }
    std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v2 + 80));
    if ( retcode )
    {
      proto::PlantFlowerGiveFriendFlowerRsp::PlantFlowerGiveFriendFlowerRsp((proto::PlantFlowerGiveFriendFlowerRsp *const)(v2 + 176));
      v16 = proto::ServerPlantFlowerGetFriendFlowerDataRsp::schedule_id(server_rsp);
      proto::PlantFlowerGiveFriendFlowerRsp::set_schedule_id(
        (proto::PlantFlowerGiveFriendFlowerRsp *const)(v2 + 176),
        v16);
      proto::PlantFlowerGiveFriendFlowerRsp::set_retcode(
        (proto::PlantFlowerGiveFriendFlowerRsp *const)(v2 + 176),
        retcode);
      v17 = proto::PlantFlowerGiveFriendFlowerRsp::mutable_limit_flower_list((proto::PlantFlowerGiveFriendFlowerRsp *const)(v2 + 176));
      common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
        (const std::vector<unsigned int> *)(v2 + 112),
        v17);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 176));
      proto::PlantFlowerGiveFriendFlowerRsp::~PlantFlowerGiveFriendFlowerRsp((proto::PlantFlowerGiveFriendFlowerRsp *const)(v2 + 176));
    }
    v5 = 0;
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 112));
  }
  std::shared_ptr<proto::ServerPlantFlowerGetFriendFlowerDataRsp const>::~shared_ptr((std::shared_ptr<const proto::ServerPlantFlowerGetFriendFlowerDataRsp> *const)(v2 + 48));
  result = v5;
  if ( v26 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2211: range 000000001377639A-0000000013776B0D
int32_t __cdecl ActivityHandler::onPlantFlowerGetRecvFlowerListReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  int32_t FriendBrief; // r14d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  uint32_t ActivityComp; // r15d
  uint32_t v7; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r15
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r15
  _BOOL4 v13; // r15d
  PlantFlowerActivity *v14; // rax
  int v15; // r15d
  uint32_t *v16; // rdx
  google::protobuf::uint32 v17; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+28h] [rbp-1E8h] BYREF
  unsigned int v20; // [rsp+2Ch] [rbp-1E4h] BYREF
  int32_t retcode; // [rsp+30h] [rbp-1E0h]
  uint32_t uid; // [rsp+34h] [rbp-1DCh]
  std::set<unsigned int>::iterator __for_begin; // [rsp+38h] [rbp-1D8h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+40h] [rbp-1D0h] BYREF
  const proto::PlantFlowerGetRecvFlowerListReq *req; // [rsp+48h] [rbp-1C8h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+50h] [rbp-1C0h]
  std::set<unsigned int> *__for_range; // [rsp+58h] [rbp-1B8h]
  common::milog::MiLogStream v28; // [rsp+60h] [rbp-1B0h] BYREF
  char v29[400]; // [rsp+80h] [rbp-190h] BYREF

  v3 = (unsigned __int64)v29;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_3(352LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "5 32 16 12 req_ptr:2212 64 16 17 activity_ptr:2218 96 48 24 recv_flower_uid_set:2226 176 48 15 s"
                        "erver_req:2235 256 56 8 rsp:2245";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPlantFlowerGetRecvFlowerListReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -219021312;
  v5[536862724] = -219021312;
  v5[536862725] = 62194;
  v5[536862727] = -218959118;
  v5[536862729] = -218103808;
  v5[536862730] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::PlantFlowerGetRecvFlowerListReq>((common::minet::Packet *const)(v3 + 32));
  if ( std::operator==<proto::PlantFlowerGetRecvFlowerListReq const>(
         (const std::shared_ptr<const proto::PlantFlowerGetRecvFlowerListReq> *)(v3 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v28,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerGetRecvFlowerListReq",
      2212);
    common::milog::MiLogStream::operator()(&v28, off_2504E040);
    common::milog::MiLogStream::~MiLogStream(&v28);
    FriendBrief = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::PlantFlowerGetRecvFlowerListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::PlantFlowerGetRecvFlowerListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    retcode = -1;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v3 + 64));
    conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64))->design_config.txt_config_mgr.new_activity_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 64));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    v7 = proto::PlantFlowerGetRecvFlowerListReq::schedule_id(req);
    NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
    PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v3 + 64), ActivityComp);
    if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v3 + 64))
      || (v8 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64)),
          !BaseActivity::isOpening(v8, 0)) )
    {
      common::milog::MiLogStream::create(
        &v28,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onPlantFlowerGetRecvFlowerListReq",
        2221);
      v10 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
              &v28,
              (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
      val = proto::PlantFlowerGetRecvFlowerListReq::schedule_id(req);
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      v20 = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &v20);
      common::milog::MiLogStream::~MiLogStream(&v28);
      retcode = 860;
      v13 = 0;
    }
    else
    {
      v14 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      PlantFlowerActivity::getRecvFlowerUids((std::set<unsigned int> *)(v3 + 96), v14);
      if ( std::set<unsigned int>::empty((const std::set<unsigned int> *const)(v3 + 96)) )
      {
        retcode = 0;
        v15 = 0;
      }
      else
      {
        proto::ServerGetFriendBriefReq::ServerGetFriendBriefReq((proto::ServerGetFriendBriefReq *const)(v3 + 176));
        __for_range = (std::set<unsigned int> *)(v3 + 96);
        __for_begin._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v3 + 96))._M_node;
        __for_end._M_node = std::set<unsigned int>::end((const std::set<unsigned int> *const)(v3 + 96))._M_node;
        while ( std::operator!=(&__for_begin, &__for_end) )
        {
          v16 = (uint32_t *)std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
          if ( *(_BYTE *)(((unsigned __int64)v16 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v16 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v16 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4();
          }
          uid = *v16;
          proto::ServerGetFriendBriefReq::add_uid_list((proto::ServerGetFriendBriefReq *const)(v3 + 176), uid);
          std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
        }
        proto::ServerGetFriendBriefReq::set_reason(
          (proto::ServerGetFriendBriefReq *const)(v3 + 176),
          FRIEND_BRIEF_REASON_PLANT_FLOWER_ACTIVITY);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        FriendBrief = sendProtoToSocialService<proto::ServerGetFriendBriefReq>(
                        this->player_,
                        (proto::ServerGetFriendBriefReq *)(v3 + 176));
        proto::ServerGetFriendBriefReq::~ServerGetFriendBriefReq((proto::ServerGetFriendBriefReq *const)(v3 + 176));
        v15 = 1;
      }
      std::set<unsigned int>::~set((std::set<unsigned int> *const)(v3 + 96));
      v13 = v15 != 0;
    }
    std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v3 + 64));
    if ( !v13 )
    {
      proto::PlantFlowerGetRecvFlowerListRsp::PlantFlowerGetRecvFlowerListRsp((proto::PlantFlowerGetRecvFlowerListRsp *const)(v3 + 256));
      v17 = proto::PlantFlowerGetRecvFlowerListReq::schedule_id(req);
      proto::PlantFlowerGetRecvFlowerListRsp::set_schedule_id(
        (proto::PlantFlowerGetRecvFlowerListRsp *const)(v3 + 256),
        v17);
      proto::PlantFlowerGetRecvFlowerListRsp::set_retcode(
        (proto::PlantFlowerGetRecvFlowerListRsp *const)(v3 + 256),
        retcode);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v3 + 256));
      FriendBrief = 0;
      proto::PlantFlowerGetRecvFlowerListRsp::~PlantFlowerGetRecvFlowerListRsp((proto::PlantFlowerGetRecvFlowerListRsp *const)(v3 + 256));
    }
  }
  std::shared_ptr<proto::PlantFlowerGetRecvFlowerListReq const>::~shared_ptr((std::shared_ptr<const proto::PlantFlowerGetRecvFlowerListReq> *const)(v3 + 32));
  result = FriendBrief;
  if ( v29 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF801C) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8024) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 2254: range 0000000013776B0E-0000000013776F2C
int32_t __cdecl ActivityHandler::onPlantFlowerAcceptGiveFlowerReq(
        ActivityHandler *const this,
        const proto::PlantFlowerAcceptGiveFlowerReq *req,
        proto::PlantFlowerAcceptGiveFlowerRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  google::protobuf::uint32 v15; // r14d
  PlantFlowerActivity *v16; // r14
  uint32_t v17; // ecx
  int32_t result; // eax
  unsigned int val; // [rsp+20h] [rbp-A0h] BYREF
  unsigned int Uid; // [rsp+24h] [rbp-9Ch] BYREF
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v23; // [rsp+30h] [rbp-90h] BYREF
  char v24[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v24;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2258";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPlantFlowerAcceptGiveFlowerReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::PlantFlowerAcceptGiveFlowerReq::schedule_id(req);
  proto::PlantFlowerAcceptGiveFlowerRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::PlantFlowerAcceptGiveFlowerReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v3 + 32))
    || (v9 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v23,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerAcceptGiveFlowerReq",
      2261);
    v11 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            &v23,
            (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
    val = proto::PlantFlowerAcceptGiveFlowerReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v23);
    v14 = 860;
  }
  else
  {
    v15 = proto::PlantFlowerAcceptGiveFlowerReq::uid(req);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    if ( v15 == Player::getUid(this->player_) )
    {
      common::milog::MiLogStream::create(
        &v23,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onPlantFlowerAcceptGiveFlowerReq",
        2266);
      common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(&v23, (const char (*)[22])"target cannot be self");
      common::milog::MiLogStream::~MiLogStream(&v23);
      v14 = -1;
    }
    else
    {
      v16 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v17 = proto::PlantFlowerAcceptGiveFlowerReq::uid(req);
      v14 = PlantFlowerActivity::onAcceptGiveFlowerReq(v16, v17, rsp_0);
    }
  }
  std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v3 + 32));
  result = v14;
  if ( v24 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2273: range 0000000013776F2E-000000001377726F
int32_t __cdecl ActivityHandler::onPlantFlowerAcceptAllGiveFlowerReq(
        ActivityHandler *const this,
        const proto::PlantFlowerAcceptAllGiveFlowerReq *req,
        proto::PlantFlowerAcceptAllGiveFlowerRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  PlantFlowerActivity *v15; // rdx
  int32_t result; // eax
  unsigned int val; // [rsp+20h] [rbp-A0h] BYREF
  unsigned int Uid; // [rsp+24h] [rbp-9Ch] BYREF
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v21; // [rsp+30h] [rbp-90h] BYREF
  char v22[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2277";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPlantFlowerAcceptAllGiveFlowerReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::PlantFlowerAcceptAllGiveFlowerReq::schedule_id(req);
  proto::PlantFlowerAcceptAllGiveFlowerRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::PlantFlowerAcceptAllGiveFlowerReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v3 + 32))
    || (v9 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v21,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerAcceptAllGiveFlowerReq",
      2280);
    v11 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            &v21,
            (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
    val = proto::PlantFlowerAcceptAllGiveFlowerReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v21);
    v14 = 860;
  }
  else
  {
    v15 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v14 = PlantFlowerActivity::onAcceptAllGiveFlowerReq(v15, rsp_0);
  }
  std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v3 + 32));
  result = v14;
  if ( v22 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2287: range 0000000013777270-00000000137775B9
int32_t __cdecl ActivityHandler::onPlantFlowerGetCanGiveFriendFlowerReq(
        ActivityHandler *const this,
        const proto::PlantFlowerGetCanGiveFriendFlowerReq *req,
        proto::PlantFlowerGetCanGiveFriendFlowerRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t CanGiveFriendFlower; // r14d
  PlantFlowerActivity *v15; // r14
  google::protobuf::Map<unsigned int,unsigned int> *v16; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+20h] [rbp-A0h] BYREF
  unsigned int Uid; // [rsp+24h] [rbp-9Ch] BYREF
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v22; // [rsp+30h] [rbp-90h] BYREF
  char v23[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2291";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPlantFlowerGetCanGiveFriendFlowerReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::PlantFlowerGetCanGiveFriendFlowerReq::schedule_id(req);
  proto::PlantFlowerGetCanGiveFriendFlowerRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::PlantFlowerGetCanGiveFriendFlowerReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v3 + 32))
    || (v9 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v22,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerGetCanGiveFriendFlowerReq",
      2294);
    v11 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            &v22,
            (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
    val = proto::PlantFlowerGetCanGiveFriendFlowerReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v22);
    CanGiveFriendFlower = 860;
  }
  else
  {
    v15 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v16 = proto::PlantFlowerGetCanGiveFriendFlowerRsp::mutable_flower_num_map(rsp_0);
    CanGiveFriendFlower = PlantFlowerActivity::getCanGiveFriendFlower(v15, v16);
  }
  std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v3 + 32));
  result = CanGiveFriendFlower;
  if ( v23 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2301: range 00000000137775BA-0000000013777902
int32_t __cdecl ActivityHandler::onPlantFlowerEditFlowerCombinationReq(
        ActivityHandler *const this,
        const proto::PlantFlowerEditFlowerCombinationReq *req,
        proto::PlantFlowerEditFlowerCombinationRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  PlantFlowerActivity *v15; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+20h] [rbp-A0h] BYREF
  unsigned int Uid; // [rsp+24h] [rbp-9Ch] BYREF
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v21; // [rsp+30h] [rbp-90h] BYREF
  char v22[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2305";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPlantFlowerEditFlowerCombinationReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::PlantFlowerEditFlowerCombinationReq::schedule_id(req);
  proto::PlantFlowerEditFlowerCombinationRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::PlantFlowerEditFlowerCombinationReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findActivity<PlantFlowerActivity>((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<PlantFlowerActivity>(0LL, (const std::shared_ptr<PlantFlowerActivity> *)(v3 + 32))
    || (v9 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v21,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPlantFlowerEditFlowerCombinationReq",
      2308);
    v11 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            &v21,
            (const char (*)[53])"[PLANT_FLOWER] activity is not opening, schedule_id:");
    val = proto::PlantFlowerEditFlowerCombinationReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v21);
    v14 = 860;
  }
  else
  {
    v15 = std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PlantFlowerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v14 = PlantFlowerActivity::onEditFlowerCombinationReq(v15, req, rsp_0);
  }
  std::shared_ptr<PlantFlowerActivity>::~shared_ptr((std::shared_ptr<PlantFlowerActivity> *const)(v3 + 32));
  result = v14;
  if ( v22 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2316: range 0000000013777904-0000000013777AB1
int32_t __cdecl ActivityHandler::onMusicGameStartReq(
        ActivityHandler *const this,
        const proto::MusicGameStartReq *req,
        proto::MusicGameStartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t started; // r14d
  MusicGameActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2317";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMusicGameStartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MusicGameActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MusicGameActivity>((const std::shared_ptr<MusicGameActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    started = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    started = MusicGameActivity::startMusicGame(v9, req, rsp_0);
  }
  std::shared_ptr<MusicGameActivity>::~shared_ptr((std::shared_ptr<MusicGameActivity> *const)(v3 + 32));
  result = started;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2326: range 0000000013777AB2-0000000013777C5F
int32_t __cdecl ActivityHandler::onMusicGameSettleReq(
        ActivityHandler *const this,
        const proto::MusicGameSettleReq *req,
        proto::MusicGameSettleRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  MusicGameActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2327";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMusicGameSettleReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MusicGameActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MusicGameActivity>((const std::shared_ptr<MusicGameActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MusicGameActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = MusicGameActivity::settleMusicGame(v9, req, rsp_0);
  }
  std::shared_ptr<MusicGameActivity>::~shared_ptr((std::shared_ptr<MusicGameActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2336: range 0000000013777C60-0000000013777E0D
int32_t __cdecl ActivityHandler::onDoRoguelikeDungeonCardGachaReq(
        ActivityHandler *const this,
        const proto::DoRoguelikeDungeonCardGachaReq *req,
        proto::DoRoguelikeDungeonCardGachaRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RoguelikeDungeonActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2337";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onDoRoguelikeDungeonCardGachaReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = RoguelikeDungeonActivity::doRoguelikeDungeonCardGacha(v9, req, rsp_0);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2346: range 0000000013777E0E-0000000013777FBB
int32_t __cdecl ActivityHandler::onRefreshRoguelikeDungeonCardReq(
        ActivityHandler *const this,
        const proto::RefreshRoguelikeDungeonCardReq *req,
        proto::RefreshRoguelikeDungeonCardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t refreshed; // r14d
  RoguelikeDungeonActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2347";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRefreshRoguelikeDungeonCardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    refreshed = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    refreshed = RoguelikeDungeonActivity::refreshRoguelikeDungeonCard(v9, req, rsp_0);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = refreshed;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2356: range 0000000013777FBC-0000000013778169
int32_t __cdecl ActivityHandler::onSelectRoguelikeDungeonCardReq(
        ActivityHandler *const this,
        const proto::SelectRoguelikeDungeonCardReq *req,
        proto::SelectRoguelikeDungeonCardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RoguelikeDungeonActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2357";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSelectRoguelikeDungeonCardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = RoguelikeDungeonActivity::selectRoguelikeDungeonCard(v9, req, rsp_0);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2366: range 000000001377816A-0000000013778306
int32_t __cdecl ActivityHandler::onGiveUpRoguelikeDungeonCardReq(
        ActivityHandler *const this,
        const proto::GiveUpRoguelikeDungeonCardReq *req,
        proto::GiveUpRoguelikeDungeonCardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RoguelikeDungeonActivity *v9; // rax
  int32_t result; // eax
  char v11[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2367";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGiveUpRoguelikeDungeonCardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = RoguelikeDungeonActivity::giveUpRoguelikeDungeonCard(v9);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2376: range 0000000013778308-00000000137784B5
int32_t __cdecl ActivityHandler::onEquipRoguelikeRuneReq(
        ActivityHandler *const this,
        const proto::EquipRoguelikeRuneReq *req,
        proto::EquipRoguelikeRuneRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RoguelikeDungeonActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2377";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEquipRoguelikeRuneReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = RoguelikeDungeonActivity::equipRoguelikeRune(v9, req, rsp_0);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2386: range 00000000137784B6-0000000013778663
int32_t __cdecl ActivityHandler::onTriggerRoguelikeRuneReq(
        ActivityHandler *const this,
        const proto::TriggerRoguelikeRuneReq *req,
        proto::TriggerRoguelikeRuneRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RoguelikeDungeonActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2387";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTriggerRoguelikeRuneReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = RoguelikeDungeonActivity::triggerRoguelikeRune(v9, req, rsp_0);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2396: range 0000000013778664-0000000013778811
int32_t __cdecl ActivityHandler::onUpgradeRoguelikeShikigamiReq(
        ActivityHandler *const this,
        const proto::UpgradeRoguelikeShikigamiReq *req,
        proto::UpgradeRoguelikeShikigamiRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RoguelikeDungeonActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2397";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onUpgradeRoguelikeShikigamiReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = RoguelikeDungeonActivity::upgradeRoguelikeShikigami(v9, req, rsp_0);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2406: range 0000000013778812-00000000137789C7
int32_t __cdecl ActivityHandler::onRoguelikeEffectViewReq(
        ActivityHandler *const this,
        const proto::RoguelikeEffectViewReq *req,
        proto::RoguelikeEffectViewRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RoguelikeDungeonActivity *v9; // rax
  RoguelikeMiscMgr *RoguelikeMiscMgr; // rcx
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2407";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRoguelikeEffectViewReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    RoguelikeMiscMgr = RoguelikeDungeonActivity::getRoguelikeMiscMgr(v9);
    v8 = RoguelikeMiscMgr::onRoguelikeEffectViewReq(RoguelikeMiscMgr, req, rsp_0);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2416: range 00000000137789C8-0000000013778B75
int32_t __cdecl ActivityHandler::onRoguelikeSelectAvatarAndEnterDungeonReq(
        ActivityHandler *const this,
        const proto::RoguelikeSelectAvatarAndEnterDungeonReq *req,
        proto::RoguelikeSelectAvatarAndEnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t inited; // r14d
  RoguelikeDungeonActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2417";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRoguelikeSelectAvatarAndEnterDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    inited = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    inited = RoguelikeDungeonActivity::selectAvatarAndEnterInitDungeon(v9, req, rsp_0);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = inited;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2426: range 0000000013778B76-0000000013778F4E
int32_t __cdecl ActivityHandler::onStartRogueNormalCellChallengeReq(
        ActivityHandler *const this,
        const proto::StartRogueNormalCellChallengeReq *req,
        proto::StartRogueNormalCellChallengeRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t started; // r14d
  RoguelikeDungeonActivity *v9; // rax
  bool v10; // r14
  uint32_t v11; // r14d
  uint32_t v12; // ecx
  int32_t result; // eax
  RogueLikeDungeonRuntimeMgr *runtime_mgr; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<DungeonScene> p_dungeon_scene_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v16; // [rsp+40h] [rbp-B0h] BYREF
  char v17[144]; // [rsp+60h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 17 activity_ptr:2427 64 16 22 dungeon_scene_ptr:2433";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onStartRogueNormalCellChallengeReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    started = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getDungeonComp(this->player_);
    PlayerDungeonComp::getCurDungeon((PlayerDungeonComp *const)(v3 + 64));
    if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v16,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onStartRogueNormalCellChallengeReq",
        2436);
      common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
        &v16,
        (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
      common::milog::MiLogStream::~MiLogStream(&v16);
      started = 10038;
    }
    else
    {
      v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      runtime_mgr = RoguelikeDungeonActivity::getRogueDungeonRuntimeMgr(v9);
      std::shared_ptr<DungeonScene>::shared_ptr(&p_dungeon_scene_ptr, (const std::shared_ptr<DungeonScene> *)(v3 + 64));
      v10 = !RogueLikeDungeonRuntimeMgr::isPlayerInDungeon(runtime_mgr, &p_dungeon_scene_ptr);
      std::shared_ptr<DungeonScene>::~shared_ptr(&p_dungeon_scene_ptr);
      if ( v10 )
      {
        common::milog::MiLogStream::create(
          &v16,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/handler/activity_handler.cpp",
          "onStartRogueNormalCellChallengeReq",
          2442);
        common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
          &v16,
          (const char (*)[31])"[ROGUE] dungeon type incorrect");
        common::milog::MiLogStream::~MiLogStream(&v16);
        started = 10038;
      }
      else
      {
        v11 = proto::StartRogueNormalCellChallengeReq::cell_id(req);
        v12 = proto::StartRogueNormalCellChallengeReq::dungeon_id(req);
        started = RogueLikeDungeonRuntimeMgr::onClientStartNormalChallenge(runtime_mgr, v12, v11);
      }
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 64));
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = started;
  if ( v17 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2449: range 0000000013778F50-000000001377936C
int32_t __cdecl ActivityHandler::onRogueHealAvatarsReq(
        ActivityHandler *const this,
        const proto::RogueHealAvatarsReq *req,
        proto::RogueHealAvatarsRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  int32_t v10; // r14d
  RoguelikeDungeonActivity *v11; // rax
  bool v12; // r14
  uint32_t v13; // r14d
  uint32_t v14; // ecx
  int32_t result; // eax
  RogueLikeDungeonRuntimeMgr *runtime_mgr; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<DungeonScene> p_dungeon_scene_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v19; // [rsp+40h] [rbp-B0h] BYREF
  char v20[144]; // [rsp+60h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v20;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 17 activity_ptr:2452 64 16 22 dungeon_scene_ptr:2458";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRogueHealAvatarsReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  v6 = proto::RogueHealAvatarsReq::cell_id(req);
  proto::RogueHealAvatarsRsp::set_cell_id(rsp_0, v6);
  v7 = proto::RogueHealAvatarsReq::dungeon_id(req);
  proto::RogueHealAvatarsRsp::set_dungeon_id(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v8 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v8, 0)) )
  {
    v10 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getDungeonComp(this->player_);
    PlayerDungeonComp::getCurDungeon((PlayerDungeonComp *const)(v3 + 64));
    if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v19,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onRogueHealAvatarsReq",
        2461);
      common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
        &v19,
        (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
      common::milog::MiLogStream::~MiLogStream(&v19);
      v10 = 10038;
    }
    else
    {
      v11 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      runtime_mgr = RoguelikeDungeonActivity::getRogueDungeonRuntimeMgr(v11);
      std::shared_ptr<DungeonScene>::shared_ptr(&p_dungeon_scene_ptr, (const std::shared_ptr<DungeonScene> *)(v3 + 64));
      v12 = !RogueLikeDungeonRuntimeMgr::isPlayerInDungeon(runtime_mgr, &p_dungeon_scene_ptr);
      std::shared_ptr<DungeonScene>::~shared_ptr(&p_dungeon_scene_ptr);
      if ( v12 )
      {
        common::milog::MiLogStream::create(
          &v19,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/handler/activity_handler.cpp",
          "onRogueHealAvatarsReq",
          2467);
        common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
          &v19,
          (const char (*)[31])"[ROGUE] dungeon type incorrect");
        common::milog::MiLogStream::~MiLogStream(&v19);
        v10 = 10038;
      }
      else
      {
        v13 = proto::RogueHealAvatarsReq::cell_id(req);
        v14 = proto::RogueHealAvatarsReq::dungeon_id(req);
        v10 = RogueLikeDungeonRuntimeMgr::healOnstageAvatars(runtime_mgr, v14, v13);
      }
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 64));
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v10;
  if ( v20 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2474: range 000000001377936E-0000000013779761
int32_t __cdecl ActivityHandler::onStartRogueEliteCellChallengeReq(
        ActivityHandler *const this,
        const proto::StartRogueEliteCellChallengeReq *req,
        proto::StartRogueEliteCellChallengeRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t started; // r14d
  RoguelikeDungeonActivity *v9; // rax
  bool v10; // r14
  proto::RogueEliteCellDifficultyType v11; // r15d
  uint32_t v12; // r14d
  uint32_t v13; // esi
  int32_t result; // eax
  RogueLikeDungeonRuntimeMgr *runtime_mgr; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<DungeonScene> p_dungeon_scene_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v17; // [rsp+40h] [rbp-B0h] BYREF
  char v18[144]; // [rsp+60h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 17 activity_ptr:2475 64 16 22 dungeon_scene_ptr:2481";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onStartRogueEliteCellChallengeReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    started = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getDungeonComp(this->player_);
    PlayerDungeonComp::getCurDungeon((PlayerDungeonComp *const)(v3 + 64));
    if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v17,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onStartRogueEliteCellChallengeReq",
        2484);
      common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
        &v17,
        (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
      common::milog::MiLogStream::~MiLogStream(&v17);
      started = 10038;
    }
    else
    {
      v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      runtime_mgr = RoguelikeDungeonActivity::getRogueDungeonRuntimeMgr(v9);
      std::shared_ptr<DungeonScene>::shared_ptr(&p_dungeon_scene_ptr, (const std::shared_ptr<DungeonScene> *)(v3 + 64));
      v10 = !RogueLikeDungeonRuntimeMgr::isPlayerInDungeon(runtime_mgr, &p_dungeon_scene_ptr);
      std::shared_ptr<DungeonScene>::~shared_ptr(&p_dungeon_scene_ptr);
      if ( v10 )
      {
        common::milog::MiLogStream::create(
          &v17,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/handler/activity_handler.cpp",
          "onStartRogueEliteCellChallengeReq",
          2490);
        common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
          &v17,
          (const char (*)[31])"[ROGUE] dungeon type incorrect");
        common::milog::MiLogStream::~MiLogStream(&v17);
        started = 10038;
      }
      else
      {
        v11 = proto::StartRogueEliteCellChallengeReq::difficulty(req);
        v12 = proto::StartRogueEliteCellChallengeReq::cell_id(req);
        v13 = proto::StartRogueEliteCellChallengeReq::dungeon_id(req);
        started = RogueLikeDungeonRuntimeMgr::onClientStartEliteChallenge(runtime_mgr, v13, v12, v11);
      }
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 64));
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = started;
  if ( v18 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2497: range 0000000013779762-000000001377992E
int32_t __cdecl ActivityHandler::onRogueResumeDungeonReq(
        ActivityHandler *const this,
        const proto::RogueResumeDungeonReq *req,
        proto::RogueResumeDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  google::protobuf::uint32 v9; // edx
  RoguelikeDungeonActivity *v10; // r14
  uint32_t v11; // eax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2498";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRogueResumeDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = proto::RogueResumeDungeonReq::stage_id(req);
    proto::RogueResumeDungeonRsp::set_stage_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::RogueResumeDungeonReq::stage_id(req);
    v8 = RoguelikeDungeonActivity::resumeRoguelikeDungeon(v10, v11);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2508: range 0000000013779930-0000000013779B08
int32_t __cdecl ActivityHandler::onRoguelikeGiveUpReq(
        ActivityHandler *const this,
        const proto::RoguelikeGiveUpReq *req,
        proto::RoguelikeGiveUpRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  google::protobuf::uint32 v9; // edx
  RoguelikeDungeonActivity *v10; // r14
  uint32_t v11; // ecx
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2509";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRoguelikeGiveUpReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = proto::RoguelikeGiveUpReq::stage_id(req);
    proto::RoguelikeGiveUpRsp::set_stage_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::RoguelikeGiveUpReq::stage_id(req);
    v8 = RoguelikeDungeonActivity::giveUpRoguelikeDungeon(v10, v11, rsp_0);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2519: range 0000000013779B0A-0000000013779ECB
int32_t __cdecl ActivityHandler::onRogueSwitchAvatarReq(
        ActivityHandler *const this,
        const proto::RogueSwitchAvatarReq *req,
        proto::RogueSwitchAvatarRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RoguelikeDungeonActivity *v9; // rax
  bool v10; // r14
  int32_t result; // eax
  RogueLikeDungeonRuntimeMgr *runtime_mgr; // [rsp+28h] [rbp-C8h]
  std::shared_ptr<DungeonScene> p_dungeon_scene_ptr; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v15; // [rsp+40h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+60h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 17 activity_ptr:2520 64 16 22 dungeon_scene_ptr:2525";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRogueSwitchAvatarReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getDungeonComp(this->player_);
    PlayerDungeonComp::getCurDungeon((PlayerDungeonComp *const)(v3 + 64));
    if ( std::operator==<DungeonScene>((const std::shared_ptr<DungeonScene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v15,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onRogueSwitchAvatarReq",
        2528);
      common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
        &v15,
        (const char (*)[37])"[ROGUE] dungeon_scene_ptr is nullptr");
      common::milog::MiLogStream::~MiLogStream(&v15);
      v8 = 10038;
    }
    else
    {
      v9 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      runtime_mgr = RoguelikeDungeonActivity::getRogueDungeonRuntimeMgr(v9);
      std::shared_ptr<DungeonScene>::shared_ptr(&p_dungeon_scene_ptr, (const std::shared_ptr<DungeonScene> *)(v3 + 64));
      v10 = !RogueLikeDungeonRuntimeMgr::isPlayerInDungeon(runtime_mgr, &p_dungeon_scene_ptr);
      std::shared_ptr<DungeonScene>::~shared_ptr(&p_dungeon_scene_ptr);
      if ( v10 )
      {
        common::milog::MiLogStream::create(
          &v15,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/handler/activity_handler.cpp",
          "onRogueSwitchAvatarReq",
          2534);
        common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
          &v15,
          (const char (*)[31])"[ROGUE] dungeon type incorrect");
        common::milog::MiLogStream::~MiLogStream(&v15);
        v8 = 10038;
      }
      else
      {
        v8 = RogueLikeDungeonRuntimeMgr::switchAvatar(runtime_mgr, req, rsp_0);
      }
    }
    std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)(v3 + 64));
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = v8;
  if ( v16 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 2541: range 0000000013779ECC-000000001377A098
int32_t __cdecl ActivityHandler::onRoguelikeTakeStageFirstPassRewardReq(
        ActivityHandler *const this,
        const proto::RoguelikeTakeStageFirstPassRewardReq *req,
        proto::RoguelikeTakeStageFirstPassRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t PassReward; // r14d
  google::protobuf::uint32 v9; // edx
  RoguelikeDungeonActivity *v10; // r14
  uint32_t v11; // eax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2542";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRoguelikeTakeStageFirstPassRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RoguelikeDungeonActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RoguelikeDungeonActivity>((const std::shared_ptr<RoguelikeDungeonActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    PassReward = 860;
  }
  else
  {
    v9 = proto::RoguelikeTakeStageFirstPassRewardReq::stage_id(req);
    proto::RoguelikeTakeStageFirstPassRewardRsp::set_stage_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RoguelikeDungeonActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::RoguelikeTakeStageFirstPassRewardReq::stage_id(req);
    PassReward = RoguelikeDungeonActivity::takeStageFirstPassReward(v10, v11);
  }
  std::shared_ptr<RoguelikeDungeonActivity>::~shared_ptr((std::shared_ptr<RoguelikeDungeonActivity> *const)(v3 + 32));
  result = PassReward;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2552: range 000000001377A09A-000000001377A79C
int32_t __cdecl ActivityHandler::onDigActivityChangeGadgetStateReq(
        ActivityHandler *const this,
        const proto::DigActivityChangeGadgetStateReq *req,
        proto::DigActivityChangeGadgetStateRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::__shared_ptr_access<DigActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  uint32_t v9; // eax
  common::milog::MiLogStream *v10; // rax
  ActivityGroupLinksExcelConfigMgr *p_activity_group_links_config_mgr; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  uint32_t GroupId; // eax
  common::milog::MiLogStream *v14; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  DigActivity *v16; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // rax
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v18; // rax
  common::milog::MiLogStream *v20; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // r14
  std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  Gadget *v29; // rax
  int32_t result; // eax
  unsigned int v32; // [rsp+24h] [rbp-12Ch] BYREF
  unsigned int val; // [rsp+28h] [rbp-128h] BYREF
  uint32_t bundle_id; // [rsp+2Ch] [rbp-124h]
  std::shared_ptr<Config> v35; // [rsp+30h] [rbp-120h] BYREF
  common::milog::MiLogStream v36; // [rsp+40h] [rbp-110h] BYREF
  char v37[240]; // [rsp+60h] [rbp-F0h] BYREF

  v3 = (unsigned __int64)v37;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "6 48 4 14 entity_id:2558 64 4 13 group_id:2579 80 4 14 config_id:2580 96 16 17 activity_ptr:2553"
                        " 128 16 14 scene_ptr:2560 160 16 15 gadget_ptr:2566";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onDigActivityChangeGadgetStateReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -234556924;
  v5[536862723] = -219021312;
  v5[536862724] = -219021312;
  v5[536862725] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<DigActivity>((PlayerActivityComp *const)(v3 + 96));
  if ( std::operator==<DigActivity>((const std::shared_ptr<DigActivity> *)(v3 + 96), 0LL)
    || (v6 = std::__shared_ptr_access<DigActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DigActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    *(_DWORD *)(v3 + 48) = proto::DigActivityChangeGadgetStateReq::entity_id(req);
    proto::DigActivityChangeGadgetStateRsp::set_entity_id(rsp_0, *(_DWORD *)(v3 + 48));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 128));
    if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v3 + 128)) )
    {
      common::milog::MiLogStream::create(
        &v36,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onDigActivityChangeGadgetStateReq",
        2563);
      common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(&v36, (const char (*)[19])off_2504E820);
      common::milog::MiLogStream::~MiLogStream(&v36);
      v8 = 555;
    }
    else
    {
      v9 = (unsigned int)std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
      Scene::findEntity<Gadget>((const Scene *const)(v3 + 160), v9);
      if ( std::operator==<Gadget>((const std::shared_ptr<Gadget> *)(v3 + 160), 0LL) )
      {
        common::milog::MiLogStream::create(
          &v36,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/handler/activity_handler.cpp",
          "onDigActivityChangeGadgetStateReq",
          2569);
        v10 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(&v36, (const char (*)[31])off_2504E860);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, (const unsigned int *)(v3 + 48));
        common::milog::MiLogStream::~MiLogStream(&v36);
        v8 = 504;
      }
      else
      {
        ServiceBox::findService<GameserverService>();
        GameserverService::getConfig((GameserverService *const)&v35);
        p_activity_group_links_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v35)->design_config.txt_config_mgr.activity_group_links_config_mgr;
        v12 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
        GroupId = Entity::getGroupId((const Entity *const)v12);
        bundle_id = ActivityGroupLinksExcelConfigMgr::getBundleIdByGroupId(p_activity_group_links_config_mgr, GroupId);
        std::shared_ptr<Config>::~shared_ptr(&v35);
        if ( bundle_id )
        {
          *(_DWORD *)(v3 + 64) = 0;
          *(_DWORD *)(v3 + 80) = 0;
          v16 = std::__shared_ptr_access<DigActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DigActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          DigActivity::getSearchingTarget(v16, bundle_id, (uint32_t *)(v3 + 64), (uint32_t *)(v3 + 80));
          v17 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
          if ( Entity::getGroupId((const Entity *const)v17) != *(_DWORD *)(v3 + 64)
            || (v18 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160)),
                Entity::getConfigId((const Entity *const)v18) != *(_DWORD *)(v3 + 80)) )
          {
            common::milog::MiLogStream::create(
              &v36,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/handler/activity_handler.cpp",
              "onDigActivityChangeGadgetStateReq",
              2584);
            v20 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                    &v36,
                    (const char (*)[56])"[DIG]group id or config id not match. gadget group_id: ");
            v21 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
            v32 = Entity::getGroupId((const Entity *const)v21);
            v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v20, &v32);
            v23 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v22,
                    (const char (*)[13])" config_id: ");
            v24 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
            val = Entity::getConfigId((const Entity *const)v24);
            v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v23, &val);
            v26 = common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
                    v25,
                    (const char (*)[22])" activity: group_id: ");
            v27 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                    v26,
                    (const unsigned int *)(v3 + 64));
            v28 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(
                    v27,
                    (const char (*)[13])" config_id: ");
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v28, (const unsigned int *)(v3 + 80));
            common::milog::MiLogStream::~MiLogStream(&v36);
            v8 = 10015;
          }
          else
          {
            v29 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
            Gadget::setState(v29, 0xC9u, 0, 1);
            v8 = 0;
          }
        }
        else
        {
          common::milog::MiLogStream::create(
            &v36,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/handler/activity_handler.cpp",
            "onDigActivityChangeGadgetStateReq",
            2576);
          v14 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
                  &v36,
                  (const char (*)[50])"[DIG]finishGroupBundleByGroupId fail. group id : ");
          v15 = std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Gadget,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 160));
          val = Entity::getGroupId((const Entity *const)v15);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &val);
          common::milog::MiLogStream::~MiLogStream(&v36);
          v8 = 556;
        }
      }
      std::shared_ptr<Gadget>::~shared_ptr((std::shared_ptr<Gadget> *const)(v3 + 160));
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 128));
  }
  std::shared_ptr<DigActivity>::~shared_ptr((std::shared_ptr<DigActivity> *const)(v3 + 96));
  result = v8;
  if ( v37 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2593: range 000000001377A79E-000000001377AA39
int32_t __cdecl ActivityHandler::onWinterCampSetWishListReq(
        ActivityHandler *const this,
        const proto::WinterCampSetWishListReq *req,
        proto::WinterCampSetWishListRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  const google::protobuf::RepeatedField<unsigned int> *v9; // rax
  WinterCampActivity *v10; // rax
  google::protobuf::RepeatedField<unsigned int> *v11; // r14
  const google::protobuf::RepeatedField<unsigned int> *v12; // rax
  int32_t result; // eax
  int32_t ret; // [rsp+2Ch] [rbp-D4h]
  char v16[208]; // [rsp+30h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 16 17 activity_ptr:2594 80 48 16 item_id_set:2599";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWinterCampSetWishListReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61937;
  v5[536862722] = 62194;
  v5[536862724] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 48));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 48), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    std::set<unsigned int>::set((std::set<unsigned int> *const)(v3 + 80));
    v9 = proto::WinterCampSetWishListReq::item_id_list(req);
    common::tools::MiscUtils::setFromRepeated<std::set<unsigned int>,unsigned int>(
      (std::set<unsigned int> *)(v3 + 80),
      v9);
    v10 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
    ret = WinterCampActivity::setWishSet(v10, (const std::set<unsigned int> *)(v3 + 80));
    if ( !ret )
    {
      v11 = proto::WinterCampSetWishListRsp::mutable_item_id_list(rsp_0);
      v12 = proto::WinterCampSetWishListReq::item_id_list(req);
      google::protobuf::RepeatedField<unsigned int>::CopyFrom(v11, v12);
    }
    v8 = ret;
    std::set<unsigned int>::~set((std::set<unsigned int> *const)(v3 + 80));
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 48));
  result = v8;
  if ( v16 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 2610: range 000000001377AA3A-000000001377AC04
int32_t __cdecl ActivityHandler::onWinterCampAcceptGiveItemReq(
        ActivityHandler *const this,
        const proto::WinterCampAcceptGiveItemReq *req,
        proto::WinterCampAcceptGiveItemRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  WinterCampActivity *v9; // r14
  proto::WinterCampAcceptItemResultInfo *v10; // r15
  uint32_t v11; // eax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2611";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWinterCampAcceptGiveItemReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::WinterCampAcceptGiveItemRsp::mutable_accept_item_result_info(rsp_0);
    v11 = proto::WinterCampAcceptGiveItemReq::uid(req);
    v8 = WinterCampActivity::onAcceptRecvItem(v9, v11, v10);
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 32));
  result = v8;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2620: range 000000001377AC06-000000001377ADAF
int32_t __cdecl ActivityHandler::onWinterCampAcceptAllGiveItemReq(
        ActivityHandler *const this,
        const proto::WinterCampAcceptAllGiveItemReq *req,
        proto::WinterCampAcceptAllGiveItemRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  WinterCampActivity *v9; // rdx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2621";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWinterCampAcceptAllGiveItemReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = WinterCampActivity::onAcceptAllRecvItemReq(v9, rsp_0);
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2630: range 000000001377ADB0-000000001377AF61
int32_t __cdecl ActivityHandler::onWinterCampGetCanGiveFriendItemReq(
        ActivityHandler *const this,
        const proto::WinterCampGetCanGiveFriendItemReq *req,
        proto::WinterCampGetCanGiveFriendItemRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t CanGiveItem; // r14d
  WinterCampActivity *v9; // r14
  google::protobuf::RepeatedPtrField<proto::ItemParam> *v10; // rax
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2631";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWinterCampGetCanGiveFriendItemReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    CanGiveItem = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::WinterCampGetCanGiveFriendItemRsp::mutable_item_list(rsp_0);
    CanGiveItem = WinterCampActivity::fillCanGiveItem(v9, v10);
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 32));
  result = CanGiveItem;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2641: range 000000001377AF62-000000001377B108
int32_t __cdecl ActivityHandler::onWinterCampEditSnowmanCombinationReq(
        ActivityHandler *const this,
        const proto::WinterCampEditSnowmanCombinationReq *req,
        proto::WinterCampEditSnowmanCombinationRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  WinterCampActivity *v9; // rdx
  int32_t result; // eax
  char v11[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2642";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWinterCampEditSnowmanCombinationReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = WinterCampActivity::onEditSnowmanCombinationReq(v9, req);
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 32));
  result = v8;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2651: range 000000001377B10A-000000001377B2D6
int32_t __cdecl ActivityHandler::onWinterCampTakeExploreRewardReq(
        ActivityHandler *const this,
        const proto::WinterCampTakeExploreRewardReq *req,
        proto::WinterCampTakeExploreRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  google::protobuf::uint32 v9; // edx
  WinterCampActivity *v10; // r14
  uint32_t v11; // eax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2652";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWinterCampTakeExploreRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = proto::WinterCampTakeExploreRewardReq::id(req);
    proto::WinterCampTakeExploreRewardRsp::set_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::WinterCampTakeExploreRewardReq::id(req);
    v8 = WinterCampActivity::takeExploreReward(v10, v11);
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 32));
  result = v8;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2662: range 000000001377B2D8-000000001377B4A4
int32_t __cdecl ActivityHandler::onWinterCampTakeBattleRewardReq(
        ActivityHandler *const this,
        const proto::WinterCampTakeBattleRewardReq *req,
        proto::WinterCampTakeBattleRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  google::protobuf::uint32 v9; // edx
  WinterCampActivity *v10; // r14
  uint32_t v11; // eax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2663";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWinterCampTakeBattleRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = proto::WinterCampTakeBattleRewardReq::id(req);
    proto::WinterCampTakeBattleRewardRsp::set_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::WinterCampTakeBattleRewardReq::id(req);
    v8 = WinterCampActivity::takeBattleReward(v10, v11);
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 32));
  result = v8;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2673: range 000000001377B4A6-000000001377B67C
int32_t __cdecl ActivityHandler::onWinterCampTriathlonRestartReq(
        ActivityHandler *const this,
        const proto::WinterCampTriathlonRestartReq *req,
        proto::WinterCampTriathlonRestartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  WinterCampActivity *v9; // rax
  int32_t result; // eax
  uint32_t gallery_id; // [rsp+2Ch] [rbp-74h]
  char v13[112]; // [rsp+30h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2676";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWinterCampTriathlonRestartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  gallery_id = proto::WinterCampTriathlonRestartReq::gallery_id(req);
  proto::WinterCampTriathlonRestartRsp::set_gallery_id(rsp_0, gallery_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = WinterCampActivity::triathlonRestart(v9, gallery_id);
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 32));
  result = v8;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2685: range 000000001377B67E-000000001377BA9E
int32_t __cdecl ActivityHandler::onWinterCampGetFriendWishListReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v5; // rax
  PlayerSocialComp *SocialComp; // rax
  google::protobuf::RepeatedField<unsigned int> *v8; // rax
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  uint32_t ScheduleId; // eax
  int32_t result; // eax
  google::protobuf::int32 retcode; // [rsp+1Ch] [rbp-114h]
  char v13[272]; // [rsp+20h] [rbp-110h] BYREF

  v2 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(224LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 48 16 17 activity_ptr:2689 80 24 19 friend_uid_vec:2696 144 48 8 rsp:2705";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onWinterCampGetFriendWishListReq;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862722] = 62194;
  v4[536862723] = -218959360;
  v4[536862724] = 62194;
  v4[536862726] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v2 + 48));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v2 + 48), 0LL)
    || (v5 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 48)),
        !BaseActivity::isOpening((const BaseActivity *const)v5, 0)) )
  {
    retcode = 860;
  }
  else
  {
    proto::ServerWinterCampGetFriendWishListReq::ServerWinterCampGetFriendWishListReq((proto::ServerWinterCampGetFriendWishListReq *const)(v2 + 144));
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 80));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    SocialComp = Player::getSocialComp(this->player_);
    PlayerSocialComp::fillPlayerFriendList(SocialComp, (std::vector<unsigned int> *)(v2 + 80));
    v8 = proto::ServerWinterCampGetFriendWishListReq::mutable_friend_uid_list((proto::ServerWinterCampGetFriendWishListReq *const)(v2 + 144));
    common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
      (const std::vector<unsigned int> *)(v2 + 80),
      v8);
    v9 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 48));
    ScheduleId = BaseActivity::getScheduleId((const BaseActivity *const)v9);
    proto::ServerWinterCampGetFriendWishListReq::set_schedule_id(
      (proto::ServerWinterCampGetFriendWishListReq *const)(v2 + 144),
      ScheduleId);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    retcode = sendProtoToSocialService<proto::ServerWinterCampGetFriendWishListReq>(
                this->player_,
                (proto::ServerWinterCampGetFriendWishListReq *)(v2 + 144));
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 80));
    proto::ServerWinterCampGetFriendWishListReq::~ServerWinterCampGetFriendWishListReq((proto::ServerWinterCampGetFriendWishListReq *const)(v2 + 144));
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v2 + 48));
  if ( retcode )
  {
    proto::WinterCampGetFriendWishListRsp::WinterCampGetFriendWishListRsp((proto::WinterCampGetFriendWishListRsp *const)(v2 + 144));
    proto::WinterCampGetFriendWishListRsp::set_retcode(
      (proto::WinterCampGetFriendWishListRsp *const)(v2 + 144),
      retcode);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 144));
    proto::WinterCampGetFriendWishListRsp::~WinterCampGetFriendWishListRsp((proto::WinterCampGetFriendWishListRsp *const)(v2 + 144));
  }
  result = retcode;
  if ( v13 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 2713: range 000000001377BAA0-000000001377C018
int32_t __cdecl ActivityHandler::onServerWinterCampGetFriendWishListRsp(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int v8; // r14d
  int v9; // r14d
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  uint32_t ScheduleId; // r14d
  common::milog::MiLogStream *v12; // r14
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // r14
  google::protobuf::RepeatedPtrField<proto::WinterCampFriendWishData> *v16; // r14
  const google::protobuf::RepeatedPtrField<proto::WinterCampFriendWishData> *v17; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-124h] BYREF
  unsigned int v20; // [rsp+30h] [rbp-120h] BYREF
  int32_t retcode; // [rsp+34h] [rbp-11Ch]
  const proto::ServerWinterCampGetFriendWishListRsp *server_rsp; // [rsp+38h] [rbp-118h]
  common::milog::MiLogStream v23; // [rsp+40h] [rbp-110h] BYREF
  char v24[240]; // [rsp+60h] [rbp-F0h] BYREF

  v3 = (unsigned __int64)v24;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 16 17 activity_ptr:2718 80 16 19 server_rsp_ptr:2725 112 48 8 rsp:2715";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onServerWinterCampGetFriendWishListRsp;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61937;
  v5[536862722] = 62194;
  v5[536862723] = 62194;
  v5[536862725] = -202116109;
  retcode = 0;
  proto::WinterCampGetFriendWishListRsp::WinterCampGetFriendWishListRsp((proto::WinterCampGetFriendWishListRsp *const)(v3 + 112));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 48));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 48), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    common::milog::MiLogStream::create(
      &v23,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onServerWinterCampGetFriendWishListRsp",
      2721);
    common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
      &v23,
      (const char (*)[30])"WinterCampActivity not open. ");
    common::milog::MiLogStream::~MiLogStream(&v23);
    retcode = 860;
    v8 = 0;
  }
  else
  {
    std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    common::minet::Packet::getConstProto<proto::ServerWinterCampGetFriendWishListRsp>((common::minet::Packet *const)(v3 + 80));
    if ( std::operator==<proto::ServerWinterCampGetFriendWishListRsp const>(
           (const std::shared_ptr<const proto::ServerWinterCampGetFriendWishListRsp> *)(v3 + 80),
           0LL) )
    {
      common::milog::MiLogStream::create(
        &v23,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onServerWinterCampGetFriendWishListRsp",
        2725);
      common::milog::MiLogStream::operator()(&v23, off_2504EC40);
      common::milog::MiLogStream::~MiLogStream(&v23);
      v2 = -1;
      v9 = 0;
    }
    else
    {
      server_rsp = std::__shared_ptr_access<proto::ServerWinterCampGetFriendWishListRsp const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ServerWinterCampGetFriendWishListRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80));
      v10 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
      ScheduleId = BaseActivity::getScheduleId((const BaseActivity *const)v10);
      if ( ScheduleId == proto::ServerWinterCampGetFriendWishListRsp::schedule_id(server_rsp) )
      {
        v16 = proto::WinterCampGetFriendWishListRsp::mutable_wish_data_list((proto::WinterCampGetFriendWishListRsp *const)(v3 + 112));
        v17 = proto::ServerWinterCampGetFriendWishListRsp::wish_data_list(server_rsp);
        google::protobuf::RepeatedPtrField<proto::WinterCampFriendWishData>::CopyFrom(v16, v17);
        v9 = 2;
      }
      else
      {
        common::milog::MiLogStream::create(
          &v23,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/handler/activity_handler.cpp",
          "onServerWinterCampGetFriendWishListRsp",
          2728);
        v12 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                &v23,
                (const char (*)[56])"WinterCampActivity schedule_id not match. schedule_id: ");
        v13 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
        val = BaseActivity::getScheduleId((const BaseActivity *const)v13);
        v14 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
        v15 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v14, (const char (*)[14])" server_rsp: ");
        v20 = proto::ServerWinterCampGetFriendWishListRsp::schedule_id(server_rsp);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &v20);
        common::milog::MiLogStream::~MiLogStream(&v23);
        retcode = 860;
        v9 = 1;
      }
    }
    std::shared_ptr<proto::ServerWinterCampGetFriendWishListRsp const>::~shared_ptr((std::shared_ptr<const proto::ServerWinterCampGetFriendWishListRsp> *const)(v3 + 80));
    if ( v9 )
    {
      if ( v9 == 2 )
        v8 = 2;
      else
        v8 = 0;
    }
    else
    {
      v8 = 1;
    }
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 48));
  if ( !v8 || v8 == 2 )
  {
    proto::WinterCampGetFriendWishListRsp::set_retcode(
      (proto::WinterCampGetFriendWishListRsp *const)(v3 + 112),
      retcode);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::sendProto(this->player_, (const google::protobuf::Message *)(v3 + 112));
    v2 = 0;
  }
  proto::WinterCampGetFriendWishListRsp::~WinterCampGetFriendWishListRsp((proto::WinterCampGetFriendWishListRsp *const)(v3 + 112));
  result = v2;
  if ( v24 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2741: range 000000001377C01A-000000001377C64B
int32_t __cdecl ActivityHandler::onWinterCampGiveFriendItemReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  google::protobuf::uint32 v8; // r14d
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  uint32_t ScheduleId; // eax
  google::protobuf::uint32 v11; // eax
  google::protobuf::RepeatedPtrField<proto::ItemParam> *v12; // r14
  const google::protobuf::RepeatedPtrField<proto::ItemParam> *v13; // rax
  int32_t result; // eax
  google::protobuf::int32 retcode; // [rsp+14h] [rbp-17Ch]
  std::__shared_ptr_access<const proto::WinterCampGiveFriendItemReq,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *req; // [rsp+18h] [rbp-178h]
  common::milog::MiLogStream v17; // [rsp+20h] [rbp-170h] BYREF
  char v18[336]; // [rsp+40h] [rbp-150h] BYREF

  v2 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(288LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 48 16 12 req_ptr:2742 80 16 17 activity_ptr:2746 112 48 8 rsp:2773 192 56 15 server_req:2764";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onWinterCampGiveFriendItemReq;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862722] = 62194;
  v4[536862723] = 62194;
  v4[536862725] = -218959118;
  v4[536862727] = -218103808;
  v4[536862728] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampGiveFriendItemReq>((common::minet::Packet *const)(v2 + 48));
  if ( std::operator==<proto::WinterCampGiveFriendItemReq const>(
         (const std::shared_ptr<const proto::WinterCampGiveFriendItemReq> *)(v2 + 48),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onWinterCampGiveFriendItemReq",
      2742);
    common::milog::MiLogStream::operator()(&v17, off_2504EDE0);
    common::milog::MiLogStream::~MiLogStream(&v17);
    v5 = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::WinterCampGiveFriendItemReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampGiveFriendItemReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 48));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getActivityComp(this->player_);
    PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v2 + 80));
    if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v2 + 80), 0LL)
      || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80)),
          !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
    {
      retcode = 860;
    }
    else if ( proto::WinterCampGiveFriendItemReq::item_list_size(req) )
    {
      v8 = proto::WinterCampGiveFriendItemReq::uid(req);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( v8 == Player::getUid(this->player_) )
      {
        common::milog::MiLogStream::create(
          &v17,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onWinterCampGiveFriendItemReq",
          2760);
        common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(
          &v17,
          (const char (*)[22])"target cannot be self");
        common::milog::MiLogStream::~MiLogStream(&v17);
        retcode = -1;
      }
      else
      {
        proto::ServerWinterCampGetFriendItemDataReq::ServerWinterCampGetFriendItemDataReq((proto::ServerWinterCampGetFriendItemDataReq *const)(v2 + 192));
        v9 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80));
        ScheduleId = BaseActivity::getScheduleId((const BaseActivity *const)v9);
        proto::ServerWinterCampGetFriendItemDataReq::set_schedule_id(
          (proto::ServerWinterCampGetFriendItemDataReq *const)(v2 + 192),
          ScheduleId);
        v11 = proto::WinterCampGiveFriendItemReq::uid(req);
        proto::ServerWinterCampGetFriendItemDataReq::set_friend_uid(
          (proto::ServerWinterCampGetFriendItemDataReq *const)(v2 + 192),
          v11);
        v12 = proto::ServerWinterCampGetFriendItemDataReq::mutable_give_item_list((proto::ServerWinterCampGetFriendItemDataReq *const)(v2 + 192));
        v13 = proto::WinterCampGiveFriendItemReq::item_list(req);
        google::protobuf::RepeatedPtrField<proto::ItemParam>::CopyFrom(v12, v13);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        retcode = sendProtoToSocialService<proto::ServerWinterCampGetFriendItemDataReq>(
                    this->player_,
                    (proto::ServerWinterCampGetFriendItemDataReq *)(v2 + 192));
        proto::ServerWinterCampGetFriendItemDataReq::~ServerWinterCampGetFriendItemDataReq((proto::ServerWinterCampGetFriendItemDataReq *const)(v2 + 192));
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v17,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onWinterCampGiveFriendItemReq",
        2754);
      common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(&v17, (const char (*)[17])"item list empty.");
      common::milog::MiLogStream::~MiLogStream(&v17);
      retcode = 10079;
    }
    std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v2 + 80));
    if ( retcode )
    {
      proto::WinterCampGiveFriendItemRsp::WinterCampGiveFriendItemRsp((proto::WinterCampGiveFriendItemRsp *const)(v2 + 112));
      proto::WinterCampGiveFriendItemRsp::set_retcode((proto::WinterCampGiveFriendItemRsp *const)(v2 + 112), retcode);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 112));
      proto::WinterCampGiveFriendItemRsp::~WinterCampGiveFriendItemRsp((proto::WinterCampGiveFriendItemRsp *const)(v2 + 112));
    }
    v5 = 0;
  }
  std::shared_ptr<proto::WinterCampGiveFriendItemReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampGiveFriendItemReq> *const)(v2 + 48));
  result = v5;
  if ( v18 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8014) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF801C) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8020) = -168430091;
  }
  return result;
};

// Line 2781: range 000000001377C64C-000000001377D26D
int32_t __cdecl ActivityHandler::onServerWinterCampGetFriendItemDataRsp(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  int32_t v2; // r15d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int v8; // r14d
  int v9; // r14d
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  uint32_t ScheduleId; // r14d
  common::milog::MiLogStream *v12; // r14
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // r14
  google::protobuf::uint32 v16; // r14d
  std::map<unsigned int,unsigned int>::mapped_type *v17; // rax
  google::protobuf::uint32 *v18; // rdx
  google::protobuf::uint32 v19; // r14d
  std::map<unsigned int,unsigned int>::mapped_type *v20; // rax
  google::protobuf::uint32 *v21; // rdx
  const HomeWorldExcelConfigMgr *v22; // rcx
  std::tuple_element<1,std::pair<unsigned int const,unsigned int> >::type v23; // r14d
  google::protobuf::RepeatedField<unsigned int> *v24; // rax
  int v25; // r14d
  WinterCampActivity *v26; // r14
  uint32_t v27; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+28h] [rbp-278h] BYREF
  std::map<unsigned int,unsigned int>::key_type __k; // [rsp+2Ch] [rbp-274h] BYREF
  int32_t retcode; // [rsp+30h] [rbp-270h]
  uint32_t total_count; // [rsp+34h] [rbp-26Ch]
  google::protobuf::RepeatedPtrField<proto::ItemParam>::const_iterator __for_begin; // [rsp+38h] [rbp-268h] BYREF
  google::protobuf::RepeatedPtrField<proto::ItemParam>::const_iterator __for_end; // [rsp+40h] [rbp-260h] BYREF
  const proto::ServerWinterCampGetFriendItemDataRsp *server_rsp; // [rsp+48h] [rbp-258h]
  const google::protobuf::RepeatedPtrField<proto::ItemParam> *__for_range; // [rsp+50h] [rbp-250h]
  const google::protobuf::RepeatedPtrField<proto::ItemParam> *__for_range_0; // [rsp+58h] [rbp-248h]
  const HomeWorldExcelConfigMgr *home_config_mgr; // [rsp+60h] [rbp-240h]
  std::map<unsigned int,unsigned int> *__for_range_1; // [rsp+68h] [rbp-238h]
  std::pair<unsigned int const,unsigned int> *__in; // [rsp+70h] [rbp-230h]
  std::tuple_element<0,std::pair<unsigned int const,unsigned int> >::type *item_id; // [rsp+78h] [rbp-228h]
  std::tuple_element<1,std::pair<unsigned int const,unsigned int> >::type *count; // [rsp+80h] [rbp-220h]
  const data::HomeWorldFurnitureExcelConfig *furniture_config_ptr; // [rsp+88h] [rbp-218h]
  const proto::ItemParam *item_param_0; // [rsp+90h] [rbp-210h]
  const proto::ItemParam *item_param; // [rsp+98h] [rbp-208h]
  std::shared_ptr<Config> v46; // [rsp+A0h] [rbp-200h] BYREF
  common::milog::MiLogStream v47; // [rsp+B0h] [rbp-1F0h] BYREF
  char v48[464]; // [rsp+D0h] [rbp-1D0h] BYREF

  v3 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_3(416LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "6 48 16 17 activity_ptr:2786 80 16 19 server_rsp_ptr:2793 112 24 22 overflow_item_vec:2817 176 4"
                        "8 8 rsp:2783 256 48 18 give_item_map:2806 336 48 25 friend_have_item_map:2807";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onServerWinterCampGetFriendItemDataRsp;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61937;
  v5[536862722] = 62194;
  v5[536862723] = 62194;
  v5[536862724] = -218959360;
  v5[536862725] = 62194;
  v5[536862727] = -218959118;
  v5[536862729] = -219021312;
  v5[536862730] = 62194;
  v5[536862732] = -202116109;
  retcode = 0;
  proto::WinterCampGiveFriendItemRsp::WinterCampGiveFriendItemRsp((proto::WinterCampGiveFriendItemRsp *const)(v3 + 176));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 48));
  if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 48), 0LL)
    || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    common::milog::MiLogStream::create(
      &v47,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onServerWinterCampGetFriendItemDataRsp",
      2789);
    common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
      &v47,
      (const char (*)[30])"WinterCampActivity not open. ");
    common::milog::MiLogStream::~MiLogStream(&v47);
    retcode = 860;
    v8 = 0;
  }
  else
  {
    std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
    common::minet::Packet::getConstProto<proto::ServerWinterCampGetFriendItemDataRsp>((common::minet::Packet *const)(v3 + 80));
    if ( std::operator==<proto::ServerWinterCampGetFriendItemDataRsp const>(
           (const std::shared_ptr<const proto::ServerWinterCampGetFriendItemDataRsp> *)(v3 + 80),
           0LL) )
    {
      common::milog::MiLogStream::create(
        &v47,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onServerWinterCampGetFriendItemDataRsp",
        2793);
      common::milog::MiLogStream::operator()(&v47, off_2504EFA0);
      common::milog::MiLogStream::~MiLogStream(&v47);
      v2 = -1;
      v9 = 0;
    }
    else
    {
      server_rsp = std::__shared_ptr_access<proto::ServerWinterCampGetFriendItemDataRsp const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ServerWinterCampGetFriendItemDataRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80));
      v10 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
      ScheduleId = BaseActivity::getScheduleId((const BaseActivity *const)v10);
      if ( ScheduleId == proto::ServerWinterCampGetFriendItemDataRsp::schedule_id(server_rsp) )
      {
        if ( proto::ServerWinterCampGetFriendItemDataRsp::give_item_list_size(server_rsp) )
        {
          std::map<unsigned int,unsigned int>::map((std::map<unsigned int,unsigned int> *const)(v3 + 256));
          std::map<unsigned int,unsigned int>::map((std::map<unsigned int,unsigned int> *const)(v3 + 336));
          __for_range = proto::ServerWinterCampGetFriendItemDataRsp::give_item_list(server_rsp);
          __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::ItemParam>::begin(__for_range).it_;
          __for_end.it_ = google::protobuf::RepeatedPtrField<proto::ItemParam>::end(__for_range).it_;
          while ( google::protobuf::internal::RepeatedPtrIterator<proto::ItemParam const>::operator!=(
                    &__for_begin,
                    &__for_end) )
          {
            item_param = google::protobuf::internal::RepeatedPtrIterator<proto::ItemParam const>::operator*(&__for_begin);
            v16 = proto::ItemParam::count(item_param);
            __k = proto::ItemParam::item_id(item_param);
            v17 = std::map<unsigned int,unsigned int>::operator[](
                    (std::map<unsigned int,unsigned int> *const)(v3 + 256),
                    &__k);
            v18 = v17;
            if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v17 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
            {
              __asan_report_store4(v17);
            }
            *v18 = v16;
            google::protobuf::internal::RepeatedPtrIterator<proto::ItemParam const>::operator++(&__for_begin);
          }
          __for_range_0 = proto::ServerWinterCampGetFriendItemDataRsp::friend_item_list(server_rsp);
          __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::ItemParam>::begin(__for_range_0).it_;
          __for_end.it_ = google::protobuf::RepeatedPtrField<proto::ItemParam>::end(__for_range_0).it_;
          while ( google::protobuf::internal::RepeatedPtrIterator<proto::ItemParam const>::operator!=(
                    &__for_begin,
                    &__for_end) )
          {
            item_param_0 = google::protobuf::internal::RepeatedPtrIterator<proto::ItemParam const>::operator*(&__for_begin);
            v19 = proto::ItemParam::count(item_param_0);
            __k = proto::ItemParam::item_id(item_param_0);
            v20 = std::map<unsigned int,unsigned int>::operator[](
                    (std::map<unsigned int,unsigned int> *const)(v3 + 336),
                    &__k);
            v21 = v20;
            if ( *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)v20 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) )
            {
              __asan_report_store4(v20);
            }
            *v21 = v19;
            google::protobuf::internal::RepeatedPtrIterator<proto::ItemParam const>::operator++(&__for_begin);
          }
          ServiceBox::findService<GameserverService>();
          GameserverService::getConfig((GameserverService *const)&v46);
          home_config_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)&v46)->design_config.txt_config_mgr.home_config_mgr;
          std::shared_ptr<Config>::~shared_ptr(&v46);
          std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v3 + 112));
          __for_range_1 = (std::map<unsigned int,unsigned int> *)(v3 + 256);
          __for_begin.it_ = (void *const *)std::map<unsigned int,unsigned int>::begin((std::map<unsigned int,unsigned int> *const)(v3 + 256))._M_node;
          __for_end.it_ = (void *const *)std::map<unsigned int,unsigned int>::end(__for_range_1)._M_node;
          while ( std::operator!=(
                    (const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_begin,
                    (const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> >::_Self *)&__for_end) )
          {
            __in = std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int>>::operator*((const std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> > *const)&__for_begin);
            item_id = std::get<0ul,unsigned int const,unsigned int>(__in);
            count = std::get<1ul,unsigned int const,unsigned int>(__in);
            v22 = home_config_mgr;
            if ( *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) != 0
              && (char)(((unsigned __int8)item_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)item_id >> 3) + 0x7FFF8000) )
            {
              __asan_report_load4();
            }
            furniture_config_ptr = data::HomeWorldExcelConfigMgrBase::findHomeWorldFurnitureExcelConfig(v22, *item_id);
            if ( furniture_config_ptr )
            {
              if ( *(_BYTE *)(((unsigned __int64)count >> 3) + 0x7FFF8000) != 0
                && (char)(((unsigned __int8)count & 7) + 3) >= *(_BYTE *)(((unsigned __int64)count >> 3) + 0x7FFF8000) )
              {
                __asan_report_load4();
              }
              v23 = *count;
              total_count = v23
                          + common::tools::MiscUtils::findMapWithDefaultValue<std::map<unsigned int,unsigned int>>(
                              (const std::map<unsigned int,unsigned int> *)(v3 + 336),
                              item_id,
                              0);
              if ( *(_BYTE *)(((unsigned __int64)&furniture_config_ptr->stack_limit >> 3) + 0x7FFF8000) != 0
                && (char)((((_BYTE)furniture_config_ptr - 108) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&furniture_config_ptr->stack_limit >> 3)
                                                                                     + 0x7FFF8000) )
              {
                __asan_report_load4();
              }
              if ( total_count > furniture_config_ptr->stack_limit )
                std::vector<unsigned int>::push_back((std::vector<unsigned int> *const)(v3 + 112), item_id);
            }
            std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int>>::operator++((std::_Rb_tree_iterator<std::pair<unsigned int const,unsigned int> > *const)&__for_begin);
          }
          if ( !std::vector<unsigned int>::empty((const std::vector<unsigned int> *const)(v3 + 112)) )
          {
            v24 = proto::WinterCampGiveFriendItemRsp::mutable_limit_item_id_list((proto::WinterCampGiveFriendItemRsp *const)(v3 + 176));
            common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
              (const std::vector<unsigned int> *)(v3 + 112),
              v24);
            retcode = 10077;
            v25 = 0;
          }
          else
          {
            v26 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
            v27 = proto::ServerWinterCampGetFriendItemDataRsp::friend_uid(server_rsp);
            retcode = WinterCampActivity::giveItemToFriend(
                        v26,
                        v27,
                        (const std::map<unsigned int,unsigned int> *)(v3 + 256),
                        (const std::map<unsigned int,unsigned int> *)(v3 + 336));
            v25 = 1;
          }
          std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v3 + 112));
          std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v3 + 336));
          std::map<unsigned int,unsigned int>::~map((std::map<unsigned int,unsigned int> *const)(v3 + 256));
          if ( v25 == 1 )
            v9 = 2;
          else
            v9 = 1;
        }
        else
        {
          common::milog::MiLogStream::create(
            &v47,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/handler/activity_handler.cpp",
            "onServerWinterCampGetFriendItemDataRsp",
            2802);
          common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(&v47, (const char (*)[17])"item list empty.");
          common::milog::MiLogStream::~MiLogStream(&v47);
          retcode = 10079;
          v9 = 1;
        }
      }
      else
      {
        common::milog::MiLogStream::create(
          &v47,
          &common::milog::MiLogDefault::default_log_obj_,
          4u,
          "./src/handler/activity_handler.cpp",
          "onServerWinterCampGetFriendItemDataRsp",
          2796);
        v12 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
                &v47,
                (const char (*)[56])"WinterCampActivity schedule_id not match. schedule_id: ");
        v13 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
        val = BaseActivity::getScheduleId((const BaseActivity *const)v13);
        v14 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
        v15 = common::milog::MiLogStream::operator<<<char [14],(char *[14])0>(v14, (const char (*)[14])" server_rsp: ");
        __k = proto::ServerWinterCampGetFriendItemDataRsp::schedule_id(server_rsp);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &__k);
        common::milog::MiLogStream::~MiLogStream(&v47);
        retcode = 860;
        v9 = 1;
      }
    }
    std::shared_ptr<proto::ServerWinterCampGetFriendItemDataRsp const>::~shared_ptr((std::shared_ptr<const proto::ServerWinterCampGetFriendItemDataRsp> *const)(v3 + 80));
    if ( v9 )
    {
      if ( v9 == 2 )
        v8 = 2;
      else
        v8 = 0;
    }
    else
    {
      v8 = 1;
    }
  }
  std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 48));
  if ( !v8 || v8 == 2 )
  {
    proto::WinterCampGiveFriendItemRsp::set_retcode((proto::WinterCampGiveFriendItemRsp *const)(v3 + 176), retcode);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::sendProto(this->player_, (const google::protobuf::Message *)(v3 + 176));
    v2 = 0;
  }
  proto::WinterCampGiveFriendItemRsp::~WinterCampGiveFriendItemRsp((proto::WinterCampGiveFriendItemRsp *const)(v3 + 176));
  result = v2;
  if ( v48 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF801C) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8024) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8030) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8028) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8030) = -168430091;
  }
  return result;
};

// Line 2845: range 000000001377D26E-000000001377D74E
int32_t __cdecl ActivityHandler::onWinterCampGetRecvItemListReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  int32_t FriendBrief; // r14d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  _BOOL4 v8; // r15d
  WinterCampActivity *v9; // r15
  google::protobuf::RepeatedField<unsigned int> *v10; // rax
  int v11; // r15d
  int32_t result; // eax
  int32_t retcode; // [rsp+24h] [rbp-11Ch]
  common::milog::MiLogStream v14; // [rsp+30h] [rbp-110h] BYREF
  char v15[240]; // [rsp+50h] [rbp-F0h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 16 12 req_ptr:2846 80 16 17 activity_ptr:2851 112 48 8 rsp:2872";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWinterCampGetRecvItemListReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61937;
  v5[536862722] = 62194;
  v5[536862723] = 62194;
  v5[536862725] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::WinterCampGetRecvItemListReq>((common::minet::Packet *const)(v3 + 48));
  if ( std::operator==<proto::WinterCampGetRecvItemListReq const>(
         (const std::shared_ptr<const proto::WinterCampGetRecvItemListReq> *)(v3 + 48),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onWinterCampGetRecvItemListReq",
      2846);
    common::milog::MiLogStream::operator()(&v14, off_2504F0A0);
    common::milog::MiLogStream::~MiLogStream(&v14);
    FriendBrief = -1;
  }
  else
  {
    std::__shared_ptr_access<proto::WinterCampGetRecvItemListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::WinterCampGetRecvItemListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
    retcode = -1;
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getActivityComp(this->player_);
    PlayerActivityComp::findOpenningActivity<WinterCampActivity>((PlayerActivityComp *const)(v3 + 80));
    if ( std::operator==<WinterCampActivity>((const std::shared_ptr<WinterCampActivity> *)(v3 + 80), 0LL)
      || (v6 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80)),
          !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
    {
      common::milog::MiLogStream::create(
        &v14,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onWinterCampGetRecvItemListReq",
        2854);
      common::milog::MiLogStream::operator<<<char [30],(char *[30])0>(
        &v14,
        (const char (*)[30])"WinterCampActivity not open. ");
      common::milog::MiLogStream::~MiLogStream(&v14);
      retcode = 860;
      v8 = 0;
    }
    else
    {
      proto::ServerGetFriendBriefReq::ServerGetFriendBriefReq((proto::ServerGetFriendBriefReq *const)(v3 + 112));
      v9 = std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WinterCampActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80));
      v10 = proto::ServerGetFriendBriefReq::mutable_uid_list((proto::ServerGetFriendBriefReq *const)(v3 + 112));
      WinterCampActivity::fillRecvItemUidList(v9, v10);
      if ( proto::ServerGetFriendBriefReq::uid_list_size((const proto::ServerGetFriendBriefReq *const)(v3 + 112)) )
      {
        proto::ServerGetFriendBriefReq::set_reason(
          (proto::ServerGetFriendBriefReq *const)(v3 + 112),
          FRIEND_BRIEF_REASON_WINTER_CAMP_ACTIVITY);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        FriendBrief = sendProtoToSocialService<proto::ServerGetFriendBriefReq>(
                        this->player_,
                        (proto::ServerGetFriendBriefReq *)(v3 + 112));
        v11 = 1;
      }
      else
      {
        retcode = 0;
        v11 = 0;
      }
      proto::ServerGetFriendBriefReq::~ServerGetFriendBriefReq((proto::ServerGetFriendBriefReq *const)(v3 + 112));
      v8 = v11 != 0;
    }
    std::shared_ptr<WinterCampActivity>::~shared_ptr((std::shared_ptr<WinterCampActivity> *const)(v3 + 80));
    if ( !v8 )
    {
      proto::WinterCampGetRecvItemListRsp::WinterCampGetRecvItemListRsp((proto::WinterCampGetRecvItemListRsp *const)(v3 + 112));
      proto::WinterCampGetRecvItemListRsp::set_retcode((proto::WinterCampGetRecvItemListRsp *const)(v3 + 112), retcode);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v3 + 112));
      FriendBrief = 0;
      proto::WinterCampGetRecvItemListRsp::~WinterCampGetRecvItemListRsp((proto::WinterCampGetRecvItemListRsp *const)(v3 + 112));
    }
  }
  std::shared_ptr<proto::WinterCampGetRecvItemListReq const>::~shared_ptr((std::shared_ptr<const proto::WinterCampGetRecvItemListReq> *const)(v3 + 48));
  result = FriendBrief;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2879: range 000000001377D750-000000001377D96A
int32_t __cdecl ActivityHandler::onMistTrialGetDungeonExhibitionDataReq(
        ActivityHandler *const this,
        const proto::MistTrialGetDungeonExhibitionDataReq *req,
        proto::MistTrialGetDungeonExhibitionDataRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  google::protobuf::uint32 v6; // edx
  int32_t v7; // r14d
  std::__shared_ptr_access<MistTrialActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // r14
  uint32_t v9; // eax
  int32_t result; // eax
  common::milog::MiLogStream v12; // [rsp+20h] [rbp-90h] BYREF
  char v13[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 28 mist_trial_activity_ptr:2881";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMistTrialGetDungeonExhibitionDataReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::MistTrialGetDungeonExhibitionDataReq::trial_id(req);
  proto::MistTrialGetDungeonExhibitionDataRsp::set_trial_id(rsp_0, v6);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MistTrialActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MistTrialActivity>(0LL, (const std::shared_ptr<MistTrialActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onMistTrialGetDungeonExhibitionDataReq",
      2884);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v12, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v12);
    v7 = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<MistTrialActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MistTrialActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v9 = proto::MistTrialGetDungeonExhibitionDataReq::trial_id(req);
    v7 = MistTrialActivity::sendMistTrialSettleNotify(v8, v9);
  }
  std::shared_ptr<MistTrialActivity>::~shared_ptr((std::shared_ptr<MistTrialActivity> *const)(v3 + 32));
  result = v7;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2892: range 000000001377D96C-000000001377DB64
int32_t __cdecl ActivityHandler::onPotionResetChallengeReq(
        ActivityHandler *const this,
        const proto::PotionResetChallengeReq *req,
        proto::PotionResetChallengeRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  PotionActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 24 potion_activity_ptr:2893";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPotionResetChallengeReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<PotionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<PotionActivity>(0LL, (const std::shared_ptr<PotionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onPotionResetChallengeReq",
      2896);
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
      &v10,
      (const char (*)[33])"[POTION] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<PotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PotionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = PotionActivity::resetChallenge(v7, req, rsp_0);
  }
  std::shared_ptr<PotionActivity>::~shared_ptr((std::shared_ptr<PotionActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2903: range 000000001377DB66-000000001377DD57
int32_t __cdecl ActivityHandler::onPotionEnterDungeonReq(
        ActivityHandler *const this,
        const proto::PotionEnterDungeonReq *req,
        proto::PotionEnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  PotionActivity *v7; // rdx
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 24 potion_activity_ptr:2904";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPotionEnterDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<PotionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<PotionActivity>(0LL, (const std::shared_ptr<PotionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onPotionEnterDungeonReq",
      2907);
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
      &v9,
      (const char (*)[33])"[POTION] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<PotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PotionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = PotionActivity::enterPotionDungeon(v7, req);
  }
  std::shared_ptr<PotionActivity>::~shared_ptr((std::shared_ptr<PotionActivity> *const)(v3 + 32));
  result = v6;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2914: range 000000001377DD58-000000001377DF49
int32_t __cdecl ActivityHandler::onPotionSaveDungeonResultReq(
        ActivityHandler *const this,
        const proto::PotionSaveDungeonResultReq *req,
        proto::PotionSaveDungeonResultRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  PotionActivity *v7; // rdx
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 24 potion_activity_ptr:2915";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPotionSaveDungeonResultReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<PotionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<PotionActivity>(0LL, (const std::shared_ptr<PotionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onPotionSaveDungeonResultReq",
      2918);
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
      &v9,
      (const char (*)[33])"[POTION] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<PotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PotionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = PotionActivity::saveDungeonResult(v7, req);
  }
  std::shared_ptr<PotionActivity>::~shared_ptr((std::shared_ptr<PotionActivity> *const)(v3 + 32));
  result = v6;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2925: range 000000001377DF4A-000000001377E12E
int32_t __cdecl ActivityHandler::onPotionRestartDungeonReq(
        ActivityHandler *const this,
        const proto::PotionRestartDungeonReq *req,
        proto::PotionRestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  PotionActivity *v7; // rax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 24 potion_activity_ptr:2926";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPotionRestartDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<PotionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<PotionActivity>(0LL, (const std::shared_ptr<PotionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onPotionRestartDungeonReq",
      2929);
    common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
      &v9,
      (const char (*)[33])"[POTION] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<PotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PotionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = PotionActivity::restartDungeon(v7);
  }
  std::shared_ptr<PotionActivity>::~shared_ptr((std::shared_ptr<PotionActivity> *const)(v3 + 32));
  result = restarted;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2936: range 000000001377E130-000000001377E2F7
int32_t __cdecl ActivityHandler::onFinishLanternProjectionReq(
        ActivityHandler *const this,
        const proto::FinishLanternProjectionReq *req,
        proto::FinishLanternProjectionRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  LanternRiteActivity *v9; // r14
  uint32_t v10; // r15d
  uint32_t v11; // eax
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2937";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFinishLanternProjectionReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::FinishLanternProjectionReq::finish_time(req);
    v11 = proto::FinishLanternProjectionReq::level_id(req);
    v8 = LanternRiteActivity::finishProjection(v9, v11, v10);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = v8;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2946: range 000000001377E2F8-000000001377E4C0
int32_t __cdecl ActivityHandler::onViewLanternProjectionTipsReq(
        ActivityHandler *const this,
        const proto::ViewLanternProjectionTipsReq *req,
        proto::ViewLanternProjectionTipsRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  LanternRiteActivity *v9; // r15
  bool is_input_tips; // r14
  proto::ClientInputType v11; // eax
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2947";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onViewLanternProjectionTipsReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    is_input_tips = proto::ViewLanternProjectionTipsReq::is_input_tips(req);
    v11 = proto::ViewLanternProjectionTipsReq::input_type(req);
    v8 = LanternRiteActivity::viewProjectionTips(v9, v11, is_input_tips);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = v8;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2956: range 000000001377E4C2-000000001377E66F
int32_t __cdecl ActivityHandler::onViewLanternProjectionLevelTipsReq(
        ActivityHandler *const this,
        const proto::ViewLanternProjectionLevelTipsReq *req,
        proto::ViewLanternProjectionLevelTipsRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  LanternRiteActivity *v9; // r14
  uint32_t v10; // eax
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2957";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onViewLanternProjectionLevelTipsReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::ViewLanternProjectionLevelTipsReq::level_id(req);
    v8 = LanternRiteActivity::viewProjectionLevelTips(v9, v10);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2966: range 000000001377E670-000000001377E80C
int32_t __cdecl ActivityHandler::onLanternRiteTakeSkinRewardReq(
        ActivityHandler *const this,
        const proto::LanternRiteTakeSkinRewardReq *req,
        proto::LanternRiteTakeSkinRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  LanternRiteActivity *v9; // rax
  int32_t result; // eax
  char v11[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2967";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLanternRiteTakeSkinRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = LanternRiteActivity::takeSkinReward(v9);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = v8;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2976: range 000000001377E80E-000000001377E9DA
int32_t __cdecl ActivityHandler::onSalvagePreventRestartReq(
        ActivityHandler *const this,
        const proto::SalvagePreventRestartReq *req,
        proto::SalvagePreventRestartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int32_t restarted; // r14d
  LanternRiteActivity *v10; // r14
  uint32_t v11; // eax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2978";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSalvagePreventRestartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::SalvagePreventRestartReq::gallery_id(req);
  proto::SalvagePreventRestartRsp::set_gallery_id(rsp_0, v6);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v7 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    restarted = 860;
  }
  else
  {
    v10 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::SalvagePreventRestartReq::gallery_id(req);
    restarted = LanternRiteActivity::restartSalvagePreventByGalleryId(v10, v11);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = restarted;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2987: range 000000001377E9DC-000000001377EBA8
int32_t __cdecl ActivityHandler::onSalvageEscortRestartReq(
        ActivityHandler *const this,
        const proto::SalvageEscortRestartReq *req,
        proto::SalvageEscortRestartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int32_t restarted; // r14d
  LanternRiteActivity *v10; // r14
  uint32_t v11; // eax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2989";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSalvageEscortRestartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::SalvageEscortRestartReq::gallery_id(req);
  proto::SalvageEscortRestartRsp::set_gallery_id(rsp_0, v6);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v7 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    restarted = 860;
  }
  else
  {
    v10 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::SalvageEscortRestartReq::gallery_id(req);
    restarted = LanternRiteActivity::restartSalvageEscortByGalleryId(v10, v11);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = restarted;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 2998: range 000000001377EBAA-000000001377ED57
int32_t __cdecl ActivityHandler::onLanternRiteStartFireworksReformReq(
        ActivityHandler *const this,
        const proto::LanternRiteStartFireworksReformReq *req,
        proto::LanternRiteStartFireworksReformRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t started; // r14d
  LanternRiteActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:2999";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLanternRiteStartFireworksReformReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    started = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    started = LanternRiteActivity::startFireworksReform(v9, req, rsp_0);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = started;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3008: range 000000001377ED58-000000001377EF05
int32_t __cdecl ActivityHandler::onLanternRiteDoFireworksReformReq(
        ActivityHandler *const this,
        const proto::LanternRiteDoFireworksReformReq *req,
        proto::LanternRiteDoFireworksReformRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  LanternRiteActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3009";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLanternRiteDoFireworksReformReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = LanternRiteActivity::doFireworksReform(v9, req, rsp_0);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3018: range 000000001377EF06-000000001377F0B3
int32_t __cdecl ActivityHandler::onLanternRiteEndFireworksReformReq(
        ActivityHandler *const this,
        const proto::LanternRiteEndFireworksReformReq *req,
        proto::LanternRiteEndFireworksReformRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  LanternRiteActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3019";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLanternRiteEndFireworksReformReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = LanternRiteActivity::endFireworksReform(v9, req, rsp_0);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3028: range 000000001377F0B4-000000001377F3A4
int32_t __cdecl ActivityHandler::onActivityBannerClearReq(
        ActivityHandler *const this,
        const proto::ActivityBannerClearReq *req,
        proto::ActivityBannerClearRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  int32_t v11; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  uint32_t ScheduleId; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // r14
  BaseActivity *v17; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v21; // [rsp+30h] [rbp-90h] BYREF
  char v22[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 22 base_activity_ptr:3031";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityBannerClearReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::ActivityBannerClearReq::activity_id(req);
  proto::ActivityBannerClearRsp::set_activity_id(rsp_0, v6);
  v7 = proto::ActivityBannerClearReq::schedule_id(req);
  proto::ActivityBannerClearRsp::set_schedule_id(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::ActivityBannerClearReq::activity_id(req);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>(0LL, (const std::shared_ptr<BaseActivity> *)(v3 + 32))
    || (v9 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    v11 = 860;
  }
  else
  {
    v12 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    ScheduleId = BaseActivity::getScheduleId(v12);
    if ( ScheduleId == proto::ActivityBannerClearReq::schedule_id(req) )
    {
      v17 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v11 = BaseActivity::setBannerCleared(v17);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onActivityBannerClearReq",
        3039);
      v14 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v15 = common::milog::MiLogStream::operator<<<BaseActivity,(BaseActivity*)0>(&v21, v14);
      v16 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
              v15,
              (const char (*)[29])" schedule id not match. req:");
      val = proto::ActivityBannerClearReq::schedule_id(req);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, &val);
      common::milog::MiLogStream::~MiLogStream(&v21);
      v11 = 860;
    }
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v11;
  if ( v22 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3046: range 000000001377F3A6-000000001377F5B8
int32_t __cdecl ActivityHandler::onUpdateSalvageBundleMarkReq(
        ActivityHandler *const this,
        const proto::UpdateSalvageBundleMarkReq *req,
        proto::UpdateSalvageBundleMarkRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t updated; // r14d
  google::protobuf::uint32 v9; // edx
  google::protobuf::uint32 v10; // edx
  LanternRiteActivity *v11; // r14
  uint32_t v12; // r15d
  uint32_t v13; // esi
  int32_t result; // eax
  char v16[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3047";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onUpdateSalvageBundleMarkReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<LanternRiteActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<LanternRiteActivity>((const std::shared_ptr<LanternRiteActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    updated = 860;
  }
  else
  {
    v9 = proto::UpdateSalvageBundleMarkReq::challenge_type(req);
    proto::UpdateSalvageBundleMarkRsp::set_challenge_type(rsp_0, v9);
    v10 = proto::UpdateSalvageBundleMarkReq::stage_id(req);
    proto::UpdateSalvageBundleMarkRsp::set_stage_id(rsp_0, v10);
    v11 = std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<LanternRiteActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v12 = proto::UpdateSalvageBundleMarkReq::challenge_type(req);
    v13 = proto::UpdateSalvageBundleMarkReq::stage_id(req);
    updated = LanternRiteActivity::clientRequestUpdateSalvageBundleMark(v11, v13, v12, rsp_0);
  }
  std::shared_ptr<LanternRiteActivity>::~shared_ptr((std::shared_ptr<LanternRiteActivity> *const)(v3 + 32));
  result = updated;
  if ( v16 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3058: range 000000001377F5BA-000000001377F767
int32_t __cdecl ActivityHandler::onMichiaeMatsuriInteractStatueReq(
        ActivityHandler *const this,
        const proto::MichiaeMatsuriInteractStatueReq *req,
        proto::MichiaeMatsuriInteractStatueRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  MichiaeMatsuriActivity *v9; // r14
  uint32_t v10; // eax
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3059";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMichiaeMatsuriInteractStatueReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MichiaeMatsuriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MichiaeMatsuriActivity>((const std::shared_ptr<MichiaeMatsuriActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::MichiaeMatsuriInteractStatueReq::statue_entity_id(req);
    v8 = MichiaeMatsuriActivity::interactStatue(v9, v10);
  }
  std::shared_ptr<MichiaeMatsuriActivity>::~shared_ptr((std::shared_ptr<MichiaeMatsuriActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3068: range 000000001377F768-000000001377F915
int32_t __cdecl ActivityHandler::onMichiaeMatsuriStartDarkChallengeReq(
        ActivityHandler *const this,
        const proto::MichiaeMatsuriStartDarkChallengeReq *req,
        proto::MichiaeMatsuriStartDarkChallengeRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  MichiaeMatsuriActivity *v9; // r14
  uint32_t v10; // eax
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3069";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMichiaeMatsuriStartDarkChallengeReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MichiaeMatsuriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MichiaeMatsuriActivity>((const std::shared_ptr<MichiaeMatsuriActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::MichiaeMatsuriStartDarkChallengeReq::worktop_entity_id(req);
    v8 = MichiaeMatsuriActivity::interactDarkChallengeGadget(v9, v10);
  }
  std::shared_ptr<MichiaeMatsuriActivity>::~shared_ptr((std::shared_ptr<MichiaeMatsuriActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3078: range 000000001377F916-000000001377FAE2
int32_t __cdecl ActivityHandler::onMichiaeMatsuriUnlockCrystalSkillReq(
        ActivityHandler *const this,
        const proto::MichiaeMatsuriUnlockCrystalSkillReq *req,
        proto::MichiaeMatsuriUnlockCrystalSkillRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  google::protobuf::uint32 v9; // edx
  MichiaeMatsuriActivity *v10; // r14
  uint32_t v11; // eax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3079";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMichiaeMatsuriUnlockCrystalSkillReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MichiaeMatsuriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MichiaeMatsuriActivity>((const std::shared_ptr<MichiaeMatsuriActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = proto::MichiaeMatsuriUnlockCrystalSkillReq::crystal_skill_id(req);
    proto::MichiaeMatsuriUnlockCrystalSkillRsp::set_crystal_skill_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v11 = proto::MichiaeMatsuriUnlockCrystalSkillReq::crystal_skill_id(req);
    v8 = MichiaeMatsuriActivity::tryUnlockCrystalSkill(v10, v11);
  }
  std::shared_ptr<MichiaeMatsuriActivity>::~shared_ptr((std::shared_ptr<MichiaeMatsuriActivity> *const)(v3 + 32));
  result = v8;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3089: range 000000001377FAE4-000000001377FCAB
int32_t __cdecl ActivityHandler::onMichiaeMatsuriStartBossChallengeReq(
        ActivityHandler *const this,
        const proto::MichiaeMatsuriStartBossChallengeReq *req,
        proto::MichiaeMatsuriStartBossChallengeRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  MichiaeMatsuriActivity *v9; // r14
  uint32_t v10; // r15d
  uint32_t v11; // eax
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3090";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMichiaeMatsuriStartBossChallengeReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MichiaeMatsuriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MichiaeMatsuriActivity>((const std::shared_ptr<MichiaeMatsuriActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening((const BaseActivity *const)v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MichiaeMatsuriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::MichiaeMatsuriStartBossChallengeReq::difficulty(req);
    v11 = proto::MichiaeMatsuriStartBossChallengeReq::gadget_entity_id(req);
    v8 = MichiaeMatsuriActivity::interactBossChallengeGadget(v9, v11, v10);
  }
  std::shared_ptr<MichiaeMatsuriActivity>::~shared_ptr((std::shared_ptr<MichiaeMatsuriActivity> *const)(v3 + 32));
  result = v8;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3099: range 000000001377FCAC-000000001377FE99
int32_t __cdecl ActivityHandler::onBartenderCompleteOrderReq(
        ActivityHandler *const this,
        const proto::BartenderCompleteOrderReq *req,
        proto::BartenderCompleteOrderRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  google::protobuf::uint32 v9; // edx
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  BartenderActivity *v11; // rcx
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3100";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBartenderCompleteOrderReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BartenderActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BartenderActivity>((const std::shared_ptr<BartenderActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = proto::BartenderCompleteOrderReq::quest_id(req);
    proto::BartenderCompleteOrderRsp::set_quest_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( BartenderActivity::getIsContentClosed(v10) )
    {
      v8 = -1;
    }
    else
    {
      v11 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v8 = BartenderActivity::completeOrder(v11, req, rsp_0);
    }
  }
  std::shared_ptr<BartenderActivity>::~shared_ptr((std::shared_ptr<BartenderActivity> *const)(v3 + 32));
  result = v8;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3114: range 000000001377FE9A-0000000013780064
int32_t __cdecl ActivityHandler::onBartenderCancelOrderReq(
        ActivityHandler *const this,
        const proto::BartenderCancelOrderReq *req,
        proto::BartenderCancelOrderRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  google::protobuf::uint32 v9; // edx
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3115";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBartenderCancelOrderReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BartenderActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BartenderActivity>((const std::shared_ptr<BartenderActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = proto::BartenderCancelOrderReq::quest_id(req);
    proto::BartenderCancelOrderRsp::set_quest_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( BartenderActivity::getIsContentClosed(v10) )
      v8 = -1;
    else
      v8 = 0;
  }
  std::shared_ptr<BartenderActivity>::~shared_ptr((std::shared_ptr<BartenderActivity> *const)(v3 + 32));
  result = v8;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3129: range 0000000013780066-0000000013780234
int32_t __cdecl ActivityHandler::onBartenderGetFormulaReq(
        ActivityHandler *const this,
        const proto::BartenderGetFormulaReq *req,
        proto::BartenderGetFormulaRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t FormulaAndAffix; // r14d
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  BartenderActivity *v10; // rcx
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3130";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBartenderGetFormulaReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BartenderActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BartenderActivity>((const std::shared_ptr<BartenderActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    FormulaAndAffix = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( BartenderActivity::getIsContentClosed(v9) )
    {
      FormulaAndAffix = -1;
    }
    else
    {
      v10 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      FormulaAndAffix = BartenderActivity::getFormulaAndAffix(v10, req, rsp_0);
    }
  }
  std::shared_ptr<BartenderActivity>::~shared_ptr((std::shared_ptr<BartenderActivity> *const)(v3 + 32));
  result = FormulaAndAffix;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3143: range 0000000013780236-0000000013780423
int32_t __cdecl ActivityHandler::onBartenderStartLevelReq(
        ActivityHandler *const this,
        const proto::BartenderStartLevelReq *req,
        proto::BartenderStartLevelRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t started; // r14d
  google::protobuf::uint32 v9; // edx
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  BartenderActivity *v11; // rcx
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3144";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBartenderStartLevelReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BartenderActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BartenderActivity>((const std::shared_ptr<BartenderActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    started = 860;
  }
  else
  {
    v9 = proto::BartenderStartLevelReq::level_id(req);
    proto::BartenderStartLevelRsp::set_level_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( BartenderActivity::getIsContentClosed(v10) )
    {
      started = -1;
    }
    else
    {
      v11 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      started = BartenderActivity::startLevel(v11, req, rsp_0);
    }
  }
  std::shared_ptr<BartenderActivity>::~shared_ptr((std::shared_ptr<BartenderActivity> *const)(v3 + 32));
  result = started;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3158: range 0000000013780424-0000000013780611
int32_t __cdecl ActivityHandler::onBartenderCancelLevelReq(
        ActivityHandler *const this,
        const proto::BartenderCancelLevelReq *req,
        proto::BartenderCancelLevelRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  google::protobuf::uint32 v9; // edx
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  BartenderActivity *v11; // r14
  uint32_t v12; // eax
  int32_t result; // eax
  char v15[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3159";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBartenderCancelLevelReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BartenderActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BartenderActivity>((const std::shared_ptr<BartenderActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = proto::BartenderCancelLevelReq::level_id(req);
    proto::BartenderCancelLevelRsp::set_level_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( BartenderActivity::getIsContentClosed(v10) )
    {
      v8 = -1;
    }
    else
    {
      v11 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v12 = proto::BartenderCancelLevelReq::level_id(req);
      v8 = BartenderActivity::cancelLevel(v11, v12);
    }
  }
  std::shared_ptr<BartenderActivity>::~shared_ptr((std::shared_ptr<BartenderActivity> *const)(v3 + 32));
  result = v8;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3173: range 0000000013780612-00000000137807FF
int32_t __cdecl ActivityHandler::onBartenderFinishLevelReq(
        ActivityHandler *const this,
        const proto::BartenderFinishLevelReq *req,
        proto::BartenderFinishLevelRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  google::protobuf::uint32 v9; // edx
  std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v10; // rax
  BartenderActivity *v11; // r14
  uint32_t v12; // eax
  int32_t result; // eax
  char v15[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3174";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBartenderFinishLevelReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BartenderActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BartenderActivity>((const std::shared_ptr<BartenderActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = proto::BartenderFinishLevelReq::level_id(req);
    proto::BartenderFinishLevelRsp::set_level_id(rsp_0, v9);
    v10 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( BartenderActivity::getIsContentClosed(v10) )
    {
      v8 = -1;
    }
    else
    {
      v11 = std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BartenderActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v12 = proto::BartenderFinishLevelReq::level_id(req);
      v8 = BartenderActivity::finishLevel(v11, v12);
    }
  }
  std::shared_ptr<BartenderActivity>::~shared_ptr((std::shared_ptr<BartenderActivity> *const)(v3 + 32));
  result = v8;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3188: range 0000000013780800-00000000137809C9
int32_t __cdecl ActivityHandler::onQuickOpenActivityReq(
        ActivityHandler *const this,
        const proto::QuickOpenActivityReq *req,
        proto::QuickOpenActivityRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int32_t v9; // r14d
  google::protobuf::uint32 v10; // edx
  BaseActivity *v11; // rax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3189";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onQuickOpenActivityReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::QuickOpenActivityReq::activity_id(req);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v3 + 32), 0LL)
    || (v7 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    v9 = 860;
  }
  else
  {
    v10 = proto::QuickOpenActivityReq::activity_id(req);
    proto::QuickOpenActivityRsp::set_activity_id(rsp_0, v10);
    v11 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v9 = BaseActivity::quickOpen(v11);
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v9;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3199: range 00000000137809CA-0000000013780C2E
int32_t __cdecl ActivityHandler::onCrystalLinkEnterDungeonReq(
        ActivityHandler *const this,
        const proto::CrystalLinkEnterDungeonReq *req,
        proto::CrystalLinkEnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  google::protobuf::uint32 v7; // edx
  google::protobuf::uint32 v8; // edx
  google::protobuf::RepeatedPtrField<proto::CrystalLinkTeamInfo> *v9; // r14
  const google::protobuf::RepeatedPtrField<proto::CrystalLinkTeamInfo> *v10; // rax
  CrystalLinkActivity *v11; // rdx
  int32_t result; // eax
  common::milog::MiLogStream v14; // [rsp+20h] [rbp-90h] BYREF
  char v15[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 30 crystal_Link_activity_ptr:3200";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onCrystalLinkEnterDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<CrystalLinkActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<CrystalLinkActivity>(0LL, (const std::shared_ptr<CrystalLinkActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onCrystalLinkEnterDungeonReq",
      3203);
    common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
      &v14,
      (const char (*)[39])"[CRYSTAL_LINK] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v14);
    v6 = 860;
  }
  else
  {
    v7 = proto::CrystalLinkEnterDungeonReq::level_id(req);
    proto::CrystalLinkEnterDungeonRsp::set_level_id(rsp_0, v7);
    v8 = proto::CrystalLinkEnterDungeonReq::difficulty_id(req);
    proto::CrystalLinkEnterDungeonRsp::set_difficulty_id(rsp_0, v8);
    v9 = proto::CrystalLinkEnterDungeonRsp::mutable_team_info_list(rsp_0);
    v10 = proto::CrystalLinkEnterDungeonReq::team_info_list(req);
    google::protobuf::RepeatedPtrField<proto::CrystalLinkTeamInfo>::CopyFrom(v9, v10);
    v11 = std::__shared_ptr_access<CrystalLinkActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CrystalLinkActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = CrystalLinkActivity::enterCrystalLinkDungeon(v11, req);
  }
  std::shared_ptr<CrystalLinkActivity>::~shared_ptr((std::shared_ptr<CrystalLinkActivity> *const)(v3 + 32));
  result = v6;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3213: range 0000000013780C30-0000000013780E14
int32_t __cdecl ActivityHandler::onCrystalLinkRestartDungeonReq(
        ActivityHandler *const this,
        const proto::CrystalLinkRestartDungeonReq *req,
        proto::CrystalLinkRestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  CrystalLinkActivity *v7; // rax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 30 crystal_Link_activity_ptr:3214";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onCrystalLinkRestartDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<CrystalLinkActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<CrystalLinkActivity>(0LL, (const std::shared_ptr<CrystalLinkActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onCrystalLinkRestartDungeonReq",
      3217);
    common::milog::MiLogStream::operator<<<char [39],(char *[39])0>(
      &v9,
      (const char (*)[39])"[CRYSTAL_LINK] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<CrystalLinkActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CrystalLinkActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = CrystalLinkActivity::restartDungeon(v7);
  }
  std::shared_ptr<CrystalLinkActivity>::~shared_ptr((std::shared_ptr<CrystalLinkActivity> *const)(v3 + 32));
  result = restarted;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3224: range 0000000013780E16-0000000013781053
int32_t __cdecl ActivityHandler::onSpiceActivityFinishMakeSpiceReq(
        ActivityHandler *const this,
        const proto::SpiceActivityFinishMakeSpiceReq *req,
        proto::SpiceActivityFinishMakeSpiceRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t SpiceReq; // r14d
  google::protobuf::uint32 v7; // edx
  bool is_success; // dl
  std::__shared_ptr_access<SpiceActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v12; // [rsp+20h] [rbp-90h] BYREF
  char v13[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 23 spice_activity_ptr:3225";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSpiceActivityFinishMakeSpiceReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SpiceActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SpiceActivity>(0LL, (const std::shared_ptr<SpiceActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSpiceActivityFinishMakeSpiceReq",
      3228);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v12, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v12);
    SpiceReq = 860;
  }
  else
  {
    v7 = proto::SpiceActivityFinishMakeSpiceReq::stage_id(req);
    proto::SpiceActivityFinishMakeSpiceRsp::set_stage_id(rsp_0, v7);
    is_success = proto::SpiceActivityFinishMakeSpiceReq::is_success(req);
    proto::SpiceActivityFinishMakeSpiceRsp::set_is_success(rsp_0, is_success);
    v9 = std::__shared_ptr_access<SpiceActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SpiceActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    SpiceReq = SpiceActivity::onSpiceActivityFinishMakeSpiceReq(v9, req, rsp_0);
  }
  std::shared_ptr<SpiceActivity>::~shared_ptr((std::shared_ptr<SpiceActivity> *const)(v3 + 32));
  result = SpiceReq;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3238: range 0000000013781054-0000000013781278
int32_t __cdecl ActivityHandler::onSpiceActivityProcessFoodReq(
        ActivityHandler *const this,
        const proto::SpiceActivityProcessFoodReq *req,
        proto::SpiceActivityProcessFoodRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  google::protobuf::RepeatedPtrField<proto::ItemParam> *v7; // r14
  const google::protobuf::RepeatedPtrField<proto::ItemParam> *v8; // rax
  std::__shared_ptr_access<SpiceActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v12; // [rsp+20h] [rbp-90h] BYREF
  char v13[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 23 spice_activity_ptr:3239";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSpiceActivityProcessFoodReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SpiceActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SpiceActivity>(0LL, (const std::shared_ptr<SpiceActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSpiceActivityProcessFoodReq",
      3242);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v12, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v12);
    v6 = 860;
  }
  else
  {
    v7 = proto::SpiceActivityProcessFoodRsp::mutable_normal_food_list(rsp_0);
    v8 = proto::SpiceActivityProcessFoodReq::normal_food_list(req);
    google::protobuf::RepeatedPtrField<proto::ItemParam>::CopyFrom(v7, v8);
    v9 = std::__shared_ptr_access<SpiceActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SpiceActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = SpiceActivity::onSpiceActivityProcessFoodReq(v9, req, rsp_0);
  }
  std::shared_ptr<SpiceActivity>::~shared_ptr((std::shared_ptr<SpiceActivity> *const)(v3 + 32));
  result = v6;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3251: range 000000001378127A-00000000137814CD
int32_t __cdecl ActivityHandler::onPhotoActivityFinishReq(
        ActivityHandler *const this,
        const proto::PhotoActivityFinishReq *req,
        proto::PhotoActivityFinishRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  google::protobuf::uint32 v7; // edx
  std::__shared_ptr_access<PhotoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // r15
  bool is_succ; // r14
  uint32_t v10; // eax
  int32_t result; // eax
  google::protobuf::uint32 check_root_id; // [rsp+14h] [rbp-ACh]
  common::milog::MiLogStream v14; // [rsp+30h] [rbp-90h] BYREF
  char v15[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 23 photo_activity_ptr:3252";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPhotoActivityFinishReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<PhotoActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<PhotoActivity>(0LL, (const std::shared_ptr<PhotoActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPhotoActivityFinishReq",
      3255);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v14, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v14);
    v6 = 860;
  }
  else
  {
    v7 = proto::PhotoActivityFinishReq::pos_id(req);
    proto::PhotoActivityFinishRsp::set_pos_id(rsp_0, v7);
    v8 = std::__shared_ptr_access<PhotoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PhotoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    check_root_id = proto::PhotoActivityFinishReq::check_root_id(req);
    is_succ = proto::PhotoActivityFinishReq::is_succ(req);
    v10 = proto::PhotoActivityFinishReq::pos_id(req);
    v6 = PhotoActivity::finishPhotoByPosId(v8, v10, is_succ, check_root_id);
  }
  std::shared_ptr<PhotoActivity>::~shared_ptr((std::shared_ptr<PhotoActivity> *const)(v3 + 32));
  result = v6;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3263: range 00000000137814CE-00000000137816E8
int32_t __cdecl ActivityHandler::onPhotoActivityClientViewReq(
        ActivityHandler *const this,
        const proto::PhotoActivityClientViewReq *req,
        proto::PhotoActivityClientViewRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  google::protobuf::uint32 v7; // edx
  std::__shared_ptr_access<PhotoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // r14
  uint32_t v9; // eax
  int32_t result; // eax
  common::milog::MiLogStream v12; // [rsp+20h] [rbp-90h] BYREF
  char v13[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 23 photo_activity_ptr:3264";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onPhotoActivityClientViewReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<PhotoActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<PhotoActivity>(0LL, (const std::shared_ptr<PhotoActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onPhotoActivityClientViewReq",
      3267);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v12, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v12);
    v6 = 860;
  }
  else
  {
    v7 = proto::PhotoActivityClientViewReq::pos_id(req);
    proto::PhotoActivityClientViewRsp::set_pos_id(rsp_0, v7);
    v8 = std::__shared_ptr_access<PhotoActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<PhotoActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v9 = proto::PhotoActivityClientViewReq::pos_id(req);
    v6 = PhotoActivity::viewPhotoByPosId(v8, v9);
  }
  std::shared_ptr<PhotoActivity>::~shared_ptr((std::shared_ptr<PhotoActivity> *const)(v3 + 32));
  result = v6;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3275: range 00000000137816EA-00000000137818E2
int32_t __cdecl ActivityHandler::onIrodoriEditFlowerCombinationReq(
        ActivityHandler *const this,
        const proto::IrodoriEditFlowerCombinationReq *req,
        proto::IrodoriEditFlowerCombinationRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  IrodoriActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3276";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onIrodoriEditFlowerCombinationReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<IrodoriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<IrodoriActivity>(0LL, (const std::shared_ptr<IrodoriActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onIrodoriEditFlowerCombinationReq",
      3279);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[IRODORI] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = IrodoriActivity::onEditFlowerCombinationReq(v7, req, rsp_0);
  }
  std::shared_ptr<IrodoriActivity>::~shared_ptr((std::shared_ptr<IrodoriActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3287: range 00000000137818E4-0000000013781B62
int32_t __cdecl ActivityHandler::onIrodoriChessEquipCardReq(
        ActivityHandler *const this,
        const proto::IrodoriChessEquipCardReq *req,
        proto::IrodoriChessEquipCardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  IrodoriActivity *v7; // rax
  int32_t result; // eax
  bool is_hard_map; // [rsp+27h] [rbp-99h]
  uint32_t level_id; // [rsp+28h] [rbp-98h]
  uint32_t card_id; // [rsp+2Ch] [rbp-94h]
  common::milog::MiLogStream v13; // [rsp+30h] [rbp-90h] BYREF
  char v14[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 irodori_activity_ptr:3295";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onIrodoriChessEquipCardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  level_id = proto::IrodoriChessEquipCardReq::level_id(req);
  is_hard_map = proto::IrodoriChessEquipCardReq::is_hard_map(req);
  card_id = proto::IrodoriChessEquipCardReq::card_id(req);
  proto::IrodoriChessEquipCardRsp::set_level_id(rsp_0, level_id);
  proto::IrodoriChessEquipCardRsp::set_is_hard_map(rsp_0, is_hard_map);
  proto::IrodoriChessEquipCardRsp::set_card_id(rsp_0, card_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<IrodoriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<IrodoriActivity>(0LL, (const std::shared_ptr<IrodoriActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v13,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onIrodoriChessEquipCardReq",
      3298);
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
      &v13,
      (const char (*)[37])"[IRODORI] irodori activity not open!");
    common::milog::MiLogStream::~MiLogStream(&v13);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = IrodoriActivity::equipCardForMap(v7, card_id, level_id, is_hard_map);
  }
  std::shared_ptr<IrodoriActivity>::~shared_ptr((std::shared_ptr<IrodoriActivity> *const)(v3 + 32));
  result = v6;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3306: range 0000000013781B64-0000000013781DE2
int32_t __cdecl ActivityHandler::onIrodoriChessUnequipCardReq(
        ActivityHandler *const this,
        const proto::IrodoriChessUnequipCardReq *req,
        proto::IrodoriChessUnequipCardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  IrodoriActivity *v7; // rax
  int32_t result; // eax
  bool is_hard_map; // [rsp+27h] [rbp-99h]
  uint32_t level_id; // [rsp+28h] [rbp-98h]
  uint32_t card_id; // [rsp+2Ch] [rbp-94h]
  common::milog::MiLogStream v13; // [rsp+30h] [rbp-90h] BYREF
  char v14[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 irodori_activity_ptr:3314";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onIrodoriChessUnequipCardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  level_id = proto::IrodoriChessUnequipCardReq::level_id(req);
  is_hard_map = proto::IrodoriChessUnequipCardReq::is_hard_map(req);
  card_id = proto::IrodoriChessUnequipCardReq::card_id(req);
  proto::IrodoriChessUnequipCardRsp::set_level_id(rsp_0, level_id);
  proto::IrodoriChessUnequipCardRsp::set_is_hard_map(rsp_0, is_hard_map);
  proto::IrodoriChessUnequipCardRsp::set_card_id(rsp_0, card_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<IrodoriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<IrodoriActivity>(0LL, (const std::shared_ptr<IrodoriActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v13,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onIrodoriChessUnequipCardReq",
      3317);
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
      &v13,
      (const char (*)[37])"[IRODORI] irodori activity not open!");
    common::milog::MiLogStream::~MiLogStream(&v13);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = IrodoriActivity::unequipCardForMap(v7, card_id, level_id, is_hard_map);
  }
  std::shared_ptr<IrodoriActivity>::~shared_ptr((std::shared_ptr<IrodoriActivity> *const)(v3 + 32));
  result = v6;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3325: range 0000000013781DE4-0000000013782033
int32_t __cdecl ActivityHandler::onEnterIrodoriChessDungeonReq(
        ActivityHandler *const this,
        const proto::EnterIrodoriChessDungeonReq *req,
        proto::EnterIrodoriChessDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  IrodoriActivity *v7; // rax
  int32_t result; // eax
  bool is_hard_map; // [rsp+2Bh] [rbp-95h]
  uint32_t level_id; // [rsp+2Ch] [rbp-94h]
  common::milog::MiLogStream v12; // [rsp+30h] [rbp-90h] BYREF
  char v13[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 irodori_activity_ptr:3331";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEnterIrodoriChessDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  level_id = proto::EnterIrodoriChessDungeonReq::level_id(req);
  is_hard_map = proto::EnterIrodoriChessDungeonReq::is_hard_map(req);
  proto::EnterIrodoriChessDungeonRsp::set_level_id(rsp_0, level_id);
  proto::EnterIrodoriChessDungeonRsp::set_is_hard_map(rsp_0, is_hard_map);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<IrodoriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<IrodoriActivity>(0LL, (const std::shared_ptr<IrodoriActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onEnterIrodoriChessDungeonReq",
      3334);
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
      &v12,
      (const char (*)[37])"[IRODORI] irodori activity not open!");
    common::milog::MiLogStream::~MiLogStream(&v12);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = IrodoriActivity::enterChessDungeon(v7, level_id, is_hard_map);
  }
  std::shared_ptr<IrodoriActivity>::~shared_ptr((std::shared_ptr<IrodoriActivity> *const)(v3 + 32));
  result = v6;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3341: range 0000000013782034-000000001378222C
int32_t __cdecl ActivityHandler::onIrodoriScanEntityReq(
        ActivityHandler *const this,
        const proto::IrodoriScanEntityReq *req,
        proto::IrodoriScanEntityRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  IrodoriActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3342";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onIrodoriScanEntityReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<IrodoriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<IrodoriActivity>(0LL, (const std::shared_ptr<IrodoriActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onIrodoriScanEntityReq",
      3345);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[IRODORI] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = IrodoriActivity::onScanEntityReq(v7, req, rsp_0);
  }
  std::shared_ptr<IrodoriActivity>::~shared_ptr((std::shared_ptr<IrodoriActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3352: range 000000001378222E-0000000013782426
int32_t __cdecl ActivityHandler::onIrodoriFillPoetryReq(
        ActivityHandler *const this,
        const proto::IrodoriFillPoetryReq *req,
        proto::IrodoriFillPoetryRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  IrodoriActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3353";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onIrodoriFillPoetryReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<IrodoriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<IrodoriActivity>(0LL, (const std::shared_ptr<IrodoriActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onIrodoriFillPoetryReq",
      3356);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[IRODORI] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = IrodoriActivity::onFillPoetryReq(v7, req, rsp_0);
  }
  std::shared_ptr<IrodoriActivity>::~shared_ptr((std::shared_ptr<IrodoriActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3363: range 0000000013782428-0000000013782639
int32_t __cdecl ActivityHandler::onIrodoriMasterGalleryCgEndNotify(
        ActivityHandler *const this,
        const proto::IrodoriMasterGalleryCgEndNotify *notify)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  int32_t v5; // r14d
  IrodoriActivity *v6; // r14
  uint32_t v7; // r15d
  uint32_t v8; // eax
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 17 activity_ptr:3364";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onIrodoriMasterGalleryCgEndNotify;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<IrodoriActivity>((PlayerActivityComp *const)(v2 + 32));
  if ( std::operator==<IrodoriActivity>(0LL, (const std::shared_ptr<IrodoriActivity> *)(v2 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onIrodoriMasterGalleryCgEndNotify",
      3367);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[IRODORI] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v5 = 860;
  }
  else
  {
    v6 = std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    v7 = proto::IrodoriMasterGalleryCgEndNotify::level_id(notify);
    v8 = proto::IrodoriMasterGalleryCgEndNotify::gallery_id(notify);
    IrodoriActivity::onIrodoriMasterGalleryCgEnd(v6, v8, v7);
    v5 = 0;
  }
  std::shared_ptr<IrodoriActivity>::~shared_ptr((std::shared_ptr<IrodoriActivity> *const)(v2 + 32));
  result = v5;
  if ( v11 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3375: range 000000001378263A-000000001378284F
int32_t __cdecl ActivityHandler::onIrodoriMasterStartGalleryReq(
        ActivityHandler *const this,
        const proto::IrodoriMasterStartGalleryReq *req,
        proto::IrodoriMasterStartGalleryRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t started; // r14d
  IrodoriActivity *v7; // r14
  uint32_t v8; // r15d
  uint32_t v9; // eax
  int32_t result; // eax
  common::milog::MiLogStream v11; // [rsp+20h] [rbp-90h] BYREF
  char v12[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3376";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onIrodoriMasterStartGalleryReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<IrodoriActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<IrodoriActivity>(0LL, (const std::shared_ptr<IrodoriActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v11,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onIrodoriMasterStartGalleryReq",
      3379);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v11,
      (const char (*)[34])"[IRODORI] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v11);
    started = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<IrodoriActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = proto::IrodoriMasterStartGalleryReq::difficulty(req);
    v9 = proto::IrodoriMasterStartGalleryReq::level_id(req);
    started = IrodoriActivity::startIrodoriMasterGallery(v7, v9, v8);
  }
  std::shared_ptr<IrodoriActivity>::~shared_ptr((std::shared_ptr<IrodoriActivity> *const)(v3 + 32));
  result = started;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3386: range 0000000013782850-0000000013782A3E
int32_t __cdecl ActivityHandler::onGachaActivityUpdateElemNotify(
        ActivityHandler *const this,
        const proto::GachaActivityUpdateElemNotify *notify)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  int32_t v5; // r14d
  std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // r14
  uint32_t v7; // eax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+10h] [rbp-90h] BYREF
  char v10[112]; // [rsp+30h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 17 activity_ptr:3387";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onGachaActivityUpdateElemNotify;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GachaActivity>((PlayerActivityComp *const)(v2 + 32));
  if ( std::operator==<GachaActivity>(0LL, (const std::shared_ptr<GachaActivity> *)(v2 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGachaActivityUpdateElemNotify",
      3390);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v9, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v9);
    v5 = 860;
  }
  else
  {
    v6 = std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    v7 = proto::GachaActivityUpdateElemNotify::elem_type(notify);
    GachaActivity::onUpdateElem(v6, v7);
    v5 = 0;
  }
  std::shared_ptr<GachaActivity>::~shared_ptr((std::shared_ptr<GachaActivity> *const)(v2 + 32));
  result = v5;
  if ( v10 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3398: range 0000000013782A40-0000000013782C7C
int32_t __cdecl ActivityHandler::onGachaActivityCreateRobotReq(
        ActivityHandler *const this,
        const proto::GachaActivityCreateRobotReq *req,
        proto::GachaActivityCreateRobotRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int32_t result; // eax
  int32_t retcode; // [rsp+2Ch] [rbp-B4h]
  common::milog::MiLogStream v11; // [rsp+30h] [rbp-B0h] BYREF
  char v12[144]; // [rsp+50h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 13 robot_id:3405 64 16 17 activity_ptr:3399";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGachaActivityCreateRobotReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GachaActivity>((PlayerActivityComp *const)(v3 + 64));
  if ( std::operator==<GachaActivity>(0LL, (const std::shared_ptr<GachaActivity> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v11,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGachaActivityCreateRobotReq",
      3402);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v11, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v11);
    v6 = 860;
  }
  else
  {
    *(_DWORD *)(v3 + 48) = 0;
    v7 = std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    retcode = GachaActivity::calcWeightAndProduct(v7, (uint32_t *)(v3 + 48));
    proto::GachaActivityCreateRobotRsp::set_robot_id(rsp_0, *(_DWORD *)(v3 + 48));
    v6 = retcode;
  }
  std::shared_ptr<GachaActivity>::~shared_ptr((std::shared_ptr<GachaActivity> *const)(v3 + 64));
  result = v6;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 3412: range 0000000013782C7E-0000000013782EB6
int32_t __cdecl ActivityHandler::onGachaActivityTakeRewardReq(
        ActivityHandler *const this,
        const proto::GachaActivityTakeRewardReq *req,
        proto::GachaActivityTakeRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // r14
  const google::protobuf::Map<unsigned int,unsigned int> *v8; // rax
  const google::protobuf::Map<unsigned int,unsigned int> *v9; // r14
  google::protobuf::Map<unsigned int,unsigned int> *v10; // rax
  int32_t result; // eax
  int32_t retcode; // [rsp+2Ch] [rbp-94h]
  common::milog::MiLogStream v14; // [rsp+30h] [rbp-90h] BYREF
  char v15[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v15;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3413";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGachaActivityTakeRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GachaActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GachaActivity>(0LL, (const std::shared_ptr<GachaActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v14,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGachaActivityTakeRewardReq",
      3416);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v14, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v14);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = proto::GachaActivityTakeRewardReq::robot_num_map(req);
    retcode = GachaActivity::onTakeReward(v7, v8);
    if ( !retcode )
    {
      v9 = proto::GachaActivityTakeRewardReq::robot_num_map(req);
      v10 = proto::GachaActivityTakeRewardRsp::mutable_robot_num_map(rsp_0);
      google::protobuf::Map<unsigned int,unsigned int>::operator=(v10, v9);
    }
    v6 = retcode;
  }
  std::shared_ptr<GachaActivity>::~shared_ptr((std::shared_ptr<GachaActivity> *const)(v3 + 32));
  result = v6;
  if ( v15 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3428: range 0000000013782EB8-00000000137830DC
int32_t __cdecl ActivityHandler::onGachaActivityResetReq(
        ActivityHandler *const this,
        const proto::GachaActivityResetReq *req,
        proto::GachaActivityResetRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // r14
  uint32_t v8; // eax
  google::protobuf::uint32 v9; // edx
  int32_t result; // eax
  int32_t retcode; // [rsp+2Ch] [rbp-94h]
  common::milog::MiLogStream v13; // [rsp+30h] [rbp-90h] BYREF
  char v14[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3429";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGachaActivityResetReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GachaActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GachaActivity>(0LL, (const std::shared_ptr<GachaActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v13,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGachaActivityResetReq",
      3432);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v13, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v13);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = proto::GachaActivityResetReq::stage_id(req);
    retcode = GachaActivity::resetStage(v7, v8);
    v9 = proto::GachaActivityResetReq::stage_id(req);
    proto::GachaActivityResetRsp::set_stage_id(rsp_0, v9);
    v6 = retcode;
  }
  std::shared_ptr<GachaActivity>::~shared_ptr((std::shared_ptr<GachaActivity> *const)(v3 + 32));
  result = v6;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3441: range 00000000137830DE-00000000137832FA
int32_t __cdecl ActivityHandler::onGachaActivityNextStageReq(
        ActivityHandler *const this,
        const proto::GachaActivityNextStageReq *req,
        proto::GachaActivityNextStageRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  int32_t v6; // r14d
  std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  uint32_t ItemStage; // edx
  int32_t result; // eax
  int32_t retcode; // [rsp+2Ch] [rbp-94h]
  common::milog::MiLogStream v13; // [rsp+30h] [rbp-90h] BYREF
  char v14[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3442";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGachaActivityNextStageReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GachaActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GachaActivity>(0LL, (const std::shared_ptr<GachaActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v13,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGachaActivityNextStageReq",
      3445);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v13, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v13);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    retcode = GachaActivity::itemStageChange(v7, 0);
    v8 = std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GachaActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    ItemStage = GachaActivity::getItemStage(v8);
    proto::GachaActivityNextStageRsp::set_stage_id(rsp_0, ItemStage);
    v6 = retcode;
  }
  std::shared_ptr<GachaActivity>::~shared_ptr((std::shared_ptr<GachaActivity> *const)(v3 + 32));
  result = v6;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3455: range 00000000137832FC-0000000013783CAA
int32_t __cdecl ActivityHandler::onActivityGiveFriendGiftReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  uint32_t ActivityComp; // r14d
  uint32_t v7; // eax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  google::protobuf::uint32 v13; // r14d
  PlayerSocialComp *SocialComp; // r14
  uint32_t v15; // eax
  common::milog::MiLogStream *v16; // r14
  common::milog::MiLogStream *v17; // rax
  common::milog::MiLogStream *v18; // r14
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // r14
  unsigned __int64 v20; // rax
  __int64 (__fastcall *v21)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const google::protobuf::Map<unsigned int,unsigned int> *); // r15
  const google::protobuf::Map<unsigned int,unsigned int> *v22; // rax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  uint32_t ScheduleId; // eax
  google::protobuf::uint32 v25; // eax
  google::protobuf::Map<unsigned int,unsigned int> *v26; // r14
  const google::protobuf::Map<unsigned int,unsigned int> *v27; // rax
  google::protobuf::uint32 v28; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+24h] [rbp-1ACh] BYREF
  unsigned int Uid; // [rsp+28h] [rbp-1A8h] BYREF
  int32_t retcode; // [rsp+2Ch] [rbp-1A4h]
  const proto::ActivityGiveFriendGiftReq *req; // [rsp+30h] [rbp-1A0h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+38h] [rbp-198h]
  common::milog::MiLogStream v35; // [rsp+40h] [rbp-190h] BYREF
  char v36[368]; // [rsp+60h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v36;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "4 32 16 12 req_ptr:3456 64 16 17 activity_ptr:3462 96 48 8 rsp:3496 176 104 15 server_req:3487";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onActivityGiveFriendGiftReq;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -219021312;
  v4[536862724] = -219021312;
  v4[536862725] = 62194;
  v4[536862728] = -218103808;
  v4[536862729] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityGiveFriendGiftReq>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ActivityGiveFriendGiftReq const>(
         (const std::shared_ptr<const proto::ActivityGiveFriendGiftReq> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v35,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivityGiveFriendGiftReq",
      3456);
    common::milog::MiLogStream::operator()(&v35, off_250501A0);
    common::milog::MiLogStream::~MiLogStream(&v35);
    v5 = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::ActivityGiveFriendGiftReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityGiveFriendGiftReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = -1;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 64));
    conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64))->design_config.txt_config_mgr.new_activity_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 64));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    v7 = proto::ActivityGiveFriendGiftReq::schedule_id(req);
    NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
    PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v2 + 64), ActivityComp);
    if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v2 + 64), 0LL)
      || (v8 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64)),
          !BaseActivity::isOpening(v8, 0)) )
    {
      common::milog::MiLogStream::create(
        &v35,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onActivityGiveFriendGiftReq",
        3465);
      v10 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
              &v35,
              (const char (*)[49])"[ACTIVITY] activity is not opening, schedule_id:");
      val = proto::ActivityGiveFriendGiftReq::schedule_id(req);
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Uid = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &Uid);
      common::milog::MiLogStream::~MiLogStream(&v35);
      retcode = 860;
    }
    else
    {
      v13 = proto::ActivityGiveFriendGiftReq::uid(req);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( v13 == Player::getUid(this->player_) )
      {
        common::milog::MiLogStream::create(
          &v35,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onActivityGiveFriendGiftReq",
          3471);
        common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
          &v35,
          (const char (*)[33])"[ACTIVITY] target cannot be self");
        common::milog::MiLogStream::~MiLogStream(&v35);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        SocialComp = Player::getSocialComp(this->player_);
        v15 = proto::ActivityGiveFriendGiftReq::uid(req);
        if ( !PlayerSocialComp::isPlayerFriend(SocialComp, v15) )
        {
          common::milog::MiLogStream::create(
            &v35,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onActivityGiveFriendGiftReq",
            3476);
          v16 = common::milog::MiLogStream::operator<<<char [42],(char *[42])0>(
                  &v35,
                  (const char (*)[42])"[ACTIVITY] player is not friend, req uid:");
          val = proto::ActivityGiveFriendGiftReq::uid(req);
          v17 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v16, &val);
          v18 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v17, (const char (*)[6])" uid:");
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8();
          Uid = Player::getUid(this->player_);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &Uid);
          common::milog::MiLogStream::~MiLogStream(&v35);
          retcode = 7008;
        }
        else
        {
          v19 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
          if ( *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) )
            __asan_report_load8();
          v20 = (unsigned __int64)(v19->_vptr_DescribalBase + 28);
          if ( *(_BYTE *)((v20 >> 3) + 0x7FFF8000) )
            v20 = __asan_report_load8();
          v21 = *(__int64 (__fastcall **)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const google::protobuf::Map<unsigned int,unsigned int> *))v20;
          v22 = proto::ActivityGiveFriendGiftReq::gift_num_map(req);
          retcode = v21(v19, v22);
          if ( retcode )
          {
            common::milog::MiLogStream::create(
              &v35,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/handler/activity_handler.cpp",
              "onActivityGiveFriendGiftReq",
              3484);
            common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
              &v35,
              (const char (*)[36])"[ACTIVITY] checkGiveFriendGift fail");
            common::milog::MiLogStream::~MiLogStream(&v35);
          }
          else
          {
            proto::ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq((proto::ServerActivityGetFriendGiftDataReq *const)(v2 + 176));
            v23 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
            ScheduleId = BaseActivity::getScheduleId(v23);
            proto::ServerActivityGetFriendGiftDataReq::set_schedule_id(
              (proto::ServerActivityGetFriendGiftDataReq *const)(v2 + 176),
              ScheduleId);
            v25 = proto::ActivityGiveFriendGiftReq::uid(req);
            proto::ServerActivityGetFriendGiftDataReq::set_friend_uid(
              (proto::ServerActivityGetFriendGiftDataReq *const)(v2 + 176),
              v25);
            v26 = proto::ServerActivityGetFriendGiftDataReq::mutable_give_gift_num_map((proto::ServerActivityGetFriendGiftDataReq *const)(v2 + 176));
            v27 = proto::ActivityGiveFriendGiftReq::gift_num_map(req);
            common::tools::MiscUtils::toProtoMap<google::protobuf::Map<unsigned int,unsigned int>,google::protobuf::Map<unsigned int,unsigned int>>(
              v27,
              v26);
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8();
            retcode = sendProtoToSocialService<proto::ServerActivityGetFriendGiftDataReq>(
                        this->player_,
                        (proto::ServerActivityGetFriendGiftDataReq *)(v2 + 176));
            proto::ServerActivityGetFriendGiftDataReq::~ServerActivityGetFriendGiftDataReq((proto::ServerActivityGetFriendGiftDataReq *const)(v2 + 176));
          }
        }
      }
    }
    std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v2 + 64));
    if ( retcode )
    {
      proto::ActivityGiveFriendGiftRsp::ActivityGiveFriendGiftRsp((proto::ActivityGiveFriendGiftRsp *const)(v2 + 96));
      v28 = proto::ActivityGiveFriendGiftReq::schedule_id(req);
      proto::ActivityGiveFriendGiftRsp::set_schedule_id((proto::ActivityGiveFriendGiftRsp *const)(v2 + 96), v28);
      proto::ActivityGiveFriendGiftRsp::set_retcode((proto::ActivityGiveFriendGiftRsp *const)(v2 + 96), retcode);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 96));
      proto::ActivityGiveFriendGiftRsp::~ActivityGiveFriendGiftRsp((proto::ActivityGiveFriendGiftRsp *const)(v2 + 96));
    }
    v5 = 0;
  }
  std::shared_ptr<proto::ActivityGiveFriendGiftReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityGiveFriendGiftReq> *const)(v2 + 32));
  result = v5;
  if ( v36 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3506: range 0000000013783CAC-00000000137846C2
int32_t __cdecl ActivityHandler::onServerActivityGetFriendGiftDataRsp(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  uint32_t ActivityComp; // r14d
  uint32_t v7; // eax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // r14
  unsigned __int64 v14; // rax
  __int64 (__fastcall *v15)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const google::protobuf::Map<unsigned int,unsigned int> *); // r15
  const google::protobuf::Map<unsigned int,unsigned int> *v16; // rax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // r14
  unsigned __int64 v18; // rax
  __int64 (__fastcall *v19)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, _QWORD, const google::protobuf::Map<unsigned int,unsigned int> *, const google::protobuf::Map<unsigned int,unsigned int> *, unsigned __int64); // r15
  google::protobuf::uint32 v20; // eax
  common::milog::MiLogStream *v21; // r14
  uint32_t v22; // eax
  google::protobuf::Map<unsigned int,unsigned int> *v23; // r14
  const google::protobuf::Map<unsigned int,unsigned int> *v24; // rax
  google::protobuf::uint32 v25; // eax
  PlayerOfflineOpComp *OfflineOpComp; // r14
  uint32_t v27; // eax
  BaseActivity *v28; // r14
  const google::protobuf::Map<unsigned int,unsigned int> *v29; // r15
  uint32_t v30; // eax
  google::protobuf::uint32 v31; // eax
  google::protobuf::RepeatedField<unsigned int> *v32; // rax
  int32_t result; // eax
  const google::protobuf::Map<unsigned int,unsigned int> *v34; // [rsp+10h] [rbp-200h]
  const google::protobuf::Map<unsigned int,unsigned int> *v35; // [rsp+18h] [rbp-1F8h]
  unsigned int val; // [rsp+34h] [rbp-1DCh] BYREF
  unsigned int Uid; // [rsp+38h] [rbp-1D8h] BYREF
  int32_t retcode; // [rsp+3Ch] [rbp-1D4h]
  const proto::ServerActivityGetFriendGiftDataRsp *server_rsp; // [rsp+40h] [rbp-1D0h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+48h] [rbp-1C8h]
  proto::OfflineOpBin *offline_op_bin; // [rsp+50h] [rbp-1C0h]
  proto::OfflineOpActivityGiveGift *give_gift_op; // [rsp+58h] [rbp-1B8h]
  common::milog::MiLogStream v43; // [rsp+60h] [rbp-1B0h] BYREF
  common::milog::MiLogStream v44; // [rsp+80h] [rbp-190h] BYREF
  char v45[368]; // [rsp+A0h] [rbp-170h] BYREF

  v2 = (unsigned __int64)v45;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(320LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 32 16 19 server_rsp_ptr:3507 64 16 17 activity_ptr:3514 96 24 19 limit_gift_vec:3510 160 40 20"
                        " offline_op_data:3536 240 48 8 rsp:3548";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onServerActivityGetFriendGiftDataRsp;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -219021312;
  v4[536862723] = -234881024;
  v4[536862724] = -218959118;
  v4[536862726] = -218959360;
  v4[536862727] = 62194;
  v4[536862729] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ServerActivityGetFriendGiftDataRsp>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ServerActivityGetFriendGiftDataRsp const>(
         (const std::shared_ptr<const proto::ServerActivityGetFriendGiftDataRsp> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v44,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onServerActivityGetFriendGiftDataRsp",
      3507);
    common::milog::MiLogStream::operator()(&v44, off_25050480);
    common::milog::MiLogStream::~MiLogStream(&v44);
    v5 = -1;
  }
  else
  {
    server_rsp = std::__shared_ptr_access<proto::ServerActivityGetFriendGiftDataRsp const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ServerActivityGetFriendGiftDataRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    retcode = -1;
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 96));
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 64));
    conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64))->design_config.txt_config_mgr.new_activity_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 64));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    v7 = proto::ServerActivityGetFriendGiftDataRsp::schedule_id(server_rsp);
    NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
    PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v2 + 64), ActivityComp);
    if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v2 + 64), 0LL)
      || (v8 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64)),
          !BaseActivity::isOpening(v8, 0)) )
    {
      common::milog::MiLogStream::create(
        &v44,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onServerActivityGetFriendGiftDataRsp",
        3517);
      v10 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
              &v44,
              (const char (*)[49])"[ACTIVITY] activity is not opening, schedule_id:");
      val = proto::ServerActivityGetFriendGiftDataRsp::schedule_id(server_rsp);
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Uid = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &Uid);
      common::milog::MiLogStream::~MiLogStream(&v44);
      retcode = 860;
    }
    else
    {
      v13 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      v14 = (unsigned __int64)(v13->_vptr_DescribalBase + 28);
      if ( *(_BYTE *)((v14 >> 3) + 0x7FFF8000) )
        v14 = __asan_report_load8();
      v15 = *(__int64 (__fastcall **)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const google::protobuf::Map<unsigned int,unsigned int> *))v14;
      v16 = proto::ServerActivityGetFriendGiftDataRsp::give_gift_num_map(server_rsp);
      retcode = v15(v13, v16);
      if ( retcode )
      {
        common::milog::MiLogStream::create(
          &v44,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onServerActivityGetFriendGiftDataRsp",
          3525);
        common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
          &v44,
          (const char (*)[36])"[ACTIVITY] checkGiveFriendGift fail");
        common::milog::MiLogStream::~MiLogStream(&v44);
      }
      else
      {
        v17 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
        if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        v18 = (unsigned __int64)(v17->_vptr_DescribalBase + 29);
        if ( *(_BYTE *)((v18 >> 3) + 0x7FFF8000) )
          v18 = __asan_report_load8();
        v19 = *(__int64 (__fastcall **)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, _QWORD, const google::protobuf::Map<unsigned int,unsigned int> *, const google::protobuf::Map<unsigned int,unsigned int> *, unsigned __int64))v18;
        v35 = proto::ServerActivityGetFriendGiftDataRsp::have_gift_num_map(server_rsp);
        v34 = proto::ServerActivityGetFriendGiftDataRsp::give_gift_num_map(server_rsp);
        v20 = proto::ServerActivityGetFriendGiftDataRsp::friend_uid(server_rsp);
        retcode = v19(v17, v20, v34, v35, v2 + 96);
        if ( retcode )
        {
          common::milog::MiLogStream::create(
            &v43,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/handler/activity_handler.cpp",
            "onServerActivityGetFriendGiftDataRsp",
            3532);
          v21 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(&v43, (const char (*)[12])"[ACTIVITY] ");
          google::protobuf::Message::ShortDebugString[abi:cxx11](
            (std::string *)&v44,
            &server_rsp->google::protobuf::Message);
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, (const std::string *)&v44);
          std::string::~string(&v44);
          common::milog::MiLogStream::~MiLogStream(&v43);
        }
        else
        {
          proto::OfflineOpData::OfflineOpData((proto::OfflineOpData *const)(v2 + 160));
          proto::OfflineOpData::set_max_length((proto::OfflineOpData *const)(v2 + 160), 0x32u);
          offline_op_bin = proto::OfflineOpData::mutable_bin((proto::OfflineOpData *const)(v2 + 160));
          give_gift_op = proto::OfflineOpBin::mutable_activity_give_gift_op(offline_op_bin);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8();
          v22 = Player::getUid(this->player_);
          proto::OfflineOpActivityGiveGift::set_uid(give_gift_op, v22);
          v23 = proto::OfflineOpActivityGiveGift::mutable_gift_num_map(give_gift_op);
          v24 = proto::ServerActivityGetFriendGiftDataRsp::give_gift_num_map(server_rsp);
          common::tools::MiscUtils::toProtoMap<google::protobuf::Map<unsigned int,unsigned int>,google::protobuf::Map<unsigned int,unsigned int>>(
            v24,
            v23);
          v25 = proto::ServerActivityGetFriendGiftDataRsp::schedule_id(server_rsp);
          proto::OfflineOpActivityGiveGift::set_schedule_id(give_gift_op, v25);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8();
          OfflineOpComp = Player::getOfflineOpComp(this->player_);
          v27 = proto::ServerActivityGetFriendGiftDataRsp::friend_uid(server_rsp);
          PlayerOfflineOpComp::sendOfflineOp(
            OfflineOpComp,
            v27,
            OFFLINE_OP_ACTIVITY_GIVE_GIFT,
            (proto::OfflineOpData *)(v2 + 160));
          v28 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64));
          v29 = proto::ServerActivityGetFriendGiftDataRsp::give_gift_num_map(server_rsp);
          v30 = proto::ServerActivityGetFriendGiftDataRsp::friend_uid(server_rsp);
          BaseActivity::printGiftLog(v28, v30, 1u, v29);
          proto::OfflineOpData::~OfflineOpData((proto::OfflineOpData *const)(v2 + 160));
        }
      }
    }
    std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v2 + 64));
    proto::ActivityGiveFriendGiftRsp::ActivityGiveFriendGiftRsp((proto::ActivityGiveFriendGiftRsp *const)(v2 + 240));
    v31 = proto::ServerActivityGetFriendGiftDataRsp::schedule_id(server_rsp);
    proto::ActivityGiveFriendGiftRsp::set_schedule_id((proto::ActivityGiveFriendGiftRsp *const)(v2 + 240), v31);
    proto::ActivityGiveFriendGiftRsp::set_retcode((proto::ActivityGiveFriendGiftRsp *const)(v2 + 240), retcode);
    v32 = proto::ActivityGiveFriendGiftRsp::mutable_limit_gift_list((proto::ActivityGiveFriendGiftRsp *const)(v2 + 240));
    common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
      (const std::vector<unsigned int> *)(v2 + 96),
      v32);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 240));
    v5 = 0;
    proto::ActivityGiveFriendGiftRsp::~ActivityGiveFriendGiftRsp((proto::ActivityGiveFriendGiftRsp *const)(v2 + 240));
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 96));
  }
  std::shared_ptr<proto::ServerActivityGetFriendGiftDataRsp const>::~shared_ptr((std::shared_ptr<const proto::ServerActivityGetFriendGiftDataRsp> *const)(v2 + 32));
  result = v5;
  if ( v45 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8010) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8024) = 0;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3558: range 00000000137846C4-0000000013784EE0
int32_t __cdecl ActivityHandler::onActivityGetRecvGiftListReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  int32_t FriendBrief; // r14d
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  uint32_t ActivityComp; // r15d
  uint32_t v7; // eax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r15
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r15
  _BOOL4 v13; // r15d
  unsigned __int64 v14; // rax
  unsigned __int64 v15; // rdx
  int v16; // r15d
  uint32_t *v17; // rdx
  unsigned __int64 v18; // rax
  unsigned __int64 v19; // rdx
  proto::FriendBriefRequestReason v20; // eax
  google::protobuf::uint32 v21; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+28h] [rbp-1E8h] BYREF
  unsigned int v24; // [rsp+2Ch] [rbp-1E4h] BYREF
  int32_t retcode; // [rsp+30h] [rbp-1E0h]
  uint32_t uid; // [rsp+34h] [rbp-1DCh]
  std::set<unsigned int>::iterator __for_begin; // [rsp+38h] [rbp-1D8h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+40h] [rbp-1D0h] BYREF
  const proto::ActivityGetRecvGiftListReq *req; // [rsp+48h] [rbp-1C8h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+50h] [rbp-1C0h]
  std::set<unsigned int> *__for_range; // [rsp+58h] [rbp-1B8h]
  common::milog::MiLogStream v32; // [rsp+60h] [rbp-1B0h] BYREF
  char v33[400]; // [rsp+80h] [rbp-190h] BYREF

  v3 = (unsigned __int64)v33;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_3(352LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "5 32 16 12 req_ptr:3559 64 16 17 activity_ptr:3565 96 48 22 recv_gift_uid_set:3572 176 48 15 ser"
                        "ver_req:3581 256 56 8 rsp:3591";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityGetRecvGiftListReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -219021312;
  v5[536862724] = -219021312;
  v5[536862725] = 62194;
  v5[536862727] = -218959118;
  v5[536862729] = -218103808;
  v5[536862730] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityGetRecvGiftListReq>((common::minet::Packet *const)(v3 + 32));
  if ( std::operator==<proto::ActivityGetRecvGiftListReq const>(
         (const std::shared_ptr<const proto::ActivityGetRecvGiftListReq> *)(v3 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v32,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivityGetRecvGiftListReq",
      3559);
    common::milog::MiLogStream::operator()(&v32, off_250505E0);
    common::milog::MiLogStream::~MiLogStream(&v32);
    FriendBrief = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::ActivityGetRecvGiftListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityGetRecvGiftListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    retcode = -1;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v3 + 64));
    conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64))->design_config.txt_config_mgr.new_activity_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 64));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    v7 = proto::ActivityGetRecvGiftListReq::schedule_id(req);
    NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
    PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 64), ActivityComp);
    if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v3 + 64), 0LL)
      || (v8 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64)),
          !BaseActivity::isOpening(v8, 0)) )
    {
      common::milog::MiLogStream::create(
        &v32,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onActivityGetRecvGiftListReq",
        3568);
      v10 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
              &v32,
              (const char (*)[49])"[ACTIVITY] activity is not opening, schedule_id:");
      val = proto::ActivityGetRecvGiftListReq::schedule_id(req);
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      v24 = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &v24);
      common::milog::MiLogStream::~MiLogStream(&v32);
      retcode = 860;
      v13 = 0;
    }
    else
    {
      v14 = (unsigned __int64)std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      if ( *(_BYTE *)((v14 >> 3) + 0x7FFF8000) )
        v14 = __asan_report_load8();
      v15 = *(_QWORD *)v14 + 216LL;
      if ( *(_BYTE *)((v15 >> 3) + 0x7FFF8000) )
        v14 = __asan_report_load8();
      (*(void (__fastcall **)(unsigned __int64, unsigned __int64))v15)(v3 + 96, v14);
      if ( std::set<unsigned int>::empty((const std::set<unsigned int> *const)(v3 + 96)) )
      {
        retcode = 0;
        v16 = 0;
      }
      else
      {
        proto::ServerGetFriendBriefReq::ServerGetFriendBriefReq((proto::ServerGetFriendBriefReq *const)(v3 + 176));
        __for_range = (std::set<unsigned int> *)(v3 + 96);
        __for_begin._M_node = std::set<unsigned int>::begin((const std::set<unsigned int> *const)(v3 + 96))._M_node;
        __for_end._M_node = std::set<unsigned int>::end((const std::set<unsigned int> *const)(v3 + 96))._M_node;
        while ( std::operator!=(&__for_begin, &__for_end) )
        {
          v17 = (uint32_t *)std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
          if ( *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)v17 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v17 >> 3) + 0x7FFF8000) )
          {
            __asan_report_load4();
          }
          uid = *v17;
          proto::ServerGetFriendBriefReq::add_uid_list((proto::ServerGetFriendBriefReq *const)(v3 + 176), uid);
          std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
        }
        v18 = (unsigned __int64)std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        if ( *(_BYTE *)((v18 >> 3) + 0x7FFF8000) )
          v18 = __asan_report_load8();
        v19 = *(_QWORD *)v18 + 240LL;
        if ( *(_BYTE *)((v19 >> 3) + 0x7FFF8000) )
          v18 = __asan_report_load8();
        v20 = (*(unsigned int (__fastcall **)(unsigned __int64))v19)(v18);
        proto::ServerGetFriendBriefReq::set_reason((proto::ServerGetFriendBriefReq *const)(v3 + 176), v20);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        FriendBrief = sendProtoToSocialService<proto::ServerGetFriendBriefReq>(
                        this->player_,
                        (proto::ServerGetFriendBriefReq *)(v3 + 176));
        proto::ServerGetFriendBriefReq::~ServerGetFriendBriefReq((proto::ServerGetFriendBriefReq *const)(v3 + 176));
        v16 = 1;
      }
      std::set<unsigned int>::~set((std::set<unsigned int> *const)(v3 + 96));
      v13 = v16 != 0;
    }
    std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 64));
    if ( !v13 )
    {
      proto::ActivityGetRecvGiftListRsp::ActivityGetRecvGiftListRsp((proto::ActivityGetRecvGiftListRsp *const)(v3 + 256));
      v21 = proto::ActivityGetRecvGiftListReq::schedule_id(req);
      proto::ActivityGetRecvGiftListRsp::set_schedule_id((proto::ActivityGetRecvGiftListRsp *const)(v3 + 256), v21);
      proto::ActivityGetRecvGiftListRsp::set_retcode((proto::ActivityGetRecvGiftListRsp *const)(v3 + 256), retcode);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v3 + 256));
      FriendBrief = 0;
      proto::ActivityGetRecvGiftListRsp::~ActivityGetRecvGiftListRsp((proto::ActivityGetRecvGiftListRsp *const)(v3 + 256));
    }
  }
  std::shared_ptr<proto::ActivityGetRecvGiftListReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityGetRecvGiftListReq> *const)(v3 + 32));
  result = FriendBrief;
  if ( v33 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF801C) = 0;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8024) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 3601: range 0000000013784EE2-00000000137853BF
int32_t __cdecl ActivityHandler::onActivityAcceptGiveGiftReq(
        ActivityHandler *const this,
        const proto::ActivityAcceptGiveGiftReq *req,
        proto::ActivityAcceptGiveGiftRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  google::protobuf::uint32 v15; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // r14
  unsigned __int64 v17; // rax
  __int64 (__fastcall *v18)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, _QWORD, proto::ActivityAcceptGiftResultInfo *); // r15
  google::protobuf::uint32 v19; // eax
  BaseActivity *v20; // r14
  const google::protobuf::Map<unsigned int,unsigned int> *v21; // r15
  uint32_t v22; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+24h] [rbp-ACh] BYREF
  unsigned int Uid; // [rsp+28h] [rbp-A8h] BYREF
  int32_t retcode; // [rsp+2Ch] [rbp-A4h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+30h] [rbp-A0h]
  proto::ActivityAcceptGiftResultInfo *accept_gift_result_info; // [rsp+38h] [rbp-98h]
  common::milog::MiLogStream v30; // [rsp+40h] [rbp-90h] BYREF
  char v31[112]; // [rsp+60h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v31;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3605";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityAcceptGiveGiftReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::ActivityAcceptGiveGiftReq::schedule_id(req);
  proto::ActivityAcceptGiveGiftRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::ActivityAcceptGiveGiftReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v3 + 32), 0LL)
    || (v9 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v30,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivityAcceptGiveGiftReq",
      3608);
    v11 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
            &v30,
            (const char (*)[49])"[ACTIVITY] activity is not opening, schedule_id:");
    val = proto::ActivityAcceptGiveGiftReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v30);
    v14 = 860;
  }
  else
  {
    v15 = proto::ActivityAcceptGiveGiftReq::uid(req);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    if ( v15 == Player::getUid(this->player_) )
    {
      common::milog::MiLogStream::create(
        &v30,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onActivityAcceptGiveGiftReq",
        3613);
      common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(&v30, (const char (*)[22])"target cannot be self");
      common::milog::MiLogStream::~MiLogStream(&v30);
      v14 = -1;
    }
    else
    {
      accept_gift_result_info = proto::ActivityAcceptGiveGiftRsp::mutable_accept_gift_result_info(rsp_0);
      v16 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      if ( *(_BYTE *)(((unsigned __int64)v16 >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      v17 = (unsigned __int64)(v16->_vptr_DescribalBase + 31);
      if ( *(_BYTE *)((v17 >> 3) + 0x7FFF8000) )
        v17 = __asan_report_load8();
      v18 = *(__int64 (__fastcall **)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, _QWORD, proto::ActivityAcceptGiftResultInfo *))v17;
      v19 = proto::ActivityAcceptGiveGiftReq::uid(req);
      retcode = v18(v16, v19, accept_gift_result_info);
      if ( !retcode )
      {
        v20 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        v21 = proto::ActivityAcceptGiftResultInfo::accept_gift_num_map(accept_gift_result_info);
        v22 = proto::ActivityAcceptGiveGiftReq::uid(req);
        BaseActivity::printGiftLog(v20, v22, 2u, v21);
      }
      v14 = retcode;
    }
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v14;
  if ( v31 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3627: range 00000000137853C0-0000000013785701
int32_t __cdecl ActivityHandler::onActivityAcceptAllGiveGiftReq(
        ActivityHandler *const this,
        const proto::ActivityAcceptAllGiveGiftReq *req,
        proto::ActivityAcceptAllGiveGiftRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  BaseActivity *v15; // rdx
  int32_t result; // eax
  unsigned int val; // [rsp+20h] [rbp-A0h] BYREF
  unsigned int Uid; // [rsp+24h] [rbp-9Ch] BYREF
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v21; // [rsp+30h] [rbp-90h] BYREF
  char v22[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3631";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityAcceptAllGiveGiftReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::ActivityAcceptAllGiveGiftReq::schedule_id(req);
  proto::ActivityAcceptAllGiveGiftRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::ActivityAcceptAllGiveGiftReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v3 + 32), 0LL)
    || (v9 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v21,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivityAcceptAllGiveGiftReq",
      3634);
    v11 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
            &v21,
            (const char (*)[49])"[ACTIVITY] activity is not opening, schedule_id:");
    val = proto::ActivityAcceptAllGiveGiftReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v21);
    v14 = 860;
  }
  else
  {
    v15 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v14 = BaseActivity::onAcceptAllGiveGiftReq(v15, rsp_0);
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v14;
  if ( v22 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3642: range 0000000013785702-0000000013785A9D
int32_t __cdecl ActivityHandler::onActivityGetCanGiveFriendGiftReq(
        ActivityHandler *const this,
        const proto::ActivityGetCanGiveFriendGiftReq *req,
        proto::ActivityGetCanGiveFriendGiftRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // r14
  unsigned __int64 v16; // rax
  __int64 (__fastcall *v17)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, google::protobuf::Map<unsigned int,unsigned int> *); // r15
  google::protobuf::Map<unsigned int,unsigned int> *v18; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+20h] [rbp-A0h] BYREF
  unsigned int Uid; // [rsp+24h] [rbp-9Ch] BYREF
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v24; // [rsp+30h] [rbp-90h] BYREF
  char v25[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3646";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityGetCanGiveFriendGiftReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::ActivityGetCanGiveFriendGiftReq::schedule_id(req);
  proto::ActivityGetCanGiveFriendGiftRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::ActivityGetCanGiveFriendGiftReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v3 + 32), 0LL)
    || (v9 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v24,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivityGetCanGiveFriendGiftReq",
      3649);
    v11 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
            &v24,
            (const char (*)[49])"[ACTIVITY] activity is not opening, schedule_id:");
    val = proto::ActivityGetCanGiveFriendGiftReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v24);
    v14 = 860;
  }
  else
  {
    v15 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    v16 = (unsigned __int64)(v15->_vptr_DescribalBase + 32);
    if ( *(_BYTE *)((v16 >> 3) + 0x7FFF8000) )
      v16 = __asan_report_load8();
    v17 = *(__int64 (__fastcall **)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, google::protobuf::Map<unsigned int,unsigned int> *))v16;
    v18 = proto::ActivityGetCanGiveFriendGiftRsp::mutable_gift_num_map(rsp_0);
    v14 = v17(v15, v18);
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v14;
  if ( v25 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3657: range 0000000013785A9E-00000000137861F7
int32_t __cdecl ActivityHandler::onActivityGetFriendGiftWishListReq(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  uint32_t ActivityComp; // r14d
  uint32_t v7; // eax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  PlayerSocialComp *SocialComp; // rax
  google::protobuf::RepeatedField<unsigned int> *v14; // rax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  uint32_t ScheduleId; // eax
  unsigned __int64 v17; // rax
  unsigned __int64 v18; // rdx
  proto::FriendBriefRequestReason v19; // eax
  google::protobuf::uint32 v20; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+14h] [rbp-1CCh] BYREF
  unsigned int Uid; // [rsp+18h] [rbp-1C8h] BYREF
  int32_t retcode; // [rsp+1Ch] [rbp-1C4h]
  const proto::ActivityGetFriendGiftWishListReq *req; // [rsp+20h] [rbp-1C0h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-1B8h]
  common::milog::MiLogStream v27; // [rsp+30h] [rbp-1B0h] BYREF
  char v28[400]; // [rsp+50h] [rbp-190h] BYREF

  v2 = (unsigned __int64)v28;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_3(352LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "5 48 16 12 req_ptr:3658 80 16 17 activity_ptr:3664 112 24 19 friend_uid_vec:3673 176 48 15 serve"
                        "r_req:3672 256 56 8 rsp:3683";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onActivityGetFriendGiftWishListReq;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = 61937;
  v4[536862722] = 62194;
  v4[536862723] = 62194;
  v4[536862724] = -218959360;
  v4[536862725] = 62194;
  v4[536862727] = -218959118;
  v4[536862729] = -218103808;
  v4[536862730] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ActivityGetFriendGiftWishListReq>((common::minet::Packet *const)(v2 + 48));
  if ( std::operator==<proto::ActivityGetFriendGiftWishListReq const>(
         (const std::shared_ptr<const proto::ActivityGetFriendGiftWishListReq> *)(v2 + 48),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v27,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivityGetFriendGiftWishListReq",
      3658);
    common::milog::MiLogStream::operator()(&v27, off_25050860);
    common::milog::MiLogStream::~MiLogStream(&v27);
    v5 = -1;
  }
  else
  {
    req = std::__shared_ptr_access<proto::ActivityGetFriendGiftWishListReq const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ActivityGetFriendGiftWishListReq,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 48));
    retcode = -1;
    ServiceBox::findService<GameserverService>();
    GameserverService::getConfig((GameserverService *const)(v2 + 80));
    conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80))->design_config.txt_config_mgr.new_activity_config_mgr;
    std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 80));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
    v7 = proto::ActivityGetFriendGiftWishListReq::schedule_id(req);
    NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
    PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v2 + 80), ActivityComp);
    if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v2 + 80), 0LL)
      || (v8 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80)),
          !BaseActivity::isOpening(v8, 0)) )
    {
      common::milog::MiLogStream::create(
        &v27,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onActivityGetFriendGiftWishListReq",
        3667);
      v10 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
              &v27,
              (const char (*)[49])"[ACTIVITY] activity is not opening, schedule_id:");
      val = proto::ActivityGetFriendGiftWishListReq::schedule_id(req);
      v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
      v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Uid = Player::getUid(this->player_);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &Uid);
      common::milog::MiLogStream::~MiLogStream(&v27);
      retcode = 860;
    }
    else
    {
      proto::ServerActivityGetFriendGiftWishListReq::ServerActivityGetFriendGiftWishListReq((proto::ServerActivityGetFriendGiftWishListReq *const)(v2 + 176));
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v2 + 112));
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      SocialComp = Player::getSocialComp(this->player_);
      PlayerSocialComp::fillPlayerFriendList(SocialComp, (std::vector<unsigned int> *)(v2 + 112));
      v14 = proto::ServerActivityGetFriendGiftWishListReq::mutable_friend_uid_list((proto::ServerActivityGetFriendGiftWishListReq *const)(v2 + 176));
      common::tools::MiscUtils::vectorToRepeated<unsigned int,unsigned int>(
        (const std::vector<unsigned int> *)(v2 + 112),
        v14);
      v15 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80));
      ScheduleId = BaseActivity::getScheduleId(v15);
      proto::ServerActivityGetFriendGiftWishListReq::set_schedule_id(
        (proto::ServerActivityGetFriendGiftWishListReq *const)(v2 + 176),
        ScheduleId);
      v17 = (unsigned __int64)std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 80));
      if ( *(_BYTE *)((v17 >> 3) + 0x7FFF8000) )
        v17 = __asan_report_load8();
      v18 = *(_QWORD *)v17 + 240LL;
      if ( *(_BYTE *)((v18 >> 3) + 0x7FFF8000) )
        v17 = __asan_report_load8();
      v19 = (*(unsigned int (__fastcall **)(unsigned __int64))v18)(v17);
      proto::ServerActivityGetFriendGiftWishListReq::set_reason(
        (proto::ServerActivityGetFriendGiftWishListReq *const)(v2 + 176),
        v19);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      retcode = sendProtoToSocialService<proto::ServerActivityGetFriendGiftWishListReq>(
                  this->player_,
                  (proto::ServerActivityGetFriendGiftWishListReq *)(v2 + 176));
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v2 + 112));
      proto::ServerActivityGetFriendGiftWishListReq::~ServerActivityGetFriendGiftWishListReq((proto::ServerActivityGetFriendGiftWishListReq *const)(v2 + 176));
    }
    std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v2 + 80));
    if ( retcode )
    {
      proto::ActivityGetFriendGiftWishListRsp::ActivityGetFriendGiftWishListRsp((proto::ActivityGetFriendGiftWishListRsp *const)(v2 + 256));
      v20 = proto::ActivityGetFriendGiftWishListReq::schedule_id(req);
      proto::ActivityGetFriendGiftWishListRsp::set_schedule_id(
        (proto::ActivityGetFriendGiftWishListRsp *const)(v2 + 256),
        v20);
      proto::ActivityGetFriendGiftWishListRsp::set_retcode(
        (proto::ActivityGetFriendGiftWishListRsp *const)(v2 + 256),
        retcode);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 256));
      proto::ActivityGetFriendGiftWishListRsp::~ActivityGetFriendGiftWishListRsp((proto::ActivityGetFriendGiftWishListRsp *const)(v2 + 256));
    }
    v5 = 0;
  }
  std::shared_ptr<proto::ActivityGetFriendGiftWishListReq const>::~shared_ptr((std::shared_ptr<const proto::ActivityGetFriendGiftWishListReq> *const)(v2 + 48));
  result = v5;
  if ( v28 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF801C) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8024) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8020) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8028) = -168430091;
  }
  return result;
};

// Line 3693: range 00000000137861F8-0000000013786851
int32_t __cdecl ActivityHandler::onServerActivityGetFriendGiftWishListRsp(
        ActivityHandler *const this,
        common::minet::PacketPtr *p_packet_ptr)
{
  unsigned __int64 v2; // r13
  __int64 v3; // rax
  _DWORD *v4; // r12
  int32_t v5; // r14d
  uint32_t ActivityComp; // r14d
  uint32_t v7; // eax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  common::milog::MiLogStream *v10; // r14
  common::milog::MiLogStream *v11; // rax
  common::milog::MiLogStream *v12; // r14
  PlayerSocialComp *SocialComp; // rax
  const std::string *v14; // rax
  google::protobuf::uint32 v15; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+18h] [rbp-158h] BYREF
  unsigned int v18; // [rsp+1Ch] [rbp-154h] BYREF
  int32_t retcode; // [rsp+20h] [rbp-150h]
  uint32_t uid; // [rsp+24h] [rbp-14Ch]
  google::protobuf::RepeatedPtrField<proto::ActivityFriendGiftWishData>::const_iterator __for_begin; // [rsp+28h] [rbp-148h] BYREF
  google::protobuf::RepeatedPtrField<proto::ActivityFriendGiftWishData>::const_iterator __for_end; // [rsp+30h] [rbp-140h] BYREF
  const proto::ServerActivityGetFriendGiftWishListRsp *server_rsp; // [rsp+38h] [rbp-138h]
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+40h] [rbp-130h]
  const google::protobuf::RepeatedPtrField<proto::ActivityFriendGiftWishData> *__for_range; // [rsp+48h] [rbp-128h]
  const proto::ActivityFriendGiftWishData *friend_gift_wish_data; // [rsp+50h] [rbp-120h]
  proto::ActivityFriendGiftWishData *client_friend_gift_wish_data; // [rsp+58h] [rbp-118h]
  common::milog::MiLogStream v28; // [rsp+60h] [rbp-110h] BYREF
  char v29[240]; // [rsp+80h] [rbp-F0h] BYREF

  v2 = (unsigned __int64)v29;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_2(192LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "3 32 16 19 server_rsp_ptr:3694 64 16 17 activity_ptr:3706 96 56 8 rsp:3696";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onServerActivityGetFriendGiftWishListRsp;
  v4 = (_DWORD *)(v2 >> 3);
  v4[536862720] = -235802127;
  v4[536862721] = -219021312;
  v4[536862722] = -219021312;
  v4[536862724] = -218103808;
  v4[536862725] = -202116109;
  std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<common::minet::Packet,(__gnu_cxx::_Lock_policy)2,false,false> *const)p_packet_ptr);
  common::minet::Packet::getConstProto<proto::ServerActivityGetFriendGiftWishListRsp>((common::minet::Packet *const)(v2 + 32));
  if ( std::operator==<proto::ServerActivityGetFriendGiftWishListRsp const>(
         (const std::shared_ptr<const proto::ServerActivityGetFriendGiftWishListRsp> *)(v2 + 32),
         0LL) )
  {
    common::milog::MiLogStream::create(
      &v28,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onServerActivityGetFriendGiftWishListRsp",
      3694);
    common::milog::MiLogStream::operator()(&v28, off_25050980);
    common::milog::MiLogStream::~MiLogStream(&v28);
    v5 = -1;
  }
  else
  {
    server_rsp = std::__shared_ptr_access<proto::ServerActivityGetFriendGiftWishListRsp const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const proto::ServerActivityGetFriendGiftWishListRsp,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    proto::ActivityGetFriendGiftWishListRsp::ActivityGetFriendGiftWishListRsp((proto::ActivityGetFriendGiftWishListRsp *const)(v2 + 96));
    retcode = proto::ServerActivityGetFriendGiftWishListRsp::retcode(server_rsp);
    if ( !retcode )
    {
      ServiceBox::findService<GameserverService>();
      GameserverService::getConfig((GameserverService *const)(v2 + 64));
      conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64))->design_config.txt_config_mgr.new_activity_config_mgr;
      std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v2 + 64));
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
      v7 = proto::ServerActivityGetFriendGiftWishListRsp::schedule_id(server_rsp);
      NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v7);
      PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v2 + 64), ActivityComp);
      if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v2 + 64), 0LL)
        || (v8 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 64)),
            !BaseActivity::isOpening(v8, 0)) )
      {
        common::milog::MiLogStream::create(
          &v28,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/handler/activity_handler.cpp",
          "onServerActivityGetFriendGiftWishListRsp",
          3709);
        v10 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
                &v28,
                (const char (*)[49])"[ACTIVITY] activity is not opening, schedule_id:");
        val = proto::ServerActivityGetFriendGiftWishListRsp::schedule_id(server_rsp);
        v11 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
        v12 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v11, (const char (*)[6])" uid:");
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        v18 = Player::getUid(this->player_);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &v18);
        common::milog::MiLogStream::~MiLogStream(&v28);
        retcode = 860;
      }
      else
      {
        __for_range = proto::ServerActivityGetFriendGiftWishListRsp::friend_gift_wish_list(server_rsp);
        __for_begin.it_ = google::protobuf::RepeatedPtrField<proto::ActivityFriendGiftWishData>::begin(__for_range).it_;
        __for_end.it_ = google::protobuf::RepeatedPtrField<proto::ActivityFriendGiftWishData>::end(__for_range).it_;
        while ( google::protobuf::internal::RepeatedPtrIterator<proto::ActivityFriendGiftWishData const>::operator!=(
                  &__for_begin,
                  &__for_end) )
        {
          friend_gift_wish_data = google::protobuf::internal::RepeatedPtrIterator<proto::ActivityFriendGiftWishData const>::operator*(&__for_begin);
          client_friend_gift_wish_data = proto::ActivityGetFriendGiftWishListRsp::add_friend_gift_wish_list((proto::ActivityGetFriendGiftWishListRsp *const)(v2 + 96));
          proto::ActivityFriendGiftWishData::CopyFrom(client_friend_gift_wish_data, friend_gift_wish_data);
          uid = proto::ActivityFriendGiftWishData::uid(friend_gift_wish_data);
          if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
            __asan_report_load8();
          SocialComp = Player::getSocialComp(this->player_);
          v14 = PlayerSocialComp::findFriendRemarkName[abi:cxx11](SocialComp, uid);
          proto::ActivityFriendGiftWishData::set_remark_name(client_friend_gift_wish_data, v14);
          google::protobuf::internal::RepeatedPtrIterator<proto::ActivityFriendGiftWishData const>::operator++(&__for_begin);
        }
      }
      std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v2 + 64));
    }
    proto::ActivityGetFriendGiftWishListRsp::set_retcode(
      (proto::ActivityGetFriendGiftWishListRsp *const)(v2 + 96),
      retcode);
    v15 = proto::ServerActivityGetFriendGiftWishListRsp::schedule_id(server_rsp);
    proto::ActivityGetFriendGiftWishListRsp::set_schedule_id(
      (proto::ActivityGetFriendGiftWishListRsp *const)(v2 + 96),
      v15);
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    v5 = Player::sendProto(this->player_, (const google::protobuf::Message *)(v2 + 96));
    proto::ActivityGetFriendGiftWishListRsp::~ActivityGetFriendGiftWishListRsp((proto::ActivityGetFriendGiftWishListRsp *const)(v2 + 96));
  }
  std::shared_ptr<proto::ServerActivityGetFriendGiftWishListRsp const>::~shared_ptr((std::shared_ptr<const proto::ServerActivityGetFriendGiftWishListRsp> *const)(v2 + 32));
  result = v5;
  if ( v29 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v2 >> 3) + 0x7FFF8008) = 0;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3730: range 0000000013786852-0000000013786BED
int32_t __cdecl ActivityHandler::onActivitySetGiftWishReq(
        ActivityHandler *const this,
        const proto::ActivitySetGiftWishReq *req,
        proto::ActivitySetGiftWishRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  google::protobuf::uint32 v6; // edx
  uint32_t ActivityComp; // r14d
  uint32_t v8; // eax
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rax
  common::milog::MiLogStream *v11; // r14
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // r14
  int32_t v14; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // r14
  unsigned __int64 v16; // rax
  __int64 (__fastcall *v17)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const google::protobuf::Map<unsigned int,unsigned int> *); // r15
  const google::protobuf::Map<unsigned int,unsigned int> *v18; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+20h] [rbp-A0h] BYREF
  unsigned int Uid; // [rsp+24h] [rbp-9Ch] BYREF
  const NewActivityExcelConfigMgr *conf_mgr; // [rsp+28h] [rbp-98h]
  common::milog::MiLogStream v24; // [rsp+30h] [rbp-90h] BYREF
  char v25[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3734";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivitySetGiftWishReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::ActivitySetGiftWishReq::schedule_id(req);
  proto::ActivitySetGiftWishRsp::set_schedule_id(rsp_0, v6);
  ServiceBox::findService<GameserverService>();
  GameserverService::getConfig((GameserverService *const)(v3 + 32));
  conf_mgr = &std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Config,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32))->design_config.txt_config_mgr.new_activity_config_mgr;
  std::shared_ptr<Config>::~shared_ptr((std::shared_ptr<Config> *const)(v3 + 32));
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  v8 = proto::ActivitySetGiftWishReq::schedule_id(req);
  NewActivityExcelConfigMgr::getActivityIdByScheduleId(conf_mgr, v8);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>((const std::shared_ptr<BaseActivity> *)(v3 + 32), 0LL)
    || (v9 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v9, 0)) )
  {
    common::milog::MiLogStream::create(
      &v24,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onActivitySetGiftWishReq",
      3737);
    v11 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
            &v24,
            (const char (*)[49])"[ACTIVITY] activity is not opening, schedule_id:");
    val = proto::ActivitySetGiftWishReq::schedule_id(req);
    v12 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
    v13 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v12, (const char (*)[6])" uid:");
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Uid = Player::getUid(this->player_);
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v13, &Uid);
    common::milog::MiLogStream::~MiLogStream(&v24);
    v14 = 860;
  }
  else
  {
    v15 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    v16 = (unsigned __int64)(v15->_vptr_DescribalBase + 33);
    if ( *(_BYTE *)((v16 >> 3) + 0x7FFF8000) )
      v16 = __asan_report_load8();
    v17 = *(__int64 (__fastcall **)(std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const google::protobuf::Map<unsigned int,unsigned int> *))v16;
    v18 = proto::ActivitySetGiftWishReq::gift_num_map(req);
    v14 = v17(v15, v18);
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v14;
  if ( v25 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3744: range 0000000013786BEE-0000000013786D9B
int32_t __cdecl ActivityHandler::onStartRogueDiaryPlayReq(
        ActivityHandler *const this,
        const proto::StartRogueDiaryPlayReq *req,
        proto::StartRogueDiaryPlayRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t started; // r14d
  RogueDiaryActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3745";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onStartRogueDiaryPlayReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    started = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    started = RogueDiaryActivity::startRogueDiaryPlay(v9, req, rsp_0);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = started;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3754: range 0000000013786D9C-0000000013786F49
int32_t __cdecl ActivityHandler::onResetRogueDiaryPlayReq(
        ActivityHandler *const this,
        const proto::ResetRogueDiaryPlayReq *req,
        proto::ResetRogueDiaryPlayRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RogueDiaryActivity *v9; // r14
  uint32_t v10; // eax
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3755";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onResetRogueDiaryPlayReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::ResetRogueDiaryPlayReq::stage_id(req);
    v8 = RogueDiaryActivity::resetRogueDiaryPlay(v9, v10);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3764: range 0000000013786F4A-00000000137870F7
int32_t __cdecl ActivityHandler::onEnterRogueDiaryDungeonReq(
        ActivityHandler *const this,
        const proto::EnterRogueDiaryDungeonReq *req,
        proto::EnterRogueDiaryDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RogueDiaryActivity *v9; // rcx
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3765";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEnterRogueDiaryDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = RogueDiaryActivity::enterRogueDiaryDungeon(v9, req, rsp_0);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3774: range 00000000137870F8-00000000137872A5
int32_t __cdecl ActivityHandler::onResumeRogueDiaryDungeonReq(
        ActivityHandler *const this,
        const proto::ResumeRogueDiaryDungeonReq *req,
        proto::ResumeRogueDiaryDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RogueDiaryActivity *v9; // r14
  uint32_t v10; // eax
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3775";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onResumeRogueDiaryDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::ResumeRogueDiaryDungeonReq::stage_id(req);
    v8 = RogueDiaryActivity::resumeRogueDiaryDungeon(v9, v10);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = v8;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3784: range 00000000137872A6-0000000013787442
int32_t __cdecl ActivityHandler::onTryInterruptRogueDiaryDungeonReq(
        ActivityHandler *const this,
        const proto::TryInterruptRogueDiaryDungeonReq *req,
        proto::TryInterruptRogueDiaryDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RogueDiaryActivity *v9; // rax
  int32_t result; // eax
  char v11[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3785";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTryInterruptRogueDiaryDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = RogueDiaryActivity::interruptRogueDiaryDungeon(v9);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = v8;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3794: range 0000000013787444-00000000137875FC
int32_t __cdecl ActivityHandler::onStartRogueDiaryRoomReq(
        ActivityHandler *const this,
        const proto::StartRogueDiaryRoomReq *req,
        proto::StartRogueDiaryRoomRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t started; // r14d
  RogueDiaryActivity *v9; // rax
  RogueDiaryRuntimeMgr *RuntimeMgr; // r14
  bool is_select_hard; // al
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3795";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onStartRogueDiaryRoomReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    started = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    RuntimeMgr = RogueDiaryActivity::getRuntimeMgr(v9);
    is_select_hard = proto::StartRogueDiaryRoomReq::is_select_hard(req);
    started = RogueDiaryRuntimeMgr::startSingleRoom(RuntimeMgr, is_select_hard);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = started;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3804: range 00000000137875FE-00000000137877B4
int32_t __cdecl ActivityHandler::onReserveRogueDiaryAvatarReq(
        ActivityHandler *const this,
        const proto::ReserveRogueDiaryAvatarReq *req,
        proto::ReserveRogueDiaryAvatarRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RogueDiaryActivity *v9; // rax
  RogueDiaryRuntimeMgr *RuntimeMgr; // r14
  const google::protobuf::RepeatedPtrField<proto::RogueDiaryAvatar> *v11; // rax
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3805";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onReserveRogueDiaryAvatarReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    RuntimeMgr = RogueDiaryActivity::getRuntimeMgr(v9);
    v11 = proto::ReserveRogueDiaryAvatarReq::reserve_avatar_list(req);
    v8 = RogueDiaryRuntimeMgr::reserveRogueDiaryAvatar(RuntimeMgr, v11);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = v8;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3814: range 00000000137877B6-000000001378795A
int32_t __cdecl ActivityHandler::onGetRogueDairyRepairInfoReq(
        ActivityHandler *const this,
        const proto::GetRogueDairyRepairInfoReq *req,
        proto::GetRogueDairyRepairInfoRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t RepairInfo; // r14d
  RogueDiaryActivity *v9; // rax
  RogueDiaryRuntimeMgr *RuntimeMgr; // rax
  int32_t result; // eax
  char v12[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3815";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGetRogueDairyRepairInfoReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    RepairInfo = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    RuntimeMgr = RogueDiaryActivity::getRuntimeMgr(v9);
    RepairInfo = RogueDiaryRuntimeMgr::getRepairInfo(RuntimeMgr);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = RepairInfo;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3824: range 000000001378795C-0000000013787B11
int32_t __cdecl ActivityHandler::onRefreshRogueDiaryCardReq(
        ActivityHandler *const this,
        const proto::RefreshRogueDiaryCardReq *req,
        proto::RefreshRogueDiaryCardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t refreshed; // r14d
  RogueDiaryActivity *v9; // rax
  RogueDiaryRuntimeMgr *RuntimeMgr; // rcx
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3825";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRefreshRogueDiaryCardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    refreshed = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    RuntimeMgr = RogueDiaryActivity::getRuntimeMgr(v9);
    refreshed = RogueDiaryRuntimeMgr::refreshRogueDiaryCard(RuntimeMgr, req, rsp_0);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = refreshed;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3834: range 0000000013787B12-0000000013787CC7
int32_t __cdecl ActivityHandler::onRogueFinishRepairReq(
        ActivityHandler *const this,
        const proto::RogueFinishRepairReq *req,
        proto::RogueFinishRepairRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RogueDiaryActivity *v9; // rax
  RogueDiaryRuntimeMgr *RuntimeMgr; // rcx
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3835";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRogueFinishRepairReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    RuntimeMgr = RogueDiaryActivity::getRuntimeMgr(v9);
    v8 = RogueDiaryRuntimeMgr::finishRepair(RuntimeMgr, req, rsp_0);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = v8;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3844: range 0000000013787CC8-0000000013787E64
int32_t __cdecl ActivityHandler::onRetryCurRogueDiaryDungeonReq(
        ActivityHandler *const this,
        const proto::RetryCurRogueDiaryDungeonReq *req,
        proto::RetryCurRogueDiaryDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RogueDiaryActivity *v9; // rax
  int32_t result; // eax
  char v11[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3845";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRetryCurRogueDiaryDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = RogueDiaryActivity::retryCurRogueDiaryDungeon(v9);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = v8;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3854: range 0000000013787E66-0000000013788002
int32_t __cdecl ActivityHandler::onTryEnterNextRogueDiaryDungeonReq(
        ActivityHandler *const this,
        const proto::TryEnterNextRogueDiaryDungeonReq *req,
        proto::TryEnterNextRogueDiaryDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t RogueDiaryDungeon; // r14d
  RogueDiaryActivity *v9; // rax
  int32_t result; // eax
  char v11[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3855";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTryEnterNextRogueDiaryDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    RogueDiaryDungeon = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    RogueDiaryDungeon = RogueDiaryActivity::tryEnterNextRogueDiaryDungeon(v9);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = RogueDiaryDungeon;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3864: range 0000000013788004-000000001378821E
int32_t __cdecl ActivityHandler::onGearActivityStartPlayGearReq(
        ActivityHandler *const this,
        const proto::GearActivityStartPlayGearReq *req,
        proto::GearActivityStartPlayGearRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t started; // r14d
  google::protobuf::uint32 v7; // edx
  std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v11; // [rsp+20h] [rbp-90h] BYREF
  char v12[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 22 gear_activity_ptr:3865";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGearActivityStartPlayGearReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GearActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GearActivity>(0LL, (const std::shared_ptr<GearActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v11,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGearActivityStartPlayGearReq",
      3868);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v11, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v11);
    started = 860;
  }
  else
  {
    v7 = proto::GearActivityStartPlayGearReq::level_id(req);
    proto::GearActivityStartPlayGearRsp::set_level_id(rsp_0, v7);
    v8 = std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    started = GearActivity::onGearActivityStartPlayGearReq(v8, req, rsp_0);
  }
  std::shared_ptr<GearActivity>::~shared_ptr((std::shared_ptr<GearActivity> *const)(v3 + 32));
  result = started;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3877: range 0000000013788220-000000001378845D
int32_t __cdecl ActivityHandler::onGearActivityFinishPlayGearReq(
        ActivityHandler *const this,
        const proto::GearActivityFinishPlayGearReq *req,
        proto::GearActivityFinishPlayGearRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  google::protobuf::uint32 v7; // edx
  bool is_success; // dl
  std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v9; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v12; // [rsp+20h] [rbp-90h] BYREF
  char v13[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 22 gear_activity_ptr:3878";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGearActivityFinishPlayGearReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GearActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GearActivity>(0LL, (const std::shared_ptr<GearActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v12,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGearActivityFinishPlayGearReq",
      3881);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v12, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v12);
    v6 = 860;
  }
  else
  {
    v7 = proto::GearActivityFinishPlayGearReq::level_id(req);
    proto::GearActivityFinishPlayGearRsp::set_level_id(rsp_0, v7);
    is_success = proto::GearActivityFinishPlayGearReq::is_success(req);
    proto::GearActivityFinishPlayGearRsp::set_is_success(rsp_0, is_success);
    v9 = std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = GearActivity::onGearActivityFinishPlayGearReq(v9, req, rsp_0);
  }
  std::shared_ptr<GearActivity>::~shared_ptr((std::shared_ptr<GearActivity> *const)(v3 + 32));
  result = v6;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3891: range 000000001378845E-0000000013788656
int32_t __cdecl ActivityHandler::onGearActivityStartPlayPictureReq(
        ActivityHandler *const this,
        const proto::GearActivityStartPlayPictureReq *req,
        proto::GearActivityStartPlayPictureRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t started; // r14d
  std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 22 gear_activity_ptr:3892";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGearActivityStartPlayPictureReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GearActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GearActivity>(0LL, (const std::shared_ptr<GearActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGearActivityStartPlayPictureReq",
      3895);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v10, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v10);
    started = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    started = GearActivity::onGearActivityStartPlayPictureReq(v7, req, rsp_0);
  }
  std::shared_ptr<GearActivity>::~shared_ptr((std::shared_ptr<GearActivity> *const)(v3 + 32));
  result = started;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3903: range 0000000013788658-0000000013788873
int32_t __cdecl ActivityHandler::onGearActivityFinishPlayPictureReq(
        ActivityHandler *const this,
        const proto::GearActivityFinishPlayPictureReq *req,
        proto::GearActivityFinishPlayPictureRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  bool is_success; // dl
  std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v11; // [rsp+20h] [rbp-90h] BYREF
  char v12[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 22 gear_activity_ptr:3904";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGearActivityFinishPlayPictureReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GearActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GearActivity>(0LL, (const std::shared_ptr<GearActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v11,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onGearActivityFinishPlayPictureReq",
      3907);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v11, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v11);
    v6 = 860;
  }
  else
  {
    is_success = proto::GearActivityFinishPlayPictureReq::is_success(req);
    proto::GearActivityFinishPlayPictureRsp::set_is_success(rsp_0, is_success);
    v8 = std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GearActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = GearActivity::onGearActivityFinishPlayPictureReq(v8, req, rsp_0);
  }
  std::shared_ptr<GearActivity>::~shared_ptr((std::shared_ptr<GearActivity> *const)(v3 + 32));
  result = v6;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3917: range 0000000013788874-0000000013788A2A
int32_t __cdecl ActivityHandler::onRogueDiaryReviveAvatarReq(
        ActivityHandler *const this,
        const proto::RogueDiaryReviveAvatarReq *req,
        proto::RogueDiaryReviveAvatarRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t v8; // r14d
  RogueDiaryActivity *v9; // rax
  RogueDiaryRuntimeMgr *RuntimeMgr; // r14
  const proto::RogueDiaryAvatar *v11; // rax
  int32_t result; // eax
  char v13[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3918";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRogueDiaryReviveAvatarReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<RogueDiaryActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<RogueDiaryActivity>((const std::shared_ptr<RogueDiaryActivity> *)(v3 + 32), 0LL)
    || (v6 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v6, 0)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<RogueDiaryActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    RuntimeMgr = RogueDiaryActivity::getRuntimeMgr(v9);
    v11 = proto::RogueDiaryReviveAvatarReq::revive_avatar(req);
    v8 = RogueDiaryRuntimeMgr::reviveAvatar(RuntimeMgr, v11);
  }
  std::shared_ptr<RogueDiaryActivity>::~shared_ptr((std::shared_ptr<RogueDiaryActivity> *const)(v3 + 32));
  result = v8;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3927: range 0000000013788A2C-0000000013788D24
int32_t __cdecl ActivityHandler::onActivityReadPushTipsReq(
        ActivityHandler *const this,
        const proto::ActivityReadPushTipsReq *req,
        proto::ActivityReadPushTipsRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r13
  uint32_t ActivityComp; // r14d
  std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  common::milog::MiLogStream *v9; // r14
  common::milog::MiLogStream *v10; // rax
  int32_t v11; // r14d
  BaseActivity *v12; // r14
  const google::protobuf::RepeatedField<unsigned int> *v13; // rax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-94h] BYREF
  common::milog::MiLogStream v16; // [rsp+30h] [rbp-90h] BYREF
  char v17[112]; // [rsp+50h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v17;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 22 base_activity_ptr:3928";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onActivityReadPushTipsReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  ActivityComp = (unsigned int)Player::getActivityComp(this->player_);
  proto::ActivityReadPushTipsReq::activity_id(req);
  PlayerActivityComp::findBaseActivity((PlayerActivityComp *const)(v3 + 32), ActivityComp);
  if ( std::operator==<BaseActivity>(0LL, (const std::shared_ptr<BaseActivity> *)(v3 + 32))
    || (v7 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32)),
        !BaseActivity::isOpening(v7, 0)) )
  {
    common::milog::MiLogStream::create(
      &v16,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onActivityReadPushTipsReq",
      3931);
    v9 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(&v16, (const char (*)[13])"activity_id:");
    val = proto::ActivityReadPushTipsReq::activity_id(req);
    v10 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v9, &val);
    common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v10, (const char (*)[16])off_25050E80);
    common::milog::MiLogStream::~MiLogStream(&v16);
    v11 = 860;
  }
  else
  {
    v12 = std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BaseActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v13 = proto::ActivityReadPushTipsReq::activity_push_tips_id_list(req);
    if ( BaseActivity::onActivityReadPushTipsReq(v12, v13) )
    {
      common::milog::MiLogStream::create(
        &v16,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/handler/activity_handler.cpp",
        "onActivityReadPushTipsReq",
        3936);
      common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
        &v16,
        (const char (*)[33])"onActivityReadPushTipsReq failed");
      common::milog::MiLogStream::~MiLogStream(&v16);
      v11 = -1;
    }
    else
    {
      v11 = 0;
    }
  }
  std::shared_ptr<BaseActivity>::~shared_ptr((std::shared_ptr<BaseActivity> *const)(v3 + 32));
  result = v11;
  if ( v17 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3943: range 0000000013788D26-0000000013788F1E
int32_t __cdecl ActivityHandler::onSummerTimeV2RestartBoatGalleryReq(
        ActivityHandler *const this,
        const proto::SummerTimeV2RestartBoatGalleryReq *req,
        proto::SummerTimeV2RestartBoatGalleryRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  SummerTimeV2Activity *v7; // r14
  uint32_t v8; // eax
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 summer_time_v2_activity_ptr:3944";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSummerTimeV2RestartBoatGalleryReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SummerTimeV2Activity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SummerTimeV2Activity>(0LL, (const std::shared_ptr<SummerTimeV2Activity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onSummerTimeV2RestartBoatGalleryReq",
      3947);
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
      &v10,
      (const char (*)[35])"[SUMMER_TIME_V2] activity not open");
    common::milog::MiLogStream::~MiLogStream(&v10);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<SummerTimeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SummerTimeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = proto::SummerTimeV2RestartBoatGalleryReq::gallery_id(req);
    restarted = SummerTimeV2Activity::tryRestartBoatGallery(v7, v8);
  }
  std::shared_ptr<SummerTimeV2Activity>::~shared_ptr((std::shared_ptr<SummerTimeV2Activity> *const)(v3 + 32));
  result = restarted;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3955: range 0000000013788F20-0000000013789104
int32_t __cdecl ActivityHandler::onSummerTimeV2RestartDungeonReq(
        ActivityHandler *const this,
        const proto::SummerTimeV2RestartDungeonReq *req,
        proto::SummerTimeV2RestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  SummerTimeV2Activity *v7; // rax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 summer_time_v2_activity_ptr:3956";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSummerTimeV2RestartDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SummerTimeV2Activity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SummerTimeV2Activity>(0LL, (const std::shared_ptr<SummerTimeV2Activity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onSummerTimeV2RestartDungeonReq",
      3959);
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
      &v9,
      (const char (*)[41])"[SUMMER_TIME_V2] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<SummerTimeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SummerTimeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = SummerTimeV2Activity::restartDungeon(v7);
  }
  std::shared_ptr<SummerTimeV2Activity>::~shared_ptr((std::shared_ptr<SummerTimeV2Activity> *const)(v3 + 32));
  result = restarted;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3966: range 0000000013789106-00000000137892AA
int32_t __cdecl ActivityHandler::onGravenInnocenceRaceRestartReq(
        ActivityHandler *const this,
        const proto::GravenInnocenceRaceRestartReq *req,
        proto::GravenInnocenceRaceRestartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  GravenInnocenceActivity *v7; // rax
  int32_t result; // eax
  uint32_t gallery_id; // [rsp+2Ch] [rbp-74h]
  char v11[112]; // [rsp+30h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3969";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGravenInnocenceRaceRestartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  gallery_id = proto::GravenInnocenceRaceRestartReq::gallery_id(req);
  proto::GravenInnocenceRaceRestartRsp::set_gallery_id(rsp_0, gallery_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GravenInnocenceActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GravenInnocenceActivity>(0LL, (const std::shared_ptr<GravenInnocenceActivity> *)(v3 + 32)) )
  {
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<GravenInnocenceActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GravenInnocenceActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = GravenInnocenceActivity::raceRestart(v7, gallery_id);
  }
  std::shared_ptr<GravenInnocenceActivity>::~shared_ptr((std::shared_ptr<GravenInnocenceActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3978: range 00000000137892AC-0000000013789420
int32_t __cdecl ActivityHandler::onGravenInnocenceEditCarveCombinationReq(
        ActivityHandler *const this,
        const proto::GravenInnocenceEditCarveCombinationReq *req,
        proto::GravenInnocenceEditCarveCombinationRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  GravenInnocenceActivity *v7; // rdx
  int32_t result; // eax
  char v9[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3979";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGravenInnocenceEditCarveCombinationReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GravenInnocenceActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GravenInnocenceActivity>(0LL, (const std::shared_ptr<GravenInnocenceActivity> *)(v3 + 32)) )
  {
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<GravenInnocenceActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GravenInnocenceActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = GravenInnocenceActivity::onEditCarveCombinationReq(v7, req);
  }
  std::shared_ptr<GravenInnocenceActivity>::~shared_ptr((std::shared_ptr<GravenInnocenceActivity> *const)(v3 + 32));
  result = v6;
  if ( v9 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 3989: range 0000000013789422-00000000137895F5
int32_t __cdecl ActivityHandler::onGravenInnocencePhotoFinishReq(
        ActivityHandler *const this,
        const proto::GravenInnocencePhotoFinishReq *req,
        proto::GravenInnocencePhotoFinishRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  int32_t v8; // r14d
  GravenInnocenceActivity *v9; // r14
  uint32_t v10; // r15d
  uint32_t v11; // eax
  int32_t result; // eax
  char v14[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:3992";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onGravenInnocencePhotoFinishReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  v6 = proto::GravenInnocencePhotoFinishReq::object_id(req);
  proto::GravenInnocencePhotoFinishRsp::set_object_id(rsp_0, v6);
  v7 = proto::GravenInnocencePhotoFinishReq::param(req);
  proto::GravenInnocencePhotoFinishRsp::set_param(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<GravenInnocenceActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<GravenInnocenceActivity>(0LL, (const std::shared_ptr<GravenInnocenceActivity> *)(v3 + 32)) )
  {
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<GravenInnocenceActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GravenInnocenceActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v10 = proto::GravenInnocencePhotoFinishReq::param(req);
    v11 = proto::GravenInnocencePhotoFinishReq::object_id(req);
    v8 = GravenInnocenceActivity::finishPhoto(v9, v11, v10);
  }
  std::shared_ptr<GravenInnocenceActivity>::~shared_ptr((std::shared_ptr<GravenInnocenceActivity> *const)(v3 + 32));
  result = v8;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4001: range 00000000137895F6-00000000137897EE
int32_t __cdecl ActivityHandler::onInstableSprayEnterDungeonReq(
        ActivityHandler *const this,
        const proto::InstableSprayEnterDungeonReq *req,
        proto::InstableSprayEnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<InstableSprayActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4002";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onInstableSprayEnterDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<InstableSprayActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<InstableSprayActivity>((const std::shared_ptr<InstableSprayActivity> *)(v3 + 32), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onInstableSprayEnterDungeonReq",
      4005);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v10, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<InstableSprayActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<InstableSprayActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = InstableSprayActivity::enterInstableSprayDungeon(v7, req, rsp_0);
  }
  std::shared_ptr<InstableSprayActivity>::~shared_ptr((std::shared_ptr<InstableSprayActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4012: range 00000000137897F0-00000000137899E8
int32_t __cdecl ActivityHandler::onInstableSpraySwitchTeamReq(
        ActivityHandler *const this,
        const proto::InstableSpraySwitchTeamReq *req,
        proto::InstableSpraySwitchTeamRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<InstableSprayActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4013";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onInstableSpraySwitchTeamReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<InstableSprayActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<InstableSprayActivity>((const std::shared_ptr<InstableSprayActivity> *)(v3 + 32), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onInstableSpraySwitchTeamReq",
      4016);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v10, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<InstableSprayActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<InstableSprayActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = InstableSprayActivity::switchTeam(v7, req, rsp_0);
  }
  std::shared_ptr<InstableSprayActivity>::~shared_ptr((std::shared_ptr<InstableSprayActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4023: range 00000000137899EA-0000000013789BE2
int32_t __cdecl ActivityHandler::onInstableSprayRestartDungeonReq(
        ActivityHandler *const this,
        const proto::InstableSprayRestartDungeonReq *req,
        proto::InstableSprayRestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  std::__shared_ptr_access<InstableSprayActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4024";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onInstableSprayRestartDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<InstableSprayActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<InstableSprayActivity>((const std::shared_ptr<InstableSprayActivity> *)(v3 + 32), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onInstableSprayRestartDungeonReq",
      4027);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v10, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v10);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<InstableSprayActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<InstableSprayActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = InstableSprayActivity::restartInstableSprayDungeon(v7, req, rsp_0);
  }
  std::shared_ptr<InstableSprayActivity>::~shared_ptr((std::shared_ptr<InstableSprayActivity> *const)(v3 + 32));
  result = restarted;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4034: range 0000000013789BE4-000000001378A1A4
int32_t __cdecl ActivityHandler::onMuqadasPotionActivityEnterDungeonReq(
        ActivityHandler *const this,
        const proto::MuqadasPotionActivityEnterDungeonReq *req,
        proto::MuqadasPotionActivityEnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  google::protobuf::uint32 v6; // edx
  int32_t v7; // r14d
  PlayerSceneComp *SceneComp; // rax
  PlayerMpComp *MpComp; // rax
  common::milog::MiLogStream *v10; // r14
  bool v11; // r14
  std::__shared_ptr_access<MuqadasPotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rcx
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-C4h] BYREF
  std::shared_ptr<Scene> __r; // [rsp+30h] [rbp-C0h] BYREF
  common::milog::MiLogStream v17; // [rsp+40h] [rbp-B0h] BYREF
  char v18[144]; // [rsp+60h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v18;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 16 32 muqadas_potion_activity_ptr:4036 64 16 18 cur_scene_ptr:4058";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMuqadasPotionActivityEnterDungeonReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -202178560;
  v6 = proto::MuqadasPotionActivityEnterDungeonReq::level_id(req);
  proto::MuqadasPotionActivityEnterDungeonRsp::set_level_id(rsp_0, v6);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MuqadasPotionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MuqadasPotionActivity>(0LL, (const std::shared_ptr<MuqadasPotionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v17,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/handler/activity_handler.cpp",
      "onMuqadasPotionActivityEnterDungeonReq",
      4039);
    common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v17, (const char (*)[18])"activity not open");
    common::milog::MiLogStream::~MiLogStream(&v17);
    v7 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    SceneComp = Player::getSceneComp(this->player_);
    if ( !PlayerSceneComp::isInMyPlayerWorld(SceneComp) )
    {
      common::milog::MiLogStream::create(
        &v17,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onMuqadasPotionActivityEnterDungeonReq",
        4046);
      common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
        &v17,
        (const char (*)[38])"[MUQADAS_POTION] is not in self world");
      common::milog::MiLogStream::~MiLogStream(&v17);
      v7 = 512;
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      MpComp = Player::getMpComp(this->player_);
      if ( PlayerMpComp::isInMpMode(MpComp) )
      {
        common::milog::MiLogStream::create(
          &v17,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/handler/activity_handler.cpp",
          "onMuqadasPotionActivityEnterDungeonReq",
          4053);
        v10 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
                &v17,
                (const char (*)[34])"[MUQADAS_POTION] in mp mode, uid:");
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        val = Player::getUid(this->player_);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v10, &val);
        common::milog::MiLogStream::~MiLogStream(&v17);
        v7 = 1202;
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        Player::getSceneComp(this->player_);
        PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
        if ( std::operator==<Scene>(0LL, (const std::shared_ptr<Scene> *)(v3 + 64)) )
        {
          common::milog::MiLogStream::create(
            &v17,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onMuqadasPotionActivityEnterDungeonReq",
            4061);
          common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
            &v17,
            (const char (*)[35])"[MUQADAS_POTION] cur scene is null");
          common::milog::MiLogStream::~MiLogStream(&v17);
          v7 = -1;
        }
        else
        {
          std::dynamic_pointer_cast<DungeonScene,Scene>(&__r);
          v11 = std::operator!=<DungeonScene>(0LL, (const std::shared_ptr<DungeonScene> *)&__r);
          std::shared_ptr<DungeonScene>::~shared_ptr((std::shared_ptr<DungeonScene> *const)&__r);
          if ( v11 )
          {
            common::milog::MiLogStream::create(
              &v17,
              &common::milog::MiLogDefault::default_log_obj_,
              3u,
              "./src/handler/activity_handler.cpp",
              "onMuqadasPotionActivityEnterDungeonReq",
              4066);
            common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
              &v17,
              (const char (*)[38])"[MUQADAS_POTION] player is in dungeon");
            common::milog::MiLogStream::~MiLogStream(&v17);
            v7 = -1;
          }
          else
          {
            v12 = std::__shared_ptr_access<MuqadasPotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MuqadasPotionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
            v7 = MuqadasPotionActivity::onMuqadasPotionActivityEnterDungeonReq(v12, req, rsp_0);
          }
        }
        std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
      }
    }
  }
  std::shared_ptr<MuqadasPotionActivity>::~shared_ptr((std::shared_ptr<MuqadasPotionActivity> *const)(v3 + 32));
  result = v7;
  if ( v18 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 4074: range 000000001378A1A6-000000001378A38A
int32_t __cdecl ActivityHandler::onMuqadasPotionRestartDungeonReq(
        ActivityHandler *const this,
        const proto::MuqadasPotionRestartDungeonReq *req,
        proto::MuqadasPotionRestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  std::__shared_ptr_access<MuqadasPotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 muqadas_potion_activity_ptr:4075";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMuqadasPotionRestartDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MuqadasPotionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MuqadasPotionActivity>(0LL, (const std::shared_ptr<MuqadasPotionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onMuqadasPotionRestartDungeonReq",
      4078);
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
      &v9,
      (const char (*)[41])"[MUQADAS_POTION] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<MuqadasPotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MuqadasPotionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = MuqadasPotionActivity::restartDungeon(v7);
  }
  std::shared_ptr<MuqadasPotionActivity>::~shared_ptr((std::shared_ptr<MuqadasPotionActivity> *const)(v3 + 32));
  result = restarted;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4085: range 000000001378A38C-000000001378A584
int32_t __cdecl ActivityHandler::onMuqadasPotionCaptureWeaknessReq(
        ActivityHandler *const this,
        const proto::MuqadasPotionCaptureWeaknessReq *req,
        proto::MuqadasPotionCaptureWeaknessRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<MuqadasPotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 muqadas_potion_activity_ptr:4086";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onMuqadasPotionCaptureWeaknessReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<MuqadasPotionActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<MuqadasPotionActivity>(0LL, (const std::shared_ptr<MuqadasPotionActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onMuqadasPotionCaptureWeaknessReq",
      4089);
    common::milog::MiLogStream::operator<<<char [41],(char *[41])0>(
      &v10,
      (const char (*)[41])"[MUQADAS_POTION] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<MuqadasPotionActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<MuqadasPotionActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = MuqadasPotionActivity::onMuqadasPotionCaptureWeaknessReq(v7, req, rsp_0);
  }
  std::shared_ptr<MuqadasPotionActivity>::~shared_ptr((std::shared_ptr<MuqadasPotionActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4096: range 000000001378A586-000000001378A76A
int32_t __cdecl ActivityHandler::onWindFieldRestartDungeonReq(
        ActivityHandler *const this,
        const proto::WindFieldRestartDungeonReq *req,
        proto::WindFieldRestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  WindFieldActivity *v7; // rax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 28 wind_field_activity_ptr:4097";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onWindFieldRestartDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<WindFieldActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<WindFieldActivity>(0LL, (const std::shared_ptr<WindFieldActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onWindFieldRestartDungeonReq",
      4100);
    common::milog::MiLogStream::operator<<<char [37],(char *[37])0>(
      &v9,
      (const char (*)[37])"[WIND_FIELD] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<WindFieldActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<WindFieldActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = WindFieldActivity::restartDungeon(v7);
  }
  std::shared_ptr<WindFieldActivity>::~shared_ptr((std::shared_ptr<WindFieldActivity> *const)(v3 + 32));
  result = restarted;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4108: range 000000001378A76C-000000001378A964
int32_t __cdecl ActivityHandler::onVintageHuntingStartGalleryReq(
        ActivityHandler *const this,
        const proto::VintageHuntingStartGalleryReq *req,
        proto::VintageHuntingStartGalleryRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t started; // r14d
  VintageActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 vintage_activity_ptr:4109";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onVintageHuntingStartGalleryReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<VintageActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<VintageActivity>(0LL, (const std::shared_ptr<VintageActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onVintageHuntingStartGalleryReq",
      4112);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[VINTAGE] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    started = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    started = VintageActivity::onVintageHuntingStartGalleryReq(v7, req, rsp_0);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v3 + 32));
  result = started;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4119: range 000000001378A966-000000001378AB5E
int32_t __cdecl ActivityHandler::onVintageMarketDeliverItemReq(
        ActivityHandler *const this,
        const proto::VintageMarketDeliverItemReq *req,
        proto::VintageMarketDeliverItemRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  VintageActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 vintage_activity_ptr:4120";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onVintageMarketDeliverItemReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<VintageActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<VintageActivity>(0LL, (const std::shared_ptr<VintageActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onVintageMarketDeliverItemReq",
      4123);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[VINTAGE] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = VintageActivity::marketDeliverItem(v7, req, rsp_0);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4131: range 000000001378AB60-000000001378AD58
int32_t __cdecl ActivityHandler::onVintageMarketStartStorePlayReq(
        ActivityHandler *const this,
        const proto::VintageMarketStartStorePlayReq *req,
        proto::VintageMarketStartStorePlayRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t started; // r14d
  VintageActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 vintage_activity_ptr:4132";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onVintageMarketStartStorePlayReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<VintageActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<VintageActivity>(0LL, (const std::shared_ptr<VintageActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onVintageMarketStartStorePlayReq",
      4135);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[VINTAGE] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    started = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    started = VintageActivity::marketStartStorePlay(v7, req, rsp_0);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v3 + 32));
  result = started;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4142: range 000000001378AD5A-000000001378AF52
int32_t __cdecl ActivityHandler::onVintageMarketFinishStorePlayReq(
        ActivityHandler *const this,
        const proto::VintageMarketFinishStorePlayReq *req,
        proto::VintageMarketFinishStorePlayRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  VintageActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 vintage_activity_ptr:4143";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onVintageMarketFinishStorePlayReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<VintageActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<VintageActivity>(0LL, (const std::shared_ptr<VintageActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onVintageMarketFinishStorePlayReq",
      4146);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[VINTAGE] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = VintageActivity::marketFinishStorePlay(v7, req, rsp_0);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4153: range 000000001378AF54-000000001378B16E
int32_t __cdecl ActivityHandler::onVintageMarketStoreUnlockSlotReq(
        ActivityHandler *const this,
        const proto::VintageMarketStoreUnlockSlotReq *req,
        proto::VintageMarketStoreUnlockSlotRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  google::protobuf::uint32 v7; // edx
  VintageActivity *v8; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v11; // [rsp+20h] [rbp-90h] BYREF
  char v12[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 vintage_activity_ptr:4154";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onVintageMarketStoreUnlockSlotReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<VintageActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<VintageActivity>(0LL, (const std::shared_ptr<VintageActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v11,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onVintageMarketStoreUnlockSlotReq",
      4157);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v11,
      (const char (*)[34])"[VINTAGE] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v11);
    v6 = 860;
  }
  else
  {
    v7 = proto::VintageMarketStoreUnlockSlotReq::store_id(req);
    proto::VintageMarketStoreUnlockSlotRsp::set_store_id(rsp_0, v7);
    v8 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = VintageActivity::marketStoreUnlockSlot(v8, req, rsp_0);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v3 + 32));
  result = v6;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4165: range 000000001378B170-000000001378B368
int32_t __cdecl ActivityHandler::onVintageMarketStoreChooseStrategyReq(
        ActivityHandler *const this,
        const proto::VintageMarketStoreChooseStrategyReq *req,
        proto::VintageMarketStoreChooseStrategyRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  VintageActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 vintage_activity_ptr:4166";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onVintageMarketStoreChooseStrategyReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<VintageActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<VintageActivity>(0LL, (const std::shared_ptr<VintageActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onVintageMarketStoreChooseStrategyReq",
      4169);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[VINTAGE] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = VintageActivity::marketStoreChooseStrategy(v7, req, rsp_0);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4176: range 000000001378B36A-000000001378B584
int32_t __cdecl ActivityHandler::onVintageMarketStoreViewStrategyReq(
        ActivityHandler *const this,
        const proto::VintageMarketStoreViewStrategyReq *req,
        proto::VintageMarketStoreViewStrategyRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  google::protobuf::uint32 v7; // edx
  VintageActivity *v8; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v11; // [rsp+20h] [rbp-90h] BYREF
  char v12[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v12;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 vintage_activity_ptr:4177";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onVintageMarketStoreViewStrategyReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<VintageActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<VintageActivity>(0LL, (const std::shared_ptr<VintageActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v11,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onVintageMarketStoreViewStrategyReq",
      4180);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v11,
      (const char (*)[34])"[VINTAGE] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v11);
    v6 = 860;
  }
  else
  {
    v7 = proto::VintageMarketStoreViewStrategyReq::strategy_id(req);
    proto::VintageMarketStoreViewStrategyRsp::set_strategy_id(rsp_0, v7);
    v8 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = VintageActivity::marketStoreViewStrategy(v8, req, rsp_0);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v3 + 32));
  result = v6;
  if ( v12 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4188: range 000000001378B586-000000001378B77E
int32_t __cdecl ActivityHandler::onVintageDecorateBoothReq(
        ActivityHandler *const this,
        const proto::VintageDecorateBoothReq *req,
        proto::VintageDecorateBoothRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  VintageActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 25 vintage_activity_ptr:4189";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onVintageDecorateBoothReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<VintageActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<VintageActivity>(0LL, (const std::shared_ptr<VintageActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onVintageDecorateBoothReq",
      4192);
    common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
      &v10,
      (const char (*)[34])"[VINTAGE] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<VintageActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = VintageActivity::onVintageDecorateBoothReq(v7, req, rsp_0);
  }
  std::shared_ptr<VintageActivity>::~shared_ptr((std::shared_ptr<VintageActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4199: range 000000001378B780-000000001378B971
int32_t __cdecl ActivityHandler::onEnterFungusFighterPlotDungeonReq(
        ActivityHandler *const this,
        const proto::EnterFungusFighterPlotDungeonReq *req,
        proto::EnterFungusFighterPlotDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  FungusFighterActivity *v7; // rdx
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 fungus_fighter_activity_ptr:4200";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEnterFungusFighterPlotDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FungusFighterActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FungusFighterActivity>(0LL, (const std::shared_ptr<FungusFighterActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onEnterFungusFighterPlotDungeonReq",
      4203);
    common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
      &v9,
      (const char (*)[40])"[FungusFighter] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = FungusFighterActivity::enterFungusFighterPlotDungeon(v7, req);
  }
  std::shared_ptr<FungusFighterActivity>::~shared_ptr((std::shared_ptr<FungusFighterActivity> *const)(v3 + 32));
  result = v6;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4210: range 000000001378B972-000000001378BB6A
int32_t __cdecl ActivityHandler::onFungusCultivateReq(
        ActivityHandler *const this,
        const proto::FungusCultivateReq *req,
        proto::FungusCultivateRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  FungusFighterActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 fungus_fighter_activity_ptr:4211";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFungusCultivateReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FungusFighterActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FungusFighterActivity>(0LL, (const std::shared_ptr<FungusFighterActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onFungusCultivateReq",
      4214);
    common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
      &v10,
      (const char (*)[40])"[FungusFighter] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = FungusFighterActivity::fungusCultivate(v7, req, rsp_0);
  }
  std::shared_ptr<FungusFighterActivity>::~shared_ptr((std::shared_ptr<FungusFighterActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4221: range 000000001378BB6C-000000001378BD64
int32_t __cdecl ActivityHandler::onFungusRenameReq(
        ActivityHandler *const this,
        const proto::FungusRenameReq *req,
        proto::FungusRenameRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  FungusFighterActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 fungus_fighter_activity_ptr:4222";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFungusRenameReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FungusFighterActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FungusFighterActivity>(0LL, (const std::shared_ptr<FungusFighterActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onFungusRenameReq",
      4225);
    common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
      &v10,
      (const char (*)[40])"[FungusFighter] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = FungusFighterActivity::fungusRename(v7, req, rsp_0);
  }
  std::shared_ptr<FungusFighterActivity>::~shared_ptr((std::shared_ptr<FungusFighterActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4232: range 000000001378BD66-000000001378BF5E
int32_t __cdecl ActivityHandler::onEnterFungusFighterTrainingDungeonReq(
        ActivityHandler *const this,
        const proto::EnterFungusFighterTrainingDungeonReq *req,
        proto::EnterFungusFighterTrainingDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  FungusFighterActivity *v7; // r14
  uint32_t v8; // eax
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 fungus_fighter_activity_ptr:4233";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEnterFungusFighterTrainingDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FungusFighterActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FungusFighterActivity>(0LL, (const std::shared_ptr<FungusFighterActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onEnterFungusFighterTrainingDungeonReq",
      4236);
    common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
      &v10,
      (const char (*)[40])"[FungusFighter] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = proto::EnterFungusFighterTrainingDungeonReq::dungeon_id(req);
    v6 = FungusFighterActivity::enterFungusFighterTrainingDungeon(v7, v8);
  }
  std::shared_ptr<FungusFighterActivity>::~shared_ptr((std::shared_ptr<FungusFighterActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4243: range 000000001378BF60-000000001378C151
int32_t __cdecl ActivityHandler::onFungusFighterTrainingSelectFungusReq(
        ActivityHandler *const this,
        const proto::FungusFighterTrainingSelectFungusReq *req,
        proto::FungusFighterTrainingSelectFungusRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  FungusFighterActivity *v7; // rdx
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 fungus_fighter_activity_ptr:4244";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFungusFighterTrainingSelectFungusReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FungusFighterActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FungusFighterActivity>(0LL, (const std::shared_ptr<FungusFighterActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onFungusFighterTrainingSelectFungusReq",
      4247);
    common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
      &v9,
      (const char (*)[40])"[FungusFighter] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = FungusFighterActivity::onFungusFighterTrainingSelectFungusReq(v7, req);
  }
  std::shared_ptr<FungusFighterActivity>::~shared_ptr((std::shared_ptr<FungusFighterActivity> *const)(v3 + 32));
  result = v6;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4254: range 000000001378C152-000000001378C34A
int32_t __cdecl ActivityHandler::onFungusFighterClearTrainingRuntimeDataReq(
        ActivityHandler *const this,
        const proto::FungusFighterClearTrainingRuntimeDataReq *req,
        proto::FungusFighterClearTrainingRuntimeDataRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  FungusFighterActivity *v7; // r14
  uint32_t v8; // eax
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 fungus_fighter_activity_ptr:4255";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFungusFighterClearTrainingRuntimeDataReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FungusFighterActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FungusFighterActivity>(0LL, (const std::shared_ptr<FungusFighterActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onFungusFighterClearTrainingRuntimeDataReq",
      4258);
    common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
      &v10,
      (const char (*)[40])"[FungusFighter] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = proto::FungusFighterClearTrainingRuntimeDataReq::dungeon_id(req);
    v6 = FungusFighterActivity::onFungusFighterClearTrainingRuntimeDataReq(v7, v8);
  }
  std::shared_ptr<FungusFighterActivity>::~shared_ptr((std::shared_ptr<FungusFighterActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4265: range 000000001378C34C-000000001378C53D
int32_t __cdecl ActivityHandler::onFungusFighterUseBackupFungusReq(
        ActivityHandler *const this,
        const proto::FungusFighterUseBackupFungusReq *req,
        proto::FungusFighterUseBackupFungusRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  FungusFighterActivity *v7; // rdx
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 fungus_fighter_activity_ptr:4266";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFungusFighterUseBackupFungusReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FungusFighterActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FungusFighterActivity>(0LL, (const std::shared_ptr<FungusFighterActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onFungusFighterUseBackupFungusReq",
      4269);
    common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
      &v9,
      (const char (*)[40])"[FungusFighter] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = FungusFighterActivity::onFungusFighterUseBackupFungusReq(v7, req);
  }
  std::shared_ptr<FungusFighterActivity>::~shared_ptr((std::shared_ptr<FungusFighterActivity> *const)(v3 + 32));
  result = v6;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4276: range 000000001378C53E-000000001378C722
int32_t __cdecl ActivityHandler::onFungusFighterRestartTraningDungeonReq(
        ActivityHandler *const this,
        const proto::FungusFighterRestartTraningDungeonReq *req,
        proto::FungusFighterRestartTraningDungeonRsp *p_rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  FungusFighterActivity *v7; // rax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 32 fungus_fighter_activity_ptr:4277";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onFungusFighterRestartTraningDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<FungusFighterActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<FungusFighterActivity>(0LL, (const std::shared_ptr<FungusFighterActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onFungusFighterRestartTraningDungeonReq",
      4280);
    common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
      &v9,
      (const char (*)[40])"[FungusFighter] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<FungusFighterActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = FungusFighterActivity::restartFungusFigherTrainingDungeon(v7);
  }
  std::shared_ptr<FungusFighterActivity>::~shared_ptr((std::shared_ptr<FungusFighterActivity> *const)(v3 + 32));
  result = restarted;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4287: range 000000001378C724-000000001378C91C
int32_t __cdecl ActivityHandler::onEffigyChallengeV2EnterDungeonReq(
        ActivityHandler *const this,
        const proto::EffigyChallengeV2EnterDungeonReq *req,
        proto::EffigyChallengeV2EnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<EffigyChallengeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 37 effigy_challenge_v2_activity_ptr:4288";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEffigyChallengeV2EnterDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<EffigyChallengeV2Activity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<EffigyChallengeV2Activity>(0LL, (const std::shared_ptr<EffigyChallengeV2Activity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onEffigyChallengeV2EnterDungeonReq",
      4291);
    common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
      &v10,
      (const char (*)[44])"[EffigyChallengeV2] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<EffigyChallengeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<EffigyChallengeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = EffigyChallengeV2Activity::enterEffigyChallengeDungeon(v7, req, rsp_0);
  }
  std::shared_ptr<EffigyChallengeV2Activity>::~shared_ptr((std::shared_ptr<EffigyChallengeV2Activity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4298: range 000000001378C91E-000000001378CB16
int32_t __cdecl ActivityHandler::onEffigyChallengeV2RestartDungeonReq(
        ActivityHandler *const this,
        const proto::EffigyChallengeV2RestartDungeonReq *req,
        proto::EffigyChallengeV2RestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  std::__shared_ptr_access<EffigyChallengeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 37 effigy_challenge_v2_activity_ptr:4299";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEffigyChallengeV2RestartDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<EffigyChallengeV2Activity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<EffigyChallengeV2Activity>(0LL, (const std::shared_ptr<EffigyChallengeV2Activity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onEffigyChallengeV2RestartDungeonReq",
      4302);
    common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
      &v10,
      (const char (*)[44])"[EffigyChallengeV2] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<EffigyChallengeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<EffigyChallengeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = EffigyChallengeV2Activity::restartEffigyChallengeDungeon(v7, req, rsp_0);
  }
  std::shared_ptr<EffigyChallengeV2Activity>::~shared_ptr((std::shared_ptr<EffigyChallengeV2Activity> *const)(v3 + 32));
  result = restarted;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4309: range 000000001378CB18-000000001378CD10
int32_t __cdecl ActivityHandler::onEffigyChallengeV2ChooseSkillReq(
        ActivityHandler *const this,
        const proto::EffigyChallengeV2ChooseSkillReq *req,
        proto::EffigyChallengeV2ChooseSkillRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<EffigyChallengeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 37 effigy_challenge_v2_activity_ptr:4310";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEffigyChallengeV2ChooseSkillReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<EffigyChallengeV2Activity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<EffigyChallengeV2Activity>(0LL, (const std::shared_ptr<EffigyChallengeV2Activity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onEffigyChallengeV2ChooseSkillReq",
      4313);
    common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
      &v10,
      (const char (*)[44])"[EffigyChallengeV2] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<EffigyChallengeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<EffigyChallengeV2Activity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = EffigyChallengeV2Activity::chooseEffigyChallengeSkill(v7, req, rsp_0);
  }
  std::shared_ptr<EffigyChallengeV2Activity>::~shared_ptr((std::shared_ptr<EffigyChallengeV2Activity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4320: range 000000001378CD12-000000001378CF0A
int32_t __cdecl ActivityHandler::onCoinCollectChooseSkillReq(
        ActivityHandler *const this,
        const proto::CoinCollectChooseSkillReq *req,
        proto::CoinCollectChooseSkillRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 30 coin_collect_activity_ptr:4321";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onCoinCollectChooseSkillReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<CoinCollectActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<CoinCollectActivity>(0LL, (const std::shared_ptr<CoinCollectActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onCoinCollectChooseSkillReq",
      4324);
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      &v10,
      (const char (*)[38])"[CoinCollect] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = CoinCollectActivity::chooseCoinCollectSkill(v7, req, rsp_0);
  }
  std::shared_ptr<CoinCollectActivity>::~shared_ptr((std::shared_ptr<CoinCollectActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4331: range 000000001378CF0C-000000001378D104
int32_t __cdecl ActivityHandler::onRestartCoinCollectPlaySingleModeReq(
        ActivityHandler *const this,
        const proto::RestartCoinCollectPlaySingleModeReq *req,
        proto::RestartCoinCollectPlaySingleModeRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 30 coin_collect_activity_ptr:4332";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onRestartCoinCollectPlaySingleModeReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<CoinCollectActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<CoinCollectActivity>(0LL, (const std::shared_ptr<CoinCollectActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onRestartCoinCollectPlaySingleModeReq",
      4335);
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      &v10,
      (const char (*)[38])"[CoinCollect] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = CoinCollectActivity::restartCoinCollectPlaySingleMode(v7, req, rsp_0);
  }
  std::shared_ptr<CoinCollectActivity>::~shared_ptr((std::shared_ptr<CoinCollectActivity> *const)(v3 + 32));
  result = restarted;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4342: range 000000001378D106-000000001378D2FE
int32_t __cdecl ActivityHandler::onEndCoinCollectPlaySingleModeReq(
        ActivityHandler *const this,
        const proto::EndCoinCollectPlaySingleModeReq *req,
        proto::EndCoinCollectPlaySingleModeRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 30 coin_collect_activity_ptr:4343";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onEndCoinCollectPlaySingleModeReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<CoinCollectActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<CoinCollectActivity>(0LL, (const std::shared_ptr<CoinCollectActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onEndCoinCollectPlaySingleModeReq",
      4346);
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      &v10,
      (const char (*)[38])"[CoinCollect] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = CoinCollectActivity::endCoinCollectPlaySingleMode(v7, req, rsp_0);
  }
  std::shared_ptr<CoinCollectActivity>::~shared_ptr((std::shared_ptr<CoinCollectActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4353: range 000000001378D300-000000001378D4F8
int32_t __cdecl ActivityHandler::onCoinCollectPrepareReq(
        ActivityHandler *const this,
        const proto::CoinCollectPrepareReq *req,
        proto::CoinCollectPrepareRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 30 coin_collect_activity_ptr:4354";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onCoinCollectPrepareReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<CoinCollectActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<CoinCollectActivity>(0LL, (const std::shared_ptr<CoinCollectActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onCoinCollectPrepareReq",
      4357);
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      &v10,
      (const char (*)[38])"[CoinCollect] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = CoinCollectActivity::coinCollectPrepare(v7, req, rsp_0);
  }
  std::shared_ptr<CoinCollectActivity>::~shared_ptr((std::shared_ptr<CoinCollectActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4364: range 000000001378D4FA-000000001378D6F2
int32_t __cdecl ActivityHandler::onCoinCollectInterruptPlayReq(
        ActivityHandler *const this,
        const proto::CoinCollectInterruptPlayReq *req,
        proto::CoinCollectInterruptPlayRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 30 coin_collect_activity_ptr:4365";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onCoinCollectInterruptPlayReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<CoinCollectActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<CoinCollectActivity>(0LL, (const std::shared_ptr<CoinCollectActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onCoinCollectInterruptPlayReq",
      4368);
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      &v10,
      (const char (*)[38])"[CoinCollect] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = CoinCollectActivity::coinCollectInterruptPlay(v7, req, rsp_0);
  }
  std::shared_ptr<CoinCollectActivity>::~shared_ptr((std::shared_ptr<CoinCollectActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4375: range 000000001378D6F4-000000001378D8EC
int32_t __cdecl ActivityHandler::onCoinCollectCheckDoubleStartPlayReq(
        ActivityHandler *const this,
        const proto::CoinCollectCheckDoubleStartPlayReq *req,
        proto::CoinCollectCheckDoubleStartPlayRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 30 coin_collect_activity_ptr:4376";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onCoinCollectCheckDoubleStartPlayReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<CoinCollectActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<CoinCollectActivity>(0LL, (const std::shared_ptr<CoinCollectActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onCoinCollectCheckDoubleStartPlayReq",
      4379);
    common::milog::MiLogStream::operator<<<char [38],(char *[38])0>(
      &v10,
      (const char (*)[38])"[CoinCollect] activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<CoinCollectActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = CoinCollectActivity::coinCollectCheckDoubleStartPlay(v7, req, rsp_0);
  }
  std::shared_ptr<CoinCollectActivity>::~shared_ptr((std::shared_ptr<CoinCollectActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4386: range 000000001378D8EE-000000001378DFD5
int32_t __cdecl ActivityHandler::onBrickBreakerSelectSkillReq(
        ActivityHandler *const this,
        const proto::BrickBreakerSelectSkillReq *req,
        proto::BrickBreakerSelectSkillRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r14d
  const google::protobuf::RepeatedField<unsigned int> *v7; // rax
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  uint32_t OwnerUid; // r14d
  BrickBreakerActivity *v10; // r14
  uint32_t Uid; // eax
  common::milog::MiLogStream *v12; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  Player *v14; // rax
  common::milog::MiLogStream *v15; // r14
  std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rax
  BrickBreakerActivity *v17; // r14
  uint32_t v18; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-134h] BYREF
  common::milog::MiLogStream v21; // [rsp+30h] [rbp-130h] BYREF
  char v22[272]; // [rsp+50h] [rbp-110h] BYREF

  v3 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(224LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "5 32 16 17 activity_ptr:4387 64 16 14 scene_ptr:4393 96 16 21 owner_player_ptr:4407 128 16 23 ow"
                        "ner_activity_ptr:4413 160 24 17 skill_id_vec:4399";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBrickBreakerSelectSkillReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -219021312;
  v5[536862723] = -219021312;
  v5[536862724] = -219021312;
  v5[536862725] = -218103808;
  v5[536862726] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v21,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onBrickBreakerSelectSkillReq",
      4390);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v21, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v21);
    v6 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
    if ( std::operator==<Scene>((const std::shared_ptr<Scene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onBrickBreakerSelectSkillReq",
        4396);
      common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(&v21, (const char (*)[22])"cur_scene_ptr is null");
      common::milog::MiLogStream::~MiLogStream(&v21);
      v6 = -1;
    }
    else
    {
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v3 + 160));
      v7 = proto::BrickBreakerSelectSkillReq::skill_id(req);
      common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(v7, (std::vector<unsigned int> *)(v3 + 160));
      v8 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      OwnerUid = Scene::getOwnerUid(v8);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( OwnerUid == Player::getUid(this->player_) )
      {
        v10 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        Uid = Player::getUid(this->player_);
        v6 = BrickBreakerActivity::selectBrickBreakerSkill(v10, Uid, (const std::vector<unsigned int> *)(v3 + 160));
      }
      else
      {
        std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        Scene::getOwnPlayer((const Scene *const)(v3 + 96));
        if ( std::operator==<Player>(0LL, (const std::shared_ptr<Player> *)(v3 + 96)) )
        {
          common::milog::MiLogStream::create(
            &v21,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onBrickBreakerSelectSkillReq",
            4410);
          v12 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
                  &v21,
                  (const char (*)[32])"getOwnPlayer failed, owner_uid:");
          v13 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
          val = Scene::getOwnerUid(v13);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
          common::milog::MiLogStream::~MiLogStream(&v21);
          v6 = -1;
        }
        else
        {
          v14 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          Player::getActivityComp(v14);
          PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 128));
          if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 128)) )
          {
            common::milog::MiLogStream::create(
              &v21,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/handler/activity_handler.cpp",
              "onBrickBreakerSelectSkillReq",
              4416);
            v15 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                    &v21,
                    (const char (*)[31])"activity is not opening, uid: ");
            v16 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
            val = Player::getUid(v16);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &val);
            common::milog::MiLogStream::~MiLogStream(&v21);
            v6 = 860;
          }
          else
          {
            v17 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8();
            v18 = Player::getUid(this->player_);
            v6 = BrickBreakerActivity::selectBrickBreakerSkill(v17, v18, (const std::vector<unsigned int> *)(v3 + 160));
          }
          std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 128));
        }
        std::shared_ptr<Player>::~shared_ptr((std::shared_ptr<Player> *const)(v3 + 96));
      }
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v3 + 160));
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
  }
  std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 32));
  result = v6;
  if ( v22 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 4423: range 000000001378DFD6-000000001378E6BD
int32_t __cdecl ActivityHandler::onBrickBreakerSelectAvatarReq(
        ActivityHandler *const this,
        const proto::BrickBreakerSelectAvatarReq *req,
        proto::BrickBreakerSelectAvatarRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r14d
  const google::protobuf::RepeatedField<unsigned int> *v7; // rax
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // rax
  uint32_t OwnerUid; // r14d
  BrickBreakerActivity *v10; // r14
  uint32_t Uid; // eax
  common::milog::MiLogStream *v12; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  Player *v14; // rax
  common::milog::MiLogStream *v15; // r14
  std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rax
  BrickBreakerActivity *v17; // r14
  uint32_t v18; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-134h] BYREF
  common::milog::MiLogStream v21; // [rsp+30h] [rbp-130h] BYREF
  char v22[272]; // [rsp+50h] [rbp-110h] BYREF

  v3 = (unsigned __int64)v22;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(224LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "5 32 16 17 activity_ptr:4424 64 16 14 scene_ptr:4430 96 16 21 owner_player_ptr:4444 128 16 23 ow"
                        "ner_activity_ptr:4450 160 24 18 avatar_id_vec:4436";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBrickBreakerSelectAvatarReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -219021312;
  v5[536862723] = -219021312;
  v5[536862724] = -219021312;
  v5[536862725] = -218103808;
  v5[536862726] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v21,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onBrickBreakerSelectAvatarReq",
      4427);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v21, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v21);
    v6 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
    if ( std::operator==<Scene>((const std::shared_ptr<Scene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onBrickBreakerSelectAvatarReq",
        4433);
      common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(&v21, (const char (*)[22])"cur_scene_ptr is null");
      common::milog::MiLogStream::~MiLogStream(&v21);
      v6 = -1;
    }
    else
    {
      std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v3 + 160));
      v7 = proto::BrickBreakerSelectAvatarReq::avatar_id(req);
      common::tools::MiscUtils::repeatedToVector<unsigned int,unsigned int>(v7, (std::vector<unsigned int> *)(v3 + 160));
      v8 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      OwnerUid = Scene::getOwnerUid(v8);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( OwnerUid == Player::getUid(this->player_) )
      {
        v10 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        Uid = Player::getUid(this->player_);
        v6 = BrickBreakerActivity::selectBrickBreakerAvatar(v10, Uid, (const std::vector<unsigned int> *)(v3 + 160));
      }
      else
      {
        std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        Scene::getOwnPlayer((const Scene *const)(v3 + 96));
        if ( std::operator==<Player>(0LL, (const std::shared_ptr<Player> *)(v3 + 96)) )
        {
          common::milog::MiLogStream::create(
            &v21,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onBrickBreakerSelectAvatarReq",
            4447);
          v12 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
                  &v21,
                  (const char (*)[32])"getOwnPlayer failed, owner_uid:");
          v13 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
          val = Scene::getOwnerUid(v13);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
          common::milog::MiLogStream::~MiLogStream(&v21);
          v6 = -1;
        }
        else
        {
          v14 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          Player::getActivityComp(v14);
          PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 128));
          if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 128)) )
          {
            common::milog::MiLogStream::create(
              &v21,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/handler/activity_handler.cpp",
              "onBrickBreakerSelectAvatarReq",
              4453);
            v15 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                    &v21,
                    (const char (*)[31])"activity is not opening, uid: ");
            v16 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
            val = Player::getUid(v16);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &val);
            common::milog::MiLogStream::~MiLogStream(&v21);
            v6 = 860;
          }
          else
          {
            v17 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8();
            v18 = Player::getUid(this->player_);
            v6 = BrickBreakerActivity::selectBrickBreakerAvatar(v17, v18, (const std::vector<unsigned int> *)(v3 + 160));
          }
          std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 128));
        }
        std::shared_ptr<Player>::~shared_ptr((std::shared_ptr<Player> *const)(v3 + 96));
      }
      std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v3 + 160));
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
  }
  std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 32));
  result = v6;
  if ( v22 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = -168430091;
  }
  return result;
};

// Line 4460: range 000000001378E6BE-000000001378ECEC
int32_t __cdecl ActivityHandler::onBrickBreakerSetReadyReq(
        ActivityHandler *const this,
        const proto::BrickBreakerSetReadyReq *req,
        proto::BrickBreakerSetReadyRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  uint32_t OwnerUid; // r14d
  BrickBreakerActivity *v9; // r14
  uint32_t Uid; // eax
  common::milog::MiLogStream *v11; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v12; // rax
  Player *v13; // rax
  common::milog::MiLogStream *v14; // r14
  std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v15; // rax
  BrickBreakerActivity *v16; // r14
  uint32_t v17; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-F4h] BYREF
  common::milog::MiLogStream v20; // [rsp+30h] [rbp-F0h] BYREF
  char v21[208]; // [rsp+50h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v21;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 32 16 17 activity_ptr:4461 64 16 14 scene_ptr:4467 96 16 21 owner_player_ptr:4479 128 16 23 ow"
                        "ner_activity_ptr:4485";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBrickBreakerSetReadyReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -219021312;
  v5[536862723] = -219021312;
  v5[536862724] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v20,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onBrickBreakerSetReadyReq",
      4464);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v20, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v20);
    v6 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
    if ( std::operator==<Scene>((const std::shared_ptr<Scene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v20,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onBrickBreakerSetReadyReq",
        4470);
      common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(&v20, (const char (*)[22])"cur_scene_ptr is null");
      common::milog::MiLogStream::~MiLogStream(&v20);
      v6 = -1;
    }
    else
    {
      v7 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      OwnerUid = Scene::getOwnerUid(v7);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( OwnerUid == Player::getUid(this->player_) )
      {
        v9 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        Uid = Player::getUid(this->player_);
        v6 = BrickBreakerActivity::setBrickBreakerReady(v9, Uid);
      }
      else
      {
        std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        Scene::getOwnPlayer((const Scene *const)(v3 + 96));
        if ( std::operator==<Player>(0LL, (const std::shared_ptr<Player> *)(v3 + 96)) )
        {
          common::milog::MiLogStream::create(
            &v20,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onBrickBreakerSetReadyReq",
            4482);
          v11 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
                  &v20,
                  (const char (*)[32])"getOwnPlayer failed, owner_uid:");
          v12 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
          val = Scene::getOwnerUid(v12);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v11, &val);
          common::milog::MiLogStream::~MiLogStream(&v20);
          v6 = -1;
        }
        else
        {
          v13 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          Player::getActivityComp(v13);
          PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 128));
          if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 128)) )
          {
            common::milog::MiLogStream::create(
              &v20,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/handler/activity_handler.cpp",
              "onBrickBreakerSetReadyReq",
              4488);
            v14 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                    &v20,
                    (const char (*)[31])"activity is not opening, uid: ");
            v15 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
            val = Player::getUid(v15);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v14, &val);
            common::milog::MiLogStream::~MiLogStream(&v20);
            v6 = 860;
          }
          else
          {
            v16 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8();
            v17 = Player::getUid(this->player_);
            v6 = BrickBreakerActivity::setBrickBreakerReady(v16, v17);
          }
          std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 128));
        }
        std::shared_ptr<Player>::~shared_ptr((std::shared_ptr<Player> *const)(v3 + 96));
      }
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
  }
  std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 32));
  result = v6;
  if ( v21 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 4495: range 000000001378ECEE-000000001378F350
int32_t __cdecl ActivityHandler::onBrickBreakerSetChangingReq(
        ActivityHandler *const this,
        const proto::BrickBreakerSetChangingReq *req,
        proto::BrickBreakerSetChangingRsp *rsp_0)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  uint32_t OwnerUid; // r14d
  BrickBreakerActivity *v9; // r15
  bool is_changing; // r14
  uint32_t Uid; // eax
  common::milog::MiLogStream *v12; // r14
  std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v13; // rax
  Player *v14; // rax
  common::milog::MiLogStream *v15; // r14
  std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v16; // rax
  BrickBreakerActivity *v17; // r15
  bool v18; // r14
  uint32_t v19; // eax
  int32_t result; // eax
  unsigned int val; // [rsp+2Ch] [rbp-F4h] BYREF
  common::milog::MiLogStream v22; // [rsp+30h] [rbp-F0h] BYREF
  char v23[208]; // [rsp+50h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v23;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 32 16 17 activity_ptr:4496 64 16 14 scene_ptr:4502 96 16 21 owner_player_ptr:4514 128 16 23 ow"
                        "ner_activity_ptr:4520";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBrickBreakerSetChangingReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -219021312;
  v5[536862722] = -219021312;
  v5[536862723] = -219021312;
  v5[536862724] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v22,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onBrickBreakerSetChangingReq",
      4499);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v22, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v22);
    v6 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    Player::getSceneComp(this->player_);
    PlayerSceneComp::getCurScene((const PlayerSceneComp *const)(v3 + 64));
    if ( std::operator==<Scene>((const std::shared_ptr<Scene> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v22,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onBrickBreakerSetChangingReq",
        4505);
      common::milog::MiLogStream::operator<<<char [22],(char *[22])0>(&v22, (const char (*)[22])"cur_scene_ptr is null");
      common::milog::MiLogStream::~MiLogStream(&v22);
      v6 = -1;
    }
    else
    {
      v7 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      OwnerUid = Scene::getOwnerUid(v7);
      if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
        __asan_report_load8();
      if ( OwnerUid == Player::getUid(this->player_) )
      {
        v9 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
        is_changing = proto::BrickBreakerSetChangingReq::is_changing(req);
        if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
          __asan_report_load8();
        Uid = Player::getUid(this->player_);
        v6 = BrickBreakerActivity::setBrickBreakerChanging(v9, Uid, is_changing);
      }
      else
      {
        std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        Scene::getOwnPlayer((const Scene *const)(v3 + 96));
        if ( std::operator==<Player>(0LL, (const std::shared_ptr<Player> *)(v3 + 96)) )
        {
          common::milog::MiLogStream::create(
            &v22,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/handler/activity_handler.cpp",
            "onBrickBreakerSetChangingReq",
            4517);
          v12 = common::milog::MiLogStream::operator<<<char [32],(char *[32])0>(
                  &v22,
                  (const char (*)[32])"getOwnPlayer failed, owner_uid:");
          v13 = std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Scene,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
          val = Scene::getOwnerUid(v13);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v12, &val);
          common::milog::MiLogStream::~MiLogStream(&v22);
          v6 = -1;
        }
        else
        {
          v14 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          Player::getActivityComp(v14);
          PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 128));
          if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 128)) )
          {
            common::milog::MiLogStream::create(
              &v22,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/handler/activity_handler.cpp",
              "onBrickBreakerSetChangingReq",
              4523);
            v15 = common::milog::MiLogStream::operator<<<char [31],(char *[31])0>(
                    &v22,
                    (const char (*)[31])"activity is not opening, uid: ");
            v16 = std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<Player,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
            val = Player::getUid(v16);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v15, &val);
            common::milog::MiLogStream::~MiLogStream(&v22);
            v6 = 860;
          }
          else
          {
            v17 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 128));
            v18 = proto::BrickBreakerSetChangingReq::is_changing(req);
            if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
              __asan_report_load8();
            v19 = Player::getUid(this->player_);
            v6 = BrickBreakerActivity::setBrickBreakerChanging(v17, v19, v18);
          }
          std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 128));
        }
        std::shared_ptr<Player>::~shared_ptr((std::shared_ptr<Player> *const)(v3 + 96));
      }
    }
    std::shared_ptr<Scene>::~shared_ptr((std::shared_ptr<Scene> *const)(v3 + 64));
  }
  std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 32));
  result = v6;
  if ( v23 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 4530: range 000000001378F352-000000001378F64C
int32_t __cdecl ActivityHandler::onSingleStartBrickBreakerReq(
        ActivityHandler *const this,
        const proto::SingleStartBrickBreakerReq *req,
        proto::SingleStartBrickBreakerRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  bool is_dungeon; // dl
  google::protobuf::uint32 v7; // edx
  int32_t started; // r14d
  PlayerSceneComp *SceneComp; // rax
  BrickBreakerActivity *v10; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v13; // [rsp+20h] [rbp-90h] BYREF
  char v14[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4533";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSingleStartBrickBreakerReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  is_dungeon = proto::SingleStartBrickBreakerReq::is_dungeon(req);
  proto::SingleStartBrickBreakerRsp::set_is_dungeon(rsp_0, is_dungeon);
  v7 = proto::SingleStartBrickBreakerReq::level_id(req);
  proto::SingleStartBrickBreakerRsp::set_level_id(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v13,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onSingleStartBrickBreakerReq",
      4536);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v13, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v13);
    started = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    SceneComp = Player::getSceneComp(this->player_);
    if ( !PlayerSceneComp::isInMyPlayerWorld(SceneComp) )
    {
      common::milog::MiLogStream::create(
        &v13,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onSingleStartBrickBreakerReq",
        4541);
      common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v13, (const char (*)[18])off_25052BE0);
      common::milog::MiLogStream::~MiLogStream(&v13);
      started = 512;
    }
    else
    {
      v10 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      started = BrickBreakerActivity::onSingleStartBrickBreakerReq(v10, req, rsp_0);
    }
  }
  std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 32));
  result = started;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4548: range 000000001378F64E-000000001378F8EF
int32_t __cdecl ActivityHandler::onBrickBreakerTwiceStartReq(
        ActivityHandler *const this,
        const proto::BrickBreakerTwiceStartReq *req,
        proto::BrickBreakerTwiceStartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  PlayerSceneComp *SceneComp; // rax
  BrickBreakerActivity *v8; // rax
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4549";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBrickBreakerTwiceStartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onBrickBreakerTwiceStartReq",
      4552);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v10, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    SceneComp = Player::getSceneComp(this->player_);
    if ( !PlayerSceneComp::isInMyPlayerWorld(SceneComp) )
    {
      common::milog::MiLogStream::create(
        &v10,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onBrickBreakerTwiceStartReq",
        4557);
      common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v10, (const char (*)[18])off_25052BE0);
      common::milog::MiLogStream::~MiLogStream(&v10);
      v6 = 512;
    }
    else
    {
      v8 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      v6 = BrickBreakerActivity::brickBreakerTwiceStart(v8);
    }
  }
  std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4564: range 000000001378F8F0-000000001378FBEA
int32_t __cdecl ActivityHandler::onSingleRestartBrickBreakerReq(
        ActivityHandler *const this,
        const proto::SingleRestartBrickBreakerReq *req,
        proto::SingleRestartBrickBreakerRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  bool is_dungeon; // dl
  google::protobuf::uint32 v7; // edx
  int32_t restarted; // r14d
  PlayerSceneComp *SceneComp; // rax
  BrickBreakerActivity *v10; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v13; // [rsp+20h] [rbp-90h] BYREF
  char v14[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v14;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4567";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onSingleRestartBrickBreakerReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  is_dungeon = proto::SingleRestartBrickBreakerReq::is_dungeon(req);
  proto::SingleRestartBrickBreakerRsp::set_is_dungeon(rsp_0, is_dungeon);
  v7 = proto::SingleRestartBrickBreakerReq::level_id(req);
  proto::SingleRestartBrickBreakerRsp::set_level_id(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v13,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onSingleRestartBrickBreakerReq",
      4570);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v13, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v13);
    restarted = 860;
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    SceneComp = Player::getSceneComp(this->player_);
    if ( !PlayerSceneComp::isInMyPlayerWorld(SceneComp) )
    {
      common::milog::MiLogStream::create(
        &v13,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/handler/activity_handler.cpp",
        "onSingleRestartBrickBreakerReq",
        4575);
      common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(&v13, (const char (*)[18])off_25052BE0);
      common::milog::MiLogStream::~MiLogStream(&v13);
      restarted = 512;
    }
    else
    {
      v10 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
      restarted = BrickBreakerActivity::onSingleRestartBrickBreakerReq(v10, req, rsp_0);
    }
  }
  std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 32));
  result = restarted;
  if ( v14 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4582: range 000000001378FBEC-000000001378FDD0
int32_t __cdecl ActivityHandler::onBrickBreakerQuitReq(
        ActivityHandler *const this,
        const proto::BrickBreakerQuitReq *req,
        proto::BrickBreakerQuitRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  BrickBreakerActivity *v7; // rax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4583";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onBrickBreakerQuitReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<BrickBreakerActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<BrickBreakerActivity>(0LL, (const std::shared_ptr<BrickBreakerActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onBrickBreakerQuitReq",
      4586);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v9, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<BrickBreakerActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = BrickBreakerActivity::brickBreakerQuit(v7);
  }
  std::shared_ptr<BrickBreakerActivity>::~shared_ptr((std::shared_ptr<BrickBreakerActivity> *const)(v3 + 32));
  result = v6;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4593: range 000000001378FDD2-0000000013790081
int32_t __cdecl ActivityHandler::onElectroherculesBattleSelectDifficultyReq(
        ActivityHandler *const this,
        const proto::ElectroherculesBattleSelectDifficultyReq *req,
        proto::ElectroherculesBattleSelectDifficultyRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r12
  google::protobuf::uint32 v6; // edx
  google::protobuf::uint32 v7; // edx
  int32_t v8; // r14d
  ElectroherculesBattleActivity *v9; // r14
  uint32_t v10; // r15d
  uint32_t v11; // eax
  int32_t result; // eax
  int ret; // [rsp+2Ch] [rbp-B4h]
  common::milog::MiLogStream v15; // [rsp+30h] [rbp-B0h] BYREF
  char v16[144]; // [rsp+50h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v16;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 15 gallery_id:4602 64 16 17 activity_ptr:4596";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onElectroherculesBattleSelectDifficultyReq;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  v6 = proto::ElectroherculesBattleSelectDifficultyReq::diffculty(req);
  proto::ElectroherculesBattleSelectDifficultyRsp::set_diffculty(rsp_0, v6);
  v7 = proto::ElectroherculesBattleSelectDifficultyReq::stage_id(req);
  proto::ElectroherculesBattleSelectDifficultyRsp::set_stage_id(rsp_0, v7);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<ElectroherculesBattleActivity>((PlayerActivityComp *const)(v3 + 64));
  if ( std::operator==<ElectroherculesBattleActivity>(
         0LL,
         (const std::shared_ptr<ElectroherculesBattleActivity> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v15,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onElectroherculesBattleSelectDifficultyReq",
      4599);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v15, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v15);
    v8 = 860;
  }
  else
  {
    v9 = std::__shared_ptr_access<ElectroherculesBattleActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<ElectroherculesBattleActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    v10 = proto::ElectroherculesBattleSelectDifficultyReq::diffculty(req);
    v11 = proto::ElectroherculesBattleSelectDifficultyReq::stage_id(req);
    ret = ElectroherculesBattleActivity::selectGalleryDifficulty(v9, v11, v10, (uint32_t *)(v3 + 48));
    if ( !ret )
      proto::ElectroherculesBattleSelectDifficultyRsp::set_gallery_id(rsp_0, *(_DWORD *)(v3 + 48));
    v8 = ret;
  }
  std::shared_ptr<ElectroherculesBattleActivity>::~shared_ptr((std::shared_ptr<ElectroherculesBattleActivity> *const)(v3 + 64));
  result = v8;
  if ( v16 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 4612: range 0000000013790082-000000001379027A
int32_t __cdecl ActivityHandler::onDuelHeartEnterDungeonReq(
        ActivityHandler *const this,
        const proto::DuelHeartEnterDungeonReq *req,
        proto::DuelHeartEnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // r14
  uint32_t v8; // eax
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4613";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onDuelHeartEnterDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<DuelHeartActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<DuelHeartActivity>(0LL, (const std::shared_ptr<DuelHeartActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onDuelHeartEnterDungeonReq",
      4616);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v10, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = proto::DuelHeartEnterDungeonReq::level_id(req);
    v6 = DuelHeartActivity::enterDuelHeartDungeon(v7, v8);
  }
  std::shared_ptr<DuelHeartActivity>::~shared_ptr((std::shared_ptr<DuelHeartActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4623: range 000000001379027C-0000000013790460
int32_t __cdecl ActivityHandler::onDuelHeartRestartDungeonReq(
        ActivityHandler *const this,
        const proto::DuelHeartRestartDungeonReq *req,
        proto::DuelHeartRestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4624";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onDuelHeartRestartDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<DuelHeartActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<DuelHeartActivity>(0LL, (const std::shared_ptr<DuelHeartActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onDuelHeartRestartDungeonReq",
      4627);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v9, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = DuelHeartActivity::restartDuelHeartDungeon(v7);
  }
  std::shared_ptr<DuelHeartActivity>::~shared_ptr((std::shared_ptr<DuelHeartActivity> *const)(v3 + 32));
  result = restarted;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4634: range 0000000013790462-000000001379065A
int32_t __cdecl ActivityHandler::onDuelHeartSelectDifficultyReq(
        ActivityHandler *const this,
        const proto::DuelHeartSelectDifficultyReq *req,
        proto::DuelHeartSelectDifficultyRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // r14
  uint32_t v8; // eax
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4635";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onDuelHeartSelectDifficultyReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<DuelHeartActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<DuelHeartActivity>(0LL, (const std::shared_ptr<DuelHeartActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onDuelHeartSelectDifficultyReq",
      4638);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v10, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = proto::DuelHeartSelectDifficultyReq::difficulty(req);
    v6 = DuelHeartActivity::selectDifficulty(v7, v8);
  }
  std::shared_ptr<DuelHeartActivity>::~shared_ptr((std::shared_ptr<DuelHeartActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4645: range 000000001379065C-0000000013790836
int32_t __cdecl ActivityHandler::onDuelHeartCgEndNotify(
        ActivityHandler *const this,
        const proto::DuelHeartCgEndNotify *notify)
{
  unsigned __int64 v2; // rbx
  __int64 v3; // rax
  unsigned __int64 v4; // r12
  int32_t v5; // r14d
  std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v6; // rax
  int32_t result; // eax
  common::milog::MiLogStream v8; // [rsp+10h] [rbp-90h] BYREF
  char v9[112]; // [rsp+30h] [rbp-70h] BYREF

  v2 = (unsigned __int64)v9;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v3 = __asan_stack_malloc_0(64LL);
    if ( v3 )
      v2 = v3;
  }
  *(_QWORD *)v2 = 1102416563LL;
  *(_QWORD *)(v2 + 8) = "1 32 16 17 activity_ptr:4646";
  *(_QWORD *)(v2 + 16) = ActivityHandler::onDuelHeartCgEndNotify;
  v4 = v2 >> 3;
  *(_DWORD *)(v4 + 2147450880) = -235802127;
  *(_DWORD *)(v4 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<DuelHeartActivity>((PlayerActivityComp *const)(v2 + 32));
  if ( std::operator==<DuelHeartActivity>(0LL, (const std::shared_ptr<DuelHeartActivity> *)(v2 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v8,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onDuelHeartCgEndNotify",
      4649);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v8, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v8);
    v5 = 860;
  }
  else
  {
    v6 = std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<DuelHeartActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v2 + 32));
    DuelHeartActivity::cgEnd(v6);
    v5 = 0;
  }
  std::shared_ptr<DuelHeartActivity>::~shared_ptr((std::shared_ptr<DuelHeartActivity> *const)(v2 + 32));
  result = v5;
  if ( v9 == (char *)v2 )
  {
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v2 = 1172321806LL;
    *(_QWORD *)((v2 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4657: range 0000000013790838-0000000013790A30
int32_t __cdecl ActivityHandler::onTeamChainEnterDungeonReq(
        ActivityHandler *const this,
        const proto::TeamChainEnterDungeonReq *req,
        proto::TeamChainEnterDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  TeamChainActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 28 team_chain_activity_ptr:4658";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTeamChainEnterDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<TeamChainActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<TeamChainActivity>(0LL, (const std::shared_ptr<TeamChainActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onTeamChainEnterDungeonReq",
      4661);
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
      &v10,
      (const char (*)[35])"team chain activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<TeamChainActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<TeamChainActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = TeamChainActivity::onEnterDungeonReq(v7, req, rsp_0);
  }
  std::shared_ptr<TeamChainActivity>::~shared_ptr((std::shared_ptr<TeamChainActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4668: range 0000000013790A32-0000000013790C2A
int32_t __cdecl ActivityHandler::onTeamChainRestartDungeonReq(
        ActivityHandler *const this,
        const proto::TeamChainRestartDungeonReq *req,
        proto::TeamChainRestartDungeonRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t restarted; // r14d
  TeamChainActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 28 team_chain_activity_ptr:4669";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTeamChainRestartDungeonReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<TeamChainActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<TeamChainActivity>(0LL, (const std::shared_ptr<TeamChainActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onTeamChainRestartDungeonReq",
      4672);
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
      &v10,
      (const char (*)[35])"team chain activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    restarted = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<TeamChainActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<TeamChainActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    restarted = TeamChainActivity::onRestartDungeonReq(v7, req, rsp_0);
  }
  std::shared_ptr<TeamChainActivity>::~shared_ptr((std::shared_ptr<TeamChainActivity> *const)(v3 + 32));
  result = restarted;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4679: range 0000000013790C2C-0000000013790E24
int32_t __cdecl ActivityHandler::onTeamChainTakeCostumeRewardReq(
        ActivityHandler *const this,
        const proto::TeamChainTakeCostumeRewardReq *req,
        proto::TeamChainTakeCostumeRewardRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  TeamChainActivity *v7; // rcx
  int32_t result; // eax
  common::milog::MiLogStream v10; // [rsp+20h] [rbp-90h] BYREF
  char v11[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 28 team_chain_activity_ptr:4680";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onTeamChainTakeCostumeRewardReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<TeamChainActivity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<TeamChainActivity>(0LL, (const std::shared_ptr<TeamChainActivity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v10,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onTeamChainTakeCostumeRewardReq",
      4683);
    common::milog::MiLogStream::operator<<<char [35],(char *[35])0>(
      &v10,
      (const char (*)[35])"team chain activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v10);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<TeamChainActivity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<TeamChainActivity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = TeamChainActivity::onTakeCostumeRewardReq(v7, req, rsp_0);
  }
  std::shared_ptr<TeamChainActivity>::~shared_ptr((std::shared_ptr<TeamChainActivity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4690: range 0000000013790E26-0000000013791112
int32_t __cdecl ActivityHandler::onLanV3BoatGameStartSingleReq(
        ActivityHandler *const this,
        const proto::LanV3BoatGameStartSingleReq *req,
        proto::LanV3BoatGameStartSingleRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t started; // r14d
  int32_t result; // eax
  std::__shared_ptr_access<SeaLampV3Activity,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v8; // [rsp+10h] [rbp-F0h]
  std::less<unsigned int> __comp; // [rsp+3Ah] [rbp-C6h] BYREF
  std::allocator<unsigned int> __a; // [rsp+3Bh] [rbp-C5h] BYREF
  std::initializer_list<unsigned int> __l; // [rsp+3Ch] [rbp-C4h] BYREF
  std::set<unsigned int> p_uid_set; // [rsp+60h] [rbp-A0h] BYREF
  char v13[112]; // [rsp+90h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v13;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 29 sea_lamp_v3_activity_ptr:4691";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLanV3BoatGameStartSingleReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SeaLampV3Activity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SeaLampV3Activity>(0LL, (const std::shared_ptr<SeaLampV3Activity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)((char *)&__l._M_array + 4),
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onLanV3BoatGameStartSingleReq",
      4694);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(
      (common::milog::MiLogStream *const)((char *)&__l._M_array + 4),
      (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)((char *)&__l._M_array + 4));
    started = 860;
  }
  else
  {
    v8 = std::__shared_ptr_access<SeaLampV3Activity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SeaLampV3Activity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
      __asan_report_load8();
    LODWORD(__l._M_array) = Player::getUid(this->player_);
    std::allocator<unsigned int>::allocator(&__a);
    std::set<unsigned int>::set(&p_uid_set, (std::initializer_list<unsigned int>)__PAIR128__(1LL, &__l), &__comp, &__a);
    started = SeaLampV3Activity::startLanV3BoatPlay(v8, &p_uid_set, 1, 0);
    std::set<unsigned int>::~set(&p_uid_set);
    std::allocator<unsigned int>::~allocator(&__a);
  }
  std::shared_ptr<SeaLampV3Activity>::~shared_ptr((std::shared_ptr<SeaLampV3Activity> *const)(v3 + 32));
  result = started;
  if ( v13 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4701: range 0000000013791114-00000000137912F8
int32_t __cdecl ActivityHandler::onLanV3BoatInterruptSettleStageReq(
        ActivityHandler *const this,
        const proto::LanV3BoatInterruptSettleStageReq *req,
        proto::LanV3BoatInterruptSettleStageRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  SeaLampV3Activity *v7; // rax
  int32_t result; // eax
  common::milog::MiLogStream v9; // [rsp+20h] [rbp-90h] BYREF
  char v10[112]; // [rsp+40h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v10;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 29 sea_lamp_v3_activity_ptr:4703";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLanV3BoatInterruptSettleStageReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SeaLampV3Activity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SeaLampV3Activity>(0LL, (const std::shared_ptr<SeaLampV3Activity> *)(v3 + 32)) )
  {
    common::milog::MiLogStream::create(
      &v9,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/handler/activity_handler.cpp",
      "onLanV3BoatInterruptSettleStageReq",
      4706);
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(&v9, (const char (*)[24])"activity is not opening");
    common::milog::MiLogStream::~MiLogStream(&v9);
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<SeaLampV3Activity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SeaLampV3Activity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = SeaLampV3Activity::lanV3BoatInterruptSettleStage(v7);
  }
  std::shared_ptr<SeaLampV3Activity>::~shared_ptr((std::shared_ptr<SeaLampV3Activity> *const)(v3 + 32));
  result = v6;
  if ( v10 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4713: range 00000000137912FA-000000001379149E
int32_t __cdecl ActivityHandler::onLanV3RaceRestartReq(
        ActivityHandler *const this,
        const proto::LanV3RaceRestartReq *req,
        proto::LanV3RaceRestartRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  SeaLampV3Activity *v7; // rax
  int32_t result; // eax
  uint32_t gallery_id; // [rsp+2Ch] [rbp-74h]
  char v11[112]; // [rsp+30h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4716";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLanV3RaceRestartReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  gallery_id = proto::LanV3RaceRestartReq::gallery_id(req);
  proto::LanV3RaceRestartRsp::set_gallery_id(rsp_0, gallery_id);
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SeaLampV3Activity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SeaLampV3Activity>(0LL, (const std::shared_ptr<SeaLampV3Activity> *)(v3 + 32)) )
  {
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<SeaLampV3Activity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SeaLampV3Activity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v6 = SeaLampV3Activity::raceRestart(v7, gallery_id);
  }
  std::shared_ptr<SeaLampV3Activity>::~shared_ptr((std::shared_ptr<SeaLampV3Activity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 4725: range 00000000137914A0-0000000013791635
int32_t __cdecl ActivityHandler::onLanV3ShadowFinishLevelReq(
        ActivityHandler *const this,
        const proto::LanV3ShadowFinishLevelReq *req,
        proto::LanV3ShadowFinishLevelRsp *rsp_0)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  int32_t v6; // r14d
  SeaLampV3Activity *v7; // r14
  uint32_t v8; // r15d
  uint32_t v9; // eax
  int32_t result; // eax
  char v11[112]; // [rsp+20h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v11;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 16 17 activity_ptr:4726";
  *(_QWORD *)(v3 + 16) = ActivityHandler::onLanV3ShadowFinishLevelReq;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)&this->player_ >> 3) + 0x7FFF8000) )
    __asan_report_load8();
  Player::getActivityComp(this->player_);
  PlayerActivityComp::findOpenningActivity<SeaLampV3Activity>((PlayerActivityComp *const)(v3 + 32));
  if ( std::operator==<SeaLampV3Activity>(0LL, (const std::shared_ptr<SeaLampV3Activity> *)(v3 + 32)) )
  {
    v6 = 860;
  }
  else
  {
    v7 = std::__shared_ptr_access<SeaLampV3Activity,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<SeaLampV3Activity,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 32));
    v8 = proto::LanV3ShadowFinishLevelReq::finish_time(req);
    v9 = proto::LanV3ShadowFinishLevelReq::level_id(req);
    v6 = SeaLampV3Activity::finishShadowLevel(v7, v9, v8);
  }
  std::shared_ptr<SeaLampV3Activity>::~shared_ptr((std::shared_ptr<SeaLampV3Activity> *const)(v3 + 32));
  result = v6;
  if ( v11 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};
